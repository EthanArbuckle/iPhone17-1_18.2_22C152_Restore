uint64_t sub_1D6E88590(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  v4 = sub_1D6FA05A0();
  v3[13] = v4;
  v5 = *(void *)(v4 - 8);
  v3[14] = v5;
  v3[15] = *(void *)(v5 + 64);
  v3[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E8865C, 0, 0);
}

uint64_t sub_1D6E8865C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = v0[16];
    uint64_t v3 = v0[13];
    uint64_t v4 = v0[14];
    uint64_t v5 = v0[11];
    sub_1D6754034(Strong + 104, (uint64_t)(v0 + 2));
    swift_release();
    v6 = __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v7 = *v6;
    uint64_t v8 = *(void *)(*v6 + 128);
    uint64_t v9 = *(void *)(*v6 + 136);
    __swift_project_boxed_opaque_existential_1((void *)(*v6 + 104), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
    unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v11 = swift_allocObject();
    v0[17] = v11;
    *(void *)(v11 + 16) = v7;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v10, v2, v3);
    v19 = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 24) + **(int **)(v9 + 24));
    swift_retain();
    v12 = (void *)swift_task_alloc();
    v0[18] = v12;
    uint64_t v13 = sub_1D6FA3830();
    v0[19] = v13;
    void *v12 = v0;
    v12[1] = sub_1D6E87EDC;
    uint64_t v14 = v0[10];
    return v19(v14, sub_1D6E8D994, v11, v13, v8, v9);
  }
  else
  {
    uint64_t v16 = v0[10];
    uint64_t v17 = sub_1D6FA3830();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    swift_task_dealloc();
    v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_1D6E88908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8892C, 0, 0);
}

uint64_t sub_1D6E8892C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 104, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FF5C4;
    uint64_t v3 = *(void *)(v0 + 88);
    return sub_1D69F4540(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E88A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = sub_1D6FA8C50();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E88B10, 0, 0);
}

uint64_t sub_1D6E88B10()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = v0[14];
    uint64_t v2 = v0[15];
    uint64_t v4 = v0[13];
    sub_1D6754034(Strong + 104, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    sub_1D6FA7FF0();
    sub_1D6FA8C30();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[16] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1D6E88CF4;
    uint64_t v6 = v0[11];
    return sub_1D69FA698(v6);
  }
  else
  {
    uint64_t v8 = v0[10];
    uint64_t v9 = sub_1D6FA0FE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    swift_task_dealloc();
    unint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1D6E88CF4()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6E88F18;
  }
  else {
    uint64_t v2 = sub_1D6E88E08;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E88E08()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = sub_1D6FA0FE0();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v1, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

uint64_t sub_1D6E88F18()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6E88F88(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  uint64_t v3 = sub_1D6FA0620();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_1D6FA0FE0();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E890A4, 0, 0);
}

uint64_t sub_1D6E890A4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 104, v0 + 16);
    swift_release();
    *(void *)(v0 + 144) = *__swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E891E0;
    uint64_t v3 = *(void *)(v0 + 136);
    return sub_1D69F1A18(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E891E0()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6E89520;
  }
  else {
    uint64_t v2 = sub_1D6E892F4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E892F4()
{
  sub_1D6FA0EF0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D6E89398;
  uint64_t v2 = *(void *)(v0 + 112);
  return sub_1D69FD928(v2);
}

uint64_t sub_1D6E89398(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[22] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[14];
  uint64_t v6 = v4[13];
  uint64_t v7 = v4[12];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = sub_1D6E8964C;
  }
  else
  {
    v4[23] = a1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = sub_1D6E895A4;
  }
  return MEMORY[0x1F4188298](v8, 0, 0);
}

uint64_t sub_1D6E89520()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6E895A4()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = (void *)v0[10];
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  *uint64_t v2 = v1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1D6E8964C()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D6E896EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E89710, 0, 0);
}

uint64_t sub_1D6E89710()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 104, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FF5C4;
    uint64_t v3 = *(void *)(v0 + 88);
    return sub_1D69FD928(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E89830(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E89850, 0, 0);
}

uint64_t sub_1D6E89850()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 104, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D678F2FC;
    uint64_t v3 = v0[10];
    return sub_1D69F9D38(v3);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1D6E89968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = sub_1D6FA0620();
  v3[13] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[14] = v5;
  v3[15] = *(void *)(v5 + 64);
  v3[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E89A34, 0, 0);
}

uint64_t sub_1D6E89A34()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = v0[16];
    uint64_t v3 = v0[13];
    uint64_t v4 = v0[14];
    uint64_t v5 = v0[11];
    sub_1D6754034(Strong + 104, (uint64_t)(v0 + 2));
    swift_release();
    uint64_t v6 = __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v7 = *v6;
    uint64_t v8 = *(void *)(*v6 + 128);
    uint64_t v9 = *(void *)(*v6 + 136);
    __swift_project_boxed_opaque_existential_1((void *)(*v6 + 104), v8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
    unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v11 = swift_allocObject();
    v0[17] = v11;
    *(void *)(v11 + 16) = v7;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 32))(v11 + v10, v2, v3);
    v19 = (uint64_t (*)(uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 24) + **(int **)(v9 + 24));
    swift_retain();
    v12 = (void *)swift_task_alloc();
    v0[18] = v12;
    uint64_t v13 = sub_1D6FA0FE0();
    v0[19] = v13;
    void *v12 = v0;
    v12[1] = sub_1D6E87EDC;
    uint64_t v14 = v0[10];
    return v19(v14, sub_1D6E8D93C, v11, v13, v8, v9);
  }
  else
  {
    uint64_t v16 = v0[10];
    uint64_t v17 = sub_1D6FA0FE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    swift_task_dealloc();
    v18 = (uint64_t (*)(void))v0[1];
    return v18();
  }
}

uint64_t sub_1D6E89CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E89D04, 0, 0);
}

uint64_t sub_1D6E89D04()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 104, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E84534;
    uint64_t v3 = v0[10];
    uint64_t v4 = v0[11];
    return sub_1D69F8938(v3, v4);
  }
  else
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = sub_1D6FA0FE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1D6E89E60(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E89E80, 0, 0);
}

uint64_t sub_1D6E89E80()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 104, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E89FDC;
    uint64_t v3 = v0[10];
    return sub_1D69F3670(v3);
  }
  else
  {
    uint64_t v5 = v0[10];
    uint64_t v6 = sub_1D6FA4670();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1D6E89FDC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D67955D0;
  }
  else {
    uint64_t v2 = sub_1D6E8A0F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E8A0F0()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = sub_1D6FA4670();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1D6E8A19C(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  uint64_t v3 = sub_1D6FA0620();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  uint64_t v4 = sub_1D6FA0FE0();
  v2[15] = v4;
  v2[16] = *(void *)(v4 - 8);
  v2[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E8A2B8, 0, 0);
}

uint64_t sub_1D6E8A2B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 104, v0 + 16);
    swift_release();
    *(void *)(v0 + 144) = *__swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E8A3F4;
    uint64_t v3 = *(void *)(v0 + 136);
    return sub_1D69F1A18(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E8A3F4()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6E8DC94;
  }
  else {
    uint64_t v2 = sub_1D6E8A508;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E8A508()
{
  sub_1D6FA0EF0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D6E8A5AC;
  uint64_t v2 = *(void *)(v0 + 112);
  return sub_1D69FD928(v2);
}

uint64_t sub_1D6E8A5AC(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[22] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[14];
  uint64_t v6 = v4[13];
  uint64_t v7 = v4[12];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = sub_1D6E8DCA0;
  }
  else
  {
    v4[23] = a1;
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = sub_1D6E8DCAC;
  }
  return MEMORY[0x1F4188298](v8, 0, 0);
}

uint64_t sub_1D6E8A734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8A758, 0, 0);
}

uint64_t sub_1D6E8A758()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 104, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E8A8B4;
    uint64_t v3 = v0[10];
    uint64_t v4 = v0[11];
    return sub_1D69F8058(v3, v4);
  }
  else
  {
    uint64_t v6 = v0[10];
    uint64_t v7 = sub_1D6FA4650();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1D6E8A8B4()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D67955CC;
  }
  else {
    uint64_t v2 = sub_1D6E8A9C8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E8A9C8()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = sub_1D6FA4650();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1D6E8AA74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  uint64_t v4 = sub_1D6FA8C50();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E8AB38, 0, 0);
}

uint64_t sub_1D6E8AB38()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = v0[14];
    uint64_t v2 = v0[15];
    uint64_t v4 = v0[13];
    sub_1D6754034(Strong + 104, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    sub_1D6FA7FF0();
    sub_1D6FA8C30();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
    uint64_t v5 = (void *)swift_task_alloc();
    v0[16] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1D6E8AD1C;
    uint64_t v6 = v0[11];
    return sub_1D69FA698(v6);
  }
  else
  {
    uint64_t v8 = v0[10];
    uint64_t v9 = sub_1D6FA0FE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1D6E8AD1C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6E8DCA4;
  }
  else {
    uint64_t v2 = sub_1D6E8DCA8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E8AE30(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E8AE50, 0, 0);
}

uint64_t sub_1D6E8AE50()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 104, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D678F2FC;
    uint64_t v3 = v0[10];
    return sub_1D69FE210(v3);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1D6E8AF68()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 104);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WorkoutPlanListener()
{
  return self;
}

uint64_t sub_1D6E8AFDC()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6E8B014(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E843D8, 0, 0);
}

uint64_t sub_1D6E8B0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8466C, 0, 0);
}

uint64_t sub_1D6E8B18C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E847EC, 0, 0);
}

uint64_t sub_1D6E8B248(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E847EC, 0, 0);
}

uint64_t sub_1D6E8B304(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8496C, 0, 0);
}

uint64_t sub_1D6E8B3C0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E84CA8, 0, 0);
}

uint64_t sub_1D6E8B46C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E84FE8, 0, 0);
}

uint64_t sub_1D6E8B528(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[14] = a1;
  v6[15] = v2;
  v6[16] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E85280, 0, 0);
}

unint64_t sub_1D6E8B5E8()
{
  unint64_t result = qword_1EBDAAEA0;
  if (!qword_1EBDAAEA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDAAE90);
    sub_1D6E8CF34(&qword_1EBDA8B28, MEMORY[0x1E4F9C2B8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAEA0);
  }
  return result;
}

uint64_t sub_1D6E8B68C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E856F0, 0, 0);
}

uint64_t sub_1D6E8B738(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E85828, 0, 0);
}

uint64_t sub_1D6E8B7E4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E85960, 0, 0);
}

uint64_t sub_1D6E8B890(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E85960, 0, 0);
}

uint64_t sub_1D6E8B93C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D67824A8;
  return sub_1D6E85A78(a1, a2, v2);
}

uint64_t sub_1D6E8B9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E86050, 0, 0);
}

uint64_t sub_1D6E8BAA4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E862E0, 0, 0);
}

uint64_t sub_1D6E8BB50(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8641C, 0, 0);
}

uint64_t sub_1D6E8BC0C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E86768, 0, 0);
}

uint64_t sub_1D6E8BCB8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E869F8, 0, 0);
}

unint64_t sub_1D6E8BD64()
{
  unint64_t result = qword_1EBDAAF00;
  if (!qword_1EBDAAF00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDAAEF0);
    sub_1D6E8CF34(&qword_1EBDA8CC0, MEMORY[0x1E4F9E268]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAF00);
  }
  return result;
}

uint64_t sub_1D6E8BE08(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E86B30, 0, 0);
}

uint64_t sub_1D6E8BEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  return sub_1D6E86C48(a1, a2, v2);
}

unint64_t sub_1D6E8BF60()
{
  unint64_t result = qword_1EBDAADB8;
  if (!qword_1EBDAADB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDA7C00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAADB8);
  }
  return result;
}

unint64_t sub_1D6E8BFCC()
{
  unint64_t result = qword_1EBDAADC0;
  if (!qword_1EBDAADC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDA7C00);
    sub_1D6E8CF34(&qword_1EBDA8CD0, MEMORY[0x1E4F9E628]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAADC0);
  }
  return result;
}

uint64_t sub_1D6E8C070(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E8713C, 0, 0);
}

unint64_t sub_1D6E8C11C()
{
  unint64_t result = qword_1EBDAAF40;
  if (!qword_1EBDAAF40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDA7CC0);
    sub_1D6E8CF34(&qword_1EBDA8CE8, MEMORY[0x1E4F9E790]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAF40);
  }
  return result;
}

uint64_t sub_1D6E8C1C0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E87274, 0, 0);
}

uint64_t sub_1D6E8C26C(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[10] = a1;
  v6[11] = v2;
  v6[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E87558, 0, 0);
}

unint64_t sub_1D6E8C32C()
{
  unint64_t result = qword_1EBDAAE50;
  if (!qword_1EBDAAE50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDA7C58);
    sub_1D6E8CF34(&qword_1EBDA8AF8, MEMORY[0x1E4F27990]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAE50);
  }
  return result;
}

unint64_t sub_1D6E8C3D0()
{
  unint64_t result = qword_1EBDAAF30;
  if (!qword_1EBDAAF30)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDA7CB8);
    sub_1D6E8CF34(&qword_1EBDA8CE0, MEMORY[0x1E4F9E688]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAF30);
  }
  return result;
}

uint64_t sub_1D6E8C474(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[10] = a1;
  v6[11] = v2;
  v6[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E876A0, 0, 0);
}

unint64_t sub_1D6E8C534()
{
  unint64_t result = qword_1EBDA7C88;
  if (!qword_1EBDA7C88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDA7C80);
    sub_1D6E8CF34(&qword_1EBDA8C38, MEMORY[0x1E4F9D5D0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDA7C88);
  }
  return result;
}

uint64_t sub_1D6E8C5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E877E4, 0, 0);
}

uint64_t sub_1D6E8C694(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E87A4C, 0, 0);
}

uint64_t sub_1D6E8C740(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  return sub_1D6E87B64(a1, a2, v2);
}

uint64_t sub_1D6E8C7EC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[11] = a1;
  v4[12] = v1;
  return MEMORY[0x1F4188298](sub_1D6E88018, 0, 0);
}

unint64_t sub_1D6E8C898()
{
  unint64_t result = qword_1EBDAAF10;
  if (!qword_1EBDAAF10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDA7CA8);
    sub_1D6E8CF34(&qword_1EBDA7810, MEMORY[0x1E4F9E400]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAF10);
  }
  return result;
}

uint64_t sub_1D6E8C93C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E88210, 0, 0);
}

uint64_t sub_1D6E8C9E8()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1D6786194;
  v2[10] = v0;
  return MEMORY[0x1F4188298](sub_1D6E88348, 0, 0);
}

uint64_t sub_1D6E8CA90(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E88478, 0, 0);
}

uint64_t sub_1D6E8CB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  return sub_1D6E88590(a1, a2, v2);
}

uint64_t sub_1D6E8CBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8892C, 0, 0);
}

unint64_t sub_1D6E8CCA4()
{
  unint64_t result = qword_1EBDA8A20;
  if (!qword_1EBDA8A20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDA7C90);
    sub_1D6E8CF34(&qword_1EBDA8788, MEMORY[0x1E4F9D800]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDA8A20);
  }
  return result;
}

uint64_t sub_1D6E8CD48(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  return sub_1D6E88A4C(a1, a2, v2);
}

uint64_t sub_1D6E8CDF4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  return sub_1D6E88F88(a1, v1);
}

unint64_t sub_1D6E8CE90()
{
  unint64_t result = qword_1EBDAAF20;
  if (!qword_1EBDAAF20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDA7CB0);
    sub_1D6E8CF34(&qword_1EBDA8CD8, MEMORY[0x1E4F9E658]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAF20);
  }
  return result;
}

uint64_t sub_1D6E8CF34(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6E8CF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E89710, 0, 0);
}

uint64_t sub_1D6E8D038(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E89850, 0, 0);
}

uint64_t sub_1D6E8D0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8466C, 0, 0);
}

uint64_t sub_1D6E8D1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  return sub_1D6E89968(a1, a2, v2);
}

uint64_t sub_1D6E8D24C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E89D04, 0, 0);
}

uint64_t sub_1D6E8D308(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E89E80, 0, 0);
}

uint64_t sub_1D6E8D3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E89D04, 0, 0);
}

uint64_t sub_1D6E8D470(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E88478, 0, 0);
}

uint64_t sub_1D6E8D51C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  return sub_1D6E8A19C(a1, v1);
}

uint64_t sub_1D6E8D5B8(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E86B30, 0, 0);
}

uint64_t sub_1D6E8D664(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E85960, 0, 0);
}

uint64_t sub_1D6E8D710(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8A758, 0, 0);
}

uint64_t sub_1D6E8D7CC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  return sub_1D6E8AA74(a1, a2, v2);
}

uint64_t sub_1D6E8D878(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E8AE50, 0, 0);
}

uint64_t sub_1D6E8D924()
{
  return objectdestroy_121Tm(MEMORY[0x1E4F27990]);
}

uint64_t sub_1D6E8D93C(uint64_t a1)
{
  return sub_1D6E8DBB0(a1, MEMORY[0x1E4F27990], (uint64_t (*)(uint64_t, void, unint64_t))sub_1D69FB7A8);
}

uint64_t sub_1D6E8D97C()
{
  return objectdestroy_121Tm(MEMORY[0x1E4F27928]);
}

uint64_t sub_1D6E8D994(uint64_t a1)
{
  return sub_1D6E8DBB0(a1, MEMORY[0x1E4F27928], (uint64_t (*)(uint64_t, void, unint64_t))sub_1D6A02C68);
}

uint64_t sub_1D6E8D9D4()
{
  return objectdestroy_121Tm(MEMORY[0x1E4F9EC78]);
}

uint64_t sub_1D6E8D9EC(uint64_t a1)
{
  return sub_1D6E8DBB0(a1, MEMORY[0x1E4F9EC78], (uint64_t (*)(uint64_t, void, unint64_t))sub_1D6A03EA0);
}

uint64_t sub_1D6E8DA2C()
{
  return objectdestroy_121Tm(MEMORY[0x1E4F27928]);
}

uint64_t sub_1D6E8DA44@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1D6FA05A0() - 8);
  return sub_1D69F5460(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1D6E8DAC4()
{
  return objectdestroy_121Tm(MEMORY[0x1E4F27990]);
}

uint64_t objectdestroy_121Tm(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return MEMORY[0x1F4186498](v1, v6, v7);
}

uint64_t sub_1D6E8DBB0(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, void, unint64_t))
{
  uint64_t v6 = *(void *)(a2(0) - 8);
  return a3(a1, *(void *)(v3 + 16), v3 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

uint64_t sub_1D6E8DC3C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 33, 7);
}

uint64_t sub_1D6E8DC74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D69FBA88(a1, *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), a2);
}

uint64_t sub_1D6E8DCB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4F9EEE8];
  uint64_t v3 = sub_1D6FA6A10();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1D6E8DD2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D6FA39E0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D6E8DD54(uint64_t a1)
{
  *(void *)(a1 + 24) = sub_1D6E8DDBC(&qword_1EBD9FA98);
  uint64_t result = sub_1D6E8DDBC(&qword_1EBD9FAA0);
  *(void *)(a1 + 32) = result;
  return result;
}

uint64_t sub_1D6E8DDBC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D6FA3A00();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6E8DE00()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D6FA70D0();
  uint64_t v79 = v2;
  uint64_t v83 = *(void *)(v2 - 8);
  uint64_t v3 = v83;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D6FA8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA80E0();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[4];
  v80 = v1;
  uint64_t v81 = v11;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v85 = v10;
  uint64_t v12 = *MEMORY[0x1E4F9B040];
  v84 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  uint64_t v78 = v3 + 104;
  v84(v5, v12, v2);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA64D0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA64B8);
  uint64_t v69 = sub_1D678FC30((unint64_t *)&qword_1EBDA64D8, &qword_1EBDA64D0);
  uint64_t v68 = sub_1D6E9153C((unint64_t *)&qword_1EBDA64E0, &qword_1EBDA64D0, (void (*)(void))sub_1D678F680);
  uint64_t v75 = sub_1D678FC30(&qword_1EBDA64C0, &qword_1EBDA64B8);
  unint64_t v73 = sub_1D6DE697C();
  uint64_t v74 = v13;
  sub_1D6FA7690();
  swift_release();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v83 + 8);
  v83 += 8;
  uint64_t v15 = v79;
  v14(v5, v79);
  v82 = v14;
  swift_unknownObjectRelease();
  uint64_t v85 = v10;
  uint64_t v16 = v84;
  v84(v5, *MEMORY[0x1E4F9AED8], v15);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76A0();
  swift_release();
  uint64_t v17 = v79;
  v14(v5, v79);
  swift_unknownObjectRelease();
  uint64_t v85 = v10;
  v16(v5, *MEMORY[0x1E4F9B2E0], v17);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA63E0);
  uint64_t v64 = sub_1D678FC30(&qword_1EBDA63E8, &qword_1EBDA63E0);
  uint64_t v66 = sub_1D6E9153C((unint64_t *)&unk_1EBDA63F0, &qword_1EBDA63E0, (void (*)(void))sub_1D6920E44);
  sub_1D6FA7690();
  swift_release();
  uint64_t v18 = v79;
  v82(v5, v79);
  swift_unknownObjectRelease();
  uint64_t v76 = v10;
  uint64_t v85 = v10;
  v84(v5, *MEMORY[0x1E4F9B480], v18);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA7738);
  uint64_t v71 = sub_1D678FC30(&qword_1EBDA8A08, &qword_1EBDA7738);
  uint64_t v67 = sub_1D6E9153C(&qword_1EBDA8A10, &qword_1EBDA7738, (void (*)(void))sub_1D6E91674);
  sub_1D6FA7690();
  swift_release();
  uint64_t v19 = v79;
  uint64_t v20 = v82;
  v82(v5, v79);
  swift_unknownObjectRelease();
  uint64_t v85 = v76;
  uint64_t v21 = v19;
  v84(v5, *MEMORY[0x1E4F9B478], v19);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7690();
  swift_release();
  v20(v5, v19);
  swift_unknownObjectRelease();
  uint64_t v85 = v76;
  v22 = v84;
  v84(v5, *MEMORY[0x1E4F9AE58], v19);
  swift_allocObject();
  swift_weakInit();
  uint64_t v66 = sub_1D6FA1AC0();
  swift_unknownObjectRetain();
  sub_1D6FA7690();
  swift_release();
  v23 = v82;
  v82(v5, v19);
  swift_unknownObjectRelease();
  uint64_t v24 = v76;
  uint64_t v85 = v76;
  v22(v5, *MEMORY[0x1E4F9B2D8], v21);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7690();
  swift_release();
  v25 = v23;
  v23(v5, v21);
  swift_unknownObjectRelease();
  uint64_t v26 = v24;
  uint64_t v85 = v24;
  uint64_t v27 = v21;
  v28 = (void (*)(char *))v84;
  v84(v5, *MEMORY[0x1E4F9B5C8], v27);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7690();
  swift_release();
  uint64_t v29 = v79;
  v25(v5, v79);
  swift_unknownObjectRelease();
  uint64_t v85 = v26;
  LODWORD(v67) = *MEMORY[0x1E4F9AE68];
  v28(v5);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76B0();
  swift_release();
  v82(v5, v29);
  swift_unknownObjectRelease();
  uint64_t v85 = v26;
  LODWORD(v66) = *MEMORY[0x1E4F9AE78];
  ((void (*)(char *))v84)(v5);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76B0();
  swift_release();
  v62 = v5;
  v82(v5, v29);
  swift_unknownObjectRelease();
  uint64_t v85 = v76;
  LODWORD(v65) = *MEMORY[0x1E4F9AE20];
  v30 = v84;
  ((void (*)(char *))v84)(v5);
  swift_allocObject();
  swift_weakInit();
  uint64_t v72 = sub_1D6FA69C0();
  swift_unknownObjectRetain();
  v31 = v62;
  sub_1D6FA76B0();
  swift_release();
  v32 = v82;
  v82(v31, v29);
  swift_unknownObjectRelease();
  uint64_t v33 = v76;
  uint64_t v85 = v76;
  v30(v31, *MEMORY[0x1E4F9AEE8], v29);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAAF50);
  uint64_t v34 = sub_1D678FC30(&qword_1EBDAAF58, &qword_1EBDAAF50);
  unint64_t v35 = sub_1D6E91C78();
  uint64_t v63 = v34;
  uint64_t v64 = v35;
  sub_1D6FA76A0();
  swift_release();
  uint64_t v36 = v79;
  v32(v31, v79);
  swift_unknownObjectRelease();
  uint64_t v85 = v33;
  v37 = v84;
  v84(v31, *MEMORY[0x1E4F9AE60], v36);
  swift_allocObject();
  swift_weakInit();
  sub_1D6FA1CC0();
  swift_unknownObjectRetain();
  sub_1D6FA7690();
  swift_release();
  uint64_t v38 = v36;
  uint64_t v39 = v36;
  v40 = v82;
  v82(v31, v39);
  swift_unknownObjectRelease();
  uint64_t v41 = v76;
  uint64_t v85 = v76;
  v37(v31, *MEMORY[0x1E4F9B2F0], v38);
  swift_allocObject();
  swift_weakInit();
  uint64_t v42 = v41;
  swift_unknownObjectRetain();
  sub_1D6FA7690();
  swift_release();
  uint64_t v43 = v79;
  v40(v31, v79);
  swift_unknownObjectRelease();
  uint64_t v85 = v42;
  v44 = v84;
  v84(v31, *MEMORY[0x1E4F9AF48], v43);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76A0();
  swift_release();
  uint64_t v45 = v79;
  v46 = v82;
  v82(v31, v79);
  swift_unknownObjectRelease();
  uint64_t v85 = v42;
  v44(v31, *MEMORY[0x1E4F9ADF8], v45);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7690();
  swift_release();
  v46(v31, v45);
  swift_unknownObjectRelease();
  uint64_t v47 = v76;
  uint64_t v85 = v76;
  v48 = (void (*)(char *))v84;
  v84(v31, *MEMORY[0x1E4F9AE28], v45);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7690();
  swift_release();
  uint64_t v49 = v79;
  v50 = v82;
  v82(v31, v79);
  swift_unknownObjectRelease();
  uint64_t v85 = v47;
  LODWORD(v71) = *MEMORY[0x1E4F9AE08];
  v48(v31);
  swift_allocObject();
  v51 = v80;
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76B0();
  swift_release();
  uint64_t v52 = v49;
  v50(v31, v49);
  swift_unknownObjectRelease();
  __swift_project_boxed_opaque_existential_1(v51 + 5, v51[8]);
  uint64_t v53 = swift_allocObject();
  swift_weakInit();
  sub_1D6CB82E0(26, (uint64_t)&unk_1EA8070D8, v53);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v51 + 5, v51[8]);
  uint64_t v54 = swift_allocObject();
  swift_weakInit();
  sub_1D6CBFAF0(49, (uint64_t)&unk_1EA8070E8, v54);
  swift_release();
  uint64_t v55 = v51[15];
  uint64_t v81 = v51[17];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v85 = v55;
  v56 = v84;
  v84(v31, v67, v52);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76B0();
  swift_release();
  uint64_t v57 = v79;
  v82(v31, v79);
  swift_unknownObjectRelease();
  uint64_t v85 = v55;
  v56(v31, v66, v57);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76B0();
  swift_release();
  v58 = v82;
  v82(v31, v57);
  swift_unknownObjectRelease();
  uint64_t v85 = v55;
  v84(v31, v65, v57);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76B0();
  swift_release();
  uint64_t v59 = v79;
  v58(v31, v79);
  swift_unknownObjectRelease();
  uint64_t v85 = v55;
  v84(v31, v71, v59);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76B0();
  swift_release();
  v58(v31, v59);
  return swift_unknownObjectRelease();
}

uint64_t sub_1D6E8F4C0(uint64_t a1, void *a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E8F4E8, 0, 0);
}

uint64_t sub_1D6E8F4E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FF5C4;
    uint64_t v3 = *(void *)(v0 + 96);
    return sub_1D6AA49A0(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E8F608(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E8F628, 0, 0);
}

uint64_t sub_1D6E8F628()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FDE44;
    return sub_1D6AA42B8();
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1D6E8F740(uint64_t a1, void *a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E8F768, 0, 0);
}

uint64_t sub_1D6E8F768()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FF5C4;
    uint64_t v3 = *(void *)(v0 + 96);
    return sub_1D6AA4D64(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E8F888(uint64_t a1, void *a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E8F8B0, 0, 0);
}

uint64_t sub_1D6E8F8B0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FF5C4;
    uint64_t v3 = *(void *)(v0 + 96);
    return sub_1D6AA5074(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E8F9D0(uint64_t a1, void *a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E8F9F8, 0, 0);
}

uint64_t sub_1D6E8F9F8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E8FB20;
    uint64_t v3 = v0[12];
    return sub_1D6AA5704(v3);
  }
  else
  {
    uint64_t v5 = v0[10];
    *(void *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 8) = 1;
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1D6E8FB20(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1D67955CC;
  }
  else
  {
    *(void *)(v4 + 120) = a1;
    uint64_t v5 = sub_1D6E925D8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D6E8FC48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8FC6C, 0, 0);
}

uint64_t sub_1D6E8FC6C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FF2E4;
    uint64_t v3 = *(void *)(v0 + 88);
    return sub_1D6AA452C(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E8FD8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8FDB0, 0, 0);
}

uint64_t sub_1D6E8FDB0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E8FED8;
    uint64_t v3 = v0[11];
    return sub_1D6AA5A9C(v3);
  }
  else
  {
    uint64_t v5 = v0[10];
    *(void *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 8) = 1;
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1D6E8FED8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 112) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1D67955CC;
  }
  else
  {
    *(void *)(v4 + 120) = a1;
    uint64_t v5 = sub_1D6E90000;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D6E90000()
{
  uint64_t v1 = v0[10];
  *(void *)uint64_t v1 = v0[15];
  *(unsigned char *)(v1 + 8) = 0;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1D6E90074(uint64_t a1, void *a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E9009C, 0, 0);
}

uint64_t sub_1D6E9009C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E8FB20;
    uint64_t v3 = v0[12];
    return sub_1D6AA5E38(v3);
  }
  else
  {
    uint64_t v5 = v0[10];
    *(void *)uint64_t v5 = 0;
    *(unsigned char *)(v5 + 8) = 1;
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1D6E901C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 80) = a2;
  *(void *)(v2 + 88) = v3;
  return MEMORY[0x1F4188298](sub_1D6E901E8, 0, 0);
}

uint64_t sub_1D6E901E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D678F2FC;
    uint64_t v3 = v0[11];
    return sub_1D6AA64B0(v3);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1D6E90300(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 80) = a2;
  *(void *)(v2 + 88) = v3;
  return MEMORY[0x1F4188298](sub_1D6E90324, 0, 0);
}

uint64_t sub_1D6E90324()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D678F2FC;
    uint64_t v3 = v0[11];
    return sub_1D6AA706C(v3);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1D6E9043C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E9045C, 0, 0);
}

uint64_t sub_1D6E9045C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D678F2FC;
    uint64_t v3 = v0[10];
    return sub_1D6AA8BB8(v3);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1D6E90574(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E90594, 0, 0);
}

uint64_t sub_1D6E90594()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FD100;
    return sub_1D6AA789C();
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1D6E906AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E906D0, 0, 0);
}

uint64_t sub_1D6E906D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FF5C4;
    uint64_t v3 = *(void *)(v0 + 88);
    return sub_1D6AA7B10(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E907F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[11] = a2;
  v3[12] = a3;
  v3[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E90814, 0, 0);
}

uint64_t sub_1D6E90814()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E8FB20;
    return sub_1D6AA80D4();
  }
  else
  {
    uint64_t v4 = v0[10];
    *(void *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 8) = 1;
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1D6E9093C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E9095C, 0, 0);
}

uint64_t sub_1D6E9095C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E87394;
    return sub_1D6AA7E68();
  }
  else
  {
    uint64_t v4 = v0[10];
    *(void *)uint64_t v4 = 0;
    *(unsigned char *)(v4 + 8) = 1;
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1D6E90A7C(uint64_t a1, void *a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  uint64_t v4 = a2[1];
  v3[12] = *a2;
  v3[13] = v4;
  return MEMORY[0x1F4188298](sub_1D6E90AA4, 0, 0);
}

uint64_t sub_1D6E90AA4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[14] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D6E90C04;
    uint64_t v3 = v0[12];
    uint64_t v4 = v0[13];
    uint64_t v5 = v0[10];
    return sub_1D6AA8340(v5, v3, v4);
  }
  else
  {
    uint64_t v7 = v0[10];
    uint64_t v8 = sub_1D6FA69C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
}

uint64_t sub_1D6E90C04()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D67FE2D0;
  }
  else {
    uint64_t v2 = sub_1D6E90D18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E90D18()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = sub_1D6FA69C0();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 0, 1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1D6E90DC4(uint64_t a1, void *a2, uint64_t a3)
{
  v3[10] = a1;
  v3[11] = a3;
  v3[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E90DEC, 0, 0);
}

uint64_t sub_1D6E90DEC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FF5C4;
    uint64_t v3 = *(void *)(v0 + 96);
    return sub_1D6AA85DC(v3);
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1D6E90F0C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E90F2C, 0, 0);
}

uint64_t sub_1D6E90F2C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D678EE68;
    uint64_t v3 = v0[10];
    return sub_1D6AA94B8(v3);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_1D6E91044(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E91064, 0, 0);
}

uint64_t sub_1D6E91064()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FD100;
    return sub_1D6AA42B8();
  }
  else
  {
    **(void **)(v0 + 80) = 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1D6E9117C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6E9119C, 0, 0);
}

uint64_t sub_1D6E9119C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 80, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D678F2FC;
    uint64_t v3 = v0[10];
    return sub_1D6AA94B8(v3);
  }
  else
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t type metadata accessor for BookmarkListener()
{
  return self;
}

uint64_t sub_1D6E912D8()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6E91310(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[10] = a1;
  v6[11] = v2;
  v6[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E8F4E8, 0, 0);
}

uint64_t sub_1D6E913D0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E8F628, 0, 0);
}

uint64_t sub_1D6E9147C(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[10] = a1;
  v6[11] = v2;
  v6[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E8F768, 0, 0);
}

uint64_t sub_1D6E9153C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6E915B4(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[10] = a1;
  v6[11] = v2;
  v6[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E8F8B0, 0, 0);
}

unint64_t sub_1D6E91674()
{
  unint64_t result = qword_1EBDA8780;
  if (!qword_1EBDA8780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDA8780);
  }
  return result;
}

uint64_t sub_1D6E916C8(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[10] = a1;
  v6[11] = v2;
  v6[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E8F9F8, 0, 0);
}

uint64_t sub_1D6E91788(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8FC6C, 0, 0);
}

uint64_t sub_1D6E91844(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E8FDB0, 0, 0);
}

uint64_t sub_1D6E91900(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[10] = a1;
  v6[11] = v2;
  v6[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E9009C, 0, 0);
}

uint64_t sub_1D6E919C0(uint64_t *a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  uint64_t v5 = *a1;
  v4[10] = v1;
  v4[11] = v5;
  return MEMORY[0x1F4188298](sub_1D6E901E8, 0, 0);
}

uint64_t sub_1D6E91A70(uint64_t *a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  uint64_t v5 = *a1;
  v4[10] = v1;
  v4[11] = v5;
  return MEMORY[0x1F4188298](sub_1D6E90324, 0, 0);
}

uint64_t sub_1D6E91B20(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E9045C, 0, 0);
}

uint64_t sub_1D6E91BCC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E90594, 0, 0);
}

unint64_t sub_1D6E91C78()
{
  unint64_t result = qword_1EBDAAF60;
  if (!qword_1EBDAAF60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDAAF50);
    sub_1D6E91D1C(&qword_1EBDA8EE8, MEMORY[0x1E4F9EED0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAF60);
  }
  return result;
}

uint64_t sub_1D6E91D1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6E91D64(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E906D0, 0, 0);
}

uint64_t sub_1D6E91E20(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[11] = a2;
  v6[12] = v2;
  v6[10] = a1;
  return MEMORY[0x1F4188298](sub_1D6E90814, 0, 0);
}

uint64_t sub_1D6E91EDC(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E9095C, 0, 0);
}

uint64_t sub_1D6E91F88(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D67824A8;
  v6[10] = a1;
  v6[11] = v2;
  uint64_t v7 = a2[1];
  v6[12] = *a2;
  v6[13] = v7;
  return MEMORY[0x1F4188298](sub_1D6E90AA4, 0, 0);
}

uint64_t sub_1D6E92048(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[10] = a1;
  v6[11] = v2;
  v6[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E90DEC, 0, 0);
}

uint64_t sub_1D6E92108(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E90F2C, 0, 0);
}

uint64_t sub_1D6E921B4(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E91064, 0, 0);
}

uint64_t sub_1D6E92260(uint64_t a1, void *a2)
{
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  void *v6 = v3;
  v6[1] = sub_1D6786194;
  v6[10] = a1;
  v6[11] = v2;
  v6[12] = *a2;
  return MEMORY[0x1F4188298](sub_1D6E90DEC, 0, 0);
}

uint64_t sub_1D6E92320(uint64_t *a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  uint64_t v5 = *a1;
  v4[10] = v1;
  v4[11] = v5;
  return MEMORY[0x1F4188298](sub_1D6E901E8, 0, 0);
}

uint64_t sub_1D6E923D0(uint64_t *a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  uint64_t v5 = *a1;
  v4[10] = v1;
  v4[11] = v5;
  return MEMORY[0x1F4188298](sub_1D6E90324, 0, 0);
}

uint64_t sub_1D6E92480(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E9045C, 0, 0);
}

uint64_t sub_1D6E9252C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D6786194;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6E9119C, 0, 0);
}

uint64_t sub_1D6E925DC(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1D6E92634(a1, a2, a3, MEMORY[0x1E4F9C110]);
}

uint64_t sub_1D6E92608(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1D6E92634(a1, a2, a3, MEMORY[0x1E4F9E330]);
}

uint64_t sub_1D6E92634(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  v30 = a1;
  uint64_t v6 = a4(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v25 - v11;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v26 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v29 = v7 + 16;
  int64_t v27 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v28 = v7 + 32;
  uint64_t v17 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v31 = a3;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  if (!v16) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (unint64_t i = v20 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v23)) + (v19 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v12, *(void *)(v31 + 48) + *(void *)(v7 + 72) * i, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    v30(v10);
    if (v4)
    {
      (*v17)(v10, v6);
      return swift_release();
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v17)(v10, v6);
    if (v16) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v19++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v19);
    if (!v23) {
      break;
    }
LABEL_17:
    unint64_t v16 = (v23 - 1) & v23;
  }
  int64_t v24 = v19 + 1;
  if (v19 + 1 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v19 + 2;
  if (v19 + 2 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v19 + 3;
  if (v19 + 3 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23) {
    goto LABEL_16;
  }
  int64_t v24 = v19 + 4;
  if (v19 + 4 >= v27) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
LABEL_16:
    int64_t v19 = v24;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v27) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t ScoreServer.__allocating_init(endpoint:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v6 = sub_1D6E9557C(v5, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

uint64_t ScoreServer.init(endpoint:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = __swift_mutable_project_boxed_opaque_existential_1(a1, v3);
  double v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v9 + 16))(v8, v6);
  uint64_t v10 = sub_1D6E95410((uint64_t)v8, v1, v3, v4);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v10;
}

uint64_t ScoreServer.deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC15SeymourServices11ScoreServer__dumpScoresToFile;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ScoreServer.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  uint64_t v1 = v0 + OBJC_IVAR____TtC15SeymourServices11ScoreServer__dumpScoresToFile;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t ScoreServer.executeScoresTasks()()
{
  v1[2] = v0;
  uint64_t v2 = sub_1D6FA8C50();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = sub_1D6FA89B0();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E92CA4, 0, 0);
}

uint64_t sub_1D6E92CA4()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[10] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D6E92DB0;
  uint64_t v5 = v0[9];
  return v7(v5, v2, v3);
}

uint64_t sub_1D6E92DB0()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6E930AC;
  }
  else {
    uint64_t v2 = sub_1D6E92EC4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E92EC4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  sub_1D6FA8090();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  uint64_t v5 = sub_1D6FA8C40();
  os_log_type_t v6 = sub_1D6FAA180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v8 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v16 = *(void *)(v0 + 48);
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 67240192;
    int v10 = sub_1D6FA89A0();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v11(v7, v16);
    *(_DWORD *)(v0 + 96) = v10;
    sub_1D6FAA4A0();
    _os_log_impl(&dword_1D6748000, v5, v6, "Executed %{public}d tasks", v9, 8u);
    MEMORY[0x1D9468AD0](v9, -1, -1);
  }
  else
  {
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 56) + 8);
    v11(*(void *)(v0 + 64), *(void *)(v0 + 48));
  }

  uint64_t v12 = *(void *)(v0 + 72);
  uint64_t v13 = *(void *)(v0 + 48);
  (*(void (**)(void, void))(*(void *)(v0 + 32) + 8))(*(void *)(v0 + 40), *(void *)(v0 + 24));
  v11(v12, v13);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_1D6E930AC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ScoreServer.fetchScores(request:)(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  sub_1D6FA4400();
  v3[10] = swift_task_alloc();
  uint64_t v4 = sub_1D6FA4EE0();
  v3[11] = v4;
  v3[12] = *(void *)(v4 - 8);
  v3[13] = swift_task_alloc();
  uint64_t v5 = sub_1D6FA8900();
  v3[14] = v5;
  v3[15] = *(void *)(v5 - 8);
  v3[16] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E93270, 0, 0);
}

uint64_t sub_1D6E93270()
{
  sub_1D6754034(v0[9] + 16, (uint64_t)(v0 + 2));
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v1);
  sub_1D6FA2F10();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 16) + **(int **)(v2 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[17] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1D6E93420;
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[13];
  return v7(v4, v5, v1, v2);
}

uint64_t sub_1D6E93420()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[12] + 8))(v2[13], v2[11]);
  if (v0) {
    uint64_t v3 = sub_1D6E936A4;
  }
  else {
    uint64_t v3 = sub_1D6E93588;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D6E93588()
{
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  sub_1D6FA88F0();
  sub_1D6FA1FC0();
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D6E936A4()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t ScoreServer.submitScores(scores:)(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  uint64_t v3 = sub_1D6FA89F0();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  uint64_t v4 = sub_1D6FA8920();
  v2[23] = v4;
  v2[24] = *(void *)(v4 - 8);
  v2[25] = swift_task_alloc();
  uint64_t v5 = sub_1D6FA02E0();
  v2[26] = v5;
  v2[27] = *(void *)(v5 - 8);
  v2[28] = swift_task_alloc();
  v2[29] = swift_task_alloc();
  uint64_t v6 = sub_1D6FA8C50();
  v2[30] = v6;
  v2[31] = *(void *)(v6 - 8);
  v2[32] = swift_task_alloc();
  v2[33] = swift_task_alloc();
  v2[34] = swift_task_alloc();
  v2[35] = swift_task_alloc();
  v2[36] = swift_task_alloc();
  v2[37] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  v2[38] = v7;
  v2[39] = *(void *)(v7 - 8);
  v2[40] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E939FC, 0, 0);
}

uint64_t sub_1D6E939FC()
{
  uint64_t v66 = v0;
  v65[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(void *)(v0 + 128);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = (void *)(v0 + 96);
    uint64_t v3 = *(void *)(v0 + 312);
    uint64_t v4 = *(void *)(v0 + 320);
    uint64_t v5 = *(void *)(v0 + 304);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v4, *(void *)(v0 + 136) + OBJC_IVAR____TtC15SeymourServices11ScoreServer__dumpScoresToFile, v5);
    sub_1D6FA6CA0();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
    if (*(unsigned char *)(v0 + 360) == 1)
    {
      sub_1D6FA8090();
      uint64_t v6 = sub_1D6FA8C40();
      os_log_type_t v7 = sub_1D6FAA180();
      if (os_log_type_enabled(v6, v7))
      {
        uint64_t v8 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v8 = 0;
        _os_log_impl(&dword_1D6748000, v6, v7, "Writing scores to file due to user default.", v8, 2u);
        MEMORY[0x1D9468AD0](v8, -1, -1);
      }
      uint64_t v9 = *(void *)(v0 + 296);
      uint64_t v11 = *(void *)(v0 + 240);
      uint64_t v10 = *(void *)(v0 + 248);
      uint64_t v12 = *(void *)(v0 + 224);
      uint64_t v14 = *(void *)(v0 + 208);
      uint64_t v13 = *(void *)(v0 + 216);

      uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v63(v9, v11);
      sub_1D6FA0180();
      sub_1D6FA0240();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v15(v12, v14);
      id v16 = objc_msgSend(self, sel_defaultManager);
      uint64_t v17 = (void *)sub_1D6FA0230();
      *(void *)(v0 + 104) = 0;
      unsigned int v18 = objc_msgSend(v16, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v17, 1, 0, v0 + 104);

      int64_t v19 = *(void **)(v0 + 104);
      if (v18)
      {
        id v20 = v19;
      }
      else
      {
        id v28 = v19;
        uint64_t v29 = (void *)sub_1D6FA0110();

        swift_willThrow();
        sub_1D6FA8090();
        id v30 = v29;
        id v31 = v29;
        v32 = sub_1D6FA8C40();
        os_log_type_t v33 = sub_1D6FAA160();
        BOOL v34 = os_log_type_enabled(v32, v33);
        uint64_t v35 = *(void *)(v0 + 264);
        uint64_t v36 = *(void *)(v0 + 240);
        if (v34)
        {
          v37 = (uint8_t *)swift_slowAlloc();
          uint64_t v62 = v36;
          uint64_t v38 = swift_slowAlloc();
          v65[0] = v38;
          *(_DWORD *)v37 = 136315138;
          swift_getErrorValue();
          uint64_t v39 = MEMORY[0x1D9467BB0](*(void *)(v0 + 24), *(void *)(v0 + 32));
          *(void *)(v0 + 88) = sub_1D683E928(v39, v40, v65);
          sub_1D6FAA4A0();
          swift_bridgeObjectRelease();

          _os_log_impl(&dword_1D6748000, v32, v33, "Couldn't create scores directory with error: %s", v37, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D9468AD0](v38, -1, -1);
          MEMORY[0x1D9468AD0](v37, -1, -1);

          uint64_t v42 = v62;
          uint64_t v41 = v35;
        }
        else
        {

          uint64_t v41 = v35;
          uint64_t v42 = v36;
        }
        v63(v41, v42);
      }
      uint64_t v43 = *(void *)(v0 + 232);
      uint64_t v44 = *(void *)(v0 + 208);
      uint64_t v45 = *(void *)(v0 + 128);
      uint64_t v46 = swift_task_alloc();
      *(void *)(v46 + 16) = v43;
      sub_1D6E92634((void (*)(char *))sub_1D6E95688, v46, v45, MEMORY[0x1E4F9C638]);
      swift_task_dealloc();
      v15(v43, v44);
      uint64_t v2 = (void *)(v0 + 96);
    }
    sub_1D6FA8090();
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_1D6FA8C40();
    os_log_type_t v48 = sub_1D6FAA180();
    if (os_log_type_enabled(v47, v48))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v49 = 134349056;
      *uint64_t v2 = *(void *)(v1 + 16);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D6748000, v47, v48, "Submitting %{public}ld scores to the server.", v49, 0xCu);
      MEMORY[0x1D9468AD0](v49, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
    }

    uint64_t v50 = *(void *)(v0 + 288);
    uint64_t v51 = *(void *)(v0 + 240);
    uint64_t v52 = *(void *)(v0 + 248);
    uint64_t v53 = *(void *)(v0 + 128);
    uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    *(void *)(v0 + 328) = v54;
    *(void *)(v0 + 336) = (v52 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v54(v50, v51);
    *(void *)(swift_task_alloc() + 16) = v53;
    sub_1D6E95AC4(&qword_1EA802EE8, MEMORY[0x1E4F9F1F8]);
    sub_1D6FA8630();
    v56 = *(void **)(v0 + 136);
    swift_task_dealloc();
    uint64_t v57 = v56[5];
    uint64_t v58 = v56[6];
    __swift_project_boxed_opaque_existential_1(v56 + 2, v57);
    uint64_t v64 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 + 48) + **(int **)(v58 + 48));
    uint64_t v59 = (void *)swift_task_alloc();
    *(void *)(v0 + 344) = v59;
    *uint64_t v59 = v0;
    v59[1] = sub_1D6E94324;
    uint64_t v60 = *(void *)(v0 + 200);
    uint64_t v61 = *(void *)(v0 + 176);
    return v64(v61, v60, v57, v58);
  }
  else
  {
    sub_1D6FA8090();
    uint64_t v21 = sub_1D6FA8C40();
    os_log_type_t v22 = sub_1D6FAA180();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v23 = 0;
      _os_log_impl(&dword_1D6748000, v21, v22, "No scores to submit.", v23, 2u);
      MEMORY[0x1D9468AD0](v23, -1, -1);
    }
    uint64_t v24 = *(void *)(v0 + 272);
    uint64_t v25 = *(void *)(v0 + 240);
    uint64_t v26 = *(void *)(v0 + 248);

    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int64_t v27 = *(uint64_t (**)(void))(v0 + 8);
    return v27();
  }
}

uint64_t sub_1D6E94324()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6E948B8;
  }
  else {
    uint64_t v2 = sub_1D6E94464;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E94464()
{
  os_log_type_t v48 = v0;
  v47[1] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = v0[21];
  uint64_t v1 = v0[22];
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v5 = v0[18];
  sub_1D6FA8090();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v6(v2, v1, v5);
  v6(v3, v1, v5);
  os_log_type_t v7 = sub_1D6FA8C40();
  os_log_type_t v8 = sub_1D6FAA180();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v40 = (void (*)(uint64_t, uint64_t))v0[41];
    uint64_t v38 = v0[30];
    uint64_t v39 = v0[35];
    uint64_t v42 = v0[24];
    uint64_t v43 = v0[23];
    uint64_t v45 = v0[25];
    uint64_t v37 = v0[22];
    os_log_type_t type = v8;
    uint64_t v9 = v0[21];
    uint64_t v34 = v0[20];
    uint64_t v10 = v0[18];
    uint64_t v11 = v0[19];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    v47[0] = v35;
    *(_DWORD *)uint64_t v12 = 136315394;
    sub_1D6FA89D0();
    uint64_t v13 = MEMORY[0x1D9466C30]();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    v0[10] = sub_1D683E928(v13, v15, v47);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    id v16 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v16(v9, v10);
    *(_WORD *)(v12 + 12) = 2080;
    uint64_t v17 = sub_1D6FA89E0();
    uint64_t v18 = sub_1D6FA89C0();
    uint64_t v19 = MEMORY[0x1D9466C30](v17, v18);
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    v0[15] = sub_1D683E928(v19, v21, v47);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    v16(v34, v10);
    _os_log_impl(&dword_1D6748000, v7, type, "Server successfully processed scores. Accepted: %s, Rejected: %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v35, -1, -1);
    MEMORY[0x1D9468AD0](v12, -1, -1);

    v40(v39, v38);
    v16(v37, v10);
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v45, v43);
  }
  else
  {
    uint64_t v41 = (void (*)(uint64_t, uint64_t))v0[41];
    uint64_t v22 = v0[35];
    uint64_t v23 = v0[30];
    uint64_t v24 = v0[24];
    uint64_t v25 = v0[22];
    uint64_t v44 = v0[23];
    uint64_t v46 = v0[25];
    uint64_t v27 = v0[20];
    uint64_t v26 = v0[21];
    id v28 = v7;
    uint64_t v30 = v0[18];
    uint64_t v29 = v0[19];

    id v31 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
    v31(v27, v30);
    v31(v26, v30);
    v41(v22, v23);
    v31(v25, v30);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v46, v44);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  v32 = (uint64_t (*)(void))v0[1];
  return v32();
}

uint64_t sub_1D6E948B8()
{
  uint64_t v24 = v0;
  v23[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)v0[44];
  sub_1D6FA8090();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (void *)v0[44];
    uint64_t v22 = (void (*)(uint64_t, uint64_t))v0[41];
    uint64_t v20 = v0[30];
    uint64_t v21 = v0[32];
    os_log_type_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    v23[0] = v8;
    *(_DWORD *)os_log_type_t v7 = 136446210;
    swift_getErrorValue();
    uint64_t v9 = MEMORY[0x1D9467BB0](v0[6], v0[7]);
    v0[9] = sub_1D683E928(v9, v10, v23);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D6748000, v4, v5, "Failed to submit scores to the server with error: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    v22(v21, v20);
  }
  else
  {
    uint64_t v11 = (void *)v0[44];
    uint64_t v12 = (void (*)(uint64_t, uint64_t))v0[41];
    uint64_t v13 = v0[32];
    uint64_t v14 = v0[30];

    v12(v13, v14);
  }
  uint64_t v16 = v0[24];
  uint64_t v15 = v0[25];
  uint64_t v17 = v0[23];
  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
  return v18();
}

uint64_t sub_1D6E94BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_1D6FA18D0();
  uint64_t v39 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v38 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D6FA8C50();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v44 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D6FA9930();
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D6FA02E0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1D6FA18A0();
  uint64_t v48 = v14;
  sub_1D6FA9A10();
  sub_1D6FA0250();
  swift_bridgeObjectRelease();
  sub_1D6E95AC4(&qword_1EA807178, MEMORY[0x1E4F9C638]);
  uint64_t v42 = v3;
  uint64_t v37 = a1;
  uint64_t v15 = v43;
  uint64_t v16 = sub_1D6FA5990();
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v19 = v44;
    sub_1D6FA8090();
    uint64_t v21 = v38;
    uint64_t v20 = v39;
    uint64_t v22 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v38, v37, v42);
    id v23 = v15;
    id v24 = v15;
    uint64_t v25 = sub_1D6FA8C40();
    os_log_type_t v26 = sub_1D6FAA160();
    int v27 = v26;
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v28 = swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v47 = v37;
      *(_DWORD *)uint64_t v28 = 136315394;
      LODWORD(v36) = v27;
      uint64_t v29 = sub_1D6FA18A0();
      uint64_t v49 = sub_1D683E928(v29, v30, &v47);
      uint64_t v43 = 0;
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      *(_WORD *)(v28 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v31 = MEMORY[0x1D9467BB0](v45, v46);
      uint64_t v49 = sub_1D683E928(v31, v32, &v47);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D6748000, v25, (os_log_type_t)v36, "Failed to write %s to file with error: %s", (uint8_t *)v28, 0x16u);
      uint64_t v33 = v37;
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v33, -1, -1);
      MEMORY[0x1D9468AD0](v28, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v44, v41);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
      return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v19, v41);
    }
  }
  else
  {
    uint64_t v18 = v36;
    uint64_t v47 = v16;
    uint64_t v48 = v17;
    sub_1D6FA9920();
    sub_1D6806778();
    sub_1D6FAA4F0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v7);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D6E9518C()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDA6370);
  sub_1D6E95B0C();
  sub_1D6E95AC4(&qword_1EA807178, MEMORY[0x1E4F9C638]);
  uint64_t result = sub_1D6FA9AC0();
  if (!v0) {
    return sub_1D6FA8910();
  }
  return result;
}

uint64_t sub_1D6E9523C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D6786194;
  return ScoreServer.executeScoresTasks()();
}

uint64_t sub_1D6E952CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D67824A8;
  return ScoreServer.fetchScores(request:)(a1, a2);
}

uint64_t sub_1D6E95378(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1D6786194;
  return ScoreServer.submitScores(scores:)(a1);
}

uint64_t sub_1D6E95410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1D6FA70F0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = a3;
  uint64_t v17 = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(boxed_opaque_existential_0, a1, a3);
  (*(void (**)(unsigned char *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E4F9B7C0], v8);
  v14[7] = 0;
  sub_1D6FA6CD0();
  sub_1D675401C(&v15, a2 + 16);
  return a2;
}

uint64_t sub_1D6E9557C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScoreServer();
  uint64_t v10 = swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, a3);
  return sub_1D6E95410((uint64_t)v9, v10, a3, a4);
}

uint64_t sub_1D6E9566C()
{
  return sub_1D6E9518C();
}

uint64_t sub_1D6E95688(uint64_t a1)
{
  return sub_1D6E94BBC(a1, *(void *)(v1 + 16));
}

uint64_t dispatch thunk of ScoreServerProtocol.executeScoresTasks()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1D6786194;
  return v7(a1, a2);
}

uint64_t dispatch thunk of ScoreServerProtocol.fetchScores(request:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_1D67824A8;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of ScoreServerProtocol.submitScores(scores:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D6786194;
  return v9(a1, a2, a3);
}

uint64_t sub_1D6E959A8()
{
  return type metadata accessor for ScoreServer();
}

uint64_t type metadata accessor for ScoreServer()
{
  uint64_t result = qword_1EBDA0328;
  if (!qword_1EBDA0328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D6E959FC()
{
  sub_1D677FCF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for ScoreServer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ScoreServer);
}

uint64_t dispatch thunk of ScoreServer.__allocating_init(endpoint:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1D6E95AC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D6E95B0C()
{
  unint64_t result = qword_1EA807180;
  if (!qword_1EA807180)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1EBDA6370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA807180);
  }
  return result;
}

uint64_t sub_1D6E95B68(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  swift_retain();
  sub_1D6E9617C((int *)(a1 + 48), 0xD000000000000037, 0x80000001D6FC9FF0, (uint64_t)sub_1D6E96174, v2);
  swift_endAccess();
  swift_release_n();
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  swift_retain();
  sub_1D6E9617C((int *)(a1 + 52), 0xD000000000000031, 0x80000001D6FCA030, (uint64_t)sub_1D6E964C4, v3);
  swift_endAccess();
  return swift_release_n();
}

uint64_t sub_1D6E95CCC()
{
  uint64_t v0 = sub_1D6FA7F80();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D6FA8C50();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA80E0();
  uint64_t v8 = sub_1D6FA8C40();
  os_log_type_t v9 = sub_1D6FAA180();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_1D6748000, v8, v9, "[ManagedProfileObserver] Effective settings changed", v10, 2u);
    MEMORY[0x1D9468AD0](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_getObjectType();
    sub_1D6FA7F70();
    sub_1D6FA6FE0();
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

uint64_t sub_1D6E95F20()
{
  uint64_t v0 = sub_1D6FA8C50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA80E0();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1D6748000, v4, v5, "[ManagedProfileObserver] Profile list changed", v6, 2u);
    MEMORY[0x1D9468AD0](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_getObjectType();
    sub_1D68D7288();
    sub_1D6FA6FE0();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1D6E960D0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ManagedProfileObserver()
{
  return self;
}

uint64_t sub_1D6E9613C()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6E96174()
{
  return sub_1D6E95CCC();
}

void sub_1D6E9617C(int *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  aBlock[6] = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1D6FA8C50();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1 == -1)
  {
    int out_token = -1;
    sub_1D6753914();
    uint64_t v14 = sub_1D6FAA220();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a4;
    *(void *)(v15 + 24) = a5;
    aBlock[4] = (uint64_t)sub_1D67A35BC;
    aBlock[5] = v15;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D68134AC;
    aBlock[3] = (uint64_t)&block_descriptor_56;
    uint64_t v16 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v17 = sub_1D6FA9990();
    uint32_t v18 = notify_register_dispatch((const char *)(v17 + 32), &out_token, v14, v16);
    swift_release();
    _Block_release(v16);

    if (v18 || out_token == -1)
    {
      sub_1D6FA80E0();
      swift_bridgeObjectRetain_n();
      uint64_t v19 = sub_1D6FA8C40();
      os_log_type_t v20 = sub_1D6FAA160();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        aBlock[0] = v22;
        *(_DWORD *)uint64_t v21 = 136315138;
        v23[0] = v21 + 4;
        swift_bridgeObjectRetain();
        v23[1] = sub_1D683E928(a2, a3, aBlock);
        sub_1D6FAA4A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D6748000, v19, v20, "[ManagedProfileObserver] Failed to register for notification: %s", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9468AD0](v22, -1, -1);
        MEMORY[0x1D9468AD0](v21, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      *a1 = out_token;
    }
  }
}

uint64_t sub_1D6E964C4()
{
  return sub_1D6E95F20();
}

uint64_t sub_1D6E964CC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6E96504()
{
  uint64_t v0 = sub_1D6FA8C50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA8130();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1D6748000, v4, v5, "Remote key delivery handshake succeeded", v6, 2u);
    MEMORY[0x1D9468AD0](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1D6E96648()
{
  uint64_t v0 = sub_1D6FA6720();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D6FA7070();
    sub_1D6E96758((uint64_t)v3);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return result;
}

void sub_1D6E96758(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v2 = sub_1D6FA6720();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = sub_1D6FA8C50();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  uint64_t v47 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v43 - v14;
  MEMORY[0x1F4188790](v16);
  uint32_t v18 = (char *)&v43 - v17;
  uint64_t v44 = v1;
  sub_1D6FA6C00();
  char v19 = v49[0];
  switch(LOBYTE(v49[0]))
  {
    case 1:
    case 3:
    case 4:
      sub_1D6FA8130();
      os_log_type_t v20 = sub_1D6FA8C40();
      os_log_type_t v21 = sub_1D6FAA180();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = swift_slowAlloc();
        v49[0] = v23;
        *(_DWORD *)uint64_t v22 = 136446210;
        LOBYTE(v48) = v19;
        uint64_t v24 = sub_1D6FA9940();
        uint64_t v48 = sub_1D683E928(v24, v25, v49);
        sub_1D6FAA4A0();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D6748000, v20, v21, "Unsupported multiplex mode for remote key delivery coordinator: %{public}s", v22, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9468AD0](v23, -1, -1);
        MEMORY[0x1D9468AD0](v22, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v47 + 8))(v12, v46);
      break;
    case 2:
      sub_1D6FA8130();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v45, v2);
      os_log_type_t v26 = sub_1D6FA8C40();
      os_log_type_t v27 = sub_1D6FAA180();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v44 = v2;
        uint64_t v29 = (uint8_t *)v28;
        uint64_t v30 = swift_slowAlloc();
        v49[0] = v30;
        *(_DWORD *)uint64_t v29 = 136446210;
        uint64_t v45 = (uint64_t)(v29 + 4);
        sub_1D6E9F540(&qword_1EA803108, MEMORY[0x1E4F9ED38]);
        uint64_t v31 = v44;
        uint64_t v32 = sub_1D6FAAA50();
        uint64_t v48 = sub_1D683E928(v32, v33, v49);
        sub_1D6FAA4A0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v31);
        _os_log_impl(&dword_1D6748000, v26, v27, "Session %{public}s activated on participant client, waiting for connection pool to update for Remote Key Delivery", v29, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9468AD0](v30, -1, -1);
        MEMORY[0x1D9468AD0](v29, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }

      (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v46);
      break;
    default:
      sub_1D6FA8130();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v45, v2);
      uint64_t v34 = sub_1D6FA8C40();
      os_log_type_t v35 = sub_1D6FAA180();
      if (os_log_type_enabled(v34, v35))
      {
        uint64_t v36 = (uint8_t *)swift_slowAlloc();
        uint64_t v45 = swift_slowAlloc();
        v49[0] = v45;
        *(_DWORD *)uint64_t v36 = 136446210;
        uint64_t v43 = v36 + 4;
        sub_1D6E9F540(&qword_1EA803108, MEMORY[0x1E4F9ED38]);
        uint64_t v37 = sub_1D6FAAA50();
        uint64_t v48 = sub_1D683E928(v37, v38, v49);
        sub_1D6FAA4A0();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        _os_log_impl(&dword_1D6748000, v34, v35, "Session %{public}s activated on display host, making reverse connection for Remote Key Delivery", v36, 0xCu);
        uint64_t v39 = v45;
        swift_arrayDestroy();
        MEMORY[0x1D9468AD0](v39, -1, -1);
        MEMORY[0x1D9468AD0](v36, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      }

      (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v46);
      uint64_t v40 = *(void *)(v44 + 184);
      uint64_t v41 = (void *)(v40 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v40 + 16));
      uint64_t v42 = (os_unfair_lock_s *)(v40 + ((*(unsigned int *)(*(void *)v40 + 48) + 3) & 0x1FFFFFFFCLL));
      os_unfair_lock_lock(v42);
      sub_1D6E9EEF8(v41);
      os_unfair_lock_unlock(v42);
      break;
  }
}

uint64_t sub_1D6E96E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D6FA6720();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v36 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D6FA7250();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1D6FA8C50();
  uint64_t v37 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA8130();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v14 = sub_1D6FA8C40();
  os_log_type_t v15 = sub_1D6FAA180();
  int v16 = v15;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v17 = swift_slowAlloc();
    int v32 = v16;
    uint32_t v18 = (uint8_t *)v17;
    uint64_t v33 = swift_slowAlloc();
    v39[0] = v33;
    uint64_t v34 = a2 + 16;
    *(_DWORD *)uint32_t v18 = 136446210;
    uint64_t v29 = v18 + 4;
    uint64_t v30 = v18;
    sub_1D6FA7230();
    sub_1D6E9F540(&qword_1EA803108, MEMORY[0x1E4F9ED38]);
    uint64_t v19 = v36;
    uint64_t v20 = sub_1D6FAAA50();
    uint64_t v31 = v11;
    unint64_t v22 = v21;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v19);
    uint64_t v38 = sub_1D683E928(v20, v22, v39);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v23 = v30;
    _os_log_impl(&dword_1D6748000, v14, (os_log_type_t)v32, "Deactivating Remote Key Delivery Participant Coordinator for %{public}s", v30, 0xCu);
    uint64_t v24 = v33;
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v24, -1, -1);
    MEMORY[0x1D9468AD0](v23, -1, -1);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v31);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);

    (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v11);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v26 = *(void *)(result + 184);
    uint64_t v27 = v26 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v26 + 16);
    uint64_t v28 = (os_unfair_lock_s *)(v26 + ((*(unsigned int *)(*(void *)v26 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v28);
    sub_1D6E98F58(v27);
    os_unfair_lock_unlock(v28);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D6E972B4()
{
  uint64_t v0 = sub_1D6FA8C50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA8130();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1D6748000, v4, v5, "Deactivating Remote Key Delivery Participant Coordinator for distributed session", v6, 2u);
    MEMORY[0x1D9468AD0](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = *(void *)(result + 184);
    uint64_t v9 = v8 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v8 + 16);
    uint64_t v10 = (os_unfair_lock_s *)(v8 + ((*(unsigned int *)(*(void *)v8 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v10);
    sub_1D6E98F58(v9);
    os_unfair_lock_unlock(v10);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D6E97498()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D6E974F0();
    return swift_release();
  }
  return result;
}

void sub_1D6E974F0()
{
  uint64_t v1 = sub_1D6FA8C50();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA6C00();
  char v5 = v17;
  if (((1 << v17) & 0x1A) != 0)
  {
    sub_1D6FA8130();
    uint64_t v6 = sub_1D6FA8C40();
    os_log_type_t v7 = sub_1D6FAA180();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      uint64_t v17 = v9;
      *(_DWORD *)uint64_t v8 = 136446210;
      LOBYTE(v16) = v5;
      uint64_t v10 = sub_1D6FA9940();
      uint64_t v16 = sub_1D683E928(v10, v11, &v17);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D6748000, v6, v7, "Unsupported multiplex mode for remote key delivery coordinator to transition to connecting: %{public}s", v8, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v9, -1, -1);
      MEMORY[0x1D9468AD0](v8, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v13 = (void *)(v12 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v12 + 16));
    uint64_t v14 = (os_unfair_lock_s *)(v12 + ((*(unsigned int *)(*(void *)v12 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v14);
    sub_1D6E9EEF8(v13);
    os_unfair_lock_unlock(v14);
  }
}

uint64_t sub_1D6E9778C(void *a1)
{
  uint64_t v2 = sub_1D6FA8C50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  char v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RemoteKeyDeliveryParticipantCoordinator.State();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (uint64_t *)((char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D6E9ED78((uint64_t)a1, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_1D6DC23A8((uint64_t)v8);
  }
  sub_1D6DC23A8((uint64_t)a1);
  uint64_t v10 = *v8;
  sub_1D6FA8130();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  unint64_t v11 = (char *)a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188) + 48);
  *a1 = v10;
  uint64_t v12 = sub_1D6FA3AE0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  swift_storeEnumTagMultiPayload();
  swift_retain();
  swift_retain();
  sub_1D6FA75D0();
  swift_release();
  return swift_release();
}

uint64_t sub_1D6E979D0(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDB0430);
  v2[7] = v3;
  uint64_t v4 = *(void *)(v3 - 8);
  v2[8] = v4;
  v2[9] = *(void *)(v4 + 64);
  v2[10] = swift_task_alloc();
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  uint64_t v5 = sub_1D6FA8C50();
  v2[13] = v5;
  v2[14] = *(void *)(v5 - 8);
  v2[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E97B14, 0, 0);
}

uint64_t sub_1D6E97B14()
{
  sub_1D6FA8130();
  uint64_t v1 = sub_1D6FA8C40();
  os_log_type_t v2 = sub_1D6FAA180();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1D6748000, v1, v2, "Brokering remote key delivery connection...", v3, 2u);
    MEMORY[0x1D9468AD0](v3, -1, -1);
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[15];
  uint64_t v6 = v0[13];
  uint64_t v21 = v0[12];
  uint64_t v8 = v0[10];
  uint64_t v7 = v0[11];
  uint64_t v9 = v0[8];
  uint64_t v20 = v0[9];
  unint64_t v11 = (void (*)(uint64_t))v0[6];
  uint64_t v10 = v0[7];

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v6);
  sub_1D6E98064(v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v9 + 32))(v13 + v12, v8, v10);
  uint64_t v14 = (void (**)(uint64_t))(v13 + ((v20 + v12 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v14 = sub_1D6E9EFB0;
  v14[1] = v11;
  swift_retain();
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8F28);
  sub_1D6FA6590();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v0[16] = v16;
  v0[17] = (v9 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v16(v7, v10);
  uint64_t v17 = swift_task_alloc();
  v0[18] = v17;
  *(void *)(v17 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore/SeymourServices/Key Delivery/Coordinators/Remote"
                          "KeyDeliveryParticipantCoordinator.swift";
  *(void *)(v17 + 24) = 133;
  *(unsigned char *)(v17 + 32) = 2;
  *(void *)(v17 + 40) = 130;
  *(void *)(v17 + 48) = v21;
  uint32_t v18 = (void *)swift_task_alloc();
  v0[19] = v18;
  *uint32_t v18 = v0;
  v18[1] = sub_1D6E97DE4;
  return MEMORY[0x1F4188160](v0 + 2, 0, 0, 0xD000000000000013, 0x80000001D6FC9B90, sub_1D6E9EFE4, v17, v15);
}

uint64_t sub_1D6E97DE4()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D6E97FAC, 0, 0);
  }
  else
  {
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v2 + 128);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = *(void *)(v2 + 56);
    uint64_t v6 = *(void *)(v2 + 32);
    uint64_t v7 = *(void *)(v2 + 40);
    long long v10 = *(_OWORD *)(v2 + 16);
    swift_task_dealloc();
    *(_OWORD *)uint64_t v7 = v10;
    *(void *)(v7 + 16) = v6;
    v3(v4, v5);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v2 + 8);
    return v8();
  }
}

uint64_t sub_1D6E97FAC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[16];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[7];
  swift_task_dealloc();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D6E98064@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v3 = sub_1D6FA8C50();
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = (void (*)(char *, char *, uint64_t))v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v36 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8029B0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D6FA5FC0();
  *(void *)&long long v39 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v39 + 64);
  MEMORY[0x1F4188790](v8);
  long long v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v35 - v12;
  sub_1D6FA6C00();
  switch((char)v41)
  {
    case 1:
    case 3:
    case 4:
      uint64_t v14 = sub_1D6FA4010();
      sub_1D6E9F540((unint64_t *)&qword_1EBDA77E0, MEMORY[0x1E4F9DD40]);
      uint64_t v15 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v14 - 8) + 104))(v16, *MEMORY[0x1E4F9DCE8], v14);
      *(void *)(swift_allocObject() + 16) = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8F28);
      return sub_1D6FA65A0();
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA802B98);
      sub_1D6FA6C00();
      if ((void)v41)
      {
        uint64_t v18 = v42;
        long long v39 = v41;
        uint64_t v19 = swift_allocObject();
        *(_OWORD *)(v19 + 16) = v39;
        *(void *)(v19 + 32) = v18;
      }
      else
      {
        uint64_t v32 = sub_1D6FA4010();
        sub_1D6E9F540((unint64_t *)&qword_1EBDA77E0, MEMORY[0x1E4F9DD40]);
        uint64_t v33 = swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x1E4F9DCF0], v32);
        *(void *)(swift_allocObject() + 16) = v33;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8F28);
      return sub_1D6FA65A0();
    default:
      uint64_t v20 = __swift_project_boxed_opaque_existential_1(v1 + 12, v1[15]);
      MEMORY[0x1F4188790](v20);
      *(&v35 - 2) = v21;
      *((unsigned char *)&v35 - 8) = 3;
      sub_1D6FA6C00();
      uint64_t v22 = v39;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v7, 1, v8) == 1)
      {
        sub_1D6753E1C((uint64_t)v7, &qword_1EA8029B0);
        uint64_t v23 = v36;
        sub_1D6FA8130();
        uint64_t v24 = sub_1D6FA8C40();
        os_log_type_t v25 = sub_1D6FAA160();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v26 = 0;
          _os_log_impl(&dword_1D6748000, v24, v25, "Brokering key delivery, but no incoming handshake recorded in registry", v26, 2u);
          MEMORY[0x1D9468AD0](v26, -1, -1);
        }

        (*(void (**)(char *, void (*)(char *, char *, uint64_t)))(v37 + 8))(v23, v38);
        uint64_t v27 = sub_1D6FA4010();
        sub_1D6E9F540((unint64_t *)&qword_1EBDA77E0, MEMORY[0x1E4F9DD40]);
        uint64_t v28 = swift_allocError();
        (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, *MEMORY[0x1E4F9DD30], v27);
        *(void *)(swift_allocObject() + 16) = v28;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8F28);
        return sub_1D6FA65A0();
      }
      else
      {
        uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
        v38(v13, v7, v8);
        __swift_project_boxed_opaque_existential_1(v1 + 5, v1[8]);
        sub_1D6D171DC(1, &v41);
        __swift_project_boxed_opaque_existential_1(&v41, v43);
        (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v10, v13, v8);
        unint64_t v30 = (*(unsigned __int8 *)(v22 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = v2;
        v38((char *)(v31 + v30), v10, v8);
        swift_retain();
        sub_1D67EA6BC(1, 1, 1, (uint64_t)sub_1D6E9F18C, v31, v40);
        swift_release();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v8);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v41);
      }
  }
}

void sub_1D6E987E4(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA8C50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v57 - v7;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v57 - v10;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v57 - v13;
  uint64_t v15 = sub_1D6FA4010();
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 24) == 1)
  {
    uint64_t v59 = v14;
    uint64_t v60 = v16;
    uint64_t v57 = v11;
    uint64_t v58 = v8;
    uint64_t v63 = v2;
    uint64_t v64 = v3;
    uint64_t v20 = *(void **)a1;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v61 = (uint64_t)v5;
    uint64_t v62 = v19;
    uint64_t v21 = *(void *)(a1 + 16);
    id v67 = v20;
    id v22 = v20;
    id v23 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0380);
    if (swift_dynamicCast())
    {
      int v24 = (*((uint64_t (**)(char *, uint64_t))v60 + 11))(v18, v15);
      if (v24 == *MEMORY[0x1E4F9DCE8])
      {
        os_log_type_t v25 = v59;
        sub_1D6FA8130();
        swift_retain_n();
        uint64_t v26 = sub_1D6FA8C40();
        os_log_type_t v27 = sub_1D6FAA160();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          uint64_t v61 = swift_slowAlloc();
          v66[0] = v61;
          *(_DWORD *)uint64_t v28 = 136446210;
          uint64_t v60 = v28 + 4;
          sub_1D6FA6C00();
          uint64_t v29 = sub_1D6FA9940();
          uint64_t v65 = sub_1D683E928(v29, v30, v66);
          sub_1D6FAA4A0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1D6748000, v26, v27, "We are in the wrong multiplex mode %{public}s to be used with the key delivery connection broker", v28, 0xCu);
          uint64_t v31 = v61;
          swift_arrayDestroy();
          MEMORY[0x1D9468AD0](v31, -1, -1);
          MEMORY[0x1D9468AD0](v28, -1, -1);

          sub_1D6B1863C(v20, v62, v21, 1);
        }
        else
        {
          sub_1D6B1863C(v20, v62, v21, 1);

          swift_release_n();
        }
        uint64_t v36 = *(void (**)(char *, uint64_t))(v64 + 8);
        uint64_t v37 = v25;
LABEL_11:
        uint64_t v38 = v63;
LABEL_17:
        v36(v37, v38);

        return;
      }
      if (v24 == *MEMORY[0x1E4F9DCF0])
      {
        uint64_t v32 = v58;
        sub_1D6FA8130();
        uint64_t v33 = sub_1D6FA8C40();
        os_log_type_t v34 = sub_1D6FAA160();
        if (os_log_type_enabled(v33, v34))
        {
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v35 = 0;
          _os_log_impl(&dword_1D6748000, v33, v34, "Unable to find an existing remote participant connection", v35, 2u);
          MEMORY[0x1D9468AD0](v35, -1, -1);

          sub_1D6B1863C(v20, v62, v21, 1);
        }
        else
        {
          sub_1D6B1863C(v20, v62, v21, 1);
        }
        uint64_t v38 = v63;
        uint64_t v36 = *(void (**)(char *, uint64_t))(v64 + 8);
        uint64_t v37 = v32;
        goto LABEL_17;
      }
      if (v24 == *MEMORY[0x1E4F9DD30])
      {
        long long v39 = v57;
        sub_1D6FA8130();
        uint64_t v40 = sub_1D6FA8C40();
        os_log_type_t v41 = sub_1D6FAA160();
        BOOL v42 = os_log_type_enabled(v40, v41);
        uint64_t v43 = v62;
        if (v42)
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          _os_log_impl(&dword_1D6748000, v40, v41, "Unable to find a remote display clien for the display host", v44, 2u);
          MEMORY[0x1D9468AD0](v44, -1, -1);

          sub_1D6B1863C(v20, v43, v21, 1);
        }
        else
        {
          sub_1D6B1863C(v20, v62, v21, 1);
        }
        uint64_t v36 = *(void (**)(char *, uint64_t))(v64 + 8);
        uint64_t v37 = v39;
        goto LABEL_11;
      }
      (*((void (**)(char *, uint64_t))v60 + 1))(v18, v15);
    }

    uint64_t v45 = v61;
    sub_1D6FA8130();
    id v46 = v20;
    id v47 = v20;
    uint64_t v48 = sub_1D6FA8C40();
    os_log_type_t v49 = sub_1D6FAA160();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = v21;
      uint64_t v51 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = (void *)swift_slowAlloc();
      id v67 = v52;
      *(_DWORD *)uint64_t v51 = 136446210;
      swift_getErrorValue();
      uint64_t v53 = MEMORY[0x1D9467BB0](v66[2], v66[3]);
      v66[0] = sub_1D683E928(v53, v54, (uint64_t *)&v67);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      uint64_t v55 = v62;
      sub_1D6B1863C(v20, v62, v50, 1);
      sub_1D6B1863C(v20, v55, v50, 1);
      _os_log_impl(&dword_1D6748000, v48, v49, "Error brokering remote key delivery participant connection: %{public}s", v51, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v52, -1, -1);
      MEMORY[0x1D9468AD0](v51, -1, -1);

      sub_1D6B1863C(v20, v55, v50, 1);
    }
    else
    {
      uint64_t v56 = v62;
      sub_1D6B1863C(v20, v62, v21, 1);
      sub_1D6B1863C(v20, v56, v21, 1);
    }
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v45, v63);
  }
}

uint64_t sub_1D6E98F58(uint64_t a1)
{
  uint64_t v89 = sub_1D6FA70D0();
  uint64_t v88 = *(void *)(v89 - 8);
  MEMORY[0x1F4188790](v89);
  v87 = (char *)&v79 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
  uint64_t v91 = *(void *)(v3 - 8);
  uint64_t v92 = v3;
  MEMORY[0x1F4188790](v3);
  v90 = (char *)&v79 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D6FA3AE0();
  uint64_t v102 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  v95 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v93 = (char *)&v79 - v8;
  MEMORY[0x1F4188790](v9);
  v96 = (char *)&v79 - v10;
  MEMORY[0x1F4188790](v11);
  v101 = (char *)&v79 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v79 - v17;
  uint64_t v19 = type metadata accessor for RemoteKeyDeliveryParticipantCoordinator.State();
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (uint64_t *)((char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = sub_1D6FA8C50();
  uint64_t v23 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  v94 = ((char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v25);
  os_log_t v97 = (os_log_t)((char *)&v79 - v26);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = ((char *)&v79 - v28);
  sub_1D6FA8130();
  sub_1D6FA8C30();
  unint64_t v30 = *(void (**)(os_log_t, uint64_t))(v23 + 8);
  uint64_t ObjectType = (uint64_t)v29;
  uint64_t v99 = v23 + 8;
  uint64_t v100 = v22;
  v98 = v30;
  v30(v29, v22);
  v106 = (void *)a1;
  sub_1D6E9F49C(a1, (uint64_t)v21);
  uint64_t v105 = v19;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v32 = *v21;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188);
    sub_1D6E9EDDC((uint64_t)v21 + *(int *)(v33 + 48), (uint64_t)v18);
    sub_1D6E9EE44((uint64_t)v18, (uint64_t)v15);
    uint64_t v34 = v102;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v15, 1, v5) == 1)
    {
      sub_1D6753E1C((uint64_t)v18, &qword_1EA807190);
      swift_release();
      sub_1D6753E1C((uint64_t)v15, &qword_1EA807190);
    }
    else
    {
      uint64_t v35 = v5;
      uint64_t v85 = v18;
      uint64_t v36 = v101;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v101, v15, v5);
      os_log_t v37 = v97;
      sub_1D6FA8130();
      uint64_t v39 = v34 + 16;
      uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
      uint64_t v40 = v96;
      v38(v96, v36, v35);
      uint64_t v41 = v34;
      BOOL v42 = sub_1D6FA8C40();
      os_log_type_t v43 = sub_1D6FAA160();
      BOOL v44 = os_log_type_enabled(v42, v43);
      uint64_t v86 = v32;
      uint64_t v84 = v39;
      if (v44)
      {
        os_log_type_t v45 = v43;
        id v46 = v40;
        uint64_t v47 = swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        v107[0] = v83;
        *(_DWORD *)uint64_t v47 = 141558274;
        uint64_t v108 = 1752392040;
        sub_1D6FAA4A0();
        *(_WORD *)(v47 + 12) = 2080;
        uint64_t v81 = v47 + 14;
        os_log_t v82 = v42;
        v38(v93, v46, v35);
        uint64_t v48 = sub_1D6FA9940();
        uint64_t v108 = sub_1D683E928(v48, v49, v107);
        sub_1D6FAA4A0();
        swift_bridgeObjectRelease();
        v96 = *(char **)(v41 + 8);
        ((void (*)(char *, uint64_t))v96)(v46, v35);
        os_log_t v50 = v82;
        _os_log_impl(&dword_1D6748000, v82, v45, "Found an existing server playback context, releasing %{mask.hash}s", (uint8_t *)v47, 0x16u);
        uint64_t v51 = v83;
        swift_arrayDestroy();
        MEMORY[0x1D9468AD0](v51, -1, -1);
        MEMORY[0x1D9468AD0](v47, -1, -1);

        os_log_t v52 = v97;
      }
      else
      {
        v96 = *(char **)(v41 + 8);
        ((void (*)(char *, uint64_t))v96)(v40, v35);

        os_log_t v52 = v37;
      }
      v98(v52, v100);
      uint64_t v53 = (void *)v104;
      unint64_t v54 = v95;
      sub_1D6FA75B0();
      if (v53)
      {
        uint64_t v55 = v94;
        sub_1D6FA8130();
        v38(v54, v101, v35);
        id v56 = v53;
        id v57 = v53;
        uint64_t v58 = sub_1D6FA8C40();
        os_log_type_t v59 = sub_1D6FAA160();
        LODWORD(v104) = v59;
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = swift_slowAlloc();
          os_log_t v97 = v58;
          uint64_t v61 = v60;
          uint64_t ObjectType = swift_slowAlloc();
          v107[0] = ObjectType;
          *(_DWORD *)uint64_t v61 = 141558530;
          uint64_t v108 = 1752392040;
          sub_1D6FAA4A0();
          *(_WORD *)(v61 + 12) = 2080;
          v95 = (char *)(v61 + 14);
          v38(v93, v54, v35);
          uint64_t v80 = v35;
          uint64_t v62 = sub_1D6FA9940();
          uint64_t v108 = sub_1D683E928(v62, v63, v107);
          sub_1D6FAA4A0();
          swift_bridgeObjectRelease();
          uint64_t v64 = (void (*)(char *, uint64_t))v96;
          ((void (*)(char *, uint64_t))v96)(v54, v35);
          *(_WORD *)(v61 + 22) = 2082;
          uint64_t v108 = (uint64_t)v53;
          id v65 = v53;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0380);
          uint64_t v66 = sub_1D6FA9940();
          uint64_t v108 = sub_1D683E928(v66, v67, v107);
          sub_1D6FAA4A0();
          swift_bridgeObjectRelease();

          os_log_t v68 = v97;
          _os_log_impl(&dword_1D6748000, v97, (os_log_type_t)v104, "Unable to release existing server playback context %{mask.hash}s on transition to idle: %{public}s", (uint8_t *)v61, 0x20u);
          uint64_t v69 = ObjectType;
          swift_arrayDestroy();
          MEMORY[0x1D9468AD0](v69, -1, -1);
          MEMORY[0x1D9468AD0](v61, -1, -1);

          swift_release();
          v98(v94, v100);
          v64(v101, v80);
        }
        else
        {

          swift_release();
          v77 = (void (*)(char *, uint64_t))v96;
          ((void (*)(char *, uint64_t))v96)(v54, v35);

          v98(v55, v100);
          v77(v101, v35);
        }
        sub_1D6753E1C((uint64_t)v85, &qword_1EA807190);
      }
      else
      {
        uint64_t v104 = v107[1];
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v70 = v88;
        uint64_t v71 = v87;
        uint64_t v72 = v89;
        (*(void (**)(char *, void, uint64_t))(v88 + 104))(v87, *MEMORY[0x1E4F9AF00], v89);
        unint64_t v73 = v90;
        sub_1D6FA6BA0();
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v72);
        uint64_t v74 = v92;
        uint64_t v75 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D6FA65C0();
        uint64_t v76 = swift_allocObject();
        *(void *)(v76 + 16) = 0;
        *(void *)(v76 + 24) = 0;
        v75(sub_1D67825EC, v76);
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v91 + 8))(v73, v74);
        ((void (*)(char *, uint64_t))v96)(v101, v35);
        sub_1D6753E1C((uint64_t)v85, &qword_1EA807190);
      }
    }
  }
  else
  {
    sub_1D6FA7590();
    swift_release();
  }
  sub_1D6FA8130();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAFE28);
  swift_allocObject();
  void *v106 = sub_1D6FA75C0();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1D6E99B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v80 = a4;
  uint64_t v81 = a5;
  uint64_t v91 = a2;
  uint64_t v92 = a3;
  uint64_t v90 = a1;
  uint64_t v93 = a6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA803890);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v74 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v72 - v12;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA801740);
  uint64_t v14 = *(void *)(v79 - 8);
  uint64_t v77 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v79);
  uint64_t v76 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v75 = (char *)&v72 - v17;
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA803870);
  uint64_t v18 = *(void *)(v85 - 8);
  uint64_t v83 = *(void *)(v18 + 64);
  MEMORY[0x1F4188790](v85);
  os_log_t v82 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v78 = (char *)&v72 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
  uint64_t v88 = *(void *)(v22 - 8);
  uint64_t v89 = v22;
  uint64_t v87 = *(void *)(v88 + 64);
  MEMORY[0x1F4188790](v22);
  uint64_t v86 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v84 = (char *)&v72 - v25;
  uint64_t v26 = sub_1D6FA8C50();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA8130();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  uint64_t v73 = sub_1D6FA6890();
  uint64_t v72 = v30;
  uint64_t v31 = __swift_project_boxed_opaque_existential_1((void *)(v7 + 136), *(void *)(v7 + 160));
  sub_1D6AC077C();
  sub_1D6FA6590();
  sub_1D6938270((uint64_t)v31, (uint64_t)v94);
  uint64_t v32 = swift_allocObject();
  long long v33 = v94[1];
  *(_OWORD *)(v32 + 16) = v94[0];
  *(_OWORD *)(v32 + 32) = v33;
  *(void *)(v32 + 48) = v95;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1D6938304;
  *(void *)(v34 + 24) = v32;
  uint64_t v35 = v74;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v74, v13, v8);
  unint64_t v36 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v37 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v37 + v36, v35, v8);
  uint64_t v38 = (void *)(v37 + ((v10 + v36 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v38 = sub_1D693830C;
  v38[1] = v34;
  uint64_t v39 = v75;
  sub_1D6FA6590();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
  uint64_t v40 = (void *)swift_allocObject();
  uint64_t v41 = v72;
  v40[2] = v73;
  v40[3] = v41;
  uint64_t v42 = v81;
  v40[4] = v80;
  v40[5] = v42;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = sub_1D6E9F328;
  *(void *)(v43 + 24) = v40;
  BOOL v44 = v76;
  os_log_type_t v45 = v39;
  uint64_t v46 = v79;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v76, v39, v79);
  unint64_t v47 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v48 = (v77 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v49 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v49 + v47, v44, v46);
  os_log_t v50 = (uint64_t (**)(uint64_t *))(v49 + v48);
  *os_log_t v50 = sub_1D6B529F0;
  v50[1] = (uint64_t (*)(uint64_t *))v43;
  sub_1D6FA5FC0();
  swift_bridgeObjectRetain();
  uint64_t v51 = v78;
  sub_1D6FA6590();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v45, v46);
  os_log_t v52 = (uint64_t (*)())swift_allocObject();
  uint64_t v53 = v91;
  *((void *)v52 + 2) = v90;
  *((void *)v52 + 3) = v53;
  *((void *)v52 + 4) = v92;
  unint64_t v54 = v82;
  uint64_t v55 = v51;
  uint64_t v56 = v85;
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v82, v51, v85);
  unint64_t v57 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v58 = (v83 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v59 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v59 + v57, v54, v56);
  uint64_t v60 = (uint64_t (**)())(v59 + v58);
  *uint64_t v60 = sub_1D6E9F374;
  v60[1] = v52;
  swift_unknownObjectRetain();
  uint64_t v61 = v84;
  sub_1D6FA6590();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v55, v56);
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = sub_1D6E96504;
  *(void *)(v62 + 24) = 0;
  uint64_t v63 = v88;
  uint64_t v64 = v89;
  id v65 = v86;
  (*(void (**)(char *, char *, uint64_t))(v88 + 16))(v86, v61, v89);
  uint64_t v66 = v63;
  unint64_t v67 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v68 = (v87 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v66 + 32))(v69 + v67, v65, v64);
  uint64_t v70 = (uint64_t (**)(uint64_t))(v69 + v68);
  *uint64_t v70 = sub_1D6775A40;
  v70[1] = (uint64_t (*)(uint64_t))v62;
  sub_1D6FA6590();
  return (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v61, v64);
}

uint64_t sub_1D6E9A3F8(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA801758);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = 0x3010200u >> (8 * sub_1D6FA68C0());
  sub_1D693864C();
  sub_1D6FA1360();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D6FA1190();
  uint64_t v5 = sub_1D6FA11A0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 0, 1, v5);
  swift_bridgeObjectRetain();
  sub_1D6FA9DE0();
  return sub_1D6FA5F70();
}

uint64_t sub_1D6E9A588()
{
  uint64_t v0 = sub_1D6FA70D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F9B240], v0);
  sub_1D6FA5FC0();
  sub_1D6FA6BA0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1D6E9A6C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RemoteKeyDeliveryParticipantCoordinator.State();
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D6E9ED78(a1, (uint64_t)v6);
  uint64_t result = swift_getEnumCaseMultiPayload();
  uint64_t v8 = *v6;
  if (result == 1)
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188);
    uint64_t result = sub_1D6753E1C((uint64_t)v6 + *(int *)(v9 + 48), &qword_1EA807190);
  }
  *a2 = v8;
  return result;
}

uint64_t sub_1D6E9A79C()
{
  swift_unknownObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for RemoteKeyDeliveryParticipantCoordinator()
{
  return self;
}

uint64_t *sub_1D6E9A828(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    swift_retain();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188) + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_1D6FA3AE0();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D6E9A9DC(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188) + 48);
    uint64_t v5 = sub_1D6FA3AE0();
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v4, 1, v5);
    if (!result)
    {
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
      return v6(v4, v5);
    }
  }
  return result;
}

void *sub_1D6E9AAC4(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  swift_retain();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188) + 48);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1D6FA3AE0();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1D6E9AC28(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1D6DC23A8((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    swift_retain();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188) + 48);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_1D6FA3AE0();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for RemoteKeyDeliveryParticipantCoordinator.State()
{
  uint64_t result = qword_1EBDAFF90;
  if (!qword_1EBDAFF90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1D6E9ADE8(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188) + 48);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1D6FA3AE0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1D6E9AF58(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1D6DC23A8((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188) + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = sub_1D6FA3AE0();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
        memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void sub_1D6E9B0D8()
{
  v1[4] = MEMORY[0x1E4FBADB0] + 64;
  sub_1D6E9B188();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v1[5] = v1;
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_1D6E9B188()
{
  if (!qword_1EBDAFDB8)
  {
    sub_1D6FA3AE0();
    unint64_t v0 = sub_1D6FAA480();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBDAFDB8);
    }
  }
}

uint64_t sub_1D6E9B1E0(uint64_t a1, uint64_t a2)
{
  v2[9] = a1;
  v2[10] = a2;
  uint64_t v3 = sub_1D6FA70D0();
  v2[11] = v3;
  v2[12] = *(void *)(v3 - 8);
  v2[13] = swift_task_alloc();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F1B0);
  v2[14] = v4;
  v2[15] = *(void *)(v4 - 8);
  v2[16] = swift_task_alloc();
  uint64_t v5 = sub_1D6FA8C50();
  v2[17] = v5;
  v2[18] = *(void *)(v5 - 8);
  v2[19] = swift_task_alloc();
  v2[20] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E9B36C, 0, 0);
}

uint64_t sub_1D6E9B36C()
{
  uint64_t v12 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[10];
  sub_1D6FA8130();
  sub_1D6FA8C30();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[21] = v5;
  v0[22] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  uint64_t v6 = *(void *)(v4 + 184);
  uint64_t v7 = v6 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v6 + 16);
  uint64_t v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  sub_1D6E9A6C8(v7, &v11);
  os_unfair_lock_unlock(v8);
  v0[23] = v11;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[24] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1D6E9B520;
  return MEMORY[0x1F414B840](v0 + 2);
}

uint64_t sub_1D6E9B520()
{
  *(void *)(*(void *)v1 + 200) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D6E9BC30;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1D6E9B63C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E9B63C()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 208) = v1;
  long long v23 = *(_OWORD *)(v0 + 24);
  sub_1D6FA8130();
  swift_unknownObjectRetain_n();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    uint64_t v21 = *(void *)(v0 + 152);
    uint64_t v4 = *(void *)(v0 + 136);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v24 = v6;
    *(void *)(v0 + 40) = v1;
    *(_OWORD *)(v0 + 48) = v23;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8F28);
    uint64_t v7 = sub_1D6FA9940();
    *(void *)(v0 + 64) = sub_1D683E928(v7, v8, &v24);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1D6748000, v2, v3, "Requesting key certificate over %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v6, -1, -1);
    MEMORY[0x1D9468AD0](v5, -1, -1);

    v22(v21, v4);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 152);
    uint64_t v11 = *(void *)(v0 + 136);
    swift_unknownObjectRelease_n();

    v9(v10, v11);
  }
  uint64_t v12 = *(void *)(v0 + 128);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 104);
  uint64_t v15 = *(void *)(v0 + 88);
  swift_getObjectType();
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, *MEMORY[0x1E4F9B218], v15);
  uint64_t v16 = sub_1D6FA39C0();
  sub_1D6FA6BB0();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  uint64_t v17 = swift_task_alloc();
  *(void *)(v0 + 216) = v17;
  *(void *)(v17 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore/SeymourServices/Key Delivery/Coordinators/Remote"
                          "KeyDeliveryParticipantCoordinator.swift";
  *(void *)(v17 + 24) = 133;
  *(unsigned char *)(v17 + 32) = 2;
  *(void *)(v17 + 40) = 226;
  *(void *)(v17 + 48) = v12;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1D6E9B998;
  uint64_t v19 = *(void *)(v0 + 72);
  return MEMORY[0x1F4188160](v19, 0, 0, 0xD000000000000013, 0x80000001D6FC9B90, sub_1D6E9EEE0, v17, v16);
}

uint64_t sub_1D6E9B998()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1D6E9BB74;
  }
  else
  {
    uint64_t v5 = v2[15];
    uint64_t v4 = v2[16];
    uint64_t v6 = v2[14];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    os_log_type_t v3 = sub_1D6E9BADC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D6E9BADC()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6E9BB74()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D6E9BC30()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6E9BCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  uint64_t v4 = sub_1D6FA70D0();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA800220);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v6 = sub_1D6FA8C50();
  v3[18] = v6;
  v3[19] = *(void *)(v6 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E9BE54, 0, 0);
}

uint64_t sub_1D6E9BE54()
{
  uint64_t v15 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v4 = *(void *)(v0 + 80);
  sub_1D6FA8130();
  sub_1D6FA8C30();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v0 + 176) = v5;
  *(void *)(v0 + 184) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  uint64_t v6 = *(uint64_t **)(v4 + 184);
  *(void *)(v0 + 192) = v6;
  uint64_t v7 = *v6;
  uint64_t v8 = *(void *)(*MEMORY[0x1E4FBBAB0] + *v6 + 16);
  *(void *)(v0 + 200) = v8;
  uint64_t v9 = (uint64_t)v6 + v8;
  uint64_t v10 = *(unsigned int *)(v7 + 48);
  *(_DWORD *)(v0 + 264) = v10;
  uint64_t v11 = (os_unfair_lock_s *)((char *)v6 + ((v10 + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v11);
  sub_1D6E9A6C8(v9, &v14);
  os_unfair_lock_unlock(v11);
  *(void *)(v0 + 208) = v14;
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v12;
  void *v12 = v0;
  v12[1] = sub_1D6E9C014;
  return MEMORY[0x1F414B840](v0 + 16);
}

uint64_t sub_1D6E9C014()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D6E9C800;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1D6E9C130;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E9C130()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 232) = v1;
  long long v23 = *(_OWORD *)(v0 + 24);
  sub_1D6FA8130();
  swift_unknownObjectRetain_n();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v24 = v6;
    *(void *)(v0 + 40) = v1;
    *(_OWORD *)(v0 + 48) = v23;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8F28);
    uint64_t v7 = sub_1D6FA9940();
    *(void *)(v0 + 64) = sub_1D683E928(v7, v8, &v24);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1D6748000, v2, v3, "Requesting key context over %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v6, -1, -1);
    MEMORY[0x1D9468AD0](v5, -1, -1);

    v22(v21, v4);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 144);
    swift_unknownObjectRelease_n();

    v9(v10, v11);
  }
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 96);
  swift_getObjectType();
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, *MEMORY[0x1E4F9AE50], v15);
  sub_1D6FA3AE0();
  uint64_t v16 = sub_1D6FA0920();
  sub_1D6FA6B90();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  uint64_t v17 = swift_task_alloc();
  *(void *)(v0 + 240) = v17;
  *(void *)(v17 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore/SeymourServices/Key Delivery/Coordinators/Remote"
                          "KeyDeliveryParticipantCoordinator.swift";
  *(void *)(v17 + 24) = 133;
  *(unsigned char *)(v17 + 32) = 2;
  *(void *)(v17 + 40) = 236;
  *(void *)(v17 + 48) = v12;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1D6E9C4B0;
  uint64_t v19 = *(void *)(v0 + 72);
  return MEMORY[0x1F4188160](v19, 0, 0, 0xD000000000000013, 0x80000001D6FC9B90, sub_1D6E9EEAC, v17, v16);
}

uint64_t sub_1D6E9C4B0()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1D6E9C744;
  }
  else
  {
    uint64_t v5 = v2[16];
    uint64_t v4 = v2[17];
    uint64_t v6 = v2[15];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    os_log_type_t v3 = sub_1D6E9C5F4;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

void sub_1D6E9C5F4()
{
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 88);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(v0 + 264) + 3) & 0x1FFFFFFFCLL));
  uint64_t v5 = v2 + *(void *)(v0 + 200);
  *(void *)(swift_task_alloc() + 16) = v3;
  os_unfair_lock_lock(v4);
  sub_1D6E9EEC4(v5);
  if (v1)
  {
    uint64_t v6 = (os_unfair_lock_s *)(*(void *)(v0 + 192) + ((*(unsigned int *)(v0 + 264) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_unlock(v6);
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(*(void *)(v0 + 192)
                                           + ((*(unsigned int *)(v0 + 264) + 3) & 0x1FFFFFFFCLL)));
    swift_unknownObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(void (**)(void))(v0 + 8);
    v7();
  }
}

uint64_t sub_1D6E9C744()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D6E9C800()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6E9C894(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v3 = sub_1D6FA3AE0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)v41 - v8;
  uint64_t v10 = sub_1D6FA8C50();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for RemoteKeyDeliveryParticipantCoordinator.State();
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (void *)((char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v19 = (char *)v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6E9ED78(a1, (uint64_t)v16);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_1D6DC23A8((uint64_t)v16);
  }
  uint64_t v49 = v6;
  uint64_t v50 = v11;
  uint64_t v51 = v10;
  uint64_t v20 = *v16;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188);
  sub_1D6E9EDDC((uint64_t)v16 + *(int *)(v21 + 48), (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v19, 1, v53) == 1)
  {
    uint64_t v46 = v21;
    uint64_t v47 = v20;
    uint64_t v22 = (void *)a1;
    sub_1D6DC23A8(a1);
    long long v23 = v13;
    sub_1D6FA8130();
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
    uint64_t v25 = v9;
    uint64_t v26 = v52;
    uint64_t v48 = v54 + 16;
    v24(v9, v52, v53);
    uint64_t v27 = sub_1D6FA8C40();
    os_log_type_t v28 = sub_1D6FAA180();
    int v45 = v28;
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v30 = v50;
    if (v29)
    {
      uint64_t v31 = swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      uint64_t v57 = v43;
      *(_DWORD *)uint64_t v31 = 141558274;
      uint64_t v55 = 1752392040;
      v41[2] = &v56;
      sub_1D6FAA4A0();
      *(_WORD *)(v31 + 12) = 2080;
      v41[1] = v31 + 14;
      os_log_t v42 = v27;
      uint64_t v44 = v14;
      uint64_t v32 = v53;
      v24(v49, (uint64_t)v25, v53);
      uint64_t v33 = sub_1D6FA9940();
      uint64_t v49 = v23;
      uint64_t v55 = sub_1D683E928(v33, v34, &v57);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v25, v32);
      os_log_t v35 = v42;
      _os_log_impl(&dword_1D6748000, v42, (os_log_type_t)v45, "Capturing first playback context: %{mask.hash}s", (uint8_t *)v31, 0x16u);
      uint64_t v36 = v43;
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v36, -1, -1);
      uint64_t v37 = v31;
      uint64_t v26 = v52;
      MEMORY[0x1D9468AD0](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v49, v51);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v25, v53);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v51);
    }
    sub_1D6753E1C((uint64_t)v19, &qword_1EA807190);
    uint64_t v39 = (char *)v22 + *(int *)(v46 + 48);
    *uint64_t v22 = v47;
    uint64_t v40 = v53;
    v24(v39, v26, v53);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v39, 0, 1, v40);
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    swift_release();
    return sub_1D6753E1C((uint64_t)v19, &qword_1EA807190);
  }
}

uint64_t sub_1D6E9CD9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[10] = a2;
  v3[11] = a3;
  v3[9] = a1;
  uint64_t v4 = sub_1D6FA70D0();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA800220);
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v6 = sub_1D6FA8C50();
  v3[18] = v6;
  v3[19] = *(void *)(v6 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E9CF2C, 0, 0);
}

uint64_t sub_1D6E9CF2C()
{
  uint64_t v12 = v0;
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[10];
  sub_1D6FA8130();
  sub_1D6FA8C30();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[22] = v5;
  v0[23] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v2);
  uint64_t v6 = *(void *)(v4 + 184);
  uint64_t v7 = v6 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v6 + 16);
  uint64_t v8 = (os_unfair_lock_s *)(v6 + ((*(unsigned int *)(*(void *)v6 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v8);
  sub_1D6E9A6C8(v7, &v11);
  os_unfair_lock_unlock(v8);
  v0[24] = v11;
  uint64_t v9 = (void *)swift_task_alloc();
  v0[25] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1D6E9D0E0;
  return MEMORY[0x1F414B840](v0 + 2);
}

uint64_t sub_1D6E9D0E0()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D6E9D814;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1D6E9D1FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6E9D1FC()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  *(void *)(v0 + 216) = v1;
  long long v23 = *(_OWORD *)(v0 + 24);
  sub_1D6FA8130();
  swift_unknownObjectRetain_n();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v4 = *(void *)(v0 + 144);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v24 = v6;
    *(void *)(v0 + 40) = v1;
    *(_OWORD *)(v0 + 48) = v23;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8F28);
    uint64_t v7 = sub_1D6FA9940();
    *(void *)(v0 + 64) = sub_1D683E928(v7, v8, &v24);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1D6748000, v2, v3, "Requesting key context renewal over %{public}s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v6, -1, -1);
    MEMORY[0x1D9468AD0](v5, -1, -1);

    v22(v21, v4);
  }
  else
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v0 + 176);
    uint64_t v10 = *(void *)(v0 + 160);
    uint64_t v11 = *(void *)(v0 + 144);
    swift_unknownObjectRelease_n();

    v9(v10, v11);
  }
  uint64_t v12 = *(void *)(v0 + 136);
  uint64_t v14 = *(void *)(v0 + 104);
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v15 = *(void *)(v0 + 96);
  swift_getObjectType();
  (*(void (**)(uint64_t, void, uint64_t))(v14 + 104))(v13, *MEMORY[0x1E4F9AE80], v15);
  sub_1D6FA3AE0();
  uint64_t v16 = sub_1D6FA0920();
  sub_1D6FA6B90();
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  uint64_t v17 = swift_task_alloc();
  *(void *)(v0 + 224) = v17;
  *(void *)(v17 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore/SeymourServices/Key Delivery/Coordinators/Remote"
                          "KeyDeliveryParticipantCoordinator.swift";
  *(void *)(v17 + 24) = 133;
  *(unsigned char *)(v17 + 32) = 2;
  *(void *)(v17 + 40) = 255;
  *(void *)(v17 + 48) = v12;
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_1D6E9D57C;
  uint64_t v19 = *(void *)(v0 + 72);
  return MEMORY[0x1F4188160](v19, 0, 0, 0xD000000000000013, 0x80000001D6FC9B90, sub_1D6E9EEAC, v17, v16);
}

uint64_t sub_1D6E9D57C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v3 = sub_1D6E9D758;
  }
  else
  {
    uint64_t v5 = v2[16];
    uint64_t v4 = v2[17];
    uint64_t v6 = v2[15];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    os_log_type_t v3 = sub_1D6E9D6C0;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D6E9D6C0()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6E9D758()
{
  uint64_t v2 = v0[16];
  uint64_t v1 = v0[17];
  uint64_t v3 = v0[15];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D6E9D814()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6E9D8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  uint64_t v4 = sub_1D6FA70D0();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
  v3[12] = v5;
  v3[13] = *(void *)(v5 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v6 = sub_1D6FA8C50();
  v3[15] = v6;
  v3[16] = *(void *)(v6 - 8);
  v3[17] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6E9DA28, 0, 0);
}

uint64_t sub_1D6E9DA28()
{
  uint64_t v29 = v0;
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(*(void *)(v0 + 56) + 184);
  *(void *)(swift_task_alloc() + 16) = v1;
  uint64_t v3 = v2 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_1D6E9ED44(v3, (uint64_t)&v27);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v27;
  *(void *)(v0 + 144) = v27;
  long long v26 = v28;
  swift_task_dealloc();
  sub_1D6FA8130();
  swift_unknownObjectRetain_n();
  uint64_t v6 = sub_1D6FA8C40();
  os_log_type_t v7 = sub_1D6FAA180();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = *(void *)(v0 + 128);
  uint64_t v9 = *(void *)(v0 + 136);
  uint64_t v11 = *(void *)(v0 + 120);
  if (v8)
  {
    uint64_t v25 = *(void *)(v0 + 136);
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    *(void *)(v0 + 16) = v5;
    *(_OWORD *)(v0 + 24) = v26;
    swift_unknownObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8F28);
    uint64_t v14 = sub_1D6FA9940();
    *(void *)(v0 + 40) = sub_1D683E928(v14, v15, &v27);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease_n();
    _os_log_impl(&dword_1D6748000, v6, v7, "Requesting key context release over %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v13, -1, -1);
    MEMORY[0x1D9468AD0](v12, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v25, v11);
  }
  else
  {
    swift_unknownObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  uint64_t v16 = *(void *)(v0 + 112);
  uint64_t v18 = *(void *)(v0 + 80);
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v19 = *(void *)(v0 + 72);
  swift_getObjectType();
  (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v17, *MEMORY[0x1E4F9AF00], v19);
  sub_1D6FA3AE0();
  sub_1D6FA6BA0();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  uint64_t v20 = swift_task_alloc();
  *(void *)(v0 + 152) = v20;
  *(void *)(v20 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore/SeymourServices/Key Delivery/Coordinators/Remote"
                          "KeyDeliveryParticipantCoordinator.swift";
  *(void *)(v20 + 24) = 133;
  *(unsigned char *)(v20 + 32) = 2;
  *(void *)(v20 + 40) = 280;
  *(void *)(v20 + 48) = v16;
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v21;
  *uint64_t v21 = v0;
  v21[1] = sub_1D6E9DE88;
  uint64_t v22 = *(void *)(v0 + 48);
  uint64_t v23 = MEMORY[0x1E4FBC848] + 8;
  return MEMORY[0x1F4188160](v22, 0, 0, 0xD000000000000013, 0x80000001D6FC9B90, sub_1D6E9ED60, v20, v23);
}

uint64_t sub_1D6E9DE88()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1D6E9E058;
  }
  else
  {
    uint64_t v5 = v2[13];
    uint64_t v4 = v2[14];
    uint64_t v6 = v2[12];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1D6E9DFCC;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D6E9DFCC()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6E9E058()
{
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D6E9E10C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v90 = a3;
  uint64_t v101 = a2;
  uint64_t v104 = (uint64_t *)a1;
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8071A0);
  MEMORY[0x1F4188790](v93);
  uint64_t v103 = (uint64_t)v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1D6FA3AE0();
  uint64_t v105 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v91 = (char *)v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  v94 = (char *)v86 - v6;
  MEMORY[0x1F4188790](v7);
  uint64_t v100 = (char *)v86 - v8;
  uint64_t v9 = type metadata accessor for RemoteKeyDeliveryParticipantCoordinator.State();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char **)((char *)v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
  MEMORY[0x1F4188790](v89);
  uint64_t v92 = (uint64_t)v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v15 = (char *)v86 - v14;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)v86 - v17;
  MEMORY[0x1F4188790](v19);
  uint64_t v98 = (uint64_t)v86 - v20;
  uint64_t v21 = sub_1D6FA8C50();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v99 = (void (*)(char *, uint64_t, uint64_t))((char *)v86 - v26);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)v86 - v28;
  sub_1D6FA8130();
  sub_1D6FA8C30();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v96 = v22 + 8;
  uint64_t v97 = v21;
  uint64_t v31 = v21;
  uint64_t v32 = (uint64_t)v104;
  v30(v29, v31);
  sub_1D6E9ED78(v32, (uint64_t)v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v95 = v30;
  if (EnumCaseMultiPayload == 1)
  {
    v86[0] = v29;
    uint64_t v87 = v15;
    v86[1] = v9;
    uint64_t v88 = v24;
    uint64_t v100 = *v11;
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807188);
    uint64_t v35 = v98;
    sub_1D6E9EDDC((uint64_t)v11 + *(int *)(v34 + 48), v98);
    uint64_t v36 = v105;
    uint64_t v38 = v101;
    uint64_t v37 = v102;
    uint64_t v99 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
    v99(v18, v101, v102);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v18, 0, 1, v37);
    uint64_t v39 = v103;
    uint64_t v40 = v103 + *(int *)(v93 + 48);
    sub_1D6E9EE44((uint64_t)v18, v103);
    sub_1D6E9EE44(v35, v40);
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
    if (v41(v39, 1, v37) == 1)
    {
      uint64_t v42 = v35;
      sub_1D6753E1C((uint64_t)v18, &qword_1EA807190);
      int v43 = v41(v40, 1, v37);
      uint64_t v44 = v103;
      if (v43 == 1)
      {
        sub_1D6753E1C(v103, &qword_1EA807190);
LABEL_13:
        uint64_t v66 = v104;
        sub_1D6DC23A8((uint64_t)v104);
        sub_1D6FA8130();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAFE28);
        swift_allocObject();
        *uint64_t v66 = sub_1D6FA75C0();
        swift_storeEnumTagMultiPayload();
        sub_1D6FA75B0();
        sub_1D6753E1C(v42, &qword_1EA807190);
        return swift_release();
      }
    }
    else
    {
      uint64_t v44 = v103;
      uint64_t v57 = (uint64_t)v87;
      sub_1D6E9EE44(v103, (uint64_t)v87);
      if (v41(v40, 1, v37) != 1)
      {
        uint64_t v62 = v105;
        uint64_t v63 = v94;
        (*(void (**)(char *, uint64_t, uint64_t))(v105 + 32))(v94, v40, v37);
        sub_1D6E9F540(&qword_1EA8071B0, MEMORY[0x1E4F9D9A0]);
        char v64 = sub_1D6FA9890();
        id v65 = *(void (**)(char *, uint64_t))(v62 + 8);
        v65(v63, v37);
        sub_1D6753E1C((uint64_t)v18, &qword_1EA807190);
        v65((char *)v57, v37);
        sub_1D6753E1C(v103, &qword_1EA807190);
        uint64_t v42 = v98;
        unint64_t v58 = v99;
        if (v64) {
          goto LABEL_13;
        }
        goto LABEL_14;
      }
      sub_1D6753E1C((uint64_t)v18, &qword_1EA807190);
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v57, v37);
      uint64_t v42 = v98;
    }
    sub_1D6753E1C(v44, &qword_1EA8071A0);
    unint64_t v58 = v99;
LABEL_14:
    unint64_t v67 = v88;
    sub_1D6FA8130();
    uint64_t v68 = v38;
    uint64_t v69 = v91;
    v58(v91, v68, v37);
    uint64_t v70 = v92;
    sub_1D6E9EE44(v42, v92);
    uint64_t v71 = v37;
    uint64_t v72 = sub_1D6FA8C40();
    os_log_type_t v73 = sub_1D6FAA160();
    int v74 = v73;
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v75 = swift_slowAlloc();
      uint64_t v104 = (uint64_t *)swift_slowAlloc();
      v107 = v104;
      *(_DWORD *)uint64_t v75 = 141558786;
      uint64_t v106 = 1752392040;
      sub_1D6FAA4A0();
      *(_WORD *)(v75 + 12) = 2080;
      LODWORD(v103) = v74;
      v58(v94, (uint64_t)v69, v71);
      uint64_t v76 = sub_1D6FA9940();
      uint64_t v106 = sub_1D683E928(v76, v77, (uint64_t *)&v107);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v69, v71);
      *(_WORD *)(v75 + 22) = 2160;
      uint64_t v106 = 1752392040;
      sub_1D6FAA4A0();
      *(_WORD *)(v75 + 32) = 2080;
      uint64_t v78 = v92;
      uint64_t v79 = sub_1D6FAA470();
      uint64_t v106 = sub_1D683E928(v79, v80, (uint64_t *)&v107);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      sub_1D6753E1C(v78, &qword_1EA807190);
      _os_log_impl(&dword_1D6748000, v72, (os_log_type_t)v103, "Existing server playback context doesn't match what we have on file %{mask.hash}s != %{mask.hash}s", (uint8_t *)v75, 0x2Au);
      uint64_t v81 = (uint64_t)v104;
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v81, -1, -1);
      uint64_t v82 = v75;
      uint64_t v42 = v98;
      MEMORY[0x1D9468AD0](v82, -1, -1);

      uint64_t v83 = v88;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v105 + 8))(v69, v71);
      sub_1D6753E1C(v70, &qword_1EA807190);

      uint64_t v83 = v67;
    }
    v95(v83, v97);
    uint64_t v84 = sub_1D6FA3FF0();
    sub_1D6E9F540(&qword_1EA8071A8, MEMORY[0x1E4F9DC98]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v84 - 8) + 104))(v85, *MEMORY[0x1E4F9DC90], v84);
    swift_willThrow();
    swift_release();
    return sub_1D6753E1C(v42, &qword_1EA807190);
  }
  sub_1D6DC23A8((uint64_t)v11);
  sub_1D6FA8130();
  uint64_t v45 = v105;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  uint64_t v47 = v102;
  v46(v100, v101, v102);
  uint64_t v48 = sub_1D6FA8C40();
  os_log_type_t v49 = sub_1D6FAA160();
  int v50 = v49;
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v51 = swift_slowAlloc();
    LODWORD(v103) = v50;
    uint64_t v52 = v51;
    uint64_t v104 = (uint64_t *)swift_slowAlloc();
    v107 = v104;
    *(_DWORD *)uint64_t v52 = 141558274;
    uint64_t v106 = 1752392040;
    sub_1D6FAA4A0();
    *(_WORD *)(v52 + 12) = 2080;
    uint64_t v101 = v52 + 14;
    uint64_t v53 = v100;
    v46(v94, (uint64_t)v100, v47);
    uint64_t v54 = sub_1D6FA9940();
    uint64_t v106 = sub_1D683E928(v54, v55, (uint64_t *)&v107);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v53, v47);
    _os_log_impl(&dword_1D6748000, v48, (os_log_type_t)v103, "Not in the right state to release a context: %{mask.hash}s", (uint8_t *)v52, 0x16u);
    uint64_t v56 = (uint64_t)v104;
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v56, -1, -1);
    MEMORY[0x1D9468AD0](v52, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v100, v47);
  }

  v95((char *)v99, v97);
  uint64_t v59 = sub_1D6FA3FF0();
  sub_1D6E9F540(&qword_1EA8071A8, MEMORY[0x1E4F9DC98]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v59 - 8) + 104))(v60, *MEMORY[0x1E4F9DC88], v59);
  return swift_willThrow();
}

uint64_t sub_1D6E9ED44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6E9E10C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1D6E9ED60(uint64_t a1)
{
  return sub_1D6E9EFFC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D68F0368);
}

uint64_t sub_1D6E9ED78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteKeyDeliveryParticipantCoordinator.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6E9EDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6E9EE44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807190);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6E9EEAC(uint64_t a1)
{
  return sub_1D6E9EFFC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D68F3D98);
}

uint64_t sub_1D6E9EEC4(uint64_t a1)
{
  return sub_1D6E9C894(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D6E9EEE0(uint64_t a1)
{
  return sub_1D6E9EFFC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D68F39B8);
}

uint64_t sub_1D6E9EEF8(void *a1)
{
  return sub_1D6E9778C(a1);
}

uint64_t sub_1D6E9EF14(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D67824A8;
  return sub_1D6E979D0(a1, v1);
}

void sub_1D6E9EFB0(uint64_t a1)
{
}

uint64_t sub_1D6E9EFB8()
{
  return objectdestroy_5Tm(qword_1EBDB0430);
}

uint64_t sub_1D6E9EFC4(uint64_t a1, uint64_t a2)
{
  return sub_1D6E9F3D8(a1, a2, qword_1EBDB0430, sub_1D6C1DE98);
}

uint64_t sub_1D6E9EFE4(uint64_t a1)
{
  return sub_1D6E9EFFC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D68F16D8);
}

uint64_t sub_1D6E9EFFC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1D6E9F014()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6E9F04C()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D6E9F084@<X0>(uint64_t a1@<X8>)
{
  return sub_1D6A5B114(v1 + 16, a1);
}

uint64_t sub_1D6E9F0A0@<X0>(uint64_t a1@<X8>)
{
  return sub_1D6A23C58(*(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_1D6E9F0C0()
{
  uint64_t v1 = sub_1D6FA5FC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D6E9F18C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_1D6FA5FC0();
  uint64_t v8 = sub_1D6FA5FA0();
  sub_1D6E99B38(a1, a2, a3, v8, v9, a4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6E9F24C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D6E9F284()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6E9F2BC()
{
  return objectdestroy_5Tm(&qword_1EA803890);
}

uint64_t sub_1D6E9F2C8(uint64_t a1, uint64_t a2)
{
  return sub_1D6E9F3D8(a1, a2, &qword_1EA803890, sub_1D6B0092C);
}

uint64_t sub_1D6E9F2E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D6E9F328(uint64_t a1)
{
  return sub_1D6E9A3F8(a1, *(void *)(v1 + 16));
}

uint64_t sub_1D6E9F348()
{
  return objectdestroy_5Tm(&qword_1EA801740);
}

uint64_t sub_1D6E9F354(uint64_t a1, uint64_t a2)
{
  return sub_1D6E9F3D8(a1, a2, &qword_1EA801740, sub_1D6B00ABC);
}

uint64_t sub_1D6E9F374()
{
  return sub_1D6E9A588();
}

uint64_t sub_1D6E9F380()
{
  return objectdestroy_5Tm(&qword_1EA803870);
}

uint64_t sub_1D6E9F38C(uint64_t a1, uint64_t a2)
{
  return sub_1D6E9F3D8(a1, a2, &qword_1EA803870, sub_1D6B02274);
}

uint64_t sub_1D6E9F3AC()
{
  return objectdestroy_5Tm(&qword_1EBDB01B0);
}

uint64_t sub_1D6E9F3B8(uint64_t a1, uint64_t a2)
{
  return sub_1D6E9F3D8(a1, a2, &qword_1EBDB01B0, sub_1D6AFFC0C);
}

uint64_t sub_1D6E9F3D8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_1D6E9F49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RemoteKeyDeliveryParticipantCoordinator.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6E9F500()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6E9F540(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6E9F59C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0380);
    uint64_t v4 = swift_allocError();
    *uint64_t v5 = a2;
    id v6 = a2;
    return MEMORY[0x1F4188208](v2, v4);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 32);
    return MEMORY[0x1F4188200](v7);
  }
}

uint64_t sub_1D6E9F634()
{
  uint64_t v0 = sub_1D6FA8C50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v6[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1D6FA80E0();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1D6E9F840();
  swift_getObjectType();
  sub_1D6FA7BF0();
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1D6FA7020();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
  return swift_release();
}

uint64_t sub_1D6E9F7E8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D6E9F840();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D6E9F840()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9FBA0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v36 - v6;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9FC00);
  uint64_t v8 = *(void *)(v39 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v39);
  uint64_t v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v36 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
  uint64_t v40 = *(void *)(v13 - 8);
  uint64_t v41 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v38 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v0;
  uint64_t v15 = *__swift_project_boxed_opaque_existential_1((void *)(v0 + 32), *(void *)(v0 + 56))
      + OBJC_IVAR____TtC15SeymourServices33ServiceSubscriptionProviderBroker_state;
  swift_beginAccess();
  sub_1D6753FC0(v15, (uint64_t)&v45);
  if (v46)
  {
    sub_1D675401C(&v45, (uint64_t)v44);
    sub_1D6754034((uint64_t)v44, (uint64_t)v43);
    uint64_t v16 = swift_allocObject();
    sub_1D675401C(v43, v16 + 16);
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDA5C60);
    sub_1D6FA65A0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v44);
  }
  else
  {
    sub_1D6754118();
    uint64_t v17 = swift_allocError();
    *uint64_t v18 = 0;
    *(void *)(swift_allocObject() + 16) = v17;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDA5C60);
    sub_1D6FA65A0();
  }
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v5, v7, v1);
  unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v20 = (v3 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v21 + v19, v5, v1);
  uint64_t v22 = (void *)(v21 + v20);
  *uint64_t v22 = sub_1D6E9FE10;
  v22[1] = 0;
  sub_1D6FA33E0();
  sub_1D6FA6590();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v42;
  *(void *)(v23 + 16) = sub_1D6EA1B50;
  *(void *)(v23 + 24) = v24;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_1D682FCA0;
  *(void *)(v25 + 24) = v23;
  uint64_t v26 = v37;
  uint64_t v27 = v39;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v37, v12, v39);
  unint64_t v28 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v29 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v29 + v28, v26, v27);
  uint64_t v30 = (uint64_t (**)(uint64_t))(v29 + ((v9 + v28 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v30 = sub_1D6AB228C;
  v30[1] = (uint64_t (*)(uint64_t))v25;
  swift_retain();
  uint64_t v31 = v38;
  sub_1D6FA6590();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v27);
  uint64_t v32 = v41;
  uint64_t v33 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D6FA65C0();
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = 0;
  *(void *)(v34 + 24) = 0;
  v33(sub_1D67825EC, v34);
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v31, v32);
}

uint64_t sub_1D6E9FE10(void *a1)
{
  uint64_t v2 = sub_1D6FA5050();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA5030();
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 8))(v5, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D6E9FF2C(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA7EB0();
  uint64_t v75 = *(void *)(v2 - 8);
  uint64_t v76 = v2;
  MEMORY[0x1F4188790](v2);
  int v74 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1D6FA8C50();
  uint64_t v77 = *(void *)(v4 - 8);
  uint64_t v78 = v4;
  MEMORY[0x1F4188790](v4);
  unint64_t v67 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v72 = (char *)&v64 - v7;
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDAC300) - 8;
  MEMORY[0x1F4188790](v80);
  uint64_t v79 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9FA70);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v73 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v71 = (char *)&v64 - v12;
  MEMORY[0x1F4188790](v13);
  uint64_t v68 = (uint64_t)&v64 - v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v84 = (uint8_t *)&v64 - v16;
  uint64_t v17 = sub_1D6FA33E0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  MEMORY[0x1F4188790](v17);
  uint64_t v70 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v22 = (char *)&v64 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA7C50);
  MEMORY[0x1F4188790](v23 - 8);
  uint64_t v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1D6FA9D70();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v81 = v27;
  v27(v22, a1, v17);
  unint64_t v28 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 32);
  *(void *)(v29 + 16) = 0;
  *(void *)(v29 + 24) = 0;
  id v65 = v22;
  uint64_t v31 = v22;
  uint64_t v32 = (uint64_t)v84;
  char v64 = v30;
  v30((char *)(v29 + v28), (uint64_t)v31, v17);
  sub_1D6A5B7B4((uint64_t)v25, (uint64_t)&unk_1EA8071E8, v29);
  swift_release();
  uint64_t v33 = v85 + OBJC_IVAR____TtC15SeymourServices27ServiceSubscriptionObserver_serviceSubscription;
  swift_beginAccess();
  uint64_t v82 = v18 + 16;
  uint64_t v83 = a1;
  v27((char *)v32, a1, v17);
  uint64_t v34 = v18;
  uint64_t v36 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v35 = v18 + 56;
  uint64_t v69 = v36;
  v36((char *)v32, 0, 1, v17);
  uint64_t v37 = v79;
  uint64_t v38 = v79 + *(int *)(v80 + 56);
  uint64_t v80 = v33;
  sub_1D6BC7BF0(v33, v79);
  sub_1D6BC7BF0(v32, v38);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48);
  if (v39(v37, 1, v17) == 1)
  {
    sub_1D6753E1C(v32, &qword_1EBD9FA70);
    uint64_t v40 = v17;
    if (v39(v38, 1, v17) == 1)
    {
      sub_1D6753E1C(v37, &qword_1EBD9FA70);
LABEL_12:
      uint64_t v60 = v67;
      sub_1D6FA80E0();
      uint64_t v61 = sub_1D6FA8C40();
      os_log_type_t v62 = sub_1D6FAA180();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v63 = 0;
        _os_log_impl(&dword_1D6748000, v61, v62, "ServiceSubscriptionObserver service subscription matches cached value", v63, 2u);
        MEMORY[0x1D9468AD0](v63, -1, -1);
      }

      return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v60, v78);
    }
    goto LABEL_6;
  }
  uint64_t v41 = v68;
  sub_1D6BC7BF0(v37, v68);
  if (v39(v38, 1, v17) == 1)
  {
    sub_1D6753E1C((uint64_t)v84, &qword_1EBD9FA70);
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v41, v17);
    uint64_t v40 = v17;
LABEL_6:
    uint64_t v66 = v35;
    sub_1D6753E1C(v37, (uint64_t *)&unk_1EBDAC300);
    goto LABEL_7;
  }
  uint64_t v66 = v35;
  uint64_t v57 = v65;
  v64(v65, v38, v17);
  sub_1D6EA1AA8(&qword_1EA8071F0);
  char v58 = sub_1D6FA9890();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v34 + 8);
  v59(v57, v17);
  sub_1D6753E1C((uint64_t)v84, &qword_1EBD9FA70);
  v59((char *)v41, v17);
  sub_1D6753E1C(v37, &qword_1EBD9FA70);
  uint64_t v40 = v17;
  if (v58) {
    goto LABEL_12;
  }
LABEL_7:
  uint64_t v42 = v72;
  sub_1D6FA80E0();
  int v43 = v70;
  v81(v70, v83, v40);
  uint64_t v44 = sub_1D6FA8C40();
  os_log_type_t v45 = sub_1D6FAA180();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    v87[0] = v47;
    *(_DWORD *)uint64_t v46 = 136446210;
    uint64_t v84 = v46 + 4;
    sub_1D6EA1AA8((unint64_t *)&qword_1EBDAC2F8);
    uint64_t v48 = sub_1D6FAAA50();
    uint64_t v86 = sub_1D683E928(v48, v49, v87);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v43, v40);
    _os_log_impl(&dword_1D6748000, v44, v45, "ServiceSubscriptionObserver updating service subscription: %{public}s", v46, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v47, -1, -1);
    MEMORY[0x1D9468AD0](v46, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v43, v40);
  }

  (*(void (**)(char *, uint64_t))(v77 + 8))(v42, v78);
  int v50 = v71;
  v81(v71, v83, v40);
  v69(v50, 0, 1, v40);
  uint64_t v51 = (uint64_t)v50;
  uint64_t v52 = v73;
  sub_1D6EA19D8(v51, v73);
  uint64_t v53 = v80;
  swift_beginAccess();
  sub_1D6EA1A40(v52, v53);
  swift_endAccess();
  swift_getObjectType();
  uint64_t v54 = v74;
  sub_1D6FA7EA0();
  uint64_t v55 = v76;
  sub_1D6FA6FE0();
  return (*(uint64_t (**)(char *, uint64_t))(v75 + 8))(v54, v55);
}

uint64_t sub_1D6EA08E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[30] = a4;
  uint64_t v5 = sub_1D6FA05A0();
  v4[31] = v5;
  v4[32] = *(void *)(v5 - 8);
  v4[33] = swift_task_alloc();
  uint64_t v6 = sub_1D6FA8C50();
  v4[34] = v6;
  v4[35] = *(void *)(v6 - 8);
  v4[36] = swift_task_alloc();
  v4[37] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD890);
  v4[38] = swift_task_alloc();
  uint64_t v7 = sub_1D6FA0620();
  v4[39] = v7;
  v4[40] = *(void *)(v7 - 8);
  v4[41] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EA0A98, 0, 0);
}

uint64_t sub_1D6EA0A98()
{
  uint64_t v1 = v0[39];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[38];
  sub_1D6FA05B0();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1D6753E1C(v0[38], &qword_1EBDAD890);
    sub_1D6FA8000();
    uint64_t v4 = sub_1D6FA8C40();
    os_log_type_t v5 = sub_1D6FAA160();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl(&dword_1D6748000, v4, v5, "Unable to create Promoted Status Conditions Identifier", v6, 2u);
      MEMORY[0x1D9468AD0](v6, -1, -1);
    }
    uint64_t v7 = v0[37];
    uint64_t v8 = v0[34];
    uint64_t v9 = v0[35];

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  else
  {
    uint64_t v13 = v0[32];
    uint64_t v12 = v0[33];
    uint64_t v14 = v0[31];
    (*(void (**)(void, void, void))(v0[40] + 32))(v0[41], v0[38], v0[39]);
    sub_1D6FA0590();
    char v15 = sub_1D6FA33B0();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    uint64_t v16 = self;
    uint64_t v17 = sub_1D6FA05E0();
    v0[42] = v17;
    if (v15)
    {
      v0[10] = v0;
      v0[11] = sub_1D6EA0E08;
      uint64_t v18 = swift_continuation_init();
      v0[23] = MEMORY[0x1E4F143A8];
      v0[24] = 0x40000000;
      v0[25] = sub_1D6E9F59C;
      v0[26] = &block_descriptor_8;
      v0[27] = v18;
      objc_msgSend(v16, sel_setStatusCondition_completionHandler_, v17, v0 + 23);
      uint64_t v19 = v0 + 10;
    }
    else
    {
      v0[2] = v0;
      v0[3] = sub_1D6EA0FC8;
      uint64_t v20 = swift_continuation_init();
      v0[18] = MEMORY[0x1E4F143A8];
      v0[19] = 0x40000000;
      v0[20] = sub_1D6E9F59C;
      v0[21] = &block_descriptor_2;
      v0[22] = v20;
      objc_msgSend(v16, sel_clearStatusCondition_completionHandler_, v17, v0 + 18);
      uint64_t v19 = v0 + 2;
    }
    return MEMORY[0x1F41881E8](v19);
  }
}

uint64_t sub_1D6EA0E08()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 344) = v1;
  if (v1) {
    uint64_t v2 = sub_1D6EA10D8;
  }
  else {
    uint64_t v2 = sub_1D6EA0F18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EA0F18()
{
  uint64_t v1 = (void *)v0[42];
  (*(void (**)(void, void))(v0[40] + 8))(v0[41], v0[39]);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1D6EA0FC8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 352) = v1;
  if (v1) {
    uint64_t v2 = sub_1D6EA1388;
  }
  else {
    uint64_t v2 = sub_1D6EA1D38;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EA10D8()
{
  uint64_t v26 = v0;
  swift_willThrow();
  uint64_t v1 = *(void **)(v0 + 344);

  sub_1D6FA8000();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA160();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v23 = *(void *)(v0 + 312);
    uint64_t v24 = *(void *)(v0 + 328);
    uint64_t v6 = *(void *)(v0 + 280);
    uint64_t v21 = *(void *)(v0 + 288);
    uint64_t v22 = *(void *)(v0 + 320);
    uint64_t v20 = *(void *)(v0 + 272);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v25 = v8;
    *(void *)(v0 + 224) = v1;
    id v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0380);
    uint64_t v10 = sub_1D6FA9940();
    *(void *)(v0 + 232) = sub_1D683E928(v10, v11, &v25);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D6748000, v4, v5, "unable to update Promoted Status Condition: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v20);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 320);
    uint64_t v12 = *(void *)(v0 + 328);
    uint64_t v14 = *(void *)(v0 + 312);
    uint64_t v16 = *(void *)(v0 + 280);
    uint64_t v15 = *(void *)(v0 + 288);
    uint64_t v17 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1D6EA1388()
{
  uint64_t v26 = v0;
  swift_willThrow();
  uint64_t v1 = *(void **)(v0 + 352);

  sub_1D6FA8000();
  id v2 = v1;
  id v3 = v1;
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA160();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v23 = *(void *)(v0 + 312);
    uint64_t v24 = *(void *)(v0 + 328);
    uint64_t v6 = *(void *)(v0 + 280);
    uint64_t v21 = *(void *)(v0 + 288);
    uint64_t v22 = *(void *)(v0 + 320);
    uint64_t v20 = *(void *)(v0 + 272);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    uint64_t v25 = v8;
    *(void *)(v0 + 224) = v1;
    id v9 = v1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0380);
    uint64_t v10 = sub_1D6FA9940();
    *(void *)(v0 + 232) = sub_1D683E928(v10, v11, &v25);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D6748000, v4, v5, "unable to update Promoted Status Condition: %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v21, v20);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v24, v23);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 320);
    uint64_t v12 = *(void *)(v0 + 328);
    uint64_t v14 = *(void *)(v0 + 312);
    uint64_t v16 = *(void *)(v0 + 280);
    uint64_t v15 = *(void *)(v0 + 288);
    uint64_t v17 = *(void *)(v0 + 272);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1D6EA163C()
{
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  sub_1D6753E1C(v0 + OBJC_IVAR____TtC15SeymourServices27ServiceSubscriptionObserver_serviceSubscription, &qword_1EBD9FA70);

  return swift_deallocClassInstance();
}

uint64_t sub_1D6EA16C0()
{
  return type metadata accessor for ServiceSubscriptionObserver();
}

uint64_t type metadata accessor for ServiceSubscriptionObserver()
{
  uint64_t result = qword_1EBDA5778;
  if (!qword_1EBDA5778) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D6EA1714()
{
  sub_1D6EA17C8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1D6EA17C8()
{
  if (!qword_1EBD9F190)
  {
    sub_1D6FA33E0();
    unint64_t v0 = sub_1D6FAA480();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBD9F190);
    }
  }
}

uint64_t sub_1D6EA1820()
{
  uint64_t v1 = sub_1D6FA33E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D6EA18EC(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1D6FA33E0() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_1D67824A8;
  return sub_1D6EA08E0(a1, v5, v6, v7);
}

uint64_t sub_1D6EA19D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9FA70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6EA1A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9FA70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6EA1AA8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D6FA33E0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6EA1AEC()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D6EA1B24()
{
  return objectdestroy_5Tm((uint64_t *)&unk_1EBD9FBA0);
}

uint64_t sub_1D6EA1B30(uint64_t a1, uint64_t a2)
{
  return sub_1D6EA1BB8(a1, a2, (uint64_t *)&unk_1EBD9FBA0, sub_1D6B001D4);
}

uint64_t sub_1D6EA1B54()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6EA1B8C()
{
  return objectdestroy_5Tm((uint64_t *)&unk_1EBD9FC00);
}

uint64_t sub_1D6EA1B98(uint64_t a1, uint64_t a2)
{
  return sub_1D6EA1BB8(a1, a2, (uint64_t *)&unk_1EBD9FC00, sub_1D6B001AC);
}

uint64_t sub_1D6EA1BB8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_1D6EA1C7C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6EA1CBC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EA1CF4()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EA1D2C()
{
  return sub_1D6E9F7E8();
}

uint64_t sub_1D6EA1D3C(uint64_t a1)
{
  uint64_t v32 = sub_1D6FA64A0();
  uint64_t v3 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v31 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1D6FA0A80();
  uint64_t v5 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    v23[1] = v1;
    uint64_t v39 = MEMORY[0x1E4FBC860];
    sub_1D6BBC674(0, v8, 0);
    uint64_t v9 = v39;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807200);
    unint64_t v10 = (*(unsigned __int8 *)(*(void *)(v26 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v26 - 8) + 80);
    uint64_t v25 = *(void *)(*(void *)(v26 - 8) + 72);
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v28 = v5;
    uint64_t v29 = v3 + 16;
    void v23[2] = v5 + 32;
    uint64_t v24 = v11;
    uint64_t v12 = v10 + a1 + 56;
    uint64_t v27 = v7;
    do
    {
      uint64_t v37 = v9;
      int64_t v38 = v8;
      uint64_t v13 = *(void *)(v12 - 56);
      uint64_t v35 = *(void *)(v12 - 40);
      uint64_t v36 = v13;
      uint64_t v14 = *(void *)(v12 - 24);
      uint64_t v33 = *(void *)(v12 - 8);
      uint64_t v34 = v14;
      uint64_t v15 = v12 + *(int *)(v26 + 144);
      uint64_t v17 = *(void *)(v15 - 56);
      uint64_t v16 = *(void *)(v15 - 48);
      char v18 = *(unsigned char *)(v15 - 40);
      v24(v31, v12 - 56 + *(int *)(v26 + 96), v32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D67DE9F4(v17, v16, v18);
      uint64_t v19 = v27;
      uint64_t v9 = v37;
      sub_1D6FA09E0();
      uint64_t v39 = v9;
      unint64_t v21 = *(void *)(v9 + 16);
      unint64_t v20 = *(void *)(v9 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1D6BBC674(v20 > 1, v21 + 1, 1);
        uint64_t v9 = v39;
      }
      *(void *)(v9 + 16) = v21 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v9+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v21, v19, v30);
      v12 += v25;
      int64_t v8 = v38 - 1;
    }
    while (v38 != 1);
  }
  return v9;
}

void sub_1D6EA20B0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_1D6FA64A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v34 - v10;
  id v12 = objc_msgSend(a1, sel_identifier);
  if (!v12) {
    goto LABEL_13;
  }
  uint64_t v13 = v12;
  uint64_t v47 = a2;
  uint64_t v44 = sub_1D6FA98E0();

  id v14 = objc_msgSend(a1, sel_title);
  if (!v14)
  {
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v31 = sub_1D6FA2760();
    sub_1D6EA2B3C((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, *MEMORY[0x1E4F9CE00], v31);
    swift_willThrow();
LABEL_14:

    return;
  }
  uint64_t v15 = v14;
  uint64_t v42 = sub_1D6FA98E0();
  uint64_t v17 = v16;

  id v18 = objc_msgSend(a1, sel_artist);
  if (!v18)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v19 = v18;
  uint64_t v43 = v17;
  uint64_t v40 = sub_1D6FA98E0();
  uint64_t v21 = v20;

  id v22 = objc_msgSend(a1, sel_album);
  if (!v22)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  uint64_t v23 = v22;
  uint64_t v41 = v21;
  uint64_t v37 = sub_1D6FA98E0();
  uint64_t v25 = v24;

  id v26 = objc_msgSend(a1, sel_contentRating);
  if (!v26)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  uint64_t v27 = v26;
  uint64_t v39 = v6;
  uint64_t v35 = sub_1D6FA98E0();
  uint64_t v36 = v28;

  id v29 = objc_msgSend(a1, sel_artwork);
  uint64_t v38 = v25;
  if (v29)
  {
    uint64_t v30 = v29;
    sub_1D6FA03E0();
  }
  uint64_t v33 = v39;
  sub_1D6EA2B3C(&qword_1EA8019A8, MEMORY[0x1E4F9ECE8]);
  sub_1D6FA59C0();
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v9, v11, v5);
  objc_msgSend(a1, sel_startTime);
  objc_msgSend(a1, sel_duration);
  uint64_t v45 = v35;
  uint64_t v46 = v36;
  sub_1D67DE580();
  sub_1D6FA12D0();
  sub_1D6FA09E0();

  (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v5);
}

void sub_1D6EA251C(unsigned char *a1@<X8>)
{
  *a1 = 61;
}

void sub_1D6EA2528(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1D6EA2540(void *a1)
{
}

void sub_1D6EA255C(void *a1)
{
  uint64_t v3 = sub_1D6FA64A0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA09F0();
  uint64_t v7 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setIdentifier_, v7);

  sub_1D6FA0A20();
  uint64_t v8 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setTitle_, v8);

  sub_1D6FA0A30();
  uint64_t v9 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setArtist_, v9);

  sub_1D6FA0A10();
  uint64_t v10 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setAlbum_, v10);

  sub_1D6FA0A40();
  sub_1D6EA2B3C(&qword_1EA8019A8, MEMORY[0x1E4F9ECE8]);
  uint64_t v11 = sub_1D6FA59B0();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    uint64_t v13 = v11;
    unint64_t v14 = v12;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v15 = (void *)sub_1D6FA03C0();
    sub_1D6805140(v13, v14);
    objc_msgSend(a1, sel_setArtwork_, v15);

    sub_1D6FA0A70();
    objc_msgSend(a1, sel_setStartTime_);
    sub_1D6FA0A50();
    objc_msgSend(a1, sel_setDuration_);
    uint64_t v16 = sub_1D6FA0A00();
    uint64_t v18 = v17;
    char v20 = v19 & 1;
    v22[1] = v16;
    v22[2] = v17;
    char v23 = v19 & 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDAC950);
    sub_1D6FA12C0();
    sub_1D67A397C(v16, v18, v20);
    uint64_t v21 = (void *)sub_1D6FA98B0();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setContentRating_, v21);
  }
}

uint64_t _s11SeymourCore10MusicTrackV0A8ServicesE21representativeSamplesSayACGyFZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0170);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1D6FAE050;
  *(void *)(v0 + 32) = sub_1D6FA9980();
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1D6FAE050;
  *(void *)(v2 + 32) = sub_1D6FA9980();
  *(void *)(v2 + 40) = v3;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D6FAE050;
  *(void *)(v4 + 32) = sub_1D6FA9980();
  *(void *)(v4 + 40) = v5;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1D6FAE050;
  *(void *)(v6 + 32) = sub_1D6FA9980();
  *(void *)(v6 + 40) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8019C0);
  sub_1D6FA64A0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D6FAE050;
  sub_1D6FA6490();
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D6FA9760();
  sub_1D67DE52C();
  sub_1D67DE580();
  sub_1D6FA1330();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDAC950);
  uint64_t v8 = sub_1D6FA1020();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1D6EA1D3C(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1D6EA2AE4(uint64_t a1)
{
  uint64_t result = sub_1D6EA2B3C(&qword_1EA8071F8, MEMORY[0x1E4F9C060]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D6EA2B3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6EA2B84()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D6FA70D0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D6FA8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA80E0();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = *(void *)(v1 + 56);
  v14[1] = v1;
  v14[2] = swift_getObjectType();
  uint64_t v15 = v10;
  uint64_t v11 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v11(v5, *MEMORY[0x1E4F9AE00], v2);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1D6FA76C0();
  swift_release();
  unint64_t v12 = *(void (**)(char *, uint64_t))(v3 + 8);
  v12(v5, v2);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v15 = v10;
  v11(v5, *MEMORY[0x1E4F9AE98], v2);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA76A0();
  swift_release();
  v12(v5, v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1D6EA2EA8(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return MEMORY[0x1F4188298](sub_1D6EA2EC8, 0, 0);
}

uint64_t sub_1D6EA2EC8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 16, (uint64_t)(v0 + 2));
    swift_release();
    uint64_t v2 = v0[5];
    uint64_t v3 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
    uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[11] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1D678D6C8;
    return v7(v2, v3);
  }
  else
  {
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_1D6EA304C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
  return MEMORY[0x1F4188298](sub_1D6EA306C, 0, 0);
}

uint64_t sub_1D6EA306C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 16, (uint64_t)(v0 + 2));
    swift_release();
    uint64_t v2 = v0[5];
    uint64_t v3 = v0[6];
    __swift_project_boxed_opaque_existential_1(v0 + 2, v2);
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[12] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1D6EA31F8;
    return v8(v2, v3);
  }
  else
  {
    uint64_t v6 = (void *)v0[10];
    void *v6 = 0;
    v6[1] = 0;
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1D6EA31F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 104) = a1;
  *(void *)(v3 + 112) = a2;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D6EA32F8, 0, 0);
}

uint64_t sub_1D6EA32F8()
{
  uint64_t v1 = v0[14];
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v2 = (void *)v0[10];
  *uint64_t v2 = v0[13];
  v2[1] = v1;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1D6EA336C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScriptListener()
{
  return self;
}

uint64_t sub_1D6EA33D0()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EA3408()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1D6786194;
  v2[10] = v0;
  return MEMORY[0x1F4188298](sub_1D6EA2EC8, 0, 0);
}

uint64_t sub_1D6EA34B0(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1D67824A8;
  v4[10] = a1;
  v4[11] = v1;
  return MEMORY[0x1F4188298](sub_1D6EA306C, 0, 0);
}

BOOL sub_1D6EA355C(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_1D6FAA630()) {
      return 0;
    }
  }
  else if (*(void *)(a1 + 16))
  {
    return 0;
  }
  if ((a2 & 0xC000000000000001) != 0) {
    uint64_t v4 = sub_1D6FAA630();
  }
  else {
    uint64_t v4 = *(void *)(a2 + 16);
  }
  return v4 == 0;
}

uint64_t sub_1D6EA35D0(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xC000000000000001) != 0) {
    sub_1D6FAA630();
  }
  sub_1D6FAAA50();
  sub_1D6FA9A10();
  swift_bridgeObjectRelease();
  sub_1D6FA9A10();
  if ((a2 & 0xC000000000000001) != 0) {
    sub_1D6FAA630();
  }
  sub_1D6FAAA50();
  sub_1D6FA9A10();
  swift_bridgeObjectRelease();
  sub_1D6FA9A10();
  sub_1D6FA9E50();
  sub_1D6FA9A10();
  return 0;
}

uint64_t sub_1D6EA3748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v59[1] = a1;
  uint64_t v65 = sub_1D6FA6B10();
  uint64_t v7 = *(void *)(v65 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v65);
  char v64 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v66 = (char *)v59 - v10;
  unint64_t v63 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1D6FAA630();
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 16);
    swift_bridgeObjectRetain();
  }
  uint64_t v60 = a3;
  if (!v11)
  {
    swift_bridgeObjectRelease();
LABEL_27:
    sub_1D6FA8960();
    uint64_t v66 = (char *)(a3 & 0xC000000000000001);
    if ((a3 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1D6FAA630();
    }
    else
    {
      uint64_t v37 = *(void *)(a3 + 16);
      swift_bridgeObjectRetain();
    }
    if (v37)
    {
      uint64_t v71 = MEMORY[0x1E4FBC860];
      sub_1D6BBD0B4(0, v37 & ~(v37 >> 63), 0);
      if (v66)
      {
        uint64_t result = sub_1D6FAA5D0();
        unsigned __int8 v39 = 1;
      }
      else
      {
        uint64_t result = sub_1D6D12200(a3);
        unsigned __int8 v39 = v40 & 1;
      }
      uint64_t v68 = result;
      uint64_t v69 = v38;
      unsigned __int8 v70 = v39;
      if (v37 < 0)
      {
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
        return result;
      }
      uint64_t v41 = a3 & 0xFFFFFFFFFFFFFF8;
      if (a3 < 0) {
        uint64_t v41 = a3;
      }
      uint64_t v62 = v41;
      unint64_t v63 = v7 + 32;
      do
      {
        while (1)
        {
          uint64_t v50 = v68;
          uint64_t v51 = v69;
          char v52 = v70;
          sub_1D6D121EC(v68, v69, v70, a3);
          id v54 = v53;
          sub_1D6FA6B20();

          if (v4)
          {
            sub_1D6760274(v50, v51, v52);
            goto LABEL_52;
          }
          uint64_t v55 = v71;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1D6BBD0B4(0, *(void *)(v55 + 16) + 1, 1);
            uint64_t v55 = v71;
          }
          unint64_t v57 = *(void *)(v55 + 16);
          unint64_t v56 = *(void *)(v55 + 24);
          if (v57 >= v56 >> 1)
          {
            sub_1D6BBD0B4(v56 > 1, v57 + 1, 1);
            uint64_t v55 = v71;
          }
          *(void *)(v55 + 16) = v57 + 1;
          uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v55+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v57, v64, v65);
          uint64_t v71 = v55;
          if (v66) {
            break;
          }
          uint64_t v42 = v68;
          uint64_t v43 = v69;
          char v44 = v70;
          uint64_t v45 = sub_1D6D119B0(v68, v69, v70, a3);
          uint64_t v47 = v46;
          char v49 = v48;
          sub_1D6760274(v42, v43, v44);
          uint64_t v68 = v45;
          uint64_t v69 = v47;
          a3 = v60;
          unsigned __int8 v70 = v49 & 1;
          if (!--v37) {
            goto LABEL_53;
          }
        }
        if ((v70 & 1) == 0) {
          goto LABEL_58;
        }
        if (sub_1D6FAA5F0()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807230);
        char v58 = (void (*)(unsigned char *, void))sub_1D6FA9F90();
        sub_1D6FAA690();
        v58(v67, 0);
        --v37;
      }
      while (v37);
LABEL_53:
      sub_1D6760274(v68, v69, v70);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_1D6FA8940();
    return sub_1D6FA8980();
  }
  uint64_t v71 = MEMORY[0x1E4FBC860];
  sub_1D6BBD0B4(0, v11 & ~(v11 >> 63), 0);
  if (v63)
  {
    uint64_t result = sub_1D6FAA5D0();
    unsigned __int8 v14 = 1;
  }
  else
  {
    uint64_t result = sub_1D6D12200(a2);
    unsigned __int8 v14 = v15 & 1;
  }
  uint64_t v68 = result;
  uint64_t v69 = v13;
  unsigned __int8 v70 = v14;
  if (v11 < 0)
  {
    __break(1u);
    goto LABEL_56;
  }
  uint64_t v62 = v7 + 32;
  uint64_t v16 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v16 = a2;
  }
  v59[2] = v16;
  while (1)
  {
    uint64_t v28 = v68;
    uint64_t v29 = v69;
    char v30 = v70;
    sub_1D6D121EC(v68, v69, v70, a2);
    id v32 = v31;
    sub_1D6FA6B20();

    if (v4) {
      break;
    }
    uint64_t v33 = v71;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D6BBD0B4(0, *(void *)(v33 + 16) + 1, 1);
      uint64_t v33 = v71;
    }
    unint64_t v35 = *(void *)(v33 + 16);
    unint64_t v34 = *(void *)(v33 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_1D6BBD0B4(v34 > 1, v35 + 1, 1);
      uint64_t v33 = v71;
    }
    *(void *)(v33 + 16) = v35 + 1;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32))(v33+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v35, v66, v65);
    uint64_t v71 = v33;
    if (v63)
    {
      if ((v70 & 1) == 0) {
        goto LABEL_57;
      }
      if (sub_1D6FAA5F0()) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807230);
      uint64_t v36 = (void (*)(unsigned char *, void))sub_1D6FA9F90();
      sub_1D6FAA690();
      v36(v67, 0);
      if (!--v11)
      {
LABEL_26:
        sub_1D6760274(v68, v69, v70);
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
    else
    {
      uint64_t v17 = v68;
      uint64_t v18 = v69;
      char v19 = v70;
      uint64_t v20 = sub_1D6D119B0(v68, v69, v70, a2);
      uint64_t v22 = v21;
      uint64_t v61 = 0;
      uint64_t v23 = v7;
      uint64_t v24 = a2;
      char v26 = v25;
      sub_1D6760274(v17, v18, v19);
      uint64_t v68 = v20;
      uint64_t v69 = v22;
      unsigned __int8 v27 = v26 & 1;
      a2 = v24;
      uint64_t v7 = v23;
      a3 = v60;
      uint64_t v4 = v61;
      unsigned __int8 v70 = v27;
      if (!--v11) {
        goto LABEL_26;
      }
    }
  }
  sub_1D6760274(v28, v29, v30);
LABEL_52:
  swift_bridgeObjectRelease();
  return swift_release();
}

void sub_1D6EA3DDC(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v6 = sub_1D6EA3F6C(a1);
  if (!v2)
  {
    *(void *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(double *)(a2 + 16) = v6;
  }
}

uint64_t sub_1D6EA3E0C()
{
  return sub_1D6FA8630();
}

uint64_t sub_1D6EA3EB4()
{
  return sub_1D6EA35D0(*v0, v0[1]);
}

uint64_t sub_1D6EA3EC0()
{
  return sub_1D6EA3F28(&qword_1EA800AB8);
}

uint64_t sub_1D6EA3EF4()
{
  return sub_1D6EA3F28(&qword_1EA807228);
}

uint64_t sub_1D6EA3F28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1D6FA8990();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_1D6EA3F6C(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA6B10();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v42 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v43 = (char *)&v36 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v36 - v8;
  uint64_t v10 = sub_1D6FA8950();
  unint64_t v11 = MEMORY[0x1E4FBC860];
  unint64_t v44 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(v10 + 16);
  uint64_t v38 = a1;
  if (v12)
  {
    unint64_t v13 = sub_1D6EA4348();
    uint64_t v36 = v10;
    uint64_t v37 = v3;
    char v40 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    unint64_t v41 = v13;
    unint64_t v14 = v10 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v39 = *(void *)(v3 + 72);
    char v15 = (uint64_t (**)(char *, uint64_t))(v3 + 8);
    do
    {
      uint64_t v16 = v40;
      v40(v9, (char *)v14, v2);
      v16(v43, v9, v2);
      uint64_t v17 = sub_1D6FAA3C0();
      uint64_t v18 = (*v15)(v9, v2);
      if (v17)
      {
        MEMORY[0x1D9466B90](v18);
        if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D6FA9C40();
        }
        sub_1D6FA9C80();
        sub_1D6FA9C20();
      }
      v14 += v39;
      --v12;
    }
    while (v12);
    unint64_t v19 = v44;
    a1 = v38;
    uint64_t v3 = v37;
    unint64_t v11 = MEMORY[0x1E4FBC860];
  }
  else
  {
    unint64_t v19 = MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1D6C8123C(v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_1D6FA8930();
  unint64_t v44 = v11;
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    uint64_t v39 = v20;
    unint64_t v23 = sub_1D6EA4348();
    char v26 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v25 = v3 + 16;
    uint64_t v24 = v26;
    uint64_t v27 = *(unsigned __int8 *)(v25 + 64);
    uint64_t v37 = v21;
    uint64_t v28 = v21 + ((v27 + 32) & ~v27);
    char v40 = *(void (**)(char *, char *, uint64_t))(v25 + 56);
    unint64_t v41 = v23;
    do
    {
      uint64_t v29 = v42;
      v24(v42, v28, v2);
      v24(v43, (uint64_t)v29, v2);
      uint64_t v30 = sub_1D6FAA3C0();
      uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v25 - 8))(v29, v2);
      if (v30)
      {
        MEMORY[0x1D9466B90](v31);
        if (*(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1D6FA9C40();
        }
        sub_1D6FA9C80();
        sub_1D6FA9C20();
      }
      v28 += (uint64_t)v40;
      --v22;
    }
    while (v22);
    unint64_t v11 = v44;
    a1 = v38;
  }
  swift_bridgeObjectRelease();
  sub_1D6C8123C(v11);
  swift_bridgeObjectRelease();
  sub_1D6FA8970();
  double v33 = v32;
  uint64_t v34 = sub_1D6FA8990();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8))(a1, v34);
  return v33;
}

unint64_t sub_1D6EA4348()
{
  unint64_t result = qword_1EBDAD540;
  if (!qword_1EBDAD540)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBDAD540);
  }
  return result;
}

void *sub_1D6EA438C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SyncRecordChangeset(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t assignWithTake for SyncRecordChangeset(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for SyncRecordChangeset()
{
  return &type metadata for SyncRecordChangeset;
}

uint64_t sub_1D6EA448C(uint64_t a1)
{
  uint64_t v50 = sub_1D6FA05A0();
  uint64_t v3 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  char v49 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  char v48 = (char *)v35 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF620);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v47 = (uint64_t)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v46 = (char *)v35 - v10;
  uint64_t v45 = sub_1D6FA4480();
  uint64_t v11 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  unint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (v14)
  {
    v35[0] = v1;
    uint64_t v55 = MEMORY[0x1E4FBC860];
    sub_1D6BBC594(0, v14, 0);
    uint64_t v43 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA807238);
    uint64_t v16 = (uint64_t *)(a1
                    + ((*(unsigned __int8 *)(*((void *)v43 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v43 - 1) + 80)));
    uint64_t v42 = *(void *)(*((void *)v43 - 1) + 72);
    uint64_t v41 = sub_1D6FA2250();
    uint64_t v17 = *(void *)(v41 - 8);
    uint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v17 + 16);
    uint64_t v39 = v17 + 16;
    char v40 = v18;
    uint64_t v37 = v3 + 16;
    uint64_t v38 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
    v35[1] = v11 + 32;
    uint64_t v36 = v13;
    uint64_t v44 = v11;
    uint64_t v19 = (uint64_t)v46;
    uint64_t v20 = (void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v21 = v49;
    do
    {
      uint64_t v53 = *v16;
      int64_t v54 = v14;
      uint64_t v22 = (char *)v16 + v43[12];
      unint64_t v23 = (char *)v16 + v43[16];
      uint64_t v24 = (char *)v16 + v43[20];
      uint64_t v52 = *(void *)v24;
      int v51 = v24[8];
      uint64_t v25 = v41;
      v40(v19, (char *)v16 + v43[24], v41);
      (*v38)(v19, 0, 1, v25);
      char v26 = *v20;
      uint64_t v27 = v22;
      uint64_t v28 = v50;
      (*v20)(v48, v27, v50);
      uint64_t v29 = v28;
      uint64_t v30 = v36;
      v26(v21, v23, v29);
      sub_1D678AC3C(v19, v47);
      swift_bridgeObjectRetain();
      sub_1D6FA4420();
      sub_1D6753E1C(v19, &qword_1EA7FF620);
      uint64_t v15 = v55;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D6BBC594(0, *(void *)(v15 + 16) + 1, 1);
        uint64_t v15 = v55;
      }
      unint64_t v32 = *(void *)(v15 + 16);
      unint64_t v31 = *(void *)(v15 + 24);
      uint64_t v33 = v44;
      if (v32 >= v31 >> 1)
      {
        sub_1D6BBC594(v31 > 1, v32 + 1, 1);
        uint64_t v15 = v55;
      }
      uint64_t v16 = (uint64_t *)((char *)v16 + v42);
      *(void *)(v15 + 16) = v32 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v15+ ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))+ *(void *)(v33 + 72) * v32, v30, v45);
      uint64_t v55 = v15;
      int64_t v14 = v54 - 1;
    }
    while (v54 != 1);
  }
  return v15;
}

void sub_1D6EA490C(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF620);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v61 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  unint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = sub_1D6FA05A0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v60 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v62 = (char *)&v53 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v66 = (char *)&v53 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v65 = (char *)&v53 - v24;
  id v25 = objc_msgSend(a1, sel_identifier);
  if (!v25) {
    goto LABEL_14;
  }
  char v26 = v25;
  uint64_t v59 = sub_1D6FA98E0();
  uint64_t v63 = v27;

  id v64 = a1;
  id v28 = objc_msgSend(a1, sel_startDate);
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
    goto LABEL_10;
  }
  uint64_t v29 = v28;
  uint64_t v56 = a2;
  unint64_t v57 = v9;
  uint64_t v55 = v2;
  uint64_t v30 = v66;
  sub_1D6FA0560();

  unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v31(v15, v30, v16);
  unint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v32(v15, 0, 1, v16);
  uint64_t v58 = v17;
  uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v33(v15, 1, v16) == 1)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    a1 = v64;
LABEL_13:
    sub_1D6753E1C((uint64_t)v15, (uint64_t *)&unk_1EBD9F790);
LABEL_14:
    uint64_t v45 = sub_1D6FA2760();
    sub_1D6EA52A0((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v45 - 8) + 104))(v46, *MEMORY[0x1E4F9CE00], v45);
    swift_willThrow();

    return;
  }
  v31(v65, v15, v16);
  id v34 = objc_msgSend(v64, sel_endDate);
  if (!v34)
  {
    v32(v13, 1, 1, v16);
    a1 = v64;
    uint64_t v39 = v58;
    goto LABEL_12;
  }
  unint64_t v35 = v34;
  int64_t v54 = v31;
  uint64_t v36 = v66;
  sub_1D6FA0560();

  uint64_t v37 = v54;
  v54(v13, v36, v16);
  v32(v13, 0, 1, v16);
  unsigned int v38 = v33(v13, 1, v16);
  a1 = v64;
  uint64_t v39 = v58;
  if (v38 == 1)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v65, v16);
    uint64_t v15 = v13;
    goto LABEL_13;
  }
  v37(v62, v13, v16);
  objc_msgSend(a1, sel_heartRate);
  id v40 = objc_msgSend(a1, sel_queueIdentifier);
  if (v40)
  {
    uint64_t v41 = v40;
    sub_1D6FA98E0();

    id v42 = objc_msgSend(a1, sel_playlistIdentifier);
    if (v42)
    {
      uint64_t v43 = v42;
      sub_1D6FA98E0();
    }
    uint64_t v44 = (uint64_t)v57;
    sub_1D6FA2220();
    uint64_t v48 = sub_1D6FA2250();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v44, 0, 1, v48);
  }
  else
  {
    uint64_t v47 = sub_1D6FA2250();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v57, 1, 1, v47);
  }
  uint64_t v49 = v58;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
  v50(v66, v65, v16);
  v50(v60, v62, v16);
  uint64_t v51 = (uint64_t)v57;
  sub_1D678AC3C((uint64_t)v57, v61);
  sub_1D6FA4420();

  sub_1D6753E1C(v51, &qword_1EA7FF620);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v49 + 8);
  v52(v62, v16);
  v52(v65, v16);
}

uint64_t static HealthKitMindfulSession.representativeSamples()()
{
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA0480();
  sub_1D6FAA460();
  sub_1D6FA2250();
  sub_1D6FA9BF0();
  sub_1D6FA05A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA89B8);
  uint64_t v0 = sub_1D6FA1050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1D6EA448C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1D6EA50EC(unsigned char *a1@<X8>)
{
  *a1 = 48;
}

void sub_1D6EA50F8(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1D6EA5110(void *a1)
{
}

uint64_t sub_1D6EA5128(uint64_t a1)
{
  uint64_t result = sub_1D6EA52A0(&qword_1EBDA8C80, MEMORY[0x1E4F9DF10]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D6EA5180()
{
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA0480();
  sub_1D6FAA460();
  sub_1D6FA2250();
  sub_1D6FA9BF0();
  sub_1D6FA05A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA89B8);
  uint64_t v0 = sub_1D6FA1050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1D6EA448C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D6EA52A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D6EA52E8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF620);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  char v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v7 = sub_1D6FA05A0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA4430();
  uint64_t v11 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setIdentifier_, v11);

  sub_1D6FA4470();
  uint64_t v12 = (void *)sub_1D6FA04F0();
  unint64_t v13 = *(void (**)(char *, uint64_t))(v8 + 8);
  v13(v10, v7);
  objc_msgSend(a1, sel_setStartDate_, v12);

  sub_1D6FA4450();
  uint64_t v14 = (void *)sub_1D6FA04F0();
  v13(v10, v7);
  objc_msgSend(a1, sel_setEndDate_, v14);

  double v15 = COERCE_DOUBLE(sub_1D6FA4460());
  if (v16) {
    double v15 = 0.0;
  }
  objc_msgSend(a1, sel_setHeartRate_, v15);
  sub_1D6FA4440();
  uint64_t v17 = sub_1D6FA2250();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v6, 1, v17) == 1)
  {
    sub_1D6753E1C((uint64_t)v6, &qword_1EA7FF620);
    uint64_t v20 = 0;
  }
  else
  {
    sub_1D6FA2230();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v17);
    uint64_t v20 = (void *)sub_1D6FA98B0();
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = (uint64_t)v26;
  objc_msgSend(a1, sel_setQueueIdentifier_, v20);

  sub_1D6FA4440();
  if (v19((char *)v21, 1, v17) == 1)
  {
    sub_1D6753E1C(v21, &qword_1EA7FF620);
  }
  else
  {
    sub_1D6FA2240();
    uint64_t v23 = v22;
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v21, v17);
    if (v23)
    {
      uint64_t v24 = (void *)sub_1D6FA98B0();
      swift_bridgeObjectRelease();
      objc_msgSend(a1, sel_setPlaylistIdentifier_, v24);
    }
  }
}

ValueMetadata *type metadata accessor for ScheduledPrivateDataNetworkActivity()
{
  return &type metadata for ScheduledPrivateDataNetworkActivity;
}

SeymourServices::SQLiteResult_optional __swiftcall SQLiteResult.init(rawValue:)(Swift::Int32 rawValue)
{
  if (rawValue == 101) {
    char v1 = 2;
  }
  else {
    char v1 = 3;
  }
  if (rawValue == 100) {
    v2.value = SeymourServices_SQLiteResult_rowReady;
  }
  else {
    v2.value = v1;
  }
  if (rawValue) {
    return v2;
  }
  else {
    return 0;
  }
}

uint64_t SQLiteResult.rawValue.getter(char a1)
{
  return dword_1D6FC31F8[a1];
}

BOOL sub_1D6EA56D4(char *a1, char *a2)
{
  return dword_1D6FC31F8[*a1] == dword_1D6FC31F8[*a2];
}

int *sub_1D6EA56F8@<X0>(int *result@<X0>, char *a2@<X8>)
{
  int v2 = *result;
  if (*result) {
    char v3 = 3;
  }
  else {
    char v3 = 0;
  }
  if (v2 == 100) {
    char v4 = 1;
  }
  else {
    char v4 = v3;
  }
  if (v2 == 101) {
    char v5 = 2;
  }
  else {
    char v5 = v4;
  }
  *a2 = v5;
  return result;
}

void sub_1D6EA5728(_DWORD *a1@<X8>)
{
  *a1 = dword_1D6FC31F8[*v1];
}

unint64_t sub_1D6EA5744()
{
  unint64_t result = qword_1EA807240;
  if (!qword_1EA807240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA807240);
  }
  return result;
}

uint64_t sub_1D6EA5798()
{
  return sub_1D6FAACC0();
}

uint64_t sub_1D6EA57E8()
{
  return sub_1D6FAAC90();
}

uint64_t sub_1D6EA5820()
{
  return sub_1D6FAACC0();
}

unsigned char *storeEnumTagSinglePayload for SQLiteResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D6EA5938);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLiteResult()
{
  return &type metadata for SQLiteResult;
}

uint64_t sub_1D6EA5970(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1D6EA6190(a1, (uint64_t)sub_1D6778860, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1D6EA59FC()
{
  uint64_t v0 = sub_1D6FA1AB0();
  uint64_t v1 = sub_1D6DC81D8(v0);
  uint64_t v2 = sub_1D6FA1AB0();
  uint64_t v3 = sub_1D6DC81D8(v2);
  uint64_t v4 = sub_1D6EA5970(v3, v1);
  uint64_t v5 = sub_1D6EA5FEC(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  uint64_t v9 = v8 & *(void *)(v5 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  swift_retain();
  int64_t v11 = 0;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v9)
    {
      v9 &= v9 - 1;
      goto LABEL_5;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_79:
      __break(1u);
      goto LABEL_80;
    }
    if (v14 >= v10) {
      goto LABEL_25;
    }
    uint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_25;
      }
      uint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_25;
        }
        uint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15)
        {
          int64_t v11 = v14 + 3;
          if (v14 + 3 >= v10) {
            goto LABEL_25;
          }
          uint64_t v15 = *(void *)(v6 + 8 * v11);
          if (!v15)
          {
            int64_t v11 = v14 + 4;
            if (v14 + 4 >= v10) {
              goto LABEL_25;
            }
            uint64_t v15 = *(void *)(v6 + 8 * v11);
            if (!v15) {
              break;
            }
          }
        }
      }
    }
LABEL_24:
    uint64_t v9 = (v15 - 1) & v15;
LABEL_5:
    swift_bridgeObjectRetain();
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_1D6C5D1F0(v13);
    swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 5;
  if (v16 < v10)
  {
    uint64_t v15 = *(void *)(v6 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v11 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        if (v11 >= v10) {
          goto LABEL_25;
        }
        uint64_t v15 = *(void *)(v6 + 8 * v11);
        ++v16;
        if (v15) {
          goto LABEL_24;
        }
      }
LABEL_80:
      __break(1u);
      goto LABEL_81;
    }
    int64_t v11 = v16;
    goto LABEL_24;
  }
LABEL_25:
  swift_release_n();
  uint64_t v17 = sub_1D6FA1AA0();
  uint64_t v18 = sub_1D6DC81D8(v17);
  uint64_t v19 = sub_1D6FA1AA0();
  uint64_t v20 = sub_1D6DC81D8(v19);
  uint64_t v21 = sub_1D6EA5970(v20, v18);
  uint64_t v22 = sub_1D6EA5FEC(v21);
  swift_bridgeObjectRelease();
  uint64_t v23 = v22 + 64;
  uint64_t v24 = 1 << *(unsigned char *)(v22 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  uint64_t v26 = v25 & *(void *)(v22 + 64);
  int64_t v27 = (unint64_t)(v24 + 63) >> 6;
  swift_retain();
  int64_t v28 = 0;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  while (2)
  {
    if (v26)
    {
      v26 &= v26 - 1;
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v30 = swift_bridgeObjectRetain();
      sub_1D6C5D1F0(v30);
      swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  int64_t v31 = v28 + 1;
  if (__OFADD__(v28, 1)) {
    goto LABEL_79;
  }
  if (v31 < v27)
  {
    uint64_t v32 = *(void *)(v23 + 8 * v31);
    ++v28;
    if (!v32)
    {
      int64_t v28 = v31 + 1;
      if (v31 + 1 >= v27) {
        goto LABEL_49;
      }
      uint64_t v32 = *(void *)(v23 + 8 * v28);
      if (!v32)
      {
        int64_t v28 = v31 + 2;
        if (v31 + 2 >= v27) {
          goto LABEL_49;
        }
        uint64_t v32 = *(void *)(v23 + 8 * v28);
        if (!v32)
        {
          int64_t v28 = v31 + 3;
          if (v31 + 3 >= v27) {
            goto LABEL_49;
          }
          uint64_t v32 = *(void *)(v23 + 8 * v28);
          if (!v32)
          {
            int64_t v28 = v31 + 4;
            if (v31 + 4 >= v27) {
              goto LABEL_49;
            }
            uint64_t v32 = *(void *)(v23 + 8 * v28);
            if (!v32)
            {
              int64_t v33 = v31 + 5;
              if (v33 >= v27) {
                goto LABEL_49;
              }
              uint64_t v32 = *(void *)(v23 + 8 * v33);
              if (!v32)
              {
                while (1)
                {
                  int64_t v28 = v33 + 1;
                  if (__OFADD__(v33, 1)) {
                    break;
                  }
                  if (v28 >= v27) {
                    goto LABEL_49;
                  }
                  uint64_t v32 = *(void *)(v23 + 8 * v28);
                  ++v33;
                  if (v32) {
                    goto LABEL_48;
                  }
                }
LABEL_81:
                __break(1u);
                JUMPOUT(0x1D6EA5FCCLL);
              }
              int64_t v28 = v33;
            }
          }
        }
      }
    }
LABEL_48:
    uint64_t v26 = (v32 - 1) & v32;
    goto LABEL_29;
  }
LABEL_49:
  swift_release_n();
  uint64_t v34 = *(void *)(v29 + 16);
  if (v34)
  {
    swift_bridgeObjectRetain();
    unint64_t v35 = (unsigned char *)(v29 + 48);
    uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
    while (2)
    {
      uint64_t v38 = *((void *)v35 - 2);
      switch(*v35)
      {
        case 1:
          uint64_t v39 = 0;
          uint64_t v38 = *((void *)v35 - 2);
          char v40 = 1;
          goto LABEL_57;
        case 2:
          goto LABEL_52;
        case 3:
          uint64_t v39 = *((void *)v35 - 1);
          swift_bridgeObjectRetain();
          char v40 = 2;
          goto LABEL_57;
        default:
          uint64_t v39 = 0;
          char v40 = 0;
          uint64_t v38 = *((void *)v35 - 2);
LABEL_57:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v36 = sub_1D6AE3528(0, v36[2] + 1, 1, v36);
          }
          unint64_t v42 = v36[2];
          unint64_t v41 = v36[3];
          if (v42 >= v41 >> 1) {
            uint64_t v36 = sub_1D6AE3528((void *)(v41 > 1), v42 + 1, 1, v36);
          }
          v36[2] = v42 + 1;
          uint64_t v37 = &v36[3 * v42];
          v37[4] = v38;
          v37[5] = v39;
          *((unsigned char *)v37 + 48) = v40;
LABEL_52:
          v35 += 24;
          if (--v34) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  else
  {
    uint64_t v36 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  uint64_t v53 = sub_1D6C83980((uint64_t)v36);
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v12 + 16);
  if (v43)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = (unsigned char *)(v12 + 48);
    uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
    while (2)
    {
      uint64_t v47 = *((void *)v44 - 2);
      switch(*v44)
      {
        case 1:
          uint64_t v48 = 0;
          uint64_t v47 = *((void *)v44 - 2);
          char v49 = 1;
          goto LABEL_71;
        case 2:
          goto LABEL_66;
        case 3:
          uint64_t v48 = *((void *)v44 - 1);
          swift_bridgeObjectRetain();
          char v49 = 2;
          goto LABEL_71;
        default:
          uint64_t v48 = 0;
          char v49 = 0;
          uint64_t v47 = *((void *)v44 - 2);
LABEL_71:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v45 = sub_1D6AE3528(0, v45[2] + 1, 1, v45);
          }
          unint64_t v51 = v45[2];
          unint64_t v50 = v45[3];
          if (v51 >= v50 >> 1) {
            uint64_t v45 = sub_1D6AE3528((void *)(v50 > 1), v51 + 1, 1, v45);
          }
          v45[2] = v51 + 1;
          uint64_t v46 = &v45[3 * v51];
          v46[4] = v47;
          v46[5] = v48;
          *((unsigned char *)v46 + 48) = v49;
LABEL_66:
          v44 += 24;
          if (--v43) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  else
  {
    uint64_t v45 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  sub_1D6C83980((uint64_t)v45);
  swift_bridgeObjectRelease();
  return v53;
}

uint64_t sub_1D6EA5FEC(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA804968);
  uint64_t result = sub_1D6FAA8F0();
  uint64_t v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = result + 64;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    uint64_t v16 = 8 * i;
    uint64_t v17 = *(void *)(*(void *)(a1 + 48) + 8 * i);
    uint64_t result = *(void *)(*(void *)(a1 + 56) + 8 * i);
    *(void *)(v10 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v3[6] + v16) = v17;
    *(void *)(v3[7] + v16) = result;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v20;
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v9) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v5 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v9) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v9) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v9) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D6EA6190(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_1D6E11020(v7);
  if (!v9) {
    goto LABEL_23;
  }
  uint64_t v10 = v8;
  uint64_t v11 = v9;
  uint64_t v12 = (void *)*a5;
  unint64_t v14 = sub_1D6C6470C(v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      uint64_t v20 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      uint64_t v17 = (uint64_t)sub_1D6C7B620();
      uint64_t v20 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v20[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v22 = 8 * v14;
    *(void *)(v20[6] + v22) = v10;
    *(void *)(v20[7] + v22) = v11;
    uint64_t v23 = v20[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v20[2] = v25;
LABEL_13:
    uint64_t v26 = sub_1D6E11020(v17);
    if (v27)
    {
      uint64_t v28 = v26;
      uint64_t v29 = v27;
      do
      {
        uint64_t v34 = (void *)*a5;
        unint64_t v32 = sub_1D6C6470C(v28);
        uint64_t v36 = v34[2];
        BOOL v37 = (v35 & 1) == 0;
        BOOL v24 = __OFADD__(v36, v37);
        uint64_t v38 = v36 + v37;
        if (v24) {
          goto LABEL_24;
        }
        char v39 = v35;
        if (v34[3] < v38)
        {
          sub_1D6C6FCC0(v38, 1);
          unint64_t v32 = sub_1D6C6470C(v28);
          if ((v39 & 1) != (v40 & 1)) {
            goto LABEL_26;
          }
        }
        unint64_t v41 = (void *)*a5;
        if (v39)
        {
          uint64_t v30 = v41[7];
          uint64_t v31 = 8 * v32;
          unint64_t v32 = swift_bridgeObjectRelease();
          *(void *)(v30 + v31) = v29;
        }
        else
        {
          v41[(v32 >> 6) + 8] |= 1 << v32;
          uint64_t v42 = 8 * v32;
          *(void *)(v41[6] + v42) = v28;
          *(void *)(v41[7] + v42) = v29;
          uint64_t v43 = v41[2];
          BOOL v24 = __OFADD__(v43, 1);
          uint64_t v44 = v43 + 1;
          if (v24) {
            goto LABEL_25;
          }
          v41[2] = v44;
        }
        uint64_t v28 = sub_1D6E11020(v32);
        uint64_t v29 = v33;
      }
      while (v33);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D677886C();
    return swift_release();
  }
  sub_1D6C6FCC0(v17, a4 & 1);
  uint64_t v17 = sub_1D6C6470C(v10);
  if ((v18 & 1) == (v19 & 1))
  {
    unint64_t v14 = v17;
    uint64_t v20 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v21 = v20[7];
    uint64_t v17 = swift_bridgeObjectRelease();
    *(void *)(v21 + 8 * v14) = v11;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_1D6FAAB00();
  __break(1u);
  return result;
}

uint64_t RPDeviceChangeFlags.logOutput.getter(__int16 a1)
{
  strcpy((char *)v3, "ChangeFlags: ");
  HIWORD(v3[1]) = -4864;
  if (a1)
  {
    sub_1D6FA9A10();
    if ((a1 & 2) == 0)
    {
LABEL_3:
      if ((a1 & 4) == 0) {
        goto LABEL_4;
      }
      goto LABEL_16;
    }
  }
  else if ((a1 & 2) == 0)
  {
    goto LABEL_3;
  }
  sub_1D6FA9A10();
  if ((a1 & 4) == 0)
  {
LABEL_4:
    if ((a1 & 8) == 0) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
LABEL_16:
  sub_1D6FA9A10();
  if ((a1 & 8) != 0) {
LABEL_5:
  }
    sub_1D6FA9A10();
LABEL_6:
  if ((a1 & 0x10) != 0)
  {
    sub_1D6FA9A10();
    if ((a1 & 0x20) == 0)
    {
LABEL_8:
      if ((a1 & 0x40) == 0) {
        goto LABEL_9;
      }
      goto LABEL_20;
    }
  }
  else if ((a1 & 0x20) == 0)
  {
    goto LABEL_8;
  }
  sub_1D6FA9A10();
  if ((a1 & 0x40) == 0)
  {
LABEL_9:
    if ((a1 & 0x80) == 0) {
      goto LABEL_10;
    }
    goto LABEL_21;
  }
LABEL_20:
  sub_1D6FA9A10();
  if ((a1 & 0x80) == 0)
  {
LABEL_10:
    if ((a1 & 0x100) == 0) {
      goto LABEL_11;
    }
LABEL_22:
    sub_1D6FA9A10();
    if ((a1 & 0x200) == 0) {
      return v3[0];
    }
    goto LABEL_12;
  }
LABEL_21:
  sub_1D6FA9A10();
  if ((a1 & 0x100) != 0) {
    goto LABEL_22;
  }
LABEL_11:
  if ((a1 & 0x200) != 0) {
LABEL_12:
  }
    sub_1D6FA9A10();
  return v3[0];
}

uint64_t sub_1D6EA65D8()
{
  return RPDeviceChangeFlags.logOutput.getter(*v0);
}

uint64_t sub_1D6EA65E0(uint64_t a1)
{
  uint64_t v33 = sub_1D6FA0BC0();
  uint64_t v3 = *(void *)(v33 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v33);
  unint64_t v32 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v31 = (char *)v27 - v6;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = MEMORY[0x1E4FBC860];
  if (!v7) {
    return v8;
  }
  v27[0] = v1;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1D6BBC234(0, v7, 0);
  uint64_t result = sub_1D6C909BC(a1);
  uint64_t v10 = result;
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  uint64_t v29 = a1;
  uint64_t v30 = a1 + 56;
  v27[2] = v3 + 32;
  v27[3] = v3 + 16;
  v27[1] = v3 + 8;
  uint64_t v28 = v3;
  while ((v10 & 0x8000000000000000) == 0 && v10 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v30 + (((unint64_t)v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v12) {
      goto LABEL_16;
    }
    uint64_t v15 = *(void *)(a1 + 48) + *(void *)(v3 + 72) * v10;
    BOOL v16 = v31;
    uint64_t v17 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v31, v15, v33);
    char v18 = v32;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v32, v16, v17);
    uint64_t v19 = sub_1D6FA0B20();
    uint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v18, v17);
    uint64_t v8 = v34;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D6BBC234(0, *(void *)(v8 + 16) + 1, 1);
      uint64_t v8 = v34;
    }
    unint64_t v23 = *(void *)(v8 + 16);
    unint64_t v22 = *(void *)(v8 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_1D6BBC234(v22 > 1, v23 + 1, 1);
      uint64_t v8 = v34;
    }
    *(void *)(v8 + 16) = v23 + 1;
    uint64_t v24 = v8 + 16 * v23;
    *(void *)(v24 + 32) = v19;
    *(void *)(v24 + 40) = v21;
    a1 = v29;
    uint64_t result = sub_1D6D119B0(v10, v12, v14 & 1, v29);
    uint64_t v10 = result;
    uint64_t v12 = v25;
    char v14 = v26 & 1;
    --v7;
    uint64_t v3 = v28;
    if (!v7)
    {
      sub_1D6760274(result, v25, v26 & 1);
      return v8;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D6EA68A8()
{
  uint64_t v30 = sub_1D6FA8CC0();
  uint64_t v33 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v29 = (char *)&v24 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_1D6FA8D00();
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  MEMORY[0x1F4188790](v1);
  uint64_t v27 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1D6FA8CB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (uint64_t *)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1D6FA8D20();
  uint64_t v26 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  char v13 = (char *)&v24 - v12;
  uint64_t v14 = sub_1D6FA8C50();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA8070();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  sub_1D6FA8D10();
  void *v6 = 2;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E4FBCAE8], v3);
  MEMORY[0x1D9465D50](v11, v6);
  (*(void (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
  v25(v11, v7);
  sub_1D67D9774(0, (unint64_t *)&qword_1EBDB01A0);
  char v18 = (void *)sub_1D6FAA220();
  aBlock[4] = sub_1D6EA73D0;
  aBlock[5] = v28;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D68D84A0;
  aBlock[3] = &block_descriptor_57;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v20 = v27;
  sub_1D6FA8CE0();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1D6EAD7C8((unint64_t *)&qword_1EBDB0350, MEMORY[0x1E4FBCB00]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDB0120);
  sub_1D6761180((unint64_t *)&qword_1EBDB0360, (uint64_t *)&unk_1EBDB0120);
  unint64_t v22 = v29;
  uint64_t v21 = v30;
  sub_1D6FAA590();
  MEMORY[0x1D9467220](v13, v20, v22, v19);
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v21);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v32);
  return ((uint64_t (*)(char *, uint64_t))v25)(v13, v26);
}

uint64_t sub_1D6EA6DFC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v69 = (char *)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v54 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v54 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v55 = (char *)&v54 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v63 = (char *)&v54 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v65 = (char *)&v54 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v66 = (char *)&v54 - v19;
  uint64_t v20 = *(void *)(a1 + 440);
  uint64_t v64 = a1;
  __swift_project_boxed_opaque_existential_1((void *)(a1 + 416), v20);
  sub_1D68CE300((uint64_t)&unk_1F2E41AE8, (uint64_t)v14);
  uint64_t v58 = v11;
  sub_1D6EA73D8((uint64_t)v11);
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v21(v8, v11, v2);
  unint64_t v22 = v21;
  uint64_t v62 = v21;
  uint64_t v23 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v24 = ((v23 + 16) & ~v23) + v4;
  uint64_t v25 = (v23 + 16) & ~v23;
  uint64_t v70 = v3;
  uint64_t v71 = v25;
  uint64_t v61 = v23 | 7;
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = *(void (**)(uint64_t, char *, uint64_t))(v3 + 32);
  v27(v26 + v25, v8, v2);
  uint64_t v60 = v27;
  uint64_t v28 = v69;
  uint64_t v29 = v55;
  uint64_t v67 = v3 + 16;
  v22(v69, v55, v2);
  unint64_t v68 = ((v24 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v30 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v59 = v30;
  uint64_t v31 = swift_allocObject();
  v27(v31 + v71, v28, v2);
  uint64_t v56 = v3 + 32;
  uint64_t v32 = (uint64_t (**)@<X0>(uint64_t@<X8>))(v31 + v30);
  char *v32 = sub_1D6776940;
  v32[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v26;
  uint64_t v69 = (char *)(MEMORY[0x1E4FBC848] + 8);
  uint64_t v33 = v63;
  sub_1D6FA6590();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v70 + 8);
  v70 += 8;
  v34(v58, v2);
  v34(v29, v2);
  unint64_t v57 = v34;
  char v35 = (void *)swift_allocObject();
  void v35[2] = 0xD000000000000065;
  v35[3] = 0x80000001D6FDEB50;
  v35[4] = 22;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1D6775A74;
  *(void *)(v36 + 24) = v35;
  BOOL v37 = v62;
  v62(v29, v33, v2);
  uint64_t v38 = swift_allocObject();
  char v39 = v29;
  char v40 = v60;
  v60(v38 + v71, v39, v2);
  unint64_t v41 = v59;
  uint64_t v42 = (uint64_t (**)(void *))(v38 + v59);
  *uint64_t v42 = sub_1D6775A94;
  v42[1] = (uint64_t (*)(void *))v36;
  uint64_t v43 = v65;
  sub_1D6FA6590();
  v34(v33, v2);
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v64;
  *(void *)(v44 + 16) = sub_1D6EAB950;
  *(void *)(v44 + 24) = v45;
  v37(v33, v43, v2);
  uint64_t v46 = swift_allocObject();
  v40(v46 + v71, v33, v2);
  uint64_t v47 = (uint64_t (**)(uint64_t))(v46 + v41);
  *uint64_t v47 = sub_1D67ED340;
  v47[1] = (uint64_t (*)(uint64_t))v44;
  swift_retain();
  uint64_t v48 = v66;
  sub_1D6FA6590();
  char v49 = (uint64_t (*)(char *, uint64_t))v57;
  v57(v43, v2);
  unint64_t v50 = v48;
  unint64_t v51 = (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_1D6FA65C0();
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_1D6EA7C28;
  *(void *)(v52 + 24) = 0;
  v51(sub_1D67825EC, v52);
  swift_release();
  swift_release();
  return v49(v50, v2);
}

uint64_t sub_1D6EA73D0()
{
  return sub_1D6EA6DFC(v0);
}

uint64_t sub_1D6EA73D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v53 = a1;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F1D0);
  uint64_t v3 = *(void *)(v45 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v45);
  uint64_t v6 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v44 - v7;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9FC30);
  uint64_t v9 = *(void *)(v49 - 8);
  uint64_t v46 = *(void *)(v9 + 64);
  uint64_t v10 = MEMORY[0x1F4188790](v49);
  uint64_t v47 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v44 = (char *)&v44 - v12;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
  uint64_t v13 = *(void *)(v52 - 8);
  uint64_t v51 = *(void *)(v13 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v52);
  unint64_t v50 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v48 = (char *)&v44 - v16;
  uint64_t v17 = sub_1D6FA8C50();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA8070();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v21 = *((void *)v2 + 75);
  uint64_t v22 = *((void *)v2 + 76);
  __swift_project_boxed_opaque_existential_1((void *)v2 + 72, v21);
  swift_retain();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA6310);
  sub_1D67D9FA0((uint64_t)sub_1D6EABF90, (uint64_t)v2, v21, v23, v22, (uint64_t)v8);
  swift_release();
  uint64_t v24 = v45;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v45);
  unint64_t v25 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v26 + v25, v6, v24);
  uint64_t v27 = (uint64_t (**)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))(v26 + ((v4 + v25 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v27 = sub_1D6EABFAC;
  v27[1] = v2;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA61A0);
  uint64_t v28 = v44;
  sub_1D6FA6590();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v24);
  uint64_t v29 = v47;
  uint64_t v30 = v49;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v47, v28, v49);
  unint64_t v31 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v32 = (v46 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v33 + v31, v29, v30);
  uint64_t v34 = (void (**)(uint64_t *))(v33 + v32);
  *uint64_t v34 = sub_1D6EABFE0;
  v34[1] = (void (*)(uint64_t *))v2;
  swift_retain();
  char v35 = v48;
  sub_1D6FA6590();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v28, v30);
  uint64_t v36 = v50;
  BOOL v37 = v35;
  uint64_t v38 = v52;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v50, v35, v52);
  unint64_t v39 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v40 = (v51 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v41 + v39, v36, v38);
  uint64_t v42 = (uint64_t (**)(uint64_t))(v41 + v40);
  *uint64_t v42 = sub_1D6EAA5E8;
  v42[1] = 0;
  sub_1D6FA6590();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v37, v38);
}

uint64_t sub_1D6EA79E0(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F1D0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = a1[75];
  uint64_t v10 = a1[76];
  __swift_project_boxed_opaque_existential_1(a1 + 72, v9);
  swift_retain();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA6310);
  sub_1D67D9FA0((uint64_t)sub_1D6EAB9DC, (uint64_t)a1, v9, v11, v10, (uint64_t)v8);
  swift_release();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1D6EAB9F8;
  *(void *)(v12 + 24) = a1;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v14 = (v4 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v15 + v13, v6, v2);
  uint64_t v16 = (void *)(v15 + v14);
  *uint64_t v16 = sub_1D6979FD0;
  v16[1] = v12;
  swift_retain();
  sub_1D6FA6590();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t sub_1D6EA7C28()
{
  uint64_t v0 = sub_1D6FA8C50();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA8070();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_1D6748000, v4, v5, "Recovery - Completed", v6, 2u);
    MEMORY[0x1D9468AD0](v6, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1D6EA7D5C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v111 = a1;
  v110 = a3;
  uint64_t v4 = sub_1D6FA05A0();
  MEMORY[0x1F4188790](v4 - 8);
  v123 = (char *)&v104 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F528);
  MEMORY[0x1F4188790](v126);
  v122 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_1D6FA0BC0();
  uint64_t v124 = *(void *)(v127 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v127);
  uint64_t v9 = (char *)&v104 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v104 - v10;
  uint64_t v12 = sub_1D6FA3B80();
  uint64_t v125 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  unint64_t v14 = (char *)&v104 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D6FA8C50();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v104 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v104 - v20;
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 496), *(void *)(a2 + 520));
  uint64_t v22 = v134;
  uint64_t result = sub_1D6FA6C00();
  if (!v22)
  {
    v128 = v21;
    uint64_t v129 = 0;
    v134 = v14;
    uint64_t v120 = v12;
    v121 = v11;
    v119 = v9;
    v107 = v19;
    uint64_t v108 = v16;
    uint64_t v109 = v15;
    uint64_t v24 = v131;
    uint64_t v25 = v132;
    uint64_t v26 = __swift_project_boxed_opaque_existential_1(v111, v111[3]);
    uint64_t v27 = (void *)*v26;
    uint64_t v28 = (void *)v26[1];
    char v29 = *((unsigned char *)v26 + 16);
    uint64_t v30 = v26[3];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA1EC0);
    uint64_t v31 = swift_allocObject();
    unint64_t v32 = &qword_1EBDB9E90;
    id v33 = v27;
    id v34 = v28;
    swift_bridgeObjectRetain();
    sub_1D6FA78B0();
    *(void *)(v31 + 16) = v33;
    *(void *)(v31 + 24) = v34;
    *(unsigned char *)(v31 + 32) = v29;
    *(void *)(v31 + 40) = v30;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDA6170);
    uint64_t v131 = v24;
    uint64_t v132 = v25;
    id v36 = sub_1D6B17620(KeyPath, 4, 0, 0, (uint64_t)&v131);
    swift_release();
    swift_beginAccess();
    id v37 = v36;
    uint64_t v38 = (void (*)(uint64_t *, void))sub_1D6FA78C0();
    unint64_t v40 = v39;
    MEMORY[0x1D9466B90]();
    if (*(void *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v40 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_33;
    }
    while (1)
    {
      sub_1D6FA9C80();
      sub_1D6FA9C20();
      v38(&v131, 0);
      swift_endAccess();

      uint64_t v41 = swift_getKeyPath();
      uint64_t v42 = sub_1D6FA1E90();
      uint64_t v43 = MEMORY[0x1E4FBB550];
      uint64_t v133 = MEMORY[0x1E4FBB550];
      uint64_t v131 = v42;
      id v44 = sub_1D6B17620(v41, 4, 0, 0, (uint64_t)&v131);
      swift_release();
      uint64_t v45 = swift_getKeyPath();
      uint64_t v46 = sub_1D6FA1E90();
      uint64_t v133 = v43;
      uint64_t v131 = v46;
      id v47 = sub_1D6B17620(v45, 4, 0, 0, (uint64_t)&v131);
      swift_release();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDAB080);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = xmmword_1D6FB1860;
      *(void *)(v48 + 32) = v44;
      *(void *)(v48 + 40) = v47;
      uint64_t v131 = v48;
      sub_1D6FA9C20();
      id v49 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA9550));
      sub_1D67D9774(0, (unint64_t *)&qword_1EBDA6510);
      id v50 = v44;
      id v51 = v47;
      uint64_t v52 = (void *)sub_1D6FA9B80();
      swift_bridgeObjectRelease();
      id v53 = objc_msgSend(v49, sel_initWithType_subpredicates_, 2, v52);

      swift_beginAccess();
      id v54 = v53;
      uint64_t v55 = (void (*)(uint64_t *, void))sub_1D6FA78C0();
      unint64_t v57 = v56;
      MEMORY[0x1D9466B90]();
      if (*(void *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v57 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D6FA9C40();
      }
      sub_1D6FA9C80();
      sub_1D6FA9C20();
      v55(&v131, 0);
      swift_endAccess();

      uint64_t v58 = v129;
      uint64_t v59 = sub_1D67B1254((void (*)(char *, uint64_t, uint64_t))0x64);
      if (v58)
      {
        swift_setDeallocating();

        swift_bridgeObjectRelease();
        uint64_t v60 = v31 + *v32;
        uint64_t v61 = sub_1D6FA7940();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
        return swift_deallocClassInstance();
      }
      uint64_t v62 = v59;
      uint64_t v129 = 0;
      swift_setDeallocating();

      swift_bridgeObjectRelease();
      uint64_t v63 = v31 + *v32;
      uint64_t v64 = sub_1D6FA7940();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
      swift_deallocClassInstance();
      uint64_t v65 = v128;
      sub_1D6FA8070();
      swift_bridgeObjectRetain_n();
      uint64_t v66 = sub_1D6FA8C40();
      os_log_type_t v67 = sub_1D6FAA180();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v69 = swift_slowAlloc();
        uint64_t v131 = v69;
        *(_DWORD *)uint64_t v68 = 141558274;
        uint64_t v130 = 1752392040;
        sub_1D6FAA4A0();
        *(_WORD *)(v68 + 12) = 2080;
        sub_1D6EAD7C8(&qword_1EBD9F7C0, MEMORY[0x1E4F9C110]);
        swift_bridgeObjectRetain();
        uint64_t v70 = sub_1D6FA9F00();
        uint64_t v31 = v71;
        swift_bridgeObjectRelease();
        uint64_t v130 = sub_1D683E928(v70, v31, &v131);
        sub_1D6FAA4A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D6748000, v66, v67, "Recovery - found bundles %{mask.hash}s", (uint8_t *)v68, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D9468AD0](v69, -1, -1);
        MEMORY[0x1D9468AD0](v68, -1, -1);

        uint64_t v72 = *(void (**)(char *, uint64_t))(v108 + 8);
        uint64_t v73 = v128;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v72 = *(void (**)(char *, uint64_t))(v108 + 8);
        uint64_t v73 = v65;
      }
      uint64_t v104 = v72;
      v72(v73, v109);
      uint64_t v38 = (void (*)(uint64_t *, void))v126;
      id v37 = v121;
      uint64_t v74 = swift_bridgeObjectRetain();
      uint64_t v106 = v62;
      uint64_t v75 = v129;
      uint64_t v76 = sub_1D6EAB158(v74);
      uint64_t v105 = v75;
      int64_t v77 = *(void *)(v76 + 16);
      if (!v77) {
        break;
      }
      uint64_t v131 = MEMORY[0x1E4FBC860];
      sub_1D6BBD8D4(0, v77, 0);
      uint64_t v79 = sub_1D6C909BC(v76);
      int v81 = v80 & 1;
      uint64_t v118 = v76 + 56;
      uint64_t v82 = v124;
      uint64_t v116 = v124 + 16;
      uint64_t v115 = v124 + 32;
      unsigned int v114 = *MEMORY[0x1E4F9D9F8];
      uint64_t v113 = v124 + 8;
      uint64_t v112 = v125 + 32;
      uint64_t v117 = v76;
      unint64_t v32 = (uint64_t *)v127;
      while ((v79 & 0x8000000000000000) == 0 && v79 < 1 << *(unsigned char *)(v76 + 32))
      {
        if (((*(void *)(v118 + (((unint64_t)v79 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v79) & 1) == 0) {
          goto LABEL_31;
        }
        if (*(_DWORD *)(v76 + 36) != v78) {
          goto LABEL_32;
        }
        LODWORD(v128) = v81;
        uint64_t v129 = v78;
        (*(void (**)(id, uint64_t, uint64_t *))(v82 + 16))(v37, *(void *)(v76 + 48) + *(void *)(v82 + 72) * v79, v32);
        uint64_t v83 = v119;
        (*(void (**)(char *, id, uint64_t *))(v82 + 32))(v119, v37, v32);
        sub_1D6FA0B20();
        uint64_t v84 = sub_1D6FA3B60();
        (*(void (**)(char *, void, uint64_t))(*(void *)(v84 - 8) + 104))(v122, v114, v84);
        swift_storeEnumTagMultiPayload();
        sub_1D6FA0590();
        sub_1D6FA3B20();
        (*(void (**)(char *, uint64_t *))(v82 + 8))(v83, v32);
        uint64_t v31 = v131;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D6BBD8D4(0, *(void *)(v31 + 16) + 1, 1);
          uint64_t v31 = v131;
        }
        uint64_t v85 = v125;
        unint64_t v87 = *(void *)(v31 + 16);
        unint64_t v86 = *(void *)(v31 + 24);
        uint64_t v88 = v134;
        if (v87 >= v86 >> 1)
        {
          sub_1D6BBD8D4(v86 > 1, v87 + 1, 1);
          uint64_t v85 = v125;
          uint64_t v31 = v131;
        }
        *(void *)(v31 + 16) = v87 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v85 + 32))(v31+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v87, v88, v120);
        uint64_t v131 = v31;
        uint64_t v76 = v117;
        uint64_t v89 = sub_1D6D119B0(v79, v129, v128 & 1, v117);
        uint64_t v79 = v89;
        int v81 = v90 & 1;
        --v77;
        uint64_t v38 = (void (*)(uint64_t *, void))v126;
        uint64_t v82 = v124;
        id v37 = v121;
        if (!v77)
        {
          sub_1D6760274(v89, v78, v81);
          swift_release();
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      sub_1D6FA9C40();
    }
    swift_release();
    uint64_t v31 = MEMORY[0x1E4FBC860];
LABEL_23:
    uint64_t v91 = v107;
    sub_1D6FA8070();
    swift_bridgeObjectRetain_n();
    uint64_t v92 = sub_1D6FA8C40();
    os_log_type_t v93 = sub_1D6FAA180();
    if (os_log_type_enabled(v92, v93))
    {
      v94 = (uint8_t *)swift_slowAlloc();
      uint64_t v95 = swift_slowAlloc();
      uint64_t v131 = v95;
      *(_DWORD *)v94 = 136446210;
      uint64_t v96 = swift_bridgeObjectRetain();
      uint64_t v97 = MEMORY[0x1D9466C30](v96, v120);
      unint64_t v99 = v98;
      swift_bridgeObjectRelease();
      uint64_t v130 = sub_1D683E928(v97, v99, &v131);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D6748000, v92, v93, "Recovery - inserting load failures %{public}s", v94, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v95, -1, -1);
      MEMORY[0x1D9468AD0](v94, -1, -1);

      uint64_t v100 = v107;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v100 = v91;
    }
    v104(v100, v109);
    uint64_t v101 = v106;
    uint64_t v102 = v105;
    uint64_t v103 = __swift_project_boxed_opaque_existential_1(v111, v111[3]);
    sub_1D6E2A590(v31, v103[1], *((unsigned __int8 *)v103 + 16), v103[3]);
    if (v102)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t *v110 = v101;
    }
  }
  return result;
}

uint64_t sub_1D6EA8BF4@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a2[75];
  uint64_t v7 = a2[76];
  __swift_project_boxed_opaque_existential_1(a2 + 72, v6);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA61A0);
  sub_1D67D9FA0((uint64_t)sub_1D6EAC2CC, v8, v6, v9, v7, a3);

  return swift_release();
}

uint64_t sub_1D6EA8CC8@<X0>(void *a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v112 = a3;
  uint64_t v5 = sub_1D6FA0BC0();
  uint64_t v125 = *(void *)(v5 - 8);
  uint64_t v126 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  v119 = (char *)&v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v111 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v111 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v111 - v14;
  uint64_t v16 = sub_1D6FA8C50();
  uint64_t v123 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v111 - v20;
  uint64_t v22 = a2;
  uint64_t v23 = a2;
  uint64_t v24 = a1;
  uint64_t v25 = v124;
  uint64_t result = sub_1D6EAC894(v23, a1);
  if (v25) {
    return result;
  }
  uint64_t v27 = result;
  uint64_t v118 = (uint64_t)v21;
  uint64_t v124 = v22;
  uint64_t v115 = v19;
  uint64_t v116 = v15;
  v121 = v10;
  uint64_t v122 = v16;
  uint64_t v120 = v13;
  uint64_t v28 = __swift_project_boxed_opaque_existential_1(v24, v24[3]);
  char v29 = (void *)*v28;
  uint64_t v30 = (void *)v28[1];
  char v31 = *((unsigned char *)v28 + 16);
  uint64_t v32 = v27;
  uint64_t v33 = v28[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDA1F08);
  unint64_t v34 = swift_allocObject();
  id v35 = v29;
  id v36 = v30;
  swift_bridgeObjectRetain();
  sub_1D6FA78B0();
  *(void *)(v34 + 16) = v35;
  *(void *)(v34 + 24) = v36;
  *(unsigned char *)(v34 + 32) = v31;
  *(void *)(v34 + 40) = v33;
  swift_getKeyPath();
  unint64_t v117 = v32;
  uint64_t v37 = sub_1D6EA65E0(v32);
  uint64_t v38 = 0;
  v128[3] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDAADE0);
  v128[0] = v37;
  swift_bridgeObjectRetain();
  uint64_t v39 = swift_retain();
  sub_1D6B1777C(v39, 10, 0, 0, (uint64_t)v128);
  swift_release();
  swift_beginAccess();
  uint64_t v40 = sub_1D6FA78C0();
  uint64_t v42 = v41;
  MEMORY[0x1D9466B90]();
  if (*(void *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_52;
  }
  while (1)
  {
    sub_1D6FA9C80();
    sub_1D6FA9C20();
    ((void (*)(uint64_t *, void))v40)(v128, 0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v43 = sub_1D69DAE90((void (*)(char *, uint64_t, uint64_t))0x64);
    if (v38)
    {
      swift_setDeallocating();

      swift_bridgeObjectRelease();
      unint64_t v44 = v34 + qword_1EBDB9E90;
      uint64_t v45 = sub_1D6FA7940();
      (*(void (**)(unint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v44, v45);
      swift_deallocClassInstance();
      return swift_bridgeObjectRelease();
    }
    uint64_t v46 = v43;
    swift_setDeallocating();

    swift_bridgeObjectRelease();
    unint64_t v47 = v34 + qword_1EBDB9E90;
    uint64_t v48 = sub_1D6FA7940();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
    swift_deallocClassInstance();
    uint64_t v49 = *(void *)(v46 + 16);
    uint64_t v40 = 0;
    uint64_t v111 = 0;
    if (v49)
    {
      uint64_t v50 = v118;
      sub_1D6FA8070();
      swift_bridgeObjectRetain();
      id v51 = sub_1D6FA8C40();
      os_log_type_t v52 = sub_1D6FAA180();
      if (os_log_type_enabled(v51, v52))
      {
        id v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        v128[0] = v54;
        *(_DWORD *)id v53 = 136446210;
        sub_1D6FA3B80();
        sub_1D6EAD7C8(&qword_1EBD9FAC0, MEMORY[0x1E4F9DA18]);
        swift_bridgeObjectRetain();
        uint64_t v55 = sub_1D6FA9F00();
        unint64_t v57 = v56;
        swift_bridgeObjectRelease();
        uint64_t v58 = v55;
        uint64_t v40 = v111;
        uint64_t v127 = sub_1D683E928(v58, v57, v128);
        sub_1D6FAA4A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D6748000, v51, v52, "Recovery - cleared failures for unrecoverable bundles %{public}s", v53, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9468AD0](v54, -1, -1);
        MEMORY[0x1D9468AD0](v53, -1, -1);

        uint64_t v59 = v123;
        uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
        uint64_t v61 = v118;
      }
      else
      {

        swift_bridgeObjectRelease_n();
        uint64_t v59 = v123;
        uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v123 + 8);
        uint64_t v61 = v50;
      }
      uint64_t v62 = v122;
      v60(v61, v122);
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v62 = v122;
      uint64_t v59 = v123;
    }
    uint64_t v63 = v115;
    uint64_t v64 = v124;
    uint64_t v65 = v117;
    uint64_t v38 = (char *)v126;
    if (*(void *)(v117 + 16) <= *(void *)(v124 + 16) >> 3)
    {
      v128[0] = v124;
      swift_bridgeObjectRetain();
      sub_1D685BC84(v117);
      uint64_t v65 = v117;
      uint64_t v118 = v128[0];
      if (!*(void *)(v117 + 16)) {
        goto LABEL_30;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v118 = sub_1D68586C8(v65, v64);
      if (!*(void *)(v65 + 16)) {
        goto LABEL_30;
      }
    }
    sub_1D6FA8070();
    swift_bridgeObjectRetain_n();
    unint64_t v34 = sub_1D6FA8C40();
    os_log_type_t v66 = sub_1D6FAA180();
    if (os_log_type_enabled((os_log_t)v34, v66))
    {
      uint64_t v67 = swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      v128[0] = v68;
      *(_DWORD *)uint64_t v67 = 141558274;
      uint64_t v127 = 1752392040;
      sub_1D6FAA4A0();
      *(_WORD *)(v67 + 12) = 2080;
      uint64_t v124 = v67 + 14;
      sub_1D6EAD7C8(&qword_1EBD9F7C0, MEMORY[0x1E4F9C110]);
      swift_bridgeObjectRetain();
      uint64_t v69 = sub_1D6FA9F00();
      unint64_t v71 = v70;
      swift_bridgeObjectRelease();
      uint64_t v127 = sub_1D683E928(v69, v71, v128);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease_n();
      uint64_t v40 = v111;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D6748000, (os_log_t)v34, v66, "Recovery - marking as failed: %{mask.hash}s", (uint8_t *)v67, 0x16u);
      swift_arrayDestroy();
      uint64_t v72 = v68;
      uint64_t v38 = (char *)v126;
      MEMORY[0x1D9468AD0](v72, -1, -1);
      MEMORY[0x1D9468AD0](v67, -1, -1);

      (*(void (**)(char *, uint64_t))(v59 + 8))(v115, v122);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v63, v62);
    }
    int64_t v73 = *(void *)(v65 + 16);
    if (v73)
    {
      v128[0] = MEMORY[0x1E4FBC860];
      sub_1D6BBC7D4(0, v73, 0);
      uint64_t v74 = v117;
      uint64_t v76 = sub_1D6C909BC(v117);
      int v78 = v77 & 1;
      uint64_t v114 = v125 + 16;
      uint64_t v115 = (char *)(v74 + 56);
      uint64_t v124 = v125 + 32;
      uint64_t v113 = v125 + 8;
      while ((v76 & 0x8000000000000000) == 0 && v76 < 1 << *(unsigned char *)(v74 + 32))
      {
        if (((*(void *)&v115[((unint64_t)v76 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v76) & 1) == 0) {
          goto LABEL_50;
        }
        if (*(_DWORD *)(v74 + 36) != v75) {
          goto LABEL_51;
        }
        uint64_t v122 = v75;
        LODWORD(v123) = v78;
        uint64_t v80 = v125;
        uint64_t v79 = v126;
        uint64_t v40 = *(void *)(v125 + 72);
        int v81 = v120;
        (*(void (**)(char *, uint64_t, uint64_t))(v125 + 16))(v120, *(void *)(v74 + 48) + v40 * v76, v126);
        uint64_t v82 = *(void (**)(char *, char *, uint64_t))(v80 + 32);
        uint64_t v83 = v121;
        uint64_t v84 = v81;
        uint64_t v38 = v116;
        v82(v121, v84, v79);
        sub_1D6FA0BB0();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v83, v79);
        uint64_t v85 = v128[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D6BBC7D4(0, *(void *)(v85 + 16) + 1, 1);
          uint64_t v85 = v128[0];
        }
        unint64_t v34 = *(void *)(v85 + 16);
        unint64_t v86 = *(void *)(v85 + 24);
        uint64_t v74 = v117;
        if (v34 >= v86 >> 1)
        {
          sub_1D6BBC7D4(v86 > 1, v34 + 1, 1);
          uint64_t v74 = v117;
          uint64_t v85 = v128[0];
        }
        *(void *)(v85 + 16) = v34 + 1;
        v82((char *)(v85+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ v34 * v40), v38, v126);
        v128[0] = v85;
        uint64_t v87 = sub_1D6D119B0(v76, v122, v123 & 1, v74);
        uint64_t v76 = v87;
        int v78 = v88 & 1;
        if (!--v73)
        {
          sub_1D6760274(v87, v75, v78);
          swift_bridgeObjectRelease();
          uint64_t v89 = v125;
          uint64_t v38 = (char *)v126;
          unint64_t v34 = v118;
          goto LABEL_31;
        }
      }
      goto LABEL_49;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    uint64_t v85 = MEMORY[0x1E4FBC860];
    unint64_t v34 = v118;
    uint64_t v89 = v125;
LABEL_31:
    uint64_t v114 = v85;
    int64_t v90 = *(void *)(v34 + 16);
    if (!v90) {
      break;
    }
    v128[0] = MEMORY[0x1E4FBC860];
    sub_1D6BBC7D4(0, v90, 0);
    uint64_t v91 = sub_1D6C909BC(v34);
    uint64_t v40 = v92;
    int v94 = v93 & 1;
    uint64_t v116 = (char *)(v89 + 16);
    unint64_t v117 = v34 + 56;
    uint64_t v124 = v89 + 32;
    uint64_t v115 = (char *)(v89 + 8);
    while ((v91 & 0x8000000000000000) == 0 && v91 < 1 << *(unsigned char *)(v34 + 32))
    {
      if (((*(void *)(v117 + (((unint64_t)v91 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v91) & 1) == 0) {
        goto LABEL_47;
      }
      if (*(_DWORD *)(v34 + 36) != v40) {
        goto LABEL_48;
      }
      LODWORD(v122) = v94;
      uint64_t v95 = *(void *)(v34 + 48);
      uint64_t v123 = *(void *)(v89 + 72);
      uint64_t v96 = v95 + v123 * v91;
      uint64_t v97 = *(void (**)(char *, uint64_t, char *))(v89 + 16);
      uint64_t v98 = v89;
      unint64_t v99 = v120;
      v97(v120, v96, v38);
      uint64_t v100 = *(void (**)(char *, char *, char *))(v98 + 32);
      uint64_t v101 = v121;
      v100(v121, v99, v38);
      sub_1D6FA0BB0();
      (*(void (**)(char *, char *))(v98 + 8))(v101, v38);
      uint64_t v102 = v128[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D6BBC7D4(0, *(void *)(v102 + 16) + 1, 1);
        uint64_t v102 = v128[0];
      }
      char v103 = v122;
      unint64_t v105 = *(void *)(v102 + 16);
      unint64_t v104 = *(void *)(v102 + 24);
      uint64_t v106 = v119;
      if (v105 >= v104 >> 1)
      {
        sub_1D6BBC7D4(v104 > 1, v105 + 1, 1);
        uint64_t v106 = v119;
        uint64_t v102 = v128[0];
      }
      *(void *)(v102 + 16) = v105 + 1;
      uint64_t v89 = v125;
      unint64_t v107 = v102
           + ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))
           + v105 * v123;
      uint64_t v38 = (char *)v126;
      v100((char *)v107, v106, (char *)v126);
      v128[0] = v102;
      unint64_t v34 = v118;
      uint64_t v108 = sub_1D6D119B0(v91, v40, v103 & 1, v118);
      uint64_t v91 = v108;
      uint64_t v40 = v109;
      int v94 = v110 & 1;
      if (!--v90)
      {
        sub_1D6760274(v108, v109, v94);
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
    }
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    sub_1D6FA9C40();
  }
  swift_bridgeObjectRelease();
  uint64_t v102 = MEMORY[0x1E4FBC860];
LABEL_44:
  v128[0] = v114;
  uint64_t result = sub_1D6C5E95C(v102);
  *uint64_t v112 = v128[0];
  return result;
}

void sub_1D6EA9B00(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  swift_retain();
  sub_1D6EABD7C(v3, a2);
  swift_release();
  sub_1D67D9774(0, (unint64_t *)&qword_1EBDB01A0);
  uint64_t v4 = (void *)sub_1D6FAA220();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F6A0);
  sub_1D6761180((unint64_t *)&qword_1EBDA7C10, (uint64_t *)&unk_1EBD9F6A0);
  sub_1D6FA6560();
  swift_bridgeObjectRelease();
}

uint64_t sub_1D6EA9BEC@<X0>(void (*a1)(uint64_t, char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v92 = a3;
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF518);
  uint64_t v85 = *(void *)(v87 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v87);
  int v81 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v83 = (uint64_t)v71 - v7;
  unint64_t v82 = v8;
  MEMORY[0x1F4188790](v6);
  uint64_t v84 = (char *)v71 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
  uint64_t v90 = *(void *)(v10 - 8);
  uint64_t v91 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  char v88 = (char *)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v89 = (char *)v71 - v13;
  uint64_t v14 = sub_1D6FA0BC0();
  unint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v79 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v71 - v18;
  uint64_t v20 = sub_1D6FA8C50();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA8070();
  uint64_t v24 = *(void (**)(char *, void, uint64_t))(v15 + 16);
  uint64_t v80 = a1;
  uint64_t v96 = v14;
  char v77 = v24;
  v24(v19, a1, v14);
  uint64_t v25 = sub_1D6FA8C40();
  os_log_type_t v26 = sub_1D6FAA180();
  int v27 = v26;
  BOOL v28 = os_log_type_enabled(v25, v26);
  unint64_t v75 = v15;
  if (v28)
  {
    uint64_t v29 = swift_slowAlloc();
    int v73 = v27;
    uint64_t v30 = v29;
    uint64_t v74 = (void (*)(void, void, void))swift_slowAlloc();
    v95[0] = (uint64_t)v74;
    *(_DWORD *)uint64_t v30 = 141558274;
    *(void *)&v94[0] = 1752392040;
    uint64_t v76 = (void *)v21;
    sub_1D6FAA4A0();
    *(_WORD *)(v30 + 12) = 2080;
    v71[1] = v30 + 14;
    sub_1D6EAD7C8((unint64_t *)&qword_1EA7FF538, MEMORY[0x1E4F9C110]);
    uint64_t v72 = v20;
    uint64_t v31 = v96;
    uint64_t v32 = sub_1D6FAAA50();
    *(void *)&v94[0] = sub_1D683E928(v32, v33, v95);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v31);
    _os_log_impl(&dword_1D6748000, v25, (os_log_type_t)v73, "Recovery - Load - inserting %{mask.hash}s", (uint8_t *)v30, 0x16u);
    unint64_t v34 = v74;
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v34, -1, -1);
    MEMORY[0x1D9468AD0](v30, -1, -1);

    ((void (*)(char *, uint64_t))v76[1])(v23, v72);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v96);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  }
  uint64_t v76 = (void *)(v93 + 56);
  id v35 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))*__swift_project_boxed_opaque_existential_1((void *)(v93 + 56), *(void *)(v93 + 80));
  uint64_t v36 = *((void *)v35 + 42);
  uint64_t v74 = (void (*)(void, void, void))*((void *)v35 + 43);
  __swift_project_boxed_opaque_existential_1((void *)v35 + 39, v36);
  uint64_t v37 = v79;
  uint64_t v38 = v96;
  v77(v79, v80, v96);
  unint64_t v39 = v75;
  unint64_t v40 = (*(unsigned __int8 *)(v75 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
  unint64_t v41 = (v78 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v42 + v40, v37, v38);
  *(void *)(v42 + v41) = v35;
  swift_retain();
  uint64_t v43 = v83;
  sub_1D67D9FA0((uint64_t)sub_1D6AB211C, v42, v36, v38, (uint64_t)v74, v83);
  swift_release();
  uint64_t v44 = v85;
  uint64_t v45 = *(void (**)(uint64_t, char *, uint64_t))(v85 + 16);
  uint64_t v79 = (char *)(v85 + 16);
  uint64_t v80 = v45;
  uint64_t v46 = v81;
  uint64_t v47 = v87;
  v45((uint64_t)v81, (char *)v43, v87);
  uint64_t v48 = *(unsigned __int8 *)(v44 + 80);
  char v77 = (void (*)(char *, void, uint64_t))(v48 | 7);
  uint64_t v49 = (v48 + 16) & ~v48;
  uint64_t v78 = v49;
  unint64_t v50 = (v82 + v49 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v82 = v50 + 16;
  unint64_t v75 = v50;
  uint64_t v51 = swift_allocObject();
  uint64_t v74 = *(void (**)(void, void, void))(v44 + 32);
  v74(v51 + v49, v46, v47);
  os_log_type_t v52 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v51 + v50);
  *os_log_type_t v52 = sub_1D6AB21C4;
  v52[1] = v35;
  swift_retain();
  id v53 = v84;
  sub_1D6FA6590();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v44 + 8);
  v54(v43, v47);
  uint64_t v55 = *__swift_project_boxed_opaque_existential_1(v76, *(void *)(v93 + 80));
  v95[3] = type metadata accessor for AssetBundleHandler();
  v95[4] = (uint64_t)&off_1F2E70AA8;
  v95[0] = v55;
  sub_1D6754034((uint64_t)v95, (uint64_t)v94);
  uint64_t v56 = swift_allocObject();
  sub_1D675401C(v94, v56 + 16);
  swift_retain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v95);
  v80(v43, v53, v47);
  uint64_t v57 = swift_allocObject();
  v74(v57 + v78, v43, v47);
  uint64_t v58 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v57 + v75);
  *uint64_t v58 = sub_1D6EAC148;
  v58[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v56;
  uint64_t v96 = MEMORY[0x1E4FBC848] + 8;
  uint64_t v59 = v89;
  sub_1D6FA6590();
  v54((uint64_t)v53, v47);
  uint64_t v60 = (void *)swift_allocObject();
  v60[2] = 0xD000000000000065;
  v60[3] = 0x80000001D6FDEB50;
  v60[4] = 79;
  uint64_t v61 = swift_allocObject();
  *(void *)(v61 + 16) = sub_1D6777140;
  *(void *)(v61 + 24) = v60;
  uint64_t v63 = v90;
  uint64_t v62 = v91;
  uint64_t v64 = v88;
  uint64_t v65 = v59;
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v88, v59, v91);
  unint64_t v66 = (*(unsigned __int8 *)(v63 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  unint64_t v67 = (v86 + v66 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v68 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v63 + 32))(v68 + v66, v64, v62);
  uint64_t v69 = (uint64_t (**)(void *))(v68 + v67);
  *uint64_t v69 = sub_1D6777138;
  v69[1] = (uint64_t (*)(void *))v61;
  sub_1D6FA6590();
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v65, v62);
}

uint64_t sub_1D6EAA5E8(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA8C50();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t result = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    id v7 = *(id *)a1;
    id v8 = *(id *)a1;
    sub_1D6FA8070();
    id v9 = v7;
    id v10 = v7;
    uint64_t v11 = sub_1D6FA8C40();
    os_log_type_t v12 = sub_1D6FAA160();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v18 = v14;
      *(_DWORD *)uint64_t v13 = 136446210;
      v17[1] = v13 + 4;
      swift_getErrorValue();
      uint64_t v15 = MEMORY[0x1D9467BB0](v17[4], v17[5]);
      v17[2] = sub_1D683E928(v15, v16, &v18);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      sub_1D6776A38(v7, 1);
      sub_1D6776A38(v7, 1);
      _os_log_impl(&dword_1D6748000, v11, v12, "Recovery - Failed with error %{public}s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v14, -1, -1);
      MEMORY[0x1D9468AD0](v13, -1, -1);

      sub_1D6776A38(v7, 1);
    }
    else
    {
      sub_1D6776A38(v7, 1);
      sub_1D6776A38(v7, 1);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  return result;
}

uint64_t sub_1D6EAA84C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_1D6FA8C50();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  id v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 496), *(void *)(a2 + 520));
  uint64_t result = sub_1D6FA6C00();
  if (!v3)
  {
    uint64_t v71 = 0;
    uint64_t v68 = a3;
    uint64_t v69 = v10;
    uint64_t v66 = v8;
    uint64_t v67 = v7;
    uint64_t v12 = v73;
    uint64_t v13 = v74;
    uint64_t v14 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    uint64_t v15 = (void *)*v14;
    unint64_t v16 = (void *)v14[1];
    char v17 = *((unsigned char *)v14 + 16);
    uint64_t v18 = v14[3];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA1EC0);
    uint64_t v19 = swift_allocObject();
    id v20 = v15;
    id v21 = v16;
    swift_bridgeObjectRetain();
    sub_1D6FA78B0();
    *(void *)(v19 + 16) = v20;
    *(void *)(v19 + 24) = v21;
    *(unsigned char *)(v19 + 32) = v17;
    *(void *)(v19 + 40) = v18;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDA6170);
    uint64_t v65 = v12;
    uint64_t v73 = v12;
    uint64_t v74 = v13;
    uint64_t v70 = v13;
    swift_bridgeObjectRetain();
    id v23 = sub_1D6B17620(KeyPath, 4, 0, 0, (uint64_t)&v73);
    swift_release();
    swift_beginAccess();
    id v24 = v23;
    uint64_t v25 = (void (*)(uint64_t *, void))sub_1D6FA78C0();
    int v27 = v26;
    MEMORY[0x1D9466B90]();
    if (*(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D6FA9C40();
    }
    sub_1D6FA9C80();
    sub_1D6FA9C20();
    v25(&v73, 0);
    swift_endAccess();

    uint64_t v28 = swift_getKeyPath();
    uint64_t v29 = sub_1D6FA1E90();
    uint64_t v30 = MEMORY[0x1E4FBB550];
    uint64_t v75 = MEMORY[0x1E4FBB550];
    uint64_t v73 = v29;
    id v31 = sub_1D6B17620(v28, 4, 0, 0, (uint64_t)&v73);
    swift_release();
    uint64_t v32 = swift_getKeyPath();
    uint64_t v33 = sub_1D6FA1E90();
    uint64_t v75 = v30;
    uint64_t v73 = v33;
    id v34 = sub_1D6B17620(v32, 4, 0, 0, (uint64_t)&v73);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDAB080);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1D6FB1860;
    *(void *)(v35 + 32) = v31;
    *(void *)(v35 + 40) = v34;
    uint64_t v73 = v35;
    sub_1D6FA9C20();
    id v36 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA9550));
    sub_1D67D9774(0, (unint64_t *)&qword_1EBDA6510);
    id v37 = v31;
    id v38 = v34;
    unint64_t v39 = (void *)sub_1D6FA9B80();
    swift_bridgeObjectRelease();
    id v40 = objc_msgSend(v36, sel_initWithType_subpredicates_, 2, v39);

    swift_beginAccess();
    id v41 = v40;
    uint64_t v42 = (void (*)(uint64_t *, void))sub_1D6FA78C0();
    uint64_t v44 = v43;
    MEMORY[0x1D9466B90]();
    uint64_t v45 = v71;
    if (*(void *)((*v44 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v44 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D6FA9C40();
    }
    sub_1D6FA9C80();
    sub_1D6FA9C20();
    v42(&v73, 0);
    swift_endAccess();

    uint64_t v46 = sub_1D67B1254((void (*)(char *, uint64_t, uint64_t))0x64);
    if (v45)
    {
      swift_setDeallocating();

      swift_bridgeObjectRelease();
      uint64_t v47 = v19 + qword_1EBDB9E90;
      uint64_t v48 = sub_1D6FA7940();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v47, v48);
      swift_deallocClassInstance();
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v49 = v46;
      swift_setDeallocating();

      swift_bridgeObjectRelease();
      uint64_t v50 = v19 + qword_1EBDB9E90;
      uint64_t v51 = sub_1D6FA7940();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
      swift_deallocClassInstance();
      os_log_type_t v52 = v69;
      sub_1D6FA8070();
      swift_bridgeObjectRetain_n();
      id v53 = sub_1D6FA8C40();
      os_log_type_t v54 = sub_1D6FAA180();
      if (os_log_type_enabled(v53, v54))
      {
        uint64_t v55 = swift_slowAlloc();
        uint64_t v56 = swift_slowAlloc();
        uint64_t v73 = v56;
        *(_DWORD *)uint64_t v55 = 141558274;
        uint64_t v72 = 1752392040;
        sub_1D6FAA4A0();
        *(_WORD *)(v55 + 12) = 2080;
        uint64_t v71 = v55 + 14;
        sub_1D6FA0BC0();
        sub_1D6EAD7C8(&qword_1EBD9F7C0, MEMORY[0x1E4F9C110]);
        swift_bridgeObjectRetain();
        uint64_t v57 = sub_1D6FA9F00();
        unint64_t v59 = v58;
        swift_bridgeObjectRelease();
        uint64_t v72 = sub_1D683E928(v57, v59, &v73);
        sub_1D6FAA4A0();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D6748000, v53, v54, "Recovery - Cancellation - found bundles %{mask.hash}s", (uint8_t *)v55, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D9468AD0](v56, -1, -1);
        MEMORY[0x1D9468AD0](v55, -1, -1);

        (*(void (**)(char *, uint64_t))(v66 + 8))(v69, v67);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v52, v67);
      }
      uint64_t v60 = v68;
      uint64_t v61 = v70;
      uint64_t v62 = v65;
      swift_bridgeObjectRetain();
      uint64_t v63 = sub_1D6EABA2C(v49, v62, v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v64 = sub_1D6C837E4(v63);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v60 = v64;
    }
  }
  return result;
}

void sub_1D6EAB06C(uint64_t a1, uint64_t a2)
{
  swift_retain();
  sub_1D6BC5134(a1, a2);
  swift_release();
  sub_1D67D9774(0, (unint64_t *)&qword_1EBDB01A0);
  uint64_t v4 = (void *)sub_1D6FAA220();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F6A0);
  sub_1D6761180((unint64_t *)&qword_1EBDA7C10, (uint64_t *)&unk_1EBD9F6A0);
  sub_1D6FA6560();
  swift_bridgeObjectRelease();
}

uint64_t sub_1D6EAB158(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1D6EAB2BC((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_1D6EAB2BC((unint64_t *)v7, v4, v2);
    swift_release();
    MEMORY[0x1D9468AD0](v7, -1, -1);
  }
  return v6;
}

uint64_t sub_1D6EAB2BC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v4 = sub_1D6FA0BC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = 0;
  uint64_t v29 = a3;
  uint64_t v10 = *(void *)(a3 + 56);
  uint64_t v26 = 0;
  uint64_t v27 = a3 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v28) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v27 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v28) {
        goto LABEL_24;
      }
      unint64_t v19 = *(void *)(v27 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v28) {
          goto LABEL_24;
        }
        unint64_t v19 = *(void *)(v27 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, *(void *)(v29 + 48) + *(void *)(v5 + 72) * v15, v4);
    uint64_t v30 = sub_1D6FA0B30();
    char v31 = v16 & 1;
    char v32 = 1;
    sub_1D6776550();
    sub_1D67765A4();
    char v17 = sub_1D6FA1310();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    if (v17)
    {
      *(unint64_t *)((char *)v25 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_24:
        uint64_t v22 = v29;
        swift_retain();
        return sub_1D6A291EC(v25, v24, v26, v22);
      }
    }
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v28) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v27 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v27 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_1D6EAB584(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = (unint64_t *)isStackAllocationSafe;
  v9[1] = *MEMORY[0x1E4F143B8];
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1D6EAB6DC((void *)((char *)v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, (uint64_t)v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_1D6EAB6DC((unint64_t *)v7, v4, (uint64_t)v2);
    MEMORY[0x1D9468AD0](v7, -1, -1);
  }
  return v2;
}

unint64_t *sub_1D6EAB6DC(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v5 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v13 >= v10) {
      return (unint64_t *)sub_1D6CB2058(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v5;
    if (!v14)
    {
      int64_t v5 = v13 + 1;
      if (v13 + 1 >= v10) {
        return (unint64_t *)sub_1D6CB2058(result, a2, v4, a3);
      }
      unint64_t v14 = *(void *)(v6 + 8 * v5);
      if (!v14)
      {
        int64_t v5 = v13 + 2;
        if (v13 + 2 >= v10) {
          return (unint64_t *)sub_1D6CB2058(result, a2, v4, a3);
        }
        unint64_t v14 = *(void *)(v6 + 8 * v5);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v5 << 6);
LABEL_5:
    if (*(uint64_t *)(*(void *)(a3 + 56) + 8 * v12) >= 10)
    {
      *(unint64_t *)((char *)result + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v4++, 1))
      {
        __break(1u);
        return (unint64_t *)sub_1D6CB2058(result, a2, v4, a3);
      }
    }
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v10) {
    return (unint64_t *)sub_1D6CB2058(result, a2, v4, a3);
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v5 = v15;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v5 >= v10) {
      return (unint64_t *)sub_1D6CB2058(result, a2, v4, a3);
    }
    unint64_t v14 = *(void *)(v6 + 8 * v5);
    ++v15;
    if (v14) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1D6EAB82C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D6EAB8C0()
{
  return objectdestroy_5Tm(&qword_1EBDB01B0);
}

uint64_t sub_1D6EAB8CC(uint64_t a1, uint64_t a2)
{
  return sub_1D6EAC1C8(a1, a2, &qword_1EBDB01B0, sub_1D6AFFC0C);
}

uint64_t sub_1D6EAB8EC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D6EAB924()
{
  return objectdestroy_5Tm(&qword_1EBDB01B0);
}

uint64_t sub_1D6EAB930(uint64_t a1, uint64_t a2)
{
  return sub_1D6EAC1C8(a1, a2, &qword_1EBDB01B0, sub_1D6E108F0);
}

uint64_t sub_1D6EAB950()
{
  return sub_1D6EA79E0(v0);
}

uint64_t sub_1D6EAB958()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6EAB990()
{
  return objectdestroy_5Tm(&qword_1EBDB01B0);
}

uint64_t sub_1D6EAB99C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6EAB9DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D6EAA84C(a1, v2, a2);
}

void sub_1D6EAB9F8(uint64_t a1)
{
  sub_1D6EAB06C(a1, v1);
}

uint64_t sub_1D6EABA00()
{
  return objectdestroy_5Tm((uint64_t *)&unk_1EBD9F1D0);
}

uint64_t sub_1D6EABA0C(uint64_t a1, uint64_t a2)
{
  return sub_1D6EAC1C8(a1, a2, (uint64_t *)&unk_1EBD9F1D0, sub_1D6B002EC);
}

uint64_t sub_1D6EABA2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v5 = sub_1D6FA0BC0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  id v38 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  id v37 = (char *)v32 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v43 = (char *)v32 - v11;
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  if (!v12) {
    return v13;
  }
  v32[0] = v3;
  uint64_t v44 = MEMORY[0x1E4FBC860];
  sub_1D6BBC7D4(0, v12, 0);
  uint64_t result = sub_1D6C909BC(a1);
  uint64_t v15 = result;
  uint64_t v17 = v16;
  int v19 = v18 & 1;
  uint64_t v35 = a1;
  uint64_t v36 = a1 + 56;
  uint64_t v20 = v6 + 32;
  v32[1] = v6 + 8;
  v32[2] = v6 + 16;
  uint64_t v33 = v6;
  uint64_t v34 = v5;
  while ((v15 & 0x8000000000000000) == 0 && v15 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v36 + (((unint64_t)v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(a1 + 36) != v17) {
      goto LABEL_16;
    }
    int v42 = v19;
    uint64_t v21 = *(void *)(a1 + 48);
    uint64_t v41 = *(void *)(v6 + 72);
    uint64_t v22 = v20;
    uint64_t v23 = v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v37, v21 + v41 * v15, v5);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    uint64_t v25 = v38;
    uint64_t v26 = v23;
    uint64_t v20 = v22;
    v24(v38, v26, v5);
    sub_1D6FA0BB0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v25, v5);
    uint64_t v13 = v44;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1D6BBC7D4(0, *(void *)(v13 + 16) + 1, 1);
      uint64_t v13 = v44;
    }
    unint64_t v28 = *(void *)(v13 + 16);
    unint64_t v27 = *(void *)(v13 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1D6BBC7D4(v27 > 1, v28 + 1, 1);
      uint64_t v13 = v44;
    }
    *(void *)(v13 + 16) = v28 + 1;
    uint64_t v6 = v33;
    unint64_t v29 = v13 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + v28 * v41;
    uint64_t v5 = v34;
    v24((char *)v29, v43, v34);
    uint64_t v44 = v13;
    a1 = v35;
    uint64_t result = sub_1D6D119B0(v15, v17, v42 & 1, v35);
    uint64_t v15 = result;
    uint64_t v17 = v30;
    int v19 = v31 & 1;
    if (!--v12)
    {
      sub_1D6760274(result, v30, v19);
      return v13;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1D6EABD7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v18 = a2;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
  uint64_t v5 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (v8)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1D6BBC754(0, v8, 0);
    uint64_t v9 = v19;
    uint64_t v10 = *(void *)(sub_1D6FA0BC0() - 8);
    uint64_t v11 = (void (*)(uint64_t, char *, uint64_t))(a1
                                                        + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)));
    uint64_t v16 = *(void *)(v10 + 72);
    while (1)
    {
      sub_1D6EA9BEC(v11, v18, (uint64_t)v7);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      uint64_t v19 = v9;
      unint64_t v13 = *(void *)(v9 + 16);
      unint64_t v12 = *(void *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1D6BBC754(v12 > 1, v13 + 1, 1);
        uint64_t v9 = v19;
      }
      *(void *)(v9 + 16) = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v13, v7, v17);
      uint64_t v11 = (void (*)(uint64_t, char *, uint64_t))((char *)v11 + v16);
      if (!--v8) {
        return v9;
      }
    }
    swift_release();
  }
  return v9;
}

uint64_t sub_1D6EABF90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D6EA7D5C(a1, v2, a2);
}

uint64_t sub_1D6EABFAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EA8BF4(a1, v2, a2);
}

uint64_t sub_1D6EABFB4()
{
  return objectdestroy_5Tm((uint64_t *)&unk_1EBD9F1D0);
}

uint64_t sub_1D6EABFC0(uint64_t a1, uint64_t a2)
{
  return sub_1D6EAC1C8(a1, a2, (uint64_t *)&unk_1EBD9F1D0, sub_1D6B0229C);
}

void sub_1D6EABFE0(uint64_t *a1)
{
  sub_1D6EA9B00(a1, v1);
}

uint64_t sub_1D6EABFE8()
{
  return objectdestroy_5Tm(&qword_1EBD9FC30);
}

uint64_t sub_1D6EABFF4(uint64_t a1, uint64_t a2)
{
  return sub_1D6EAC1C8(a1, a2, &qword_1EBD9FC30, sub_1D6B008B4);
}

uint64_t sub_1D6EAC014()
{
  return objectdestroy_5Tm(&qword_1EBDB01B0);
}

uint64_t sub_1D6EAC020(uint64_t a1, uint64_t a2)
{
  return sub_1D6EAC1C8(a1, a2, &qword_1EBDB01B0, sub_1D6C1DC90);
}

uint64_t sub_1D6EAC040()
{
  uint64_t v1 = sub_1D6FA0BC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D6EAC0E4()
{
  return objectdestroy_5Tm(&qword_1EA7FF518);
}

uint64_t sub_1D6EAC0F0(uint64_t a1, uint64_t a2)
{
  return sub_1D6EAC1C8(a1, a2, &qword_1EA7FF518, sub_1D6AFFC5C);
}

uint64_t sub_1D6EAC110()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1D6EAC148@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)(v2 + 16), *(void *)(v2 + 40));
  return sub_1D6CCC9F4(a1, a2);
}

uint64_t sub_1D6EAC190()
{
  return objectdestroy_5Tm(&qword_1EA7FF518);
}

uint64_t sub_1D6EAC19C(uint64_t a1, uint64_t a2)
{
  return sub_1D6EAC1C8(a1, a2, &qword_1EA7FF518, sub_1D6AFFC34);
}

uint64_t sub_1D6EAC1BC()
{
  return objectdestroy_5Tm(&qword_1EBDB01B0);
}

uint64_t sub_1D6EAC1C8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_1D6EAC28C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6EAC2CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1D6EA8CC8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1D6EAC2E8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v6 = sub_1D6FA0BC0();
  uint64_t result = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = 0;
  uint64_t v50 = v8;
  uint64_t v51 = a3;
  uint64_t v12 = *(void *)(a3 + 56);
  uint64_t v44 = 0;
  uint64_t v45 = a3 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a3 + 32);
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v12;
  uint64_t v48 = result;
  uint64_t v49 = v8 + 16;
  uint64_t v53 = a4;
  uint64_t v54 = a4 + 56;
  int64_t v46 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v47 = (uint64_t (**)(char *, uint64_t))(v8 + 8);
  while (v15)
  {
    unint64_t v16 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    int64_t v52 = v11;
    unint64_t v17 = v16 | (v11 << 6);
LABEL_22:
    (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v10, *(void *)(v51 + 48) + *(void *)(v50 + 72) * v17, v6);
    uint64_t v22 = v10;
    uint64_t v23 = sub_1D6FA0B20();
    uint64_t v25 = v24;
    if (!*(void *)(v53 + 16)) {
      goto LABEL_5;
    }
    uint64_t v26 = v23;
    uint64_t v27 = v53;
    sub_1D6FAAC40();
    sub_1D6FA99E0();
    uint64_t v28 = sub_1D6FAACC0();
    uint64_t v29 = -1 << *(unsigned char *)(v27 + 32);
    unint64_t v30 = v28 & ~v29;
    if (((*(void *)(v54 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
      goto LABEL_5;
    }
    uint64_t v31 = *(void *)(v53 + 48);
    char v32 = (void *)(v31 + 16 * v30);
    BOOL v33 = *v32 == v26 && v32[1] == v25;
    if (v33 || (sub_1D6FAAAA0() & 1) != 0)
    {
LABEL_37:
      swift_bridgeObjectRelease();
      uint64_t v6 = v48;
      uint64_t v10 = v22;
      uint64_t result = (*v47)(v22, v48);
      *(unint64_t *)((char *)v43 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      BOOL v39 = __OFADD__(v44++, 1);
      int64_t v11 = v52;
      if (v39)
      {
        __break(1u);
LABEL_40:
        uint64_t v40 = v51;
        swift_retain();
        return sub_1D6A291EC(v43, v42, v44, v40);
      }
    }
    else
    {
      uint64_t v34 = ~v29;
      for (unint64_t i = v30 + 1; ; unint64_t i = v36 + 1)
      {
        uint64_t v36 = i & v34;
        if (((*(void *)(v54 + (((i & v34) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v34)) & 1) == 0) {
          break;
        }
        id v37 = (void *)(v31 + 16 * v36);
        BOOL v38 = *v37 == v26 && v37[1] == v25;
        if (v38 || (sub_1D6FAAAA0() & 1) != 0) {
          goto LABEL_37;
        }
      }
LABEL_5:
      swift_bridgeObjectRelease();
      uint64_t v6 = v48;
      uint64_t v10 = v22;
      uint64_t result = (*v47)(v22, v48);
      int64_t v11 = v52;
    }
  }
  int64_t v18 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v18 >= v46) {
    goto LABEL_40;
  }
  unint64_t v19 = *(void *)(v45 + 8 * v18);
  int64_t v20 = v11 + 1;
  if (v19) {
    goto LABEL_21;
  }
  int64_t v20 = v11 + 2;
  if (v11 + 2 >= v46) {
    goto LABEL_40;
  }
  unint64_t v19 = *(void *)(v45 + 8 * v20);
  if (v19) {
    goto LABEL_21;
  }
  int64_t v20 = v11 + 3;
  if (v11 + 3 >= v46) {
    goto LABEL_40;
  }
  unint64_t v19 = *(void *)(v45 + 8 * v20);
  if (v19)
  {
LABEL_21:
    unint64_t v15 = (v19 - 1) & v19;
    int64_t v52 = v20;
    unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
    goto LABEL_22;
  }
  uint64_t v21 = v11 + 4;
  if (v11 + 4 >= v46) {
    goto LABEL_40;
  }
  unint64_t v19 = *(void *)(v45 + 8 * v21);
  if (v19)
  {
    int64_t v20 = v11 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v20 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v20 >= v46) {
      goto LABEL_40;
    }
    unint64_t v19 = *(void *)(v45 + 8 * v20);
    ++v21;
    if (v19) {
      goto LABEL_21;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1D6EAC6C8(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x1E4F143B8];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D6EAC2E8((void *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    int64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_1D6EAC2E8((unint64_t *)v11, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    MEMORY[0x1D9468AD0](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_1D6EAC894(uint64_t a1, void *a2)
{
  uint64_t v131 = sub_1D6FA3B80();
  uint64_t v129 = *(void *)(v131 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v131);
  uint64_t v130 = (char *)v122 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  v128 = (char *)v122 - v6;
  uint64_t v145 = sub_1D6FA0BC0();
  uint64_t v7 = *(void *)(v145 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v145);
  v139 = (char *)v122 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  v138 = (char *)v122 - v10;
  uint64_t v126 = sub_1D6FA3B60();
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x1F4188790](v126);
  uint64_t v124 = (char *)v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v137 = a1;
  if (v12)
  {
    uint64_t v123 = a2;
    v143[0] = MEMORY[0x1E4FBC860];
    sub_1D6BBC174(0, v12, 0);
    uint64_t v14 = sub_1D6C909BC(a1);
    uint64_t v16 = v15;
    char v18 = v17 & 1;
    unint64_t v136 = a1 + 56;
    uint64_t v133 = v7 + 32;
    uint64_t v134 = v7 + 16;
    uint64_t v132 = v7 + 8;
    uint64_t v135 = v7;
    do
    {
      if (v14 < 0 || v14 >= 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_90;
      }
      if (((*(void *)(v136 + (((unint64_t)v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      if (*(_DWORD *)(a1 + 36) != v16) {
        goto LABEL_92;
      }
      uint64_t v19 = *(void *)(a1 + 48) + *(void *)(v7 + 72) * v14;
      int64_t v20 = v138;
      uint64_t v21 = v145;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v138, v19, v145);
      uint64_t v22 = v139;
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v139, v20, v21);
      uint64_t v23 = sub_1D6FA0B20();
      uint64_t v25 = v24;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v22, v21);
      uint64_t v13 = v143[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D6BBC174(0, *(void *)(v13 + 16) + 1, 1);
        uint64_t v13 = v143[0];
      }
      unint64_t v27 = *(void *)(v13 + 16);
      unint64_t v26 = *(void *)(v13 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1D6BBC174(v26 > 1, v27 + 1, 1);
        uint64_t v13 = v143[0];
      }
      *(void *)(v13 + 16) = v27 + 1;
      uint64_t v28 = v13 + 16 * v27;
      *(void *)(v28 + 32) = v23;
      *(void *)(v28 + 40) = v25;
      a1 = v137;
      uint64_t v29 = sub_1D6D119B0(v14, v16, v18 & 1, v137);
      uint64_t v14 = v29;
      uint64_t v16 = v30;
      char v18 = v31 & 1;
      --v12;
      uint64_t v7 = v135;
    }
    while (v12);
    sub_1D6760274(v29, v30, v31 & 1);
    a2 = v123;
  }
  char v32 = __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  BOOL v33 = (void *)*v32;
  uint64_t v34 = (void *)v32[1];
  char v35 = *((unsigned char *)v32 + 16);
  uint64_t v36 = v32[3];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDA1F08);
  uint64_t v7 = swift_allocObject();
  id v37 = v33;
  id v38 = v34;
  swift_bridgeObjectRetain();
  sub_1D6FA78B0();
  *(void *)(v7 + 16) = v37;
  *(void *)(v7 + 24) = v38;
  *(unsigned char *)(v7 + 32) = v35;
  *(void *)(v7 + 40) = v36;
  swift_getKeyPath();
  uint64_t v39 = sub_1D69423CC(v13);
  swift_bridgeObjectRelease();
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDAADE0);
  v143[0] = v39;
  swift_bridgeObjectRetain();
  uint64_t v40 = swift_retain();
  sub_1D6B1777C(v40, 10, 0, 0, (uint64_t)v143);
  swift_release();
  swift_beginAccess();
  a1 = sub_1D6FA78C0();
  uint64_t v42 = v41;
  MEMORY[0x1D9466B90]();
  if (*(void *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    goto LABEL_98;
  }
  while (1)
  {
    sub_1D6FA9C80();
    sub_1D6FA9C20();
    ((void (*)(void *, void))a1)(v143, 0);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v44 = v125;
    uint64_t v45 = v124;
    uint64_t v46 = v126;
    (*(void (**)(char *, void, uint64_t))(v125 + 104))(v124, *MEMORY[0x1E4F9D9F8], v126);
    uint64_t v47 = sub_1D6FA3B50();
    uint64_t v49 = v48;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
    uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDA6170);
    v143[0] = v47;
    v143[1] = v49;
    id v50 = sub_1D6B1777C(KeyPath, 4, 0, 0, (uint64_t)v143);
    swift_release();
    swift_beginAccess();
    id v51 = v50;
    int64_t v52 = (void (*)(void *, void))sub_1D6FA78C0();
    uint64_t v54 = v53;
    MEMORY[0x1D9466B90](v52);
    if (*(void *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v54 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D6FA9C40();
    }
    sub_1D6FA9C80();
    sub_1D6FA9C20();
    v52(v143, 0);
    swift_endAccess();

    uint64_t v55 = v127;
    uint64_t v56 = sub_1D67B5DDC((void (*)(char *, uint64_t, uint64_t))0x64);
    uint64_t v57 = v130;
    v122[1] = v55;
    if (v55)
    {
      swift_setDeallocating();

      swift_bridgeObjectRelease();
      uint64_t v58 = v7 + qword_1EBDB9E90;
      uint64_t v59 = sub_1D6FA7940();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
      swift_deallocClassInstance();
      return v58;
    }
    a1 = v56;
    swift_setDeallocating();

    swift_bridgeObjectRelease();
    uint64_t v61 = v7 + qword_1EBDB9E90;
    uint64_t v62 = sub_1D6FA7940();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8))(v61, v62);
    swift_deallocClassInstance();
    uint64_t v63 = (void *)sub_1D697E974(MEMORY[0x1E4FBC860]);
    uint64_t v64 = *(void *)(a1 + 56);
    uint64_t v123 = (void *)(a1 + 56);
    uint64_t v65 = 1 << *(unsigned char *)(a1 + 32);
    if (v65 < 64) {
      uint64_t v66 = ~(-1 << v65);
    }
    else {
      uint64_t v66 = -1;
    }
    unint64_t v67 = v66 & v64;
    uint64_t v124 = (char *)((unint64_t)(v65 + 63) >> 6);
    uint64_t v133 = v129 + 16;
    uint64_t v132 = v129 + 32;
    uint64_t v127 = &v140;
    uint64_t v125 = v129 + 8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v68 = 0;
    v122[0] = v63;
    uint64_t v126 = a1;
    while (2)
    {
      uint64_t v7 = (uint64_t)v63;
      if (v67)
      {
        unint64_t v136 = (v67 - 1) & v67;
        unint64_t v69 = __clz(__rbit64(v67)) | (v68 << 6);
LABEL_44:
        uint64_t v73 = v129;
        uint64_t v74 = v128;
        uint64_t v75 = v131;
        (*(void (**)(char *, unint64_t, uint64_t))(v129 + 16))(v128, *(void *)(a1 + 48) + *(void *)(v129 + 72) * v69, v131);
        (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v57, v74, v75);
        uint64_t v76 = sub_1D6FA3B30();
        if (*(void *)(v7 + 16) && (unint64_t v78 = sub_1D6C64510(v76, v77), (v79 & 1) != 0)) {
          uint64_t v80 = *(void *)(*(void *)(v7 + 56) + 8 * v78);
        }
        else {
          uint64_t v80 = 0;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        uint64_t v140 = sub_1D6FA3B30();
        uint64_t v141 = v81;
        if (__OFADD__(v80, 1))
        {
LABEL_94:
          __break(1u);
        }
        else
        {
          uint64_t v142 = v80 + 1;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF780);
          uint64_t v82 = sub_1D6FAA910();
          uint64_t v83 = v140;
          uint64_t v84 = v141;
          uint64_t v85 = v142;
          swift_retain();
          swift_bridgeObjectRetain();
          unint64_t v86 = sub_1D6C64510(v83, v84);
          if ((v87 & 1) == 0)
          {
            uint64_t v88 = (v86 >> 3) & 0x1FFFFFFFFFFFFFF8;
            uint64_t v89 = *(void *)(v82 + 64 + v88) | (1 << v86);
            v138 = (char *)(v82 + 64);
            *(void *)(v82 + 64 + v88) = v89;
            uint64_t v90 = (uint64_t *)(*(void *)(v82 + 48) + 16 * v86);
            uint64_t *v90 = v83;
            v90[1] = v84;
            *(void *)(*(void *)(v82 + 56) + 8 * v86) = v85;
            uint64_t v91 = *(void *)(v82 + 16);
            BOOL v92 = __OFADD__(v91, 1);
            uint64_t v93 = v91 + 1;
            if (!v92)
            {
              uint64_t v134 = v68;
              *(void *)(v82 + 16) = v93;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FFA68);
              swift_arrayDestroy();
              swift_release();
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              v143[0] = v7;
              uint64_t v95 = 1 << *(unsigned char *)(v82 + 32);
              if (v95 < 64) {
                uint64_t v96 = ~(-1 << v95);
              }
              else {
                uint64_t v96 = -1;
              }
              unint64_t v97 = v96 & *(void *)(v82 + 64);
              v139 = (char *)((unint64_t)(v95 + 63) >> 6);
              swift_retain();
              uint64_t v98 = 0;
              uint64_t v135 = v7;
              uint64_t v63 = (void *)v7;
LABEL_57:
              if (v97)
              {
                unint64_t v99 = __clz(__rbit64(v97));
                v97 &= v97 - 1;
                uint64_t v145 = v98;
                unint64_t v100 = v99 | (v98 << 6);
              }
              else
              {
                uint64_t v101 = v98 + 1;
                if (__OFADD__(v98, 1)) {
                  goto LABEL_89;
                }
                if (v101 >= (uint64_t)v139)
                {
LABEL_23:
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  uint64_t v57 = v130;
                  (*(void (**)(char *, uint64_t))v125)(v130, v131);
                  swift_bridgeObjectRelease();
                  unint64_t v67 = v136;
                  a1 = v126;
                  uint64_t v68 = v134;
                  continue;
                }
                unint64_t v102 = *(void *)&v138[8 * v101];
                uint64_t v103 = v98 + 1;
                if (!v102)
                {
                  uint64_t v103 = v98 + 2;
                  if (v98 + 2 >= (uint64_t)v139) {
                    goto LABEL_23;
                  }
                  unint64_t v102 = *(void *)&v138[8 * v103];
                  if (!v102)
                  {
                    uint64_t v103 = v98 + 3;
                    if (v98 + 3 >= (uint64_t)v139) {
                      goto LABEL_23;
                    }
                    unint64_t v102 = *(void *)&v138[8 * v103];
                    if (!v102)
                    {
                      uint64_t v103 = v98 + 4;
                      if (v98 + 4 >= (uint64_t)v139) {
                        goto LABEL_23;
                      }
                      unint64_t v102 = *(void *)&v138[8 * v103];
                      if (!v102)
                      {
                        uint64_t v104 = v98 + 5;
                        if (v98 + 5 >= (uint64_t)v139) {
                          goto LABEL_23;
                        }
                        unint64_t v102 = *(void *)&v138[8 * v104];
                        if (!v102)
                        {
                          while (1)
                          {
                            uint64_t v103 = v104 + 1;
                            if (__OFADD__(v104, 1)) {
                              goto LABEL_93;
                            }
                            if (v103 >= (uint64_t)v139) {
                              goto LABEL_23;
                            }
                            unint64_t v102 = *(void *)&v138[8 * v103];
                            ++v104;
                            if (v102) {
                              goto LABEL_74;
                            }
                          }
                        }
                        uint64_t v103 = v98 + 5;
                      }
                    }
                  }
                }
LABEL_74:
                unint64_t v97 = (v102 - 1) & v102;
                uint64_t v145 = v103;
                unint64_t v100 = __clz(__rbit64(v102)) + (v103 << 6);
              }
              a1 = v82;
              unint64_t v105 = (uint64_t *)(*(void *)(v82 + 48) + 16 * v100);
              uint64_t v107 = *v105;
              uint64_t v106 = v105[1];
              uint64_t v7 = *(void *)(*(void *)(v82 + 56) + 8 * v100);
              swift_bridgeObjectRetain();
              unint64_t v109 = sub_1D6C64510(v107, v106);
              uint64_t v110 = v63[2];
              BOOL v111 = (v108 & 1) == 0;
              uint64_t v112 = v110 + v111;
              if (__OFADD__(v110, v111))
              {
                __break(1u);
                goto LABEL_87;
              }
              char v113 = v108;
              if (v63[3] >= v112)
              {
                if (isUniquelyReferenced_nonNull_native)
                {
                  uint64_t v63 = (void *)v143[0];
                  if ((v108 & 1) == 0) {
                    goto LABEL_82;
                  }
                }
                else
                {
                  sub_1D6C773AC();
                  uint64_t v63 = (void *)v143[0];
                  if ((v113 & 1) == 0) {
                    goto LABEL_82;
                  }
                }
              }
              else
              {
                sub_1D6C6694C(v112, isUniquelyReferenced_nonNull_native & 1);
                unint64_t v114 = sub_1D6C64510(v107, v106);
                if ((v113 & 1) != (v115 & 1)) {
                  goto LABEL_100;
                }
                unint64_t v109 = v114;
                uint64_t v63 = (void *)v143[0];
                if ((v113 & 1) == 0)
                {
LABEL_82:
                  v63[(v109 >> 6) + 8] |= 1 << v109;
                  uint64_t v116 = (uint64_t *)(v63[6] + 16 * v109);
                  *uint64_t v116 = v107;
                  v116[1] = v106;
                  *(void *)(v63[7] + 8 * v109) = v7;
                  uint64_t v117 = v63[2];
                  BOOL v92 = __OFADD__(v117, 1);
                  uint64_t v118 = v117 + 1;
                  if (v92)
                  {
                    __break(1u);
LABEL_89:
                    __break(1u);
LABEL_90:
                    __break(1u);
                    goto LABEL_91;
                  }
                  v63[2] = v118;
                  goto LABEL_56;
                }
              }
              swift_bridgeObjectRelease();
              *(void *)(v63[7] + 8 * v109) = v7;
LABEL_56:
              char isUniquelyReferenced_nonNull_native = 1;
              uint64_t v82 = a1;
              uint64_t v98 = v145;
              goto LABEL_57;
            }
            goto LABEL_96;
          }
        }
        __break(1u);
LABEL_96:
        __break(1u);
        goto LABEL_97;
      }
      break;
    }
    uint64_t v70 = v68 + 1;
    if (!__OFADD__(v68, 1)) {
      break;
    }
LABEL_97:
    __break(1u);
LABEL_98:
    sub_1D6FA9C40();
  }
  if (v70 >= (uint64_t)v124) {
    goto LABEL_87;
  }
  unint64_t v71 = v123[v70];
  ++v68;
  if (v71) {
    goto LABEL_43;
  }
  uint64_t v68 = v70 + 1;
  if (v70 + 1 >= (uint64_t)v124) {
    goto LABEL_87;
  }
  unint64_t v71 = v123[v68];
  if (v71) {
    goto LABEL_43;
  }
  uint64_t v68 = v70 + 2;
  if (v70 + 2 >= (uint64_t)v124) {
    goto LABEL_87;
  }
  unint64_t v71 = v123[v68];
  if (v71) {
    goto LABEL_43;
  }
  uint64_t v68 = v70 + 3;
  if (v70 + 3 >= (uint64_t)v124) {
    goto LABEL_87;
  }
  unint64_t v71 = v123[v68];
  if (v71) {
    goto LABEL_43;
  }
  uint64_t v68 = v70 + 4;
  if (v70 + 4 >= (uint64_t)v124) {
    goto LABEL_87;
  }
  unint64_t v71 = v123[v68];
  if (v71)
  {
LABEL_43:
    unint64_t v136 = (v71 - 1) & v71;
    unint64_t v69 = __clz(__rbit64(v71)) + (v68 << 6);
    goto LABEL_44;
  }
  uint64_t v72 = v70 + 5;
  if (v72 >= (uint64_t)v124)
  {
LABEL_87:
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v119 = sub_1D6EAB584(v7);
    swift_bridgeObjectRelease();
    uint64_t v120 = sub_1D6C56B44((uint64_t)v119);
    uint64_t v121 = swift_bridgeObjectRetain();
    uint64_t v58 = sub_1D6EAC6C8(v121, v120);
    swift_bridgeObjectRelease();
    return v58;
  }
  unint64_t v71 = v123[v72];
  if (v71)
  {
    uint64_t v68 = v72;
    goto LABEL_43;
  }
  while (1)
  {
    uint64_t v68 = v72 + 1;
    if (__OFADD__(v72, 1)) {
      break;
    }
    if (v68 >= (uint64_t)v124) {
      goto LABEL_87;
    }
    unint64_t v71 = v123[v68];
    ++v72;
    if (v71) {
      goto LABEL_43;
    }
  }
  __break(1u);
LABEL_100:
  uint64_t result = sub_1D6FAAB00();
  __break(1u);
  return result;
}

uint64_t sub_1D6EAD7C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D6EAD82C()
{
  unint64_t result = qword_1EA807248;
  if (!qword_1EA807248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA807248);
  }
  return result;
}

uint64_t sub_1D6EAD880(char a1)
{
  uint64_t result = 65;
  switch(a1)
  {
    case 1:
      uint64_t result = 66;
      break;
    case 2:
      uint64_t result = 67;
      break;
    case 3:
      uint64_t result = 68;
      break;
    case 4:
      uint64_t result = 69;
      break;
    case 5:
      uint64_t result = 70;
      break;
    case 6:
      uint64_t result = 71;
      break;
    case 7:
      uint64_t result = 72;
      break;
    case 8:
      uint64_t result = 73;
      break;
    case 9:
      uint64_t result = 74;
      break;
    case 10:
      uint64_t result = 75;
      break;
    case 11:
      uint64_t result = 76;
      break;
    case 12:
      uint64_t result = 77;
      break;
    case 13:
      uint64_t result = 78;
      break;
    case 14:
      uint64_t result = 79;
      break;
    case 15:
      uint64_t result = 80;
      break;
    case 16:
      uint64_t result = 81;
      break;
    case 17:
      uint64_t result = 82;
      break;
    case 18:
      uint64_t result = 83;
      break;
    case 19:
      uint64_t result = 84;
      break;
    case 20:
      uint64_t result = 85;
      break;
    case 21:
      uint64_t result = 86;
      break;
    case 22:
      uint64_t result = 87;
      break;
    case 23:
      uint64_t result = 88;
      break;
    case 24:
      uint64_t result = 89;
      break;
    case 25:
      uint64_t result = 12377;
      break;
    case 26:
      uint64_t result = 12633;
      break;
    case 27:
      uint64_t result = 12889;
      break;
    case 28:
      uint64_t result = 90;
      break;
    case 29:
      uint64_t result = 16705;
      break;
    case 30:
      uint64_t result = 16961;
      break;
    case 31:
      uint64_t result = 3228225;
      break;
    case 32:
      uint64_t result = 17217;
      break;
    case 33:
      uint64_t result = 17473;
      break;
    case 34:
      uint64_t result = 17729;
      break;
    case 35:
      uint64_t result = 17985;
      break;
    case 36:
      uint64_t result = 18241;
      break;
    case 37:
      uint64_t result = 18497;
      break;
    case 38:
      uint64_t result = 18753;
      break;
    case 39:
      uint64_t result = 19009;
      break;
    case 40:
      uint64_t result = 19265;
      break;
    case 41:
      uint64_t result = 19521;
      break;
    case 42:
      uint64_t result = 19777;
      break;
    case 43:
      uint64_t result = 20033;
      break;
    case 44:
      uint64_t result = 20289;
      break;
    case 45:
      uint64_t result = 20545;
      break;
    case 46:
      uint64_t result = 20801;
      break;
    case 47:
      uint64_t result = 21057;
      break;
    case 48:
      uint64_t result = 21313;
      break;
    case 49:
      uint64_t result = 21569;
      break;
    case 50:
      uint64_t result = 21825;
      break;
    case 51:
      uint64_t result = 22081;
      break;
    case 52:
      uint64_t result = 22337;
      break;
    case 53:
      uint64_t result = 22593;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1D6EADBA4(char *a1, char *a2)
{
  char v2 = *a2;
  uint64_t v3 = sub_1D6EAD880(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1D6EAD880(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1D6FAAAA0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D6EADC30()
{
  char v1 = *v0;
  sub_1D6FAAC40();
  sub_1D6EAD880(v1);
  sub_1D6FA99E0();
  swift_bridgeObjectRelease();
  return sub_1D6FAACC0();
}

uint64_t sub_1D6EADC94()
{
  sub_1D6EAD880(*v0);
  sub_1D6FA99E0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6EADCE8()
{
  char v1 = *v0;
  sub_1D6FAAC40();
  sub_1D6EAD880(v1);
  sub_1D6FA99E0();
  swift_bridgeObjectRelease();
  return sub_1D6FAACC0();
}

uint64_t sub_1D6EADD48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1D6EAE054();
  *a1 = result;
  return result;
}

uint64_t sub_1D6EADD78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1D6EAD880(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_1D6EADDA4(void *a1@<X8>)
{
  *a1 = &unk_1F2E3DC60;
}

uint64_t sub_1D6EADDB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = sub_1D6DCDF28(*a1, (uint64_t)&unk_1F2E3DC60);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = sub_1D6DCDF28(v2, (uint64_t)&unk_1F2E3DC60);
    if ((v7 & 1) == 0) {
      return v5 < v6;
    }
  }
  uint64_t result = sub_1D6FAA8C0();
  __break(1u);
  return result;
}

uint64_t sub_1D6EADE5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = sub_1D6DCDF28(*a2, (uint64_t)&unk_1F2E3DC60);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = sub_1D6DCDF28(v2, (uint64_t)&unk_1F2E3DC60);
    if ((v7 & 1) == 0) {
      return v5 >= v6;
    }
  }
  uint64_t result = sub_1D6FAA8C0();
  __break(1u);
  return result;
}

uint64_t sub_1D6EADF04(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = sub_1D6DCDF28(*a1, (uint64_t)&unk_1F2E3DC60);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = sub_1D6DCDF28(v2, (uint64_t)&unk_1F2E3DC60);
    if ((v7 & 1) == 0) {
      return v5 >= v6;
    }
  }
  uint64_t result = sub_1D6FAA8C0();
  __break(1u);
  return result;
}

uint64_t sub_1D6EADFAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = sub_1D6DCDF28(*a2, (uint64_t)&unk_1F2E3DC60);
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = sub_1D6DCDF28(v2, (uint64_t)&unk_1F2E3DC60);
    if ((v7 & 1) == 0) {
      return v5 < v6;
    }
  }
  uint64_t result = sub_1D6FAA8C0();
  __break(1u);
  return result;
}

uint64_t sub_1D6EAE054()
{
  unint64_t v0 = sub_1D6FAAAC0();
  swift_bridgeObjectRelease();
  if (v0 >= 0x36) {
    return 54;
  }
  else {
    return v0;
  }
}

uint64_t sub_1D6EAE0A8(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA8C50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = a1 - 3;
  if ((unint64_t)(a1 - 3) >= 0x1C)
  {
    sub_1D6FA8120();
    char v7 = sub_1D6FA8C40();
    os_log_type_t v8 = sub_1D6FAA160();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 134217984;
      v10[1] = a1;
      sub_1D6FAA4A0();
      _os_log_impl(&dword_1D6748000, v7, v8, "Invalid Legacy Version: %ld.", v9, 0xCu);
      MEMORY[0x1D9468AD0](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return 54;
  }
  return result;
}

uint64_t sub_1D6EAE224(char a1)
{
  return byte_1D6FC3492[a1];
}

uint64_t getEnumTagSinglePayload for PersistenceDataVersion(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xCB) {
    goto LABEL_17;
  }
  if (a2 + 53 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 53) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 53;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 53;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x36;
  int v8 = v6 - 54;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PersistenceDataVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 53 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 53) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xCB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xCA)
  {
    unsigned int v6 = ((a2 - 203) >> 8) + 1;
    *uint64_t result = a2 + 53;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D6EAE394);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 53;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PersistenceDataVersion()
{
  return &type metadata for PersistenceDataVersion;
}

unint64_t sub_1D6EAE3D0()
{
  unint64_t result = qword_1EA807250;
  if (!qword_1EA807250)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA807258);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA807250);
  }
  return result;
}

uint64_t sub_1D6EAE42C(uint64_t a1)
{
  uint64_t v30 = sub_1D6FA29A0();
  uint64_t v3 = *(void *)(v30 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v29 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1D6FA05A0();
  uint64_t v5 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  unint64_t v27 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_1D6FA29C0();
  uint64_t v7 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    v19[1] = v1;
    uint64_t v33 = MEMORY[0x1E4FBC860];
    sub_1D6BBD334(0, v10, 0);
    uint64_t v11 = v33;
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807260);
    int64_t v12 = (uint64_t *)(a1
                    + ((*(unsigned __int8 *)(*(void *)(v23 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v23 - 8) + 80)));
    uint64_t v22 = *(void *)(*(void *)(v23 - 8) + 72);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v24 = v7;
    uint64_t v25 = v5 + 16;
    int64_t v20 = (void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v21 = v13;
    v19[2] = v7 + 32;
    uint64_t v14 = v29;
    do
    {
      uint64_t v31 = *v12;
      int64_t v32 = v10;
      uint64_t v15 = (char *)v12 + *(int *)(v23 + 64);
      v21(v27, (char *)v12 + *(int *)(v23 + 48), v28);
      (*v20)(v14, v15, v30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D6FA2940();
      uint64_t v33 = v11;
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D6BBD334(v16 > 1, v17 + 1, 1);
        uint64_t v11 = v33;
      }
      int64_t v12 = (uint64_t *)((char *)v12 + v22);
      *(void *)(v11 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v24 + 32))(v11+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v17, v9, v26);
      int64_t v10 = v32 - 1;
    }
    while (v32 != 1);
  }
  return v11;
}

void sub_1D6EAE7CC(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD918);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v42 = (char *)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D6FA29A0();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v41 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v45 = (char *)v40 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v10 - 8);
  int64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1D6FA05A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v40 - v18;
  id v20 = objc_msgSend(a1, sel_build);
  if (!v20) {
    goto LABEL_13;
  }
  uint64_t v21 = v20;
  v40[4] = sub_1D6FA98E0();
  uint64_t v46 = v22;

  id v23 = objc_msgSend(a1, sel_date);
  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_9;
  }
  uint64_t v24 = v23;
  v40[3] = a2;
  sub_1D6FA0560();

  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v25(v12, v17, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t *)&unk_1EBD9F790;
    uint64_t v37 = (uint64_t)v12;
    goto LABEL_10;
  }
  v25(v19, v12, v13);
  id v26 = objc_msgSend(a1, sel_token);
  if (!v26)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    goto LABEL_13;
  }
  unint64_t v27 = v26;
  uint64_t v28 = sub_1D6FA98E0();
  uint64_t v30 = v29;

  id v31 = objc_msgSend(a1, sel_status);
  if (!v31)
  {
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  int64_t v32 = v31;
  v40[1] = v28;
  v40[2] = v30;
  sub_1D6FA98E0();

  uint64_t v33 = v42;
  sub_1D6FA2980();
  uint64_t v35 = v43;
  uint64_t v34 = v44;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v33, 1, v44) == 1)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = &qword_1EBDAD918;
    uint64_t v37 = (uint64_t)v33;
LABEL_10:
    sub_1D6753E1C(v37, v36);
LABEL_13:
    uint64_t v38 = sub_1D6FA2760();
    sub_1D6EAEF9C((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v38 - 8) + 104))(v39, *MEMORY[0x1E4F9CE00], v38);
    swift_willThrow();

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v45, v33, v34);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v41, v45, v34);
  sub_1D6FA2940();

  (*(void (**)(char *, uint64_t))(v35 + 8))(v45, v34);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
}

uint64_t static CatalogSyncAnchor.representativeSamples()()
{
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA2970();
  sub_1D6FA9970();
  sub_1D6FA05A0();
  sub_1D6FA29A0();
  uint64_t v0 = sub_1D6FA1060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1D6EAE42C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

void sub_1D6EAEE34(unsigned char *a1@<X8>)
{
  *a1 = 26;
}

void sub_1D6EAEE40(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1D6EAEE58(void *a1)
{
}

uint64_t sub_1D6EAEE70(uint64_t a1)
{
  uint64_t result = sub_1D6EAEF9C(&qword_1EBDABDC0, MEMORY[0x1E4F9D008]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D6EAEEC8()
{
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA2970();
  sub_1D6FA9970();
  sub_1D6FA05A0();
  sub_1D6FA29A0();
  uint64_t v0 = sub_1D6FA1060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1D6EAE42C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1D6EAEF9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D6EAEFE4(void *a1)
{
  uint64_t v14 = sub_1D6FA29A0();
  uint64_t v2 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1D6FA05A0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA2950();
  uint64_t v9 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setBuild_, v9);

  sub_1D6FA2930();
  uint64_t v10 = (void *)sub_1D6FA04F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  objc_msgSend(a1, sel_setDate_, v10);

  sub_1D6FA29B0();
  sub_1D6FA2990();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v14);
  uint64_t v11 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setStatus_, v11);

  sub_1D6FA2960();
  int64_t v12 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setToken_, v12);
}

uint64_t sub_1D6EAF238()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D6FA70D0();
  uint64_t v35 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D6FA8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA80E0();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[4];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v36 = v10;
  int64_t v12 = *(void (**)(char *, void, uint64_t))(v3 + 104);
  v12(v5, *MEMORY[0x1E4F9B2A8], v2);
  uint64_t v31 = v3 + 104;
  uint64_t v13 = v12;
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v34 = v11;
  sub_1D6FA76C0();
  swift_release();
  int64_t v32 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v30 = v3 + 8;
  uint64_t v14 = v35;
  v32(v5, v35);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v36 = v10;
  v12(v5, *MEMORY[0x1E4F9B4A0], v14);
  swift_allocObject();
  uint64_t v28 = v1;
  swift_weakInit();
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA7BE8);
  sub_1D6EB0430();
  sub_1D6EB049C();
  sub_1D6FA7650();
  swift_release();
  uint64_t v15 = v35;
  uint64_t v16 = v32;
  v32(v5, v35);
  swift_unknownObjectRelease();
  uint64_t v36 = v10;
  uint64_t v17 = *MEMORY[0x1E4F9AF20];
  uint64_t v29 = v13;
  v13(v5, v17, v15);
  swift_allocObject();
  swift_weakInit();
  uint64_t v18 = v10;
  swift_unknownObjectRetain();
  swift_retain();
  sub_1D6FA76C0();
  swift_release();
  uint64_t v19 = v35;
  v16(v5, v35);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v36 = v18;
  v13(v5, *MEMORY[0x1E4F9ADC0], v19);
  swift_allocObject();
  id v20 = v28;
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7690();
  swift_release();
  uint64_t v21 = v35;
  uint64_t v22 = v32;
  v32(v5, v35);
  swift_unknownObjectRelease();
  uint64_t v36 = v18;
  v29(v5, *MEMORY[0x1E4F9B130], v21);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1D6FA76C0();
  swift_release();
  v22(v5, v21);
  swift_release();
  swift_unknownObjectRelease();
  id v23 = v20;
  v20 += 10;
  __swift_project_boxed_opaque_existential_1(v20, v23[13]);
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  sub_1D6A192FC(24, (uint64_t)sub_1D6EB0778, v24);
  swift_release();
  __swift_project_boxed_opaque_existential_1(v20, v23[13]);
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  sub_1D691EA34(51, (uint64_t)sub_1D6EB0780, v25);
  return swift_release();
}

uint64_t sub_1D6EAF8F8(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  return MEMORY[0x1F4188298](sub_1D6EAF918, 0, 0);
}

uint64_t sub_1D6EAF918()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_release();
    uint64_t v4 = (uint64_t (__cdecl *)())((char *)&dword_1EA807408 + dword_1EA807408);
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 48) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1D6AF850C;
    return v4();
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
}

uint64_t sub_1D6EAFA18@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 40, (uint64_t)v11);
    swift_release();
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    char v5 = MEMORY[0x1D9464320](v3);
    if (v5 == 4) {
      char v6 = 1;
    }
    else {
      char v6 = v5;
    }
    uint64_t v7 = (void (*)(char))off_1F2E79BC8;
    type metadata accessor for AdminSystem();
    v7(v6);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8072A8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 0, 1, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8072A8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 1, 1, v10);
  }
}

uint64_t sub_1D6EAFB80(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return MEMORY[0x1F4188298](sub_1D6EAFBA0, 0, 0);
}

uint64_t sub_1D6EAFBA0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 40, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[11] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D678D6C8;
    return sub_1D6F00EB4();
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1D6EAFCB0(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = a3;
  *(unsigned char *)(v3 + 128) = *a2;
  return MEMORY[0x1F4188298](sub_1D6EAFCD8, 0, 0);
}

uint64_t sub_1D6EAFCD8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    char v2 = *(unsigned char *)(v0 + 128);
    sub_1D6754034(Strong + 40, v0 + 16);
    swift_release();
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1D6EAFE04;
    return sub_1D6F011F0(v2);
  }
  else
  {
    uint64_t v5 = *(void **)(v0 + 80);
    *uint64_t v5 = 0;
    v5[1] = 0;
    char v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_1D6EAFE04(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 104) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_1D678E8D0;
  }
  else
  {
    *(void *)(v6 + 112) = a2;
    *(void *)(v6 + 120) = a1;
    uint64_t v7 = sub_1D6EAFF38;
  }
  return MEMORY[0x1F4188298](v7, 0, 0);
}

uint64_t sub_1D6EAFF38()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = (void *)v0[10];
  *uint64_t v2 = v0[15];
  v2[1] = v1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1D6EAFFA8(uint64_t a1)
{
  *(void *)(v1 + 80) = a1;
  return MEMORY[0x1F4188298](sub_1D6EAFFC8, 0, 0);
}

uint64_t sub_1D6EAFFC8()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 40, (uint64_t)(v0 + 2));
    swift_release();
    __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
    uint64_t v2 = (void *)swift_task_alloc();
    v0[11] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1D67FD9A4;
    return sub_1D6F01ABC();
  }
  else
  {
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1D6EB00D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  unint64_t v3 = a1[1];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 40, (uint64_t)v9);
    swift_release();
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    sub_1D6F00C8C(v4, v3, a2);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
}

uint64_t sub_1D6EB0204@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 40, (uint64_t)v8);
    swift_release();
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1D6F0016C(v3, a2);
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA803770);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a2, 0, 1, v5);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA803770);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 1, 1, v7);
  }
}

uint64_t type metadata accessor for AdminListener()
{
  return self;
}

uint64_t sub_1D6EB0348()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EB0380()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1D6786194;
  v2[5] = v0;
  return MEMORY[0x1F4188298](sub_1D6EAF918, 0, 0);
}

uint64_t sub_1D6EB0428@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EAFA18(a1, a2);
}

unint64_t sub_1D6EB0430()
{
  unint64_t result = qword_1EBDAAD80;
  if (!qword_1EBDAAD80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDA7BE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAD80);
  }
  return result;
}

unint64_t sub_1D6EB049C()
{
  unint64_t result = qword_1EBDAAD88;
  if (!qword_1EBDAAD88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EBDA7BE8);
    sub_1D6EB0510();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAAD88);
  }
  return result;
}

unint64_t sub_1D6EB0510()
{
  unint64_t result = qword_1EBDA77C8;
  if (!qword_1EBDA77C8)
  {
    sub_1D6FA2F40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDA77C8);
  }
  return result;
}

uint64_t sub_1D6EB0568()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1D6786194;
  v2[10] = v0;
  return MEMORY[0x1F4188298](sub_1D6EAFBA0, 0, 0);
}

uint64_t sub_1D6EB0610(uint64_t a1, unsigned char *a2)
{
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 16) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_1D67824A8;
  *(void *)(v6 + 80) = a1;
  *(void *)(v6 + 88) = v2;
  *(unsigned char *)(v6 + 128) = *a2;
  return MEMORY[0x1F4188298](sub_1D6EAFCD8, 0, 0);
}

uint64_t sub_1D6EB06D0()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1D6786194;
  v2[10] = v0;
  return MEMORY[0x1F4188298](sub_1D6EAFFC8, 0, 0);
}

uint64_t sub_1D6EB0778@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB00D8(a1, a2);
}

uint64_t sub_1D6EB0780@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB0204(a1, a2);
}

uint64_t type metadata accessor for ContentAvailabilityScriptClient()
{
  return self;
}

uint64_t sub_1D6EB07AC(uint64_t a1)
{
  uint64_t v23 = sub_1D6FA05A0();
  uint64_t v3 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1D6FA4090();
  uint64_t v6 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    v18[1] = v1;
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1D6BBD914(0, v9, 0);
    uint64_t v10 = v24;
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8072B8);
    uint64_t v11 = a1
        + ((*(unsigned __int8 *)(*(void *)(v21 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v21 - 8) + 80));
    uint64_t v20 = *(void *)(*(void *)(v21 - 8) + 72);
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v12 = v3 + 16;
    v18[2] = v6 + 32;
    uint64_t v19 = v13;
    do
    {
      uint64_t v14 = v12;
      v19(v5, v11 + *(int *)(v21 + 48), v23);
      sub_1D6FA4060();
      uint64_t v24 = v10;
      unint64_t v16 = *(void *)(v10 + 16);
      unint64_t v15 = *(void *)(v10 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1D6BBD914(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v24;
      }
      v11 += v20;
      *(void *)(v10 + 16) = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16, v8, v22);
      --v9;
      uint64_t v12 = v14;
    }
    while (v9);
  }
  return v10;
}

void sub_1D6EB0A58(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D6FA05A0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v19 - v12;
  id v14 = objc_msgSend(a1, sel_firstWeekdayOfStreakEnd);
  if (v14)
  {
    unint64_t v15 = v14;
    v19[1] = a2;
    sub_1D6FA0560();

    unint64_t v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v16(v6, v11, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
    {
      v16(v13, v6, v7);
      objc_msgSend(a1, sel_length);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
      sub_1D6FA4060();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
      return;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
  }
  sub_1D68017CC((uint64_t)v6);
  uint64_t v17 = sub_1D6FA2760();
  sub_1D6EB1140((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, *MEMORY[0x1E4F9CE00], v17);
  swift_willThrow();
}

uint64_t static AchievementWeeklyStreak.representativeSamples()()
{
  uint64_t v0 = sub_1D6FA05A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D6750160();
  sub_1D6FAA8A0();
  sub_1D6FA0490();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF638);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6FAE050;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  uint64_t v6 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1D6EB07AC(v6);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

void sub_1D6EB0F10(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1D6EB0F28(void *a1)
{
}

uint64_t sub_1D6EB0F40(uint64_t a1)
{
  uint64_t result = sub_1D6EB1140(&qword_1EA8072B0, MEMORY[0x1E4F9DD58]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D6EB0F98()
{
  uint64_t v0 = sub_1D6FA05A0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1D6750160();
  sub_1D6FAA8A0();
  sub_1D6FA0490();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF638);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6FAE050;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  uint64_t v6 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1D6EB07AC(v6);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
  return v7;
}

uint64_t sub_1D6EB1140(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D6EB1188(void *a1)
{
  uint64_t v2 = sub_1D6FA05A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D6FA4070();
  int64_t v7 = 0x7FFFFFFFLL;
  if (v6 < 0x7FFFFFFF) {
    int64_t v7 = v6;
  }
  if (v7 <= (uint64_t)0xFFFFFFFF80000000) {
    unint64_t v8 = 0xFFFFFFFF80000000;
  }
  else {
    unint64_t v8 = v7;
  }
  objc_msgSend(a1, sel_setLength_, v8);
  sub_1D6FA4040();
  uint64_t v9 = (void *)sub_1D6FA04F0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  objc_msgSend(a1, sel_setFirstWeekdayOfStreakEnd_, v9);
}

uint64_t sub_1D6EB12AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1D6FA70D0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  uint64_t v45 = v3;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D6FA8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA80E0();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v34 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v49 = v10;
  unsigned int v41 = *MEMORY[0x1E4F9B218];
  uint64_t v47 = *(void (**)(char *))(v3 + 104);
  v47(v5);
  uint64_t v46 = v3 + 104;
  swift_allocObject();
  uint64_t v12 = v1;
  swift_weakInit();
  uint64_t v40 = sub_1D6FA39C0();
  swift_unknownObjectRetain();
  uint64_t v35 = ObjectType;
  sub_1D6FA7660();
  swift_release();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v45 + 8);
  v45 += 8;
  uint64_t v48 = v13;
  v13(v5, v44);
  swift_unknownObjectRelease();
  uint64_t v49 = v10;
  unsigned int v39 = *MEMORY[0x1E4F9AE50];
  id v14 = v47;
  v47(v5);
  swift_allocObject();
  swift_weakInit();
  uint64_t v15 = sub_1D6FA3AE0();
  uint64_t v16 = sub_1D6FA0920();
  swift_unknownObjectRetain();
  uint64_t v36 = v16;
  sub_1D6FA7650();
  swift_release();
  v48(v5, v44);
  swift_unknownObjectRelease();
  uint64_t v49 = v10;
  unsigned int v38 = *MEMORY[0x1E4F9AE80];
  v14(v5);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  uint64_t v43 = v15;
  sub_1D6FA7650();
  swift_release();
  uint64_t v17 = v44;
  uint64_t v18 = v48;
  v48(v5, v44);
  swift_unknownObjectRelease();
  uint64_t v49 = v10;
  unsigned int v37 = *MEMORY[0x1E4F9AF00];
  v47(v5);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7670();
  swift_release();
  uint64_t v19 = v17;
  v18(v5, v17);
  swift_unknownObjectRelease();
  uint64_t v20 = *(void *)(v12 + 40);
  uint64_t v35 = *(void *)(v12 + 56);
  uint64_t v42 = v12;
  uint64_t v21 = swift_getObjectType();
  uint64_t v49 = v20;
  uint64_t v22 = v47;
  ((void (*)(char *, void, uint64_t))v47)(v5, v41, v19);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  uint64_t v34 = v21;
  sub_1D6FA7660();
  swift_release();
  uint64_t v23 = v44;
  v48(v5, v44);
  swift_unknownObjectRelease();
  uint64_t v49 = v20;
  ((void (*)(char *, void, uint64_t))v22)(v5, v39, v23);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7650();
  swift_release();
  uint64_t v24 = v48;
  v48(v5, v23);
  swift_unknownObjectRelease();
  uint64_t v49 = v20;
  uint64_t v25 = v47;
  ((void (*)(char *, void, uint64_t))v47)(v5, v38, v23);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7650();
  swift_release();
  uint64_t v26 = v44;
  v24(v5, v44);
  swift_unknownObjectRelease();
  uint64_t v49 = v20;
  ((void (*)(char *, void, uint64_t))v25)(v5, v37, v26);
  swift_allocObject();
  uint64_t v27 = v42;
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7670();
  swift_release();
  v24(v5, v26);
  swift_unknownObjectRelease();
  uint64_t v28 = *(void *)(v27 + 64);
  uint64_t v35 = *(void *)(v27 + 80);
  uint64_t v34 = swift_getObjectType();
  uint64_t v49 = v28;
  uint64_t v29 = v47;
  ((void (*)(char *, void, uint64_t))v47)(v5, v41, v26);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7660();
  swift_release();
  uint64_t v30 = v48;
  v48(v5, v26);
  swift_unknownObjectRelease();
  uint64_t v49 = v28;
  ((void (*)(char *, void, uint64_t))v29)(v5, v39, v26);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7650();
  swift_release();
  v30(v5, v26);
  swift_unknownObjectRelease();
  uint64_t v49 = v28;
  ((void (*)(char *, void, uint64_t))v29)(v5, v38, v26);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7650();
  swift_release();
  uint64_t v31 = v48;
  v48(v5, v26);
  swift_unknownObjectRelease();
  uint64_t v49 = v28;
  ((void (*)(char *, void, uint64_t))v47)(v5, v37, v26);
  swift_allocObject();
  swift_weakInit();
  swift_unknownObjectRetain();
  sub_1D6FA7670();
  swift_release();
  v31(v5, v44);
  return swift_unknownObjectRelease();
}

uint64_t sub_1D6EB1EA0@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 88, (uint64_t)v9);
    swift_release();
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    uint64_t v5 = (void (*)(char))off_1F2E747B8[0];
    type metadata accessor for RemoteKeyDeliverySystem();
    v5(a1);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F1B0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 0, 1, v6);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F1B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
  }
}

uint64_t sub_1D6EB1FF4@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 88, (uint64_t)v11);
    swift_release();
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    uint64_t v7 = (void (*)(uint64_t@<X0>, int@<W1>, uint64_t@<X8>))off_1F2E747C0[0];
    type metadata accessor for RemoteKeyDeliverySystem();
    v7(a1, a2, a3);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA800220);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a3, 0, 1, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA800220);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 1, 1, v10);
  }
}

uint64_t sub_1D6EB2158@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 88, (uint64_t)v11);
    swift_release();
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    uint64_t v7 = (void (*)(uint64_t@<X0>, int@<W1>, uint64_t@<X8>))off_1F2E747C8[0];
    type metadata accessor for RemoteKeyDeliverySystem();
    v7(a1, a2, a3);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA800220);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a3, 0, 1, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA800220);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 1, 1, v10);
  }
}

uint64_t sub_1D6EB22BC@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_1D6754034(Strong + 88, (uint64_t)v11);
    swift_release();
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    uint64_t v7 = (void (*)(uint64_t@<X0>, int@<W1>, uint64_t@<X8>))off_1F2E747D0[0];
    type metadata accessor for RemoteKeyDeliverySystem();
    v7(a1, a2, a3);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a3, 0, 1, v8);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB01B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 1, 1, v10);
  }
}

uint64_t type metadata accessor for RemoteKeyDeliveryListener()
{
  return self;
}

uint64_t sub_1D6EB2444()
{
  swift_weakDestroy();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EB247C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D6EB1EA0(0, a1);
}

uint64_t sub_1D6EB249C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB1FF4(a1, 0, a2);
}

uint64_t sub_1D6EB24BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB2158(a1, 0, a2);
}

uint64_t sub_1D6EB24DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB22BC(a1, 0, a2);
}

uint64_t sub_1D6EB24FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1D6EB1EA0(2, a1);
}

uint64_t sub_1D6EB251C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB1FF4(a1, 2, a2);
}

uint64_t sub_1D6EB253C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB2158(a1, 2, a2);
}

uint64_t sub_1D6EB255C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB22BC(a1, 2, a2);
}

uint64_t sub_1D6EB257C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D6EB1EA0(3, a1);
}

uint64_t sub_1D6EB259C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB1FF4(a1, 3, a2);
}

uint64_t sub_1D6EB25BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB2158(a1, 3, a2);
}

uint64_t sub_1D6EB25DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EB22BC(a1, 3, a2);
}

uint64_t sub_1D6EB25FC(uint64_t a1)
{
  uint64_t v25 = sub_1D6FA6150();
  uint64_t v3 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_1D6FA48A0();
  uint64_t v6 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    v19[0] = v1;
    uint64_t v26 = MEMORY[0x1E4FBC860];
    sub_1D6BBD4D4(0, v9, 0);
    uint64_t v10 = v26;
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8072C8);
    uint64_t v11 = a1
        + ((*(unsigned __int8 *)(*(void *)(v22 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v22 - 8) + 80));
    uint64_t v21 = *(void *)(*(void *)(v22 - 8) + 72);
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v23 = v3 + 16;
    v19[1] = v6 + 32;
    uint64_t v20 = v12;
    do
    {
      uint64_t v13 = *(void *)v11;
      uint64_t v14 = *(void *)(v11 + 8);
      char v15 = *(unsigned char *)(v11 + 16);
      v20(v5, v11 + *(int *)(v22 + 48), v25);
      sub_1D67DE9F4(v13, v14, v15);
      sub_1D6FA4880();
      uint64_t v26 = v10;
      unint64_t v17 = *(void *)(v10 + 16);
      unint64_t v16 = *(void *)(v10 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1D6BBD4D4(v16 > 1, v17 + 1, 1);
        uint64_t v10 = v26;
      }
      v11 += v21;
      *(void *)(v10 + 16) = v17 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17, v8, v24);
      --v9;
    }
    while (v9);
  }
  return v10;
}

void sub_1D6EB28C4(id a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF890);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D6FA6150();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v24 - v13;
  id v15 = objc_msgSend(a1, sel_behavior);
  if (!v15) {
    goto LABEL_6;
  }
  unint64_t v16 = v15;
  uint64_t v30 = v2;
  uint64_t v17 = a2;
  uint64_t v27 = sub_1D6FA98E0();
  uint64_t v19 = v18;

  id v20 = objc_msgSend(a1, sel_modalityConstraint);
  if (!v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  uint64_t v21 = v20;
  uint64_t v25 = v19;
  id v26 = a1;
  v24[1] = v17;
  sub_1D6FA98E0();

  sub_1D6FA6130();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1D6852134((uint64_t)v7);
    a1 = v26;
LABEL_6:
    uint64_t v22 = sub_1D6FA2760();
    sub_1D6EB3048((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v23, *MEMORY[0x1E4F9CE00], v22);
    swift_willThrow();

    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
  uint64_t v28 = v27;
  uint64_t v29 = v25;
  sub_1D67D6BC0();
  sub_1D6FA12D0();
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, v8);
  sub_1D6FA4880();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
}

uint64_t static MetricsDisplayPreference.representativeSamples()()
{
  sub_1D6EB2DB8();
  sub_1D67D6BC0();
  sub_1D6FA1330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8044B0);
  uint64_t v0 = sub_1D6FA6150();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D6FAEB70;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(void))(v1 + 104);
  ((void (*)(unint64_t, void, uint64_t))v6)(v5, *MEMORY[0x1E4F9EB70], v0);
  uint64_t v7 = (void *)(v5 + v2);
  *uint64_t v7 = 0x6E776F6E6B6E75;
  v7[1] = 0xE700000000000000;
  v6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA806240);
  uint64_t v8 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1D6EB25FC(v8);
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_1D6EB2DB8()
{
  unint64_t result = qword_1EA8072C0;
  if (!qword_1EA8072C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8072C0);
  }
  return result;
}

void sub_1D6EB2E0C(unsigned char *a1@<X8>)
{
  *a1 = 57;
}

void sub_1D6EB2E18(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1D6EB2E30(void *a1)
{
}

uint64_t sub_1D6EB2E48(uint64_t a1)
{
  uint64_t result = sub_1D6EB3048((unint64_t *)&unk_1EBD9FB30, MEMORY[0x1E4F9E170]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D6EB2EA0()
{
  sub_1D6EB2DB8();
  sub_1D67D6BC0();
  sub_1D6FA1330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8044B0);
  uint64_t v0 = sub_1D6FA6150();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D6FAEB70;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(void))(v1 + 104);
  ((void (*)(unint64_t, void, uint64_t))v6)(v5, *MEMORY[0x1E4F9EB70], v0);
  uint64_t v7 = (void *)(v5 + v2);
  *uint64_t v7 = 0x6E776F6E6B6E75;
  v7[1] = 0xE700000000000000;
  v6();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA806240);
  uint64_t v8 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1D6EB25FC(v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1D6EB3048(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1D6EB3090(void *a1)
{
  uint64_t v2 = sub_1D6FA6150();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D6FA4890();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  v13[1] = v6;
  void v13[2] = v7;
  char v14 = v9 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA806240);
  sub_1D6FA12C0();
  sub_1D67A397C(v6, v8, v10);
  uint64_t v11 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setBehavior_, v11);

  sub_1D6FA4870();
  sub_1D6FA6140();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v12 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setModalityConstraint_, v12);
}

unsigned char *storeEnumTagSinglePayload for AssetPurgeUrgency(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1D6EB32FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetPurgeUrgency()
{
  return &type metadata for AssetPurgeUrgency;
}

unint64_t sub_1D6EB3338()
{
  unint64_t result = qword_1EA8072D0;
  if (!qword_1EA8072D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8072D0);
  }
  return result;
}

void *NSPersistentStoreDescription.makeSQLiteDatabaseHandle()()
{
  uint64_t v32 = sub_1D6FA8CD0();
  uint64_t v31 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v30 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for SQLiteDatabase();
  MEMORY[0x1F4188790](v29);
  unsigned int v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F260);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D6FA02E0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v13 = MEMORY[0x1F4188790](v12);
  id v15 = (char *)&v28 - v14;
  id v16 = objc_msgSend(v0, sel_URL, v13);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_7;
  }
  uint64_t v17 = v16;
  uint64_t v28 = v1;
  sub_1D6FA0280();

  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v18(v7, v11, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_7:
    sub_1D67DE7B4((uint64_t)v7);
    sub_1D68BE8E0();
    swift_allocError();
    *(_OWORD *)uint64_t v26 = xmmword_1D6FB3020;
    *(unsigned char *)(v26 + 16) = 2;
    swift_willThrow();
    return v0;
  }
  v18(v15, v7, v8);
  uint64_t v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8004E8) + 48);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v4, v15, v8);
  v4[v19] = sub_1D68BEB5C();
  swift_storeEnumTagMultiPayload();
  sub_1D6753914();
  uint64_t v21 = v30;
  uint64_t v20 = v31;
  uint64_t v22 = v32;
  (*(void (**)(char *, void, uint64_t))(v31 + 104))(v30, *MEMORY[0x1E4FBCB48], v32);
  uint64_t v23 = (void *)sub_1D6FAA250();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
  uint64_t v0 = v4;
  uint64_t v24 = v28;
  uint64_t v25 = SQLiteDatabase.makeHandle(queue:)(v23);
  if (!v24) {
    uint64_t v0 = (void *)v25;
  }

  sub_1D684F2F0((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  return v0;
}

uint64_t sub_1D6EB37B0()
{
  uint64_t v0 = sub_1D6FA70F0();
  MEMORY[0x1F4188790](v0);
  (*(void (**)(unsigned char *, void))(v2 + 104))(&v4[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x1E4F9B870]);
  v4[15] = 1;
  return sub_1D6FA6CD0();
}

uint64_t sub_1D6EB38A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a4, a1, v8);
  uint64_t result = type metadata accessor for EfficientQuery();
  *(void *)(a4 + *(int *)(result + 28)) = a2;
  *(void *)(a4 + *(int *)(result + 32)) = a3;
  return result;
}

void sub_1D6EB393C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  sub_1D6FA6CA0();
  if (v12 == 1) {
    sub_1D6EB410C(a1, a2, (uint64_t)a3, a4, a5);
  }
  else {
    sub_1D6EB3BC0(a1, a2, a3, a4, a5, a6);
  }
}

void sub_1D6EB39F0(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + *(int *)(a1 + 28));
  if ((uint64_t)objc_msgSend(v3, sel_fetchOffset) < 1 || objc_msgSend(v3, sel_fetchLimit))
  {
    sub_1D6FAA2C0();
  }
  else
  {
    objc_msgSend(v3, sel_copy);
    sub_1D6FAA520();
    swift_unknownObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD4F0);
    if (swift_dynamicCast())
    {
      objc_msgSend(v9, sel_setFetchLimit_, 0);
      objc_msgSend(v9, sel_setFetchOffset_, 0);
      uint64_t v4 = sub_1D6FAA2C0();
      if (v2)
      {
      }
      else
      {
        uint64_t v7 = v4;
        id v8 = objc_msgSend(v3, sel_fetchOffset);

        if (__OFSUB__(v7, v8)) {
          __break(1u);
        }
      }
    }
    else
    {
      uint64_t v5 = sub_1D6FA2760();
      sub_1D681E25C();
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, *MEMORY[0x1E4F9CDC8], v5);
      swift_willThrow();
    }
  }
}

void sub_1D6EB3BC0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  double v13 = (void *)MEMORY[0x1D9467FF0]();
  sub_1D6EB3C54(v6, a1, a2, a3, *(void *)(a4 + 16), a5, a6);
}

uint64_t sub_1D6EB3C54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v42 = a4;
  uint64_t v37 = a3;
  uint64_t v38 = a7;
  uint64_t v39 = a2;
  uint64_t v11 = *(void *)(a6 - 8);
  MEMORY[0x1F4188790](a1);
  double v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for EfficientQuery();
  uint64_t v15 = *(int *)(v14 + 28);
  uint64_t v36 = *(int *)(v14 + 32);
  id v16 = *(void **)(a1 + v15);
  uint64_t result = sub_1D6FAA2D0();
  if (!v7)
  {
    uint64_t v18 = result;
    uint64_t v33 = v11;
    uint64_t v34 = a1;
    uint64_t v35 = v13;
    uint64_t v19 = v42;
    if ((uint64_t)objc_msgSend(v16, sel_fetchBatchSize) <= 0)
    {
      uint64_t result = MEMORY[0x1D9466CB0](v18, a5);
      uint64_t v20 = 100;
      uint64_t v23 = v19;
      uint64_t v24 = v35;
      uint64_t v22 = a6;
    }
    else
    {
      uint64_t v20 = (uint64_t)objc_msgSend(v16, sel_fetchBatchSize);
      uint64_t result = MEMORY[0x1D9466CB0](v18, a5);
      if (!v20)
      {
        __break(1u);
        goto LABEL_16;
      }
      if (result == 0x8000000000000000 && v20 == -1) {
        goto LABEL_19;
      }
      uint64_t v22 = a6;
      uint64_t v23 = v19;
      uint64_t v24 = v35;
    }
    uint64_t v25 = v34;
    uint64_t v26 = result / v20;
    uint64_t v27 = result / v20 * v20;
    if ((unsigned __int128)(result / v20 * (__int128)v20) >> 64 == v27 >> 63)
    {
      BOOL v28 = v27 != result;
      BOOL v29 = __OFADD__(v26, v28);
      uint64_t v30 = v26 + v28;
      if (!v29)
      {
        if ((v30 & 0x8000000000000000) == 0)
        {
          uint64_t v40 = 0;
          uint64_t v41 = v30;
          uint64_t v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 16))(v24, v39, v22);
          uint64_t v42 = &v32;
          MEMORY[0x1F4188790](v31);
          *(&v32 - 8) = a5;
          *(&v32 - 7) = v22;
          *(&v32 - 6) = v20;
          *(&v32 - 5) = v18;
          *(&v32 - 4) = v37;
          *(&v32 - 3) = (uint64_t)v23;
          *(&v32 - 2) = v25;
          __swift_instantiateConcreteTypeFromMangledName(qword_1EBDAC1D8);
          sub_1D6EB46C8();
          sub_1D6FA9B30();
          swift_bridgeObjectRelease();
          return (uint64_t)objc_msgSend(*(id *)(v25 + v36), sel_reset);
        }
        goto LABEL_18;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      return result;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  return result;
}

uint64_t sub_1D6EB3EF0(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t), uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v10 = *a2 * a3;
  if ((unsigned __int128)(*a2 * (__int128)a3) >> 64 != v10 >> 63)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v11 = v10 + a3;
  if (__OFADD__(v10, a3))
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v15 = result;
  uint64_t result = MEMORY[0x1D9466CB0](a4, a8);
  if (v11 >= result) {
    uint64_t v16 = result;
  }
  else {
    uint64_t v16 = v11;
  }
  if (v16 < v10) {
    goto LABEL_12;
  }
  sub_1D6FA9CD0();
  uint64_t v17 = (void *)MEMORY[0x1D9467FF0]();
  sub_1D6EB403C(a5, a6, v15);
  if (!v9) {
    objc_msgSend(*(id *)(a7 + *(int *)(type metadata accessor for EfficientQuery() + 32)), sel_reset, a9);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_1D6EB403C(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  sub_1D6FAA540();
  swift_unknownObjectRetain();
  swift_getWitnessTable();
  uint64_t v5 = sub_1D6FA9CC0();
  a1(a3, v5);
  return swift_bridgeObjectRelease();
}

void sub_1D6EB410C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void **)(v5 + *(int *)(a4 + 28));
  uint64_t v11 = (uint64_t)objc_msgSend(v10, sel_fetchBatchSize);
  id v12 = objc_msgSend(v10, sel_fetchOffset);
  sub_1D6EB39F0(a4);
  if (!v6)
  {
    if (v11)
    {
      uint64_t v14 = v13;
      if (v13 == 0x8000000000000000 && v11 == -1) {
        goto LABEL_12;
      }
      uint64_t v15 = v13 / v11;
      uint64_t v16 = v13 / v11 * v11;
      if ((unsigned __int128)(v13 / v11 * (__int128)v11) >> 64 == v16 >> 63)
      {
        uint64_t v21 = a2;
        BOOL v17 = v16 != v13;
        uint64_t v18 = v15 + v17;
        if (!__OFADD__(v15, v17))
        {
          uint64_t v19 = a1;
          uint64_t v20 = (void *)MEMORY[0x1D9467FF0]();
          sub_1D6EB424C(v18, v19, v5, v14, v11, (uint64_t)v12, v21, a3, *(void *)(a4 + 16), a5);
          return;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
  }
}

uint64_t sub_1D6EB424C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v33 = a3;
  uint64_t result = MEMORY[0x1F4188790](a1);
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v31 = 0;
    uint64_t v32 = a1;
    uint64_t v21 = *(uint64_t (**)(char *))(v19 + 16);
    uint64_t v29 = v18;
    uint64_t v28 = v17;
    uint64_t v22 = v16;
    uint64_t v23 = v15;
    uint64_t v24 = v14;
    uint64_t v25 = v13;
    uint64_t v26 = v21((char *)v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t v30 = v27;
    MEMORY[0x1F4188790](v26);
    v27[1] = a9;
    v27[-10] = a9;
    v27[-9] = a10;
    v27[-8] = v33;
    v27[-7] = a1;
    v27[-6] = v25;
    v27[-5] = v24;
    v27[-4] = v23;
    v27[-3] = v22;
    v27[-2] = v28;
    __swift_instantiateConcreteTypeFromMangledName(qword_1EBDAC1D8);
    sub_1D6EB46C8();
    uint64_t result = sub_1D6FA9B30();
    if (!v10) {
      return (uint64_t)objc_msgSend(*(id *)(v33 + *(int *)(type metadata accessor for EfficientQuery() + 32)), sel_reset);
    }
  }
  return result;
}

void sub_1D6EB4410(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(uint64_t, uint64_t))
{
  uint64_t v13 = *a2;
  uint64_t v14 = type metadata accessor for EfficientQuery();
  objc_msgSend(*(id *)(a3 + *(int *)(v14 + 28)), sel_copy);
  sub_1D6FAA520();
  swift_unknownObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD4F0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_8;
  }
  objc_msgSend(v29, sel_setReturnsObjectsAsFaults_, 0);
  if (__OFSUB__(a4, 1))
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v13 != a4 - 1)
  {
    uint64_t v17 = 0;
    goto LABEL_10;
  }
  uint64_t v15 = a4 * a6;
  if ((unsigned __int128)(a4 * (__int128)a6) >> 64 != (a4 * a6) >> 63)
  {
LABEL_20:
    __break(1u);
    return;
  }
  BOOL v16 = __OFSUB__(a5, v15);
  uint64_t v17 = a5 - v15;
  if (v16)
  {
    __break(1u);
LABEL_8:
    uint64_t v18 = sub_1D6FA2760();
    sub_1D681E25C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v18 - 8) + 104))(v19, *MEMORY[0x1E4F9CDC8], v18);
    swift_willThrow();
    return;
  }
LABEL_10:
  uint64_t v20 = a6 + v17;
  if (__OFADD__(a6, v17))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  objc_msgSend(v29, sel_setFetchBatchSize_, v20);
  objc_msgSend(v29, sel_setFetchLimit_, v20);
  uint64_t v21 = v13 * a6;
  if ((unsigned __int128)(v13 * (__int128)a6) >> 64 != (v13 * a6) >> 63)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (__OFADD__(a7, v21))
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  objc_msgSend(v29, sel_setFetchOffset_, a7 + v21);
  uint64_t v22 = *(void **)(a3 + *(int *)(v14 + 32));
  uint64_t v23 = sub_1D6FAA2D0();
  if (!v28)
  {
    uint64_t v24 = v23;
    uint64_t v25 = (void *)MEMORY[0x1D9467FF0]();
    a8(a1, v24);
    swift_bridgeObjectRelease();
    objc_msgSend(v22, sel_reset);
  }
}

void sub_1D6EB468C(uint64_t a1, uint64_t *a2)
{
  sub_1D6EB4410(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void (**)(uint64_t, uint64_t))(v2 + 72));
}

unint64_t sub_1D6EB46C8()
{
  unint64_t result = qword_1EBDAD4E0;
  if (!qword_1EBDAD4E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_1EBDAC1D8);
    sub_1D6EB4744();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAD4E0);
  }
  return result;
}

unint64_t sub_1D6EB4744()
{
  unint64_t result = qword_1EBDAD288;
  if (!qword_1EBDAD288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBDAD288);
  }
  return result;
}

uint64_t type metadata accessor for EfficientQuery()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1D6EB47B0(uint64_t a1, uint64_t *a2)
{
  return sub_1D6EB3EF0(a1, a2, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void (**)(uint64_t, uint64_t))(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_1D6EB47E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

void sub_1D6EB47EC()
{
  sub_1D677FCF8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1D6EB4888(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = *(int *)(a3 + 32);
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + v8) = (uint64_t)v10;
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + v9) = (uint64_t)v11;
    id v12 = v10;
    id v13 = v11;
  }
  return a1;
}

void sub_1D6EB4968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  int v5 = *(void **)(a1 + *(int *)(a2 + 32));
}

uint64_t sub_1D6EB49EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  id v11 = v9;
  id v12 = v10;
  return a1;
}

uint64_t sub_1D6EB4A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = *(int *)(a3 + 32);
  id v12 = *(void **)(a2 + v11);
  id v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  return a1;
}

uint64_t sub_1D6EB4B20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 32);
  *(void *)(a1 + *(int *)(a3 + 28)) = *(void *)(a2 + *(int *)(a3 + 28));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_1D6EB4BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = *(int *)(a3 + 32);
  id v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  return a1;
}

uint64_t sub_1D6EB4C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D6EB4C58);
}

uint64_t sub_1D6EB4C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1D6EB4D1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D6EB4D30);
}

uint64_t sub_1D6EB4D30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1D6EB4DF0(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA6A10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1D6FA3350();
  uint64_t v6 = MEMORY[0x1F4188790](v69);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v66 = (char *)&v52 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v64 = (char *)&v52 - v11;
  int64_t v12 = 0;
  id v13 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v70 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v58 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v59 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v63 = v10 + 16;
  uint64_t v67 = v10;
  uint64_t v68 = v10 + 32;
  uint64_t v55 = v3 + 32;
  uint64_t v56 = v3;
  uint64_t v54 = (void (**)(char *, uint64_t))(v3 + 8);
  long long v53 = xmmword_1D6FAE050;
  uint64_t v57 = a1;
  uint64_t v61 = v5;
  uint64_t v62 = v2;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      int64_t v65 = v12;
      unint64_t v19 = v18 | (v12 << 6);
    }
    else
    {
      int64_t v20 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_37;
      }
      if (v20 >= v59)
      {
LABEL_34:
        swift_release();
        return (uint64_t)v13;
      }
      unint64_t v21 = *(void *)(v58 + 8 * v20);
      int64_t v22 = v12 + 1;
      if (!v21)
      {
        int64_t v22 = v12 + 2;
        if (v12 + 2 >= v59) {
          goto LABEL_34;
        }
        unint64_t v21 = *(void *)(v58 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v12 + 3;
          if (v12 + 3 >= v59) {
            goto LABEL_34;
          }
          unint64_t v21 = *(void *)(v58 + 8 * v22);
          if (!v21)
          {
            int64_t v22 = v12 + 4;
            if (v12 + 4 >= v59) {
              goto LABEL_34;
            }
            unint64_t v21 = *(void *)(v58 + 8 * v22);
            if (!v21)
            {
              uint64_t v23 = v12 + 5;
              if (v12 + 5 >= v59) {
                goto LABEL_34;
              }
              unint64_t v21 = *(void *)(v58 + 8 * v23);
              if (!v21)
              {
                while (1)
                {
                  int64_t v22 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_38;
                  }
                  if (v22 >= v59) {
                    goto LABEL_34;
                  }
                  unint64_t v21 = *(void *)(v58 + 8 * v22);
                  ++v23;
                  if (v21) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v22 = v12 + 5;
            }
          }
        }
      }
LABEL_21:
      unint64_t v17 = (v21 - 1) & v21;
      int64_t v65 = v22;
      unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    uint64_t v24 = a1;
    uint64_t v25 = *(void *)(a1 + 48);
    uint64_t v26 = v67;
    uint64_t v27 = *(void *)(v67 + 72);
    uint64_t v28 = v64;
    uint64_t v29 = v69;
    (*(void (**)(char *, unint64_t, uint64_t))(v67 + 16))(v64, v25 + v27 * v19, v69);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v30(v66, v28, v29);
    sub_1D6FA3320();
    unint64_t v32 = sub_1D6C6443C((uint64_t)v5);
    uint64_t v33 = v13[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      break;
    }
    char v36 = v31;
    if (v13[3] < v35)
    {
      sub_1D6C6DABC(v35, 1);
      id v13 = v70;
      unint64_t v37 = sub_1D6C6443C((uint64_t)v5);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_39;
      }
      unint64_t v32 = v37;
    }
    if (v36)
    {
      (*v54)(v5, v62);
      id v13 = v70;
      uint64_t v39 = v70[7];
      v30(v60, v66, v69);
      unint64_t v40 = *(void *)(v39 + 8 * v32);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v39 + 8 * v32) = v40;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v40 = sub_1D6AE470C(0, *(void *)(v40 + 16) + 1, 1, v40);
        *(void *)(v39 + 8 * v32) = v40;
      }
      unint64_t v43 = *(void *)(v40 + 16);
      unint64_t v42 = *(void *)(v40 + 24);
      if (v43 >= v42 >> 1)
      {
        unint64_t v40 = sub_1D6AE470C(v42 > 1, v43 + 1, 1, v40);
        *(void *)(v39 + 8 * v32) = v40;
      }
      uint64_t v44 = v60;
      int v5 = v61;
      *(void *)(v40 + 16) = v43 + 1;
      v30((char *)(v40+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ v43 * v27), v44, v69);
      a1 = v57;
      int64_t v12 = v65;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA807360);
      unint64_t v45 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v53;
      unint64_t v47 = v46 + v45;
      int v5 = v61;
      v30((char *)v47, v66, v69);
      v13[(v32 >> 6) + 8] |= 1 << v32;
      (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v13[6] + *(void *)(v56 + 72) * v32, v5, v62);
      *(void *)(v13[7] + 8 * v32) = v46;
      uint64_t v48 = v13[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_36;
      }
      void v13[2] = v50;
      a1 = v24;
      int64_t v12 = v65;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_1D6FAAB00();
  __break(1u);
  return result;
}

uint64_t sub_1D6EB5388(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA6A10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  int v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_1D6FA1A50();
  uint64_t v6 = MEMORY[0x1F4188790](v69);
  uint64_t v60 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v66 = (char *)&v52 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v64 = (char *)&v52 - v11;
  int64_t v12 = 0;
  id v13 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v70 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v58 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v59 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v63 = v10 + 16;
  uint64_t v67 = v10;
  uint64_t v68 = v10 + 32;
  uint64_t v55 = v3 + 32;
  uint64_t v56 = v3;
  uint64_t v54 = (void (**)(char *, uint64_t))(v3 + 8);
  long long v53 = xmmword_1D6FAE050;
  uint64_t v57 = a1;
  uint64_t v61 = v5;
  uint64_t v62 = v2;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      int64_t v65 = v12;
      unint64_t v19 = v18 | (v12 << 6);
    }
    else
    {
      int64_t v20 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_37;
      }
      if (v20 >= v59)
      {
LABEL_34:
        swift_release();
        return (uint64_t)v13;
      }
      unint64_t v21 = *(void *)(v58 + 8 * v20);
      int64_t v22 = v12 + 1;
      if (!v21)
      {
        int64_t v22 = v12 + 2;
        if (v12 + 2 >= v59) {
          goto LABEL_34;
        }
        unint64_t v21 = *(void *)(v58 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v12 + 3;
          if (v12 + 3 >= v59) {
            goto LABEL_34;
          }
          unint64_t v21 = *(void *)(v58 + 8 * v22);
          if (!v21)
          {
            int64_t v22 = v12 + 4;
            if (v12 + 4 >= v59) {
              goto LABEL_34;
            }
            unint64_t v21 = *(void *)(v58 + 8 * v22);
            if (!v21)
            {
              uint64_t v23 = v12 + 5;
              if (v12 + 5 >= v59) {
                goto LABEL_34;
              }
              unint64_t v21 = *(void *)(v58 + 8 * v23);
              if (!v21)
              {
                while (1)
                {
                  int64_t v22 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_38;
                  }
                  if (v22 >= v59) {
                    goto LABEL_34;
                  }
                  unint64_t v21 = *(void *)(v58 + 8 * v22);
                  ++v23;
                  if (v21) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v22 = v12 + 5;
            }
          }
        }
      }
LABEL_21:
      unint64_t v17 = (v21 - 1) & v21;
      int64_t v65 = v22;
      unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
    }
    uint64_t v24 = a1;
    uint64_t v25 = *(void *)(a1 + 48);
    uint64_t v26 = v67;
    uint64_t v27 = *(void *)(v67 + 72);
    uint64_t v28 = v64;
    uint64_t v29 = v69;
    (*(void (**)(char *, unint64_t, uint64_t))(v67 + 16))(v64, v25 + v27 * v19, v69);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v30(v66, v28, v29);
    sub_1D6FA19E0();
    unint64_t v32 = sub_1D6C6443C((uint64_t)v5);
    uint64_t v33 = v13[2];
    BOOL v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      break;
    }
    char v36 = v31;
    if (v13[3] < v35)
    {
      sub_1D6C73CC0(v35, 1);
      id v13 = v70;
      unint64_t v37 = sub_1D6C6443C((uint64_t)v5);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_39;
      }
      unint64_t v32 = v37;
    }
    if (v36)
    {
      (*v54)(v5, v62);
      id v13 = v70;
      uint64_t v39 = v70[7];
      v30(v60, v66, v69);
      unint64_t v40 = *(void *)(v39 + 8 * v32);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v39 + 8 * v32) = v40;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v40 = sub_1D6AE5288(0, *(void *)(v40 + 16) + 1, 1, v40);
        *(void *)(v39 + 8 * v32) = v40;
      }
      unint64_t v43 = *(void *)(v40 + 16);
      unint64_t v42 = *(void *)(v40 + 24);
      if (v43 >= v42 >> 1)
      {
        unint64_t v40 = sub_1D6AE5288(v42 > 1, v43 + 1, 1, v40);
        *(void *)(v39 + 8 * v32) = v40;
      }
      uint64_t v44 = v60;
      int v5 = v61;
      *(void *)(v40 + 16) = v43 + 1;
      v30((char *)(v40+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ v43 * v27), v44, v69);
      a1 = v57;
      int64_t v12 = v65;
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA66E0);
      unint64_t v45 = (*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = v53;
      unint64_t v47 = v46 + v45;
      int v5 = v61;
      v30((char *)v47, v66, v69);
      v13[(v32 >> 6) + 8] |= 1 << v32;
      (*(void (**)(unint64_t, char *, uint64_t))(v56 + 32))(v13[6] + *(void *)(v56 + 72) * v32, v5, v62);
      *(void *)(v13[7] + 8 * v32) = v46;
      uint64_t v48 = v13[2];
      BOOL v49 = __OFADD__(v48, 1);
      uint64_t v50 = v48 + 1;
      if (v49) {
        goto LABEL_36;
      }
      void v13[2] = v50;
      a1 = v24;
      int64_t v12 = v65;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  uint64_t result = sub_1D6FAAB00();
  __break(1u);
  return result;
}

uint64_t sub_1D6EB5920()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PairedSyncCoordinator()
{
  return self;
}

uint64_t sub_1D6EB59A4(uint64_t a1, void *a2)
{
  char v31 = a2;
  uint64_t v41 = sub_1D6FA1A50();
  uint64_t v4 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D6FA8C50();
  uint64_t v32 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  MEMORY[0x1F4188790](v7);
  BOOL v34 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D6FA6A10();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  int64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA19E0();
  swift_beginAccess();
  uint64_t v13 = *(void *)(v2 + 176);
  if (*(void *)(v13 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v14 = sub_1D6C6443C((uint64_t)v12);
    if (v15)
    {
      sub_1D6754034(*(void *)(v13 + 56) + 40 * v14, (uint64_t)&v35);
    }
    else
    {
      uint64_t v37 = 0;
      long long v35 = 0u;
      long long v36 = 0u;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (*((void *)&v36 + 1))
  {
    sub_1D675401C(&v35, (uint64_t)v38);
    uint64_t v16 = v39;
    uint64_t v17 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(v16, v17))
    {
      unint64_t v18 = __swift_project_boxed_opaque_existential_1(v31, v31[3]);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA66E0);
      unint64_t v19 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1D6FAE050;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v4 + 16))(v20 + v19, a1, v41);
      sub_1D6E15FC8(v20, v18[1], *((unsigned __int8 *)v18 + 16), v18[3]);
      swift_bridgeObjectRelease();
    }
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  }
  else
  {
    sub_1D6EBAC84((uint64_t)&v35);
    int64_t v22 = v34;
    sub_1D6FA8060();
    uint64_t v23 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v41);
    uint64_t v24 = sub_1D6FA8C40();
    os_log_type_t v25 = sub_1D6FAA160();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      v38[0] = v27;
      *(_DWORD *)uint64_t v26 = 136446210;
      char v31 = (void *)(v26 + 4);
      sub_1D6EBACE4(&qword_1EA807308, MEMORY[0x1E4F9C688]);
      uint64_t v28 = sub_1D6FAAA50();
      *(void *)&long long v35 = sub_1D683E928(v28, v29, v38);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v23);
      _os_log_impl(&dword_1D6748000, v24, v25, "No registered zone for sync operation: %{public}s", (uint8_t *)v26, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v27, -1, -1);
      MEMORY[0x1D9468AD0](v26, -1, -1);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v33);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v23);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v33);
    }
    sub_1D6760610();
    swift_allocError();
    *uint64_t v30 = 11;
    return swift_willThrow();
  }
}

uint64_t sub_1D6EB5ED4()
{
  v1[16] = v0;
  uint64_t v2 = sub_1D6FA70D0();
  v1[17] = v2;
  v1[18] = *(void *)(v2 - 8);
  v1[19] = swift_task_alloc();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9FBE8);
  v1[20] = v3;
  v1[21] = *(void *)(v3 - 8);
  v1[22] = swift_task_alloc();
  uint64_t v4 = sub_1D6FA2FF0();
  v1[23] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v1[24] = v5;
  v1[25] = *(void *)(v5 + 64);
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  uint64_t v6 = sub_1D6FA2C60();
  v1[29] = v6;
  v1[30] = *(void *)(v6 - 8);
  v1[31] = swift_task_alloc();
  v1[32] = swift_task_alloc();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBDB0430);
  v1[33] = v7;
  v1[34] = *(void *)(v7 - 8);
  v1[35] = swift_task_alloc();
  uint64_t v8 = sub_1D6FA8C50();
  v1[36] = v8;
  v1[37] = *(void *)(v8 - 8);
  v1[38] = swift_task_alloc();
  v1[39] = swift_task_alloc();
  v1[40] = swift_task_alloc();
  v1[41] = swift_task_alloc();
  v1[42] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EB61D0, 0, 0);
}

uint64_t sub_1D6EB61D0()
{
  sub_1D6FA8060();
  uint64_t v1 = sub_1D6FA8C40();
  os_log_type_t v2 = sub_1D6FAA180();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1D6748000, v1, v2, "Launching Paired Device.", v3, 2u);
    MEMORY[0x1D9468AD0](v3, -1, -1);
  }
  uint64_t v4 = v0[42];
  uint64_t v5 = v0[36];
  uint64_t v6 = v0[37];
  uint64_t v7 = v0[35];
  uint64_t v8 = v0[16];

  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v0[43] = v9;
  v0[44] = (v6 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v4, v5);
  __swift_project_boxed_opaque_existential_1((void *)(v8 + 16), *(void *)(v8 + 40));
  sub_1D6D171DC(0, v0 + 2);
  __swift_project_boxed_opaque_existential_1(v0 + 2, v0[5]);
  uint64_t v10 = swift_allocObject();
  *(unsigned char *)(v10 + 16) = 4;
  sub_1D67EA6BC(4, 0, 0, (uint64_t)sub_1D6EB7F68, v10, v7);
  swift_release();
  uint64_t v11 = swift_task_alloc();
  v0[45] = v11;
  *(void *)(v11 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore/SeymourServices/Sync/Coordination/PairedSyncCoordinator.swift";
  *(void *)(v11 + 24) = 107;
  *(unsigned char *)(v11 + 32) = 2;
  *(void *)(v11 + 40) = 70;
  *(void *)(v11 + 48) = v7;
  int64_t v12 = (void *)swift_task_alloc();
  v0[46] = v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8F28);
  void *v12 = v0;
  v12[1] = sub_1D6EB642C;
  return MEMORY[0x1F4188160](v0 + 7, 0, 0, 0xD000000000000013, 0x80000001D6FC9B90, sub_1D6EBAA14, v11, v13);
}

uint64_t sub_1D6EB642C()
{
  os_log_type_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 376) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1D6EB683C;
  }
  else
  {
    uint64_t v5 = v2[34];
    uint64_t v4 = v2[35];
    uint64_t v6 = v2[33];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v2 + 2));
    uint64_t v3 = sub_1D6EB6590;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D6EB6590()
{
  uint64_t v1 = (void *)v0[16];
  swift_beginAccess();
  os_log_type_t v2 = v1 + 17;
  uint64_t v3 = v1[20];
  uint64_t v6 = v1 + 21;
  uint64_t v4 = v1[21];
  uint64_t v5 = v6[1];
  __swift_project_boxed_opaque_existential_1(v2, v3);
  uint64_t v7 = swift_allocObject();
  v0[48] = v7;
  *(void *)(v7 + 16) = v5;
  uint64_t v11 = (uint64_t (*)(void *, uint64_t (*)@<X0>(uint8_t *@<X0>, uint64_t *@<X8>), uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 24) + **(int **)(v4 + 24));
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[49] = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA8072F0);
  *uint64_t v8 = v0;
  v8[1] = sub_1D6EB6720;
  return v11(v0 + 13, sub_1D6EBAA64, v7, v9, v3, v4);
}

uint64_t sub_1D6EB6720()
{
  *(void *)(*(void *)v1 + 400) = v0;
  swift_task_dealloc();
  if (v0)
  {
    os_log_type_t v2 = sub_1D6EB6F04;
  }
  else
  {
    swift_release();
    os_log_type_t v2 = sub_1D6EB6980;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EB683C()
{
  uint64_t v2 = v0[34];
  uint64_t v1 = v0[35];
  uint64_t v3 = v0[33];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1D6EB6980()
{
  unint64_t v42 = v0;
  sub_1D6FA2C40();
  uint64_t v1 = *(void *)(sub_1D6FA2C50() + 16);
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v3 = v0[31];
    uint64_t v2 = v0[32];
    uint64_t v4 = v0[29];
    uint64_t v5 = v0[30];
    sub_1D6FA8060();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
    uint64_t v6 = sub_1D6FA8C40();
    os_log_type_t v7 = sub_1D6FAA180();
    BOOL v8 = os_log_type_enabled(v6, v7);
    uint64_t v9 = (void (*)(uint64_t, uint64_t))v0[43];
    uint64_t v10 = v0[40];
    uint64_t v11 = v0[36];
    uint64_t v13 = v0[30];
    uint64_t v12 = v0[31];
    if (v8)
    {
      uint64_t v38 = v0[29];
      uint64_t v40 = v0[36];
      unint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v41 = v39;
      *(_DWORD *)unint64_t v14 = 136315138;
      sub_1D6FA2C50();
      sub_1D6FA3350();
      sub_1D6EBACE4(&qword_1EBD9FA60, MEMORY[0x1E4F9D460]);
      uint64_t v15 = sub_1D6FA9F00();
      uint64_t v37 = v10;
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      v0[15] = sub_1D683E928(v15, v17, &v41);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      unint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v18(v12, v38);
      _os_log_impl(&dword_1D6748000, v6, v7, "Offering sync data with %s operations.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v39, -1, -1);
      MEMORY[0x1D9468AD0](v14, -1, -1);

      v9(v37, v40);
    }
    else
    {
      unint64_t v18 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v18(v0[31], v0[29]);

      v9(v10, v11);
    }
    v0[51] = v18;
    uint64_t v28 = v0[22];
    uint64_t v30 = v0[18];
    uint64_t v29 = v0[19];
    uint64_t v31 = v0[17];
    swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v29, *MEMORY[0x1E4F9AF70], v31);
    uint64_t v32 = v28;
    sub_1D6FA6B90();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
    uint64_t v33 = swift_task_alloc();
    v0[52] = v33;
    *(void *)(v33 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore/SeymourServices/Sync/Coordination/PairedSyncCoordinator.swift";
    *(void *)(v33 + 24) = 107;
    *(unsigned char *)(v33 + 32) = 2;
    *(void *)(v33 + 40) = 79;
    *(void *)(v33 + 48) = v32;
    BOOL v34 = (void *)swift_task_alloc();
    v0[53] = v34;
    *BOOL v34 = v0;
    v34[1] = sub_1D6EB701C;
    uint64_t v35 = v0[28];
    uint64_t v36 = v0[23];
    return MEMORY[0x1F4188160](v35, 0, 0, 0xD000000000000013, 0x80000001D6FC9B90, sub_1D6EBAA80, v33, v36);
  }
  else
  {
    sub_1D6FA8060();
    unint64_t v19 = sub_1D6FA8C40();
    os_log_type_t v20 = sub_1D6FAA180();
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v21 = 0;
      _os_log_impl(&dword_1D6748000, v19, v20, "No operations found in the paired sync request.", v21, 2u);
      MEMORY[0x1D9468AD0](v21, -1, -1);
    }
    int64_t v22 = (void (*)(uint64_t, uint64_t))v0[43];
    uint64_t v23 = v0[41];
    uint64_t v24 = v0[36];
    uint64_t v25 = v0[30];

    v22(v23, v24);
    (*(void (**)(void, void))(v25 + 8))(v0[32], v0[29]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
}

uint64_t sub_1D6EB6F04()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6EB701C()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1D6EB7160;
  }
  else
  {
    uint64_t v5 = v2[21];
    uint64_t v4 = v2[22];
    uint64_t v6 = v2[20];
    swift_task_dealloc();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1D6EB72B8;
  }
  return MEMORY[0x1F4188298](v3, 0, 0);
}

uint64_t sub_1D6EB7160()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[51];
  uint64_t v2 = v0[32];
  uint64_t v3 = v0[29];
  uint64_t v5 = v0[21];
  uint64_t v4 = v0[22];
  uint64_t v6 = v0[20];
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1D6EB72B8()
{
  uint64_t v47 = v0;
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 184);
  uint64_t v4 = *(void *)(v0 + 192);
  sub_1D6FA8060();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v44(v2, v1, v3);
  uint64_t v5 = sub_1D6FA8C40();
  os_log_type_t v6 = sub_1D6FAA180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v43 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v41 = *(void *)(v0 + 288);
    uint64_t v42 = *(void *)(v0 + 312);
    uint64_t v7 = *(void *)(v0 + 192);
    uint64_t v39 = *(void *)(v0 + 216);
    uint64_t v40 = *(void *)(v0 + 184);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v46 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    sub_1D6FA2FE0();
    sub_1D6FA4CA0();
    sub_1D6EBACE4(&qword_1EA804920, MEMORY[0x1E4F9E330]);
    uint64_t v10 = sub_1D6FA9F00();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 112) = sub_1D683E928(v10, v12, &v46);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v13(v39, v40);
    _os_log_impl(&dword_1D6748000, v5, v6, "Got sync acknowledgement with %s operations completed.", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v9, -1, -1);
    MEMORY[0x1D9468AD0](v8, -1, -1);

    v43(v42, v41);
  }
  else
  {
    unint64_t v14 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v15 = *(void *)(v0 + 312);
    uint64_t v16 = *(void *)(v0 + 288);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v0 + 192) + 8);
    v13(*(void *)(v0 + 216), *(void *)(v0 + 184));

    v14(v15, v16);
  }
  *(void *)(v0 + 440) = v13;
  uint64_t v17 = *(void *)(sub_1D6FA2FE0() + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v18 = *(void *)(v0 + 224);
    uint64_t v20 = *(void *)(v0 + 200);
    uint64_t v19 = *(void *)(v0 + 208);
    uint64_t v22 = *(void *)(v0 + 184);
    uint64_t v21 = *(void *)(v0 + 192);
    uint64_t v23 = *(void **)(v0 + 128);
    uint64_t v24 = os_transaction_create();
    *(void *)(v0 + 448) = v24;
    uint64_t v25 = v23[21];
    __swift_project_boxed_opaque_existential_1(v23 + 17, v23[20]);
    v44(v19, v18, v22);
    unint64_t v26 = (*(unsigned __int8 *)(v21 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
    uint64_t v27 = swift_allocObject();
    *(void *)(v0 + 456) = v27;
    *(void *)(v27 + 16) = v24;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))(v27 + v26, v19, v22);
    *(void *)(v27 + ((v20 + v26 + 7) & 0xFFFFFFFFFFFFFFF8)) = v23;
    unint64_t v45 = (uint64_t (*)(void))(*(void *)(v25 + 24) + **(int **)(v25 + 24));
    swift_unknownObjectRetain();
    swift_retain();
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 464) = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_1D6EB7874;
    return v45();
  }
  else
  {
    sub_1D6FA8060();
    uint64_t v30 = sub_1D6FA8C40();
    os_log_type_t v31 = sub_1D6FAA160();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_1D6748000, v30, v31, "Got an empty confirmation.", v32, 2u);
      MEMORY[0x1D9468AD0](v32, -1, -1);
    }
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 344);
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v35 = *(void *)(v0 + 288);
    uint64_t v36 = *(void *)(v0 + 224);
    uint64_t v37 = *(void *)(v0 + 184);

    v33(v34, v35);
    v13(v36, v37);
    (*(void (**)(void, void))(v0 + 408))(*(void *)(v0 + 256), *(void *)(v0 + 232));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v38 = *(uint64_t (**)(void))(v0 + 8);
    return v38();
  }
}

uint64_t sub_1D6EB7874()
{
  *(void *)(*(void *)v1 + 472) = v0;
  swift_task_dealloc();
  swift_release();
  if (v0) {
    uint64_t v2 = sub_1D6EB7CA0;
  }
  else {
    uint64_t v2 = sub_1D6EB79A4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EB79A4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 480) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1D6EB7A34;
  return sub_1D6EB5ED4();
}

uint64_t sub_1D6EB7A34()
{
  *(void *)(*(void *)v1 + 488) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6EB7DFC;
  }
  else {
    uint64_t v2 = sub_1D6EB7B48;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EB7B48()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v3 = *(void *)(v0 + 184);
  swift_unknownObjectRelease();
  v1(v2, v3);
  (*(void (**)(void, void))(v0 + 408))(*(void *)(v0 + 256), *(void *)(v0 + 232));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1D6EB7CA0()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[55];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[51];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[23];
  swift_unknownObjectRelease();
  v1(v5, v6);
  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1D6EB7DFC()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[55];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[51];
  uint64_t v3 = v0[32];
  uint64_t v4 = v0[29];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[23];
  swift_unknownObjectRelease();
  v1(v5, v6);
  v2(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1D6EB7F58()
{
  return MEMORY[0x1F4186498](v0, 17, 7);
}

uint64_t sub_1D6EB7F68@<X0>(uint64_t a1@<X8>)
{
  return sub_1D6B1E354(*(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_1D6EB7F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1D6FA2FE0();
  v8[2] = a4;
  v8[3] = a1;
  sub_1D6E92608((void (*)(char *))sub_1D6EBAC44, (uint64_t)v8, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6EB7FEC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_1D6FA6A10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1((void *)(a2 + 56), *(void *)(a2 + 80));
  uint64_t v9 = sub_1D6FA4C70();
  uint64_t v11 = v10;
  sub_1D6FA4C90();
  sub_1D6921610(v9, v11, (uint64_t)v8, a3);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6EB811C@<X0>(uint8_t *a1@<X0>, uint8_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v44 = a3;
  uint64_t v5 = sub_1D6FA8C50();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x1F4188790](v5);
  id v51 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *((void *)a1 + 3);
  uint64_t v48 = a1;
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, v7);
  uint64_t v9 = (void *)*v8;
  uint64_t v10 = (void *)v8[1];
  char v11 = *((unsigned char *)v8 + 16);
  uint64_t v12 = v8[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA1EE0);
  uint64_t v13 = swift_allocObject();
  id v14 = v9;
  id v15 = v10;
  swift_bridgeObjectRetain();
  sub_1D6FA78B0();
  *(void *)(v13 + 16) = v14;
  *(void *)(v13 + 24) = v15;
  *(unsigned char *)(v13 + 32) = v11;
  *(void *)(v13 + 40) = v12;
  uint64_t KeyPath = swift_getKeyPath();
  int v17 = sub_1D6FA0B00();
  v50[3] = MEMORY[0x1E4FBC150];
  LODWORD(v50[0]) = v17;
  id v18 = sub_1D6B17614(KeyPath, 4, 0, 0, (uint64_t)v50);
  swift_release();
  swift_beginAccess();
  id v19 = v18;
  uint64_t v20 = (void (*)(uint64_t *, void))sub_1D6FA78C0();
  uint64_t v22 = v21;
  MEMORY[0x1D9466B90]();
  if (*(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v22 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1D6FA9C40();
  }
  sub_1D6FA9C80();
  sub_1D6FA9C20();
  v20(v50, 0);
  swift_endAccess();

  swift_beginAccess();
  sub_1D6FA7910();
  swift_endAccess();
  uint64_t v23 = sub_1D67B087C((void (*)(char *, uint64_t, uint64_t))0x64);
  if (v3)
  {
    swift_setDeallocating();

    swift_bridgeObjectRelease();
    uint64_t v24 = v13 + qword_1EBDB9E90;
    uint64_t v25 = sub_1D6FA7940();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
    return swift_deallocClassInstance();
  }
  else
  {
    uint64_t v27 = v23;
    swift_setDeallocating();

    swift_bridgeObjectRelease();
    uint64_t v28 = v13 + qword_1EBDB9E90;
    uint64_t v29 = sub_1D6FA7940();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
    swift_deallocClassInstance();
    uint64_t v30 = v51;
    sub_1D6FA8060();
    swift_bridgeObjectRetain_n();
    os_log_type_t v31 = sub_1D6FA8C40();
    os_log_type_t v32 = sub_1D6FAA180();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      v50[0] = v43;
      *(_DWORD *)uint64_t v33 = 136446210;
      uint64_t v42 = v33 + 4;
      sub_1D6FA1A50();
      sub_1D6EBACE4(&qword_1EBD9F980, MEMORY[0x1E4F9C688]);
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_1D6FA9F00();
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v49 = sub_1D683E928(v34, v36, v50);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D6748000, v31, v32, "Found paired sync operations: %{public}s", v33, 0xCu);
      uint64_t v37 = v43;
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v37, -1, -1);
      MEMORY[0x1D9468AD0](v33, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v45 + 8))(v30, v46);
    uint64_t v39 = v47;
    uint64_t v38 = v48;
    uint64_t v40 = sub_1D6EB5388(v27);
    MEMORY[0x1F4188790](v40);
    *(&v42 - 2) = v39;
    *(&v42 - 1) = v38;
    uint64_t v41 = sub_1D6EBA67C((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1D6EBAC68, (uint64_t)(&v42 - 4), v40, MEMORY[0x1E4F9EFC8], &qword_1EBDA66A8);
    swift_bridgeObjectRelease();
    uint64_t result = sub_1D6C59088(v41);
    *uint64_t v44 = result;
  }
  return result;
}

uint64_t sub_1D6EB8728@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v28 = a4;
  uint64_t v29 = a3;
  uint64_t v6 = sub_1D6FA1A50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D6FA6A10();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t result = MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  if (*(void *)(*a1 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v7 + 16))(v9, v15 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
    sub_1D6FA19E0();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    if (*(void *)(a2 + 16) && (unint64_t v16 = sub_1D6C6443C((uint64_t)v14), (v17 & 1) != 0))
    {
      sub_1D6754034(*(void *)(a2 + 56) + 40 * v16, (uint64_t)v30);
      sub_1D675401C(v30, (uint64_t)v31);
      uint64_t v18 = v32;
      uint64_t v19 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      *(void *)&v30[0] = v15;
      uint64_t v27 = *(uint64_t (**)(long long *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 40);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAFFF8);
      uint64_t v21 = sub_1D6761180((unint64_t *)&qword_1EBDB0000, &qword_1EBDAFFF8);
      uint64_t v22 = v34;
      uint64_t v23 = v27(v30, v29, v20, v21, v18, v19);
      if (v22)
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      }
      else
      {
        uint64_t v25 = v23;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
        *uint64_t v28 = v25;
      }
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    }
    else
    {
      sub_1D6760610();
      swift_allocError();
      *uint64_t v24 = 11;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D6EB8A28(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  uint64_t v4 = sub_1D6FA2FF0();
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  uint64_t v5 = sub_1D6FA2C60();
  v3[15] = v5;
  v3[16] = *(void *)(v5 - 8);
  v3[17] = swift_task_alloc();
  uint64_t v6 = sub_1D6FA8C50();
  v3[18] = v6;
  v3[19] = *(void *)(v6 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EB8BC0, 0, 0);
}

uint64_t sub_1D6EB8BC0()
{
  uint64_t v39 = v0;
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[10];
  sub_1D6FA8060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v2, v4, v3);
  uint64_t v5 = sub_1D6FA8C40();
  os_log_type_t v6 = sub_1D6FAA180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[17];
    uint64_t v36 = v0[18];
    uint64_t v37 = v0[22];
    uint64_t v8 = v0[16];
    uint64_t v34 = v0[15];
    uint64_t v35 = v0[19];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v38 = v33;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_1D6FA2C50();
    sub_1D6FA3350();
    sub_1D6EBACE4(&qword_1EBD9FA60, MEMORY[0x1E4F9D460]);
    uint64_t v10 = sub_1D6FA9F00();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[8] = sub_1D683E928(v10, v12, &v38);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v34);
    _os_log_impl(&dword_1D6748000, v5, v6, "Got sync data with %s operations.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v33, -1, -1);
    MEMORY[0x1D9468AD0](v9, -1, -1);

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
    v13(v37, v36);
  }
  else
  {
    uint64_t v14 = v0[22];
    uint64_t v15 = v0[18];
    uint64_t v16 = v0[19];
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);

    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v13(v14, v15);
  }
  v0[23] = v13;
  uint64_t v17 = v0[11];
  swift_beginAccess();
  uint64_t v18 = *(void *)(v17 + 176);
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1D6FA2C50();
  uint64_t v20 = sub_1D6EB4DF0(v19);
  v0[24] = v20;
  sub_1D6FA8060();
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1D6FA8C40();
  os_log_type_t v22 = sub_1D6FAA180();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 134349056;
    v0[7] = *(void *)(v20 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v21, v22, "Saving %{public}ld zones from payload.", v23, 0xCu);
    MEMORY[0x1D9468AD0](v23, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v24 = v0[21];
  uint64_t v25 = v0[18];
  v0[25] = (v0[19] + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v13(v24, v25);
  v0[5] = v20;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v18;
  uint64_t v27 = swift_allocObject();
  v0[26] = v27;
  *(void *)(v27 + 16) = &unk_1EA807328;
  *(void *)(v27 + 24) = v26;
  uint64_t v28 = (void *)swift_task_alloc();
  v0[27] = v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807340);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807348);
  uint64_t v31 = sub_1D6761180(&qword_1EA807350, &qword_1EA807340);
  *uint64_t v28 = v0;
  v28[1] = sub_1D6EB9084;
  return MEMORY[0x1F414BF68](5, &unk_1EA807338, v27, v29, v30, v31);
}

uint64_t sub_1D6EB9084(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 224) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1D6EB9498;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)(v4 + 232) = a1;
    uint64_t v5 = sub_1D6EB91C0;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1D6EB91C0()
{
  uint64_t v24 = v0;
  uint64_t v2 = v0[13];
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v4 = v0[9];
  sub_1D6C572EC(v0[29]);
  sub_1D6FA2FD0();
  sub_1D6FA8060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v5 = sub_1D6FA8C40();
  os_log_type_t v6 = sub_1D6FAA180();
  if (os_log_type_enabled(v5, v6))
  {
    os_log_type_t v22 = (void (*)(uint64_t, uint64_t))v0[23];
    uint64_t v20 = v0[18];
    uint64_t v21 = v0[20];
    uint64_t v8 = v0[13];
    uint64_t v7 = v0[14];
    uint64_t v19 = v0[12];
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v23 = v18;
    *(_DWORD *)uint64_t v9 = 136315138;
    sub_1D6FA2FE0();
    sub_1D6FA4CA0();
    sub_1D6EBACE4(&qword_1EA804920, MEMORY[0x1E4F9E330]);
    uint64_t v10 = sub_1D6FA9F00();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    v0[6] = sub_1D683E928(v10, v12, &v23);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v19);
    _os_log_impl(&dword_1D6748000, v5, v6, "Successfully saved %s.", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v18, -1, -1);
    MEMORY[0x1D9468AD0](v9, -1, -1);

    v22(v21, v20);
  }
  else
  {
    uint64_t v13 = (void (*)(uint64_t, uint64_t))v0[23];
    uint64_t v14 = v0[20];
    uint64_t v15 = v0[18];
    (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);

    v13(v14, v15);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1D6EB9498()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6EB9550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[30] = a2;
  v3[31] = a3;
  v3[29] = a1;
  uint64_t v4 = sub_1D6FA3350();
  v3[32] = v4;
  v3[33] = *(void *)(v4 - 8);
  v3[34] = swift_task_alloc();
  uint64_t v5 = sub_1D6FA4CA0();
  v3[35] = v5;
  v3[36] = *(void *)(v5 - 8);
  v3[37] = swift_task_alloc();
  uint64_t v6 = sub_1D6FA6A10();
  v3[38] = v6;
  v3[39] = *(void *)(v6 - 8);
  v3[40] = swift_task_alloc();
  uint64_t v7 = sub_1D6FA8C50();
  v3[41] = v7;
  v3[42] = *(void *)(v7 - 8);
  v3[43] = swift_task_alloc();
  v3[44] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EB9738, 0, 0);
}

uint64_t sub_1D6EB9738()
{
  if (*(void *)(*(void *)(v0 + 248) + 16) && (unint64_t v1 = sub_1D6C6443C(*(void *)(v0 + 232)), (v2 & 1) != 0))
  {
    sub_1D6754034(*(void *)(*(void *)(v0 + 248) + 56) + 40 * v1, v0 + 56);
    sub_1D675401C((long long *)(v0 + 56), v0 + 16);
    uint64_t v3 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), v3);
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 16) + **(int **)(v4 + 16));
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 360) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1D6EB98F4;
    return v8(v3, v4);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7(0);
  }
}

uint64_t sub_1D6EB98F4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 392) = a1;
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1D6EB99F4, 0, 0);
}

uint64_t sub_1D6EB99F4()
{
  uint64_t v1 = (void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 392) == 1)
  {
    uint64_t v2 = *(void *)(v0 + 40);
    uint64_t v3 = *(void *)(v0 + 48);
    __swift_project_boxed_opaque_existential_1(v1, v2);
    uint64_t v4 = swift_bridgeObjectRetain();
    uint64_t v5 = sub_1D6C8A130(v4);
    *(void *)(v0 + 368) = v5;
    swift_bridgeObjectRelease();
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 376) = v6;
    void *v6 = v0;
    v6[1] = sub_1D6EB9BA4;
    return v9(v5, v2, v3);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8(0);
  }
}

uint64_t sub_1D6EB9BA4()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1D6EBA0DC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1D6EB9CC0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EB9CC0()
{
  uint64_t v39 = v0;
  sub_1D6FA8060();
  sub_1D6754034((uint64_t)(v0 + 2), (uint64_t)(v0 + 17));
  uint64_t v1 = sub_1D6FA8C40();
  os_log_type_t v2 = sub_1D6FAA180();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v33 = v0[42];
    uint64_t v3 = v0[40];
    uint64_t v35 = v0[41];
    uint64_t v37 = v0[44];
    uint64_t v4 = v0[39];
    uint64_t v30 = v0[38];
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    uint64_t v38 = v32;
    buf = v5;
    *(_DWORD *)uint64_t v5 = 136446210;
    uint64_t v6 = v0[20];
    uint64_t v7 = v0[21];
    __swift_project_boxed_opaque_existential_1(v0 + 17, v6);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    uint64_t v8 = sub_1D6FA69F0();
    unint64_t v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v30);
    v0[28] = sub_1D683E928(v8, v10, &v38);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));
    _os_log_impl(&dword_1D6748000, v1, v2, "Saved zone %{public}s successfully.", buf, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v32, -1, -1);
    MEMORY[0x1D9468AD0](buf, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v37, v35);
  }
  else
  {
    uint64_t v11 = v0[44];
    uint64_t v12 = v0[41];
    uint64_t v13 = v0[42];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 17));

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  uint64_t v14 = v0[30];
  int64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = MEMORY[0x1E4FBC860];
  if (v15)
  {
    uint64_t v17 = v0[36];
    uint64_t v18 = v0[33];
    uint64_t v38 = MEMORY[0x1E4FBC860];
    sub_1D6BBD934(0, v15, 0);
    uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
    uint64_t v19 = v18 + 16;
    uint64_t v21 = v14 + ((*(unsigned __int8 *)(v19 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 64));
    uint64_t v34 = *(void *)(v19 + 56);
    uint64_t v36 = v20;
    uint64_t v16 = v38;
    do
    {
      uint64_t v22 = v0[34];
      uint64_t v23 = v0[32];
      v36(v22, v21, v23);
      sub_1D6FA3320();
      sub_1D6FA3310();
      sub_1D6FA4C80();
      (*(void (**)(uint64_t, uint64_t))(v19 - 8))(v22, v23);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D6BBD934(0, *(void *)(v16 + 16) + 1, 1);
        uint64_t v16 = v38;
      }
      unint64_t v25 = *(void *)(v16 + 16);
      unint64_t v24 = *(void *)(v16 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1D6BBD934(v24 > 1, v25 + 1, 1);
        uint64_t v16 = v38;
      }
      uint64_t v26 = v0[37];
      uint64_t v27 = v0[35];
      *(void *)(v16 + 16) = v25 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v17 + 32))(v16+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v25, v26, v27);
      uint64_t v38 = v16;
      v21 += v34;
      --v15;
    }
    while (v15);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 2));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(uint64_t))v0[1];
  return v28(v16);
}

uint64_t sub_1D6EBA0DC()
{
  uint64_t v32 = v0;
  uint64_t v1 = (uint64_t)(v0 + 2);
  os_log_type_t v2 = (void *)v0[48];
  swift_bridgeObjectRelease();
  sub_1D6FA8060();
  sub_1D6754034((uint64_t)(v0 + 2), (uint64_t)(v0 + 12));
  id v3 = v2;
  id v4 = v2;
  uint64_t v5 = sub_1D6FA8C40();
  os_log_type_t v6 = sub_1D6FAA180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v28 = v0[42];
    uint64_t v7 = v0[40];
    uint64_t v29 = v0[41];
    uint64_t v30 = v0[43];
    uint64_t v8 = v0[39];
    uint64_t v24 = v0[38];
    unint64_t v25 = (void *)v0[48];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    uint64_t v31 = v27;
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v11 = v0[15];
    uint64_t v10 = v0[16];
    __swift_project_boxed_opaque_existential_1(v0 + 12, v11);
    os_log_type_t type = v6;
    uint64_t v12 = v11;
    uint64_t v1 = (uint64_t)(v0 + 2);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v10);
    uint64_t v13 = sub_1D6FA69F0();
    unint64_t v15 = v14;
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v24);
    v0[27] = sub_1D683E928(v13, v15, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
    *(_WORD *)(v9 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v16 = MEMORY[0x1D9467BB0](v0[23], v0[24]);
    v0[26] = sub_1D683E928(v16, v17, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D6748000, v5, type, "Couldn't save zone %{public}s with error: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v27, -1, -1);
    MEMORY[0x1D9468AD0](v9, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v30, v29);
  }
  else
  {
    uint64_t v18 = (void *)v0[48];
    uint64_t v20 = v0[42];
    uint64_t v19 = v0[43];
    uint64_t v21 = v0[41];

    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 12));
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
  }
  __swift_destroy_boxed_opaque_existential_1(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22(0);
}

uint64_t sub_1D6EBA434(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)(v3 + 16) = a1;
  uint64_t v6 = *(void *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA807358) + 48));
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a3 + *a3);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 24) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D6EBA534;
  return v9(a2, v6);
}

uint64_t sub_1D6EBA534(uint64_t a1)
{
  uint64_t v3 = *(void **)(*v1 + 16);
  uint64_t v6 = *v1;
  swift_task_dealloc();
  *uint64_t v3 = a1;
  id v4 = *(uint64_t (**)(void))(v6 + 8);
  return v4();
}

uint64_t sub_1D6EBA648(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  return sub_1D6EBA67C(a1, a2, a3, MEMORY[0x1E4F9D1C0], &qword_1EA807310);
}

uint64_t sub_1D6EBA67C(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t *a5)
{
  void (*v42)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v7 = a4(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v41 = (char *)&v36 - v12;
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t result = sub_1D6FAA8F0();
  uint64_t v14 = v7;
  int64_t v15 = 0;
  uint64_t v44 = a3;
  uint64_t v16 = a3;
  uint64_t v17 = result;
  uint64_t v18 = *(void *)(v16 + 64);
  uint64_t v36 = v16 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v45 = result;
  uint64_t v46 = v8;
  uint64_t v39 = v8 + 32;
  uint64_t v40 = v8 + 16;
  int64_t v37 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v38 = result + 64;
  if ((v20 & v18) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v22 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  uint64_t v47 = v15;
  for (unint64_t i = v22 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v25 << 6))
  {
    uint64_t v28 = v44;
    uint64_t v29 = v46;
    unint64_t v30 = *(void *)(v46 + 72) * i;
    uint64_t v31 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v46 + 16))(v41, *(void *)(v44 + 48) + v30, v14);
    uint64_t v50 = *(void *)(*(void *)(v28 + 56) + 8 * i);
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    v32(v11, v31, v14);
    swift_bridgeObjectRetain();
    uint64_t v33 = v48;
    v42(&v49, &v50);
    if (v33)
    {
      uint64_t v17 = v45;
      swift_release();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v11, v14);
      swift_bridgeObjectRelease();
      return v17;
    }
    uint64_t v48 = 0;
    swift_bridgeObjectRelease();
    *(void *)(v38 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v17 = v45;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v32)(*(void *)(v45 + 48) + v30, v11, v14);
    *(void *)(*(void *)(v17 + 56) + 8 * i) = v49;
    uint64_t v34 = *(void *)(v17 + 16);
    BOOL v24 = __OFADD__(v34, 1);
    uint64_t v35 = v34 + 1;
    if (v24)
    {
      __break(1u);
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    *(void *)(v17 + 16) = v35;
    int64_t v15 = v47;
    if (v21) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v24 = __OFADD__(v15, 1);
    int64_t v25 = v15 + 1;
    if (v24) {
      goto LABEL_28;
    }
    if (v25 >= v37) {
      return v17;
    }
    unint64_t v26 = *(void *)(v36 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_15:
    unint64_t v21 = (v26 - 1) & v26;
    uint64_t v47 = v25;
  }
  int64_t v27 = v25 + 1;
  if (v25 + 1 >= v37) {
    return v17;
  }
  unint64_t v26 = *(void *)(v36 + 8 * v27);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v37) {
    return v17;
  }
  unint64_t v26 = *(void *)(v36 + 8 * v27);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 3;
  if (v25 + 3 >= v37) {
    return v17;
  }
  unint64_t v26 = *(void *)(v36 + 8 * v27);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v27;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v37) {
      return v45;
    }
    unint64_t v26 = *(void *)(v36 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_15;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1D6EBAA14(uint64_t a1)
{
  return sub_1D6EBAA98(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D68F16D8);
}

uint64_t sub_1D6EBAA2C()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EBAA64@<X0>(uint8_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D6EB811C(a1, *(uint8_t **)(v2 + 16), a2);
}

uint64_t sub_1D6EBAA80(uint64_t a1)
{
  return sub_1D6EBAA98(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1D68F12F8);
}

uint64_t sub_1D6EBAA98(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_1D6EBAAB0()
{
  uint64_t v1 = sub_1D6FA2FF0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D6EBAB98(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1D6FA2FF0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1D6EB7F70(a1, *(void *)(v1 + 16), v1 + v4, *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1D6EBAC44(uint64_t a1)
{
  return sub_1D6EB7FEC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1D6EBAC68@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1D6EB8728(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1D6EBAC84(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807300);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D6EBACE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6EBAD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D6D9BFBC;
  return sub_1D6EB9550(a1, a2, v6);
}

uint64_t sub_1D6EBADD8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6EBAE10(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(int **)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1D67824A8;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EA807330 + dword_1EA807330);
  return v8(a1, a2, v6);
}

ValueMetadata *type metadata accessor for LocalDeviceProvider()
{
  return &type metadata for LocalDeviceProvider;
}

uint64_t sub_1D6EBAEEC(uint64_t a1, void *a2)
{
  if (*(void *)(*(void *)a1 + 16))
  {
    sub_1D6754034(*(void *)a1 + 32, (uint64_t)v54);
    id v3 = objc_msgSend(a2, sel_effectiveIdentifier);
    uint64_t v4 = sub_1D6FA98E0();
    uint64_t v6 = v5;

    id v7 = objc_msgSend(a2, sel_name);
    if (v7)
    {
      uint64_t v8 = v7;
      uint64_t v9 = sub_1D6FA98E0();
      uint64_t v11 = v10;

      sub_1D6754034((uint64_t)v54, (uint64_t)v51);
      if (v11) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1D6754034((uint64_t)v54, (uint64_t)v51);
    }
    uint64_t v16 = v52;
    uint64_t v17 = v53;
    __swift_project_boxed_opaque_existential_1(v51, v52);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
    uint64_t v11 = v18;
LABEL_10:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
    id v19 = objc_msgSend(a2, sel_model);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = sub_1D6FA98E0();
      uint64_t v23 = v22;

      sub_1D6754034((uint64_t)v54, (uint64_t)v48);
      if (v23) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_1D6754034((uint64_t)v54, (uint64_t)v48);
    }
    uint64_t v24 = v49;
    uint64_t v25 = v50;
    __swift_project_boxed_opaque_existential_1(v48, v49);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 56))(v24, v25);
    uint64_t v23 = v26;
LABEL_15:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
    id v27 = objc_msgSend(a2, sel_idsDeviceIdentifier);
    uint64_t v44 = v23;
    if (v27)
    {
      uint64_t v28 = v27;
      uint64_t v29 = sub_1D6FA98E0();
      uint64_t v31 = v30;

      sub_1D6754034((uint64_t)v54, (uint64_t)v45);
      if (v31)
      {
        uint64_t v32 = v11;
        uint64_t v33 = v6;
        uint64_t v34 = v4;
LABEL_20:
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v45);
        uint64_t v38 = v55;
        uint64_t v39 = v56;
        __swift_project_boxed_opaque_existential_1(v54, v55);
        uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(v38, v39);
        uint64_t v42 = v41;
        uint64_t v43 = (void *)swift_allocObject();
        long long v43[2] = v34;
        v43[3] = v33;
        v43[4] = v9;
        v43[5] = v32;
        v43[6] = v21;
        v43[7] = v44;
        v43[8] = v29;
        v43[9] = v31;
        v43[10] = v40;
        v43[11] = v42;
        sub_1D6FA65A0();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v54);
      }
    }
    else
    {
      sub_1D6754034((uint64_t)v54, (uint64_t)v45);
    }
    uint64_t v32 = v11;
    uint64_t v33 = v6;
    uint64_t v34 = v4;
    uint64_t v35 = v46;
    uint64_t v36 = v47;
    __swift_project_boxed_opaque_existential_1(v45, v46);
    uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 32))(v35, v36);
    uint64_t v31 = v37;
    goto LABEL_20;
  }
  uint64_t v12 = sub_1D6FA4010();
  sub_1D68303F0();
  uint64_t v13 = swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x1E4F9DD30], v12);
  *(void *)(swift_allocObject() + 16) = v13;

  return sub_1D6FA65A0();
}

uint64_t sub_1D6EBB2AC(void *a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA803898);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 8))(1, v11, v12);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
  unint64_t v14 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v15 = (v6 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v16 + v14, v8, v4);
  uint64_t v17 = (uint64_t (**)(uint64_t))(v16 + v15);
  *uint64_t v17 = sub_1D6EBB4EC;
  v17[1] = (uint64_t (*)(uint64_t))v13;
  id v18 = a1;
  sub_1D6FA6590();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
}

uint64_t sub_1D6EBB4B4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EBB4EC(uint64_t a1)
{
  return sub_1D6EBAEEC(a1, *(void **)(v1 + 16));
}

void sub_1D6EBB4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  id v5 = objc_allocWithZone(MEMORY[0x1E4F946E0]);
  swift_retain();
  id v6 = objc_msgSend(v5, sel_init);
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = sub_1D6830368;
  v7[3] = v4;
  v7[4] = v6;
  uint64_t v16 = sub_1D6EBBA74;
  uint64_t v17 = v7;
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  unint64_t v14 = sub_1D6818554;
  unint64_t v15 = &block_descriptor_58;
  uint64_t v8 = _Block_copy(&v12);
  swift_retain();
  id v9 = v6;
  swift_release();
  objc_msgSend(v9, sel_setLocalDeviceUpdatedHandler_, v8);
  _Block_release(v8);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1D6830368;
  *(void *)(v10 + 24) = v4;
  uint64_t v16 = sub_1D6EBBAC4;
  uint64_t v17 = (void *)v10;
  uint64_t v12 = MEMORY[0x1E4F143A8];
  uint64_t v13 = 1107296256;
  unint64_t v14 = sub_1D6982110;
  unint64_t v15 = &block_descriptor_21;
  uint64_t v11 = _Block_copy(&v12);
  swift_release();
  objc_msgSend(v9, sel_activateWithCompletion_, v11);
  _Block_release(v11);
}

void sub_1D6EBB6E8(void *a1, void (*a2)(void *, uint64_t))
{
  if (a1)
  {
    id v4 = a1;
    a2(a1, 1);
  }
}

uint64_t sub_1D6EBB748()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA803898);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return MEMORY[0x1F4186498](v0, v6, v5);
}

uint64_t sub_1D6EBB7F4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA803898) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v2 + v6;
  uint64_t v8 = (uint64_t *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];

  return sub_1D6B022C4(a1, a2, v7, v9, v10);
}

uint64_t sub_1D6EBB8A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  unint64_t v6 = *(void *)(a1 + 72);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(_OWORD *)(a2 + 24) = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(a2 + 40) = *(_OWORD *)(a1 + 40);
  *(void *)(a2 + 56) = v4;
  *(void *)(a2 + 64) = v5;
  *(void *)(a2 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1D6805488(v5, v6);
}

uint64_t sub_1D6EBB940()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v1 = *(void *)(v0 + 88);
  if (v1 >> 60 != 15) {
    sub_1D6805140(*(void *)(v0 + 80), v1);
  }

  return MEMORY[0x1F4186498](v0, 96, 7);
}

uint64_t sub_1D6EBB9A8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D6EBB8A8(v1 + 16, a1);
}

uint64_t sub_1D6EBB9C4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EBB9FC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6EBBA34()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

id sub_1D6EBBA74(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 32);
  (*(void (**)(uint64_t, void))(v1 + 16))(a1, 0);

  return objc_msgSend(v2, sel_invalidate);
}

void sub_1D6EBBAC4(void *a1)
{
  sub_1D6EBB6E8(a1, *(void (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_1D6EBBAD8(uint64_t a1)
{
  uint64_t v44 = sub_1D6FA0C40();
  uint64_t v3 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_1D6FA0620();
  uint64_t v5 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v40 = (char *)v29 - v8;
  uint64_t v39 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1D6FA0FE0();
  uint64_t v11 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v13 = (char *)v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = MEMORY[0x1E4FBC860];
  if (v14)
  {
    v29[0] = v1;
    uint64_t v51 = MEMORY[0x1E4FBC860];
    sub_1D6BBC7F4(0, v14, 0);
    uint64_t v15 = v51;
    uint64_t v34 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_1EA8073A0);
    uint64_t v16 = a1
        + ((*(unsigned __int8 *)(*((void *)v34 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v34 - 1) + 80));
    uint64_t v33 = *(void *)(*((void *)v34 - 1) + 72);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v31 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v32 = v17;
    uint64_t v30 = (void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v29[1] = v11 + 32;
    uint64_t v35 = v11;
    uint64_t v36 = v9 + 16;
    do
    {
      uint64_t v49 = v15;
      int64_t v50 = v14;
      uint64_t v18 = v16 + v34[12];
      uint64_t v19 = *(void *)(v16 + v34[16]);
      uint64_t v20 = v16 + v34[20];
      uint64_t v21 = (uint64_t *)(v16 + v34[24]);
      uint64_t v48 = *v21;
      int v47 = *((unsigned __int8 *)v21 + 8);
      uint64_t v45 = v16 + v34[28];
      uint64_t v46 = v19;
      v32(v38, v16, v39);
      uint64_t v22 = *v31;
      uint64_t v23 = v13;
      uint64_t v24 = v42;
      (*v31)(v40, v18, v42);
      (*v30)(v43, v20, v44);
      uint64_t v25 = v24;
      uint64_t v13 = v23;
      v22(v41, v45, v25);
      swift_bridgeObjectRetain();
      uint64_t v15 = v49;
      sub_1D6FA0F20();
      uint64_t v51 = v15;
      unint64_t v27 = *(void *)(v15 + 16);
      unint64_t v26 = *(void *)(v15 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_1D6BBC7F4(v26 > 1, v27 + 1, 1);
        uint64_t v15 = v51;
      }
      *(void *)(v15 + 16) = v27 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v15+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v27, v23, v37);
      v16 += v33;
      int64_t v14 = v50 - 1;
    }
    while (v50 != 1);
  }
  return v15;
}

void sub_1D6EBBF90(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v134 = a2;
  uint64_t v142 = sub_1D6FA4AA0();
  uint64_t v137 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  uint64_t v141 = (uint64_t *)((char *)&v123 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = sub_1D6FA0020();
  unint64_t v136 = *(void (***)(char *, uint64_t))(v144 - 8);
  MEMORY[0x1F4188790](v144);
  uint64_t v145 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA801108);
  uint64_t v140 = *(void *)(v146 - 8);
  MEMORY[0x1F4188790](v146);
  v149 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1D6FA0C40();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v135 = (char *)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v153 = (char *)sub_1D6FA0120();
  unint64_t v138 = *((void *)v153 - 1);
  MEMORY[0x1F4188790](v153);
  v152 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD890);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  int64_t v14 = (char *)&v123 - v13;
  uint64_t v15 = sub_1D6FA0620();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v154 = v15;
  uint64_t v155 = v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v147 = (char *)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v143 = (char *)&v123 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  v150 = (char *)&v123 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v123 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v25 - 8);
  unint64_t v27 = (char *)&v123 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_1D6FA05A0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  v148 = (char *)&v123 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)&v123 - v33;
  MEMORY[0x1F4188790](v32);
  uint64_t v36 = (char *)&v123 - v35;
  id v156 = a1;
  id v37 = objc_msgSend(a1, sel_dateCreated);
  if (!v37)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v27, 1, 1, v28);
    goto LABEL_12;
  }
  uint64_t v38 = v37;
  v151 = v36;
  uint64_t v133 = v24;
  sub_1D6FA0560();

  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
  v39(v27, v34, v28);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v28);
  uint64_t v40 = v29;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
LABEL_12:
    int64_t v65 = (uint64_t *)&unk_1EBD9F790;
    uint64_t v66 = (uint64_t)v27;
LABEL_22:
    sub_1D6753E1C(v66, v65);
    id v49 = v156;
LABEL_23:
    uint64_t v68 = sub_1D6FA2760();
    sub_1D6EBF234((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v68 - 8) + 104))(v69, *MEMORY[0x1E4F9CE00], v68);
    swift_willThrow();

    return;
  }
  uint64_t v132 = v28;
  v39(v151, v27, v28);
  id v41 = objc_msgSend(v156, sel_identifier);
  if (!v41)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v155 + 56))(v14, 1, 1, v154);
    goto LABEL_21;
  }
  uint64_t v42 = v41;
  uint64_t v43 = v150;
  sub_1D6FA0600();

  uint64_t v44 = v154;
  uint64_t v45 = v155;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v155 + 32);
  v46(v14, v43, v154);
  uint64_t v131 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  v131(v14, 0, 1, v44);
  int v47 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
  if (v47(v14, 1, v44) == 1)
  {
LABEL_21:
    (*(void (**)(char *, uint64_t))(v40 + 8))(v151, v132);
    int64_t v65 = &qword_1EBDAD890;
    uint64_t v66 = (uint64_t)v14;
    goto LABEL_22;
  }
  uint64_t v130 = v40;
  uint64_t v48 = v133;
  v46(v133, v14, v44);
  id v49 = v156;
  id v50 = objc_msgSend(v156, sel_startDate);
  if (!v50)
  {
    (*(void (**)(char *, uint64_t))(v155 + 8))(v48, v44);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v151, v132);
    goto LABEL_23;
  }
  uint64_t v51 = v50;
  uint64_t v128 = sub_1D6FA98E0();
  uint64_t v53 = v52;

  id v54 = objc_msgSend(v49, sel_schedule);
  uint64_t v55 = v49;
  if (!v54)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v155 + 8))(v133, v154);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v151, v132);
    goto LABEL_23;
  }
  uint64_t v56 = v54;
  id v57 = objc_msgSend(v55, sel_templateIdentifier);
  if (!v57)
  {
    uint64_t v60 = v154;
    v131(v12, 1, 1, v154);
    goto LABEL_27;
  }
  uint64_t v58 = v57;
  uint64_t v129 = v53;
  int64_t v59 = v150;
  sub_1D6FA0600();

  uint64_t v60 = v154;
  v46(v12, v59, v154);
  v131(v12, 0, 1, v60);
  if (v47(v12, 1, v60) == 1)
  {
LABEL_27:

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v155 + 8))(v133, v60);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v151, v132);
    int64_t v65 = &qword_1EBDAD890;
    uint64_t v66 = (uint64_t)v12;
    goto LABEL_22;
  }
  v46(v143, v12, v60);
  uint64_t v61 = (char *)MEMORY[0x1E4FBC860];
  unint64_t v162 = MEMORY[0x1E4FBC860];
  id v62 = v56;
  sub_1D6FAA370();
  id v124 = v62;

  sub_1D6EBF234(&qword_1EBDABD98, MEMORY[0x1E4F27660]);
  sub_1D6FAA490();
  uint64_t v63 = v139;
  uint64_t v64 = v148;
  while (v161)
  {
    sub_1D676593C(&v160, &v159);
    sub_1D676594C((uint64_t)&v159, (uint64_t)v157);
    type metadata accessor for ManagedWorkoutPlanItemIndex();
    if ((swift_dynamicCast() & 1) == 0) {
      uint64_t v158 = 0;
    }
    uint64_t v67 = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v159);
    if (v158)
    {
      MEMORY[0x1D9466B90](v67);
      if (*(void *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1D6FA9C40();
      }
      sub_1D6FA9C80();
      sub_1D6FA9C20();
    }
    sub_1D6FAA490();
  }
  (*(void (**)(char *, char *))(v138 + 8))(v152, v153);
  unint64_t v70 = v162;
  if (v162 >> 62) {
    goto LABEL_57;
  }
  uint64_t v71 = *(void *)((v162 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v72 = v156;
  if (v71)
  {
    while (1)
    {
      *(void *)&long long v160 = v61;
      sub_1D6BBC474(0, v71 & ~(v71 >> 63), 0);
      if (v71 < 0) {
        break;
      }
      uint64_t v73 = 0;
      uint64_t v131 = (void (*)(char *, uint64_t, uint64_t, uint64_t))(v70 & 0xC000000000000001);
      ++v136;
      unsigned int v127 = *MEMORY[0x1E4F9E218];
      uint64_t v126 = (void (**)(uint64_t *, void, uint64_t))(v137 + 104);
      uint64_t v125 = (void (**)(char *, uint64_t *, uint64_t))(v137 + 32);
      unint64_t v138 = v70;
      uint64_t v137 = v71;
      while (v71 != v73)
      {
        uint64_t v74 = v146;
        if (v131) {
          uint64_t v75 = (char *)MEMORY[0x1D94677B0](v73, v70);
        }
        else {
          uint64_t v75 = (char *)*(id *)(v70 + 8 * v73 + 32);
        }
        uint64_t v76 = v75;
        id v77 = objc_msgSend(v75, sel_offset);
        if (!v77) {
          goto LABEL_52;
        }
        unint64_t v78 = v77;
        sub_1D6FA98E0();

        v153 = (char *)objc_msgSend(v76, sel_item);
        if (!v153)
        {
          swift_bridgeObjectRelease();
LABEL_52:
          uint64_t v104 = sub_1D6FA2760();
          sub_1D6EBF234((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
          swift_allocError();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v104 - 8) + 104))(v105, *MEMORY[0x1E4F9CE00], v104);
          swift_willThrow();
LABEL_55:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v109 = v154;
          uint64_t v110 = *(void (**)(char *, uint64_t))(v155 + 8);
          v110(v143, v154);
          v110(v133, v109);
          (*(void (**)(char *, uint64_t))(v130 + 8))(v151, v132);
          return;
        }
        char v79 = v145;
        sub_1D6F9FF50();
        if (v63)
        {

          uint64_t v76 = v153;
          goto LABEL_55;
        }
        sub_1D6F9FFB0();
        if ((v80 & 1) != 0
          || (sub_1D6F9FFC0(), (v81 & 1) != 0)
          || (sub_1D6F9FFF0(), (v82 & 1) != 0)
          || (sub_1D6FA0000(), (v83 & 1) != 0))
        {
          uint64_t v102 = sub_1D6FA1DA0();
          sub_1D6EBF234((unint64_t *)&qword_1EA800DF0, MEMORY[0x1E4F9C878]);
          swift_allocError();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v102 - 8) + 104))(v103, *MEMORY[0x1E4F9C828], v102);
          swift_willThrow();
          (*v136)(v79, v144);

          uint64_t v76 = v153;
          goto LABEL_55;
        }
        uint64_t v139 = v73;
        uint64_t v84 = *(int *)(v74 + 48);
        sub_1D6FA2E00();
        (*v136)(v79, v144);
        v152 = v76;
        signed int v85 = objc_msgSend(v76, sel_index);
        *(void *)&v149[v84] = v85;
        unint64_t v86 = v149;
        char v87 = v153;
        id v88 = objc_msgSend(v153, sel_workout);
        if (!v88)
        {
          uint64_t v106 = sub_1D6FA2760();
          sub_1D6EBF234((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
          swift_allocError();
          (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v106 - 8) + 104))(v107, *MEMORY[0x1E4F9CE00], v106);
          swift_willThrow();

          uint64_t v108 = sub_1D6FA2E50();
          (*(void (**)(char *, uint64_t))(*(void *)(v108 - 8) + 8))(v86, v108);
          uint64_t v76 = v152;
          goto LABEL_55;
        }
        uint64_t v89 = v88;
        uint64_t v90 = *(int *)(v74 + 64);
        uint64_t v91 = (uint64_t)v86;
        BOOL v92 = &v86[v90];
        uint64_t v93 = sub_1D6FA98E0();
        uint64_t v95 = v94;

        uint64_t v96 = v141;
        *uint64_t v141 = v93;
        v96[1] = v95;
        uint64_t v97 = v142;
        (*v126)(v96, v127, v142);
        (*v125)(v92, v96, v97);

        uint64_t v98 = v160;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D6BBC474(0, *(void *)(v98 + 16) + 1, 1);
          uint64_t v98 = v160;
        }
        id v72 = v156;
        uint64_t v64 = v148;
        uint64_t v99 = v139;
        unint64_t v101 = *(void *)(v98 + 16);
        unint64_t v100 = *(void *)(v98 + 24);
        if (v101 >= v100 >> 1)
        {
          sub_1D6BBC474(v100 > 1, v101 + 1, 1);
          uint64_t v98 = v160;
        }
        uint64_t v73 = v99 + 1;
        *(void *)(v98 + 16) = v101 + 1;
        sub_1D6765D14(v91, v98+ ((*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80))+ *(void *)(v140 + 72) * v101, &qword_1EA801108);
        uint64_t v71 = v137;
        uint64_t v61 = v147;
        unint64_t v70 = v138;
        if (v137 == v73)
        {
          swift_bridgeObjectRelease();
          goto LABEL_59;
        }
      }
      __break(1u);
LABEL_57:
      swift_bridgeObjectRetain();
      uint64_t v71 = sub_1D6FAA8D0();
      swift_bridgeObjectRelease();
      id v72 = v156;
      if (!v71) {
        goto LABEL_58;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_58:
    swift_bridgeObjectRelease();
    uint64_t v98 = MEMORY[0x1E4FBC860];
    uint64_t v61 = v147;
LABEL_59:
    uint64_t v111 = sub_1D6EBE49C(v98);
    swift_bridgeObjectRelease();
    id v156 = (id)sub_1D6EBDE48(v111);
    swift_bridgeObjectRelease();
    uint64_t v112 = v130;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v64, v151, v132);
    uint64_t v113 = v155;
    unint64_t v114 = *(void (**)(char *, char *, uint64_t))(v155 + 16);
    char v115 = v61;
    uint64_t v116 = v133;
    uint64_t v117 = v154;
    v114(v115, v133, v154);
    sub_1D6FA0BD0();
    uint64_t v139 = v63;
    if (v63)
    {

      swift_release();
      uint64_t v118 = *(void (**)(char *, uint64_t))(v113 + 8);
      v118(v147, v117);
      v119 = *(void (**)(char *, uint64_t))(v112 + 8);
      uint64_t v120 = v132;
      v119(v148, v132);
      v118(v143, v117);
      v118(v116, v117);
      v119(v151, v120);
    }
    else
    {
      *(void *)&long long v159 = (int)objc_msgSend(v72, sel_state);
      sub_1D6AC6424();
      sub_1D6FA12D0();
      v153 = (char *)v160;
      LODWORD(v152) = BYTE8(v160);
      uint64_t v121 = v143;
      v114(v150, v143, v117);
      sub_1D6FA0F20();

      uint64_t v122 = *(void (**)(char *, uint64_t))(v113 + 8);
      v122(v121, v117);
      v122(v133, v117);
      (*(void (**)(char *, uint64_t))(v112 + 8))(v151, v132);
    }
  }
}

uint64_t sub_1D6EBD42C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA801108);
  int64_t v47 = *(void *)(v44 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (char *)v33 - v7;
  uint64_t v8 = sub_1D6FA4AA0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = *a1;
  swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807370);
  sub_1D6EBF27C();
  uint64_t v12 = sub_1D6FA9AF0();
  swift_release();
  int64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v34 = a2;
    uint64_t v35 = v2;
    uint64_t v48 = MEMORY[0x1E4FBC860];
    sub_1D6BBD494(0, v13, 0);
    unint64_t v14 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
    v33[1] = v12;
    uint64_t v15 = v12 + v14;
    uint64_t v16 = *(void *)(v47 + 72);
    id v37 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v38 = v16;
    uint64_t v17 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v40 = v9;
    uint64_t v41 = v8;
    uint64_t v39 = v11;
    uint64_t v36 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v18 = (uint64_t)v42;
    do
    {
      uint64_t v46 = v15;
      int64_t v47 = v13;
      sub_1D6EBF2D8(v15, v18);
      uint64_t v19 = *(int *)(v44 + 48);
      uint64_t v20 = *(int *)(v44 + 64);
      uint64_t v21 = v11;
      uint64_t v22 = v43;
      uint64_t v23 = &v43[v20];
      uint64_t v45 = v18 + v20;
      uint64_t v24 = sub_1D6FA2E50();
      uint64_t v25 = *(void *)(v24 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v22, v18, v24);
      *(void *)&v22[v19] = *(void *)(v18 + v19);
      (*v37)(v23, v45, v8);
      uint64_t v26 = *v17;
      (*v17)(v21, v23, v8);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
      sub_1D6753E1C(v18, &qword_1EA801108);
      uint64_t v27 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D6BBD494(0, *(void *)(v27 + 16) + 1, 1);
        uint64_t v27 = v48;
      }
      unint64_t v29 = *(void *)(v27 + 16);
      unint64_t v28 = *(void *)(v27 + 24);
      uint64_t v11 = v39;
      uint64_t v30 = v40;
      uint64_t v17 = v36;
      if (v29 >= v28 >> 1)
      {
        sub_1D6BBD494(v28 > 1, v29 + 1, 1);
        uint64_t v27 = v48;
      }
      *(void *)(v27 + 16) = v29 + 1;
      unint64_t v31 = v27
          + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))
          + *(void *)(v30 + 72) * v29;
      uint64_t v8 = v41;
      v26((char *)v31, v11, v41);
      uint64_t v48 = v27;
      uint64_t v15 = v46 + v38;
      int64_t v13 = v47 - 1;
    }
    while (v47 != 1);
    uint64_t result = swift_bridgeObjectRelease();
    a2 = v34;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v27 = MEMORY[0x1E4FBC860];
  }
  *a2 = v27;
  return result;
}

void sub_1D6EBD818(void *a1, uint64_t a2)
{
  id v35 = a1;
  uint64_t v5 = sub_1D6FA0C40();
  uint64_t v34 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v33 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1D6FA0620();
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1D6FA05A0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  int64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v2;
  uint64_t v14 = sub_1D6FA0F60();
  uint64_t v38 = a2;
  uint64_t v15 = sub_1D6EBE1AC(v14, (uint64_t (*)(char *, uint64_t))sub_1D6EBF340, (uint64_t)v37);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    unint64_t v30 = v15;
    uint64_t v31 = v5;
    sub_1D6FA0F10();
    uint64_t v16 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    id v17 = v35;
    objc_msgSend(v35, sel_setDateCreated_, v16);

    sub_1D6FA0EF0();
    uint64_t v18 = (void *)sub_1D6FA05E0();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v32 + 8);
    v19(v9, v7);
    objc_msgSend(v17, sel_setIdentifier_, v18);

    sub_1D6FA0F50();
    uint64_t v20 = (void *)sub_1D6FA05E0();
    v19(v9, v7);
    objc_msgSend(v17, sel_setTemplateIdentifier_, v20);

    uint64_t v21 = v33;
    sub_1D6FA0FD0();
    sub_1D6FA0BE0();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v31);
    uint64_t v22 = (void *)sub_1D6FA98B0();
    swift_bridgeObjectRelease();
    objc_msgSend(v17, sel_setStartDate_, v22);

    uint64_t v39 = sub_1D6FA0F70();
    char v40 = v23 & 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8B30);
    sub_1D6FA12C0();
    int64_t v24 = v41;
    if (v41 >= 0x7FFFFFFF) {
      int64_t v24 = 0x7FFFFFFFLL;
    }
    if (v24 <= (uint64_t)0xFFFFFFFF80000000) {
      unint64_t v25 = 0xFFFFFFFF80000000;
    }
    else {
      unint64_t v25 = v24;
    }
    objc_msgSend(v17, sel_setState_, v25);
    sub_1D694200C(v30);
    swift_bridgeObjectRelease();
    id v26 = objc_allocWithZone(MEMORY[0x1E4F1CAD0]);
    uint64_t v27 = (void *)sub_1D6FA9B80();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v26, sel_initWithArray_, v27);

    objc_msgSend(v17, sel_setSchedule_, v28);
  }
}

uint64_t sub_1D6EBDC74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v6[3] = a1;
  v6[2] = a3;
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D6EBEA14(a2, (void (*)(void, char *))sub_1D6EBF35C, (uint64_t)v6);
  swift_bridgeObjectRelease();
  return v4;
}

void sub_1D6EBDCE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ManagedWorkoutPlanItemIndex();
  id v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContext_, a3);
  uint64_t v7 = sub_1D6DEE7E0(a3);
  if (v3)
  {

    return;
  }
  uint64_t v8 = (void *)v7;
  objc_msgSend(v6, sel_setItem_, v7);

  sub_1D6AA1A18();
  uint64_t v9 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setOffset_, v9);

  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a1 <= 0x7FFFFFFF)
  {
    objc_msgSend(v6, sel_setIndex_, a1);
    return;
  }
  __break(1u);
}

void sub_1D6EBDE08(unsigned char *a1@<X8>)
{
  *a1 = 90;
}

void sub_1D6EBDE14(void *a1@<X0>, uint64_t a2@<X8>)
{
}

void sub_1D6EBDE2C(void *a1, uint64_t a2)
{
}

uint64_t sub_1D6EBDE48(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA2E50();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  id v37 = (char *)&v31 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807310);
  uint64_t result = sub_1D6FAA8F0();
  uint64_t v8 = result;
  int64_t v9 = 0;
  uint64_t v40 = a1;
  uint64_t v41 = v3;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v11 = a1 + 64;
  uint64_t v10 = v12;
  uint64_t v13 = 1 << *(unsigned char *)(v11 - 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v10;
  uint64_t v32 = v11;
  int64_t v33 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v35 = v3 + 32;
  uint64_t v36 = v3 + 16;
  uint64_t v34 = result + 64;
  uint64_t v39 = result;
  uint64_t v16 = v38;
  if ((v14 & v10) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v17 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  int64_t v42 = v9;
  for (unint64_t i = v17 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v20 << 6))
  {
    uint64_t v24 = v40;
    uint64_t v23 = v41;
    unint64_t v25 = *(void *)(v41 + 72) * i;
    id v26 = v37;
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v37, *(void *)(v40 + 48) + v25, v2);
    uint64_t v45 = *(void *)(*(void *)(v24 + 56) + 8 * i);
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v27(v16, v26, v2);
    swift_bridgeObjectRetain();
    uint64_t v28 = v43;
    sub_1D6EBD42C(&v45, &v44);
    uint64_t v43 = v28;
    if (v28)
    {
      uint64_t v8 = v39;
      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v2);
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    *(void *)(v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v8 = v39;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(*(void *)(v39 + 48) + v25, v16, v2);
    *(void *)(*(void *)(v8 + 56) + 8 * i) = v44;
    uint64_t v29 = *(void *)(v8 + 16);
    BOOL v19 = __OFADD__(v29, 1);
    uint64_t v30 = v29 + 1;
    if (v19)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    *(void *)(v8 + 16) = v30;
    int64_t v9 = v42;
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v19 = __OFADD__(v9, 1);
    int64_t v20 = v9 + 1;
    if (v19) {
      goto LABEL_27;
    }
    if (v20 >= v33) {
      return v8;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v20);
    if (!v21) {
      break;
    }
LABEL_15:
    unint64_t v15 = (v21 - 1) & v21;
    int64_t v42 = v20;
  }
  int64_t v22 = v20 + 1;
  if (v20 + 1 >= v33) {
    return v8;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v20 + 2;
  if (v20 + 2 >= v33) {
    return v8;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v20 + 3;
  if (v20 + 3 >= v33) {
    return v8;
  }
  unint64_t v21 = *(void *)(v32 + 8 * v22);
  if (v21)
  {
LABEL_14:
    int64_t v20 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v20 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v20 >= v33) {
      return v8;
    }
    unint64_t v21 = *(void *)(v32 + 8 * v20);
    ++v22;
    if (v21) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1D6EBE1AC(uint64_t a1, uint64_t (*a2)(char *, uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = a2;
  uint64_t v32 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8007B0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  int64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v28 - v10;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v29 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v30 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v33 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v18 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v18 | (v17 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v17 << 6))
  {
    uint64_t v23 = v33;
    uint64_t v24 = *(void *)(v33 + 48);
    uint64_t v25 = sub_1D6FA2E50();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v11, v24 + *(void *)(*(void *)(v25 - 8) + 72) * i, v25);
    *(void *)&v11[*(int *)(v6 + 48)] = *(void *)(*(void *)(v23 + 56) + 8 * i);
    sub_1D6765D14((uint64_t)v11, (uint64_t)v9, &qword_1EA8007B0);
    uint64_t v26 = *(void *)&v9[*(int *)(v6 + 48)];
    swift_bridgeObjectRetain();
    unint64_t v27 = v31(v9, v26);
    sub_1D6753E1C((uint64_t)v9, &qword_1EA8007B0);
    if (v4)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = sub_1D6C5A950(v27);
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v30) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    if (!v21) {
      break;
    }
LABEL_17:
    unint64_t v15 = (v21 - 1) & v21;
  }
  int64_t v22 = v17 + 1;
  if (v17 + 1 >= v30) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v17 + 2;
  if (v17 + 2 >= v30) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v17 + 3;
  if (v17 + 3 >= v30) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21) {
    goto LABEL_16;
  }
  int64_t v22 = v17 + 4;
  if (v17 + 4 >= v30)
  {
LABEL_26:
    swift_release();
    return v34;
  }
  unint64_t v21 = *(void *)(v29 + 8 * v22);
  if (v21)
  {
LABEL_16:
    int64_t v17 = v22;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v30) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v29 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1D6EBE49C(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA2E50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v71 = &v58[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA801108);
  uint64_t v5 = MEMORY[0x1F4188790](v70);
  uint64_t v67 = &v58[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v69 = &v58[-v8];
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v68 = &v58[-v10];
  MEMORY[0x1F4188790](v9);
  unint64_t v78 = &v58[-v12];
  char v80 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v14 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v15 = (v14 + 32) & ~v14;
    uint64_t v16 = a1 + v15;
    uint64_t v17 = *(void *)(v11 + 72);
    uint64_t v65 = v15;
    uint64_t v66 = (void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v73 = (void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32);
    uint64_t v62 = v17 + v15;
    uint64_t v61 = v14 | 7;
    char v79 = (void *)MEMORY[0x1E4FBC868];
    uint64_t v63 = v3;
    uint64_t v60 = (void (**)(uint64_t, uint64_t))(v3 + 8);
    long long v59 = xmmword_1D6FAE050;
    uint64_t v64 = v17;
    while (1)
    {
      uint64_t v74 = v16;
      uint64_t v75 = v13;
      unint64_t v21 = v78;
      sub_1D6EBF2D8(v16, (uint64_t)v78);
      uint64_t v22 = v70;
      uint64_t v23 = *(int *)(v70 + 48);
      uint64_t v24 = *(int *)(v70 + 64);
      uint64_t v25 = v68;
      uint64_t v26 = &v68[v24];
      unint64_t v27 = &v21[v24];
      uint64_t v28 = *v66;
      uint64_t v76 = v26;
      id v77 = v28;
      v28(v68, (uint64_t)v21, v2);
      uint64_t v29 = *(void *)&v21[v23];
      *(void *)&v25[v23] = v29;
      uint64_t v30 = sub_1D6FA4AA0();
      uint64_t v31 = v2;
      uint64_t v32 = *(void *)(v30 - 8);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v32 + 16))(v26, v27, v30);
      uint64_t v33 = *(int *)(v22 + 48);
      uint64_t v34 = *(int *)(v22 + 64);
      uint64_t v35 = (uint64_t)v69;
      uint64_t v36 = &v69[v34];
      id v72 = *v73;
      v72(v69, v25, v31);
      *(void *)(v35 + v33) = v29;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v32 + 32))(v36, v76, v30);
      uint64_t v2 = v31;
      uint64_t v37 = (uint64_t)v71;
      v77(v71, v35, v31);
      sub_1D6753E1C(v35, &qword_1EA801108);
      uint64_t v38 = v79;
      unint64_t v40 = sub_1D6C64588(v37);
      uint64_t v41 = v38[2];
      BOOL v42 = (v39 & 1) == 0;
      uint64_t v43 = v41 + v42;
      if (__OFADD__(v41, v42)) {
        break;
      }
      char v44 = v39;
      if (v38[3] < v43)
      {
        sub_1D6C66528(v43, 1);
        uint64_t v38 = v80;
        unint64_t v45 = sub_1D6C64588(v37);
        if ((v44 & 1) != (v46 & 1)) {
          goto LABEL_20;
        }
        unint64_t v40 = v45;
      }
      if (v44)
      {
        (*v60)(v37, v31);
        int64_t v47 = v80;
        uint64_t v48 = v80[7];
        sub_1D6765D14((uint64_t)v78, (uint64_t)v67, &qword_1EA801108);
        unint64_t v49 = *(void *)(v48 + 8 * v40);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v48 + 8 * v40) = v49;
        char v79 = v47;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v49 = sub_1D6AE3240(0, *(void *)(v49 + 16) + 1, 1, v49);
          *(void *)(v48 + 8 * v40) = v49;
        }
        unint64_t v52 = *(void *)(v49 + 16);
        unint64_t v51 = *(void *)(v49 + 24);
        if (v52 >= v51 >> 1)
        {
          unint64_t v49 = sub_1D6AE3240(v51 > 1, v52 + 1, 1, v49);
          *(void *)(v48 + 8 * v40) = v49;
        }
        uint64_t v19 = v74;
        uint64_t v18 = v75;
        *(void *)(v49 + 16) = v52 + 1;
        uint64_t v20 = v64;
        sub_1D6765D14((uint64_t)v67, v49 + v65 + v52 * v64, &qword_1EA801108);
      }
      else
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA801100);
        uint64_t v53 = swift_allocObject();
        *(_OWORD *)(v53 + 16) = v59;
        sub_1D6765D14((uint64_t)v78, v53 + v65, &qword_1EA801108);
        v38[(v40 >> 6) + 8] |= 1 << v40;
        v72((unsigned char *)(v38[6] + *(void *)(v63 + 72) * v40), (unsigned char *)v37, v31);
        *(void *)(v38[7] + 8 * v40) = v53;
        uint64_t v54 = v38[2];
        BOOL v55 = __OFADD__(v54, 1);
        uint64_t v56 = v54 + 1;
        if (v55) {
          goto LABEL_19;
        }
        char v79 = v38;
        v38[2] = v56;
        uint64_t v19 = v74;
        uint64_t v18 = v75;
        uint64_t v20 = v64;
      }
      uint64_t v16 = v19 + v20;
      uint64_t v13 = v18 - 1;
      if (!v13) {
        return (uint64_t)v79;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    uint64_t result = sub_1D6FAAB00();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC868];
  }
  return result;
}

uint64_t sub_1D6EBEA14(uint64_t a1, void (*a2)(void, char *), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807380);
  uint64_t v6 = MEMORY[0x1F4188790](v31);
  uint64_t v30 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (uint64_t *)((char *)&v24 - v9);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1D6FAA830();
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v29 = v13;
  uint64_t v24 = a1;
  if (v13)
  {
    uint64_t v14 = 0;
    uint64_t v28 = sub_1D6FA4AA0();
    uint64_t v15 = *(void *)(v28 - 8);
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v26 = v15 + 16;
    unint64_t v27 = v16;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    uint64_t v25 = *(void *)(v15 + 72);
    uint64_t v18 = (void (**)(char *, char *, uint64_t))(v15 + 32);
    while (1)
    {
      uint64_t v19 = v31;
      uint64_t v20 = &v30[*(int *)(v31 + 48)];
      uint64_t v21 = v28;
      v27(v20, v17, v28);
      uint64_t v22 = (char *)v10 + *(int *)(v19 + 48);
      *uint64_t v10 = v14;
      (*v18)(v22, v20, v21);
      sub_1D6765D14((uint64_t)v10, (uint64_t)v12, &qword_1EA807380);
      v32(*(void *)v12, &v12[*(int *)(v19 + 48)]);
      if (v4) {
        break;
      }
      ++v14;
      sub_1D6753E1C((uint64_t)v12, &qword_1EA807380);
      sub_1D6FAA800();
      sub_1D6FAA840();
      sub_1D6FAA850();
      sub_1D6FAA810();
      v17 += v25;
      if (v29 == v14) {
        goto LABEL_5;
      }
    }
    sub_1D6753E1C((uint64_t)v12, &qword_1EA807380);
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return v34;
  }
}

uint64_t _s11SeymourCore11WorkoutPlanV0A8ServicesE21representativeSamplesSayACGyFZ_0()
{
  uint64_t v0 = sub_1D6FA0720();
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v31 = (char *)&v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_1D6FA05A0();
  MEMORY[0x1F4188790](v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF638);
  uint64_t v2 = swift_allocObject();
  long long v36 = xmmword_1D6FAE050;
  *(_OWORD *)(v2 + 16) = xmmword_1D6FAE050;
  uint64_t v34 = v2;
  sub_1D6FA0590();
  uint64_t v33 = sub_1D6FA05D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807388);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = v36;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA801280);
  uint64_t v4 = (int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA802090) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(*(void *)v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = v36;
  unint64_t v7 = v6 + v5;
  uint64_t v8 = v4[14];
  sub_1D6FA2E00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8010F8);
  uint64_t v9 = sub_1D6FA4AA0();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v36;
  uint64_t v13 = (uint64_t *)(v12 + v11);
  *uint64_t v13 = sub_1D6FA9980();
  v13[1] = v14;
  (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, *MEMORY[0x1E4F9E218], v9);
  *(void *)(v7 + v8) = v12;
  unint64_t v15 = sub_1D6981F40(v6);
  uint64_t v32 = v3;
  *(void *)(v3 + 32) = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807390);
  uint64_t v16 = sub_1D6FA0C40();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = v36;
  sub_1D6FA0490();
  sub_1D6FA0670();
  sub_1D6FA0C00();
  uint64_t v18 = sub_1D6FA2860();
  int64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v31 = (char *)v16;
    *(void *)&long long v36 = v17;
    uint64_t v40 = MEMORY[0x1E4FBC860];
    sub_1D6BBD8F4(0, v19, 0);
    uint64_t v20 = v40;
    sub_1D6AC6424();
    uint64_t v21 = 0;
    do
    {
      char v37 = *(unsigned char *)(v18 + v21 + 32);
      sub_1D6FA1360();
      uint64_t v22 = v38;
      char v23 = v39;
      uint64_t v40 = v20;
      unint64_t v25 = *(void *)(v20 + 16);
      unint64_t v24 = *(void *)(v20 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1D6BBD8F4(v24 > 1, v25 + 1, 1);
        uint64_t v20 = v40;
      }
      ++v21;
      *(void *)(v20 + 16) = v25 + 1;
      uint64_t v26 = v20 + 16 * v25;
      *(void *)(v26 + 32) = v22;
      *(unsigned char *)(v26 + 40) = v23;
    }
    while (v19 != v21);
  }
  swift_bridgeObjectRelease();
  sub_1D6FA05D0();
  sub_1D6FA0620();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807398);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA8B30);
  uint64_t v27 = sub_1D6FA1040();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_1D6EBBAD8(v27);
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_1D6EBF1DC(uint64_t a1)
{
  uint64_t result = sub_1D6EBF234(&qword_1EBDA8B20, MEMORY[0x1E4F9C2B8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D6EBF234(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D6EBF27C()
{
  unint64_t result = qword_1EA807378;
  if (!qword_1EA807378)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA807370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA807378);
  }
  return result;
}

uint64_t sub_1D6EBF2D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA801108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6EBF340(uint64_t a1, uint64_t a2)
{
  return sub_1D6EBDC74(a1, a2, *(void *)(v2 + 16));
}

void sub_1D6EBF35C(uint64_t a1, uint64_t a2)
{
  sub_1D6EBDCE8(a1, a2, *(void *)(v2 + 16));
}

uint64_t static DaemonProtocol.main()(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  unint64_t v5 = (void *)MEMORY[0x1D9467FF0]();
  sub_1D6EBF41C((uint64_t)v8, v2, a1, a2);
  id v6 = objc_msgSend(self, sel_mainRunLoop);
  objc_msgSend(v6, sel_run);

  return sub_1D6EBF528((uint64_t)v8);
}

uint64_t sub_1D6EBF41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  sub_1D69317D0();
  swift_bridgeObjectRelease();
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(a4 + 16);
  uint64_t v12 = a3;
  uint64_t v13 = a4;
  __swift_allocate_boxed_opaque_existential_0(v11);
  v7(a3, a4);
  uint64_t result = sub_1D6EBF5C4((uint64_t)v11, a1);
  if (*(void *)(a1 + 24))
  {
    sub_1D6754034(a1, (uint64_t)v11);
    uint64_t v9 = v12;
    uint64_t v10 = v13;
    __swift_project_boxed_opaque_existential_1(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v10 + 24))(v9, v10);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return result;
}

uint64_t sub_1D6EBF528(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDB01B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of static DaemonProtocol.bundleIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DaemonProtocol.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DaemonProtocol.activate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1D6EBF5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDB01B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6EBF62C(char a1)
{
  uint64_t v3 = sub_1D6FA70F0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  id v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v7 = *(void (**)(unsigned char *, void, uint64_t))(v4 + 104);
  v7(v6, *MEMORY[0x1E4F9B798], v3);
  v10[15] = 0;
  sub_1D6FA6CD0();
  v7(v6, *MEMORY[0x1E4F9B7C8], v3);
  v10[14] = 0;
  sub_1D6FA6CD0();
  v7(v6, *MEMORY[0x1E4F9B818], v3);
  v10[13] = 1;
  sub_1D6FA6CD0();
  *(unsigned char *)(v1 + OBJC_IVAR____TtC15SeymourServices33ServiceSubscriptionProviderBroker_platform) = a1;
  uint64_t v8 = v1 + OBJC_IVAR____TtC15SeymourServices33ServiceSubscriptionProviderBroker_state;
  *(_OWORD *)uint64_t v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(void *)(v8 + 32) = 0;
  return v1;
}

uint64_t sub_1D6EBF818@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if ((sub_1D6FA68A0() & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v8 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16);
  v8(v7, v2 + OBJC_IVAR____TtC15SeymourServices33ServiceSubscriptionProviderBroker__fakeSubscribed, v4);
  sub_1D6FA6CA0();
  uint64_t v9 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  if (v16[15] != 1)
  {
    v8(v7, v2 + OBJC_IVAR____TtC15SeymourServices33ServiceSubscriptionProviderBroker__fakeUnsubscribed, v4);
    sub_1D6FA6CA0();
    v9(v7, v4);
    if (v16[14] == 1)
    {
      uint64_t v10 = type metadata accessor for ServiceSubscriptionFakingProvider();
      swift_allocObject();
      char v11 = 0;
      goto LABEL_7;
    }
LABEL_8:
    char v14 = sub_1D6FA68C0();
    id v15 = objc_msgSend(self, sel_sharedInstance);
    uint64_t v10 = type metadata accessor for ServiceSubscriptionProvider();
    swift_allocObject();
    uint64_t result = sub_1D6BB4578(v14, v15);
    uint64_t v13 = &off_1F2E64848;
    goto LABEL_9;
  }
  uint64_t v10 = type metadata accessor for ServiceSubscriptionFakingProvider();
  swift_allocObject();
  char v11 = 1;
LABEL_7:
  uint64_t result = sub_1D6AA1F30(v11);
  uint64_t v13 = &off_1F2E55B98;
LABEL_9:
  a1[3] = v10;
  a1[4] = (uint64_t)v13;
  *a1 = result;
  return result;
}

uint64_t sub_1D6EBFA74()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC15SeymourServices33ServiceSubscriptionProviderBroker__fakeSubscribed;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1E0);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC15SeymourServices33ServiceSubscriptionProviderBroker__fakeUnsubscribed, v2);
  v3(v0 + OBJC_IVAR____TtC15SeymourServices33ServiceSubscriptionProviderBroker__fakeSubscribedSimulator, v2);
  sub_1D684CD0C(v0 + OBJC_IVAR____TtC15SeymourServices33ServiceSubscriptionProviderBroker_state);

  return swift_deallocClassInstance();
}

uint64_t sub_1D6EBFB74()
{
  return type metadata accessor for ServiceSubscriptionProviderBroker();
}

uint64_t type metadata accessor for ServiceSubscriptionProviderBroker()
{
  uint64_t result = qword_1EA8073C0;
  if (!qword_1EA8073C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1D6EBFBC8()
{
  sub_1D677FCF8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

ValueMetadata *type metadata accessor for ServiceSubscriptionProviderBroker.State()
{
  return &type metadata for ServiceSubscriptionProviderBroker.State;
}

uint64_t sub_1D6EBFC80()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  __swift_destroy_boxed_opaque_existential_1(v0 + 176);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AssetRequestProvider()
{
  return self;
}

uint64_t sub_1D6EBFCFC@<X0>(void (*a1)(void, void, void)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v37 = a4;
  uint64_t v5 = sub_1D6FA1180();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1D6FA2410();
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1D6FA8C50();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v32 - v17;
  sub_1D6FA8070();
  sub_1D6FA8C30();
  long long v36 = *(void (**)(char *, uint64_t))(v13 + 8);
  v36(v18, v12);
  sub_1D6FA1140();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1D6EC3A04((uint64_t)v11, MEMORY[0x1E4F9CB88]);
  if (EnumCaseMultiPayload)
  {
    sub_1D6FA8070();
    (*(void (**)(char *, void, uint64_t))(v6 + 16))(v8, a1, v5);
    uint64_t v20 = sub_1D6FA8C40();
    os_log_type_t v21 = sub_1D6FAA160();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v35 = v24;
      *(_DWORD *)uint64_t v23 = 141558274;
      uint64_t v38 = 1752392040;
      uint64_t v39 = v24;
      LODWORD(v34) = v22;
      sub_1D6FAA4A0();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v33 = v23 + 14;
      sub_1D6EC351C(&qword_1EBDAC928, MEMORY[0x1E4F9C2F0]);
      uint64_t v25 = sub_1D6FAAA50();
      uint64_t v38 = sub_1D683E928(v25, v26, &v39);
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      _os_log_impl(&dword_1D6748000, v20, (os_log_type_t)v34, "[Key Request Provider] AssetRequest is not the required mediaStream request %{mask.hash}s", (uint8_t *)v23, 0x16u);
      uint64_t v27 = v35;
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v27, -1, -1);
      MEMORY[0x1D9468AD0](v23, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }

    v36(v16, v12);
    uint64_t v29 = sub_1D6FA08C0();
    sub_1D6EC351C((unint64_t *)&qword_1EA8001F0, MEMORY[0x1E4F9BFA0]);
    uint64_t v30 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x1E4F9BEE8], v29);
    *(void *)(swift_allocObject() + 16) = v30;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA6328);
    return sub_1D6FA65A0();
  }
  else
  {
    __swift_project_boxed_opaque_existential_1((void *)(v33 + 16), *(void *)(v33 + 40));
    return sub_1D6CDD9CC(a1, v34, v35, v37);
  }
}

uint64_t sub_1D6EC0224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDACC60);
  uint64_t v6 = *(void *)(v34 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v34);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  char v11 = (char *)v31 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v37 = (char *)v31 - v12;
  uint64_t v13 = *((void *)v3 + 25);
  uint64_t v32 = (void (*)(char *, char *, uint64_t))*((void *)v3 + 26);
  uint64_t v35 = v3;
  __swift_project_boxed_opaque_existential_1((void *)v3 + 22, v13);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v3;
  void v14[3] = a1;
  v14[4] = a2;
  uint64_t v15 = sub_1D6FA1C00();
  uint64_t v33 = (void (*)(char *, uint64_t))v15;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1D67D9FA0((uint64_t)sub_1D6CDD040, (uint64_t)v14, v13, v15, (uint64_t)v32, (uint64_t)v11);
  swift_release();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v16 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v34;
  v32(v16, v11, v34);
  uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = (v18 + 16) & ~v18;
  unint64_t v20 = (v7 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  v31[0] = v20 + 16;
  v31[1] = v18 | 7;
  uint64_t v21 = swift_allocObject();
  int v22 = *(void (**)(uint64_t, char *, uint64_t))(v6 + 32);
  uint64_t v23 = v16;
  uint64_t v24 = v17;
  v22(v21 + v19, v23, v17);
  uint64_t v25 = (uint64_t (**)(uint64_t))(v21 + v20);
  *uint64_t v25 = sub_1D6EC0A18;
  v25[1] = 0;
  unint64_t v26 = v37;
  sub_1D6FA6590();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v6 + 8);
  v33(v11, v24);
  v32(v11, v26, v24);
  uint64_t v27 = swift_allocObject();
  v22(v27 + v19, v11, v24);
  uint64_t v28 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(v27 + v20);
  uint64_t v29 = v35;
  *uint64_t v28 = sub_1D6CDD08C;
  v28[1] = v29;
  type metadata accessor for AssetRequestProvider.CatalogURLs();
  swift_retain();
  sub_1D6FA6590();
  return ((uint64_t (*)(char *, uint64_t))v33)(v37, v24);
}

uint64_t sub_1D6EC0564@<X0>(void *a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint8_t *a4@<X8>)
{
  uint64_t v38 = a4;
  uint64_t v8 = sub_1D6FA8C50();
  uint64_t v37 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF970);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0170);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D6FAE050;
  *(void *)(v14 + 32) = a2;
  *(void *)(v14 + 40) = a3;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1D67C854C((void (*)(char *, unint64_t, uint64_t))v14, 0, 1, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4)
  {
    uint64_t v35 = v8;
    unint64_t v36 = a3;
    uint64_t v33 = a2;
    uint64_t v34 = v10;
    uint64_t v17 = *((void *)v15 + 2);
    uint64_t v18 = sub_1D6FA1C00();
    uint64_t v19 = *(void *)(v18 - 8);
    if (v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v13, &v15[(*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80)], v18);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v13, 0, 1, v18);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v13, 1, 1, v18);
    }
    unint64_t v20 = v36;
    uint64_t v21 = v38;
    swift_bridgeObjectRelease();
    sub_1D6FA1C00();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v13, 1, v18) == 1)
    {
      sub_1D6753E1C((uint64_t)v13, &qword_1EA7FF970);
      int v22 = v34;
      sub_1D6FA8070();
      swift_bridgeObjectRetain_n();
      uint64_t v23 = sub_1D6FA8C40();
      os_log_type_t v24 = sub_1D6FAA180();
      BOOL v25 = os_log_type_enabled(v23, v24);
      uint64_t v26 = v35;
      uint64_t v27 = v37;
      if (v25)
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        uint64_t v29 = swift_slowAlloc();
        uint64_t v40 = v29;
        *(_DWORD *)uint64_t v28 = 136446210;
        uint64_t v38 = v28 + 4;
        swift_bridgeObjectRetain();
        uint64_t v39 = sub_1D683E928(v33, v20, &v40);
        sub_1D6FAA4A0();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D6748000, v23, v24, "[Request Provider] Bundle requests - Catalog workout not found for identifier %{public}s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D9468AD0](v29, -1, -1);
        MEMORY[0x1D9468AD0](v28, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v22, v26);
      uint64_t v30 = sub_1D6FA08C0();
      sub_1D6EC351C((unint64_t *)&qword_1EA8001F0, MEMORY[0x1E4F9BFA0]);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v30 - 8) + 104))(v31, *MEMORY[0x1E4F9BF48], v30);
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint8_t *, char *, uint64_t))(v19 + 32))(v21, v13, v18);
    }
  }
  return result;
}

uint64_t sub_1D6EC0A18(uint64_t a1)
{
  uint64_t v2 = sub_1D6FA8C50();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD7C8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (void **)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D6753AB0(a1, (uint64_t)v8, &qword_1EBDAD7C8);
  if (swift_getEnumCaseMultiPayload() != 1) {
    return sub_1D6753E1C((uint64_t)v8, &qword_1EBDAD7C8);
  }
  uint64_t v9 = *v8;
  sub_1D6FA8070();
  id v10 = v9;
  id v11 = v9;
  uint64_t v12 = sub_1D6FA8C40();
  os_log_type_t v13 = sub_1D6FAA160();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v20 = v15;
    *(_DWORD *)uint64_t v14 = 136446210;
    v19[1] = v14 + 4;
    swift_getErrorValue();
    uint64_t v16 = MEMORY[0x1D9467BB0](v19[4], v19[5]);
    void v19[2] = sub_1D683E928(v16, v17, &v20);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D6748000, v12, v13, "Failed to query catalog workouts with error: %{public}s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v15, -1, -1);
    MEMORY[0x1D9468AD0](v14, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D6EC0CE0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v56 = a3;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA803770);
  uint64_t v4 = *(void *)(v49 - 8);
  uint64_t v44 = *(void *)(v4 + 64);
  uint64_t v5 = MEMORY[0x1F4188790](v49);
  unint64_t v45 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v57 = (uint64_t)&v41 - v7;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9F1C0);
  uint64_t v50 = *(void *)(v53 - 8);
  uint64_t v52 = *(void *)(v50 + 64);
  uint64_t v8 = MEMORY[0x1F4188790](v53);
  unint64_t v51 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  char v46 = (char *)&v41 - v10;
  uint64_t v11 = sub_1D6FA1C00();
  uint64_t v42 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v47 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1D6FA53C0();
  uint64_t v54 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  MEMORY[0x1F4188790](v15);
  unint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a2 + 12, a2[15]);
  __swift_project_boxed_opaque_existential_1(a2 + 12, a2[15]);
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v43(v14, v58, v11);
  uint64_t v48 = v17;
  sub_1D6FA53B0();
  uint64_t v18 = __swift_project_boxed_opaque_existential_1(a2 + 7, a2[10]);
  __swift_project_boxed_opaque_existential_1((void *)(*v18 + 16), *(void *)(*v18 + 40));
  uint64_t v19 = v57;
  sub_1D6A346A8(16, (uint64_t)v17, v57);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1D6A33080;
  *(void *)(v20 + 24) = 0;
  uint64_t v21 = v45;
  uint64_t v22 = v19;
  uint64_t v23 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v45, v22, v49);
  unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v25 = (v44 + v24 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v26 + v24, v21, v23);
  uint64_t v27 = (uint64_t (**)(uint64_t *))(v26 + v25);
  *uint64_t v27 = sub_1D6EC3634;
  v27[1] = (uint64_t (*)(uint64_t *))v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA62E0);
  uint64_t v28 = v46;
  sub_1D6FA6590();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v57, v23);
  uint64_t v29 = v42;
  v43(v14, v58, v42);
  unint64_t v30 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v31 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v31 + v30, v14, v29);
  uint64_t v32 = v50;
  uint64_t v33 = v51;
  uint64_t v34 = v53;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v51, v28, v53);
  uint64_t v35 = v32;
  unint64_t v36 = (*(unsigned __int8 *)(v32 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  unint64_t v37 = (v52 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v38 + v36, v33, v34);
  uint64_t v39 = (uint64_t (**)(uint64_t))(v38 + v37);
  *uint64_t v39 = sub_1D6EC36F8;
  v39[1] = (uint64_t (*)(uint64_t))v31;
  type metadata accessor for AssetRequestProvider.CatalogURLs();
  sub_1D6FA6590();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v28, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v48, v55);
}

uint64_t sub_1D6EC1268(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AssetRequestProvider.CatalogURLs();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = sub_1D6FA1C00();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a2, v10);
  uint64_t v11 = swift_bridgeObjectRetain();
  size_t v12 = sub_1D6CFE4E8(v11);
  swift_bridgeObjectRelease();
  sub_1D6FA1B70();
  *(void *)&v9[*(int *)(v3 + 20)] = v12;
  sub_1D6EC2E08((uint64_t)v9, (uint64_t)v7);
  unint64_t v13 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1D6EC30CC((uint64_t)v7, v14 + v13);
  sub_1D6FA65A0();
  return sub_1D6EC3A04((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for AssetRequestProvider.CatalogURLs);
}

uint64_t sub_1D6EC1434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v104 = a4;
  uint64_t v91 = a3;
  uint64_t v125 = a2;
  uint64_t v114 = a5;
  uint64_t v124 = sub_1D6FA0BC0();
  uint64_t v111 = *(void *)(v124 - 8);
  MEMORY[0x1F4188790](v124);
  uint64_t v108 = v6;
  uint64_t v122 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for AssetRequestProvider.CatalogURLs();
  uint64_t v102 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v103 = v7;
  uint64_t v106 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F560);
  uint64_t v112 = *(void *)(v113 - 8);
  MEMORY[0x1F4188790](v113);
  uint64_t v110 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = v8;
  MEMORY[0x1F4188790](v9);
  uint64_t v123 = (uint64_t)&v89 - v10;
  uint64_t v99 = sub_1D6FA02E0();
  uint64_t v97 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v98 = (char *)&v89 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_1D6FA2410();
  MEMORY[0x1F4188790](v95);
  uint64_t v96 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_1D6FA1180();
  uint64_t v107 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  char v115 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = v13;
  MEMORY[0x1F4188790](v14);
  uint64_t v120 = (char *)&v89 - v15;
  uint64_t v119 = sub_1D6FA5CF0();
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x1F4188790](v119);
  uint64_t v117 = (char *)&v89 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F260);
  MEMORY[0x1F4188790](v17 - 8);
  uint64_t v94 = (uint64_t)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v116 = (uint64_t)&v89 - v20;
  uint64_t v133 = sub_1D6FA40D0();
  uint64_t v21 = *(void *)(v133 - 8);
  MEMORY[0x1F4188790](v133);
  uint64_t v132 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_1D6FA64A0();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v131 = (char *)&v89 - v28;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDACBC0);
  MEMORY[0x1F4188790](v29 - 8);
  uint64_t v90 = (char *)&v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA0430();
  double v32 = v31;
  sub_1D6FA1120();
  double v34 = v33;
  uint64_t v93 = sub_1D6FA9980();
  uint64_t v92 = v35;
  uint64_t v105 = a1;
  uint64_t v36 = sub_1D6FA1BB0();
  uint64_t v37 = *(void *)(v36 + 56);
  uint64_t v126 = v36 + 56;
  uint64_t v38 = 1 << *(unsigned char *)(v36 + 32);
  uint64_t v39 = -1;
  if (v38 < 64) {
    uint64_t v39 = ~(-1 << v38);
  }
  unint64_t v40 = v39 & v37;
  uint64_t v134 = v24 + 32;
  uint64_t v135 = v24;
  uint64_t v129 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v130 = v24 + 16;
  int64_t v127 = (unint64_t)(v38 + 63) >> 6;
  uint64_t v128 = (uint64_t (**)(char *, uint64_t))(v24 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v42 = 0;
  if (!v40) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v43 = __clz(__rbit64(v40));
  v40 &= v40 - 1;
  for (unint64_t i = v43 | (v42 << 6); ; unint64_t i = __clz(__rbit64(v46)) + (v42 << 6))
  {
    uint64_t v48 = v36;
    uint64_t v49 = *(void *)(v36 + 48);
    uint64_t v50 = v135;
    unint64_t v51 = v131;
    (*(void (**)(char *, unint64_t, uint64_t))(v135 + 16))(v131, v49 + *(void *)(v135 + 72) * i, v23);
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
    v52(v26, v51, v23);
    uint64_t v53 = v132;
    sub_1D6FA6470();
    uint64_t v54 = sub_1D6FA40C0();
    uint64_t v56 = v55;
    char v58 = v57 & 1;
    (*v129)(v53, v133);
    uint64_t v137 = v54;
    uint64_t v138 = v56;
    char v139 = v58;
    char v136 = 4;
    sub_1D6EC229C();
    sub_1D6EC22F0();
    LOBYTE(v53) = sub_1D6FA1310();
    sub_1D67A397C(v54, v56, v58);
    if (v53)
    {
      swift_release();
      uint64_t v59 = (uint64_t)v90;
      v52(v90, v26, v23);
      uint64_t v60 = 0;
      goto LABEL_28;
    }
    uint64_t result = (*v128)(v26, v23);
    uint64_t v36 = v48;
    if (v40) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v45 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    if (v45 >= v127) {
      goto LABEL_27;
    }
    unint64_t v46 = *(void *)(v126 + 8 * v45);
    ++v42;
    if (!v46)
    {
      int64_t v42 = v45 + 1;
      if (v45 + 1 >= v127) {
        goto LABEL_27;
      }
      unint64_t v46 = *(void *)(v126 + 8 * v42);
      if (!v46)
      {
        int64_t v42 = v45 + 2;
        if (v45 + 2 >= v127) {
          goto LABEL_27;
        }
        unint64_t v46 = *(void *)(v126 + 8 * v42);
        if (!v46)
        {
          int64_t v42 = v45 + 3;
          if (v45 + 3 >= v127) {
            goto LABEL_27;
          }
          unint64_t v46 = *(void *)(v126 + 8 * v42);
          if (!v46)
          {
            int64_t v42 = v45 + 4;
            if (v45 + 4 >= v127) {
              goto LABEL_27;
            }
            unint64_t v46 = *(void *)(v126 + 8 * v42);
            if (!v46) {
              break;
            }
          }
        }
      }
    }
LABEL_22:
    unint64_t v40 = (v46 - 1) & v46;
  }
  int64_t v47 = v45 + 5;
  if (v47 < v127)
  {
    unint64_t v46 = *(void *)(v126 + 8 * v47);
    if (!v46)
    {
      while (1)
      {
        int64_t v42 = v47 + 1;
        if (__OFADD__(v47, 1)) {
          goto LABEL_33;
        }
        if (v42 >= v127) {
          goto LABEL_27;
        }
        unint64_t v46 = *(void *)(v126 + 8 * v42);
        ++v47;
        if (v46) {
          goto LABEL_22;
        }
      }
    }
    int64_t v42 = v47;
    goto LABEL_22;
  }
LABEL_27:
  swift_release();
  uint64_t v60 = 1;
  uint64_t v59 = (uint64_t)v90;
LABEL_28:
  uint64_t v61 = v135;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v135 + 56))(v59, v60, 1, v23);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v59, 1, v23) == 1)
  {
    sub_1D6753E1C(v59, (uint64_t *)&unk_1EBDACBC0);
  }
  else
  {
    sub_1D6FA6480();
    (*v128)((char *)v59, v23);
  }
  uint64_t v62 = v91;
  sub_1D6FA6860();
  sub_1D6FA6870();
  uint64_t v63 = v116;
  sub_1D6FA0190();
  swift_bridgeObjectRetain();
  uint64_t v64 = v105;
  sub_1D6FA1BA0();
  sub_1D6753AB0(v63, v94, (uint64_t *)&unk_1EBD9F260);
  uint64_t v65 = v117;
  sub_1D6FA5CB0();
  (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v96, v65, v119);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v98, v64 + *(int *)(v101 + 24), v99);
  sub_1D6FA0B20();
  uint64_t v66 = v120;
  sub_1D6FA10D0();
  uint64_t v67 = sub_1D6FA0B50();
  sub_1D6EBFCFC((void (*)(void, void, void))v66, v67, v68, v123);
  swift_bridgeObjectRelease();
  uint64_t v69 = v106;
  sub_1D6EC2E08(v64, v106);
  uint64_t v70 = v111;
  (*(void (**)(char *, uint64_t, uint64_t))(v111 + 16))(v122, v62, v124);
  uint64_t v71 = v107;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v115, v66, v121);
  unint64_t v72 = (*(unsigned __int8 *)(v102 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
  unint64_t v73 = (v103 + v72 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v75 = (v74 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = (*(unsigned __int8 *)(v70 + 80) + v75 + 8) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  unint64_t v77 = (v108 + *(unsigned __int8 *)(v71 + 80) + v76) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  uint64_t v78 = swift_allocObject();
  sub_1D6EC30CC(v69, v78 + v72);
  uint64_t v79 = v124;
  *(void *)(v78 + v73) = v125;
  *(double *)(v78 + v74) = v32;
  *(double *)(v78 + v75) = v32 + v34;
  (*(void (**)(unint64_t, char *, uint64_t))(v70 + 32))(v78 + v76, v122, v79);
  uint64_t v80 = v121;
  (*(void (**)(unint64_t, char *, uint64_t))(v71 + 32))(v78 + v77, v115, v121);
  uint64_t v81 = v112;
  char v82 = v110;
  uint64_t v83 = v123;
  uint64_t v84 = v113;
  (*(void (**)(char *, uint64_t, uint64_t))(v112 + 16))(v110, v123, v113);
  unint64_t v85 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  unint64_t v86 = (v109 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v81 + 32))(v87 + v85, v82, v84);
  id v88 = (uint64_t (**)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))(v87 + v86);
  *id v88 = sub_1D6EC3130;
  v88[1] = (uint64_t (*)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))v78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA6328);
  sub_1D6FA6590();
  (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v83, v84);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v120, v80);
  (*(void (**)(char *, uint64_t))(v118 + 8))(v117, v119);
  return sub_1D6753E1C(v116, (uint64_t *)&unk_1EBD9F260);
}

uint64_t type metadata accessor for AssetRequestProvider.CatalogURLs()
{
  uint64_t result = qword_1EBDAD108;
  if (!qword_1EBDAD108) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1D6EC229C()
{
  unint64_t result = qword_1EA8073D0;
  if (!qword_1EA8073D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA8073D0);
  }
  return result;
}

unint64_t sub_1D6EC22F0()
{
  unint64_t result = qword_1EA8073D8;
  if (!qword_1EA8073D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA8073D8);
  }
  return result;
}

uint64_t sub_1D6EC2344@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  uint64_t v93 = a5;
  uint64_t v87 = a4;
  uint64_t v86 = a3;
  uint64_t v13 = sub_1D6FA0BC0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v92 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1D6FA8C50();
  uint64_t v88 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_1D6FA02E0();
  uint64_t v19 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v107 = (char *)&v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v96 = (char *)&v83 - v22;
  MEMORY[0x1F4188790](v23);
  uint64_t v106 = (char *)&v83 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F260);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v105 = (char *)&v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v83 - v28;
  uint64_t v85 = *a1;
  uint64_t v30 = *(void *)(a2 + *(int *)(type metadata accessor for AssetRequestProvider.CatalogURLs() + 20));
  uint64_t v31 = *(void *)(v30 + 16);
  uint64_t v90 = a6;
  uint64_t v89 = v16;
  uint64_t v94 = v18;
  uint64_t v91 = v30;
  if (v31)
  {
    uint64_t v83 = v14;
    uint64_t v84 = v13;
    double v34 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v33 = v19 + 16;
    double v32 = v34;
    unint64_t v95 = (*(unsigned __int8 *)(v33 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 64);
    uint64_t v35 = v30 + v95;
    uint64_t v36 = *(void *)(v33 + 56);
    uint64_t v37 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 40);
    uint64_t v104 = (unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 32);
    uint64_t v98 = (void (**)(char *, char *, uint64_t))(v33 + 16);
    uint64_t v97 = (void (**)(char *, uint64_t))(v33 - 8);
    swift_bridgeObjectRetain();
    uint64_t v109 = MEMORY[0x1E4FBC860];
    uint64_t v103 = v33;
    uint64_t v102 = v34;
    uint64_t v101 = v29;
    uint64_t v100 = (void (**)(char *, void, uint64_t, uint64_t))(v33 + 40);
    uint64_t v99 = v36;
    uint64_t v38 = v108;
    do
    {
      v32(v29, v35, v38);
      uint64_t v41 = *v37;
      (*v37)((uint64_t)v29, 0, 1, v38);
      uint64_t v112 = *v104;
      if (v112(v29, 1, v38) == 1)
      {
        uint64_t v13 = v84;
        uint64_t v53 = v83;
        uint64_t v54 = v92;
        uint64_t v55 = v87;
        uint64_t v56 = v86;
        goto LABEL_16;
      }
      uint64_t v110 = v35;
      uint64_t v111 = v31;
      int64_t v42 = v106;
      unint64_t v43 = (void (*)(char *, char *, uint64_t))v32;
      uint64_t v44 = *v98;
      (*v98)(v106, v29, v38);
      uint64_t v45 = (uint64_t)v105;
      v43(v105, v42, v38);
      v41(v45, 0, 1, v38);
      (*v97)(v42, v38);
      if (v112((char *)v45, 1, v38) == 1)
      {
        sub_1D6753E1C(v45, (uint64_t *)&unk_1EBD9F260);
        uint64_t v29 = v101;
        double v32 = v102;
        uint64_t v39 = v99;
        uint64_t v40 = v110;
      }
      else
      {
        unint64_t v46 = v96;
        v44(v96, (char *)v45, v38);
        v44(v107, v46, v38);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v39 = v99;
        uint64_t v48 = v44;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v109 = sub_1D6AE34F4(0, *(void *)(v109 + 16) + 1, 1, v109);
        }
        uint64_t v29 = v101;
        uint64_t v40 = v110;
        unint64_t v50 = *(void *)(v109 + 16);
        unint64_t v49 = *(void *)(v109 + 24);
        double v32 = v102;
        if (v50 >= v49 >> 1) {
          uint64_t v109 = sub_1D6AE34F4(v49 > 1, v50 + 1, 1, v109);
        }
        uint64_t v51 = v109;
        *(void *)(v109 + 16) = v50 + 1;
        v48((char *)(v51 + v95 + v50 * v39), v107, v38);
      }
      uint64_t v35 = v40 + v39;
      uint64_t v31 = v111 - 1;
      uint64_t v37 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v100;
    }
    while (v111 != 1);
    uint64_t v13 = v84;
    uint64_t v52 = v83;
  }
  else
  {
    uint64_t v52 = v14;
    uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    uint64_t v109 = MEMORY[0x1E4FBC860];
  }
  uint64_t v55 = v87;
  uint64_t v56 = v86;
  v41((uint64_t)v29, 1, 1, v108);
  uint64_t v54 = v92;
  uint64_t v53 = v52;
LABEL_16:
  uint64_t v57 = swift_bridgeObjectRelease();
  MEMORY[0x1F4188790](v57);
  *(&v83 - 4) = v56;
  *((double *)&v83 - 3) = a7;
  *((double *)&v83 - 2) = a8;
  *(&v83 - 1) = v55;
  uint64_t v58 = sub_1D6D24AC8((void (*)(uint64_t))sub_1D6EC3464, (uint64_t)(&v83 - 6), v109, (uint64_t)v115);
  swift_bridgeObjectRelease();
  v114[5] = v58;
  uint64_t v59 = swift_bridgeObjectRetain();
  size_t v60 = sub_1D6CFCBBC(v59);
  swift_bridgeObjectRelease();
  v114[6] = v60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD6A8);
  uint64_t v61 = sub_1D6FA1180();
  uint64_t v62 = *(void *)(v61 - 8);
  unint64_t v63 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = xmmword_1D6FAE050;
  uint64_t v65 = *(void (**)(unint64_t, uint64_t, uint64_t))(v62 + 16);
  uint64_t v112 = (unsigned int (*)(char *, uint64_t, uint64_t))v61;
  v65(v64 + v63, v93, v61);
  v114[7] = v64;
  v114[0] = MEMORY[0x1E4FBC860];
  uint64_t v66 = swift_bridgeObjectRetain();
  sub_1D6C5AFB8(v66);
  uint64_t v67 = swift_bridgeObjectRetain();
  sub_1D6C5AFB8(v67);
  uint64_t v68 = swift_bridgeObjectRetain();
  sub_1D6C5AFB8(v68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD2D8);
  swift_arrayDestroy();
  uint64_t v69 = v114[0];
  uint64_t v70 = v94;
  sub_1D6FA8070();
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v54, v55, v13);
  swift_bridgeObjectRetain_n();
  uint64_t v71 = sub_1D6FA8C40();
  os_log_type_t v72 = sub_1D6FAA180();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = swift_slowAlloc();
    uint64_t v111 = swift_slowAlloc();
    v114[0] = v111;
    *(_DWORD *)uint64_t v73 = 136446722;
    uint64_t v74 = sub_1D6FA0B20();
    uint64_t v113 = sub_1D683E928(v74, v75, v114);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v13);
    *(_WORD *)(v73 + 12) = 2160;
    uint64_t v113 = 1752392040;
    sub_1D6FAA4A0();
    *(_WORD *)(v73 + 22) = 2080;
    uint64_t v76 = swift_bridgeObjectRetain();
    uint64_t v77 = MEMORY[0x1D9466C30](v76, v112);
    unint64_t v79 = v78;
    swift_bridgeObjectRelease();
    uint64_t v113 = sub_1D683E928(v77, v79, v114);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v71, v72, "[Request Provider] Bundle (%{public}s) created requests: %{mask.hash}s", (uint8_t *)v73, 0x20u);
    uint64_t v80 = v111;
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v80, -1, -1);
    MEMORY[0x1D9468AD0](v73, -1, -1);

    (*(void (**)(char *, uint64_t))(v88 + 8))(v94, v89);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v13);

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v88 + 8))(v70, v89);
  }
  uint64_t v81 = sub_1D6C82D30(v69);
  swift_bridgeObjectRelease();
  *(void *)(swift_allocObject() + 16) = v81;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA6328);
  return sub_1D6FA65A0();
}

uint64_t sub_1D6EC2E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetRequestProvider.CatalogURLs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6EC2E6C()
{
  uint64_t v1 = (int *)(type metadata accessor for AssetRequestProvider.CatalogURLs() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (((((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = sub_1D6FA0BC0();
  uint64_t v5 = *(void *)(v20 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + v4 + 8) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_1D6FA1180();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v19 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  uint64_t v14 = v0 + v3;
  uint64_t v15 = sub_1D6FA1C00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = v14 + v1[8];
  uint64_t v17 = sub_1D6FA02E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v20);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return MEMORY[0x1F4186498](v0, v19, v13);
}

uint64_t sub_1D6EC30CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetRequestProvider.CatalogURLs();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6EC3130@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for AssetRequestProvider.CatalogURLs() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_1D6FA0BC0() - 8);
  unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + v9 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  uint64_t v13 = *(void *)(sub_1D6FA1180() - 8);
  uint64_t v14 = *(void *)(v2 + v7);
  double v15 = *(double *)(v2 + v8);
  double v16 = *(double *)(v2 + v9);
  uint64_t v17 = v2 + ((v11 + v12 + *(unsigned __int8 *)(v13 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));

  return sub_1D6EC2344(a1, v2 + v6, v14, v2 + v11, v17, a2, v15, v16);
}

uint64_t sub_1D6EC32A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v10[0] = a3;
  v10[1] = a2;
  uint64_t v4 = sub_1D6FA02E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D6FA2410();
  MEMORY[0x1F4188790](v8);
  sub_1D6FA9980();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  sub_1D6FA0B20();
  return sub_1D6FA10D0();
}

uint64_t sub_1D6EC3438()
{
  return objectdestroy_5Tm((uint64_t *)&unk_1EBD9F560);
}

uint64_t sub_1D6EC3444(uint64_t a1, uint64_t a2)
{
  return sub_1D6EC37A4(a1, a2, (uint64_t *)&unk_1EBD9F560, sub_1D6B00594);
}

uint64_t sub_1D6EC3464@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6EC32A8(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1D6EC348C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D6EC34AC()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EC34E4()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6EC351C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6EC3564()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1D6EC35A4()
{
  return objectdestroy_5Tm(&qword_1EBDACC60);
}

uint64_t sub_1D6EC35B0(uint64_t a1, uint64_t a2)
{
  return sub_1D6EC37A4(a1, a2, &qword_1EBDACC60, sub_1D6C1DDD0);
}

uint64_t sub_1D6EC35D0()
{
  return objectdestroy_5Tm(&qword_1EBDACC60);
}

uint64_t sub_1D6EC35DC(uint64_t a1, uint64_t a2)
{
  return sub_1D6EC37A4(a1, a2, &qword_1EBDACC60, sub_1D6B0206C);
}

uint64_t sub_1D6EC35FC()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1D6EC3634(uint64_t *a1)
{
  return sub_1D6A364F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1D6EC363C()
{
  return objectdestroy_5Tm((uint64_t *)&unk_1EA803770);
}

uint64_t sub_1D6EC3648(uint64_t a1, uint64_t a2)
{
  return sub_1D6EC37A4(a1, a2, (uint64_t *)&unk_1EA803770, sub_1D6B01174);
}

uint64_t sub_1D6EC3668()
{
  uint64_t v1 = sub_1D6FA1C00();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1D6EC36F8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1D6FA1C00() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1D6EC1268(a1, v4);
}

uint64_t sub_1D6EC3778()
{
  return objectdestroy_5Tm(&qword_1EBD9F1C0);
}

uint64_t sub_1D6EC3784(uint64_t a1, uint64_t a2)
{
  return sub_1D6EC37A4(a1, a2, &qword_1EBD9F1C0, sub_1D6B022EC);
}

uint64_t sub_1D6EC37A4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a3) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v4 + v8;
  uint64_t v10 = (uint64_t *)(v4 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return a4(a1, a2, v9, v11, v12);
}

uint64_t sub_1D6EC3868()
{
  uint64_t v1 = (int *)(type metadata accessor for AssetRequestProvider.CatalogURLs() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_1D6FA1C00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = v6 + v1[8];
  uint64_t v9 = sub_1D6FA02E0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return MEMORY[0x1F4186498](v0, v4, v5);
}

uint64_t sub_1D6EC3998@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for AssetRequestProvider.CatalogURLs() - 8);
  return sub_1D6C1D464(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1D6EC3A04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1D6EC3A64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1D6FA1C00();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1D6FA02E0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1D6EC3B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1D6FA1C00();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_1D6FA02E0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1D6EC3C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D6FA1C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1D6FA02E0();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

uint64_t sub_1D6EC3D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D6FA1C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1D6FA02E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1D6EC3DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D6FA1C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1D6FA02E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1D6EC3EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D6FA1C00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1D6FA02E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1D6EC3F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1D6EC3F94);
}

uint64_t sub_1D6EC3F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1D6FA1C00();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_1D6FA02E0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 24);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_1D6EC40C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1D6EC40D4);
}

uint64_t sub_1D6EC40D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1D6FA1C00();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_1D6FA02E0();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 24);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_1D6EC4200()
{
  uint64_t result = sub_1D6FA1C00();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_1D6FA02E0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for AdminSystem()
{
  return self;
}

uint64_t sub_1D6EC42F8(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA5190();
  return MEMORY[0x1F4188298](sub_1D6EC43C4, 0, 0);
}

uint64_t sub_1D6EC43C4()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore27AchievementEnvironmentCacheV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  unint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807720);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EC4840;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F13658, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EC4840()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    unint64_t v2 = sub_1D6F147E4;
  }
  else {
    unint64_t v2 = sub_1D6EC4954;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EC4954()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EC4840;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13658, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EC4C60(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA58C0();
  return MEMORY[0x1F4188298](sub_1D6EC4D2C, 0, 0);
}

uint64_t sub_1D6EC4D2C()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA05A0();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6813A1C(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807728);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EC5208;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13684, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EC5208()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EC531C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EC531C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EC5208;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13684, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EC5628(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v4 = sub_1D6FA05A0();
  v2[11] = v4;
  v2[12] = *(void *)(v4 - 8);
  v2[13] = swift_task_alloc();
  v2[14] = sub_1D6FA4090();
  return MEMORY[0x1F4188298](sub_1D6EC5750, 0, 0);
}

uint64_t sub_1D6EC5750()
{
  uint64_t v37 = v0;
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  sub_1D6750160();
  sub_1D6FAA8A0();
  sub_1D6FA0490();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF638);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6FAE050;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 16))(v5 + v4, v1, v3);
  uint64_t v6 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1D6EB07AC(v6);
  v0[15] = v7;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D6FA8C40();
  os_log_type_t v9 = sub_1D6FAA180();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v0[14];
    uint64_t v11 = v0[9];
    uint64_t v33 = v0[8];
    uint64_t v34 = v0[10];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v36 = v13;
    *(_DWORD *)uint64_t v12 = 134218242;
    v0[3] = *(void *)(v7 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v0[4] = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807730);
    uint64_t v14 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v14, v15, &v36);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v8, v9, "Inserting %ld samples for type %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v13, -1, -1);
    MEMORY[0x1D9468AD0](v12, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v34, v33);
  }
  else
  {
    uint64_t v18 = v0[9];
    uint64_t v17 = v0[10];
    uint64_t v19 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  uint64_t v20 = v0[6];
  uint64_t v21 = *(void *)(v7 + 16);
  v0[16] = v21;
  if (!v20)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v22 = v0[7];
  uint64_t v23 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[17] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v20 < 1 || !v21)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[18] = v20;
  if (v20 >= v21) {
    uint64_t v20 = v21;
  }
  uint64_t v24 = v0[15];
  if (*(void *)(v24 + 16) < (unint64_t)v20)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v25 = v24
      + ((*(unsigned __int8 *)(*(void *)(v0[14] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[14] - 8) + 80));
  uint64_t v26 = (2 * v20) | 1;
  uint64_t v27 = (void *)swift_allocObject();
  v0[19] = v27;
  void v27[2] = v24;
  v27[3] = v25;
  void v27[4] = 0;
  v27[5] = v26;
  uint64_t v28 = *(void *)(v22 + v23);
  v0[20] = v28;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v28)
  {
    uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v29 = (void *)swift_task_alloc();
    v0[21] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_1D6EC5CCC;
    return v35((uint64_t)v35, (uint64_t)sub_1D6F136B0, (uint64_t)v27);
  }
  uint64_t v31 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, *MEMORY[0x1E4F9CDE0], v31);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v30();
}

uint64_t sub_1D6EC5CCC()
{
  *(void *)(*(void *)v1 + 176) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6EC6104;
  }
  else {
    uint64_t v2 = sub_1D6EC5DE0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EC5DE0()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = v0[16];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[18] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[16]) {
    uint64_t v7 = v0[16];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[15];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[17];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[14] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[14] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[19] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[20] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[21] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EC5CCC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F136B0, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EC6104()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6EC61A4(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD8D0);
  return MEMORY[0x1F4188298](sub_1D6EC6274, 0, 0);
}

uint64_t sub_1D6EC6274()
{
  uint64_t v32 = v0;
  sub_1D6FA3DC0();
  uint64_t v1 = (void (*)(uint64_t))MEMORY[0x1E4F9DB10];
  sub_1D6F14654((unint64_t *)&unk_1EA805F70, MEMORY[0x1E4F9DB10]);
  sub_1D6F14654((unint64_t *)&unk_1EBDAD970, v1);
  uint64_t v2 = sub_1D6FA1330();
  v0[11] = v2;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[10];
    uint64_t v6 = v0[8];
    uint64_t v28 = v0[7];
    uint64_t v29 = v0[9];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[2] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[3] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078D0);
    uint64_t v9 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[8];
    uint64_t v12 = v0[9];
    uint64_t v14 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[5];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[12] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[6];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[11];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[15] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[16] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[17] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EC6770;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13FA0, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EC6770()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EC6884;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EC6884()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EC6770;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13FA0, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EC6B90(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA1E50();
  return MEMORY[0x1F4188298](sub_1D6EC6C5C, 0, 0);
}

uint64_t sub_1D6EC6C5C()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore15ArchivedSessionV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807738);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EC70D8;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F136DC, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EC70D8()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EC71EC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EC71EC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EC70D8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F136DC, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EC74F8(uint64_t a1, uint64_t a2)
{
  v2[7] = a1;
  v2[8] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = sub_1D6FA4E80();
  return MEMORY[0x1F4188298](sub_1D6EC75C4, 0, 0);
}

uint64_t sub_1D6EC75C4()
{
  uint64_t v33 = v0;
  sub_1D6FA05D0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF608);
  sub_1D6FA2E50();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D6FAE050;
  sub_1D6FA2E00();
  sub_1D6750160();
  sub_1D6FAA8A0();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D6786198(v1);
  swift_bridgeObjectRelease();
  sub_1D6FA9970();
  sub_1D6FA0620();
  sub_1D6FA3830();
  uint64_t v2 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1D6E6D400(v2);
  v0[13] = v3;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[12];
    uint64_t v7 = v0[10];
    uint64_t v29 = v0[9];
    uint64_t v30 = v0[11];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v9;
    *(_DWORD *)uint64_t v8 = 134218242;
    v0[4] = *(void *)(v3 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[5] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807740);
    uint64_t v10 = sub_1D6FA9940();
    v0[6] = sub_1D683E928(v10, v11, &v32);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v4, v5, "Inserting %ld samples for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v9, -1, -1);
    MEMORY[0x1D9468AD0](v8, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v30, v29);
  }
  else
  {
    uint64_t v14 = v0[10];
    uint64_t v13 = v0[11];
    uint64_t v15 = v0[9];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[7];
  uint64_t v17 = *(void *)(v3 + 16);
  v0[14] = v17;
  if (!v16)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = v0[8];
  uint64_t v19 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[15] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v16 < 1 || !v17)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[16] = v16;
  if (v16 >= v17) {
    uint64_t v16 = v17;
  }
  uint64_t v20 = v0[13];
  if (*(void *)(v20 + 16) < (unint64_t)v16)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v21 = v20
      + ((*(unsigned __int8 *)(*(void *)(v0[12] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[12] - 8) + 80));
  uint64_t v22 = (2 * v16) | 1;
  uint64_t v23 = (void *)swift_allocObject();
  v0[17] = v23;
  void v23[2] = v20;
  void v23[3] = v21;
  v23[4] = 0;
  v23[5] = v22;
  uint64_t v24 = *(void *)(v18 + v19);
  v0[18] = v24;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v24)
  {
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v25 = (void *)swift_task_alloc();
    v0[19] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1D6EC7BC8;
    return v31((uint64_t)v31, (uint64_t)sub_1D6F13708, (uint64_t)v23);
  }
  uint64_t v27 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, *MEMORY[0x1E4F9CDE0], v27);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v26();
}

uint64_t sub_1D6EC7BC8()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6EC7FE8;
  }
  else {
    uint64_t v2 = sub_1D6EC7CDC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EC7CDC()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[14];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[7];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[16] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[14]) {
    uint64_t v7 = v0[14];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[13];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[15];
  uint64_t v13 = v0[8];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[12] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[12] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[17] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[18] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[19] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EC7BC8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13708, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EC7FE8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6EC8074(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA0BC0();
  return MEMORY[0x1F4188298](sub_1D6EC8140, 0, 0);
}

uint64_t sub_1D6EC8140()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore11AssetBundleV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807748);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EC85BC;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F13734, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EC85BC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EC86D0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EC86D0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EC85BC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13734, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EC89DC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA08B0();
  return MEMORY[0x1F4188298](sub_1D6EC8AA8, 0, 0);
}

uint64_t sub_1D6EC8AA8()
{
  uint64_t v32 = v0;
  sub_1D6FA0140();
  sub_1D6FA0140();
  sub_1D6FA1E70();
  sub_1D6AE1944();
  sub_1D6FAA8A0();
  sub_1D6FA02E0();
  uint64_t v1 = sub_1D6FA1060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6AE10E8(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807750);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EC8FD0;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13760, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EC8FD0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6EC93F0;
  }
  else {
    uint64_t v2 = sub_1D6EC90E4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EC90E4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EC8FD0;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13760, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EC93F0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6EC947C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA2460();
  return MEMORY[0x1F4188298](sub_1D6EC9548, 0, 0);
}

uint64_t sub_1D6EC9548()
{
  uint64_t v32 = v0;
  sub_1D6FA0140();
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA02E0();
  sub_1D6FA05A0();
  uint64_t v1 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6A5D4DC(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807758);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EC9A44;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F1378C, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EC9A44()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EC9B58;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EC9B58()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EC9A44;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F1378C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EC9E64(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA4180();
  return MEMORY[0x1F4188298](sub_1D6EC9F30, 0, 0);
}

uint64_t sub_1D6EC9F30()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore23AssetRequestKeyMetadataV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807760);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6ECA3AC;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F137B8, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6ECA3AC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ECA4C0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECA4C0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ECA3AC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F137B8, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ECA7CC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA5CF0();
  return MEMORY[0x1F4188298](sub_1D6ECA898, 0, 0);
}

uint64_t sub_1D6ECA898()
{
  uint64_t v36 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0170);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D6FAE050;
  *(void *)(v1 + 32) = sub_1D6FA9980();
  *(void *)(v1 + 40) = v2;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D6FAE050;
  *(void *)(v3 + 32) = sub_1D6FA9980();
  *(void *)(v3 + 40) = v4;
  sub_1D6FA0140();
  sub_1D6FA02E0();
  uint64_t v5 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1D6B90B5C(v5);
  v0[12] = v6;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D6FA8C40();
  os_log_type_t v8 = sub_1D6FAA180();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = v0[11];
    uint64_t v10 = v0[9];
    uint64_t v32 = v0[8];
    uint64_t v33 = v0[10];
    uint64_t v11 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v35 = v12;
    *(_DWORD *)uint64_t v11 = 134218242;
    v0[3] = *(void *)(v6 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v0[4] = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807768);
    uint64_t v13 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v13, v14, &v35);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v7, v8, "Inserting %ld samples for type %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v12, -1, -1);
    MEMORY[0x1D9468AD0](v11, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(v33, v32);
  }
  else
  {
    uint64_t v17 = v0[9];
    uint64_t v16 = v0[10];
    uint64_t v18 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v18);
  }
  uint64_t v19 = v0[6];
  uint64_t v20 = *(void *)(v6 + 16);
  v0[13] = v20;
  if (!v19)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v21 = v0[7];
  uint64_t v22 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v19 < 1 || !v20)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v29 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v19;
  if (v19 >= v20) {
    uint64_t v19 = v20;
  }
  uint64_t v23 = v0[12];
  if (*(void *)(v23 + 16) < (unint64_t)v19)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v24 = v23
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v25 = (2 * v19) | 1;
  uint64_t v26 = (void *)swift_allocObject();
  v0[16] = v26;
  v26[2] = v23;
  v26[3] = v24;
  v26[4] = 0;
  v26[5] = v25;
  uint64_t v27 = *(void *)(v21 + v22);
  v0[17] = v27;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v27)
  {
    uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v28 = (void *)swift_task_alloc();
    v0[18] = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_1D6ECADD4;
    return v34((uint64_t)v34, (uint64_t)sub_1D6F137E4, (uint64_t)v26);
  }
  uint64_t v30 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v30 - 8) + 104))(v31, *MEMORY[0x1E4F9CDE0], v30);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v29();
}

uint64_t sub_1D6ECADD4()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ECAEE8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECAEE8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ECADD4;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F137E4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ECB1F4(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA38F0();
  return MEMORY[0x1F4188298](sub_1D6ECB2C0, 0, 0);
}

uint64_t sub_1D6ECB2C0()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA3840();
  sub_1D6FA0140();
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D6FA9760();
  sub_1D6FAA460();
  sub_1D6FA02E0();
  type metadata accessor for QualityOfService(0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDA6170);
  uint64_t v1 = sub_1D6FA1030();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6BC858C(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807770);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ECB864;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13810, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ECB864()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ECB978;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECB978()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ECB864;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13810, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ECBC84(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA2EA0();
  return MEMORY[0x1F4188298](sub_1D6ECBD50, 0, 0);
}

uint64_t sub_1D6ECBD50()
{
  uint64_t v32 = v0;
  sub_1D6FA0140();
  sub_1D6FA0140();
  sub_1D6801874();
  sub_1D6FAA8A0();
  sub_1D6FA02E0();
  uint64_t v1 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D69DF5F8(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807778);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ECC25C;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F1383C, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ECC25C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ECC370;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECC370()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ECC25C;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F1383C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ECC67C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA6A50();
  return MEMORY[0x1F4188298](sub_1D6ECC748, 0, 0);
}

uint64_t sub_1D6ECC748()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA9970();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6BB104C(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807780);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ECCC1C;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13868, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ECCC1C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ECCD30;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECCD30()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ECCC1C;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13868, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ECD03C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6ECD0FC, 0, 0);
}

uint64_t sub_1D6ECD0FC()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D6A37BC4();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for BodyFocusIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807788);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6ECD54C;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F13894, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6ECD54C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6ECD660;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECD660()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6ECD54C;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13894, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6ECD930(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA6850();
  return MEMORY[0x1F4188298](sub_1D6ECD9FC, 0, 0);
}

uint64_t sub_1D6ECD9FC()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6AC0F44();
  sub_1D6AC0F98();
  sub_1D6FA1330();
  sub_1D6FA0480();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8031B0);
  sub_1D6FA05A0();
  uint64_t v1 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6AC07BC(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807790);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ECDF20;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F138C0, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ECDF20()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ECE034;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECE034()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ECDF20;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F138C0, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ECE340(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA4710();
  return MEMORY[0x1F4188298](sub_1D6ECE40C, 0, 0);
}

uint64_t sub_1D6ECE40C()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore24BurnBarDisplayPreferenceV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807798);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6ECE888;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F138EC, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6ECE888()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ECE99C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECE99C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ECE888;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F138EC, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ECECA8(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8011E8);
  return MEMORY[0x1F4188298](sub_1D6ECED78, 0, 0);
}

uint64_t sub_1D6ECED78()
{
  uint64_t v30 = v0;
  sub_1D69E3768();
  sub_1D69BED70();
  uint64_t v1 = sub_1D6FA1330();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v26 = v0[7];
    uint64_t v27 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077A0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v29);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v27, v26);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[15] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[16] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[17] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6ECF1E8;
    return v28((uint64_t)v28, (uint64_t)sub_1D6F13918, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6ECF1E8()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ECF2FC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECF2FC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[15] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[16] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[17] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6ECF1E8;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13918, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6ECF5D4(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDAD8E0);
  return MEMORY[0x1F4188298](sub_1D6ECF6A4, 0, 0);
}

uint64_t sub_1D6ECF6A4()
{
  uint64_t v30 = v0;
  sub_1D67FB66C();
  sub_1D69BD544();
  uint64_t v1 = sub_1D6FA1330();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v26 = v0[7];
    uint64_t v27 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077A8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v29);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v27, v26);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[15] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[16] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[17] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6ECFB14;
    return v28((uint64_t)v28, (uint64_t)sub_1D6F13944, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6ECFB14()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ECFC28;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ECFC28()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[15] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[16] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[17] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6ECFB14;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13944, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6ECFF00(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD8C0);
  return MEMORY[0x1F4188298](sub_1D6ECFFD0, 0, 0);
}

uint64_t sub_1D6ECFFD0()
{
  uint64_t v30 = v0;
  sub_1D6AF0488();
  sub_1D69BD640();
  uint64_t v1 = sub_1D6FA1330();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v26 = v0[7];
    uint64_t v27 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077B0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v29);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v27, v26);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[15] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[16] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[17] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6ED0440;
    return v28((uint64_t)v28, (uint64_t)sub_1D6F13970, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6ED0440()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ED0554;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED0554()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[15] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[16] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[17] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6ED0440;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13970, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6ED082C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA3BF0();
  return MEMORY[0x1F4188298](sub_1D6ED08F8, 0, 0);
}

uint64_t sub_1D6ED08F8()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D678ACF8();
  sub_1D6FA9760();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6E6CEB0(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077B8);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ED0DE8;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F1399C, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ED0DE8()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ED0EFC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED0EFC()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED0DE8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F1399C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED1208(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA4210();
  return MEMORY[0x1F4188298](sub_1D6ED12D4, 0, 0);
}

uint64_t sub_1D6ED12D4()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore23CatalogModalityMetadataV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077C0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6ED1750;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F139C8, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6ED1750()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ED1864;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED1864()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED1750;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F139C8, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED1B70(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA47E0();
  return MEMORY[0x1F4188298](sub_1D6ED1C3C, 0, 0);
}

uint64_t sub_1D6ED1C3C()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore24CatalogModalityReferenceV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077C8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6ED20B8;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F139F4, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6ED20B8()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ED21CC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED21CC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED20B8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F139F4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED24D8(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA1B20();
  return MEMORY[0x1F4188298](sub_1D6ED25A4, 0, 0);
}

uint64_t sub_1D6ED25A4()
{
  uint64_t v34 = v0;
  sub_1D67DE52C();
  sub_1D67DE580();
  sub_1D6FA1330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0170);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D6FAE050;
  *(void *)(v1 + 32) = sub_1D6FA9980();
  *(void *)(v1 + 40) = v2;
  sub_1D6FA0140();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDAC950);
  sub_1D6FA02E0();
  uint64_t v3 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1D67DDDB8(v3);
  v0[12] = v4;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D6FA8C40();
  os_log_type_t v6 = sub_1D6FAA180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[11];
    uint64_t v8 = v0[9];
    uint64_t v30 = v0[8];
    uint64_t v31 = v0[10];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v33 = v10;
    *(_DWORD *)uint64_t v9 = 134218242;
    v0[3] = *(void *)(v4 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v0[4] = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077D0);
    uint64_t v11 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v11, v12, &v33);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v5, v6, "Inserting %ld samples for type %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v10, -1, -1);
    MEMORY[0x1D9468AD0](v9, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v31, v30);
  }
  else
  {
    uint64_t v15 = v0[9];
    uint64_t v14 = v0[10];
    uint64_t v16 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v17 = v0[6];
  uint64_t v18 = *(void *)(v4 + 16);
  v0[13] = v18;
  if (!v17)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v19 = v0[7];
  uint64_t v20 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v17 < 1 || !v18)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v17;
  if (v17 >= v18) {
    uint64_t v17 = v18;
  }
  uint64_t v21 = v0[12];
  if (*(void *)(v21 + 16) < (unint64_t)v17)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v22 = v21
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v23 = (2 * v17) | 1;
  uint64_t v24 = (void *)swift_allocObject();
  v0[16] = v24;
  void v24[2] = v21;
  v24[3] = v22;
  v24[4] = 0;
  v24[5] = v23;
  uint64_t v25 = *(void *)(v19 + v20);
  v0[17] = v25;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v25)
  {
    uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v26 = (void *)swift_task_alloc();
    v0[18] = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_1D6ED2AF0;
    return v32((uint64_t)v32, (uint64_t)sub_1D6F13A20, (uint64_t)v24);
  }
  uint64_t v28 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v29, *MEMORY[0x1E4F9CDE0], v28);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v27();
}

uint64_t sub_1D6ED2AF0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ED2C04;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED2C04()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED2AF0;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13A20, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED2F10(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA42D0();
  return MEMORY[0x1F4188298](sub_1D6ED2FDC, 0, 0);
}

uint64_t sub_1D6ED2FDC()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore23CatalogProgramReferenceV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077D8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6ED3458;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F13A4C, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6ED3458()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ED356C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED356C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED3458;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13A4C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED3878(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA29C0();
  return MEMORY[0x1F4188298](sub_1D6ED3944, 0, 0);
}

uint64_t sub_1D6ED3944()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA2970();
  sub_1D6FA9970();
  sub_1D6FA05A0();
  sub_1D6FA29A0();
  uint64_t v1 = sub_1D6FA1060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6EAE42C(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077E0);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ED3E58;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13A78, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ED3E58()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ED3F6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED3F6C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED3E58;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13A78, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED4278(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA1210();
  return MEMORY[0x1F4188298](sub_1D6ED4344, 0, 0);
}

uint64_t sub_1D6ED4344()
{
  uint64_t v34 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0170);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D6FAE050;
  *(void *)(v1 + 32) = sub_1D6FA9980();
  *(void *)(v1 + 40) = v2;
  sub_1D6FA9970();
  sub_1D6A2145C();
  sub_1D6FAA8A0();
  uint64_t v3 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1D6A2103C(v3);
  v0[12] = v4;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D6FA8C40();
  os_log_type_t v6 = sub_1D6FAA180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[11];
    uint64_t v8 = v0[9];
    uint64_t v30 = v0[8];
    uint64_t v31 = v0[10];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v33 = v10;
    *(_DWORD *)uint64_t v9 = 134218242;
    v0[3] = *(void *)(v4 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v0[4] = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077E8);
    uint64_t v11 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v11, v12, &v33);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v5, v6, "Inserting %ld samples for type %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v10, -1, -1);
    MEMORY[0x1D9468AD0](v9, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v31, v30);
  }
  else
  {
    uint64_t v15 = v0[9];
    uint64_t v14 = v0[10];
    uint64_t v16 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v17 = v0[6];
  uint64_t v18 = *(void *)(v4 + 16);
  v0[13] = v18;
  if (!v17)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v19 = v0[7];
  uint64_t v20 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v17 < 1 || !v18)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v17;
  if (v17 >= v18) {
    uint64_t v17 = v18;
  }
  uint64_t v21 = v0[12];
  if (*(void *)(v21 + 16) < (unint64_t)v17)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v22 = v21
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v23 = (2 * v17) | 1;
  uint64_t v24 = (void *)swift_allocObject();
  v0[16] = v24;
  void v24[2] = v21;
  v24[3] = v22;
  v24[4] = 0;
  v24[5] = v23;
  uint64_t v25 = *(void *)(v19 + v20);
  v0[17] = v25;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v25)
  {
    uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v26 = (void *)swift_task_alloc();
    v0[18] = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_1D6ED4874;
    return v32((uint64_t)v32, (uint64_t)sub_1D6F13AA4, (uint64_t)v24);
  }
  uint64_t v28 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v29, *MEMORY[0x1E4F9CDE0], v28);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v27();
}

uint64_t sub_1D6ED4874()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ED4988;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED4988()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED4874;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13AA4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED4C94(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA3670();
  return MEMORY[0x1F4188298](sub_1D6ED4D60, 0, 0);
}

uint64_t sub_1D6ED4D60()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore20CatalogThemeCategoryV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077F0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6ED51DC;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F13AD0, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6ED51DC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ED52F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED52F0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED51DC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13AD0, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED55FC(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6ED56BC, 0, 0);
}

uint64_t sub_1D6ED56BC()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D6CEC23C();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for CatalogTipCategoryIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8077F8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6ED5B0C;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F13AFC, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6ED5B0C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6ED5C20;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED5C20()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6ED5B0C;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13AFC, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6ED5EF0(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA51E0();
  return MEMORY[0x1F4188298](sub_1D6ED5FBC, 0, 0);
}

uint64_t sub_1D6ED5FBC()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA9970();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6E7FB54(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807800);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ED6490;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13B28, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ED6490()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ED65A4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED65A4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED6490;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13B28, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED68B0(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA2A30();
  return MEMORY[0x1F4188298](sub_1D6ED697C, 0, 0);
}

uint64_t sub_1D6ED697C()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA9970();
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D6FA9760();
  sub_1D6FA05A0();
  uint64_t v1 = sub_1D6FA1050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6911E68(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807808);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ED6ECC;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13B54, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ED6ECC()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ED6FE0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED6FE0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED6ECC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13B54, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED72EC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA31E0();
  return MEMORY[0x1F4188298](sub_1D6ED73B8, 0, 0);
}

uint64_t sub_1D6ED73B8()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA9BA0();
  MEMORY[0x1D945CFA0]();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA62A8);
  sub_1D6FA0020();
  uint64_t v1 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D68B9484(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807810);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ED78C8;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13B80, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ED78C8()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ED79DC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED79DC()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED78C8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13B80, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED7CE8(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA3D70();
  return MEMORY[0x1F4188298](sub_1D6ED7DB4, 0, 0);
}

uint64_t sub_1D6ED7DB4()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore22CatalogWorkoutMetadataV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807818);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6ED8230;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F13BAC, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6ED8230()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6ED8344;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED8344()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED8230;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13BAC, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED8650(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA43F0();
  return MEMORY[0x1F4188298](sub_1D6ED871C, 0, 0);
}

uint64_t sub_1D6ED871C()
{
  uint64_t v32 = v0;
  MEMORY[0x1D945CFA0]();
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D678ACA4();
  sub_1D6FAA8A0();
  sub_1D6FA9970();
  sub_1D6FA9970();
  sub_1D6FA9970();
  sub_1D6FA0020();
  uint64_t v1 = sub_1D6FA1040();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6BCB6AC(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807820);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6ED8C94;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13BD8, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6ED8C94()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6ED8DA8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED8DA8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6ED8C94;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13BD8, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6ED90B4(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD8B0);
  return MEMORY[0x1F4188298](sub_1D6ED9184, 0, 0);
}

uint64_t sub_1D6ED9184()
{
  uint64_t v30 = v0;
  sub_1D6C2D1D0();
  sub_1D69BD448();
  uint64_t v1 = sub_1D6FA1330();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v26 = v0[7];
    uint64_t v27 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v29 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807828);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v29);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v27, v26);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[15] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[16] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v28 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[17] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6ED95F4;
    return v28((uint64_t)v28, (uint64_t)sub_1D6F13C04, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6ED95F4()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6ED99E0;
  }
  else {
    uint64_t v2 = sub_1D6ED9708;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6ED9708()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[15] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[16] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[17] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6ED95F4;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13C04, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6ED99E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6ED9A6C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA1670();
  return MEMORY[0x1F4188298](sub_1D6ED9B38, 0, 0);
}

uint64_t sub_1D6ED9B38()
{
  uint64_t v34 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0170);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D6FAE050;
  *(void *)(v1 + 32) = sub_1D6FA9980();
  *(void *)(v1 + 40) = v2;
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D6FA9760();
  sub_1D6FA9760();
  uint64_t v3 = sub_1D6FA1050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1D678B9C4(v3);
  v0[12] = v4;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1D6FA8C40();
  os_log_type_t v6 = sub_1D6FAA180();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = v0[11];
    uint64_t v8 = v0[9];
    uint64_t v30 = v0[8];
    uint64_t v31 = v0[10];
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v33 = v10;
    *(_DWORD *)uint64_t v9 = 134218242;
    v0[3] = *(void *)(v4 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    v0[4] = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807830);
    uint64_t v11 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v11, v12, &v33);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v5, v6, "Inserting %ld samples for type %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v10, -1, -1);
    MEMORY[0x1D9468AD0](v9, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v31, v30);
  }
  else
  {
    uint64_t v15 = v0[9];
    uint64_t v14 = v0[10];
    uint64_t v16 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  uint64_t v17 = v0[6];
  uint64_t v18 = *(void *)(v4 + 16);
  v0[13] = v18;
  if (!v17)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v19 = v0[7];
  uint64_t v20 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v17 < 1 || !v18)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v17;
  if (v17 >= v18) {
    uint64_t v17 = v18;
  }
  uint64_t v21 = v0[12];
  if (*(void *)(v21 + 16) < (unint64_t)v17)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v22 = v21
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v23 = (2 * v17) | 1;
  uint64_t v24 = (void *)swift_allocObject();
  v0[16] = v24;
  void v24[2] = v21;
  v24[3] = v22;
  v24[4] = 0;
  v24[5] = v23;
  uint64_t v25 = *(void *)(v19 + v20);
  v0[17] = v25;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v25)
  {
    uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v26 = (void *)swift_task_alloc();
    v0[18] = v26;
    *uint64_t v26 = v0;
    v26[1] = sub_1D6EDA0B0;
    return v32((uint64_t)v32, (uint64_t)sub_1D6F13C30, (uint64_t)v24);
  }
  uint64_t v28 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v28 - 8) + 104))(v29, *MEMORY[0x1E4F9CDE0], v28);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v27();
}

uint64_t sub_1D6EDA0B0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EDA1C4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDA1C4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EDA0B0;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13C30, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EDA4D0(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA1FA0();
  return MEMORY[0x1F4188298](sub_1D6EDA59C, 0, 0);
}

uint64_t sub_1D6EDA59C()
{
  uint64_t v32 = v0;
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D6FA9760();
  sub_1D68ADA88();
  sub_1D68ADADC();
  sub_1D6FA1330();
  sub_1D6FA9970();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA800A30);
  uint64_t v1 = sub_1D6FA1060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D68AD5C8(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807838);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EDAB00;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13C5C, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EDAB00()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EDAC14;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDAC14()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EDAB00;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13C5C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EDAF20(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA3A00();
  return MEMORY[0x1F4188298](sub_1D6EDAFEC, 0, 0);
}

uint64_t sub_1D6EDAFEC()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA05A0();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6B1F0B8(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807840);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EDB4C8;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13C88, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EDB4C8()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EDB5DC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDB5DC()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EDB4C8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13C88, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EDB8E8(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA17C0();
  return MEMORY[0x1F4188298](sub_1D6EDB9B4, 0, 0);
}

uint64_t sub_1D6EDB9B4()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore13ConfigurationV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807848);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EDBE30;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F13CB4, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EDBE30()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EDBF44;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDBF44()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EDBE30;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13CB4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EDC250(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA0D10();
  return MEMORY[0x1F4188298](sub_1D6EDC31C, 0, 0);
}

uint64_t sub_1D6EDC31C()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore11ContributorV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807850);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EDC798;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F13CE0, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EDC798()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EDC8AC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDC8AC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EDC798;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13CE0, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EDCBB8(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EDCC78, 0, 0);
}

uint64_t sub_1D6EDCC78()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D68BE004();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for ContributorIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807858);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EDD0C8;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F13D0C, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EDD0C8()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EDD1DC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDD1DC()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EDD0C8;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13D0C, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EDD4AC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for DirtySyncZone();
  return MEMORY[0x1F4188298](sub_1D6EDD578, 0, 0);
}

uint64_t sub_1D6EDD578()
{
  uint64_t v33 = v0;
  uint64_t v1 = sub_1D6FA6A00();
  sub_1D6CFCCCC(v1);
  swift_bridgeObjectRelease();
  sub_1D6FA6A10();
  sub_1D6FA9C00();
  swift_release();
  sub_1D6FA0480();
  sub_1D6FA05A0();
  sub_1D6FA9C00();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1D6B961D8(v2);
  v0[12] = v3;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = v0[9];
    uint64_t v29 = v0[8];
    uint64_t v30 = v0[10];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v9;
    *(_DWORD *)uint64_t v8 = 134218242;
    v0[3] = *(void *)(v3 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[4] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807860);
    uint64_t v10 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v10, v11, &v32);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v4, v5, "Inserting %ld samples for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v9, -1, -1);
    MEMORY[0x1D9468AD0](v8, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v30, v29);
  }
  else
  {
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = *(void *)(v3 + 16);
  v0[13] = v17;
  if (!v16)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = v0[7];
  uint64_t v19 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v16 < 1 || !v17)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v16;
  if (v16 >= v17) {
    uint64_t v16 = v17;
  }
  uint64_t v20 = v0[12];
  if (*(void *)(v20 + 16) < (unint64_t)v16)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v21 = v20
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v22 = (2 * v16) | 1;
  uint64_t v23 = (void *)swift_allocObject();
  v0[16] = v23;
  void v23[2] = v20;
  void v23[3] = v21;
  v23[4] = 0;
  v23[5] = v22;
  uint64_t v24 = *(void *)(v18 + v19);
  v0[17] = v24;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v24)
  {
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v25 = (void *)swift_task_alloc();
    v0[18] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1D6EDDA9C;
    return v31((uint64_t)v31, (uint64_t)sub_1D6F13D38, (uint64_t)v23);
  }
  uint64_t v27 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, *MEMORY[0x1E4F9CDE0], v27);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v26();
}

uint64_t sub_1D6EDDA9C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EDDBB0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDDBB0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EDDA9C;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13D38, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EDDEBC(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA2040();
  return MEMORY[0x1F4188298](sub_1D6EDDF88, 0, 0);
}

uint64_t sub_1D6EDDF88()
{
  uint64_t v31 = v0;
  uint64_t v1 = static EngagementBadge.representativeSamples()();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807868);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EDE404;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F13D64, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EDE404()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EDE518;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDE518()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EDE404;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13D64, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EDE824(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA6AB0();
  return MEMORY[0x1F4188298](sub_1D6EDE8F0, 0, 0);
}

uint64_t sub_1D6EDE8F0()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA9970();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6DA88E0(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807870);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EDEDC4;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13D90, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EDEDC4()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EDEED8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDEED8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EDEDC4;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13D90, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EDF1E4(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EDF2A4, 0, 0);
}

uint64_t sub_1D6EDF2A4()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D6A38E6C();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for EquipmentIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807878);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EDF6F4;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F13DBC, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EDF6F4()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EDF808;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EDF808()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EDF6F4;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13DBC, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EDFAD8(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA2A90();
  return MEMORY[0x1F4188298](sub_1D6EDFBA4, 0, 0);
}

uint64_t sub_1D6EDFBA4()
{
  uint64_t v32 = v0;
  sub_1D678ACA4();
  sub_1D6FAA8A0();
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D6FA9760();
  uint64_t v1 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6CEBA90(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807880);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EE00DC;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13DE8, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EE00DC()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE01F0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE01F0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE00DC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13DE8, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE04FC(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EE05BC, 0, 0);
}

uint64_t sub_1D6EE05BC()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D681DEC0();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for HealthKitActivityType;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807888);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EE0A0C;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F13E14, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EE0A0C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EE0B20;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE0B20()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EE0A0C;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13E14, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EE0DF0(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA4480();
  return MEMORY[0x1F4188298](sub_1D6EE0EBC, 0, 0);
}

uint64_t sub_1D6EE0EBC()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA0480();
  sub_1D6FAA460();
  sub_1D6FA2250();
  sub_1D6FA9BF0();
  sub_1D6FA05A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA89B8);
  uint64_t v1 = sub_1D6FA1050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6EA448C(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807890);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EE1414;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13E40, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EE1414()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE1528;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE1528()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE1414;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13E40, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE1834(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA61F0();
  return MEMORY[0x1F4188298](sub_1D6EE1900, 0, 0);
}

uint64_t sub_1D6EE1900()
{
  uint64_t v33 = v0;
  sub_1D6FA9970();
  sub_1D6FA9C00();
  swift_bridgeObjectRelease();
  sub_1D6FA9970();
  sub_1D6FA4480();
  uint64_t v1 = (void (*)(uint64_t))MEMORY[0x1E4F9DF10];
  sub_1D6F14654(&qword_1EBDA8C80, MEMORY[0x1E4F9DF10]);
  sub_1D6F14654(&qword_1EBDA8C78, v1);
  sub_1D6FA9E90();
  sub_1D6FA2250();
  sub_1D6FA9BF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA7CA0);
  uint64_t v2 = sub_1D6FA1060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1D6F14978(v2);
  v0[12] = v3;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = v0[9];
    uint64_t v29 = v0[8];
    uint64_t v30 = v0[10];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v9;
    *(_DWORD *)uint64_t v8 = 134218242;
    v0[3] = *(void *)(v3 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[4] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807898);
    uint64_t v10 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v10, v11, &v32);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v4, v5, "Inserting %ld samples for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v9, -1, -1);
    MEMORY[0x1D9468AD0](v8, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v30, v29);
  }
  else
  {
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = *(void *)(v3 + 16);
  v0[13] = v17;
  if (!v16)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = v0[7];
  uint64_t v19 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v16 < 1 || !v17)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v16;
  if (v16 >= v17) {
    uint64_t v16 = v17;
  }
  uint64_t v20 = v0[12];
  if (*(void *)(v20 + 16) < (unint64_t)v16)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v21 = v20
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v22 = (2 * v16) | 1;
  uint64_t v23 = (void *)swift_allocObject();
  v0[16] = v23;
  void v23[2] = v20;
  void v23[3] = v21;
  v23[4] = 0;
  v23[5] = v22;
  uint64_t v24 = *(void *)(v18 + v19);
  v0[17] = v24;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v24)
  {
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v25 = (void *)swift_task_alloc();
    v0[18] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1D6EE1EB8;
    return v31((uint64_t)v31, (uint64_t)sub_1D6F13E6C, (uint64_t)v23);
  }
  uint64_t v27 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, *MEMORY[0x1E4F9CDE0], v27);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v26();
}

uint64_t sub_1D6EE1EB8()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE1FCC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE1FCC()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE1EB8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13E6C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE22D8(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA4BF0();
  return MEMORY[0x1F4188298](sub_1D6EE23A4, 0, 0);
}

uint64_t sub_1D6EE23A4()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA9970();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6C2D238(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078A0);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EE2878;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13E98, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EE2878()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE298C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE298C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE2878;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13E98, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE2C98(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA5980();
  return MEMORY[0x1F4188298](sub_1D6EE2D64, 0, 0);
}

uint64_t sub_1D6EE2D64()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore29HealthKitStandaloneWorkoutJobV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078A8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EE31E0;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F13EC4, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EE31E0()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EE32F4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE32F4()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE31E0;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13EC4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE3600(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA25E0();
  return MEMORY[0x1F4188298](sub_1D6EE36CC, 0, 0);
}

uint64_t sub_1D6EE36CC()
{
  uint64_t v32 = v0;
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D6FA9970();
  sub_1D6FA9CF0();
  sub_1D6FA4BF0();
  sub_1D6F14654(&qword_1EA7FF838, MEMORY[0x1E4F9E2F8]);
  sub_1D6FAA460();
  sub_1D6FA0480();
  sub_1D678ACA4();
  sub_1D6FAA8A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBD9FB40);
  sub_1D6FA05A0();
  uint64_t v1 = sub_1D6FA1040();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D67A398C(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078B0);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EE3CA0;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13EF0, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EE3CA0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE3DB4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE3DB4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE3CA0;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13EF0, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE40C0(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for KeyCertificate();
  return MEMORY[0x1F4188298](sub_1D6EE418C, 0, 0);
}

uint64_t sub_1D6EE418C()
{
  uint64_t v32 = v0;
  sub_1D6FA0140();
  sub_1D6FA0310();
  sub_1D6FA02E0();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6B1DB60(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078B8);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EE4668;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13F1C, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EE4668()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE477C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE477C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE4668;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13F1C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE4A88(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA2FA0();
  return MEMORY[0x1F4188298](sub_1D6EE4B54, 0, 0);
}

uint64_t sub_1D6EE4B54()
{
  uint64_t v37 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDB0170);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D6FAE050;
  *(void *)(v1 + 32) = sub_1D6FA9980();
  *(void *)(v1 + 40) = v2;
  sub_1D6FA9CF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA802648);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D6FAE050;
  sub_1D69E3768();
  sub_1D69BED70();
  uint64_t v4 = sub_1D6FA1330();
  uint64_t v5 = sub_1D6C817E8(v4);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 32) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA802650);
  uint64_t v6 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_1D69E2C20(v6);
  v0[12] = v7;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_1D6FA8C40();
  os_log_type_t v9 = sub_1D6FAA180();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = v0[11];
    uint64_t v11 = v0[9];
    uint64_t v33 = v0[8];
    uint64_t v34 = v0[10];
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v36 = v13;
    *(_DWORD *)uint64_t v12 = 134218242;
    v0[3] = *(void *)(v7 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    v0[4] = v10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078C0);
    uint64_t v14 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v14, v15, &v36);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v8, v9, "Inserting %ld samples for type %s", (uint8_t *)v12, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v13, -1, -1);
    MEMORY[0x1D9468AD0](v12, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v34, v33);
  }
  else
  {
    uint64_t v18 = v0[9];
    uint64_t v17 = v0[10];
    uint64_t v19 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
  }
  uint64_t v20 = v0[6];
  uint64_t v21 = *(void *)(v7 + 16);
  v0[13] = v21;
  if (!v20)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v22 = v0[7];
  uint64_t v23 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v20 < 1 || !v21)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v30 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v20;
  if (v20 >= v21) {
    uint64_t v20 = v21;
  }
  uint64_t v24 = v0[12];
  if (*(void *)(v24 + 16) < (unint64_t)v20)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v25 = v24
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v26 = (2 * v20) | 1;
  uint64_t v27 = (void *)swift_allocObject();
  v0[16] = v27;
  void v27[2] = v24;
  v27[3] = v25;
  void v27[4] = 0;
  v27[5] = v26;
  uint64_t v28 = *(void *)(v22 + v23);
  v0[17] = v28;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v28)
  {
    uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v29 = (void *)swift_task_alloc();
    v0[18] = v29;
    *uint64_t v29 = v0;
    v29[1] = sub_1D6EE50D4;
    return v35((uint64_t)v35, (uint64_t)sub_1D6F13F48, (uint64_t)v27);
  }
  uint64_t v31 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v31 - 8) + 104))(v32, *MEMORY[0x1E4F9CDE0], v31);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v30();
}

uint64_t sub_1D6EE50D4()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE51E8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE51E8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE50D4;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13F48, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE54F4(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA0D80();
  return MEMORY[0x1F4188298](sub_1D6EE55C0, 0, 0);
}

uint64_t sub_1D6EE55C0()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D6FA9760();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8019C0);
  sub_1D6FA64A0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D6FAE050;
  sub_1D6FA6490();
  uint64_t v1 = sub_1D6FA1060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6CEA088(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078C8);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EE5B80;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F13F74, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EE5B80()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE5C94;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE5C94()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE5B80;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13F74, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE5FA0(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA48A0();
  return MEMORY[0x1F4188298](sub_1D6EE606C, 0, 0);
}

uint64_t sub_1D6EE606C()
{
  uint64_t v40 = v0;
  sub_1D6EB2DB8();
  sub_1D67D6BC0();
  sub_1D6FA1330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8044B0);
  uint64_t v1 = sub_1D6FA6150();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6FAEB70;
  unint64_t v6 = v5 + v4;
  uint64_t v7 = *(void (**)(void))(v2 + 104);
  ((void (*)(unint64_t, void, uint64_t))v7)(v6, *MEMORY[0x1E4F9EB70], v1);
  unint64_t v8 = (void *)(v6 + v3);
  *unint64_t v8 = 0x6E776F6E6B6E75;
  v8[1] = 0xE700000000000000;
  v7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA806240);
  uint64_t v9 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1D6EB25FC(v9);
  v0[12] = v10;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1D6FA8C40();
  os_log_type_t v12 = sub_1D6FAA180();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = v0[11];
    uint64_t v14 = v0[9];
    uint64_t v36 = v0[8];
    uint64_t v37 = v0[10];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v39 = v16;
    *(_DWORD *)uint64_t v15 = 134218242;
    v0[3] = *(void *)(v10 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v0[4] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078D8);
    uint64_t v17 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v17, v18, &v39);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v11, v12, "Inserting %ld samples for type %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v16, -1, -1);
    MEMORY[0x1D9468AD0](v15, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v37, v36);
  }
  else
  {
    uint64_t v21 = v0[9];
    uint64_t v20 = v0[10];
    uint64_t v22 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  uint64_t v23 = v0[6];
  uint64_t v24 = *(void *)(v10 + 16);
  v0[13] = v24;
  if (!v23)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v25 = v0[7];
  uint64_t v26 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v23 < 1 || !v24)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v33 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v23;
  if (v23 >= v24) {
    uint64_t v23 = v24;
  }
  uint64_t v27 = v0[12];
  if (*(void *)(v27 + 16) < (unint64_t)v23)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v28 = v27
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v29 = (2 * v23) | 1;
  uint64_t v30 = (void *)swift_allocObject();
  v0[16] = v30;
  long long v30[2] = v27;
  v30[3] = v28;
  v30[4] = 0;
  v30[5] = v29;
  uint64_t v31 = *(void *)(v25 + v26);
  v0[17] = v31;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v31)
  {
    uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v32 = (void *)swift_task_alloc();
    v0[18] = v32;
    void *v32 = v0;
    v32[1] = sub_1D6EE664C;
    return v38((uint64_t)v38, (uint64_t)sub_1D6F13FCC, (uint64_t)v30);
  }
  uint64_t v34 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v34 - 8) + 104))(v35, *MEMORY[0x1E4F9CDE0], v34);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v33 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v33();
}

uint64_t sub_1D6EE664C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE6760;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE6760()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    unint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *unint64_t v18 = v0;
    v18[1] = sub_1D6EE664C;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F13FCC, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE6A6C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EE6B2C, 0, 0);
}

uint64_t sub_1D6EE6B2C()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D68AE108();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for ModalityIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078E0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EE6F7C;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F13FF8, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EE6F7C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EE7090;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE7090()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EE6F7C;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F13FF8, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EE7360(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA09D0();
  return MEMORY[0x1F4188298](sub_1D6EE742C, 0, 0);
}

uint64_t sub_1D6EE742C()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA9970();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6DC46A4(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078E8);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EE7900;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F14024, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EE7900()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE7A14;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE7A14()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE7900;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14024, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE7D20(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EE7DE0, 0, 0);
}

uint64_t sub_1D6EE7DE0()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D6D94BEC();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for MusicGenreIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078F0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EE8230;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F14050, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EE8230()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EE8344;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE8344()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EE8230;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F14050, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EE8614(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA0A80();
  return MEMORY[0x1F4188298](sub_1D6EE86E0, 0, 0);
}

uint64_t sub_1D6EE86E0()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore10MusicTrackV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8078F8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EE8B5C;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F1407C, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EE8B5C()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6ED99E0;
  }
  else {
    uint64_t v2 = sub_1D6EE8C70;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE8C70()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE8B5C;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F1407C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EE8F7C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EE903C, 0, 0);
}

uint64_t sub_1D6EE903C()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D6A3782C();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for OnboardingModalityIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807900);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EE948C;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F140A8, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EE948C()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EE95A0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE95A0()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EE948C;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F140A8, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EE9870(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA3F10();
  return MEMORY[0x1F4188298](sub_1D6EE993C, 0, 0);
}

uint64_t sub_1D6EE993C()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA9E90();
  sub_1D6FA05A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA64D0);
  uint64_t v1 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6A6AAD0(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807908);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EE9E54;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F140D4, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EE9E54()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EE9F68;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EE9F68()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EE9E54;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F140D4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EEA274(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA5E80();
  return MEMORY[0x1F4188298](sub_1D6EEA340, 0, 0);
}

uint64_t sub_1D6EEA340()
{
  uint64_t v32 = v0;
  sub_1D6D8E490();
  sub_1D696CC54();
  sub_1D6FA1330();
  sub_1D6D8E4E4();
  sub_1D6D8E538();
  sub_1D6FA1330();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA8060C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF830);
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6D8E058(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807910);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EEA870;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F14100, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EEA870()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EEA984;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EEA984()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EEA870;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14100, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EEAC90(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA69C0();
  return MEMORY[0x1F4188298](sub_1D6EEAD5C, 0, 0);
}

uint64_t sub_1D6EEAD5C()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore8PlaylistV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807918);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EEB1D8;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F1412C, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EEB1D8()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EEB2EC;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EEB2EC()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EEB1D8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F1412C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EEB5F8(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA12A0();
  return MEMORY[0x1F4188298](sub_1D6EEB6C4, 0, 0);
}

uint64_t sub_1D6EEB6C4()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6801874();
  sub_1D6FAA8A0();
  sub_1D678ACA4();
  sub_1D6FAA8A0();
  sub_1D68018C8();
  sub_1D680191C();
  sub_1D6FA1330();
  sub_1D678ACF8();
  sub_1D6FA9760();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA803D00);
  uint64_t v1 = sub_1D6FA1050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D684F80C(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807920);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EEBC6C;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F14158, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EEBC6C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EEBD80;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EEBD80()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EEBC6C;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14158, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EEC08C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA3FD0();
  return MEMORY[0x1F4188298](sub_1D6EEC158, 0, 0);
}

uint64_t sub_1D6EEC158()
{
  uint64_t v32 = v0;
  sub_1D68C0500();
  sub_1D67D69F8();
  sub_1D6FA1330();
  sub_1D68C0554();
  sub_1D68C05A8();
  sub_1D6FA1330();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA806140);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA800B80);
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D68C00E8(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807928);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EEC688;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F14184, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EEC688()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EEC79C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EEC79C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EEC688;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14184, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EECAA8(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA2D00();
  return MEMORY[0x1F4188298](sub_1D6EECB74, 0, 0);
}

uint64_t sub_1D6EECB74()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore17ProgramCompletionV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807930);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EECFF0;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F141B0, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EECFF0()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EED104;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EED104()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EECFF0;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F141B0, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EED410(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA4D10();
  return MEMORY[0x1F4188298](sub_1D6EED4DC, 0, 0);
}

uint64_t sub_1D6EED4DC()
{
  uint64_t v40 = v0;
  sub_1D6C3BE34();
  sub_1D67D6928();
  sub_1D6FA1330();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8044B0);
  uint64_t v1 = sub_1D6FA6150();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 72);
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1D6FAEB70;
  unint64_t v6 = v5 + v4;
  uint64_t v7 = *(void (**)(void))(v2 + 104);
  ((void (*)(unint64_t, void, uint64_t))v7)(v6, *MEMORY[0x1E4F9EB70], v1);
  unint64_t v8 = (void *)(v6 + v3);
  *unint64_t v8 = 0x6E776F6E6B6E75;
  v8[1] = 0xE700000000000000;
  v7();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8044C8);
  uint64_t v9 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1D6C3B678(v9);
  v0[12] = v10;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1D6FA8C40();
  os_log_type_t v12 = sub_1D6FAA180();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = v0[11];
    uint64_t v14 = v0[9];
    uint64_t v36 = v0[8];
    uint64_t v37 = v0[10];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    uint64_t v39 = v16;
    *(_DWORD *)uint64_t v15 = 134218242;
    v0[3] = *(void *)(v10 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 12) = 2080;
    v0[4] = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807938);
    uint64_t v17 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v17, v18, &v39);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v11, v12, "Inserting %ld samples for type %s", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v16, -1, -1);
    MEMORY[0x1D9468AD0](v15, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v37, v36);
  }
  else
  {
    uint64_t v21 = v0[9];
    uint64_t v20 = v0[10];
    uint64_t v22 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  uint64_t v23 = v0[6];
  uint64_t v24 = *(void *)(v10 + 16);
  v0[13] = v24;
  if (!v23)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v25 = v0[7];
  uint64_t v26 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v23 < 1 || !v24)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v33 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v23;
  if (v23 >= v24) {
    uint64_t v23 = v24;
  }
  uint64_t v27 = v0[12];
  if (*(void *)(v27 + 16) < (unint64_t)v23)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v28 = v27
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v29 = (2 * v23) | 1;
  uint64_t v30 = (void *)swift_allocObject();
  v0[16] = v30;
  long long v30[2] = v27;
  v30[3] = v28;
  v30[4] = 0;
  v30[5] = v29;
  uint64_t v31 = *(void *)(v25 + v26);
  v0[17] = v31;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v31)
  {
    uint64_t v38 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v32 = (void *)swift_task_alloc();
    v0[18] = v32;
    void *v32 = v0;
    v32[1] = sub_1D6EEDABC;
    return v38((uint64_t)v38, (uint64_t)sub_1D6F141DC, (uint64_t)v30);
  }
  uint64_t v34 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v34 - 8) + 104))(v35, *MEMORY[0x1E4F9CDE0], v34);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v33 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v33();
}

uint64_t sub_1D6EEDABC()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EEDBD0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EEDBD0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    unint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *unint64_t v18 = v0;
    v18[1] = sub_1D6EEDABC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F141DC, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EEDEDC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA27B0();
  return MEMORY[0x1F4188298](sub_1D6EEDFA8, 0, 0);
}

uint64_t sub_1D6EEDFA8()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA68E0();
  sub_1D6FA05A0();
  uint64_t v1 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6DA4420(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807940);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EEE49C;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F14208, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EEE49C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EEE5B0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EEE5B0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EEE49C;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14208, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EEE8BC(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA1D40();
  return MEMORY[0x1F4188298](sub_1D6EEE988, 0, 0);
}

uint64_t sub_1D6EEE988()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore14RecommendationV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807948);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EEEE04;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F14234, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EEEE04()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EEEF18;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EEEF18()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EEEE04;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14234, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EEF224(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA5C40();
  return MEMORY[0x1F4188298](sub_1D6EEF2F0, 0, 0);
}

uint64_t sub_1D6EEF2F0()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA0480();
  sub_1D6FA05A0();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6DC271C(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807950);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EEF7CC;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F14260, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EEF7CC()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EEF8E0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EEF8E0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EEF7CC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14260, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EEFBEC(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA13F0();
  return MEMORY[0x1F4188298](sub_1D6EEFCB8, 0, 0);
}

uint64_t sub_1D6EEFCB8()
{
  uint64_t v32 = v0;
  sub_1D6750160();
  sub_1D6FAA8A0();
  uint64_t v1 = sub_1D6FA1040();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D697151C(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807958);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EF01C0;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F1428C, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EF01C0()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EF02D4;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF02D4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF01C0;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F1428C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF05E0(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA18D0();
  return MEMORY[0x1F4188298](sub_1D6EF06AC, 0, 0);
}

uint64_t sub_1D6EF06AC()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore13SessionScoresV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807960);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EF0B28;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F142B8, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EF0B28()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EF0C3C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF0C3C()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF0B28;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F142B8, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF0F48(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA0AE0();
  return MEMORY[0x1F4188298](sub_1D6EF1014, 0, 0);
}

uint64_t sub_1D6EF1014()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA9970();
  sub_1D6FAA460();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBDA6170);
  uint64_t v1 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6A37024(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807968);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EF1518;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F142E4, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EF1518()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EF162C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF162C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF1518;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F142E4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF1938(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EF19F8, 0, 0);
}

uint64_t sub_1D6EF19F8()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D6A10E64();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for SkillLevelIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807970);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EF1E48;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F14310, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EF1E48()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EF1F5C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF1F5C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EF1E48;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F14310, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EF222C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA2DE0();
  return MEMORY[0x1F4188298](sub_1D6EF22F8, 0, 0);
}

uint64_t sub_1D6EF22F8()
{
  uint64_t v32 = v0;
  sub_1D681D630();
  sub_1D681D684();
  sub_1D6FA1330();
  sub_1D6FA0140();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA806860);
  sub_1D6FA02E0();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D681CF68(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807978);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EF2800;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F1433C, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EF2800()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EF2914;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF2914()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF2800;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F1433C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF2C20(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for SyncChangeTag();
  return MEMORY[0x1F4188298](sub_1D6EF2CEC, 0, 0);
}

uint64_t sub_1D6EF2CEC()
{
  uint64_t v33 = v0;
  sub_1D6FA9970();
  sub_1D6FA9C00();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1D6FA6A00();
  sub_1D6CFCCCC(v1);
  swift_bridgeObjectRelease();
  sub_1D6FA9970();
  sub_1D6FA9C00();
  swift_bridgeObjectRelease();
  sub_1D6FA6A10();
  uint64_t v2 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1D6ACD830(v2);
  v0[12] = v3;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = v0[9];
    uint64_t v29 = v0[8];
    uint64_t v30 = v0[10];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v9;
    *(_DWORD *)uint64_t v8 = 134218242;
    v0[3] = *(void *)(v3 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[4] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807980);
    uint64_t v10 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v10, v11, &v32);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v4, v5, "Inserting %ld samples for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v9, -1, -1);
    MEMORY[0x1D9468AD0](v8, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v30, v29);
  }
  else
  {
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = *(void *)(v3 + 16);
  v0[13] = v17;
  if (!v16)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = v0[7];
  uint64_t v19 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v16 < 1 || !v17)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v16;
  if (v16 >= v17) {
    uint64_t v16 = v17;
  }
  uint64_t v20 = v0[12];
  if (*(void *)(v20 + 16) < (unint64_t)v16)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v21 = v20
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v22 = (2 * v16) | 1;
  uint64_t v23 = (void *)swift_allocObject();
  v0[16] = v23;
  void v23[2] = v20;
  void v23[3] = v21;
  v23[4] = 0;
  v23[5] = v22;
  uint64_t v24 = *(void *)(v18 + v19);
  v0[17] = v24;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v24)
  {
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v25 = (void *)swift_task_alloc();
    v0[18] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1D6EF3218;
    return v31((uint64_t)v31, (uint64_t)sub_1D6F14368, (uint64_t)v23);
  }
  uint64_t v27 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, *MEMORY[0x1E4F9CDE0], v27);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v26();
}

uint64_t sub_1D6EF3218()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EF332C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF332C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF3218;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14368, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF3638(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = type metadata accessor for SyncZoneChangeWindow();
  return MEMORY[0x1F4188298](sub_1D6EF3704, 0, 0);
}

uint64_t sub_1D6EF3704()
{
  uint64_t v33 = v0;
  uint64_t v1 = sub_1D6FA6A00();
  sub_1D6CFCCCC(v1);
  swift_bridgeObjectRelease();
  sub_1D6FA0310();
  sub_1D6FA6A10();
  uint64_t v2 = sub_1D6FA1080();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1D678AD4C(v2);
  v0[12] = v3;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = v0[9];
    uint64_t v29 = v0[8];
    uint64_t v30 = v0[10];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v9;
    *(_DWORD *)uint64_t v8 = 134218242;
    v0[3] = *(void *)(v3 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[4] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807988);
    uint64_t v10 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v10, v11, &v32);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v4, v5, "Inserting %ld samples for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v9, -1, -1);
    MEMORY[0x1D9468AD0](v8, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v30, v29);
  }
  else
  {
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = *(void *)(v3 + 16);
  v0[13] = v17;
  if (!v16)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = v0[7];
  uint64_t v19 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v16 < 1 || !v17)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v16;
  if (v16 >= v17) {
    uint64_t v16 = v17;
  }
  uint64_t v20 = v0[12];
  if (*(void *)(v20 + 16) < (unint64_t)v16)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v21 = v20
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v22 = (2 * v16) | 1;
  uint64_t v23 = (void *)swift_allocObject();
  v0[16] = v23;
  void v23[2] = v20;
  void v23[3] = v21;
  v23[4] = 0;
  v23[5] = v22;
  uint64_t v24 = *(void *)(v18 + v19);
  v0[17] = v24;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v24)
  {
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v25 = (void *)swift_task_alloc();
    v0[18] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1D6EF3BEC;
    return v31((uint64_t)v31, (uint64_t)sub_1D6F14394, (uint64_t)v23);
  }
  uint64_t v27 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, *MEMORY[0x1E4F9CDE0], v27);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v26();
}

uint64_t sub_1D6EF3BEC()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EF3D00;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF3D00()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF3BEC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14394, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF400C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = type metadata accessor for SyncEncryptionKey();
  return MEMORY[0x1F4188298](sub_1D6EF40D8, 0, 0);
}

uint64_t sub_1D6EF40D8()
{
  uint64_t v31 = v0;
  uint64_t v1 = sub_1D6C51930();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807990);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EF4554;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F143C0, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EF4554()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EF4668;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF4668()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF4554;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F143C0, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF4974(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA1A50();
  return MEMORY[0x1F4188298](sub_1D6EF4A40, 0, 0);
}

uint64_t sub_1D6EF4A40()
{
  uint64_t v33 = v0;
  sub_1D6FA9970();
  sub_1D6FA9C00();
  swift_bridgeObjectRelease();
  sub_1D678ACF8();
  sub_1D6FA9760();
  uint64_t v1 = sub_1D6FA6A00();
  sub_1D6CFCCCC(v1);
  swift_bridgeObjectRelease();
  sub_1D6FA6A10();
  uint64_t v2 = sub_1D6FA1050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = sub_1D6CFC18C(v2);
  v0[12] = v3;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = v0[9];
    uint64_t v29 = v0[8];
    uint64_t v30 = v0[10];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v9;
    *(_DWORD *)uint64_t v8 = 134218242;
    v0[3] = *(void *)(v3 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[4] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807998);
    uint64_t v10 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v10, v11, &v32);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v4, v5, "Inserting %ld samples for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v9, -1, -1);
    MEMORY[0x1D9468AD0](v8, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v30, v29);
  }
  else
  {
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = *(void *)(v3 + 16);
  v0[13] = v17;
  if (!v16)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = v0[7];
  uint64_t v19 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v16 < 1 || !v17)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v16;
  if (v16 >= v17) {
    uint64_t v16 = v17;
  }
  uint64_t v20 = v0[12];
  if (*(void *)(v20 + 16) < (unint64_t)v16)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v21 = v20
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v22 = (2 * v16) | 1;
  uint64_t v23 = (void *)swift_allocObject();
  v0[16] = v23;
  void v23[2] = v20;
  void v23[3] = v21;
  v23[4] = 0;
  v23[5] = v22;
  uint64_t v24 = *(void *)(v18 + v19);
  v0[17] = v24;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v24)
  {
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v25 = (void *)swift_task_alloc();
    v0[18] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1D6EF4F94;
    return v31((uint64_t)v31, (uint64_t)sub_1D6F143EC, (uint64_t)v23);
  }
  uint64_t v27 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, *MEMORY[0x1E4F9CDE0], v27);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v26();
}

uint64_t sub_1D6EF4F94()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EF50A8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF50A8()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF4F94;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F143EC, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF53B4(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EF5474, 0, 0);
}

uint64_t sub_1D6EF5474()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D6CED044();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for ThemeIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079A0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EF58C4;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F14418, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EF58C4()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EF59D8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF59D8()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EF58C4;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F14418, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EF5CA8(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA1480();
  return MEMORY[0x1F4188298](sub_1D6EF5D74, 0, 0);
}

uint64_t sub_1D6EF5D74()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6A7D1C8();
  sub_1D6A7D21C();
  sub_1D6FA1330();
  sub_1D678ACF8();
  sub_1D6FA9760();
  sub_1D6FA9760();
  sub_1D6FA9760();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8019B0);
  uint64_t v1 = sub_1D6FA1050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6A7CCB0(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079A8);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EF62F8;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F14444, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EF62F8()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EF640C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF640C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF62F8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14444, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF6718(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EF67D8, 0, 0);
}

uint64_t sub_1D6EF67D8()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D68E8BBC();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for TrainerIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079B0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EF6C28;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F14470, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EF6C28()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EF6D3C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF6D3C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EF6C28;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F14470, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EF700C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA22F0();
  return MEMORY[0x1F4188298](sub_1D6EF70D8, 0, 0);
}

uint64_t sub_1D6EF70D8()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore15TrainerMetadataV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079B8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EF7554;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F1449C, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EF7554()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EF7668;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF7668()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF7554;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F1449C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF7974(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA2840();
  return MEMORY[0x1F4188298](sub_1D6EF7A40, 0, 0);
}

uint64_t sub_1D6EF7A40()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore16TrainerReferenceV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079C0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EF7EBC;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F144C8, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EF7EBC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EF7FD0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF7FD0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF7EBC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F144C8, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF82DC(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA2390();
  return MEMORY[0x1F4188298](sub_1D6EF83A8, 0, 0);
}

uint64_t sub_1D6EF83A8()
{
  uint64_t v31 = v0;
  uint64_t QueueItemV0A8ServicesE21representativeSamplesSayACGyFZ_0 = _s11SeymourCore15UpNextQueueItemV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = QueueItemV0A8ServicesE21representativeSamplesSayACGyFZ_0;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(QueueItemV0A8ServicesE21representativeSamplesSayACGyFZ_0 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079C8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(QueueItemV0A8ServicesE21representativeSamplesSayACGyFZ_0 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EF8824;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F144F4, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EF8824()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EF8938;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF8938()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EF8824;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F144F4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EF8C44(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EF8D04, 0, 0);
}

uint64_t sub_1D6EF8D04()
{
  uint64_t v29 = v0;
  sub_1D6E7AEC8();
  uint64_t v1 = sub_1D6FA37A0();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v25 = v0[7];
    uint64_t v26 = v0[9];
    uint64_t v5 = swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v28 = v6;
    *(_DWORD *)uint64_t v5 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    v0[3] = &type metadata for UserAccountNotification;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079D0);
    uint64_t v7 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v7, v8, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v6, -1, -1);
    MEMORY[0x1D9468AD0](v5, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v25);
  }
  else
  {
    uint64_t v11 = v0[8];
    uint64_t v10 = v0[9];
    uint64_t v12 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v12);
  }
  uint64_t v13 = v0[5];
  uint64_t v14 = *(void *)(v1 + 16);
  v0[11] = v14;
  if (!v13)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v13 < 1 || !v14)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v22 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v13;
  if (v13 >= v14) {
    uint64_t v13 = v14;
  }
  uint64_t v17 = v0[10];
  if (*(void *)(v17 + 16) < (unint64_t)v13)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v18 = (2 * v13) | 1;
  uint64_t v19 = (void *)swift_allocObject();
  v0[14] = v19;
  void v19[2] = v17;
  void v19[3] = v17 + 32;
  v19[4] = 0;
  v19[5] = v18;
  uint64_t v20 = *(void *)(v15 + v16);
  v0[15] = v20;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v20)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v21 = (void *)swift_task_alloc();
    v0[16] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1D6EF9164;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F14520, (uint64_t)v19);
  }
  uint64_t v23 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v23 - 8) + 104))(v24, *MEMORY[0x1E4F9CDE0], v23);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v22();
}

uint64_t sub_1D6EF9164()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EF9278;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF9278()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EF9164;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F14520, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EF9548(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EF9608, 0, 0);
}

uint64_t sub_1D6EF9608()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D6A24B10();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for WorkoutIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079D8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EF9A58;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F1454C, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EF9A58()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EF9B6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EF9B6C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EF9A58;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F1454C, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EF9E3C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA0FE0();
  return MEMORY[0x1F4188298](sub_1D6EF9F08, 0, 0);
}

uint64_t sub_1D6EF9F08()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore11WorkoutPlanV0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079E0);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EFA384;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F14578, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EFA384()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EFA498;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFA498()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EFA384;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F14578, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EFA7A4(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = sub_1D6FA4AA0();
  return MEMORY[0x1F4188298](sub_1D6EFA870, 0, 0);
}

uint64_t sub_1D6EFA870()
{
  uint64_t v31 = v0;
  uint64_t v1 = _s11SeymourCore24WorkoutPlanItemReferenceO0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[11] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[10];
    uint64_t v5 = v0[8];
    uint64_t v27 = v0[7];
    uint64_t v28 = v0[9];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v30 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079E8);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v30);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v28, v27);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[12] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[13] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v24 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[14] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[11];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = v18
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v20 = (2 * v14) | 1;
  uint64_t v21 = (void *)swift_allocObject();
  v0[15] = v21;
  v21[2] = v18;
  v21[3] = v19;
  v21[4] = 0;
  v21[5] = v20;
  uint64_t v22 = *(void *)(v16 + v17);
  v0[16] = v22;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v22)
  {
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v23 = (void *)swift_task_alloc();
    v0[17] = v23;
    *uint64_t v23 = v0;
    v23[1] = sub_1D6EFACEC;
    return v29((uint64_t)v29, (uint64_t)sub_1D6F145A4, (uint64_t)v21);
  }
  uint64_t v25 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v25 - 8) + 104))(v26, *MEMORY[0x1E4F9CDE0], v25);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v24();
}

uint64_t sub_1D6EFACEC()
{
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F147E4;
  }
  else {
    uint64_t v2 = sub_1D6EFAE00;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFAE00()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[12];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[14];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[14] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[12]) {
    uint64_t v7 = v0[12];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[11];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[13];
  uint64_t v13 = v0[6];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[10] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[15] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[16] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[17] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EFACEC;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F145A4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EFB10C(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA5A70();
  return MEMORY[0x1F4188298](sub_1D6EFB1D8, 0, 0);
}

uint64_t sub_1D6EFB1D8()
{
  uint64_t v32 = v0;
  sub_1D6FA9970();
  sub_1D6FA9E90();
  sub_1D6FA9E90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA64D0);
  uint64_t v1 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6CB55C8(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079F0);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EFB6F8;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F145D0, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EFB6F8()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EFB80C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFB80C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EFB6F8;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F145D0, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EFBB18(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA4AF0();
  return MEMORY[0x1F4188298](sub_1D6EFBBE4, 0, 0);
}

uint64_t sub_1D6EFBBE4()
{
  uint64_t v35 = v0;
  sub_1D6750160();
  sub_1D6FAA8A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8019C8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1D6FAE050;
  uint64_t v2 = _s11SeymourCore33WorkoutPlanScheduleFilterPropertyO0A8ServicesE21representativeSamplesSayACGyFZ_0();
  uint64_t v3 = sub_1D6C815A4(v2);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = v3;
  sub_1D6FA9970();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8019D0);
  uint64_t v4 = sub_1D6FA1070();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1D694C338(v4);
  v0[12] = v5;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  BOOL v6 = sub_1D6FA8C40();
  os_log_type_t v7 = sub_1D6FAA180();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = v0[11];
    uint64_t v9 = v0[9];
    uint64_t v31 = v0[8];
    uint64_t v32 = v0[10];
    uint64_t v10 = swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v34 = v11;
    *(_DWORD *)uint64_t v10 = 134218242;
    v0[3] = *(void *)(v5 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    v0[4] = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA8079F8);
    uint64_t v12 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v12, v13, &v34);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v6, v7, "Inserting %ld samples for type %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v11, -1, -1);
    MEMORY[0x1D9468AD0](v10, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v32, v31);
  }
  else
  {
    uint64_t v16 = v0[9];
    uint64_t v15 = v0[10];
    uint64_t v17 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
  }
  uint64_t v18 = v0[6];
  uint64_t v19 = *(void *)(v5 + 16);
  v0[13] = v19;
  if (!v18)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v20 = v0[7];
  uint64_t v21 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v18 < 1 || !v19)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v28 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v18;
  if (v18 >= v19) {
    uint64_t v18 = v19;
  }
  uint64_t v22 = v0[12];
  if (*(void *)(v22 + 16) < (unint64_t)v18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v23 = v22
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v24 = (2 * v18) | 1;
  uint64_t v25 = (void *)swift_allocObject();
  v0[16] = v25;
  v25[2] = v22;
  v25[3] = v23;
  v25[4] = 0;
  v25[5] = v24;
  uint64_t v26 = *(void *)(v20 + v21);
  v0[17] = v26;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v26)
  {
    uint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v27 = (void *)swift_task_alloc();
    v0[18] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_1D6EFC134;
    return v33((uint64_t)v33, (uint64_t)sub_1D6F145FC, (uint64_t)v25);
  }
  uint64_t v29 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(v30, *MEMORY[0x1E4F9CDE0], v29);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v28();
}

uint64_t sub_1D6EFC134()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EFC248;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFC248()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EFC134;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F145FC, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EFC554(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EFC614, 0, 0);
}

uint64_t sub_1D6EFC614()
{
  uint64_t v29 = v0;
  uint64_t v1 = _s11SeymourCore33WorkoutPlanScheduleFilterPropertyO0A8ServicesE21representativeSamplesSayACGyFZ_0();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = MEMORY[0x1E4F9EAE8];
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807A00);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EFCA64;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F14628, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EFCA64()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6EFCE48;
  }
  else {
    uint64_t v2 = sub_1D6EFCB78;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFCB78()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EFCA64;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F14628, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EFCE48()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6EFCED0(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA3590();
  return MEMORY[0x1F4188298](sub_1D6EFCF9C, 0, 0);
}

uint64_t sub_1D6EFCF9C()
{
  uint64_t v33 = v0;
  sub_1D6FA05D0();
  sub_1D6FA9970();
  sub_1D6FA5A70();
  uint64_t v1 = (void (*)(uint64_t))MEMORY[0x1E4F9E830];
  sub_1D6F14654(&qword_1EA7FF470, MEMORY[0x1E4F9E830]);
  sub_1D6F14654(&qword_1EA7FF478, v1);
  sub_1D6FA9E90();
  sub_1D6750160();
  sub_1D6FAA8A0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF480);
  sub_1D6FA3510();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D6FAE050;
  sub_1D6FA3500();
  sub_1D6FA0620();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF488);
  uint64_t v2 = sub_1D6FA1050();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_1D6762368(v2);
  v0[12] = v3;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1D6FA8C40();
  os_log_type_t v5 = sub_1D6FAA180();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = v0[11];
    uint64_t v7 = v0[9];
    uint64_t v29 = v0[8];
    uint64_t v30 = v0[10];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v32 = v9;
    *(_DWORD *)uint64_t v8 = 134218242;
    v0[3] = *(void *)(v3 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2080;
    v0[4] = v6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807A08);
    uint64_t v10 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v10, v11, &v32);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v4, v5, "Inserting %ld samples for type %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v9, -1, -1);
    MEMORY[0x1D9468AD0](v8, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v30, v29);
  }
  else
  {
    uint64_t v14 = v0[9];
    uint64_t v13 = v0[10];
    uint64_t v15 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = *(void *)(v3 + 16);
  v0[13] = v17;
  if (!v16)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = v0[7];
  uint64_t v19 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v16 < 1 || !v17)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v16;
  if (v16 >= v17) {
    uint64_t v16 = v17;
  }
  uint64_t v20 = v0[12];
  if (*(void *)(v20 + 16) < (unint64_t)v16)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v21 = v20
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v22 = (2 * v16) | 1;
  uint64_t v23 = (void *)swift_allocObject();
  v0[16] = v23;
  void v23[2] = v20;
  void v23[3] = v21;
  v23[4] = 0;
  v23[5] = v22;
  uint64_t v24 = *(void *)(v18 + v19);
  v0[17] = v24;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v24)
  {
    uint64_t v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v25 = (void *)swift_task_alloc();
    v0[18] = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1D6EFD5F4;
    return v31((uint64_t)v31, (uint64_t)sub_1D6F1469C, (uint64_t)v23);
  }
  uint64_t v27 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, *MEMORY[0x1E4F9CDE0], v27);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v26 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v26();
}

uint64_t sub_1D6EFD5F4()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EFD708;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFD708()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EFD5F4;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F1469C, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EFDA14(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA3830();
  return MEMORY[0x1F4188298](sub_1D6EFDAE0, 0, 0);
}

uint64_t sub_1D6EFDAE0()
{
  uint64_t v32 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF608);
  sub_1D6FA2E50();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1D6FAE050;
  sub_1D6FA2E00();
  sub_1D6750160();
  sub_1D6FAA8A0();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6786198(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807A10);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EFE068;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F146C8, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EFE068()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EFE17C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFE17C()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EFE068;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F146C8, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EFE488(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[8] = v3;
  v2[9] = *(void *)(v3 - 8);
  v2[10] = swift_task_alloc();
  v2[11] = sub_1D6FA4B30();
  return MEMORY[0x1F4188298](sub_1D6EFE554, 0, 0);
}

uint64_t sub_1D6EFE554()
{
  uint64_t v32 = v0;
  sub_1D6FA05D0();
  sub_1D6FA0480();
  sub_1D6FA0620();
  sub_1D6FA05A0();
  uint64_t v1 = sub_1D6FA1080();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6940038(v1);
  v0[12] = v2;
  swift_bridgeObjectRelease();
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_1D6FA8C40();
  os_log_type_t v4 = sub_1D6FAA180();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = v0[11];
    uint64_t v6 = v0[9];
    uint64_t v28 = v0[8];
    uint64_t v29 = v0[10];
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v31 = v8;
    *(_DWORD *)uint64_t v7 = 134218242;
    v0[3] = *(void *)(v2 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    v0[4] = v5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807A18);
    uint64_t v9 = sub_1D6FA9940();
    v0[5] = sub_1D683E928(v9, v10, &v31);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v3, v4, "Inserting %ld samples for type %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v8, -1, -1);
    MEMORY[0x1D9468AD0](v7, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v29, v28);
  }
  else
  {
    uint64_t v13 = v0[9];
    uint64_t v12 = v0[10];
    uint64_t v14 = v0[8];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  }
  uint64_t v15 = v0[6];
  uint64_t v16 = *(void *)(v2 + 16);
  v0[13] = v16;
  if (!v15)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = v0[7];
  uint64_t v18 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[14] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v15 < 1 || !v16)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[15] = v15;
  if (v15 >= v16) {
    uint64_t v15 = v16;
  }
  uint64_t v19 = v0[12];
  if (*(void *)(v19 + 16) < (unint64_t)v15)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v20 = v19
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v21 = (2 * v15) | 1;
  uint64_t v22 = (void *)swift_allocObject();
  v0[16] = v22;
  v22[2] = v19;
  void v22[3] = v20;
  v22[4] = 0;
  v22[5] = v21;
  uint64_t v23 = *(void *)(v17 + v18);
  v0[17] = v23;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v23)
  {
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v24 = (void *)swift_task_alloc();
    v0[18] = v24;
    *uint64_t v24 = v0;
    v24[1] = sub_1D6EFEA34;
    return v30((uint64_t)v30, (uint64_t)sub_1D6F146F4, (uint64_t)v22);
  }
  uint64_t v26 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v26 - 8) + 104))(v27, *MEMORY[0x1E4F9CDE0], v26);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v25 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v25();
}

uint64_t sub_1D6EFEA34()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F1496C;
  }
  else {
    uint64_t v2 = sub_1D6EFEB48;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFEB48()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[6];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[15] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[13]) {
    uint64_t v7 = v0[13];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[12];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[14];
  uint64_t v13 = v0[7];
  uint64_t v14 = v9
      + ((*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[11] - 8) + 80));
  uint64_t v15 = (2 * v7) | 1;
  uint64_t v16 = (void *)swift_allocObject();
  v0[16] = v16;
  v16[2] = v9;
  v16[3] = v14;
  v16[4] = v4;
  v16[5] = v15;
  uint64_t v17 = *(void *)(v13 + v12);
  v0[17] = v17;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v17)
  {
    uint64_t v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[18] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1D6EFEA34;
    return v22((uint64_t)v22, (uint64_t)sub_1D6F146F4, (uint64_t)v16);
  }
  uint64_t v20 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CDE0], v20);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v19 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v19();
}

uint64_t sub_1D6EFEE54(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EFEF14, 0, 0);
}

uint64_t sub_1D6EFEF14()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D68D5174();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for WorkoutPlanMusicIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807A20);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EFF364;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F14720, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EFF364()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EFF478;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFF478()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EFF364;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F14720, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6EFF748(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  uint64_t v3 = sub_1D6FA8C50();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6EFF808, 0, 0);
}

uint64_t sub_1D6EFF808()
{
  uint64_t v29 = v0;
  uint64_t v1 = sub_1D6B98D6C();
  v0[10] = v1;
  sub_1D6FA8120();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1D6FA8C40();
  os_log_type_t v3 = sub_1D6FAA180();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = v0[8];
    uint64_t v26 = v0[9];
    uint64_t v5 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    uint64_t v28 = v7;
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[2] = *(void *)(v1 + 16);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    v0[3] = &type metadata for WorkoutPlanTrainerIdentifier;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807A28);
    uint64_t v8 = sub_1D6FA9940();
    v0[4] = sub_1D683E928(v8, v9, &v28);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D6748000, v2, v3, "Inserting %ld samples for type %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v7, -1, -1);
    MEMORY[0x1D9468AD0](v6, -1, -1);

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v26, v5);
  }
  else
  {
    uint64_t v12 = v0[8];
    uint64_t v11 = v0[9];
    uint64_t v13 = v0[7];
    swift_bridgeObjectRelease();

    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
  }
  uint64_t v14 = v0[5];
  uint64_t v15 = *(void *)(v1 + 16);
  v0[11] = v15;
  if (!v14)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v16 = v0[6];
  uint64_t v17 = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  v0[12] = OBJC_IVAR____TtC15SeymourServices16PersistenceStore_state;
  if (v14 < 1 || !v15)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    goto LABEL_16;
  }
  v0[13] = v14;
  if (v14 >= v15) {
    uint64_t v14 = v15;
  }
  uint64_t v18 = v0[10];
  if (*(void *)(v18 + 16) < (unint64_t)v14)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  uint64_t v19 = (2 * v14) | 1;
  uint64_t v20 = (void *)swift_allocObject();
  v0[14] = v20;
  v20[2] = v18;
  v20[3] = v18 + 32;
  v20[4] = 0;
  v20[5] = v19;
  uint64_t v21 = *(void *)(v16 + v17);
  v0[15] = v21;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v21)
  {
    uint64_t v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v22 = (void *)swift_task_alloc();
    v0[16] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1D6EFFC58;
    return v27((uint64_t)v27, (uint64_t)sub_1D6F1474C, (uint64_t)v20);
  }
  uint64_t v24 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v24 - 8) + 104))(v25, *MEMORY[0x1E4F9CDE0], v24);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(void))v0[1];
LABEL_16:
  return v23();
}

uint64_t sub_1D6EFFC58()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F14970;
  }
  else {
    uint64_t v2 = sub_1D6EFFD6C;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6EFFD6C()
{
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v1 >= v2)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v18 = (uint64_t (*)(void))v0[1];
    goto LABEL_19;
  }
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[5];
  BOOL v6 = __OFADD__(v4, v5);
  uint64_t v7 = v4 + v5;
  unint64_t v8 = (v7 >> 63) ^ 0x8000000000000000;
  if (!v6) {
    unint64_t v8 = v7;
  }
  v0[13] = v8;
  if (v6)
  {
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v7 >= v0[11]) {
    uint64_t v7 = v0[11];
  }
  if (v7 < v4) {
    goto LABEL_23;
  }
  if (v4 < 0)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  uint64_t v9 = v0[10];
  uint64_t v10 = *(void *)(v9 + 16);
  if (v10 < (unint64_t)v4 || v10 < v7) {
    goto LABEL_25;
  }
  uint64_t v12 = v0[12];
  uint64_t v13 = v0[6];
  uint64_t v14 = (2 * v7) | 1;
  uint64_t v15 = (void *)swift_allocObject();
  v0[14] = v15;
  v15[2] = v9;
  v15[3] = v9 + 32;
  v15[4] = v4;
  v15[5] = v14;
  uint64_t v16 = *(void *)(v13 + v12);
  v0[15] = v16;
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (v16)
  {
    uint64_t v21 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1EA800D30 + dword_1EA800D30);
    swift_retain();
    uint64_t v17 = (void *)swift_task_alloc();
    v0[16] = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_1D6EFFC58;
    return v21((uint64_t)v21, (uint64_t)sub_1D6F1474C, (uint64_t)v15);
  }
  uint64_t v19 = sub_1D6FA2760();
  sub_1D6F14654((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
  swift_allocError();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v19 - 8) + 104))(v20, *MEMORY[0x1E4F9CDE0], v19);
  swift_willThrow();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v18 = (uint64_t (*)(void))v0[1];
LABEL_19:
  return v18();
}

uint64_t sub_1D6F0003C(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 48) = a3;
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return MEMORY[0x1F4188298](sub_1D6F00060, 0, 0);
}

uint64_t sub_1D6F00060()
{
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 40) + **(int **)(v3 + 40));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 32) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D68420C0;
  uint64_t v5 = *(unsigned __int8 *)(v0 + 48);
  return v7(v5, v2, v3);
}

uint64_t sub_1D6F0016C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F260);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v50 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1D6FA02E0();
  uint64_t v6 = *(void *)(v51 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v51);
  unint64_t v49 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v44 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v44 - v12;
  uint64_t v14 = sub_1D6FA8C50();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA80E0();
  sub_1D6FA8C30();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  id v18 = objc_msgSend(self, sel_processInfo);
  id v19 = objc_msgSend(v18, sel_environment);

  uint64_t v20 = sub_1D6FA97A0();
  if (*(void *)(v20 + 16))
  {
    sub_1D6C64510(0x4F54414C554D4953, 0xEE00544F4F525F52);
    if (v21) {
      swift_bridgeObjectRetain();
    }
  }
  uint64_t v22 = (uint64_t)v49;
  swift_bridgeObjectRelease();
  sub_1D6FA0200();
  swift_bridgeObjectRelease();
  int64_t v47 = v13;
  uint64_t v23 = sub_1D6FA0250();
  MEMORY[0x1F4188790](v23);
  uint64_t v48 = v11;
  v44[-2] = v11;
  uint64_t v24 = sub_1D6D248FC((void (*)(void *))sub_1D6F020EC, (uint64_t)&v44[-4], a1);
  uint64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    uint64_t v45 = v6;
    uint64_t v46 = a2;
    uint64_t v26 = v6 + 16;
    uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    unint64_t v28 = v24 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v29 = *(void *)(v26 + 56);
    uint64_t v30 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v26 + 40);
    uint64_t v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 32);
    uint64_t v56 = v27;
    uint64_t v52 = (void (**)(uint64_t, char *, uint64_t))(v26 + 16);
    uint64_t v57 = v26;
    uint64_t v53 = (void (**)(uint64_t, uint64_t))(v26 - 8);
    uint64_t v54 = v29;
    v44[1] = v24;
    swift_bridgeObjectRetain();
    uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
    v44[0] = (unint64_t)v30 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v32 = v50;
    uint64_t v33 = v51;
    do
    {
      v56(v32, v28, v33);
      uint64_t v35 = *v30;
      (*v30)(v32, 0, 1, v33);
      if ((*v55)(v32, 1, v33) == 1)
      {
        uint64_t v6 = v45;
        uint64_t v41 = v48;
        goto LABEL_17;
      }
      (*v52)(v22, v32, v33);
      sub_1D6F007B8(v22, &v58);
      (*v53)(v22, v33);
      uint64_t v36 = v59;
      if (v59)
      {
        uint64_t v37 = v58;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_1D6AE2E34(0, v31[2] + 1, 1, v31);
        }
        unint64_t v39 = v31[2];
        unint64_t v38 = v31[3];
        if (v39 >= v38 >> 1) {
          uint64_t v31 = sub_1D6AE2E34((void *)(v38 > 1), v39 + 1, 1, v31);
        }
        void v31[2] = v39 + 1;
        uint64_t v34 = &v31[2 * v39];
        v34[4] = v37;
        v34[5] = v36;
        uint64_t v32 = v50;
        uint64_t v33 = v51;
        uint64_t v22 = (uint64_t)v49;
      }
      v28 += v54;
      --v25;
    }
    while (v25);
    uint64_t v6 = v45;
    uint64_t v41 = v48;
    v35(v32, 1, 1, v33);
  }
  else
  {
    uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    swift_bridgeObjectRetain();
    uint64_t v31 = (void *)MEMORY[0x1E4FBC860];
    uint64_t v33 = v51;
    uint64_t v41 = v48;
    v40(v50, 1, 1, v51);
  }
LABEL_17:
  swift_bridgeObjectRelease_n();
  *(void *)(swift_allocObject() + 16) = v31;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA62A8);
  sub_1D6FA65A0();
  int64_t v42 = *(void (**)(char *, uint64_t))(v6 + 8);
  v42(v47, v33);
  v42(v41, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D6F007B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1D6FA02E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1D6FA8C50();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  int64_t v42 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v35 - v11;
  sub_1D6FA80E0();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v38 = a1;
  v13(v7, a1, v4);
  uint64_t v14 = sub_1D6FA8C40();
  os_log_type_t v15 = sub_1D6FAA180();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v40 = v8;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    uint64_t v46 = v36;
    *(_DWORD *)uint64_t v17 = 141558274;
    uint64_t v43 = 1752392040;
    uint64_t v37 = a2;
    sub_1D6FAA4A0();
    *(_WORD *)(v17 + 12) = 2080;
    v35[1] = v17 + 14;
    uint64_t v18 = sub_1D6FA01E0();
    uint64_t v43 = sub_1D683E928(v18, v19, &v46);
    a2 = v37;
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1D6748000, v14, v15, "Reading %{mask.hash}s", (uint8_t *)v17, 0x16u);
    uint64_t v20 = v36;
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v20, -1, -1);
    MEMORY[0x1D9468AD0](v17, -1, -1);

    char v21 = *(void (**)(char *, uint64_t))(v41 + 8);
    v21(v12, v40);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    char v21 = *(void (**)(char *, uint64_t))(v41 + 8);
    v21(v12, v8);
  }
  uint64_t v22 = v42;
  uint64_t v23 = v39;
  uint64_t result = sub_1D6FA98A0();
  if (v23)
  {
    sub_1D6FA80E0();
    id v26 = v23;
    id v27 = v23;
    unint64_t v28 = sub_1D6FA8C40();
    os_log_type_t v29 = sub_1D6FAA160();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v46 = v31;
      uint64_t v37 = a2;
      *(_DWORD *)uint64_t v30 = 136446210;
      swift_getErrorValue();
      uint64_t v32 = MEMORY[0x1D9467BB0](v44, v45);
      uint64_t v43 = sub_1D683E928(v32, v33, &v46);
      a2 = v37;
      sub_1D6FAA4A0();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1D6748000, v28, v29, "Error reading file: %{public}s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D9468AD0](v31, -1, -1);
      MEMORY[0x1D9468AD0](v30, -1, -1);

      uint64_t v34 = v42;
    }
    else
    {

      uint64_t v34 = v22;
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v21)(v34, v40);
    *a2 = 0;
    a2[1] = 0;
  }
  else
  {
    *a2 = result;
    a2[1] = v25;
  }
  return result;
}

uint64_t sub_1D6F00C8C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1D6FA8C50();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6FA80C0();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_1D6FA8C40();
  os_log_type_t v11 = sub_1D6FAA180();
  if (os_log_type_enabled(v10, v11))
  {
    v17[1] = a3;
    uint64_t v12 = swift_slowAlloc();
    v17[0] = v6;
    uint64_t v13 = a1;
    uint64_t v14 = (uint8_t *)v12;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v18 = v15;
    *(_DWORD *)uint64_t v14 = 136315138;
    swift_bridgeObjectRetain();
    v17[2] = sub_1D683E928(v13, a2, &v18);
    sub_1D6FAA4A0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D6748000, v10, v11, "[Script] %s", v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D9468AD0](v15, -1, -1);
    MEMORY[0x1D9468AD0](v14, -1, -1);

    (*(void (**)(char *, void))(v7 + 8))(v9, v17[0]);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  return sub_1D6FA65D0();
}

uint64_t sub_1D6F00EB4()
{
  v1[2] = v0;
  uint64_t v2 = sub_1D6FA8C50();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6F00F74, 0, 0);
}

uint64_t sub_1D6F00F74()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v4 = (void *)v0[2];
  uint64_t v3 = v0[3];
  sub_1D6FA80E0();
  sub_1D6FA8C30();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = v4[20];
  uint64_t v6 = v4[21];
  __swift_project_boxed_opaque_existential_1(v4 + 17, v5);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[6] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1D6F010E0;
  return v9(v5, v6);
}

uint64_t sub_1D6F010E0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1D6F011F0(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 112) = a1;
  uint64_t v3 = sub_1D6FA8870();
  *(void *)(v2 + 24) = v3;
  *(void *)(v2 + 32) = *(void *)(v3 - 8);
  *(void *)(v2 + 40) = swift_task_alloc();
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t v4 = sub_1D6FA8850();
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = *(void *)(v4 - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6F01320, 0, 0);
}

uint64_t sub_1D6F01320()
{
  char v1 = *(unsigned char *)(v0 + 112);
  sub_1D6F14654(&qword_1EA802EF8, MEMORY[0x1E4F9F1C0]);
  sub_1D6FA8630();
  uint64_t v2 = *(void **)(v0 + 16);
  if (v1)
  {
    uint64_t v3 = v2[10];
    uint64_t v4 = v2[11];
    __swift_project_boxed_opaque_existential_1(v2 + 7, v3);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 40) + **(int **)(v4 + 40));
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1D6F01750;
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v3 = v2[15];
    uint64_t v4 = v2[16];
    __swift_project_boxed_opaque_existential_1(v2 + 12, v3);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 40) + **(int **)(v4 + 40));
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_1D6F01554;
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 48);
  }
  return v10(v7, v6, v3, v4);
}

uint64_t sub_1D6F01554()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F0194C;
  }
  else {
    uint64_t v2 = sub_1D6F01668;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F01668()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[3];
  uint64_t v7 = sub_1D6FA8860();
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v10(v7, v9);
}

uint64_t sub_1D6F01750()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1D6F019E8;
  }
  else {
    uint64_t v2 = sub_1D6F01864;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F01864()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = v0[3];
  uint64_t v7 = sub_1D6FA8860();
  uint64_t v9 = v8;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v10(v7, v9);
}

uint64_t sub_1D6F0194C()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D6F019E8()
{
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D6F01A84()
{
  return sub_1D6FA8840();
}

uint64_t sub_1D6F01ABC()
{
  v1[5] = v0;
  uint64_t v2 = sub_1D6FA8C50();
  void v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6F01B7C, 0, 0);
}

uint64_t sub_1D6F01B7C()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  sub_1D6FA80E0();
  sub_1D6FA8C30();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v5(v1, v4);
  __swift_project_boxed_opaque_existential_1((void *)(v3 + 176), *(void *)(v3 + 200));
  sub_1D6FA8060();
  sub_1D6FA8C30();
  v5(v1, v4);
  swift_beginAccess();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1D6C55BE0(v6);
  v0[9] = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1D6F01D14;
  return sub_1D6755150(v7);
}

uint64_t sub_1D6F01D14()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return MEMORY[0x1F4188298](sub_1D6F01E5C, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1D6F01E5C()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F01EC8(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  *(unsigned char *)(v4 + 24) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = "/Library/Caches/com.apple.xbs/Sources/FitCore/SeymourServices/Admin/System/AdminSystem.swift";
  *(void *)(v5 + 24) = 92;
  *(unsigned char *)(v5 + 32) = 2;
  *(void *)(v5 + 40) = 285;
  *(void *)(v5 + 48) = &unk_1EA8073E8;
  *(void *)(v5 + 56) = v4;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA7BE8);

  return sub_1D6FA6590();
}

uint64_t sub_1D6F01FA8()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 25, 7);
}

uint64_t sub_1D6F01FE0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  char v5 = *(unsigned char *)(v1 + 24);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(unsigned char *)(v6 + 48) = v5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v4;
  *(void *)(v6 + 8) = sub_1D67824A8;
  return MEMORY[0x1F4188298](sub_1D6F00060, 0, 0);
}

uint64_t sub_1D6F020A0()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1D6F020D8(uint64_t a1, uint64_t a2)
{
  return sub_1D698EDF0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned char *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56));
}

uint64_t sub_1D6F020EC()
{
  return sub_1D6FA0250();
}

uint64_t sub_1D6F02120()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1D6F02158()
{
  uint64_t v1 = sub_1D6FA02E0();
  v0[12] = v1;
  v0[13] = *(void *)(v1 - 8);
  v0[14] = swift_task_alloc();
  v0[15] = swift_task_alloc();
  uint64_t v2 = sub_1D6FA7730();
  v0[16] = v2;
  v0[17] = *(void *)(v2 - 8);
  v0[18] = swift_task_alloc();
  uint64_t v3 = sub_1D6FA8C50();
  v0[19] = v3;
  v0[20] = *(void *)(v3 - 8);
  v0[21] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1D6F022DC, 0, 0);
}

uint64_t sub_1D6F022DC()
{
  sub_1D6FA8120();
  uint64_t v1 = sub_1D6FA8C40();
  os_log_type_t v2 = sub_1D6FAA180();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl(&dword_1D6748000, v1, v2, "Creating representative database", v3, 2u);
    MEMORY[0x1D9468AD0](v3, -1, -1);
  }
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[21];
  uint64_t v6 = v0[18];
  uint64_t v7 = v0[19];
  uint64_t v9 = v0[16];
  uint64_t v8 = v0[17];
  uint64_t v10 = v0[14];
  uint64_t v23 = v0[15];
  uint64_t v24 = v0[13];
  uint64_t v25 = v0[12];

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v7);
  sub_1D6753914();
  sub_1D6FAA220();
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v6, *MEMORY[0x1E4F9B9B8], v9);
  uint64_t v11 = sub_1D6FA7720();
  uint64_t v12 = MEMORY[0x1E4F9B9B0];
  v0[5] = v11;
  v0[6] = v12;
  __swift_allocate_boxed_opaque_existential_0(v0 + 2);
  sub_1D6FA7710();
  sub_1D6FA82D0();
  swift_allocObject();
  uint64_t v13 = sub_1D6FA82A0();
  v0[22] = v13;
  uint64_t v14 = type metadata accessor for DataProtectionMonitor();
  uint64_t v15 = swift_allocObject();
  v0[23] = v15;
  *(_DWORD *)(v15 + 40) = -1;
  *(unsigned char *)(v15 + 44) = 4;
  sub_1D6FA6C20();
  swift_allocObject();
  swift_retain();
  *(void *)(v15 + 16) = sub_1D6FA6C10();
  *(void *)(v15 + 24) = v13;
  *(void *)(v15 + 32) = MEMORY[0x1E4F9BCB0];
  swift_retain();
  swift_retain();
  sub_1D6FA0180();
  sub_1D6FA0240();
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v10, v25);
  v0[10] = v14;
  v0[11] = (uint64_t)&off_1F2E47280;
  v0[7] = v15;
  type metadata accessor for PersistenceStore();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)(v0 + 7), v14);
  uint64_t v18 = *(void *)(v14 - 8);
  unint64_t v19 = (uint64_t *)swift_task_alloc();
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v18 + 16))(v19, v17, v14);
  uint64_t v20 = *v19;
  swift_retain();
  v0[24] = sub_1D69AB3EC(v20, v13, 0, v23, MEMORY[0x1E4FBC860], v16);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
  swift_release();
  swift_task_dealloc();
  char v21 = (void *)swift_task_alloc();
  v0[25] = (uint64_t)v21;
  *char v21 = v0;
  v21[1] = sub_1D6F0268C;
  return sub_1D68D90A4();
}

uint64_t sub_1D6F0268C()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F240;
  }
  else {
    os_log_type_t v2 = sub_1D6F027A0;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F027A0()
{
  uint64_t v1 = qword_1F2E41A10;
  v0[27] = qword_1F2E41A10;
  if (v1)
  {
    v0[28] = 0;
    switch(byte_1F2E41A20)
    {
      case 1:
        uint64_t v6 = (void *)swift_task_alloc();
        v0[31] = v6;
        void *v6 = v0;
        v6[1] = sub_1D6F05818;
        uint64_t v7 = v0[24];
        return sub_1D6EC4C60(100, v7);
      case 2:
        uint64_t v8 = (void *)swift_task_alloc();
        v0[33] = v8;
        *uint64_t v8 = v0;
        v8[1] = sub_1D6F0592C;
        uint64_t v9 = v0[24];
        return sub_1D6EC5628(100, v9);
      case 3:
        uint64_t v10 = (void *)swift_task_alloc();
        v0[35] = v10;
        *uint64_t v10 = v0;
        uint64_t v11 = sub_1D6F05A40;
        goto LABEL_172;
      case 4:
        uint64_t v12 = (void *)swift_task_alloc();
        v0[37] = v12;
        void *v12 = v0;
        v12[1] = sub_1D6F05B54;
        uint64_t v13 = v0[24];
        return sub_1D6EC6B90(100, v13);
      case 5:
        uint64_t v14 = (void *)swift_task_alloc();
        v0[39] = v14;
        *uint64_t v14 = v0;
        v14[1] = sub_1D6F05C68;
        uint64_t v15 = v0[24];
        return sub_1D6EC74F8(100, v15);
      case 6:
        uint64_t v16 = (void *)swift_task_alloc();
        v0[41] = v16;
        *uint64_t v16 = v0;
        uint64_t v17 = sub_1D6F05D7C;
        goto LABEL_24;
      case 7:
        uint64_t v16 = (void *)swift_task_alloc();
        v0[43] = v16;
        *uint64_t v16 = v0;
        uint64_t v17 = sub_1D6F05E90;
LABEL_24:
        v16[1] = v17;
        uint64_t v18 = v0[24];
        uint64_t result = sub_1D6EC8074(100, v18);
        break;
      case 8:
        unint64_t v19 = (void *)swift_task_alloc();
        v0[45] = v19;
        *unint64_t v19 = v0;
        v19[1] = sub_1D6F05FA4;
        uint64_t v20 = v0[24];
        uint64_t result = sub_1D6EC89DC(100, v20);
        break;
      case 9:
        char v21 = (void *)swift_task_alloc();
        v0[47] = v21;
        *char v21 = v0;
        v21[1] = sub_1D6F060B8;
        uint64_t v22 = v0[24];
        uint64_t result = sub_1D6EC947C(100, v22);
        break;
      case 10:
        uint64_t v23 = (void *)swift_task_alloc();
        v0[49] = v23;
        *uint64_t v23 = v0;
        v23[1] = sub_1D6F061CC;
        uint64_t v24 = v0[24];
        uint64_t result = sub_1D6EC9E64(100, v24);
        break;
      case 11:
        uint64_t v25 = (void *)swift_task_alloc();
        v0[51] = v25;
        *uint64_t v25 = v0;
        v25[1] = sub_1D6F062E0;
        uint64_t v26 = v0[24];
        uint64_t result = sub_1D6ECA7CC(100, v26);
        break;
      case 12:
        id v27 = (void *)swift_task_alloc();
        v0[53] = v27;
        *id v27 = v0;
        v27[1] = sub_1D6F063F4;
        uint64_t v28 = v0[24];
        uint64_t result = sub_1D6ECB1F4(100, v28);
        break;
      case 13:
        os_log_type_t v29 = (void *)swift_task_alloc();
        v0[55] = v29;
        *os_log_type_t v29 = v0;
        v29[1] = sub_1D6F06508;
        uint64_t v30 = v0[24];
        uint64_t result = sub_1D6ECBC84(100, v30);
        break;
      case 14:
        uint64_t v31 = (void *)swift_task_alloc();
        v0[57] = v31;
        void *v31 = v0;
        v31[1] = sub_1D6F0661C;
        uint64_t v32 = v0[24];
        uint64_t result = sub_1D6ECC67C(100, v32);
        break;
      case 15:
        unint64_t v33 = (void *)swift_task_alloc();
        v0[59] = v33;
        *unint64_t v33 = v0;
        v33[1] = sub_1D6F06730;
        uint64_t v34 = v0[24];
        uint64_t result = sub_1D6ECD03C(100, v34);
        break;
      case 16:
        uint64_t v35 = (void *)swift_task_alloc();
        v0[61] = v35;
        *uint64_t v35 = v0;
        v35[1] = sub_1D6F06844;
        uint64_t v36 = v0[24];
        uint64_t result = sub_1D6ECD930(100, v36);
        break;
      case 17:
        uint64_t v37 = (void *)swift_task_alloc();
        v0[63] = v37;
        void *v37 = v0;
        v37[1] = sub_1D6F06958;
        uint64_t v38 = v0[24];
        uint64_t result = sub_1D6ECE340(100, v38);
        break;
      case 18:
        unint64_t v39 = (void *)swift_task_alloc();
        v0[65] = v39;
        *unint64_t v39 = v0;
        v39[1] = sub_1D6F06A6C;
        uint64_t v40 = v0[24];
        uint64_t result = sub_1D6ECECA8(100, v40);
        break;
      case 19:
        uint64_t v41 = (void *)swift_task_alloc();
        v0[67] = v41;
        *uint64_t v41 = v0;
        v41[1] = sub_1D6F06B80;
        uint64_t v42 = v0[24];
        uint64_t result = sub_1D6ECF5D4(100, v42);
        break;
      case 20:
        uint64_t v43 = (void *)swift_task_alloc();
        v0[71] = v43;
        *uint64_t v43 = v0;
        v43[1] = sub_1D6F06DA8;
        uint64_t v44 = v0[24];
        uint64_t result = sub_1D6ED082C(100, v44);
        break;
      case 21:
        uint64_t v45 = (void *)swift_task_alloc();
        v0[69] = v45;
        *uint64_t v45 = v0;
        v45[1] = sub_1D6F06C94;
        uint64_t v46 = v0[24];
        uint64_t result = sub_1D6ECFF00(100, v46);
        break;
      case 22:
        int64_t v47 = (void *)swift_task_alloc();
        v0[73] = v47;
        *int64_t v47 = v0;
        v47[1] = sub_1D6F06EBC;
        uint64_t v48 = v0[24];
        uint64_t result = sub_1D6ED1208(100, v48);
        break;
      case 23:
        unint64_t v49 = (void *)swift_task_alloc();
        v0[75] = v49;
        *unint64_t v49 = v0;
        v49[1] = sub_1D6F06FD0;
        uint64_t v50 = v0[24];
        uint64_t result = sub_1D6ED1B70(100, v50);
        break;
      case 24:
        uint64_t v51 = (void *)swift_task_alloc();
        v0[77] = v51;
        void *v51 = v0;
        v51[1] = sub_1D6F070E4;
        uint64_t v52 = v0[24];
        uint64_t result = sub_1D6ED24D8(100, v52);
        break;
      case 25:
        uint64_t v53 = (void *)swift_task_alloc();
        v0[79] = v53;
        *uint64_t v53 = v0;
        v53[1] = sub_1D6F071F8;
        uint64_t v54 = v0[24];
        uint64_t result = sub_1D6ED2F10(100, v54);
        break;
      case 26:
        uint64_t v55 = (void *)swift_task_alloc();
        v0[81] = v55;
        *uint64_t v55 = v0;
        v55[1] = sub_1D6F0730C;
        uint64_t v56 = v0[24];
        uint64_t result = sub_1D6ED3878(100, v56);
        break;
      case 27:
        uint64_t v57 = (void *)swift_task_alloc();
        v0[83] = v57;
        *uint64_t v57 = v0;
        v57[1] = sub_1D6F07420;
        uint64_t v58 = v0[24];
        uint64_t result = sub_1D6ED4278(100, v58);
        break;
      case 28:
        uint64_t v59 = (void *)swift_task_alloc();
        v0[85] = v59;
        *uint64_t v59 = v0;
        v59[1] = sub_1D6F07534;
        uint64_t v60 = v0[24];
        uint64_t result = sub_1D6ED4C94(100, v60);
        break;
      case 29:
        uint64_t v61 = (void *)swift_task_alloc();
        v0[87] = v61;
        *uint64_t v61 = v0;
        v61[1] = sub_1D6F07648;
        uint64_t v62 = v0[24];
        uint64_t result = sub_1D6ED55FC(100, v62);
        break;
      case 30:
        unint64_t v63 = (void *)swift_task_alloc();
        v0[89] = v63;
        *unint64_t v63 = v0;
        v63[1] = sub_1D6F0775C;
        uint64_t v64 = v0[24];
        uint64_t result = sub_1D6ED5EF0(100, v64);
        break;
      case 31:
        uint64_t v65 = (void *)swift_task_alloc();
        v0[91] = v65;
        *uint64_t v65 = v0;
        v65[1] = sub_1D6F07870;
        uint64_t v66 = v0[24];
        uint64_t result = sub_1D6ED68B0(100, v66);
        break;
      case 32:
        uint64_t v67 = (void *)swift_task_alloc();
        v0[93] = v67;
        *uint64_t v67 = v0;
        v67[1] = sub_1D6F07984;
        uint64_t v68 = v0[24];
        uint64_t result = sub_1D6ED72EC(100, v68);
        break;
      case 33:
        uint64_t v69 = (void *)swift_task_alloc();
        v0[95] = v69;
        *uint64_t v69 = v0;
        v69[1] = sub_1D6F07A98;
        uint64_t v70 = v0[24];
        uint64_t result = sub_1D6ED7CE8(100, v70);
        break;
      case 34:
        uint64_t v71 = (void *)swift_task_alloc();
        v0[97] = v71;
        *uint64_t v71 = v0;
        v71[1] = sub_1D6F07BAC;
        uint64_t v72 = v0[24];
        uint64_t result = sub_1D6ED8650(100, v72);
        break;
      case 35:
        uint64_t v73 = (void *)swift_task_alloc();
        v0[99] = v73;
        *uint64_t v73 = v0;
        v73[1] = sub_1D6F07CC0;
        uint64_t v74 = v0[24];
        uint64_t result = sub_1D6ED90B4(100, v74);
        break;
      case 36:
        unint64_t v75 = (void *)swift_task_alloc();
        v0[101] = v75;
        *unint64_t v75 = v0;
        v75[1] = sub_1D6F07DD4;
        uint64_t v76 = v0[24];
        uint64_t result = sub_1D6ED9A6C(100, v76);
        break;
      case 37:
        uint64_t v77 = (void *)swift_task_alloc();
        v0[103] = v77;
        *uint64_t v77 = v0;
        v77[1] = sub_1D6F07EE8;
        uint64_t v78 = v0[24];
        uint64_t result = sub_1D6EDA4D0(100, v78);
        break;
      case 38:
        unint64_t v79 = (void *)swift_task_alloc();
        v0[105] = v79;
        *unint64_t v79 = v0;
        v79[1] = sub_1D6F07FFC;
        uint64_t v80 = v0[24];
        uint64_t result = sub_1D6EDAF20(100, v80);
        break;
      case 39:
        uint64_t v81 = (void *)swift_task_alloc();
        v0[107] = v81;
        *uint64_t v81 = v0;
        v81[1] = sub_1D6F08110;
        uint64_t v82 = v0[24];
        uint64_t result = sub_1D6EDB8E8(100, v82);
        break;
      case 40:
        uint64_t v83 = (void *)swift_task_alloc();
        v0[109] = v83;
        *uint64_t v83 = v0;
        v83[1] = sub_1D6F08224;
        uint64_t v84 = v0[24];
        uint64_t result = sub_1D6EDC250(100, v84);
        break;
      case 41:
        uint64_t v85 = (void *)swift_task_alloc();
        v0[111] = v85;
        *uint64_t v85 = v0;
        v85[1] = sub_1D6F08338;
        uint64_t v86 = v0[24];
        uint64_t result = sub_1D6EDCBB8(100, v86);
        break;
      case 42:
        uint64_t v87 = (void *)swift_task_alloc();
        v0[113] = v87;
        void *v87 = v0;
        v87[1] = sub_1D6F0844C;
        uint64_t v88 = v0[24];
        uint64_t result = sub_1D6EDD4AC(100, v88);
        break;
      case 43:
        uint64_t v89 = (void *)swift_task_alloc();
        v0[115] = v89;
        *uint64_t v89 = v0;
        v89[1] = sub_1D6F08560;
        uint64_t v90 = v0[24];
        uint64_t result = sub_1D6EDDEBC(100, v90);
        break;
      case 44:
        uint64_t v91 = (void *)swift_task_alloc();
        v0[117] = v91;
        *uint64_t v91 = v0;
        v91[1] = sub_1D6F08674;
        uint64_t v92 = v0[24];
        uint64_t result = sub_1D6EDE824(100, v92);
        break;
      case 45:
        uint64_t v93 = (void *)swift_task_alloc();
        v0[119] = v93;
        void *v93 = v0;
        v93[1] = sub_1D6F08788;
        uint64_t v94 = v0[24];
        uint64_t result = sub_1D6EDF1E4(100, v94);
        break;
      case 46:
        unint64_t v95 = (void *)swift_task_alloc();
        v0[121] = v95;
        void *v95 = v0;
        v95[1] = sub_1D6F0889C;
        uint64_t v96 = v0[24];
        uint64_t result = sub_1D6EDFAD8(100, v96);
        break;
      case 47:
        uint64_t v97 = (void *)swift_task_alloc();
        v0[123] = v97;
        *uint64_t v97 = v0;
        v97[1] = sub_1D6F089B0;
        uint64_t v98 = v0[24];
        uint64_t result = sub_1D6EE04FC(100, v98);
        break;
      case 48:
        uint64_t v99 = (void *)swift_task_alloc();
        v0[125] = v99;
        *uint64_t v99 = v0;
        v99[1] = sub_1D6F08AC4;
        uint64_t v100 = v0[24];
        uint64_t result = sub_1D6EE0DF0(100, v100);
        break;
      case 49:
        uint64_t v101 = (void *)swift_task_alloc();
        v0[129] = v101;
        void *v101 = v0;
        v101[1] = sub_1D6F0BC58;
        uint64_t v102 = v0[24];
        uint64_t result = sub_1D6EE22D8(100, v102);
        break;
      case 50:
        uint64_t v103 = (void *)swift_task_alloc();
        v0[131] = v103;
        *uint64_t v103 = v0;
        v103[1] = sub_1D6F0BD6C;
        uint64_t v104 = v0[24];
        uint64_t result = sub_1D6EE2C98(100, v104);
        break;
      case 51:
        uint64_t v105 = (void *)swift_task_alloc();
        v0[127] = v105;
        *uint64_t v105 = v0;
        v105[1] = sub_1D6F0BB44;
        uint64_t v106 = v0[24];
        uint64_t result = sub_1D6EE1834(100, v106);
        break;
      case 52:
        uint64_t v107 = (void *)swift_task_alloc();
        v0[133] = v107;
        void *v107 = v0;
        v107[1] = sub_1D6F0BE80;
        uint64_t v108 = v0[24];
        uint64_t result = sub_1D6EE3600(100, v108);
        break;
      case 53:
        uint64_t v109 = (void *)swift_task_alloc();
        v0[135] = v109;
        *uint64_t v109 = v0;
        v109[1] = sub_1D6F0BF94;
        uint64_t v110 = v0[24];
        uint64_t result = sub_1D6EE40C0(100, v110);
        break;
      case 54:
        uint64_t v111 = (void *)swift_task_alloc();
        v0[137] = v111;
        void *v111 = v0;
        v111[1] = sub_1D6F0C0A8;
        uint64_t v112 = v0[24];
        uint64_t result = sub_1D6EE4A88(100, v112);
        break;
      case 55:
        uint64_t v113 = (void *)swift_task_alloc();
        v0[139] = v113;
        *uint64_t v113 = v0;
        v113[1] = sub_1D6F0C1BC;
        uint64_t v114 = v0[24];
        uint64_t result = sub_1D6EE54F4(100, v114);
        break;
      case 56:
        uint64_t v10 = (void *)swift_task_alloc();
        v0[141] = v10;
        *uint64_t v10 = v0;
        uint64_t v11 = sub_1D6F0C2D0;
LABEL_172:
        v10[1] = v11;
        uint64_t v115 = v0[24];
        uint64_t result = sub_1D6EC61A4(100, v115);
        break;
      case 57:
        uint64_t v116 = (void *)swift_task_alloc();
        v0[143] = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_1D6F0C3E4;
        uint64_t v117 = v0[24];
        uint64_t result = sub_1D6EE5FA0(100, v117);
        break;
      case 58:
        uint64_t v118 = (void *)swift_task_alloc();
        v0[145] = v118;
        *uint64_t v118 = v0;
        v118[1] = sub_1D6F0C4F8;
        uint64_t v119 = v0[24];
        uint64_t result = sub_1D6EE6A6C(100, v119);
        break;
      case 59:
        uint64_t v120 = (void *)swift_task_alloc();
        v0[147] = v120;
        *uint64_t v120 = v0;
        v120[1] = sub_1D6F0C60C;
        uint64_t v121 = v0[24];
        uint64_t result = sub_1D6EE7360(100, v121);
        break;
      case 60:
        uint64_t v122 = (void *)swift_task_alloc();
        v0[149] = v122;
        void *v122 = v0;
        v122[1] = sub_1D6F0C720;
        uint64_t v123 = v0[24];
        uint64_t result = sub_1D6EE7D20(100, v123);
        break;
      case 61:
        uint64_t v124 = (void *)swift_task_alloc();
        v0[151] = v124;
        *uint64_t v124 = v0;
        v124[1] = sub_1D6F0C834;
        uint64_t v125 = v0[24];
        uint64_t result = sub_1D6EE8614(100, v125);
        break;
      case 62:
        uint64_t v126 = (void *)swift_task_alloc();
        v0[153] = v126;
        *uint64_t v126 = v0;
        v126[1] = sub_1D6F0C948;
        uint64_t v127 = v0[24];
        uint64_t result = sub_1D6EE8F7C(100, v127);
        break;
      case 63:
        uint64_t v128 = (void *)swift_task_alloc();
        v0[155] = v128;
        void *v128 = v0;
        v128[1] = sub_1D6F0CA5C;
        uint64_t v129 = v0[24];
        uint64_t result = sub_1D6EE9870(100, v129);
        break;
      case 64:
        uint64_t v130 = (void *)swift_task_alloc();
        v0[157] = v130;
        *uint64_t v130 = v0;
        v130[1] = sub_1D6F0CB70;
        uint64_t v131 = v0[24];
        uint64_t result = sub_1D6EEA274(100, v131);
        break;
      case 65:
        uint64_t v132 = (void *)swift_task_alloc();
        v0[159] = v132;
        *uint64_t v132 = v0;
        v132[1] = sub_1D6F0CC84;
        uint64_t v133 = v0[24];
        uint64_t result = sub_1D6EEAC90(100, v133);
        break;
      case 66:
        uint64_t v134 = (void *)swift_task_alloc();
        v0[161] = v134;
        void *v134 = v0;
        v134[1] = sub_1D6F0CD98;
        uint64_t v135 = v0[24];
        uint64_t result = sub_1D6EEB5F8(100, v135);
        break;
      case 67:
        char v136 = (void *)swift_task_alloc();
        v0[163] = v136;
        *char v136 = v0;
        v136[1] = sub_1D6F0CEAC;
        uint64_t v137 = v0[24];
        uint64_t result = sub_1D6EEC08C(100, v137);
        break;
      case 68:
        uint64_t v138 = (void *)swift_task_alloc();
        v0[165] = v138;
        void *v138 = v0;
        v138[1] = sub_1D6F0CFC0;
        uint64_t v139 = v0[24];
        uint64_t result = sub_1D6EECAA8(100, v139);
        break;
      case 69:
        uint64_t v140 = (void *)swift_task_alloc();
        v0[167] = v140;
        *uint64_t v140 = v0;
        v140[1] = sub_1D6F0D0D4;
        uint64_t v141 = v0[24];
        uint64_t result = sub_1D6EED410(100, v141);
        break;
      case 70:
        uint64_t v142 = (void *)swift_task_alloc();
        v0[169] = v142;
        *uint64_t v142 = v0;
        v142[1] = sub_1D6F0D1E8;
        uint64_t v143 = v0[24];
        uint64_t result = sub_1D6EEDEDC(100, v143);
        break;
      case 71:
        uint64_t v144 = (void *)swift_task_alloc();
        v0[171] = v144;
        *uint64_t v144 = v0;
        v144[1] = sub_1D6F0D2FC;
        uint64_t v145 = v0[24];
        uint64_t result = sub_1D6EEE8BC(100, v145);
        break;
      case 72:
        uint64_t v146 = (void *)swift_task_alloc();
        v0[173] = v146;
        *uint64_t v146 = v0;
        v146[1] = sub_1D6F0D410;
        uint64_t v147 = v0[24];
        uint64_t result = sub_1D6EEF224(100, v147);
        break;
      case 73:
        v148 = (void *)swift_task_alloc();
        v0[175] = v148;
        void *v148 = v0;
        v148[1] = sub_1D6F0D524;
        uint64_t v149 = v0[24];
        uint64_t result = sub_1D6EEFBEC(100, v149);
        break;
      case 74:
        v150 = (void *)swift_task_alloc();
        v0[177] = v150;
        void *v150 = v0;
        v150[1] = sub_1D6F0D638;
        uint64_t v151 = v0[24];
        uint64_t result = sub_1D6EF05E0(100, v151);
        break;
      case 75:
        v152 = (void *)swift_task_alloc();
        v0[179] = v152;
        void *v152 = v0;
        v152[1] = sub_1D6F0D74C;
        uint64_t v153 = v0[24];
        uint64_t result = sub_1D6EF0F48(100, v153);
        break;
      case 76:
        uint64_t v154 = (void *)swift_task_alloc();
        v0[181] = v154;
        *uint64_t v154 = v0;
        v154[1] = sub_1D6F0D860;
        uint64_t v155 = v0[24];
        uint64_t result = sub_1D6EF1938(100, v155);
        break;
      case 77:
        id v156 = (void *)swift_task_alloc();
        v0[183] = v156;
        *id v156 = v0;
        v156[1] = sub_1D6F0D974;
        uint64_t v157 = v0[24];
        uint64_t result = sub_1D6EF222C(100, v157);
        break;
      case 78:
        uint64_t v158 = (void *)swift_task_alloc();
        v0[185] = v158;
        *uint64_t v158 = v0;
        v158[1] = sub_1D6F0DA88;
        uint64_t v159 = v0[24];
        uint64_t result = sub_1D6EF2C20(100, v159);
        break;
      case 79:
        long long v160 = (void *)swift_task_alloc();
        v0[187] = v160;
        *long long v160 = v0;
        v160[1] = sub_1D6F0DB9C;
        uint64_t v161 = v0[24];
        uint64_t result = sub_1D6EF3638(100, v161);
        break;
      case 80:
        unint64_t v162 = (void *)swift_task_alloc();
        v0[189] = v162;
        *unint64_t v162 = v0;
        v162[1] = sub_1D6F0DCB0;
        uint64_t v163 = v0[24];
        uint64_t result = sub_1D6EF400C(100, v163);
        break;
      case 81:
        v164 = (void *)swift_task_alloc();
        v0[191] = v164;
        void *v164 = v0;
        v164[1] = sub_1D6F0DDC4;
        uint64_t v165 = v0[24];
        uint64_t result = sub_1D6EF4974(100, v165);
        break;
      case 82:
        v166 = (void *)swift_task_alloc();
        v0[193] = v166;
        void *v166 = v0;
        v166[1] = sub_1D6F0DED8;
        uint64_t v167 = v0[24];
        uint64_t result = sub_1D6EF53B4(100, v167);
        break;
      case 83:
        v168 = (void *)swift_task_alloc();
        v0[195] = v168;
        void *v168 = v0;
        v168[1] = sub_1D6F0DFEC;
        uint64_t v169 = v0[24];
        uint64_t result = sub_1D6EF5CA8(100, v169);
        break;
      case 84:
        v170 = (void *)swift_task_alloc();
        v0[197] = v170;
        void *v170 = v0;
        v170[1] = sub_1D6F0E100;
        uint64_t v171 = v0[24];
        uint64_t result = sub_1D6EF6718(100, v171);
        break;
      case 85:
        v172 = (void *)swift_task_alloc();
        v0[199] = v172;
        void *v172 = v0;
        v172[1] = sub_1D6F0E214;
        uint64_t v173 = v0[24];
        uint64_t result = sub_1D6EF700C(100, v173);
        break;
      case 86:
        v174 = (void *)swift_task_alloc();
        v0[201] = v174;
        void *v174 = v0;
        v174[1] = sub_1D6F0E328;
        uint64_t v175 = v0[24];
        uint64_t result = sub_1D6EF7974(100, v175);
        break;
      case 87:
        v176 = (void *)swift_task_alloc();
        v0[203] = v176;
        void *v176 = v0;
        v176[1] = sub_1D6F0E43C;
        uint64_t v177 = v0[24];
        uint64_t result = sub_1D6EF82DC(100, v177);
        break;
      case 88:
        v178 = (void *)swift_task_alloc();
        v0[205] = v178;
        void *v178 = v0;
        v178[1] = sub_1D6F0E550;
        uint64_t v179 = v0[24];
        uint64_t result = sub_1D6EF8C44(100, v179);
        break;
      case 89:
        v180 = (void *)swift_task_alloc();
        v0[207] = v180;
        void *v180 = v0;
        v180[1] = sub_1D6F0E664;
        uint64_t v181 = v0[24];
        uint64_t result = sub_1D6EF9548(100, v181);
        break;
      case 90:
        v182 = (void *)swift_task_alloc();
        v0[209] = v182;
        void *v182 = v0;
        v182[1] = sub_1D6F0E778;
        uint64_t v183 = v0[24];
        uint64_t result = sub_1D6EF9E3C(100, v183);
        break;
      case 91:
        v184 = (void *)swift_task_alloc();
        v0[211] = v184;
        void *v184 = v0;
        v184[1] = sub_1D6F0E88C;
        uint64_t v185 = v0[24];
        uint64_t result = sub_1D6EFA7A4(100, v185);
        break;
      case 92:
        v186 = (void *)swift_task_alloc();
        v0[213] = v186;
        void *v186 = v0;
        v186[1] = sub_1D6F0E9A0;
        uint64_t v187 = v0[24];
        uint64_t result = sub_1D6EFB10C(100, v187);
        break;
      case 93:
        v188 = (void *)swift_task_alloc();
        v0[225] = v188;
        void *v188 = v0;
        v188[1] = sub_1D6F0F018;
        uint64_t v189 = v0[24];
        uint64_t result = sub_1D6EFEE54(100, v189);
        break;
      case 94:
        v190 = (void *)swift_task_alloc();
        v0[221] = v190;
        void *v190 = v0;
        v190[1] = sub_1D6F0EDF0;
        uint64_t v191 = v0[24];
        uint64_t result = sub_1D6EFDA14(100, v191);
        break;
      case 95:
        v192 = (void *)swift_task_alloc();
        v0[215] = v192;
        void *v192 = v0;
        v192[1] = sub_1D6F0EAB4;
        uint64_t v193 = v0[24];
        uint64_t result = sub_1D6EFBB18(100, v193);
        break;
      case 96:
        v194 = (void *)swift_task_alloc();
        v0[217] = v194;
        void *v194 = v0;
        v194[1] = sub_1D6F0EBC8;
        uint64_t v195 = v0[24];
        uint64_t result = sub_1D6EFC554(100, v195);
        break;
      case 97:
        v196 = (void *)swift_task_alloc();
        v0[223] = v196;
        void *v196 = v0;
        v196[1] = sub_1D6F0EF04;
        uint64_t v197 = v0[24];
        uint64_t result = sub_1D6EFE488(100, v197);
        break;
      case 98:
        v198 = (void *)swift_task_alloc();
        v0[219] = v198;
        void *v198 = v0;
        v198[1] = sub_1D6F0ECDC;
        uint64_t v199 = v0[24];
        uint64_t result = sub_1D6EFCED0(100, v199);
        break;
      case 99:
        v200 = (void *)swift_task_alloc();
        v0[227] = v200;
        void *v200 = v0;
        v200[1] = sub_1D6F0F12C;
        uint64_t v201 = v0[24];
        uint64_t result = sub_1D6EFF748(100, v201);
        break;
      default:
        os_log_type_t v2 = (void *)swift_task_alloc();
        v0[29] = v2;
        *os_log_type_t v2 = v0;
        v2[1] = sub_1D6F05704;
        uint64_t v3 = v0[24];
        uint64_t result = sub_1D6EC42F8(100, v3);
        break;
    }
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  return result;
}

uint64_t sub_1D6F05704()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F2F0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F05818()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F39C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0592C()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F448;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F05A40()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F4F4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F05B54()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F5A0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F05C68()
{
  *(void *)(*(void *)v1 + 320) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F64C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F05D7C()
{
  *(void *)(*(void *)v1 + 336) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F6F8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F05E90()
{
  *(void *)(*(void *)v1 + 352) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F7A4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F05FA4()
{
  *(void *)(*(void *)v1 + 368) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F850;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F060B8()
{
  *(void *)(*(void *)v1 + 384) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F8FC;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F061CC()
{
  *(void *)(*(void *)v1 + 400) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0F9A8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F062E0()
{
  *(void *)(*(void *)v1 + 416) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0FA54;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F063F4()
{
  *(void *)(*(void *)v1 + 432) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0FB00;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06508()
{
  *(void *)(*(void *)v1 + 448) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0FBAC;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0661C()
{
  *(void *)(*(void *)v1 + 464) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0FC58;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06730()
{
  *(void *)(*(void *)v1 + 480) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0FD04;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06844()
{
  *(void *)(*(void *)v1 + 496) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0FDB0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06958()
{
  *(void *)(*(void *)v1 + 512) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0FE5C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06A6C()
{
  *(void *)(*(void *)v1 + 528) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0FF08;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06B80()
{
  *(void *)(*(void *)v1 + 544) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F0FFB4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06C94()
{
  *(void *)(*(void *)v1 + 560) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10060;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06DA8()
{
  *(void *)(*(void *)v1 + 576) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1010C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06EBC()
{
  *(void *)(*(void *)v1 + 592) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F101B8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F06FD0()
{
  *(void *)(*(void *)v1 + 608) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10264;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F070E4()
{
  *(void *)(*(void *)v1 + 624) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10310;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F071F8()
{
  *(void *)(*(void *)v1 + 640) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F103BC;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0730C()
{
  *(void *)(*(void *)v1 + 656) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10468;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07420()
{
  *(void *)(*(void *)v1 + 672) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10514;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07534()
{
  *(void *)(*(void *)v1 + 688) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F105C0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07648()
{
  *(void *)(*(void *)v1 + 704) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1066C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0775C()
{
  *(void *)(*(void *)v1 + 720) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10718;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07870()
{
  *(void *)(*(void *)v1 + 736) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F107C4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07984()
{
  *(void *)(*(void *)v1 + 752) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10870;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07A98()
{
  *(void *)(*(void *)v1 + 768) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1091C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07BAC()
{
  *(void *)(*(void *)v1 + 784) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F109C8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07CC0()
{
  *(void *)(*(void *)v1 + 800) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10A74;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07DD4()
{
  *(void *)(*(void *)v1 + 816) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10B20;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07EE8()
{
  *(void *)(*(void *)v1 + 832) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10BCC;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F07FFC()
{
  *(void *)(*(void *)v1 + 848) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10C78;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F08110()
{
  *(void *)(*(void *)v1 + 864) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10D24;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F08224()
{
  *(void *)(*(void *)v1 + 880) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10DD0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F08338()
{
  *(void *)(*(void *)v1 + 896) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10E7C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0844C()
{
  *(void *)(*(void *)v1 + 912) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10F28;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F08560()
{
  *(void *)(*(void *)v1 + 928) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F10FD4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F08674()
{
  *(void *)(*(void *)v1 + 944) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11080;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F08788()
{
  *(void *)(*(void *)v1 + 960) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1112C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0889C()
{
  *(void *)(*(void *)v1 + 976) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F111D8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F089B0()
{
  *(void *)(*(void *)v1 + 992) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11284;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F08AC4()
{
  *(void *)(*(void *)v1 + 1008) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11330;
  }
  else {
    os_log_type_t v2 = sub_1D6F08BD8;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F08BD8()
{
  uint64_t v1 = v0[28] + 1;
  if (v1 == v0[27])
  {
    swift_release();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    os_log_type_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    v0[28] = v1;
    switch(*((unsigned char *)&unk_1F2E41A00 + v1 + 32))
    {
      case 1:
        uint64_t v6 = (void *)swift_task_alloc();
        v0[31] = v6;
        void *v6 = v0;
        v6[1] = sub_1D6F05818;
        uint64_t v7 = v0[24];
        return sub_1D6EC4C60(100, v7);
      case 2:
        uint64_t v8 = (void *)swift_task_alloc();
        v0[33] = v8;
        *uint64_t v8 = v0;
        v8[1] = sub_1D6F0592C;
        uint64_t v9 = v0[24];
        return sub_1D6EC5628(100, v9);
      case 3:
        uint64_t v10 = (void *)swift_task_alloc();
        v0[35] = v10;
        *uint64_t v10 = v0;
        uint64_t v11 = sub_1D6F05A40;
        goto LABEL_172;
      case 4:
        uint64_t v12 = (void *)swift_task_alloc();
        v0[37] = v12;
        void *v12 = v0;
        v12[1] = sub_1D6F05B54;
        uint64_t v13 = v0[24];
        return sub_1D6EC6B90(100, v13);
      case 5:
        uint64_t v14 = (void *)swift_task_alloc();
        v0[39] = v14;
        *uint64_t v14 = v0;
        v14[1] = sub_1D6F05C68;
        uint64_t v15 = v0[24];
        return sub_1D6EC74F8(100, v15);
      case 6:
        uint64_t v16 = (void *)swift_task_alloc();
        v0[41] = v16;
        *uint64_t v16 = v0;
        uint64_t v17 = sub_1D6F05D7C;
        goto LABEL_24;
      case 7:
        uint64_t v16 = (void *)swift_task_alloc();
        v0[43] = v16;
        *uint64_t v16 = v0;
        uint64_t v17 = sub_1D6F05E90;
LABEL_24:
        v16[1] = v17;
        uint64_t v18 = v0[24];
        uint64_t result = sub_1D6EC8074(100, v18);
        break;
      case 8:
        unint64_t v19 = (void *)swift_task_alloc();
        v0[45] = v19;
        *unint64_t v19 = v0;
        v19[1] = sub_1D6F05FA4;
        uint64_t v20 = v0[24];
        uint64_t result = sub_1D6EC89DC(100, v20);
        break;
      case 9:
        char v21 = (void *)swift_task_alloc();
        v0[47] = v21;
        *char v21 = v0;
        v21[1] = sub_1D6F060B8;
        uint64_t v22 = v0[24];
        uint64_t result = sub_1D6EC947C(100, v22);
        break;
      case 0xA:
        uint64_t v23 = (void *)swift_task_alloc();
        v0[49] = v23;
        *uint64_t v23 = v0;
        v23[1] = sub_1D6F061CC;
        uint64_t v24 = v0[24];
        uint64_t result = sub_1D6EC9E64(100, v24);
        break;
      case 0xB:
        uint64_t v25 = (void *)swift_task_alloc();
        v0[51] = v25;
        *uint64_t v25 = v0;
        v25[1] = sub_1D6F062E0;
        uint64_t v26 = v0[24];
        uint64_t result = sub_1D6ECA7CC(100, v26);
        break;
      case 0xC:
        id v27 = (void *)swift_task_alloc();
        v0[53] = v27;
        *id v27 = v0;
        v27[1] = sub_1D6F063F4;
        uint64_t v28 = v0[24];
        uint64_t result = sub_1D6ECB1F4(100, v28);
        break;
      case 0xD:
        os_log_type_t v29 = (void *)swift_task_alloc();
        v0[55] = v29;
        *os_log_type_t v29 = v0;
        v29[1] = sub_1D6F06508;
        uint64_t v30 = v0[24];
        uint64_t result = sub_1D6ECBC84(100, v30);
        break;
      case 0xE:
        uint64_t v31 = (void *)swift_task_alloc();
        v0[57] = v31;
        void *v31 = v0;
        v31[1] = sub_1D6F0661C;
        uint64_t v32 = v0[24];
        uint64_t result = sub_1D6ECC67C(100, v32);
        break;
      case 0xF:
        unint64_t v33 = (void *)swift_task_alloc();
        v0[59] = v33;
        *unint64_t v33 = v0;
        v33[1] = sub_1D6F06730;
        uint64_t v34 = v0[24];
        uint64_t result = sub_1D6ECD03C(100, v34);
        break;
      case 0x10:
        uint64_t v35 = (void *)swift_task_alloc();
        v0[61] = v35;
        *uint64_t v35 = v0;
        v35[1] = sub_1D6F06844;
        uint64_t v36 = v0[24];
        uint64_t result = sub_1D6ECD930(100, v36);
        break;
      case 0x11:
        uint64_t v37 = (void *)swift_task_alloc();
        v0[63] = v37;
        void *v37 = v0;
        v37[1] = sub_1D6F06958;
        uint64_t v38 = v0[24];
        uint64_t result = sub_1D6ECE340(100, v38);
        break;
      case 0x12:
        unint64_t v39 = (void *)swift_task_alloc();
        v0[65] = v39;
        *unint64_t v39 = v0;
        v39[1] = sub_1D6F06A6C;
        uint64_t v40 = v0[24];
        uint64_t result = sub_1D6ECECA8(100, v40);
        break;
      case 0x13:
        uint64_t v41 = (void *)swift_task_alloc();
        v0[67] = v41;
        *uint64_t v41 = v0;
        v41[1] = sub_1D6F06B80;
        uint64_t v42 = v0[24];
        uint64_t result = sub_1D6ECF5D4(100, v42);
        break;
      case 0x14:
        uint64_t v43 = (void *)swift_task_alloc();
        v0[71] = v43;
        *uint64_t v43 = v0;
        v43[1] = sub_1D6F06DA8;
        uint64_t v44 = v0[24];
        uint64_t result = sub_1D6ED082C(100, v44);
        break;
      case 0x15:
        uint64_t v45 = (void *)swift_task_alloc();
        v0[69] = v45;
        *uint64_t v45 = v0;
        v45[1] = sub_1D6F06C94;
        uint64_t v46 = v0[24];
        uint64_t result = sub_1D6ECFF00(100, v46);
        break;
      case 0x16:
        int64_t v47 = (void *)swift_task_alloc();
        v0[73] = v47;
        *int64_t v47 = v0;
        v47[1] = sub_1D6F06EBC;
        uint64_t v48 = v0[24];
        uint64_t result = sub_1D6ED1208(100, v48);
        break;
      case 0x17:
        unint64_t v49 = (void *)swift_task_alloc();
        v0[75] = v49;
        *unint64_t v49 = v0;
        v49[1] = sub_1D6F06FD0;
        uint64_t v50 = v0[24];
        uint64_t result = sub_1D6ED1B70(100, v50);
        break;
      case 0x18:
        uint64_t v51 = (void *)swift_task_alloc();
        v0[77] = v51;
        void *v51 = v0;
        v51[1] = sub_1D6F070E4;
        uint64_t v52 = v0[24];
        uint64_t result = sub_1D6ED24D8(100, v52);
        break;
      case 0x19:
        uint64_t v53 = (void *)swift_task_alloc();
        v0[79] = v53;
        *uint64_t v53 = v0;
        v53[1] = sub_1D6F071F8;
        uint64_t v54 = v0[24];
        uint64_t result = sub_1D6ED2F10(100, v54);
        break;
      case 0x1A:
        uint64_t v55 = (void *)swift_task_alloc();
        v0[81] = v55;
        *uint64_t v55 = v0;
        v55[1] = sub_1D6F0730C;
        uint64_t v56 = v0[24];
        uint64_t result = sub_1D6ED3878(100, v56);
        break;
      case 0x1B:
        uint64_t v57 = (void *)swift_task_alloc();
        v0[83] = v57;
        *uint64_t v57 = v0;
        v57[1] = sub_1D6F07420;
        uint64_t v58 = v0[24];
        uint64_t result = sub_1D6ED4278(100, v58);
        break;
      case 0x1C:
        uint64_t v59 = (void *)swift_task_alloc();
        v0[85] = v59;
        *uint64_t v59 = v0;
        v59[1] = sub_1D6F07534;
        uint64_t v60 = v0[24];
        uint64_t result = sub_1D6ED4C94(100, v60);
        break;
      case 0x1D:
        uint64_t v61 = (void *)swift_task_alloc();
        v0[87] = v61;
        *uint64_t v61 = v0;
        v61[1] = sub_1D6F07648;
        uint64_t v62 = v0[24];
        uint64_t result = sub_1D6ED55FC(100, v62);
        break;
      case 0x1E:
        unint64_t v63 = (void *)swift_task_alloc();
        v0[89] = v63;
        *unint64_t v63 = v0;
        v63[1] = sub_1D6F0775C;
        uint64_t v64 = v0[24];
        uint64_t result = sub_1D6ED5EF0(100, v64);
        break;
      case 0x1F:
        uint64_t v65 = (void *)swift_task_alloc();
        v0[91] = v65;
        *uint64_t v65 = v0;
        v65[1] = sub_1D6F07870;
        uint64_t v66 = v0[24];
        uint64_t result = sub_1D6ED68B0(100, v66);
        break;
      case 0x20:
        uint64_t v67 = (void *)swift_task_alloc();
        v0[93] = v67;
        *uint64_t v67 = v0;
        v67[1] = sub_1D6F07984;
        uint64_t v68 = v0[24];
        uint64_t result = sub_1D6ED72EC(100, v68);
        break;
      case 0x21:
        uint64_t v69 = (void *)swift_task_alloc();
        v0[95] = v69;
        *uint64_t v69 = v0;
        v69[1] = sub_1D6F07A98;
        uint64_t v70 = v0[24];
        uint64_t result = sub_1D6ED7CE8(100, v70);
        break;
      case 0x22:
        uint64_t v71 = (void *)swift_task_alloc();
        v0[97] = v71;
        *uint64_t v71 = v0;
        v71[1] = sub_1D6F07BAC;
        uint64_t v72 = v0[24];
        uint64_t result = sub_1D6ED8650(100, v72);
        break;
      case 0x23:
        uint64_t v73 = (void *)swift_task_alloc();
        v0[99] = v73;
        *uint64_t v73 = v0;
        v73[1] = sub_1D6F07CC0;
        uint64_t v74 = v0[24];
        uint64_t result = sub_1D6ED90B4(100, v74);
        break;
      case 0x24:
        unint64_t v75 = (void *)swift_task_alloc();
        v0[101] = v75;
        *unint64_t v75 = v0;
        v75[1] = sub_1D6F07DD4;
        uint64_t v76 = v0[24];
        uint64_t result = sub_1D6ED9A6C(100, v76);
        break;
      case 0x25:
        uint64_t v77 = (void *)swift_task_alloc();
        v0[103] = v77;
        *uint64_t v77 = v0;
        v77[1] = sub_1D6F07EE8;
        uint64_t v78 = v0[24];
        uint64_t result = sub_1D6EDA4D0(100, v78);
        break;
      case 0x26:
        unint64_t v79 = (void *)swift_task_alloc();
        v0[105] = v79;
        *unint64_t v79 = v0;
        v79[1] = sub_1D6F07FFC;
        uint64_t v80 = v0[24];
        uint64_t result = sub_1D6EDAF20(100, v80);
        break;
      case 0x27:
        uint64_t v81 = (void *)swift_task_alloc();
        v0[107] = v81;
        *uint64_t v81 = v0;
        v81[1] = sub_1D6F08110;
        uint64_t v82 = v0[24];
        uint64_t result = sub_1D6EDB8E8(100, v82);
        break;
      case 0x28:
        uint64_t v83 = (void *)swift_task_alloc();
        v0[109] = v83;
        *uint64_t v83 = v0;
        v83[1] = sub_1D6F08224;
        uint64_t v84 = v0[24];
        uint64_t result = sub_1D6EDC250(100, v84);
        break;
      case 0x29:
        uint64_t v85 = (void *)swift_task_alloc();
        v0[111] = v85;
        *uint64_t v85 = v0;
        v85[1] = sub_1D6F08338;
        uint64_t v86 = v0[24];
        uint64_t result = sub_1D6EDCBB8(100, v86);
        break;
      case 0x2A:
        uint64_t v87 = (void *)swift_task_alloc();
        v0[113] = v87;
        void *v87 = v0;
        v87[1] = sub_1D6F0844C;
        uint64_t v88 = v0[24];
        uint64_t result = sub_1D6EDD4AC(100, v88);
        break;
      case 0x2B:
        uint64_t v89 = (void *)swift_task_alloc();
        v0[115] = v89;
        *uint64_t v89 = v0;
        v89[1] = sub_1D6F08560;
        uint64_t v90 = v0[24];
        uint64_t result = sub_1D6EDDEBC(100, v90);
        break;
      case 0x2C:
        uint64_t v91 = (void *)swift_task_alloc();
        v0[117] = v91;
        *uint64_t v91 = v0;
        v91[1] = sub_1D6F08674;
        uint64_t v92 = v0[24];
        uint64_t result = sub_1D6EDE824(100, v92);
        break;
      case 0x2D:
        uint64_t v93 = (void *)swift_task_alloc();
        v0[119] = v93;
        void *v93 = v0;
        v93[1] = sub_1D6F08788;
        uint64_t v94 = v0[24];
        uint64_t result = sub_1D6EDF1E4(100, v94);
        break;
      case 0x2E:
        unint64_t v95 = (void *)swift_task_alloc();
        v0[121] = v95;
        void *v95 = v0;
        v95[1] = sub_1D6F0889C;
        uint64_t v96 = v0[24];
        uint64_t result = sub_1D6EDFAD8(100, v96);
        break;
      case 0x2F:
        uint64_t v97 = (void *)swift_task_alloc();
        v0[123] = v97;
        *uint64_t v97 = v0;
        v97[1] = sub_1D6F089B0;
        uint64_t v98 = v0[24];
        uint64_t result = sub_1D6EE04FC(100, v98);
        break;
      case 0x30:
        uint64_t v99 = (void *)swift_task_alloc();
        v0[125] = v99;
        *uint64_t v99 = v0;
        v99[1] = sub_1D6F08AC4;
        uint64_t v100 = v0[24];
        uint64_t result = sub_1D6EE0DF0(100, v100);
        break;
      case 0x31:
        uint64_t v101 = (void *)swift_task_alloc();
        v0[129] = v101;
        void *v101 = v0;
        v101[1] = sub_1D6F0BC58;
        uint64_t v102 = v0[24];
        uint64_t result = sub_1D6EE22D8(100, v102);
        break;
      case 0x32:
        uint64_t v103 = (void *)swift_task_alloc();
        v0[131] = v103;
        *uint64_t v103 = v0;
        v103[1] = sub_1D6F0BD6C;
        uint64_t v104 = v0[24];
        uint64_t result = sub_1D6EE2C98(100, v104);
        break;
      case 0x33:
        uint64_t v105 = (void *)swift_task_alloc();
        v0[127] = v105;
        *uint64_t v105 = v0;
        v105[1] = sub_1D6F0BB44;
        uint64_t v106 = v0[24];
        uint64_t result = sub_1D6EE1834(100, v106);
        break;
      case 0x34:
        uint64_t v107 = (void *)swift_task_alloc();
        v0[133] = v107;
        void *v107 = v0;
        v107[1] = sub_1D6F0BE80;
        uint64_t v108 = v0[24];
        uint64_t result = sub_1D6EE3600(100, v108);
        break;
      case 0x35:
        uint64_t v109 = (void *)swift_task_alloc();
        v0[135] = v109;
        *uint64_t v109 = v0;
        v109[1] = sub_1D6F0BF94;
        uint64_t v110 = v0[24];
        uint64_t result = sub_1D6EE40C0(100, v110);
        break;
      case 0x36:
        uint64_t v111 = (void *)swift_task_alloc();
        v0[137] = v111;
        void *v111 = v0;
        v111[1] = sub_1D6F0C0A8;
        uint64_t v112 = v0[24];
        uint64_t result = sub_1D6EE4A88(100, v112);
        break;
      case 0x37:
        uint64_t v113 = (void *)swift_task_alloc();
        v0[139] = v113;
        *uint64_t v113 = v0;
        v113[1] = sub_1D6F0C1BC;
        uint64_t v114 = v0[24];
        uint64_t result = sub_1D6EE54F4(100, v114);
        break;
      case 0x38:
        uint64_t v10 = (void *)swift_task_alloc();
        v0[141] = v10;
        *uint64_t v10 = v0;
        uint64_t v11 = sub_1D6F0C2D0;
LABEL_172:
        v10[1] = v11;
        uint64_t v115 = v0[24];
        uint64_t result = sub_1D6EC61A4(100, v115);
        break;
      case 0x39:
        uint64_t v116 = (void *)swift_task_alloc();
        v0[143] = v116;
        *uint64_t v116 = v0;
        v116[1] = sub_1D6F0C3E4;
        uint64_t v117 = v0[24];
        uint64_t result = sub_1D6EE5FA0(100, v117);
        break;
      case 0x3A:
        uint64_t v118 = (void *)swift_task_alloc();
        v0[145] = v118;
        *uint64_t v118 = v0;
        v118[1] = sub_1D6F0C4F8;
        uint64_t v119 = v0[24];
        uint64_t result = sub_1D6EE6A6C(100, v119);
        break;
      case 0x3B:
        uint64_t v120 = (void *)swift_task_alloc();
        v0[147] = v120;
        *uint64_t v120 = v0;
        v120[1] = sub_1D6F0C60C;
        uint64_t v121 = v0[24];
        uint64_t result = sub_1D6EE7360(100, v121);
        break;
      case 0x3C:
        uint64_t v122 = (void *)swift_task_alloc();
        v0[149] = v122;
        void *v122 = v0;
        v122[1] = sub_1D6F0C720;
        uint64_t v123 = v0[24];
        uint64_t result = sub_1D6EE7D20(100, v123);
        break;
      case 0x3D:
        uint64_t v124 = (void *)swift_task_alloc();
        v0[151] = v124;
        *uint64_t v124 = v0;
        v124[1] = sub_1D6F0C834;
        uint64_t v125 = v0[24];
        uint64_t result = sub_1D6EE8614(100, v125);
        break;
      case 0x3E:
        uint64_t v126 = (void *)swift_task_alloc();
        v0[153] = v126;
        *uint64_t v126 = v0;
        v126[1] = sub_1D6F0C948;
        uint64_t v127 = v0[24];
        uint64_t result = sub_1D6EE8F7C(100, v127);
        break;
      case 0x3F:
        uint64_t v128 = (void *)swift_task_alloc();
        v0[155] = v128;
        void *v128 = v0;
        v128[1] = sub_1D6F0CA5C;
        uint64_t v129 = v0[24];
        uint64_t result = sub_1D6EE9870(100, v129);
        break;
      case 0x40:
        uint64_t v130 = (void *)swift_task_alloc();
        v0[157] = v130;
        *uint64_t v130 = v0;
        v130[1] = sub_1D6F0CB70;
        uint64_t v131 = v0[24];
        uint64_t result = sub_1D6EEA274(100, v131);
        break;
      case 0x41:
        uint64_t v132 = (void *)swift_task_alloc();
        v0[159] = v132;
        *uint64_t v132 = v0;
        v132[1] = sub_1D6F0CC84;
        uint64_t v133 = v0[24];
        uint64_t result = sub_1D6EEAC90(100, v133);
        break;
      case 0x42:
        uint64_t v134 = (void *)swift_task_alloc();
        v0[161] = v134;
        void *v134 = v0;
        v134[1] = sub_1D6F0CD98;
        uint64_t v135 = v0[24];
        uint64_t result = sub_1D6EEB5F8(100, v135);
        break;
      case 0x43:
        char v136 = (void *)swift_task_alloc();
        v0[163] = v136;
        *char v136 = v0;
        v136[1] = sub_1D6F0CEAC;
        uint64_t v137 = v0[24];
        uint64_t result = sub_1D6EEC08C(100, v137);
        break;
      case 0x44:
        uint64_t v138 = (void *)swift_task_alloc();
        v0[165] = v138;
        void *v138 = v0;
        v138[1] = sub_1D6F0CFC0;
        uint64_t v139 = v0[24];
        uint64_t result = sub_1D6EECAA8(100, v139);
        break;
      case 0x45:
        uint64_t v140 = (void *)swift_task_alloc();
        v0[167] = v140;
        *uint64_t v140 = v0;
        v140[1] = sub_1D6F0D0D4;
        uint64_t v141 = v0[24];
        uint64_t result = sub_1D6EED410(100, v141);
        break;
      case 0x46:
        uint64_t v142 = (void *)swift_task_alloc();
        v0[169] = v142;
        *uint64_t v142 = v0;
        v142[1] = sub_1D6F0D1E8;
        uint64_t v143 = v0[24];
        uint64_t result = sub_1D6EEDEDC(100, v143);
        break;
      case 0x47:
        uint64_t v144 = (void *)swift_task_alloc();
        v0[171] = v144;
        *uint64_t v144 = v0;
        v144[1] = sub_1D6F0D2FC;
        uint64_t v145 = v0[24];
        uint64_t result = sub_1D6EEE8BC(100, v145);
        break;
      case 0x48:
        uint64_t v146 = (void *)swift_task_alloc();
        v0[173] = v146;
        *uint64_t v146 = v0;
        v146[1] = sub_1D6F0D410;
        uint64_t v147 = v0[24];
        uint64_t result = sub_1D6EEF224(100, v147);
        break;
      case 0x49:
        v148 = (void *)swift_task_alloc();
        v0[175] = v148;
        void *v148 = v0;
        v148[1] = sub_1D6F0D524;
        uint64_t v149 = v0[24];
        uint64_t result = sub_1D6EEFBEC(100, v149);
        break;
      case 0x4A:
        v150 = (void *)swift_task_alloc();
        v0[177] = v150;
        void *v150 = v0;
        v150[1] = sub_1D6F0D638;
        uint64_t v151 = v0[24];
        uint64_t result = sub_1D6EF05E0(100, v151);
        break;
      case 0x4B:
        v152 = (void *)swift_task_alloc();
        v0[179] = v152;
        void *v152 = v0;
        v152[1] = sub_1D6F0D74C;
        uint64_t v153 = v0[24];
        uint64_t result = sub_1D6EF0F48(100, v153);
        break;
      case 0x4C:
        uint64_t v154 = (void *)swift_task_alloc();
        v0[181] = v154;
        *uint64_t v154 = v0;
        v154[1] = sub_1D6F0D860;
        uint64_t v155 = v0[24];
        uint64_t result = sub_1D6EF1938(100, v155);
        break;
      case 0x4D:
        id v156 = (void *)swift_task_alloc();
        v0[183] = v156;
        *id v156 = v0;
        v156[1] = sub_1D6F0D974;
        uint64_t v157 = v0[24];
        uint64_t result = sub_1D6EF222C(100, v157);
        break;
      case 0x4E:
        uint64_t v158 = (void *)swift_task_alloc();
        v0[185] = v158;
        *uint64_t v158 = v0;
        v158[1] = sub_1D6F0DA88;
        uint64_t v159 = v0[24];
        uint64_t result = sub_1D6EF2C20(100, v159);
        break;
      case 0x4F:
        long long v160 = (void *)swift_task_alloc();
        v0[187] = v160;
        *long long v160 = v0;
        v160[1] = sub_1D6F0DB9C;
        uint64_t v161 = v0[24];
        uint64_t result = sub_1D6EF3638(100, v161);
        break;
      case 0x50:
        unint64_t v162 = (void *)swift_task_alloc();
        v0[189] = v162;
        *unint64_t v162 = v0;
        v162[1] = sub_1D6F0DCB0;
        uint64_t v163 = v0[24];
        uint64_t result = sub_1D6EF400C(100, v163);
        break;
      case 0x51:
        v164 = (void *)swift_task_alloc();
        v0[191] = v164;
        void *v164 = v0;
        v164[1] = sub_1D6F0DDC4;
        uint64_t v165 = v0[24];
        uint64_t result = sub_1D6EF4974(100, v165);
        break;
      case 0x52:
        v166 = (void *)swift_task_alloc();
        v0[193] = v166;
        void *v166 = v0;
        v166[1] = sub_1D6F0DED8;
        uint64_t v167 = v0[24];
        uint64_t result = sub_1D6EF53B4(100, v167);
        break;
      case 0x53:
        v168 = (void *)swift_task_alloc();
        v0[195] = v168;
        void *v168 = v0;
        v168[1] = sub_1D6F0DFEC;
        uint64_t v169 = v0[24];
        uint64_t result = sub_1D6EF5CA8(100, v169);
        break;
      case 0x54:
        v170 = (void *)swift_task_alloc();
        v0[197] = v170;
        void *v170 = v0;
        v170[1] = sub_1D6F0E100;
        uint64_t v171 = v0[24];
        uint64_t result = sub_1D6EF6718(100, v171);
        break;
      case 0x55:
        v172 = (void *)swift_task_alloc();
        v0[199] = v172;
        void *v172 = v0;
        v172[1] = sub_1D6F0E214;
        uint64_t v173 = v0[24];
        uint64_t result = sub_1D6EF700C(100, v173);
        break;
      case 0x56:
        v174 = (void *)swift_task_alloc();
        v0[201] = v174;
        void *v174 = v0;
        v174[1] = sub_1D6F0E328;
        uint64_t v175 = v0[24];
        uint64_t result = sub_1D6EF7974(100, v175);
        break;
      case 0x57:
        v176 = (void *)swift_task_alloc();
        v0[203] = v176;
        void *v176 = v0;
        v176[1] = sub_1D6F0E43C;
        uint64_t v177 = v0[24];
        uint64_t result = sub_1D6EF82DC(100, v177);
        break;
      case 0x58:
        v178 = (void *)swift_task_alloc();
        v0[205] = v178;
        void *v178 = v0;
        v178[1] = sub_1D6F0E550;
        uint64_t v179 = v0[24];
        uint64_t result = sub_1D6EF8C44(100, v179);
        break;
      case 0x59:
        v180 = (void *)swift_task_alloc();
        v0[207] = v180;
        void *v180 = v0;
        v180[1] = sub_1D6F0E664;
        uint64_t v181 = v0[24];
        uint64_t result = sub_1D6EF9548(100, v181);
        break;
      case 0x5A:
        v182 = (void *)swift_task_alloc();
        v0[209] = v182;
        void *v182 = v0;
        v182[1] = sub_1D6F0E778;
        uint64_t v183 = v0[24];
        uint64_t result = sub_1D6EF9E3C(100, v183);
        break;
      case 0x5B:
        v184 = (void *)swift_task_alloc();
        v0[211] = v184;
        void *v184 = v0;
        v184[1] = sub_1D6F0E88C;
        uint64_t v185 = v0[24];
        uint64_t result = sub_1D6EFA7A4(100, v185);
        break;
      case 0x5C:
        v186 = (void *)swift_task_alloc();
        v0[213] = v186;
        void *v186 = v0;
        v186[1] = sub_1D6F0E9A0;
        uint64_t v187 = v0[24];
        uint64_t result = sub_1D6EFB10C(100, v187);
        break;
      case 0x5D:
        v188 = (void *)swift_task_alloc();
        v0[225] = v188;
        void *v188 = v0;
        v188[1] = sub_1D6F0F018;
        uint64_t v189 = v0[24];
        uint64_t result = sub_1D6EFEE54(100, v189);
        break;
      case 0x5E:
        v190 = (void *)swift_task_alloc();
        v0[221] = v190;
        void *v190 = v0;
        v190[1] = sub_1D6F0EDF0;
        uint64_t v191 = v0[24];
        uint64_t result = sub_1D6EFDA14(100, v191);
        break;
      case 0x5F:
        v192 = (void *)swift_task_alloc();
        v0[215] = v192;
        void *v192 = v0;
        v192[1] = sub_1D6F0EAB4;
        uint64_t v193 = v0[24];
        uint64_t result = sub_1D6EFBB18(100, v193);
        break;
      case 0x60:
        v194 = (void *)swift_task_alloc();
        v0[217] = v194;
        void *v194 = v0;
        v194[1] = sub_1D6F0EBC8;
        uint64_t v195 = v0[24];
        uint64_t result = sub_1D6EFC554(100, v195);
        break;
      case 0x61:
        v196 = (void *)swift_task_alloc();
        v0[223] = v196;
        void *v196 = v0;
        v196[1] = sub_1D6F0EF04;
        uint64_t v197 = v0[24];
        uint64_t result = sub_1D6EFE488(100, v197);
        break;
      case 0x62:
        v198 = (void *)swift_task_alloc();
        v0[219] = v198;
        void *v198 = v0;
        v198[1] = sub_1D6F0ECDC;
        uint64_t v199 = v0[24];
        uint64_t result = sub_1D6EFCED0(100, v199);
        break;
      case 0x63:
        v200 = (void *)swift_task_alloc();
        v0[227] = v200;
        void *v200 = v0;
        v200[1] = sub_1D6F0F12C;
        uint64_t v201 = v0[24];
        uint64_t result = sub_1D6EFF748(100, v201);
        break;
      default:
        uint64_t v4 = (void *)swift_task_alloc();
        v0[29] = v4;
        *uint64_t v4 = v0;
        v4[1] = sub_1D6F05704;
        uint64_t v5 = v0[24];
        uint64_t result = sub_1D6EC42F8(100, v5);
        break;
    }
  }
  return result;
}

uint64_t sub_1D6F0BB44()
{
  *(void *)(*(void *)v1 + 1024) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F113DC;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0BC58()
{
  *(void *)(*(void *)v1 + 1040) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11488;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0BD6C()
{
  *(void *)(*(void *)v1 + 1056) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11534;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0BE80()
{
  *(void *)(*(void *)v1 + 1072) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F115E0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0BF94()
{
  *(void *)(*(void *)v1 + 1088) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1168C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0C0A8()
{
  *(void *)(*(void *)v1 + 1104) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11738;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0C1BC()
{
  *(void *)(*(void *)v1 + 1120) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F117E4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0C2D0()
{
  *(void *)(*(void *)v1 + 1136) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11890;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0C3E4()
{
  *(void *)(*(void *)v1 + 1152) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1193C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0C4F8()
{
  *(void *)(*(void *)v1 + 1168) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F119E8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0C60C()
{
  *(void *)(*(void *)v1 + 1184) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11A94;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0C720()
{
  *(void *)(*(void *)v1 + 1200) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11B40;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0C834()
{
  *(void *)(*(void *)v1 + 1216) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11BEC;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0C948()
{
  *(void *)(*(void *)v1 + 1232) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11C98;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0CA5C()
{
  *(void *)(*(void *)v1 + 1248) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11D44;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0CB70()
{
  *(void *)(*(void *)v1 + 1264) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11DF0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0CC84()
{
  *(void *)(*(void *)v1 + 1280) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11E9C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0CD98()
{
  *(void *)(*(void *)v1 + 1296) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11F48;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0CEAC()
{
  *(void *)(*(void *)v1 + 1312) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F11FF4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0CFC0()
{
  *(void *)(*(void *)v1 + 1328) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F120A0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0D0D4()
{
  *(void *)(*(void *)v1 + 1344) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1214C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0D1E8()
{
  *(void *)(*(void *)v1 + 1360) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F121F8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0D2FC()
{
  *(void *)(*(void *)v1 + 1376) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F122A4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0D410()
{
  *(void *)(*(void *)v1 + 1392) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12350;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0D524()
{
  *(void *)(*(void *)v1 + 1408) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F123FC;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0D638()
{
  *(void *)(*(void *)v1 + 1424) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F124A8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0D74C()
{
  *(void *)(*(void *)v1 + 1440) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12554;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0D860()
{
  *(void *)(*(void *)v1 + 1456) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12600;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0D974()
{
  *(void *)(*(void *)v1 + 1472) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F126AC;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0DA88()
{
  *(void *)(*(void *)v1 + 1488) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12758;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0DB9C()
{
  *(void *)(*(void *)v1 + 1504) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12804;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0DCB0()
{
  *(void *)(*(void *)v1 + 1520) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F128B0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0DDC4()
{
  *(void *)(*(void *)v1 + 1536) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1295C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0DED8()
{
  *(void *)(*(void *)v1 + 1552) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12A08;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0DFEC()
{
  *(void *)(*(void *)v1 + 1568) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12AB4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0E100()
{
  *(void *)(*(void *)v1 + 1584) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12B60;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0E214()
{
  *(void *)(*(void *)v1 + 1600) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12C0C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0E328()
{
  *(void *)(*(void *)v1 + 1616) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12CB8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0E43C()
{
  *(void *)(*(void *)v1 + 1632) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12D64;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0E550()
{
  *(void *)(*(void *)v1 + 1648) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12E10;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0E664()
{
  *(void *)(*(void *)v1 + 1664) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12EBC;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0E778()
{
  *(void *)(*(void *)v1 + 1680) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F12F68;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0E88C()
{
  *(void *)(*(void *)v1 + 1696) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F13014;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0E9A0()
{
  *(void *)(*(void *)v1 + 1712) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F130C0;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0EAB4()
{
  *(void *)(*(void *)v1 + 1728) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1316C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0EBC8()
{
  *(void *)(*(void *)v1 + 1744) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F13218;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0ECDC()
{
  *(void *)(*(void *)v1 + 1760) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F132C4;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0EDF0()
{
  *(void *)(*(void *)v1 + 1776) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F13370;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0EF04()
{
  *(void *)(*(void *)v1 + 1792) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F1341C;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0F018()
{
  *(void *)(*(void *)v1 + 1808) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F134C8;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0F12C()
{
  *(void *)(*(void *)v1 + 1824) = v0;
  swift_task_dealloc();
  if (v0) {
    os_log_type_t v2 = sub_1D6F13574;
  }
  else {
    os_log_type_t v2 = sub_1D6F14974;
  }
  return MEMORY[0x1F4188298](v2, 0, 0);
}

uint64_t sub_1D6F0F240()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F2F0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F39C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F448()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F4F4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F5A0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F64C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F6F8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F7A4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F850()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F8FC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0F9A8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0FA54()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0FB00()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0FBAC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0FC58()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0FD04()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0FDB0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0FE5C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0FF08()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F0FFB4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10060()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1010C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F101B8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10264()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10310()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F103BC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10468()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10514()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F105C0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1066C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10718()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F107C4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10870()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1091C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F109C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10A74()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10B20()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10BCC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10C78()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10D24()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10DD0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10E7C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10F28()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F10FD4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11080()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1112C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F111D8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11284()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11330()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F113DC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11488()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11534()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F115E0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1168C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11738()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F117E4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11890()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1193C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F119E8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11A94()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11B40()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11BEC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11C98()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11D44()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11DF0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11E9C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11F48()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F11FF4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F120A0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1214C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F121F8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F122A4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12350()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F123FC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F124A8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12554()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12600()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F126AC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12758()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12804()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F128B0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1295C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12A08()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12AB4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12B60()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12C0C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12CB8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12D64()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12E10()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12EBC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F12F68()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F13014()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F130C0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1316C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F13218()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F132C4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F13370()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F1341C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F134C8()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F13574()
{
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D6F13620()
{
  swift_unknownObjectRelease();

  return MEMORY[0x1F4186498](v0, 48, 7);
}

uint64_t sub_1D6F13658(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E5CCA0);
}

uint64_t sub_1D6F13684(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E5C4D0);
}

uint64_t sub_1D6F136B0(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E5BD58);
}

uint64_t sub_1D6F136DC(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E5B03C);
}

uint64_t sub_1D6F13708(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E5A988);
}

uint64_t sub_1D6F13734(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E5A2DC);
}

uint64_t sub_1D6F13760(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E59C58);
}

uint64_t sub_1D6F1378C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E593B0);
}

uint64_t sub_1D6F137B8(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E58D2C);
}

uint64_t sub_1D6F137E4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E58500);
}

uint64_t sub_1D6F13810(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E57E7C);
}

uint64_t sub_1D6F1383C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E57660);
}

uint64_t sub_1D6F13868(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E56F6C);
}

uint64_t sub_1D6F13894(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E569BC);
}

uint64_t sub_1D6F138C0(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E56188);
}

uint64_t sub_1D6F138EC(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E55970);
}

uint64_t sub_1D6F13918(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E55318);
}

uint64_t sub_1D6F13944(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E54CC0);
}

uint64_t sub_1D6F13970(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E54668);
}

uint64_t sub_1D6F1399C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E53F88);
}

uint64_t sub_1D6F139C8(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E538D4);
}

uint64_t sub_1D6F139F4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E53220);
}

uint64_t sub_1D6F13A20(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E52B74);
}

uint64_t sub_1D6F13A4C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E524C0);
}

uint64_t sub_1D6F13A78(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E51BE4);
}

uint64_t sub_1D6F13AA4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E514DC);
}

uint64_t sub_1D6F13AD0(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E50CB4);
}

uint64_t sub_1D6F13AFC(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E50704);
}

uint64_t sub_1D6F13B28(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E50010);
}

uint64_t sub_1D6F13B54(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4F81C);
}

uint64_t sub_1D6F13B80(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4F168);
}

uint64_t sub_1D6F13BAC(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4EAB4);
}

uint64_t sub_1D6F13BD8(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4E400);
}

uint64_t sub_1D6F13C04(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4DDA8);
}

uint64_t sub_1D6F13C30(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4D724);
}

uint64_t sub_1D6F13C5C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4CFC0);
}

uint64_t sub_1D6F13C88(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4C834);
}

uint64_t sub_1D6F13CB4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4C110);
}

uint64_t sub_1D6F13CE0(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4BA5C);
}

uint64_t sub_1D6F13D0C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4B4AC);
}

uint64_t sub_1D6F13D38(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4ADE8);
}

uint64_t sub_1D6F13D64(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4A73C);
}

uint64_t sub_1D6F13D90(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4A048);
}

uint64_t sub_1D6F13DBC(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E49A98);
}

uint64_t sub_1D6F13DE8(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E493C4);
}

uint64_t sub_1D6F13E14(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E48E60);
}

uint64_t sub_1D6F13E40(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E487B4);
}

uint64_t sub_1D6F13E6C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E48100);
}

uint64_t sub_1D6F13E98(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E47A0C);
}

uint64_t sub_1D6F13EC4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E47360);
}

uint64_t sub_1D6F13EF0(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E46CAC);
}

uint64_t sub_1D6F13F1C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E465E4);
}

uint64_t sub_1D6F13F48(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E45E04);
}

uint64_t sub_1D6F13F74(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4559C);
}

uint64_t sub_1D6F13FA0(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E5B6F0);
}

uint64_t sub_1D6F13FCC(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E44D84);
}

uint64_t sub_1D6F13FF8(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E447D4);
}

uint64_t sub_1D6F14024(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E440E0);
}

uint64_t sub_1D6F14050(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E43B30);
}

uint64_t sub_1D6F1407C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E43484);
}

uint64_t sub_1D6F140A8(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E42ED4);
}

uint64_t sub_1D6F140D4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E42624);
}

uint64_t sub_1D6F14100(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E41EC0);
}

uint64_t sub_1D6F1412C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E4193C);
}

uint64_t sub_1D6F14158(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E41290);
}

uint64_t sub_1D6F14184(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E40B8C);
}

uint64_t sub_1D6F141B0(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E40390);
}

uint64_t sub_1D6F141DC(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3FB78);
}

uint64_t sub_1D6F14208(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3F390);
}

uint64_t sub_1D6F14234(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3ECE4);
}

uint64_t sub_1D6F14260(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3E558);
}

uint64_t sub_1D6F1428C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3DE4C);
}

uint64_t sub_1D6F142B8(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3D7A0);
}

uint64_t sub_1D6F142E4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3D064);
}

uint64_t sub_1D6F14310(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3CAB4);
}

uint64_t sub_1D6F1433C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3C29C);
}

uint64_t sub_1D6F14368(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3BBAC);
}

uint64_t sub_1D6F14394(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3B4E4);
}

uint64_t sub_1D6F143C0(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3AD7C);
}

uint64_t sub_1D6F143EC(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E3A55C);
}

uint64_t sub_1D6F14418(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E39FAC);
}

uint64_t sub_1D6F14444(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E39834);
}

uint64_t sub_1D6F14470(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E39284);
}

uint64_t sub_1D6F1449C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E38BD0);
}

uint64_t sub_1D6F144C8(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E38524);
}

uint64_t sub_1D6F144F4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E37E78);
}

uint64_t sub_1D6F14520(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E37918);
}

uint64_t sub_1D6F1454C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E37368);
}

uint64_t sub_1D6F14578(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E36CB4);
}

uint64_t sub_1D6F145A4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E36540);
}

uint64_t sub_1D6F145D0(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E35E8C);
}

uint64_t sub_1D6F145FC(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E35698);
}

uint64_t sub_1D6F14628(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E350AC);
}

uint64_t sub_1D6F14654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D6F1469C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E349F8);
}

uint64_t sub_1D6F146C8(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E33F28);
}

uint64_t sub_1D6F146F4(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E335A8);
}

uint64_t sub_1D6F14720(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E32FF8);
}

uint64_t sub_1D6F1474C(void *a1)
{
  return sub_1D6F14778(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))sub_1D6E32A48);
}

uint64_t sub_1D6F14778(void *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, void, void, void))
{
  uint64_t v4 = v2[2];
  uint64_t v5 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v6 = v2[5];
  uint64_t v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  return a2(v4, v5, v7, v6, v8[1], *((unsigned __int8 *)v8 + 16), v8[3]);
}

uint64_t sub_1D6F14978(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF620);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v33 = (uint64_t)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v31 = (char *)v22 - v6;
  uint64_t v32 = sub_1D6FA61F0();
  uint64_t v7 = *(void *)(v32 - 8);
  MEMORY[0x1F4188790](v32);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    v22[0] = v1;
    uint64_t v35 = MEMORY[0x1E4FBC860];
    sub_1D6BBD034(0, v10, 0);
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA807A30);
    uint64_t v12 = a1
        + ((*(unsigned __int8 *)(*(void *)(v28 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v28 - 8) + 80));
    uint64_t v27 = *(void *)(*(void *)(v28 - 8) + 72);
    uint64_t v26 = sub_1D6FA2250();
    uint64_t v13 = *(void *)(v26 - 8);
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    uint64_t v24 = v13 + 16;
    uint64_t v25 = v14;
    v22[1] = v7 + 32;
    uint64_t v23 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56);
    os_log_type_t v29 = v9;
    uint64_t v30 = v7;
    uint64_t v15 = (uint64_t)v31;
    do
    {
      int64_t v34 = v10;
      uint64_t v16 = v26;
      v25(v15, v12 + *(int *)(v28 + 80), v26);
      (*v23)(v15, 0, 1, v16);
      sub_1D678AC3C(v15, v33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1D6FA61B0();
      sub_1D6F15820(v15);
      uint64_t v11 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D6BBD034(0, *(void *)(v11 + 16) + 1, 1);
        uint64_t v11 = v35;
      }
      unint64_t v18 = *(void *)(v11 + 16);
      unint64_t v17 = *(void *)(v11 + 24);
      unint64_t v19 = v29;
      int64_t v20 = v34;
      if (v18 >= v17 >> 1)
      {
        sub_1D6BBD034(v17 > 1, v18 + 1, 1);
        uint64_t v11 = v35;
      }
      *(void *)(v11 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v11+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v18, v19, v32);
      uint64_t v35 = v11;
      v12 += v27;
      int64_t v10 = v20 - 1;
    }
    while (v10);
  }
  return v11;
}

void sub_1D6F14CF0(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF620);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v34 - v7;
  id v9 = objc_msgSend(a1, sel_sessionIdentifier);
  if (!v9) {
    goto LABEL_7;
  }
  int64_t v10 = v9;
  uint64_t v11 = sub_1D6FA98E0();

  id v12 = objc_msgSend(a1, sel_catalogWorkoutIdentifier);
  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_7:
    uint64_t v20 = sub_1D6FA2760();
    sub_1D6F15CF0((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v20 - 8) + 104))(v21, *MEMORY[0x1E4F9CE00], v20);
    swift_willThrow();

    return;
  }
  uint64_t v13 = v12;
  v34[5] = sub_1D6FA98E0();
  uint64_t v15 = v14;

  id v16 = objc_msgSend(a1, sel_sessions);
  if (!v16)
  {
    uint64_t v22 = sub_1D6FA2760();
    sub_1D6F15CF0((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v22 - 8) + 104))(v23, *MEMORY[0x1E4F9CE00], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  unint64_t v17 = v16;
  v34[4] = v11;
  v34[7] = v15;
  unint64_t v18 = (void *)MEMORY[0x1D9467FF0]();
  sub_1D6BD1240(v17);
  if (v1)
  {
    swift_bridgeObjectRelease();

    a1 = v17;
LABEL_9:

    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v24 = v19;
  uint64_t v25 = sub_1D6C81D18(v24);

  swift_bridgeObjectRelease();
  id v26 = objc_msgSend(a1, sel_queueIdentifier);
  v34[3] = v25;
  if (v26)
  {
    uint64_t v27 = v26;
    sub_1D6FA98E0();

    id v28 = objc_msgSend(a1, sel_playlistIdentifier);
    if (v28)
    {
      os_log_type_t v29 = v28;
      uint64_t v30 = sub_1D6FA98E0();
      v34[1] = v31;
      v34[2] = v30;
    }
    sub_1D6FA2220();
    uint64_t v33 = sub_1D6FA2250();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v8, 0, 1, v33);
  }
  else
  {
    uint64_t v32 = sub_1D6FA2250();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v8, 1, 1, v32);
  }
  sub_1D678AC3C((uint64_t)v8, (uint64_t)v6);
  sub_1D6FA61B0();

  sub_1D6F15820((uint64_t)v8);
}

void sub_1D6F15128(void *a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF620);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  int64_t v10 = (char *)&v26 - v9;
  sub_1D6FA61C0();
  uint64_t v11 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setSessionIdentifier_, v11);

  sub_1D6FA61D0();
  id v12 = (void *)sub_1D6FA98B0();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_setCatalogWorkoutIdentifier_, v12);

  uint64_t v13 = sub_1D6FA61E0();
  id v14 = a2;
  uint64_t v15 = sub_1D6F15880(v13, (uint64_t)v14);
  if (v2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v16 = v15;
    id v28 = v8;

    sub_1D6C8086C(v16);
    swift_bridgeObjectRelease();
    type metadata accessor for ManagedHealthKitMindfulSession();
    sub_1D6F15CF0(&qword_1EA804080, (void (*)(uint64_t))type metadata accessor for ManagedHealthKitMindfulSession);
    unint64_t v17 = (void *)sub_1D6FA9E60();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setSessions_, v17);

    sub_1D6FA61A0();
    uint64_t v18 = sub_1D6FA2250();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = *(unsigned int (**)(void, void, void))(v19 + 48);
    if (v20(v10, 1, v18) == 1)
    {
      sub_1D6F15820((uint64_t)v10);
      uint64_t v21 = 0;
    }
    else
    {
      sub_1D6FA2230();
      uint64_t v27 = v20;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
      uint64_t v21 = (void *)sub_1D6FA98B0();
      uint64_t v20 = v27;
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = (uint64_t)v28;
    objc_msgSend(a1, sel_setQueueIdentifier_, v21);

    sub_1D6FA61A0();
    if (v20(v22, 1, v18) == 1)
    {
      sub_1D6F15820(v22);
    }
    else
    {
      sub_1D6FA2240();
      uint64_t v24 = v23;
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v22, v18);
      if (v24)
      {
        uint64_t v25 = (void *)sub_1D6FA98B0();
        swift_bridgeObjectRelease();
        objc_msgSend(a1, sel_setPlaylistIdentifier_, v25);
      }
    }
  }
}

uint64_t static HealthKitStandaloneMindfulSessionJob.representativeSamples()()
{
  sub_1D6FA9970();
  sub_1D6FA9C00();
  swift_bridgeObjectRelease();
  sub_1D6FA9970();
  sub_1D6FA4480();
  uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F9DF10];
  sub_1D6F15CF0(&qword_1EBDA8C80, MEMORY[0x1E4F9DF10]);
  sub_1D6F15CF0(&qword_1EBDA8C78, v0);
  sub_1D6FA9E90();
  sub_1D6FA2250();
  sub_1D6FA9BF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA7CA0);
  uint64_t v1 = sub_1D6FA1060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6F14978(v1);
  swift_bridgeObjectRelease();
  return v2;
}

void sub_1D6F15614(unsigned char *a1@<X8>)
{
  *a1 = 51;
}

void sub_1D6F15620(void *a1)
{
}

void sub_1D6F15638(void *a1, void *a2)
{
}

uint64_t sub_1D6F15650(uint64_t a1)
{
  uint64_t result = sub_1D6F15CF0((unint64_t *)&unk_1EBDA8E90, MEMORY[0x1E4F9EBA8]);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D6F156A8()
{
  sub_1D6FA9970();
  sub_1D6FA9C00();
  swift_bridgeObjectRelease();
  sub_1D6FA9970();
  sub_1D6FA4480();
  uint64_t v0 = (void (*)(uint64_t))MEMORY[0x1E4F9DF10];
  sub_1D6F15CF0(&qword_1EBDA8C80, MEMORY[0x1E4F9DF10]);
  sub_1D6F15CF0(&qword_1EBDA8C78, v0);
  sub_1D6FA9E90();
  sub_1D6FA2250();
  sub_1D6FA9BF0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDA7CA0);
  uint64_t v1 = sub_1D6FA1060();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1D6F14978(v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1D6F15820(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA7FF620);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D6F15880(uint64_t a1, uint64_t a2)
{
  uint64_t v37 = a2;
  uint64_t v4 = sub_1D6FA4480();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v36 = (char *)&v29 - v9;
  uint64_t v39 = MEMORY[0x1E4FBC860];
  uint64_t v10 = *(void *)(a1 + 56);
  uint64_t v30 = a1 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  uint64_t v34 = v5 + 32;
  uint64_t v35 = v5 + 16;
  int64_t v31 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v32 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v38 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  unint64_t v33 = 0x80000001D6FC8FE0;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v16 | (v15 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    uint64_t v21 = v36;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v36, *(void *)(v38 + 48) + *(void *)(v5 + 72) * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v21, v4);
    uint64_t v22 = self;
    uint64_t v23 = (void *)sub_1D6FA98B0();
    id v24 = objc_msgSend(v22, sel_insertNewObjectForEntityForName_inManagedObjectContext_, v23, v37);

    type metadata accessor for ManagedHealthKitMindfulSession();
    uint64_t v25 = (void *)swift_dynamicCastClass();
    if (!v25)
    {

      uint64_t v27 = sub_1D6FA2760();
      sub_1D6F15CF0((unint64_t *)&qword_1EBDAFFD8, MEMORY[0x1E4F9CE10]);
      swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v27 - 8) + 104))(v28, *MEMORY[0x1E4F9CDD8], v27);
      swift_willThrow();
LABEL_30:
      (*v32)(v8, v4);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    sub_1D6EA52E8(v25);
    if (v2)
    {

      goto LABEL_30;
    }
    uint64_t v26 = ((uint64_t (*)(char *, uint64_t))*v32)(v8, v4);
    MEMORY[0x1D9466B90](v26);
    if (*(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_1D6FA9C40();
    }
    sub_1D6FA9C80();
    uint64_t result = sub_1D6FA9C20();
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v15++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v15 >= v31) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v15);
    if (!v19) {
      break;
    }
LABEL_17:
    unint64_t v13 = (v19 - 1) & v19;
  }
  int64_t v20 = v15 + 1;
  if (v15 + 1 >= v31) {
    goto LABEL_31;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 2;
  if (v15 + 2 >= v31) {
    goto LABEL_31;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 3;
  if (v15 + 3 >= v31) {
    goto LABEL_31;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v15 + 4;
  if (v15 + 4 >= v31)
  {
LABEL_31:
    swift_release();
    return v39;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
LABEL_16:
    int64_t v15 = v20;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v31) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_17;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1D6F15CF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id ManagedAchievementEnvironmentCache.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAchievementEnvironmentCache.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAchievementEnvironmentCache();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAchievementEnvironmentCache()
{
  return self;
}

id ManagedAchievementEnvironmentCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAchievementEnvironmentCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedAchievementEnvironmentCache.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F15F10()
{
  return MEMORY[0x1E4FBB060];
}

void sub_1D6F15F1C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_1D6FA98E0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  *a3 = v6;
  a3[1] = v8;
}

void sub_1D6F15F80(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v6 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v7 = sub_1D6FA98B0();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  [v6 *a5];
}

uint64_t sub_1D6F15FF0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAchievementEnvironmentCache();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_activePlanFirstCompletedSessionIdentifier()
{
  return sel_activePlanFirstCompletedSessionIdentifier;
}

void sub_1D6F16040(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F16060(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_activePlanMostRecentlyCompletedSessionIdentifier()
{
  return sel_activePlanMostRecentlyCompletedSessionIdentifier;
}

void sub_1D6F1608C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F160AC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_longestWeeklyStreak()
{
  return sel_longestWeeklyStreak;
}

id sub_1D6F160D8@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_longestWeeklyStreak);
  *a2 = result;
  return result;
}

id sub_1D6F1610C(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLongestWeeklyStreak_, *a1);
}

char *keypath_get_selector_numberOfWorkoutsOver5Minutes()
{
  return sel_numberOfWorkoutsOver5Minutes;
}

id sub_1D6F1612C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_numberOfWorkoutsOver5Minutes);
  *a2 = result;
  return result;
}

id sub_1D6F16160(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNumberOfWorkoutsOver5Minutes_, *a1);
}

char *keypath_get_selector_currentBestEnergyBurnedPerModality()
{
  return sel_currentBestEnergyBurnedPerModality;
}

id sub_1D6F16180@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_currentBestEnergyBurnedPerModality);
  *a2 = result;
  return result;
}

id sub_1D6F161BC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCurrentBestEnergyBurnedPerModality_, *a1);
}

char *keypath_get_selector_currentStreak()
{
  return sel_currentStreak;
}

id sub_1D6F161DC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_currentStreak);
  *a2 = result;
  return result;
}

id sub_1D6F16218(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCurrentStreak_, *a1);
}

char *keypath_get_selector_numberOfGuidedWorkoutsOver5MinutesPerModality()
{
  return sel_numberOfGuidedWorkoutsOver5MinutesPerModality;
}

id sub_1D6F16238@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_numberOfGuidedWorkoutsOver5MinutesPerModality);
  *a2 = result;
  return result;
}

id sub_1D6F16274(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNumberOfGuidedWorkoutsOver5MinutesPerModality_, *a1);
}

char *keypath_get_selector_numberOfWorkoutsOver5MinutesPerModality()
{
  return sel_numberOfWorkoutsOver5MinutesPerModality;
}

id sub_1D6F16294@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_numberOfWorkoutsOver5MinutesPerModality);
  *a2 = result;
  return result;
}

id sub_1D6F162D0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setNumberOfWorkoutsOver5MinutesPerModality_, *a1);
}

id ManagedAchievementNotificationRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAchievementNotificationRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAchievementNotificationRecord();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAchievementNotificationRecord()
{
  return self;
}

id ManagedAchievementNotificationRecord.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAchievementNotificationRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F16450(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_templateUniqueName);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F164B8(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setTemplateUniqueName_);
}

id static ManagedAchievementNotificationRecord.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F16594@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_datePresented);
  if (v3)
  {
    id v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F1665C(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDatePresented_, v10);
}

uint64_t sub_1D6F16788@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAchievementNotificationRecord();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_datePresented()
{
  return sel_datePresented;
}

id ManagedAchievementWeeklyStreak.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAchievementWeeklyStreak.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAchievementWeeklyStreak();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAchievementWeeklyStreak()
{
  return self;
}

id ManagedAchievementWeeklyStreak.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAchievementWeeklyStreak();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedAchievementWeeklyStreak.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F169C0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_firstWeekdayOfStreakEnd);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F16A88(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setFirstWeekdayOfStreakEnd_, v10);
}

uint64_t sub_1D6F16BB4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAchievementWeeklyStreak();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_firstWeekdayOfStreakEnd()
{
  return sel_firstWeekdayOfStreakEnd;
}

char *keypath_get_selector_length()
{
  return sel_length;
}

id sub_1D6F16C18@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_length);
  *a2 = result;
  return result;
}

id sub_1D6F16C4C(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLength_, *a1);
}

char *keypath_get_selector_achievementEnvironmentCache()
{
  return sel_achievementEnvironmentCache;
}

id sub_1D6F16C6C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_achievementEnvironmentCache);
  *a2 = result;
  return result;
}

id sub_1D6F16CA8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAchievementEnvironmentCache_, *a1);
}

id ManagedAlternativeActivityType.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAlternativeActivityType.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAlternativeActivityType();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAlternativeActivityType()
{
  return self;
}

id ManagedAlternativeActivityType.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAlternativeActivityType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F16E28(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_alternativeActivityType);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F16E90(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setAlternativeActivityType_);
}

id static ManagedAlternativeActivityType.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F16F6C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAlternativeActivityType();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_modalityReference()
{
  return sel_modalityReference;
}

id sub_1D6F16FC4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_modalityReference);
  *a2 = result;
  return result;
}

id sub_1D6F17000(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setModalityReference_, *a1);
}

id ManagedArchivedSession.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedArchivedSession.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedArchivedSession();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedArchivedSession()
{
  return self;
}

id ManagedArchivedSession.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedArchivedSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F17180(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1718C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F17198(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F171A4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1D6F171B0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_startDate);
  if (v3)
  {
    id v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F17278(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setStartDate_, v10);
}

id sub_1D6F173A4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_percentageCompleted);
  *a2 = v4;
  return result;
}

id sub_1D6F173D8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPercentageCompleted_, *a1);
}

id sub_1D6F173EC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F17420(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

id static ManagedArchivedSession.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F174A0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedArchivedSession();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F174E4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_activityType);
  *a2 = result;
  return result;
}

id sub_1D6F17518(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setActivityType_, *a1);
}

id sub_1D6F1752C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F17560(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

id sub_1D6F17574@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_percentageCompleted);
  *a2 = v4;
  return result;
}

id sub_1D6F175A8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPercentageCompleted_, *a1);
}

char *keypath_get_selector_queueIdentifier()
{
  return sel_queueIdentifier;
}

void sub_1D6F175C8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F175E8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F17608(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F17628(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_watchConnectionState()
{
  return sel_watchConnectionState;
}

void sub_1D6F1765C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1767C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1769C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F176BC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_scoreSummary()
{
  return sel_scoreSummary;
}

id sub_1D6F176E8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_scoreSummary);
  *a2 = result;
  return result;
}

id sub_1D6F17724(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setScoreSummary_, *a1);
}

id ManagedArchivedWorkoutPlanSession.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedArchivedWorkoutPlanSession.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedArchivedWorkoutPlanSession();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedArchivedWorkoutPlanSession()
{
  return self;
}

id ManagedArchivedWorkoutPlanSession.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedArchivedWorkoutPlanSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F178A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_sessionIdentifier);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F1790C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setSessionIdentifier_);
}

uint64_t sub_1D6F1797C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_planIdentifier);
  if (v3)
  {
    id v4 = v3;
    sub_1D6FA0600();

    uint64_t v5 = sub_1D6FA0620();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA0620();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F17A44(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD890);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6F17CD0(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA0620();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA05E0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setPlanIdentifier_, v10);
}

id sub_1D6F17B70@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_reference);
  *a2 = result;
  return result;
}

id sub_1D6F17BAC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setReference_, *a1);
}

id static ManagedArchivedWorkoutPlanSession.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F17C2C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedArchivedWorkoutPlanSession();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F17C80@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_reference);
  *a2 = result;
  return result;
}

id sub_1D6F17CBC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setReference_, *a1);
}

uint64_t sub_1D6F17CD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD890);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id ManagedAssetBundle.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAssetBundle.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAssetBundle();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAssetBundle()
{
  return self;
}

id ManagedAssetBundle.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAssetBundle();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D6F17EA4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_reason);
  *a2 = result;
  return result;
}

id sub_1D6F17ED8(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setReason_, *a1);
}

void sub_1D6F17EEC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F17EF8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F17F04(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F17F10(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F17F1C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_loadStatus);
  *a2 = result;
  return result;
}

id sub_1D6F17F50(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLoadStatus_, *a1);
}

id static ManagedAssetBundle.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F17FD0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_dateRequested);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F18098(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDateRequested_, v10);
}

uint64_t sub_1D6F181C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAssetBundle();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_dateRequested()
{
  return sel_dateRequested;
}

void sub_1D6F1821C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1823C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1825C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1827C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F1829C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_loadStatus);
  *a2 = result;
  return result;
}

id sub_1D6F182D0(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLoadStatus_, *a1);
}

id sub_1D6F182E4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_reason);
  *a2 = result;
  return result;
}

id sub_1D6F18318(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setReason_, *a1);
}

char *keypath_get_selector_requestingDeviceIdentifier()
{
  return sel_requestingDeviceIdentifier;
}

void sub_1D6F18338(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18358(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F18378(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18398(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedAssetBundleLoadFailure.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAssetBundleLoadFailure.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAssetBundleLoadFailure();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAssetBundleLoadFailure()
{
  return self;
}

id ManagedAssetBundleLoadFailure.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAssetBundleLoadFailure();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F18524(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18530(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1853C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18548(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedAssetBundleLoadFailure.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F185C0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_date);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F18688(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDate_, v10);
}

uint64_t sub_1D6F187B4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAssetBundleLoadFailure();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F187F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18818(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_date()
{
  return sel_date;
}

void sub_1D6F1884C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1886C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedAssetEntry.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAssetEntry.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAssetEntry();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAssetEntry()
{
  return self;
}

id ManagedAssetEntry.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAssetEntry();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F189F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18A04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedAssetEntry.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F18A7C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAssetEntry();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F18AC0@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_loadStatus);
  *a2 = result;
  return result;
}

id sub_1D6F18AF4(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLoadStatus_, *a1);
}

char *keypath_get_selector_localURL()
{
  return sel_localURL;
}

void sub_1D6F18B14(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18B34(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F18B54(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18B74(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_size()
{
  return sel_size;
}

id sub_1D6F18BA0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_size);
  *a2 = result;
  return result;
}

id sub_1D6F18BD4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSize_, *a1);
}

id ManagedAssetLoadFailure.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAssetLoadFailure.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAssetLoadFailure();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAssetLoadFailure()
{
  return self;
}

id ManagedAssetLoadFailure.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAssetLoadFailure();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedAssetLoadFailure.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F18DC0(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDate_, v10);
}

uint64_t sub_1D6F18EEC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAssetLoadFailure();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F18F30(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18F50(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F18F78(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F18F98(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedAssetRequestKeyMetadata.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAssetRequestKeyMetadata.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAssetRequestKeyMetadata();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAssetRequestKeyMetadata()
{
  return self;
}

id ManagedAssetRequestKeyMetadata.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAssetRequestKeyMetadata();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D6F19124@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_renewDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F191EC(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setRenewDate_, v10);
}

void sub_1D6F19318(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19324(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedAssetRequestKeyMetadata.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1939C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAssetRequestKeyMetadata();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_canFreeDeviceSlot()
{
  return sel_canFreeDeviceSlot;
}

id sub_1D6F193EC@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_canFreeDeviceSlot);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D6F19420(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCanFreeDeviceSlot_, *a1);
}

void sub_1D6F19434(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19454(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_masterPlaylist()
{
  return sel_masterPlaylist;
}

void sub_1D6F19480(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F194A0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_slotIdentifier()
{
  return sel_slotIdentifier;
}

void sub_1D6F194D4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F194F4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F19514(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19534(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F19554@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_version);
  *a2 = result;
  return result;
}

id sub_1D6F19588(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVersion_, *a1);
}

void sub_1D6F1959C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F195BC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedAssetRequestMediaStreamMetadata.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAssetRequestMediaStreamMetadata.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAssetRequestMediaStreamMetadata();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAssetRequestMediaStreamMetadata()
{
  return self;
}

id ManagedAssetRequestMediaStreamMetadata.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAssetRequestMediaStreamMetadata();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedAssetRequestMediaStreamMetadata.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F197B4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAssetRequestMediaStreamMetadata();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F197F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19818(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_thumbnailURL()
{
  return sel_thumbnailURL;
}

void sub_1D6F19844(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19864(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_title()
{
  return sel_title;
}

void sub_1D6F19890(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F198B0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedAssetRequestReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAssetRequestReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAssetRequestReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAssetRequestReference()
{
  return self;
}

id ManagedAssetRequestReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAssetRequestReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D6F19A3C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_expirationTime);
  *a2 = v4;
  return result;
}

id sub_1D6F19A70(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setExpirationTime_, *a1);
}

void sub_1D6F19A84(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19A90(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedAssetRequestReference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F19B08@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAssetRequestReference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F19B4C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19B6C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F19B8C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_expirationTime);
  *a2 = v4;
  return result;
}

id sub_1D6F19BC0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setExpirationTime_, *a1);
}

void sub_1D6F19BD4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19BF4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_priority()
{
  return sel_priority;
}

id sub_1D6F19C20@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_priority);
  *a2 = result;
  return result;
}

id sub_1D6F19C54(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPriority_, *a1);
}

void sub_1D6F19C68(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19C88(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_requestTime()
{
  return sel_requestTime;
}

id sub_1D6F19CB4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_requestTime);
  *a2 = v4;
  return result;
}

id sub_1D6F19CE8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRequestTime_, *a1);
}

void sub_1D6F19CFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19D1C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedAssetResumableLoad.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedAssetResumableLoad.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedAssetResumableLoad();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedAssetResumableLoad()
{
  return self;
}

id ManagedAssetResumableLoad.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedAssetResumableLoad();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedAssetResumableLoad.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F19F14@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedAssetResumableLoad();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_downloadToken()
{
  return sel_downloadToken;
}

id sub_1D6F19F64@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_downloadToken);
  *a2 = result;
  return result;
}

id sub_1D6F19F98(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDownloadToken_, *a1);
}

void sub_1D6F19FAC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F19FCC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F19FEC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1A00C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedBodyFocus.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBodyFocus.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedBodyFocus();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedBodyFocus()
{
  return self;
}

id ManagedBodyFocus.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedBodyFocus();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedBodyFocus.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  uint64_t v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1A204@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedBodyFocus();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1A248(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1A268(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_name()
{
  return sel_name;
}

void sub_1D6F1A294(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1A2B4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedBodyFocusIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBodyFocusIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedBodyFocusIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedBodyFocusIdentifier()
{
  return self;
}

id ManagedBodyFocusIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedBodyFocusIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D6F1A440()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  if (!v1) {
    return 0;
  }
  objc_super v2 = v1;
  uint64_t v3 = sub_1D6FA98E0();

  return v3;
}

id static ManagedBodyFocusIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F1A514(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F1A57C(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setIdentifier_);
}

uint64_t sub_1D6F1A5EC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedBodyFocusIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogWorkoutBodyFocuses()
{
  return sel_catalogWorkoutBodyFocuses;
}

id sub_1D6F1A644@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutBodyFocuses);
  *a2 = result;
  return result;
}

id sub_1D6F1A680(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutBodyFocuses_, *a1);
}

id ManagedBookmark.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBookmark.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedBookmark();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedBookmark()
{
  return self;
}

id ManagedBookmark.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedBookmark();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F1A800(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1A80C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1A818(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1A824(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1D6F1A830@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_dateBookmarked);
  if (v3)
  {
    id v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F1A8F8(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDateBookmarked_, v10);
}

id static ManagedBookmark.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1AA98@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedBookmark();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1AAE4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1AB04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1AB24(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1AB44(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedBurnBarDisplayPreference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedBurnBarDisplayPreference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedBurnBarDisplayPreference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedBurnBarDisplayPreference()
{
  return self;
}

id ManagedBurnBarDisplayPreference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedBurnBarDisplayPreference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F1ACD0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1ACDC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedBurnBarDisplayPreference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1AD54@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedBurnBarDisplayPreference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_behavior()
{
  return sel_behavior;
}

void sub_1D6F1ADA4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1ADC4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1ADE4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1AE04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedCatalogAccessibilityFeature.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogAccessibilityFeature.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogAccessibilityFeature();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogAccessibilityFeature()
{
  return self;
}

id ManagedCatalogAccessibilityFeature.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogAccessibilityFeature();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F1AF90(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_feature);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F1AFF8(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setFeature_);
}

id static ManagedCatalogAccessibilityFeature.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1B0D4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogAccessibilityFeature();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogProgramMetadata()
{
  return sel_catalogProgramMetadata;
}

id sub_1D6F1B12C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F1B168(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramMetadata_, *a1);
}

char *keypath_get_selector_catalogWorkoutMetadata()
{
  return sel_catalogWorkoutMetadata;
}

id sub_1D6F1B188@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F1B1C4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMetadata_, *a1);
}

char *keypath_get_selector_languageDisclaimer()
{
  return sel_languageDisclaimer;
}

id sub_1D6F1B1E4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_languageDisclaimer);
  *a2 = result;
  return result;
}

id sub_1D6F1B220(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLanguageDisclaimer_, *a1);
}

id ManagedCatalogFilterPropertyType.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogFilterPropertyType.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogFilterPropertyType();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogFilterPropertyType()
{
  return self;
}

id ManagedCatalogFilterPropertyType.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogFilterPropertyType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F1B3A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_propertyType);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F1B408(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setPropertyType_);
}

id static ManagedCatalogFilterPropertyType.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1B4E4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogFilterPropertyType();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogModalityReference()
{
  return sel_catalogModalityReference;
}

id sub_1D6F1B53C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogModalityReference);
  *a2 = result;
  return result;
}

id sub_1D6F1B578(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogModalityReference_, *a1);
}

id ManagedCatalogMetadataJournal.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogMetadataJournal.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogMetadataJournal();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogMetadataJournal()
{
  return self;
}

id ManagedCatalogMetadataJournal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogMetadataJournal();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D6F1B6F8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_timestamp);
  *a2 = v4;
  return result;
}

id sub_1D6F1B72C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestamp_, *a1);
}

id static ManagedCatalogMetadataJournal.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1B7AC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogMetadataJournal();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F1B7F8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_timestamp);
  *a2 = v4;
  return result;
}

id sub_1D6F1B82C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestamp_, *a1);
}

id ManagedCatalogModalityFeature.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogModalityFeature.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogModalityFeature();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogModalityFeature()
{
  return self;
}

id ManagedCatalogModalityFeature.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogModalityFeature();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogModalityFeature.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1BA18@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogModalityFeature();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F1BA64@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogModalityReference);
  *a2 = result;
  return result;
}

id sub_1D6F1BAA0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogModalityReference_, *a1);
}

id ManagedCatalogModalityMetadata.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogModalityMetadata.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogModalityMetadata();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogModalityMetadata()
{
  return self;
}

id ManagedCatalogModalityMetadata.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogModalityMetadata();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogModalityMetadata.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F1BC8C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_artwork);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA03E0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F1BCF4(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1D6FA03C0();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setArtwork_);
}

uint64_t sub_1D6F1BD6C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogModalityMetadata();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_abridgedSummary()
{
  return sel_abridgedSummary;
}

void sub_1D6F1BDBC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1BDDC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_artwork()
{
  return sel_artwork;
}

void sub_1D6F1BE10(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1BE30(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_sharingURL()
{
  return sel_sharingURL;
}

void sub_1D6F1BE5C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1BE7C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_summary()
{
  return sel_summary;
}

void sub_1D6F1BEA8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1BEC8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_preview()
{
  return sel_preview;
}

id sub_1D6F1BEF4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_preview);
  *a2 = result;
  return result;
}

id sub_1D6F1BF30(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPreview_, *a1);
}

id ManagedCatalogModalityReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogModalityReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogModalityReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogModalityReference()
{
  return self;
}

id ManagedCatalogModalityReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogModalityReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F1C0B0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1C0BC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedCatalogModalityReference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1C134@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogModalityReference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1C178(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1C198(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1C1B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1C1D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1C1F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1C218(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_alternativeActivityTypes()
{
  return sel_alternativeActivityTypes;
}

id sub_1D6F1C244@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_alternativeActivityTypes);
  *a2 = result;
  return result;
}

id sub_1D6F1C280(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAlternativeActivityTypes_, *a1);
}

char *keypath_get_selector_features()
{
  return sel_features;
}

id sub_1D6F1C2A0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_features);
  *a2 = result;
  return result;
}

id sub_1D6F1C2DC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFeatures_, *a1);
}

char *keypath_get_selector_filterPropertyTypes()
{
  return sel_filterPropertyTypes;
}

id sub_1D6F1C2FC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_filterPropertyTypes);
  *a2 = result;
  return result;
}

id sub_1D6F1C338(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFilterPropertyTypes_, *a1);
}

char *keypath_get_selector_healthKitActivityTypes()
{
  return sel_healthKitActivityTypes;
}

id sub_1D6F1C358@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_healthKitActivityTypes);
  *a2 = result;
  return result;
}

id sub_1D6F1C394(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHealthKitActivityTypes_, *a1);
}

id ManagedCatalogPreview.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogPreview.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogPreview();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogPreview()
{
  return self;
}

id ManagedCatalogPreview.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogPreview();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogPreview.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1C580@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogPreview();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1C5C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1C5E4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_streamingProgramIdentifier()
{
  return sel_streamingProgramIdentifier;
}

void sub_1D6F1C610(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1C630(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_streamingURL()
{
  return sel_streamingURL;
}

void sub_1D6F1C65C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1C67C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_catalogModalityMetadata()
{
  return sel_catalogModalityMetadata;
}

id sub_1D6F1C6A8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogModalityMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F1C6E4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogModalityMetadata_, *a1);
}

id sub_1D6F1C6F8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F1C734(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramMetadata_, *a1);
}

id sub_1D6F1C748@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F1C784(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMetadata_, *a1);
}

char *keypath_get_selector_trainerMetadata()
{
  return sel_trainerMetadata;
}

id sub_1D6F1C7A4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trainerMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F1C7E0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrainerMetadata_, *a1);
}

id ManagedCatalogProgramMetadata.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogProgramMetadata.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogProgramMetadata();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogProgramMetadata()
{
  return self;
}

id ManagedCatalogProgramMetadata.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogProgramMetadata();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogProgramMetadata.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1C9CC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogProgramMetadata();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1CA18(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1CA38(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_location()
{
  return sel_location;
}

void sub_1D6F1CA64(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1CA84(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_previewStreamingURL()
{
  return sel_previewStreamingURL;
}

void sub_1D6F1CAB0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1CAD0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1CAF0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1CB10(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1CB30(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1CB50(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1CB70(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1CB90(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_accessibilityFeatures()
{
  return sel_accessibilityFeatures;
}

id sub_1D6F1CBBC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accessibilityFeatures);
  *a2 = result;
  return result;
}

id sub_1D6F1CBF8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccessibilityFeatures_, *a1);
}

char *keypath_get_selector_contributors()
{
  return sel_contributors;
}

id sub_1D6F1CC18@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contributors);
  *a2 = result;
  return result;
}

id sub_1D6F1CC54(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContributors_, *a1);
}

id sub_1D6F1CC68@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_preview);
  *a2 = result;
  return result;
}

id sub_1D6F1CCA4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPreview_, *a1);
}

id ManagedCatalogProgramReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogProgramReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogProgramReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogProgramReference()
{
  return self;
}

id ManagedCatalogProgramReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogProgramReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogProgramReference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1CE90@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogProgramReference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1CED4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1CEF4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1CF14(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1CF34(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1CF54(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1CF74(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_contributorIdentifierss()
{
  return sel_contributorIdentifierss;
}

id sub_1D6F1CFA0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contributorIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1CFDC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContributorIdentifierss_, *a1);
}

char *keypath_get_selector_equipmentIdentifierss()
{
  return sel_equipmentIdentifierss;
}

id sub_1D6F1CFFC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_equipmentIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1D038(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEquipmentIdentifierss_, *a1);
}

char *keypath_get_selector_modalityIdentifierss()
{
  return sel_modalityIdentifierss;
}

id sub_1D6F1D058@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_modalityIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1D094(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setModalityIdentifierss_, *a1);
}

char *keypath_get_selector_musicGenreIdentifierss()
{
  return sel_musicGenreIdentifierss;
}

id sub_1D6F1D0B4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_musicGenreIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1D0F0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMusicGenreIdentifierss_, *a1);
}

char *keypath_get_selector_themeIdentifierss()
{
  return sel_themeIdentifierss;
}

id sub_1D6F1D110@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_themeIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1D14C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setThemeIdentifierss_, *a1);
}

char *keypath_get_selector_trainerIdentifierss()
{
  return sel_trainerIdentifierss;
}

id sub_1D6F1D16C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trainerIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1D1A8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrainerIdentifierss_, *a1);
}

char *keypath_get_selector_workoutIdentifierss()
{
  return sel_workoutIdentifierss;
}

id sub_1D6F1D1C8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_workoutIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1D204(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setWorkoutIdentifierss_, *a1);
}

id ManagedCatalogSyncAnchor.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogSyncAnchor.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogSyncAnchor();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogSyncAnchor()
{
  return self;
}

id ManagedCatalogSyncAnchor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogSyncAnchor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogSyncAnchor.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F1D3F0(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDate_, v10);
}

uint64_t sub_1D6F1D51C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogSyncAnchor();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_build()
{
  return sel_build;
}

void sub_1D6F1D56C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1D58C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_status()
{
  return sel_status;
}

void sub_1D6F1D5C0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1D5E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_token()
{
  return sel_token;
}

void sub_1D6F1D60C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1D62C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedCatalogTheme.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogTheme.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogTheme();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogTheme()
{
  return self;
}

id ManagedCatalogTheme.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogTheme();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogTheme.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1D824@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogTheme();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1D868(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1D888(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1D8A8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1D8C8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_sortOrder()
{
  return sel_sortOrder;
}

id sub_1D6F1D8F4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sortOrder);
  *a2 = result;
  return result;
}

id sub_1D6F1D928(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortOrder_, *a1);
}

char *keypath_get_selector_category()
{
  return sel_category;
}

id sub_1D6F1D948@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_category);
  *a2 = result;
  return result;
}

id sub_1D6F1D984(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCategory_, *a1);
}

id ManagedCatalogThemeCategory.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogThemeCategory.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogThemeCategory();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogThemeCategory()
{
  return self;
}

id ManagedCatalogThemeCategory.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogThemeCategory();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogThemeCategory.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1DB70@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogThemeCategory();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1DBB4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1DBD4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1DBF4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1DC14(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F1DC34@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sortOrder);
  *a2 = result;
  return result;
}

id sub_1D6F1DC68(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSortOrder_, *a1);
}

char *keypath_get_selector_themes()
{
  return sel_themes;
}

id sub_1D6F1DC88@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_themes);
  *a2 = result;
  return result;
}

id sub_1D6F1DCC4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setThemes_, *a1);
}

id ManagedCatalogTipCategoryIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogTipCategoryIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogTipCategoryIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogTipCategoryIdentifier()
{
  return self;
}

id ManagedCatalogTipCategoryIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogTipCategoryIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogTipCategoryIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1DEB0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogTipCategoryIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogTipReferenceCategories()
{
  return sel_catalogTipReferenceCategories;
}

id sub_1D6F1DF08@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogTipReferenceCategories);
  *a2 = result;
  return result;
}

id sub_1D6F1DF44(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogTipReferenceCategories_, *a1);
}

id ManagedCatalogTipCategoryReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogTipCategoryReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogTipCategoryReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogTipCategoryReference()
{
  return self;
}

id ManagedCatalogTipCategoryReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogTipCategoryReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogTipCategoryReference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1E130@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogTipCategoryReference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1E174(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1E194(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1E1B4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1E1D4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedCatalogTipJournal.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogTipJournal.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogTipJournal();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogTipJournal()
{
  return self;
}

id ManagedCatalogTipJournal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogTipJournal();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F1E360(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1E36C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1E378(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1E384(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedCatalogTipJournal.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F1E3FC(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDate_, v10);
}

uint64_t sub_1D6F1E528@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogTipJournal();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_elapsedTime()
{
  return sel_elapsedTime;
}

id sub_1D6F1E580@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_elapsedTime);
  *a2 = v4;
  return result;
}

id sub_1D6F1E5B4(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setElapsedTime_, *a1);
}

void sub_1D6F1E5C8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1E5E8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1E608(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1E628(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_totalTime()
{
  return sel_totalTime;
}

id sub_1D6F1E654@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_totalTime);
  *a2 = v4;
  return result;
}

id sub_1D6F1E688(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTotalTime_, *a1);
}

id ManagedCatalogTipReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogTipReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogTipReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogTipReference()
{
  return self;
}

id ManagedCatalogTipReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogTipReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogTipReference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1E874@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogTipReference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1E8B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1E8D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1E8F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1E918(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_categoryIdentifiers()
{
  return sel_categoryIdentifiers;
}

id sub_1D6F1E944@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_categoryIdentifiers);
  *a2 = result;
  return result;
}

id sub_1D6F1E980(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCategoryIdentifiers_, *a1);
}

id ManagedCatalogWorkoutMetadata.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogWorkoutMetadata.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogWorkoutMetadata();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogWorkoutMetadata()
{
  return self;
}

id ManagedCatalogWorkoutMetadata.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogWorkoutMetadata();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCatalogWorkoutMetadata.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1EB6C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogWorkoutMetadata();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1EBB8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1EBD8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1EBF8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1EC18(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_musicPlaylistIdentifier()
{
  return sel_musicPlaylistIdentifier;
}

void sub_1D6F1EC44(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1EC64(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_musicPlaylistURL()
{
  return sel_musicPlaylistURL;
}

void sub_1D6F1EC90(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1ECB0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1ECD0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1ECF0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1ED10(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1ED30(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1ED50(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1ED70(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1ED90(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1EDB0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1EDD0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1EDF0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F1EE10@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_accessibilityFeatures);
  *a2 = result;
  return result;
}

id sub_1D6F1EE4C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAccessibilityFeatures_, *a1);
}

char *keypath_get_selector_coachingEvents()
{
  return sel_coachingEvents;
}

id sub_1D6F1EE6C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_coachingEvents);
  *a2 = result;
  return result;
}

id sub_1D6F1EEA8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCoachingEvents_, *a1);
}

char *keypath_get_selector_commentaryEvents()
{
  return sel_commentaryEvents;
}

id sub_1D6F1EEC8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_commentaryEvents);
  *a2 = result;
  return result;
}

id sub_1D6F1EF04(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCommentaryEvents_, *a1);
}

id sub_1D6F1EF18@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contributors);
  *a2 = result;
  return result;
}

id sub_1D6F1EF54(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContributors_, *a1);
}

char *keypath_get_selector_languageDisclaimers()
{
  return sel_languageDisclaimers;
}

id sub_1D6F1EF74@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_languageDisclaimers);
  *a2 = result;
  return result;
}

id sub_1D6F1EFB0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLanguageDisclaimers_, *a1);
}

char *keypath_get_selector_mediaMoments()
{
  return sel_mediaMoments;
}

id sub_1D6F1EFD0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_mediaMoments);
  *a2 = result;
  return result;
}

id sub_1D6F1F00C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMediaMoments_, *a1);
}

char *keypath_get_selector_musicTracks()
{
  return sel_musicTracks;
}

id sub_1D6F1F02C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_musicTracks);
  *a2 = result;
  return result;
}

id sub_1D6F1F068(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMusicTracks_, *a1);
}

id sub_1D6F1F07C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_preview);
  *a2 = result;
  return result;
}

id sub_1D6F1F0B8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPreview_, *a1);
}

char *keypath_get_selector_trainerEvents()
{
  return sel_trainerEvents;
}

id sub_1D6F1F0D8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trainerEvents);
  *a2 = result;
  return result;
}

id sub_1D6F1F114(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrainerEvents_, *a1);
}

id ManagedCatalogWorkoutReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogWorkoutReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogWorkoutReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogWorkoutReference()
{
  return self;
}

id ManagedCatalogWorkoutReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogWorkoutReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F1F294(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F2A0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1F2AC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F2B8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1F2C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F2D0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1F2DC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F2E8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedCatalogWorkoutReference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1F360@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogWorkoutReference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F1F3A4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F3C4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1F3E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F404(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F1F424@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F1F458(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

char *keypath_get_selector_episode()
{
  return sel_episode;
}

id sub_1D6F1F478@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_episode);
  *a2 = result;
  return result;
}

id sub_1D6F1F4AC(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEpisode_, *a1);
}

void sub_1D6F1F4C0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F4E0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1F500(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F520(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1F540(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F560(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F1F580(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1F5A0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_bodyFocusIdentifierss()
{
  return sel_bodyFocusIdentifierss;
}

id sub_1D6F1F5CC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_bodyFocusIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1F608(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBodyFocusIdentifierss_, *a1);
}

id sub_1D6F1F61C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contributorIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1F658(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContributorIdentifierss_, *a1);
}

id sub_1D6F1F66C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_equipmentIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1F6A8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEquipmentIdentifierss_, *a1);
}

id sub_1D6F1F6BC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_musicGenreIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1F6F8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMusicGenreIdentifierss_, *a1);
}

char *keypath_get_selector_skillLevelIdentifierss()
{
  return sel_skillLevelIdentifierss;
}

id sub_1D6F1F718@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_skillLevelIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1F754(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSkillLevelIdentifierss_, *a1);
}

id sub_1D6F1F768@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_themeIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1F7A4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setThemeIdentifierss_, *a1);
}

id sub_1D6F1F7B8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trainerIdentifierss);
  *a2 = result;
  return result;
}

id sub_1D6F1F7F4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrainerIdentifierss_, *a1);
}

char *keypath_get_selector_traits()
{
  return sel_traits;
}

id sub_1D6F1F814@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_traits);
  *a2 = result;
  return result;
}

id sub_1D6F1F850(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTraits_, *a1);
}

id ManagedCatalogWorkoutTrait.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCatalogWorkoutTrait.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCatalogWorkoutTrait();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCatalogWorkoutTrait()
{
  return self;
}

id ManagedCatalogWorkoutTrait.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCatalogWorkoutTrait();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F1F9D0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_trait);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F1FA38(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setTrait_);
}

id static ManagedCatalogWorkoutTrait.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1FB14@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCatalogWorkoutTrait();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogWorkoutReference()
{
  return sel_catalogWorkoutReference;
}

id sub_1D6F1FB6C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutReference);
  *a2 = result;
  return result;
}

id sub_1D6F1FBA8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutReference_, *a1);
}

id ManagedCoachingEvent.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCoachingEvent.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCoachingEvent();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCoachingEvent()
{
  return self;
}

id ManagedCoachingEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCoachingEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCoachingEvent.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F1FD94@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCoachingEvent();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F1FDD8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F1FE0C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

void sub_1D6F1FE20(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1FE40(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_intensity()
{
  return sel_intensity;
}

void sub_1D6F1FE6C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F1FE8C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_leadDuration()
{
  return sel_leadDuration;
}

id sub_1D6F1FEB8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_leadDuration);
  *a2 = v4;
  return result;
}

id sub_1D6F1FEEC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLeadDuration_, *a1);
}

char *keypath_get_selector_rangeLowerBound()
{
  return sel_rangeLowerBound;
}

id sub_1D6F1FF0C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_rangeLowerBound);
  *a2 = result;
  return result;
}

id sub_1D6F1FF40(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRangeLowerBound_, *a1);
}

char *keypath_get_selector_rangeUpperBound()
{
  return sel_rangeUpperBound;
}

id sub_1D6F1FF60@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_rangeUpperBound);
  *a2 = result;
  return result;
}

id sub_1D6F1FF94(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRangeUpperBound_, *a1);
}

char *keypath_get_selector_shouldShowPlus()
{
  return sel_shouldShowPlus;
}

id sub_1D6F1FFB4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_shouldShowPlus);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D6F1FFE8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setShouldShowPlus_, *a1);
}

char *keypath_get_selector_startTime()
{
  return sel_startTime;
}

id sub_1D6F20008@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_startTime);
  *a2 = v4;
  return result;
}

id sub_1D6F2003C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartTime_, *a1);
}

void sub_1D6F20050(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F20070(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F20090@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F200CC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMetadata_, *a1);
}

id ManagedCommentaryEvent.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCommentaryEvent.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCommentaryEvent();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCommentaryEvent()
{
  return self;
}

id ManagedCommentaryEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCommentaryEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedCommentaryEvent.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F202B8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCommentaryEvent();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F202FC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F20330(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

id sub_1D6F20344@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_startTime);
  *a2 = v4;
  return result;
}

id sub_1D6F20378(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartTime_, *a1);
}

char *keypath_get_selector_topic()
{
  return sel_topic;
}

void sub_1D6F20398(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F203B8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_topicIdentifier()
{
  return sel_topicIdentifier;
}

void sub_1D6F203E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F20404(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F20424@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F20460(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMetadata_, *a1);
}

id ManagedCompletedMarketingVideo.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedCompletedMarketingVideo.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedCompletedMarketingVideo();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedCompletedMarketingVideo()
{
  return self;
}

id ManagedCompletedMarketingVideo.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedCompletedMarketingVideo();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D6F205E0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_dateWatched);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F206A8(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDateWatched_, v10);
}

id static ManagedCompletedMarketingVideo.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F20840@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedCompletedMarketingVideo();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id ManagedConfiguration.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedConfiguration.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedConfiguration();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedConfiguration()
{
  return self;
}

id ManagedConfiguration.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedConfiguration();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedConfiguration.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F20A6C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_data);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA03E0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F20AD4(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1D6FA03C0();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setData_);
}

uint64_t sub_1D6F20B4C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedConfiguration();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_data()
{
  return sel_data;
}

id ManagedContributor.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedContributor.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedContributor();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedContributor()
{
  return self;
}

id ManagedContributor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedContributor();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedContributor.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F20D7C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedContributor();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_bio()
{
  return sel_bio;
}

void sub_1D6F20DCC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F20DEC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F20E0C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F20E2C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F20E4C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F20E6C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_role()
{
  return sel_role;
}

void sub_1D6F20E98(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F20EB8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F20ED8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F20F14(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramMetadata_, *a1);
}

id sub_1D6F20F28@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F20F64(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMetadata_, *a1);
}

char *keypath_get_selector_socialMediaHandles()
{
  return sel_socialMediaHandles;
}

id sub_1D6F20F84@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_socialMediaHandles);
  *a2 = result;
  return result;
}

id sub_1D6F20FC0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSocialMediaHandles_, *a1);
}

id ManagedContributorIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedContributorIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedContributorIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedContributorIdentifier()
{
  return self;
}

id ManagedContributorIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedContributorIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedContributorIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F211AC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedContributorIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogProgramContributors()
{
  return sel_catalogProgramContributors;
}

id sub_1D6F21204@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramContributors);
  *a2 = result;
  return result;
}

id sub_1D6F21240(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramContributors_, *a1);
}

char *keypath_get_selector_catalogWorkoutContributors()
{
  return sel_catalogWorkoutContributors;
}

id sub_1D6F21260@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutContributors);
  *a2 = result;
  return result;
}

id sub_1D6F2129C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutContributors_, *a1);
}

id ManagedDirtySyncZone.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedDirtySyncZone.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedDirtySyncZone();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedDirtySyncZone()
{
  return self;
}

id ManagedDirtySyncZone.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedDirtySyncZone();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D6F2141C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_timestamp);
  if (v3)
  {
    id v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F214E4(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setTimestamp_, v10);
}

void sub_1D6F21610(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_zoneName);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F21678(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setZoneName_);
}

id static ManagedDirtySyncZone.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F21754@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedDirtySyncZone();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id ManagedEnergyBurnedRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedEnergyBurnedRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedEnergyBurnedRecord();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedEnergyBurnedRecord()
{
  return self;
}

id ManagedEnergyBurnedRecord.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedEnergyBurnedRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedEnergyBurnedRecord.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F21980(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_modalityIdentifier);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F219E8(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setModalityIdentifier_);
}

uint64_t sub_1D6F21A58@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedEnergyBurnedRecord();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_energyBurned()
{
  return sel_energyBurned;
}

id sub_1D6F21AA8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_energyBurned);
  *a2 = v4;
  return result;
}

id sub_1D6F21ADC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEnergyBurned_, *a1);
}

id sub_1D6F21AF8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_achievementEnvironmentCache);
  *a2 = result;
  return result;
}

id sub_1D6F21B34(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAchievementEnvironmentCache_, *a1);
}

id ManagedEngagementBadge.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedEngagementBadge.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedEngagementBadge();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedEngagementBadge()
{
  return self;
}

id ManagedEngagementBadge.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedEngagementBadge();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedEngagementBadge.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F21D20@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_receivedDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F21DE8(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setReceivedDate_, v10);
}

uint64_t sub_1D6F21F14@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedEngagementBadge();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F21F58(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F21F78(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_marketingItemID()
{
  return sel_marketingItemID;
}

void sub_1D6F21FA4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F21FC4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_notificationID()
{
  return sel_notificationID;
}

void sub_1D6F21FF0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F22010(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_receivedDate()
{
  return sel_receivedDate;
}

id ManagedEquipment.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedEquipment.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedEquipment();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedEquipment()
{
  return self;
}

id ManagedEquipment.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedEquipment();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedEquipment.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2221C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedEquipment();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F22260(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F22280(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F222A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F222C0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedEquipmentIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedEquipmentIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedEquipmentIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedEquipmentIdentifier()
{
  return self;
}

id ManagedEquipmentIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedEquipmentIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedEquipmentIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F224B8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedEquipmentIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogProgramEquipment()
{
  return sel_catalogProgramEquipment;
}

id sub_1D6F22510@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramEquipment);
  *a2 = result;
  return result;
}

id sub_1D6F2254C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramEquipment_, *a1);
}

char *keypath_get_selector_catalogWorkoutEquipment()
{
  return sel_catalogWorkoutEquipment;
}

id sub_1D6F2256C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutEquipment);
  *a2 = result;
  return result;
}

id sub_1D6F225A8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutEquipment_, *a1);
}

id ManagedEstimatedCalories.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedEstimatedCalories.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedEstimatedCalories();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedEstimatedCalories()
{
  return self;
}

id ManagedEstimatedCalories.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedEstimatedCalories();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D6F22728@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_activityType);
  *a2 = result;
  return result;
}

id sub_1D6F2275C(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setActivityType_, *a1);
}

id static ManagedEstimatedCalories.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F227DC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedEstimatedCalories();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_activeCalorieRate()
{
  return sel_activeCalorieRate;
}

id sub_1D6F2282C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_activeCalorieRate);
  *a2 = v4;
  return result;
}

id sub_1D6F22860(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setActiveCalorieRate_, *a1);
}

id sub_1D6F22874@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_activityType);
  *a2 = result;
  return result;
}

id sub_1D6F228A8(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setActivityType_, *a1);
}

char *keypath_get_selector_basalCalorieRate()
{
  return sel_basalCalorieRate;
}

id sub_1D6F228C8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_basalCalorieRate);
  *a2 = v4;
  return result;
}

id sub_1D6F228FC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBasalCalorieRate_, *a1);
}

id ManagedGuidedWorkoutCount.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedGuidedWorkoutCount.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedGuidedWorkoutCount();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedGuidedWorkoutCount()
{
  return self;
}

id ManagedGuidedWorkoutCount.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedGuidedWorkoutCount();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedGuidedWorkoutCount.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F22AE8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedGuidedWorkoutCount();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_count()
{
  return sel_count;
}

id sub_1D6F22B38@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_count);
  *a2 = result;
  return result;
}

id sub_1D6F22B6C(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCount_, *a1);
}

id sub_1D6F22B88@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_achievementEnvironmentCache);
  *a2 = result;
  return result;
}

id sub_1D6F22BC4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAchievementEnvironmentCache_, *a1);
}

id ManagedHealthKitActivityType.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedHealthKitActivityType.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedHealthKitActivityType();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedHealthKitActivityType()
{
  return self;
}

id ManagedHealthKitActivityType.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedHealthKitActivityType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedHealthKitActivityType.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F22DB0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedHealthKitActivityType();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_value()
{
  return sel_value;
}

id sub_1D6F22E00@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_value);
  *a2 = result;
  return result;
}

id sub_1D6F22E34(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setValue_, *a1);
}

id sub_1D6F22E48@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_modalityReference);
  *a2 = result;
  return result;
}

id sub_1D6F22E84(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setModalityReference_, *a1);
}

id ManagedHealthKitMindfulSession.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedHealthKitMindfulSession.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedHealthKitMindfulSession();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedHealthKitMindfulSession()
{
  return self;
}

id ManagedHealthKitMindfulSession.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedHealthKitMindfulSession();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D6F23004@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F23088(a1, (SEL *)&selRef_startDate, a2);
}

void sub_1D6F23010(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedHealthKitMindfulSession.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F23088@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    id v5 = v4;
    sub_1D6FA0560();

    uint64_t v6 = sub_1D6FA05A0();
    objc_super v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a3;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_1D6FA05A0();
    objc_super v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a3;
    uint64_t v10 = 1;
  }

  return v7(v9, v10, 1, v8);
}

void sub_1D6F2314C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v10);
  uint64_t v11 = *a2;
  uint64_t v12 = sub_1D6FA05A0();
  uint64_t v13 = *(void *)(v12 - 8);
  id v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v10, 1, v12) != 1)
  {
    id v14 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
  }
  objc_msgSend(v11, *a5, v14);
}

uint64_t sub_1D6F23278@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedHealthKitMindfulSession();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_endDate()
{
  return sel_endDate;
}

uint64_t sub_1D6F232C8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F23088(a1, (SEL *)&selRef_endDate, a2);
}

void sub_1D6F232E8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_heartRate()
{
  return sel_heartRate;
}

id sub_1D6F23314@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_heartRate);
  *a2 = v4;
  return result;
}

id sub_1D6F23348(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHeartRate_, *a1);
}

void sub_1D6F2335C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2337C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_playlistIdentifier()
{
  return sel_playlistIdentifier;
}

void sub_1D6F233A8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F233C8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F233E8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F23408(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1D6F23428@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F23088(a1, (SEL *)&selRef_startDate, a2);
}

void sub_1D6F23448(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_standaloneMindfulSessionJob()
{
  return sel_standaloneMindfulSessionJob;
}

id sub_1D6F23474@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_standaloneMindfulSessionJob);
  *a2 = result;
  return result;
}

id sub_1D6F234B0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStandaloneMindfulSessionJob_, *a1);
}

id ManagedHealthKitSessionReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedHealthKitSessionReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedHealthKitSessionReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedHealthKitSessionReference()
{
  return self;
}

id ManagedHealthKitSessionReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedHealthKitSessionReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedHealthKitSessionReference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2369C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedHealthKitSessionReference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F236E0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F23700(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F23720(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F23740(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_workout()
{
  return sel_workout;
}

id sub_1D6F2376C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_workout);
  *a2 = result;
  return result;
}

id sub_1D6F237A8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setWorkout_, *a1);
}

id ManagedHealthKitStandaloneMindfulSessionJob.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedHealthKitStandaloneMindfulSessionJob.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedHealthKitStandaloneMindfulSessionJob();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedHealthKitStandaloneMindfulSessionJob()
{
  return self;
}

id ManagedHealthKitStandaloneMindfulSessionJob.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedHealthKitStandaloneMindfulSessionJob();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedHealthKitStandaloneMindfulSessionJob.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F23994@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedHealthKitStandaloneMindfulSessionJob();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogWorkoutIdentifier()
{
  return sel_catalogWorkoutIdentifier;
}

void sub_1D6F239E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F23A04(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F23A24(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F23A44(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F23A64(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F23A84(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F23AA4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F23AC4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_sessions()
{
  return sel_sessions;
}

id sub_1D6F23AF0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sessions);
  *a2 = result;
  return result;
}

id sub_1D6F23B2C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSessions_, *a1);
}

id ManagedHealthKitStandaloneWorkoutJob.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedHealthKitStandaloneWorkoutJob.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedHealthKitStandaloneWorkoutJob();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedHealthKitStandaloneWorkoutJob()
{
  return self;
}

id ManagedHealthKitStandaloneWorkoutJob.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedHealthKitStandaloneWorkoutJob();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedHealthKitStandaloneWorkoutJob.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F23D18@<X0>(id *a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, uint64_t (*a4)(void)@<X5>, uint64_t a5@<X8>)
{
  id v8 = [*a1 *a2];
  if (v8)
  {
    uint64_t v9 = v8;
    a3();

    uint64_t v10 = ((uint64_t (*)(void))a4)(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a5;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v15 = a4();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v12 = v15;
    uint64_t v13 = a5;
    uint64_t v14 = 1;
  }

  return v11(v13, v14, 1, v12);
}

void sub_1D6F23DF8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), SEL *a8)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6753AB0(a1, (uint64_t)v16, a5);
  unint64_t v17 = *a2;
  uint64_t v18 = a6(0);
  uint64_t v19 = *(void *)(v18 - 8);
  int64_t v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) != 1)
  {
    int64_t v20 = (void *)a7();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  objc_msgSend(v17, *a8, v20);
}

uint64_t sub_1D6F23F40@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedHealthKitStandaloneWorkoutJob();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F23F84(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F23FA4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F23FC4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F23FF8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

char *keypath_get_selector_healthKitWorkoutIdentifier()
{
  return sel_healthKitWorkoutIdentifier;
}

uint64_t sub_1D6F24018@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F23D18(a1, (SEL *)&selRef_healthKitWorkoutIdentifier, MEMORY[0x1E4F27988], MEMORY[0x1E4F27990], a2);
}

void sub_1D6F24060(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F240B0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F240D0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F240F0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F24110(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F24130(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F24150(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1D6F24170@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F23D18(a1, (SEL *)&selRef_startDate, MEMORY[0x1E4F27918], MEMORY[0x1E4F27928], a2);
}

void sub_1D6F241B8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_workoutActivityType()
{
  return sel_workoutActivityType;
}

id sub_1D6F24214@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_workoutActivityType);
  *a2 = result;
  return result;
}

id sub_1D6F24248(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setWorkoutActivityType_, *a1);
}

id ManagedHealthKitWorkout.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedHealthKitWorkout.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedHealthKitWorkout();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedHealthKitWorkout()
{
  return self;
}

id ManagedHealthKitWorkout.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedHealthKitWorkout();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F243C8(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setStartDate_, v10);
}

id static ManagedHealthKitWorkout.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F24560@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedHealthKitWorkout();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F245A4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F245D8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

char *keypath_get_selector_isIndoorWorkout()
{
  return sel_isIndoorWorkout;
}

id sub_1D6F24600@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isIndoorWorkout);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D6F24634(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsIndoorWorkout_, *a1);
}

id sub_1D6F24650@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_workoutActivityType);
  *a2 = result;
  return result;
}

id sub_1D6F24684(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setWorkoutActivityType_, *a1);
}

char *keypath_get_selector_sessionReference()
{
  return sel_sessionReference;
}

id sub_1D6F246A4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sessionReference);
  *a2 = result;
  return result;
}

id sub_1D6F246E0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSessionReference_, *a1);
}

id ManagedKeyCertificate.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedKeyCertificate.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedKeyCertificate();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedKeyCertificate()
{
  return self;
}

id ManagedKeyCertificate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedKeyCertificate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F24860(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_remoteURL);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F248C8(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setRemoteURL_);
}

id static ManagedKeyCertificate.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F249A4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedKeyCertificate();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id ManagedLanguageDisclaimer.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedLanguageDisclaimer.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedLanguageDisclaimer();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedLanguageDisclaimer()
{
  return self;
}

id ManagedLanguageDisclaimer.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedLanguageDisclaimer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedLanguageDisclaimer.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F24BD0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_name);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F24C38(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setName_);
}

uint64_t sub_1D6F24CA8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedLanguageDisclaimer();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_isPrimary()
{
  return sel_isPrimary;
}

id sub_1D6F24CF8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_isPrimary);
  *a2 = (_BYTE)result;
  return result;
}

id sub_1D6F24D2C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIsPrimary_, *a1);
}

char *keypath_get_selector_capabilities()
{
  return sel_capabilities;
}

id sub_1D6F24D54@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_capabilities);
  *a2 = result;
  return result;
}

id sub_1D6F24D90(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCapabilities_, *a1);
}

id sub_1D6F24DA4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F24DE0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMetadata_, *a1);
}

id ManagedMediaMoment.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedMediaMoment.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedMediaMoment();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedMediaMoment()
{
  return self;
}

id ManagedMediaMoment.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedMediaMoment();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedMediaMoment.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F24FCC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedMediaMoment();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F25018@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F2504C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

id sub_1D6F25068@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_startTime);
  *a2 = v4;
  return result;
}

id sub_1D6F2509C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartTime_, *a1);
}

id sub_1D6F250B0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F250EC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMetadata_, *a1);
}

id ManagedMetricsDisplayPreference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedMetricsDisplayPreference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedMetricsDisplayPreference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedMetricsDisplayPreference()
{
  return self;
}

id ManagedMetricsDisplayPreference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedMetricsDisplayPreference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedMetricsDisplayPreference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F252D8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedMetricsDisplayPreference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F2531C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2533C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2535C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2537C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedModalityIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedModalityIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedModalityIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedModalityIdentifier()
{
  return self;
}

id ManagedModalityIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedModalityIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedModalityIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F25574@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedModalityIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogProgramModalities()
{
  return sel_catalogProgramModalities;
}

id sub_1D6F255CC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramModalities);
  *a2 = result;
  return result;
}

id sub_1D6F25608(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramModalities_, *a1);
}

char *keypath_get_selector_onboardingSurveyResults()
{
  return sel_onboardingSurveyResults;
}

id sub_1D6F25628@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_onboardingSurveyResults);
  *a2 = result;
  return result;
}

id sub_1D6F25664(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOnboardingSurveyResults_, *a1);
}

id ManagedModalityWorkoutCount.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedModalityWorkoutCount.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedModalityWorkoutCount();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedModalityWorkoutCount()
{
  return self;
}

id ManagedModalityWorkoutCount.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedModalityWorkoutCount();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedModalityWorkoutCount.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F25850@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedModalityWorkoutCount();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F25894@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_count);
  *a2 = result;
  return result;
}

id sub_1D6F258C8(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCount_, *a1);
}

id sub_1D6F258E4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_achievementEnvironmentCache);
  *a2 = result;
  return result;
}

id sub_1D6F25920(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAchievementEnvironmentCache_, *a1);
}

id ManagedMusicGenre.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedMusicGenre.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedMusicGenre();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedMusicGenre()
{
  return self;
}

id ManagedMusicGenre.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedMusicGenre();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedMusicGenre.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F25B0C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedMusicGenre();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F25B50(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F25B70(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F25B90(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F25BB0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedMusicGenreIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedMusicGenreIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedMusicGenreIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedMusicGenreIdentifier()
{
  return self;
}

id ManagedMusicGenreIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedMusicGenreIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedMusicGenreIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F25DA8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedMusicGenreIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogProgramMusicGenres()
{
  return sel_catalogProgramMusicGenres;
}

id sub_1D6F25E00@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramMusicGenres);
  *a2 = result;
  return result;
}

id sub_1D6F25E3C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramMusicGenres_, *a1);
}

char *keypath_get_selector_catalogWorkoutMusicGenres()
{
  return sel_catalogWorkoutMusicGenres;
}

id sub_1D6F25E5C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMusicGenres);
  *a2 = result;
  return result;
}

id sub_1D6F25E98(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMusicGenres_, *a1);
}

id ManagedMusicTrack.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedMusicTrack.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedMusicTrack();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedMusicTrack()
{
  return self;
}

id ManagedMusicTrack.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedMusicTrack();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedMusicTrack.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F26084@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedMusicTrack();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_album()
{
  return sel_album;
}

void sub_1D6F260D4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F260F4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_artist()
{
  return sel_artist;
}

void sub_1D6F26120(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F26140(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F26168(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F26188(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F261A8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F261DC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

void sub_1D6F261F0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F26210(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F26230@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_startTime);
  *a2 = v4;
  return result;
}

id sub_1D6F26264(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartTime_, *a1);
}

void sub_1D6F26278(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F26298(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F262B8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F262F4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMetadata_, *a1);
}

id ManagedNoticePrivacyPreference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedNoticePrivacyPreference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedNoticePrivacyPreference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedNoticePrivacyPreference()
{
  return self;
}

id ManagedNoticePrivacyPreference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedNoticePrivacyPreference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedNoticePrivacyPreference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F264E0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_version);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F26548(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setVersion_);
}

uint64_t sub_1D6F265B8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedNoticePrivacyPreference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F265FC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_state);
  *a2 = result;
  return result;
}

id sub_1D6F26630(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setState_, *a1);
}

id ManagedNoticePrivacyPreferenceJournal.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedNoticePrivacyPreferenceJournal.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedNoticePrivacyPreferenceJournal();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedNoticePrivacyPreferenceJournal()
{
  return self;
}

id ManagedNoticePrivacyPreferenceJournal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedNoticePrivacyPreferenceJournal();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedNoticePrivacyPreferenceJournal.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F26824(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setTimestamp_, v10);
}

uint64_t sub_1D6F26950@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedNoticePrivacyPreferenceJournal();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id ManagedOnboardingModalityIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOnboardingModalityIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedOnboardingModalityIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedOnboardingModalityIdentifier()
{
  return self;
}

id ManagedOnboardingModalityIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedOnboardingModalityIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedOnboardingModalityIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F26B7C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedOnboardingModalityIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_onboaringSurveyResults()
{
  return sel_onboaringSurveyResults;
}

id sub_1D6F26BD4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_onboaringSurveyResults);
  *a2 = result;
  return result;
}

id sub_1D6F26C10(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setOnboaringSurveyResults_, *a1);
}

id ManagedOnboardingSurveyResult.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOnboardingSurveyResult.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedOnboardingSurveyResult();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedOnboardingSurveyResult()
{
  return self;
}

id ManagedOnboardingSurveyResult.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedOnboardingSurveyResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedOnboardingSurveyResult.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F26DFC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_completedDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F26EC4(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setCompletedDate_, v10);
}

uint64_t sub_1D6F26FF0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedOnboardingSurveyResult();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_completedDate()
{
  return sel_completedDate;
}

char *keypath_get_selector_selectedModalityIdentifiers()
{
  return sel_selectedModalityIdentifiers;
}

id sub_1D6F2705C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_selectedModalityIdentifiers);
  *a2 = result;
  return result;
}

id sub_1D6F27098(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSelectedModalityIdentifiers_, *a1);
}

id ManagedOptInPrivacyPreference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOptInPrivacyPreference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedOptInPrivacyPreference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedOptInPrivacyPreference()
{
  return self;
}

id ManagedOptInPrivacyPreference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedOptInPrivacyPreference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedOptInPrivacyPreference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F27284@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedOptInPrivacyPreference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F272C8@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_state);
  *a2 = result;
  return result;
}

id sub_1D6F272FC(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setState_, *a1);
}

id ManagedOptInPrivacyPreferenceJournal.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedOptInPrivacyPreferenceJournal.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedOptInPrivacyPreferenceJournal();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedOptInPrivacyPreferenceJournal()
{
  return self;
}

id ManagedOptInPrivacyPreferenceJournal.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedOptInPrivacyPreferenceJournal();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedOptInPrivacyPreferenceJournal.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F274F0(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setTimestamp_, v10);
}

uint64_t sub_1D6F2761C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedOptInPrivacyPreferenceJournal();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id ManagedPersonalizationPrivacyPreference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedPersonalizationPrivacyPreference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedPersonalizationPrivacyPreference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedPersonalizationPrivacyPreference()
{
  return self;
}

id ManagedPersonalizationPrivacyPreference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedPersonalizationPrivacyPreference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedPersonalizationPrivacyPreference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F27848@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedPersonalizationPrivacyPreference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F2788C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_state);
  *a2 = result;
  return result;
}

id sub_1D6F278C0(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setState_, *a1);
}

id ManagedPlaylist.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedPlaylist.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedPlaylist();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedPlaylist()
{
  return self;
}

id ManagedPlaylist.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedPlaylist();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedPlaylist.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F27ABC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_dateCreated);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F27B84(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDateCreated_, v10);
}

uint64_t sub_1D6F27CB0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedPlaylist();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F27CFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F27D1C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F27D3C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F27D5C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_items()
{
  return sel_items;
}

id sub_1D6F27D88@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_items);
  *a2 = result;
  return result;
}

id sub_1D6F27DC4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setItems_, *a1);
}

id ManagedPlaylistItem.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedPlaylistItem.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedPlaylistItem();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedPlaylistItem()
{
  return self;
}

id ManagedPlaylistItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedPlaylistItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedPlaylistItem.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F27FB0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedPlaylistItem();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F27FF4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F28028(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

char *keypath_get_selector_healthKitActivityType()
{
  return sel_healthKitActivityType;
}

id sub_1D6F28048@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_healthKitActivityType);
  *a2 = result;
  return result;
}

id sub_1D6F2807C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHealthKitActivityType_, *a1);
}

void sub_1D6F28090(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F280B0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F280D0@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_1D6F28104(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

void sub_1D6F28118(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F28138(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_playlist()
{
  return sel_playlist;
}

id sub_1D6F28164@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_playlist);
  *a2 = result;
  return result;
}

id sub_1D6F281A0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlaylist_, *a1);
}

id ManagedPrivacyAcknowledgement.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedPrivacyAcknowledgement.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedPrivacyAcknowledgement();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedPrivacyAcknowledgement()
{
  return self;
}

id ManagedPrivacyAcknowledgement.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedPrivacyAcknowledgement();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedPrivacyAcknowledgement.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2838C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedPrivacyAcknowledgement();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id ManagedProgramCompletion.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedProgramCompletion.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedProgramCompletion();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedProgramCompletion()
{
  return self;
}

id ManagedProgramCompletion.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedProgramCompletion();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F28544(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F28550(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2855C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F28568(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1D6F28574@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_completionDate);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F2863C(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setCompletionDate_, v10);
}

id static ManagedProgramCompletion.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F287D4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedProgramCompletion();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F28818(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F28838(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F28860(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F28880(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F288A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F288C0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedProgressDisplayPreference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedProgressDisplayPreference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedProgressDisplayPreference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedProgressDisplayPreference()
{
  return self;
}

id ManagedProgressDisplayPreference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedProgressDisplayPreference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedProgressDisplayPreference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F28AB8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedProgressDisplayPreference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F28AFC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F28B1C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F28B3C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F28B5C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedRecentSearchTerm.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedRecentSearchTerm.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedRecentSearchTerm();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedRecentSearchTerm()
{
  return self;
}

id ManagedRecentSearchTerm.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedRecentSearchTerm();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F28CE8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_term);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F28D50(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setTerm_);
}

id sub_1D6F28DC0@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_platform);
  *a2 = result;
  return result;
}

id sub_1D6F28DF4(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlatform_, *a1);
}

void sub_1D6F28E08(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDateCreated_, v10);
}

id static ManagedRecentSearchTerm.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F28FA0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedRecentSearchTerm();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F28FEC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_platform);
  *a2 = result;
  return result;
}

id sub_1D6F29020(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlatform_, *a1);
}

id ManagedRecommendation.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedRecommendation.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedRecommendation();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedRecommendation()
{
  return self;
}

id ManagedRecommendation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedRecommendation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F291A8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F291B4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedRecommendation.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2922C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedRecommendation();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F29270@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_1D6F292A4(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

void sub_1D6F292B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F292D8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F292F8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F29318(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F29338(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F29358(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F29378(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F29398(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_source()
{
  return sel_source;
}

void sub_1D6F293C4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F293E4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedRemoteBrowsingConnectionRecord.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedRemoteBrowsingConnectionRecord.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedRemoteBrowsingConnectionRecord();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedRemoteBrowsingConnectionRecord()
{
  return self;
}

id ManagedRemoteBrowsingConnectionRecord.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedRemoteBrowsingConnectionRecord();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedRemoteBrowsingConnectionRecord.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F295DC(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_participantIdentifier);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F29644(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setParticipantIdentifier_);
}

void sub_1D6F296B4(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setTimestamp_, v10);
}

uint64_t sub_1D6F297E0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedRemoteBrowsingConnectionRecord();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_participantIdentifier()
{
  return sel_participantIdentifier;
}

id ManagedScoreSummary.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedScoreSummary.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedScoreSummary();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedScoreSummary()
{
  return self;
}

id ManagedScoreSummary.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedScoreSummary();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedScoreSummary.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F29A18@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedScoreSummary();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_communityLowerMiddleScore()
{
  return sel_communityLowerMiddleScore;
}

id sub_1D6F29A68@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_communityLowerMiddleScore);
  *a2 = v4;
  return result;
}

id sub_1D6F29A9C(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setCommunityLowerMiddleScore_, a3);
}

char *keypath_get_selector_communityLowerScore()
{
  return sel_communityLowerScore;
}

id sub_1D6F29ABC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_communityLowerScore);
  *a2 = v4;
  return result;
}

id sub_1D6F29AF0(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setCommunityLowerScore_, a3);
}

char *keypath_get_selector_communityUpperMiddleScore()
{
  return sel_communityUpperMiddleScore;
}

id sub_1D6F29B10@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_communityUpperMiddleScore);
  *a2 = v4;
  return result;
}

id sub_1D6F29B44(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setCommunityUpperMiddleScore_, a3);
}

char *keypath_get_selector_communityUpperScore()
{
  return sel_communityUpperScore;
}

id sub_1D6F29B64@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_communityUpperScore);
  *a2 = v4;
  return result;
}

id sub_1D6F29B98(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setCommunityUpperScore_, a3);
}

char *keypath_get_selector_elapsedSeconds()
{
  return sel_elapsedSeconds;
}

id sub_1D6F29BB8@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_elapsedSeconds);
  *a2 = result;
  return result;
}

id sub_1D6F29BEC(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setElapsedSeconds_, *a1);
}

char *keypath_get_selector_personalScore()
{
  return sel_personalScore;
}

id sub_1D6F29C0C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_personalScore);
  *a2 = v4;
  return result;
}

id sub_1D6F29C40(_DWORD *a1, id *a2, double a3)
{
  LODWORD(a3) = *a1;
  return objc_msgSend(*a2, sel_setPersonalScore_, a3);
}

char *keypath_get_selector_archivedSession()
{
  return sel_archivedSession;
}

id sub_1D6F29C60@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_archivedSession);
  *a2 = result;
  return result;
}

id sub_1D6F29C9C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setArchivedSession_, *a1);
}

id ManagedServerOperation.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedServerOperation.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedServerOperation();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedServerOperation()
{
  return self;
}

id ManagedServerOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedServerOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedServerOperation.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F29E88(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_request);
  if (v3)
  {
    int v4 = v3;
    uint64_t v5 = sub_1D6FA03E0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F29EF0(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1D6FA03C0();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setRequest_);
}

uint64_t sub_1D6F29F68@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedServerOperation();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_request()
{
  return sel_request;
}

id ManagedSessionScores.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSessionScores.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSessionScores();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSessionScores()
{
  return self;
}

id ManagedSessionScores.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSessionScores();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedSessionScores.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F2A198(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_scores);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1D6FA03E0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F2A200(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1D6FA03C0();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setScores_);
}

uint64_t sub_1D6F2A278@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedSessionScores();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F2A2BC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_activityType);
  *a2 = result;
  return result;
}

id sub_1D6F2A2F0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setActivityType_, *a1);
}

char *keypath_get_selector_scores()
{
  return sel_scores;
}

void sub_1D6F2A318(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2A338(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_workoutDuration()
{
  return sel_workoutDuration;
}

id sub_1D6F2A364@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_workoutDuration);
  *a2 = result;
  return result;
}

id sub_1D6F2A398(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setWorkoutDuration_, *a1);
}

void sub_1D6F2A3AC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2A3CC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedSkillLevel.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSkillLevel.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSkillLevel();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSkillLevel()
{
  return self;
}

id ManagedSkillLevel.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSkillLevel();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedSkillLevel.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2A5C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedSkillLevel();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F2A608(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2A628(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2A648(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2A668(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2A688(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2A6A8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedSkillLevelIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSkillLevelIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSkillLevelIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSkillLevelIdentifier()
{
  return self;
}

id ManagedSkillLevelIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSkillLevelIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedSkillLevelIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2A8A0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedSkillLevelIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogWorkoutSkillLevels()
{
  return sel_catalogWorkoutSkillLevels;
}

id sub_1D6F2A8F8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutSkillLevels);
  *a2 = result;
  return result;
}

id sub_1D6F2A934(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutSkillLevels_, *a1);
}

id ManagedSocialMediaHandle.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSocialMediaHandle.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSocialMediaHandle();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSocialMediaHandle()
{
  return self;
}

id ManagedSocialMediaHandle.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSocialMediaHandle();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedSocialMediaHandle.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2AB20@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedSocialMediaHandle();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F2AB64(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2AB84(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_url()
{
  return sel_url;
}

void sub_1D6F2ABB0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2ABD0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_contributor()
{
  return sel_contributor;
}

id sub_1D6F2ABFC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_contributor);
  *a2 = result;
  return result;
}

id sub_1D6F2AC38(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setContributor_, *a1);
}

id sub_1D6F2AC4C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trainerMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F2AC88(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrainerMetadata_, *a1);
}

id ManagedSyncChangeTag.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSyncChangeTag.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSyncChangeTag();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSyncChangeTag()
{
  return self;
}

id ManagedSyncChangeTag.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSyncChangeTag();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F2AE08(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2AE14(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2AE20(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2AE2C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedSyncChangeTag.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2AEA4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedSyncChangeTag();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F2AEE8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2AF08(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2AF28(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2AF48(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2AF68(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2AF88(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedSyncEncryptionKey.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSyncEncryptionKey.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSyncEncryptionKey();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSyncEncryptionKey()
{
  return self;
}

id ManagedSyncEncryptionKey.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSyncEncryptionKey();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F2B114(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2B120(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedSyncEncryptionKey.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2B198@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_identifier);
  if (v3)
  {
    id v4 = v3;
    sub_1D6FA0600();

    uint64_t v5 = sub_1D6FA0620();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA0620();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F2B260(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD890);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6F17CD0(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA0620();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA05E0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setIdentifier_, v10);
}

void sub_1D6F2B38C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_key);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA03E0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F2B3F4(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1D6FA03C0();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setKey_);
}

uint64_t sub_1D6F2B46C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedSyncEncryptionKey();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F2B4B0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2B4D0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_key()
{
  return sel_key;
}

void sub_1D6F2B50C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2B52C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedSyncOperation.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSyncOperation.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSyncOperation();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSyncOperation()
{
  return self;
}

id ManagedSyncOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSyncOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1D6F2B6B8@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_domain);
  *a2 = result;
  return result;
}

id sub_1D6F2B6EC(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDomain_, *a1);
}

id static ManagedSyncOperation.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2B76C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedSyncOperation();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_action()
{
  return sel_action;
}

void sub_1D6F2B7BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2B7DC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F2B7FC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_domain);
  *a2 = result;
  return result;
}

id sub_1D6F2B830(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDomain_, *a1);
}

void sub_1D6F2B844(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2B864(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F2B884@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_timestamp);
  *a2 = v4;
  return result;
}

id sub_1D6F2B8B8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTimestamp_, *a1);
}

void sub_1D6F2B8CC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2B8EC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedSyncZoneChangeWindow.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedSyncZoneChangeWindow.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedSyncZoneChangeWindow();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedSyncZoneChangeWindow()
{
  return self;
}

id ManagedSyncZoneChangeWindow.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedSyncZoneChangeWindow();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedSyncZoneChangeWindow.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F2BAE4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_changeWindow);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA03E0();
    unint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F2BB4C(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8) >> 60 == 15) {
    uint64_t v3 = 0;
  }
  else {
    uint64_t v3 = sub_1D6FA03C0();
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setChangeWindow_);
}

uint64_t sub_1D6F2BBC4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedSyncZoneChangeWindow();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_changeWindow()
{
  return sel_changeWindow;
}

id ManagedThemeIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedThemeIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedThemeIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedThemeIdentifier()
{
  return self;
}

id ManagedThemeIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedThemeIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedThemeIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2BDFC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedThemeIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogProgramThemes()
{
  return sel_catalogProgramThemes;
}

id sub_1D6F2BE54@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramThemes);
  *a2 = result;
  return result;
}

id sub_1D6F2BE90(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramThemes_, *a1);
}

char *keypath_get_selector_catalogWorkoutThemes()
{
  return sel_catalogWorkoutThemes;
}

id sub_1D6F2BEB0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutThemes);
  *a2 = result;
  return result;
}

id sub_1D6F2BEEC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutThemes_, *a1);
}

id ManagedTrainerEvent.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTrainerEvent.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedTrainerEvent();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedTrainerEvent()
{
  return self;
}

id ManagedTrainerEvent.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedTrainerEvent();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedTrainerEvent.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2C0D8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedTrainerEvent();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F2C11C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F2C150(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

void sub_1D6F2C164(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2C184(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F2C1A4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_leadDuration);
  *a2 = v4;
  return result;
}

id sub_1D6F2C1D8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLeadDuration_, *a1);
}

id sub_1D6F2C1EC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_startTime);
  *a2 = v4;
  return result;
}

id sub_1D6F2C220(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setStartTime_, *a1);
}

void sub_1D6F2C234(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2C254(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F2C274@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutMetadata);
  *a2 = result;
  return result;
}

id sub_1D6F2C2B0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutMetadata_, *a1);
}

id ManagedTrainerIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTrainerIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedTrainerIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedTrainerIdentifier()
{
  return self;
}

id ManagedTrainerIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedTrainerIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedTrainerIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2C49C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedTrainerIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogProgramTrainers()
{
  return sel_catalogProgramTrainers;
}

id sub_1D6F2C4F4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramTrainers);
  *a2 = result;
  return result;
}

id sub_1D6F2C530(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramTrainers_, *a1);
}

char *keypath_get_selector_catalogWorkoutTrainers()
{
  return sel_catalogWorkoutTrainers;
}

id sub_1D6F2C550@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogWorkoutTrainers);
  *a2 = result;
  return result;
}

id sub_1D6F2C58C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogWorkoutTrainers_, *a1);
}

id ManagedTrainerMetadata.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTrainerMetadata.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedTrainerMetadata();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedTrainerMetadata()
{
  return self;
}

id ManagedTrainerMetadata.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedTrainerMetadata();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedTrainerMetadata.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2C778@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedTrainerMetadata();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F2C7BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2C7DC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2C7FC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2C81C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2C83C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2C85C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2C87C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2C89C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F2C8BC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_preview);
  *a2 = result;
  return result;
}

id sub_1D6F2C8F8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPreview_, *a1);
}

id sub_1D6F2C90C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_socialMediaHandles);
  *a2 = result;
  return result;
}

id sub_1D6F2C948(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSocialMediaHandles_, *a1);
}

id ManagedTrainerReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedTrainerReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedTrainerReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedTrainerReference()
{
  return self;
}

id ManagedTrainerReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedTrainerReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F2CAC8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2CAD4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id static ManagedTrainerReference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2CB4C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedTrainerReference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

void sub_1D6F2CB98(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2CBB8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2CBD8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2CBF8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2CC18(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2CC38(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedUpNextQueueItem.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedUpNextQueueItem.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedUpNextQueueItem();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedUpNextQueueItem()
{
  return self;
}

id ManagedUpNextQueueItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedUpNextQueueItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedUpNextQueueItem.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2CE30@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_dateAdded);
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1D6FA0560();

    uint64_t v5 = sub_1D6FA05A0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1D6FA05A0();
    unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1D6F2CEF8(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBD9F790);
  MEMORY[0x1F4188790](v4 - 8);
  unint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D67FB0BC(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1D6FA05A0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA04F0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setDateAdded_, v10);
}

uint64_t sub_1D6F2D024@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedUpNextQueueItem();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_dateAdded()
{
  return sel_dateAdded;
}

id sub_1D6F2D07C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = v4;
  return result;
}

id sub_1D6F2D0B0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

id sub_1D6F2D0C4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_healthKitActivityType);
  *a2 = result;
  return result;
}

id sub_1D6F2D0F8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setHealthKitActivityType_, *a1);
}

void sub_1D6F2D10C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2D12C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F2D14C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_1D6F2D180(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

void sub_1D6F2D194(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2D1B4(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedUserAccountNotification.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedUserAccountNotification.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedUserAccountNotification();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedUserAccountNotification()
{
  return self;
}

id ManagedUserAccountNotification.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedUserAccountNotification();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedUserAccountNotification.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2D3AC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedUserAccountNotification();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_shownState()
{
  return sel_shownState;
}

id sub_1D6F2D3FC@<X0>(id *a1@<X0>, _WORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_shownState);
  *a2 = (_WORD)result;
  return result;
}

id sub_1D6F2D430(__int16 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setShownState_, *a1);
}

id ManagedWorkoutIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutIdentifier()
{
  return self;
}

id ManagedWorkoutIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedWorkoutIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2D61C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_catalogProgramWorkouts()
{
  return sel_catalogProgramWorkouts;
}

id sub_1D6F2D674@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_catalogProgramWorkouts);
  *a2 = result;
  return result;
}

id sub_1D6F2D6B0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCatalogProgramWorkouts_, *a1);
}

id ManagedWorkoutPlan.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlan.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlan();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlan()
{
  return self;
}

id ManagedWorkoutPlan.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlan();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D6F2D830@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F2DBE4(a1, (SEL *)&selRef_identifier, MEMORY[0x1E4F27988], MEMORY[0x1E4F27990], a2);
}

void sub_1D6F2D864(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F2D8A0@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_state);
  *a2 = result;
  return result;
}

id sub_1D6F2D8D4(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setState_, *a1);
}

uint64_t sub_1D6F2D8E8@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F2DBE4(a1, (SEL *)&selRef_templateIdentifier, MEMORY[0x1E4F27988], MEMORY[0x1E4F27990], a2);
}

void sub_1D6F2D91C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2D958(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), SEL *a8)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6753AB0(a1, (uint64_t)v16, a5);
  unint64_t v17 = *a2;
  uint64_t v18 = a6(0);
  uint64_t v19 = *(void *)(v18 - 8);
  int64_t v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) != 1)
  {
    int64_t v20 = (void *)a7();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  objc_msgSend(v17, *a8, v20);
}

void sub_1D6F2DAA0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_startDate);
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F2DB08(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setStartDate_);
}

id static ManagedWorkoutPlan.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2DBE4@<X0>(id *a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, uint64_t (*a4)(void)@<X5>, uint64_t a5@<X8>)
{
  id v8 = [*a1 *a2];
  if (v8)
  {
    uint64_t v9 = v8;
    a3();

    uint64_t v10 = ((uint64_t (*)(void))a4)(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a5;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v15 = a4();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v12 = v15;
    uint64_t v13 = a5;
    uint64_t v14 = 1;
  }

  return v11(v13, v14, 1, v12);
}

uint64_t sub_1D6F2DCC4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlan();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

uint64_t sub_1D6F2DD08@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F2DBE4(a1, (SEL *)&selRef_dateCreated, MEMORY[0x1E4F27918], MEMORY[0x1E4F27928], a2);
}

void sub_1D6F2DD50(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1D6F2DDA0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F2DBE4(a1, (SEL *)&selRef_identifier, MEMORY[0x1E4F27988], MEMORY[0x1E4F27990], a2);
}

void sub_1D6F2DDE8(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F2DE40@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_state);
  *a2 = result;
  return result;
}

id sub_1D6F2DE74(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setState_, *a1);
}

uint64_t sub_1D6F2DE88@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F2DBE4(a1, (SEL *)&selRef_templateIdentifier, MEMORY[0x1E4F27988], MEMORY[0x1E4F27990], a2);
}

void sub_1D6F2DED0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_schedule()
{
  return sel_schedule;
}

id sub_1D6F2DF2C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_schedule);
  *a2 = result;
  return result;
}

id sub_1D6F2DF68(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSchedule_, *a1);
}

id ManagedWorkoutPlanItem.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanItem.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanItem();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanItem()
{
  return self;
}

id ManagedWorkoutPlanItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedWorkoutPlanItem.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F2E154(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_workout);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F2E1BC(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setWorkout_);
}

uint64_t sub_1D6F2E22C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanItem();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F2E278@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_1D6F2E2B4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

id ManagedWorkoutPlanItemIndex.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanItemIndex.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanItemIndex();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanItemIndex()
{
  return self;
}

id ManagedWorkoutPlanItemIndex.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanItemIndex();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedWorkoutPlanItemIndex.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

void sub_1D6F2E4A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_offset);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F2E508(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setOffset_);
}

uint64_t sub_1D6F2E578@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanItemIndex();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F2E5BC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_1D6F2E5F0(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

char *keypath_get_selector_offset()
{
  return sel_offset;
}

char *keypath_get_selector_item()
{
  return sel_item;
}

id sub_1D6F2E624@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_item);
  *a2 = result;
  return result;
}

id sub_1D6F2E660(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setItem_, *a1);
}

char *keypath_get_selector_plan()
{
  return sel_plan;
}

id sub_1D6F2E680@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_plan);
  *a2 = result;
  return result;
}

id sub_1D6F2E6BC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPlan_, *a1);
}

id ManagedWorkoutPlanModalityPreference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanModalityPreference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanModalityPreference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanModalityPreference()
{
  return self;
}

id ManagedWorkoutPlanModalityPreference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanModalityPreference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedWorkoutPlanModalityPreference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2E8A8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanModalityPreference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_preferredMusicGenres()
{
  return sel_preferredMusicGenres;
}

id sub_1D6F2E900@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_preferredMusicGenres);
  *a2 = result;
  return result;
}

id sub_1D6F2E93C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPreferredMusicGenres_, *a1);
}

char *keypath_get_selector_preferredTrainers()
{
  return sel_preferredTrainers;
}

id sub_1D6F2E95C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_preferredTrainers);
  *a2 = result;
  return result;
}

id sub_1D6F2E998(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPreferredTrainers_, *a1);
}

char *keypath_get_selector_template()
{
  return sel_template;
}

id sub_1D6F2E9B8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_template);
  *a2 = result;
  return result;
}

id sub_1D6F2E9F4(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTemplate_, *a1);
}

id ManagedWorkoutPlanMusicIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanMusicIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanMusicIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanMusicIdentifier()
{
  return self;
}

id ManagedWorkoutPlanMusicIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanMusicIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedWorkoutPlanMusicIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2EBE0@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanMusicIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_modalityPreference()
{
  return sel_modalityPreference;
}

id sub_1D6F2EC38@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_modalityPreference);
  *a2 = result;
  return result;
}

id sub_1D6F2EC74(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setModalityPreference_, *a1);
}

id ManagedWorkoutPlanReference.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanReference.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanReference();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanReference()
{
  return self;
}

id ManagedWorkoutPlanReference.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanReference();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F2EDF4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_dateOffset);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1D6FA98E0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1D6F2EE5C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_1D6FA98B0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setDateOffset_);
}

id sub_1D6F2EECC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_1D6F2EF00(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

id static ManagedWorkoutPlanReference.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2EF80@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanReference();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F2EFCC@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_1D6F2F000(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

char *keypath_get_selector_session()
{
  return sel_session;
}

id sub_1D6F2F020@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_session);
  *a2 = result;
  return result;
}

id sub_1D6F2F05C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSession_, *a1);
}

id ManagedWorkoutPlanScheduledItem.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanScheduledItem.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanScheduledItem();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanScheduledItem()
{
  return self;
}

id ManagedWorkoutPlanScheduledItem.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanScheduledItem();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedWorkoutPlanScheduledItem.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2F248@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanScheduledItem();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F2F28C@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_duration);
  *a2 = result;
  return result;
}

id sub_1D6F2F2C0(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDuration_, *a1);
}

char *keypath_get_selector_filterProperties()
{
  return sel_filterProperties;
}

id sub_1D6F2F2E8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_filterProperties);
  *a2 = result;
  return result;
}

id sub_1D6F2F324(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFilterProperties_, *a1);
}

id sub_1D6F2F338@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_1D6F2F374(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

id ManagedWorkoutPlanScheduledItemIndex.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanScheduledItemIndex.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanScheduledItemIndex();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanScheduledItemIndex()
{
  return self;
}

id ManagedWorkoutPlanScheduledItemIndex.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanScheduledItemIndex();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedWorkoutPlanScheduledItemIndex.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2F560@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanScheduledItemIndex();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F2F5A4@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_index);
  *a2 = result;
  return result;
}

id sub_1D6F2F5D8(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setIndex_, *a1);
}

id sub_1D6F2F5F4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_item);
  *a2 = result;
  return result;
}

id sub_1D6F2F630(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setItem_, *a1);
}

id sub_1D6F2F644@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_template);
  *a2 = result;
  return result;
}

id sub_1D6F2F680(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTemplate_, *a1);
}

id ManagedWorkoutPlanScheduleFilterProperty.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanScheduleFilterProperty.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanScheduleFilterProperty();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanScheduleFilterProperty()
{
  return self;
}

id ManagedWorkoutPlanScheduleFilterProperty.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanScheduleFilterProperty();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedWorkoutPlanScheduleFilterProperty.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2F86C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanScheduleFilterProperty();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_bodyFocus()
{
  return sel_bodyFocus;
}

void sub_1D6F2F8BC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2F8DC(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_equipment()
{
  return sel_equipment;
}

void sub_1D6F2F908(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2F928(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_skillLevel()
{
  return sel_skillLevel;
}

void sub_1D6F2F954(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2F974(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_theme()
{
  return sel_theme;
}

void sub_1D6F2F9A0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1D6F2F9C0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id sub_1D6F2F9E0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_item);
  *a2 = result;
  return result;
}

id sub_1D6F2FA1C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setItem_, *a1);
}

id ManagedWorkoutPlanSummaryViewed.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanSummaryViewed.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanSummaryViewed();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanSummaryViewed()
{
  return self;
}

id ManagedWorkoutPlanSummaryViewed.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanSummaryViewed();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D6F2FB9C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F2FC40(a1, (SEL *)&selRef_dateViewed, MEMORY[0x1E4F27918], MEMORY[0x1E4F27928], a2);
}

void sub_1D6F2FBD0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1D6F2FC0C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F2FC40(a1, (SEL *)&selRef_planIdentifier, MEMORY[0x1E4F27988], MEMORY[0x1E4F27990], a2);
}

uint64_t sub_1D6F2FC40@<X0>(id *a1@<X0>, SEL *a2@<X3>, void (*a3)(void)@<X4>, uint64_t (*a4)(void)@<X5>, uint64_t a5@<X8>)
{
  id v8 = [*a1 *a2];
  if (v8)
  {
    uint64_t v9 = v8;
    a3();

    uint64_t v10 = ((uint64_t (*)(void))a4)(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = v10;
    uint64_t v13 = a5;
    uint64_t v14 = 0;
  }
  else
  {
    uint64_t v15 = a4();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v12 = v15;
    uint64_t v13 = a5;
    uint64_t v14 = 1;
  }

  return v11(v13, v14, 1, v12);
}

void sub_1D6F2FD20(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_1D6F2FD5C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void), SEL *a8)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(a5);
  MEMORY[0x1F4188790](v14 - 8);
  unint64_t v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6753AB0(a1, (uint64_t)v16, a5);
  unint64_t v17 = *a2;
  uint64_t v18 = a6(0);
  uint64_t v19 = *(void *)(v18 - 8);
  int64_t v20 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v18) != 1)
  {
    int64_t v20 = (void *)a7();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
  }
  objc_msgSend(v17, *a8, v20);
}

id static ManagedWorkoutPlanSummaryViewed.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F2FF10@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanSummaryViewed();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

uint64_t sub_1D6F2FF54@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F2FC40(a1, (SEL *)&selRef_dateViewed, MEMORY[0x1E4F27918], MEMORY[0x1E4F27928], a2);
}

void sub_1D6F2FF9C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1D6F2FFEC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D6F2FC40(a1, (SEL *)&selRef_planIdentifier, MEMORY[0x1E4F27988], MEMORY[0x1E4F27990], a2);
}

void sub_1D6F30034(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

id ManagedWorkoutPlanTemplate.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanTemplate.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanTemplate();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanTemplate()
{
  return self;
}

id ManagedWorkoutPlanTemplate.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanTemplate();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_1D6F301F0(uint64_t a1, void **a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBDAD890);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D6F17CD0(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1D6FA0620();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    uint64_t v10 = (void *)sub_1D6FA05E0();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  objc_msgSend(v7, sel_setIdentifier_, v10);
}

id static ManagedWorkoutPlanTemplate.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F30388@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanTemplate();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

char *keypath_get_selector_workoutPlanLength()
{
  return sel_workoutPlanLength;
}

id sub_1D6F303E8@<X0>(id *a1@<X0>, _DWORD *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_workoutPlanLength);
  *a2 = result;
  return result;
}

id sub_1D6F3041C(unsigned int *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setWorkoutPlanLength_, *a1);
}

char *keypath_get_selector_modalityPreferences()
{
  return sel_modalityPreferences;
}

id sub_1D6F3043C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_modalityPreferences);
  *a2 = result;
  return result;
}

id sub_1D6F30478(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setModalityPreferences_, *a1);
}

id sub_1D6F3048C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_schedule);
  *a2 = result;
  return result;
}

id sub_1D6F304C8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSchedule_, *a1);
}

id ManagedWorkoutPlanTrainerIdentifier.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = objc_msgSend(objc_allocWithZone(v2), sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

id ManagedWorkoutPlanTrainerIdentifier.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for ManagedWorkoutPlanTrainerIdentifier();
  id v5 = objc_msgSendSuper2(&v7, sel_initWithEntity_insertIntoManagedObjectContext_, a1, a2);

  return v5;
}

uint64_t type metadata accessor for ManagedWorkoutPlanTrainerIdentifier()
{
  return self;
}

id ManagedWorkoutPlanTrainerIdentifier.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ManagedWorkoutPlanTrainerIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id static ManagedWorkoutPlanTrainerIdentifier.fetchRequest()()
{
  id v0 = objc_allocWithZone(MEMORY[0x1E4F1C0D0]);
  id v1 = (void *)sub_1D6FA98B0();
  id v2 = objc_msgSend(v0, sel_initWithEntityName_, v1);

  return v2;
}

uint64_t sub_1D6F306B4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ManagedWorkoutPlanTrainerIdentifier();
  uint64_t result = sub_1D6FAA750();
  *a1 = result;
  return result;
}

id sub_1D6F30700@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_modalityPreference);
  *a2 = result;
  return result;
}

id sub_1D6F3073C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setModalityPreference_, *a1);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t JE2f6WCx(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * (dword_1EA807EE0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807EE0 ^ 0x5E ^ dword_1EA807E68))] ^ 0x55])
                + 66);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83B88
                                    + (*((unsigned __int8 *)off_1F2E83CA0
                                       + (-93 * (v2 ^ dword_1EA807E68 ^ 0x5E))
                                       - 8) ^ 0x8Eu)
                                    - 4) ^ (-93 * (v2 ^ dword_1EA807E68 ^ 0x5E)))
                - 7);
  uint64_t v4 = (*(void *)(v3 - 4) ^ v2) - (void)&v6;
  *(void *)(v1 - 4) = 1233700771 * v4 - 0x51BD24D370C3655ELL;
  *(void *)(v3 - 4) = 1233700771 * (v4 ^ 0x51BD24D370C3655ELL);
  unsigned int v7 = 3587
     - 1756268191 * ((1746578846 - (&v7 | 0x681AAD9E) + (&v7 | 0x97E55261)) ^ 0xC280B2DF);
  uint64_t v8 = a1;
  LOBYTE(v3) = -93 * ((*(_DWORD *)(v3 - 4) - *(_DWORD *)(v1 - 4)) ^ 0x5E);
  (*((void (**)(unsigned int *))*(&off_1F2E838F0
                                           + ((-93
                                                                            * (dword_1EA807EE0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807EE0 ^ 0x5E ^ dword_1EA807E68))] ^ 0x13])
                                           + 2)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0 + v3) ^ 0x55u)
                                     - 8) ^ v3)
   + 4441))(&v7);
  return (v9 - 101372955);
}

uint64_t V2qUlL4PZ5VKVXDsUHg5z(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807D28) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807D28) ^ 0x5E))] ^ 0x8A])
                - 127);
  uint64_t v6 = *(void *)(v5 - 4);
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * (v6 ^ dword_1EA807E68 ^ 0x5E))
                                                     - 12) ^ 0x13] ^ (-93 * (v6 ^ dword_1EA807E68 ^ 0x5E)))
                - 105);
  unint64_t v8 = (unint64_t)&v11[v6 + *(void *)(v7 - 4)];
  *(void *)(v5 - 4) = 1233700771 * v8 - 0x11759101A7DA6326;
  *(void *)(v7 - 4) = 1233700771 * (v8 ^ 0x51BD24D370C3655ELL);
  unsigned int v9 = 1067412197
     * ((((&v12 | 0xA9BCB0D0) ^ 0xFFFFFFFE) - (~&v12 | 0x56434F2F)) ^ 0xE54F0D21);
  unsigned int v12 = 2350 - v9;
  unsigned int v14 = v9 ^ ((a4 ^ 0xB7EAFAEF) + 1879045632 + ((2 * a4) & 0x6FD5F5DE));
  uint64_t v13 = a5;
  unsigned int v16 = (a2 ^ 0xFBFEFF39) + ((2 * a2) & 0xF7FDFE72) + 1326942159 + v9;
  uint64_t v15 = a3;
  uint64_t v18 = a1;
  LOBYTE(v5) = -93 * (*(_DWORD *)(v5 - 4) ^ 0x5E ^ *(_DWORD *)(v7 - 4));
  (*((void (**)(unsigned int *))*(&off_1F2E838F0
                                           + ((-93 * ((dword_1EA807E68 - dword_1EA807D28) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 - dword_1EA807D28) ^ 0x5E))] ^ 0x7E])
                                           - 77)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v5 - 4) ^ 0xA9u)
                                     - 8) ^ v5)
   + 4415))(&v12);
  return (v17 - 101372955);
}

uint64_t f5zGmdURga6BZ(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 - dword_1EA807A40) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 - dword_1EA807A40) ^ 0x5E))] ^ 0x8E])
       + 32);
  unsigned __int8 v6 = -93 * ((dword_1EA807E68 - *v5) ^ 0x5E);
  uint64_t v7 = (unsigned __int8 *)off_1F2E83AF0;
  uint64_t v8 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83918 + (*((unsigned __int8 *)off_1F2E83AE8 + v6 - 8) ^ 0x77u)
                                                             - 4) ^ v6)
                - 124);
  unint64_t v9 = *v5 ^ (unint64_t)&v12 ^ *(void *)(v8 - 4);
  *uint64_t v5 = 1233700771 * v9 - 0x51BD24D370C3655ELL;
  *(void *)(v8 - 4) = 1233700771 * (v9 ^ 0x51BD24D370C3655ELL);
  unsigned int v10 = 1629346421 * ((2 * (v13 & 0x1E391410) - v13 + 1640426472) ^ 0x47847E11);
  v13[0] = (a1 ^ 0xBDAFDDF7) + ((2 * a1) & 0x7B5FBBEE) + 2139054876 + v10;
  v13[1] = v10 ^ 0xE6F;
  unsigned int v18 = (a3 ^ 0xEFF4EBCE) + ((2 * a3) & 0xDFE9D79C) - v10 + 2103432704;
  uint64_t v16 = a2;
  uint64_t v17 = a5;
  uint64_t v14 = a4;
  LOBYTE(v5) = -93 * (*(_DWORD *)v5 ^ 0x5E ^ *(_DWORD *)(v8 - 4));
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93
                                                                      * ((dword_1EA807E68 - dword_1EA807A40) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807A40) ^ 0x5E))] ^ 0x13])
                                     + 2)
   + (*((unsigned char *)off_1F2E83CF8 + (v7[v5] ^ 0x41u) - 8) ^ v5)
   + 4401))(v13);
  return (v15 - 101372955);
}

uint64_t AePuaz8DCwOiy3obi3eUASRayF()
{
  return 4294924507;
}

uint64_t pMfUpmEM2xW(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * (dword_1EA807E70 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807E70 ^ 0x5E ^ dword_1EA807E68))] ^ 0x9A])
                - 96);
  uint64_t v4 = *(void *)(v3 - 4);
  uint64_t v5 = (char *)off_1F2E83CA0 - 8;
  unsigned __int8 v6 = (char *)off_1F2E83B88 - 4;
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83B88
                                    + (*((unsigned __int8 *)off_1F2E83CA0
                                       + (-93 * (v4 ^ dword_1EA807E68 ^ 0x5E))
                                       - 8) ^ 0xDAu)
                                    - 4) ^ (-93 * (v4 ^ dword_1EA807E68 ^ 0x5E)))
                - 67);
  uint64_t v8 = v4 - (void)&v10 + *(void *)(v7 - 4);
  *(void *)(v3 - 4) = 1233700771 * v8 - 0x11759101A7DA6326;
  *(void *)(v7 - 4) = 1233700771 * (v8 ^ 0x51BD24D370C3655ELL);
  LODWORD(v8) = 1067412197 * ((v11 & 0x276B5201 | ~(v11 | 0x276B5201)) ^ 0x6B98EFF0);
  uint64_t v12 = a2;
  int v13 = v8 ^ 0x8CCE470E;
  int v15 = (a3 ^ 0xEDCEF9F7) + ((2 * a3) & 0xDB9DF3EE) + 1072801535 + v8;
  uint64_t v14 = a1;
  LOBYTE(v7) = -93 * ((*(_DWORD *)(v7 - 4) - *(_DWORD *)(v3 - 4)) ^ 0x5E);
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * ((dword_1EA807E68 - dword_1EA807E70) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807E70) ^ 0x5E))] ^ 0x9A])
                                    - 58)
   + (v7 ^ v6[v5[v7] ^ 0x8E])
   + 4393))(v11);
  return 4294924507;
}

uint64_t RbGlMmy8pVzTlxW41KGzMrqckl4Pa345h(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v20 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (uint64_t *)*(&off_1F2E838F0
                  + ((-93 * ((dword_1EA807E68 + dword_1EA807D78) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 + dword_1EA807D78) ^ 0x5E))] ^ 0xDA])
                  - 76);
  unsigned __int8 v6 = -93 * ((dword_1EA807E68 + *v5) ^ 0x5E);
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v6 - 12) ^ 0x13] ^ v6)
                - 105);
  uint64_t v8 = 1233700771 * (((*(void *)(v7 - 4) ^ *v5) - (void)&v11) ^ 0x51BD24D370C3655ELL);
  *uint64_t v5 = v8;
  *(void *)(v7 - 4) = v8;
  unsigned int v9 = 1067412197 * (((~&v12 | 0x672474C4) + (&v12 | 0x98DB8B3B)) ^ 0x2BD7C934);
  char v14 = 38 - -27 * (((~&v12 | 0xC4) + (&v12 | 0x3B)) ^ 0x34);
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v15 = a4;
  unsigned int v13 = v9 + 1592;
  uint64_t v12 = a5;
  unsigned int v16 = (a3 ^ 0x7C4FBC7C) + ((2 * a3) & 0xF89F78F8) - 2014191624 + v9;
  LOBYTE(v7) = -93 * (*(_DWORD *)v5 ^ 0x5E ^ *(_DWORD *)(v7 - 4));
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93 * ((dword_1EA807E68 + dword_1EA807D78) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807D78) ^ 0x5E))] ^ 0x2B])
                                      - 20)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0 + v7) ^ 0x41u)
                                     - 8) ^ v7)
   + 4467))(&v12);
  return (v17 - 101372955);
}

uint64_t C956s6fM(uint64_t a1, uint64_t a2, int a3, uint64_t *a4)
{
  uint64_t v26 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - dword_1EA807A70) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807A70) ^ 0x5E))] ^ 0x9A])
                - 112);
  uint64_t v6 = *(void *)(v5 - 4);
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 + v6) ^ 0x5E))
                                                     - 12) ^ 0xBC] ^ (-93 * ((dword_1EA807E68 + v6) ^ 0x5E)))
                - 225);
  uint64_t v8 = *(void *)(v7 - 4) - v6 - (void)&v13;
  *(void *)(v5 - 4) = 1233700771 * v8 - 0x11759101A7DA6326;
  *(void *)(v7 - 4) = 1233700771 * (v8 ^ 0x51BD24D370C3655ELL);
  uint64_t v12 = *a4;
  unsigned int v9 = 462300053 * (((v14 | 0xDA881BCD) - (v14 & 0xDA881BCD)) ^ 0xC5E5EFC4);
  uint64_t v25 = 0x52214B67DD7D558ALL;
  int v15 = v9 ^ 0xC8A;
  uint64_t v16 = 0;
  uint64_t v17 = a2;
  uint64_t v19 = a1;
  uint64_t v20 = 0x46AAD4E1DD9011D4;
  uint64_t v21 = &v12;
  uint64_t v23 = 0x1BD79320A3352CAFLL;
  uint64_t v24 = 0x3661B8258914B089;
  v14[0] = v9 + 13;
  unsigned int v22 = (a3 ^ 0x6EFDFFB7) + ((2 * a3) & 0xDDFBFF6E) - v9 - 675562917;
  LOBYTE(v5) = -93 * ((*(_DWORD *)(v7 - 4) + *(_DWORD *)(v5 - 4)) ^ 0x5E);
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * ((dword_1EA807E68 + dword_1EA807A70) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807A70) ^ 0x5E))] ^ 0xA9])
                                    + 62)
   + (*((unsigned char *)off_1F2E83918
                                     + (*((unsigned __int8 *)off_1F2E83AE8 + v5 - 8) ^ 0x77u)
                                     - 4) ^ v5)
   + 4306))(v14);
  int v10 = v18;
  *a4 = v12;
  return (v10 - 101372955);
}

uint64_t yeK4PYa0FECNZ0Zf6bG9lKsLX8V()
{
  return 4294924507;
}

uint64_t JvfqldDvSIjTyuq(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * (dword_1EA807D50 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * (dword_1EA807D50 ^ 0x5E ^ dword_1EA807E68))] ^ 0x8E])
                + 52);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83CF8
                                    + (*((unsigned __int8 *)off_1F2E83AF0
                                       + (-93 * ((dword_1EA807E68 - v2) ^ 0x5E))) ^ 0x7Eu)
                                    - 8) ^ (-93 * ((dword_1EA807E68 - v2) ^ 0x5E)))
                - 184);
  unint64_t v4 = (unint64_t)&v6[v2 + *(void *)(v3 - 4)];
  *(void *)(v1 - 4) = 1233700771 * (v4 - 0x51BD24D370C3655ELL);
  *(void *)(v3 - 4) = 1233700771 * (v4 ^ 0x51BD24D370C3655ELL);
  uint64_t v8 = a1;
  unsigned int v7 = 3587
     - 1756268191 * ((1303241506 - (&v7 | 0x4DADE322) + (&v7 | 0xB2521CDD)) ^ 0xE737FC63);
  LOBYTE(v3) = -93 * ((*(_DWORD *)(v3 - 4) + *(_DWORD *)(v1 - 4)) ^ 0x5E);
  (*((void (**)(unsigned int *))*(&off_1F2E838F0
                                           + ((-93 * ((dword_1EA807E68 - dword_1EA807D50) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - dword_1EA807D50) ^ 0x5E))] ^ 0x8A])
                                           - 99)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v3 - 4) ^ 0x5Bu)
                                     - 8) ^ v3)
   + 4381))(&v7);
  return (v9 - 101372955);
}

uint64_t NShFxR7kzzF227Pf(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = (uint64_t *)*(&off_1F2E838F0
                   + ((-93 * (dword_1EA807EF8 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * (dword_1EA807EF8 ^ 0x5E ^ dword_1EA807E68))] ^ 0x5B])
                   - 63);
  unsigned __int8 v11 = -93 * ((dword_1EA807E68 - *v10) ^ 0x5E);
  uint64_t v12 = (uint64_t)*(&off_1F2E838F0
                 + (*((unsigned char *)off_1F2E83B88
                                     + (*((unsigned __int8 *)off_1F2E83CA0 + v11 - 8) ^ 0x8Eu)
                                     - 4) ^ v11)
                 - 7);
  uint64_t v13 = 1233700771 * (((*(void *)(v12 - 4) ^ *v10) - (void)&v21) ^ 0x51BD24D370C3655ELL);
  *uint64_t v10 = v13;
  *(void *)(v12 - 4) = v13;
  uint64_t v14 = 0x1DF9787F30281A19 * a1 + 0x1E4D227EC11DAB65;
  unsigned int v15 = (a2 ^ 0x7D77AFB7) + ((2 * a2) & 0xFAEF5F6E);
  unsigned int v16 = (a4 ^ 0xB6E83BE3) + ((2 * a4) & 0x6DD077C6);
  unsigned int v17 = (a6 ^ 0xB4E8F9EF) + ((2 * a6) & 0x69D1F3DE);
  unint64_t v18 = 1067412197 * ((unint64_t)v22 ^ 0xDA307690B30C420ELL);
  char v27 = -19 - v18;
  uint64_t v25 = a7;
  unint64_t v26 = v18 ^ v14;
  uint64_t v31 = a5;
  uint64_t v32 = a9;
  int v33 = v18 ^ 0x745;
  int v28 = v18 + 1489733386;
  v22[0] = v15 - v18 - 1610875792;
  v22[1] = v18 + 494119975;
  uint64_t v23 = a3;
  uint64_t v24 = 0;
  void v22[2] = v17 - v18 + 2146901874;
  v22[4] = v16 - v18 + 2113396094;
  uint64_t v29 = a8;
  uint64_t v30 = a10;
  unsigned __int8 v19 = -93 * ((*(_DWORD *)(v12 - 4) + *(_DWORD *)v10) ^ 0x5E);
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * ((dword_1EA807E68 - dword_1EA807EF8) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807EF8) ^ 0x5E))] ^ 0x1B])
                                     - 96)
   + (*((unsigned char *)off_1F2E83918
                                     + (*((unsigned __int8 *)off_1F2E83AE8 + v19 - 8) ^ 0x77u)
                                     - 4) ^ v19)
   + 4286))(v22);
  return (v22[3] - 101372955);
}

uint64_t CciXYFQnBz4DB9mkGvXwsTwkFUalVp70Gcf5Y(uint64_t a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  unsigned int v7 = (uint64_t *)*(&off_1F2E838F0
                  + (*((unsigned char *)off_1F2E83918
                                      + ~*((unsigned char *)off_1F2E83AE8
                                                          + (-93
                                                                            * (dword_1EA807A38 ^ 0x5E ^ dword_1EA807E68))
                                                          - 8)
                                      - 4) ^ (-93 * (dword_1EA807A38 ^ 0x5E ^ dword_1EA807E68)))
                  - 4);
  unsigned __int8 v8 = -93 * ((dword_1EA807E68 - *v7) ^ 0x5E);
  uint64_t v9 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v8 - 12) ^ 0x9A] ^ v8)
                - 165);
  uint64_t v10 = 1233700771 * ((*(void *)(v9 - 4) - *v7 - (void)&v13) ^ 0x51BD24D370C3655ELL);
  *unsigned int v7 = v10;
  *(void *)(v9 - 4) = v10;
  unsigned int v11 = 693013459
      * (((&v14 | 0x5CA7C175) - &v14 + (&v14 & 0xA3583E88)) ^ 0x50BC72F9);
  uint64_t v14 = a1;
  uint64_t v18 = a4;
  int v19 = v11 + 364678101 * a2 + 1141248014;
  unsigned int v20 = v11 ^ 0x847C8725;
  int v17 = 1846432025 * a5 - v11 + 1957639145;
  uint64_t v21 = a6;
  unsigned int v15 = a7 - ((2 * a7) & 0xE6194C6E) - v11 + 1930208823;
  unsigned int v16 = (a3 ^ 0x7F9FE6D6) + ((2 * a3) & 0xFF3FCDAC) - 75972608 + v11;
  LOBYTE(v7) = -93 * ((*(_DWORD *)(v9 - 4) + *(_DWORD *)v7) ^ 0x5E);
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93 * ((dword_1EA807E68 - dword_1EA807A38) ^ 0x5E)) ^ byte_1D6FC6F00[byte_1D6FC6A00[(-93 * ((dword_1EA807E68 - dword_1EA807A38) ^ 0x5E))] ^ 0x77])
                                      - 17)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v7 - 4) ^ 0x8Au)
                                     - 8) ^ v7)
   + 4153))(&v14);
  return 4294924507;
}

uint64_t f8M4nz0rXT(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t *)*(&off_1F2E838F0
                  + ((-93 * (dword_1EA807BE8 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807BE8 ^ 0x5E ^ dword_1EA807E68))] ^ 0x41])
                  - 1);
  uint64_t v2 = (char *)off_1F2E83BE8 - 12;
  uint64_t v3 = off_1F2E83C28;
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 - *v1) ^ 0x5E))
                                                     - 12) ^ 0x1B] ^ (-93 * ((dword_1EA807E68 - *v1) ^ 0x5E)))
                - 203);
  unint64_t v5 = (unint64_t)&v7[*(void *)(v4 - 4) - *v1];
  *uint64_t v1 = (1233700771 * v5) ^ 0x51BD24D370C3655ELL;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  v8[0] = 1066 - 1067412197 * (((v8 | 0x60DDF145) - (v8 & 0x60DDF145)) ^ 0xD3D1B34B);
  uint64_t v9 = a1;
  LOBYTE(v4) = -93 * ((*(_DWORD *)(v4 - 4) - *(_DWORD *)v1) ^ 0x5E);
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * ((dword_1EA807E68 + dword_1EA807BE8) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807BE8) ^ 0x5E))] ^ 0x53])
                                     - 115)
   + (v4 ^ (*v3)[v2[v4] ^ 0xBC])
   + 4176))(v8);
  return v8[1] ^ 0x71BA9614u;
}

uint64_t YB9vHaqzUjRzn(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v30 = *MEMORY[0x1E4F143B8];
  unsigned int v11 = *(&off_1F2E838F0
        + ((-93 * ((dword_1EA807E68 + dword_1EA807A88) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807A88) ^ 0x5E))] ^ 0x13])
        - 86);
  uint64_t v12 = (uint64_t)*(&off_1F2E838F0
                 + ((-93 * ((dword_1EA807E68 + *v11) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + *v11) ^ 0x5E))] ^ 0x8A])
                 - 206);
  uint64_t v13 = *(void *)(v12 - 4) - *v11 - (void)&v15;
  *unsigned int v11 = 1233700771 * v13 - 0x11759101A7DA6326;
  *(void *)(v12 - 4) = 1233700771 * (v13 ^ 0x51BD24D370C3655ELL);
  LODWORD(v13) = 253222187 * ((((2 * &v16) | 0x3BB3A7A6) - &v16 - 500814803) ^ 0x1515FBF5);
  int v29 = v13 + 1569;
  int v22 = v13 ^ ((a4 ^ 0xD9BFEDAD) + 1853448031 + ((2 * a4) & 0xB37FDB5A));
  int v25 = (a2 ^ 0xFB7BDD0D) + ((2 * a2) & 0xF6F7BA1A) + 1287483391 + v13;
  uint64_t v16 = a1;
  uint64_t v26 = a10;
  int v27 = (a8 ^ 0xE97B5D6C) + ((2 * a8) & 0xD2F6BAD8) + 1589505952 + v13;
  int v17 = (a6 ^ 0xE770FD8F) + ((2 * a6) & 0xCEE1FB1E) + 2113918965 + v13;
  uint64_t v21 = a11;
  char v20 = 43 * ((((2 * &v16) | 0xA6) - &v16 + 45) ^ 0xF5) + 35;
  uint64_t v24 = a9;
  uint64_t v18 = a5;
  uint64_t v19 = a3;
  uint64_t v28 = a7;
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93 * (dword_1EA807A88 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807A88 ^ 0x5E ^ dword_1EA807E68))] ^ 0x1B])
                                      - 96)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0
                                        + (-93 * ((*(unsigned char *)(v12 - 4) - *(unsigned char *)v11) ^ 0x5E))) ^ 0x2Bu)
                                     - 8) ^ (-93 * ((*(unsigned char *)(v12 - 4) - *(unsigned char *)v11) ^ 0x5E)))
   + 4249))(&v16);
  return (v23 - 101372955);
}

uint64_t qo0PLbO2vEnVix1GkQeB8LR(int a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(&off_1F2E838F0
       + ((-93 * (dword_1EA807D68 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807D68 ^ 0x5E ^ dword_1EA807E68))] ^ 0x41])
       + 40);
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83CF8
                                    + (*((unsigned __int8 *)off_1F2E83AF0
                                       + (-93 * ((dword_1EA807E68 - *v1) ^ 0x5E))) ^ 0x55u)
                                    - 8) ^ (-93 * ((dword_1EA807E68 - *v1) ^ 0x5E)))
                - 26);
  unint64_t v3 = (unint64_t)&v6[*v1 + *(void *)(v2 - 4)];
  *uint64_t v1 = 1233700771 * v3 - 0x11759101A7DA6326;
  *(void *)(v2 - 4) = 1233700771 * (v3 ^ 0x51BD24D370C3655ELL);
  LODWORD(v3) = (a1 ^ 0x3F76FAF3) + ((2 * a1) & 0x7EEDF5E6);
  unsigned int v4 = 2106769199 * ((((v7 | 0x7A34870E) ^ 0xFFFFFFFE) - (~v7 | 0x85CB78F1)) ^ 0xC96B175D);
  v7[0] = 1639 - v4;
  v7[1] = v3 - v4 - 35661888;
  LOBYTE(v1) = -93 * (*(_DWORD *)v1 ^ 0x5E ^ *(_DWORD *)(v2 - 4));
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93
                                                                      * ((dword_1EA807E68 + dword_1EA807D68) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807D68) ^ 0x5E))] ^ 0x55])
                                     + 81)
   + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v1 - 12) ^ 0x13] ^ v1)
   + 4293))(v7);
  return (v7[2] - 101372955);
}

uint64_t HI6qekxO6hjx()
{
  return 4294924507;
}

uint64_t ZPgKbdFMwRgHoKHRfhLwlbNZ77M(uint64_t a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, __int16 a12)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = (uint64_t *)*(&off_1F2E838F0
                   + ((-93 * ((dword_1EA807E68 + dword_1EA807C00) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807C00) ^ 0x5E))] ^ 0x13])
                   - 7);
  uint64_t v13 = (char *)off_1F2E83BE8 - 12;
  uint64_t v14 = off_1F2E83C28;
  uint64_t v15 = (uint64_t)*(&off_1F2E838F0
                 + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                      + (-93 * (*v12 ^ dword_1EA807E68 ^ 0x5E))
                                                      - 12) ^ 0x53] ^ (-93 * (*v12 ^ dword_1EA807E68 ^ 0x5E)))
                 - 222);
  unint64_t v16 = (unint64_t)&v18[*(void *)(v15 - 4) - *v12];
  uint64_t *v12 = (1233700771 * v16) ^ 0x51BD24D370C3655ELL;
  *(void *)(v15 - 4) = 1233700771 * (v16 ^ 0x51BD24D370C3655ELL);
  LODWORD(v16) = 597255653 * ((~v19 & 0x79F1C2A4 | v19 & 0x860E3D5B) ^ 0x14A2AC1D);
  v19[0] = -80898302 - v16;
  v19[1] = v16 + a5;
  uint64_t v27 = a4;
  uint64_t v29 = a1;
  uint64_t v30 = a8;
  void v19[2] = v16 + a2;
  uint64_t v22 = a10;
  uint64_t v20 = a6;
  unsigned int v23 = v16 ^ a3;
  uint64_t v24 = a11;
  unsigned int v25 = v16 ^ a7;
  int v26 = a9 - v16;
  __int16 v28 = a12 - 26085 * ((~(unsigned __int16)v19 & 0xC2A4 | (unsigned __int16)v19 & 0x3D5B) ^ 0xAC1D);
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807C00 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807C00 ^ 0x5E ^ dword_1EA807E68))] ^ 0x53])
                                     - 115)
   + ((-93 * ((*(_DWORD *)(v15 - 4) - *(_DWORD *)v12) ^ 0x5E)) ^ (*v14)[v13[(-93 * ((*(_DWORD *)(v15 - 4) - *(_DWORD *)v12) ^ 0x5E))] ^ 0x53])
   + 4214))(v19);
  return v21;
}

uint64_t rRYQuwj7HYeZMhTReWwPHi(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  unint64_t v3 = *(&off_1F2E838F0
       + ((-93 * (dword_1EA807AB8 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807AB8 ^ 0x5E ^ dword_1EA807E68))] ^ 0x41])
       + 94);
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83CF8
                                                  + (*((unsigned __int8 *)off_1F2E83AF0
                                                     + (-93 * ((dword_1EA807E68 + *v3) ^ 0x5E))) ^ 0x41u)
                                                  - 8) ^ (-93 * ((dword_1EA807E68 + *v3) ^ 0x5E)))
                + 12);
  uint64_t v5 = *v3 - (void)&v8 + *(void *)(v4 - 4);
  *unint64_t v3 = 1233700771 * v5 - 0x51BD24D370C3655ELL;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  unint64_t v6 = 597255653 * ((unint64_t)v9 ^ 0xC3F488EE6D536EB9);
  v9[0] = v6 + 0x4E350C54CF3AFFD9;
  v9[1] = v6 - 0x7ECD902D2B7E4537;
  int v10 = v6 + 2222;
  int v11 = (v6 + 466940279) | 1;
  uint64_t v12 = a3;
  uint64_t v13 = a1;
  int v15 = v6 ^ 0x6C2D8673;
  int v16 = 466940279 - v6;
  uint64_t v17 = a2;
  uint64_t v18 = 0;
  LOBYTE(v4) = -93 * ((*(_DWORD *)(v4 - 4) + *(_DWORD *)v3) ^ 0x5E);
  (*((void (**)(void *))*(&off_1F2E838F0
                                     + ((-93
                                                                      * ((dword_1EA807E68 - dword_1EA807AB8) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807AB8) ^ 0x5E))] ^ 0x13])
                                     + 2)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v4 - 4) ^ 0x8Au)
                                     - 8) ^ v4)
   + 4212))(v9);
  return (v14 - 101372955);
}

uint64_t f834ofwoih1(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  int v11 = *(&off_1F2E838F0
        + ((-93 * ((dword_1EA807E68 + dword_1EA807E98) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807E98) ^ 0x5E))] ^ 0x55])
        + 16);
  uint64_t v12 = (uint64_t)*(&off_1F2E838F0
                 + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0
                                        + (-93 * (*v11 ^ dword_1EA807E68 ^ 0x5E))) ^ 0x7Eu)
                                     - 8) ^ (-93 * (*v11 ^ dword_1EA807E68 ^ 0x5E)))
                 - 184);
  uint64_t v13 = (*(void *)(v12 - 4) ^ *v11) - (void)&v17;
  *int v11 = 1233700771 * v13 + 0x51BD24D370C3655ELL;
  *(void *)(v12 - 4) = 1233700771 * (v13 ^ 0x51BD24D370C3655ELL);
  unint64_t v14 = 693013459
      * ((((unint64_t)v18 | 0xFDDE62E4A6F69EB9) - (void)v18 + ((unint64_t)v18 & 0x2219D1B59096140)) ^ 0x8B2E6104AAED2D35);
  uint64_t v34 = a2;
  v18[0] = 53 - v14;
  int v19 = v14 + 1675139122;
  int v20 = v14 ^ ((a7 ^ 0xFFCD6FFB) + 2046819808 + ((2 * a7) & 0xFF9ADFF6));
  uint64_t v26 = 0;
  uint64_t v27 = a4;
  int v35 = v14 ^ 0xECC;
  uint64_t v28 = a6;
  uint64_t v29 = a10;
  uint64_t v23 = a11;
  uint64_t v24 = a8;
  int v25 = v14 ^ 0x15E878F7;
  int v30 = v14 ^ ((a3 ^ 0xBFFAFAFF) + 1441627640 + ((2 * a3) & 0x7FF5F5FE));
  int v31 = (a5 ^ 0xBDEF7CF7) + ((2 * a5) & 0x7BDEF9EE) + 1475935232 + v14;
  uint64_t v32 = a9;
  uint64_t v33 = v14 + 0x653EC904EC380E05 * a1 + 0x43FE5CE22EA4989ALL;
  uint64_t v21 = 0;
  unsigned __int8 v15 = -93 * (*(_DWORD *)v11 ^ 0x5E ^ *(_DWORD *)(v12 - 4));
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * ((dword_1EA807E68 + dword_1EA807E98) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807E98) ^ 0x5E))] ^ 0x8A])
                                    - 99)
   + (*((unsigned char *)off_1F2E83B88
                                     + (*((unsigned __int8 *)off_1F2E83CA0 + v15 - 8) ^ 0xDAu)
                                     - 4) ^ v15)
   + 4340))(v18);
  return (v22 - 101372955);
}

uint64_t hFQBjnUlBh73NidnyhtgBkR(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 - dword_1EA807E90) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807E90) ^ 0x5E))] ^ 0x1B])
       - 188);
  unsigned __int8 v6 = -93 * ((dword_1EA807E68 + *v5) ^ 0x5E);
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v6 - 12) ^ 0x1B] ^ v6)
                - 203);
  uint64_t v8 = *(void *)(v7 - 4) - *v5 - (void)&v10;
  *uint64_t v5 = 1233700771 * (v8 - 0x51BD24D370C3655ELL);
  *(void *)(v7 - 4) = 1233700771 * (v8 ^ 0x51BD24D370C3655ELL);
  LODWORD(v8) = 693013459 * (((&v11 | 0x68B9E0B6) - (&v11 & 0x68B9E0B6)) ^ 0x64A2533A);
  uint64_t v15 = a1;
  uint64_t v16 = a3;
  int v13 = v8 ^ a4;
  int v14 = v8 + a2;
  int v11 = v8 ^ 0x177C1D1C;
  int v17 = v8;
  uint64_t v12 = a5;
  LODWORD(v7) = 1233700771 * ((*(_DWORD *)(v7 - 4) - *(_DWORD *)v5) ^ 0x70C3655E);
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * ((dword_1EA807E68 - dword_1EA807E90) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807E90) ^ 0x5E))] ^ 0x53])
                                  - 115)
   + (*((unsigned char *)off_1F2E83B80
                                     + (*((unsigned __int8 *)off_1F2E83928 + v7 - 8) ^ 0x94u)
                                     - 4) ^ v7)
   + 4267))(&v11);
  return 4294924507;
}

uint64_t KUndSWGZ9wrfzhCOQ2qDQiWsxmFc(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, __int16 a11)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  int v11 = (unint64_t *)*(&off_1F2E838F0
                            + ((-93 * ((dword_1EA807E68 + dword_1EA807D40) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807D40) ^ 0x5E))] ^ 0x55])
                            + 52);
  uint64_t v12 = (uint64_t)*(&off_1F2E838F0
                 + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0
                                        + (-93 * (*v11 ^ dword_1EA807E68 ^ 0x5E))) ^ 0x7Eu)
                                     - 8) ^ (-93 * (*v11 ^ dword_1EA807E68 ^ 0x5E)))
                 - 184);
  unint64_t v13 = (*(void *)(v12 - 4) - *v11) ^ (unint64_t)&v16;
  *int v11 = (1233700771 * v13) ^ 0x51BD24D370C3655ELL;
  *(void *)(v12 - 4) = 1233700771 * (v13 ^ 0x51BD24D370C3655ELL);
  LODWORD(v13) = 597255653 * ((2 * (v17 & 0x580BE270) - v17 - 1477173878) ^ 0xCAA77333);
  uint64_t v19 = a9;
  uint64_t v18 = a5;
  uint64_t v21 = a10;
  uint64_t v24 = a3;
  __int16 v25 = a11 - 26085 * ((2 * ((unsigned __int16)v17 & 0xE270) - (unsigned __int16)v17 + 7562) ^ 0x7333);
  int v22 = v13 ^ a6;
  int v23 = a8 - v13;
  int v20 = v13 ^ a2;
  uint64_t v26 = a1;
  uint64_t v27 = a7;
  v17[0] = -80898302 - v13;
  v17[1] = v13 + a4;
  v17[2] = v13;
  unsigned __int8 v14 = -93 * (*(_DWORD *)v11 ^ 0x5E ^ *(_DWORD *)(v12 - 4));
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * ((dword_1EA807E68 + dword_1EA807D40) ^ 0x5E)) ^ byte_1D6FC6F00[byte_1D6FC6A00[(-93 * ((dword_1EA807E68 + dword_1EA807D40) ^ 0x5E))] ^ 0x77])
                                     - 17)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v14 - 4) ^ 0x8Au)
                                     - 8) ^ v14)
   + 4230))(v17);
  return 4294924507;
}

uint64_t aKeVWoe7wccnyNtFnnlVWo9vevkq()
{
  return 4294924507;
}

uint64_t lqtZaLGdmGda()
{
  return 4294924507;
}

uint64_t y8pV7asDWoewnLKioln2o9v()
{
  return 4294924507;
}

uint64_t Nl4Hw2Sh0cWnSkP(int a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - dword_1EA807CF8) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 - dword_1EA807CF8) ^ 0x5E))] ^ 0x55])
                + 25);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 + v2) ^ 0x5E))
                                                     - 12) ^ 0x13] ^ (-93 * ((dword_1EA807E68 + v2) ^ 0x5E)))
                - 105);
  unint64_t v4 = 1233700771 * ((unint64_t)&v6[*(void *)(v3 - 4) - v2] ^ 0x51BD24D370C3655ELL);
  *(void *)(v1 - 4) = v4;
  *(void *)(v3 - 4) = v4;
  LODWORD(v4) = 2106769199
              * (((v7 ^ 0x936FA0A4) + 796089893 - 2 * ((v7 ^ 0x936FA0A4) & 0x2F735E25)) ^ 0xF0BC912D);
  v7[0] = 1639 - v4;
  v7[1] = (a1 ^ 0x7DFEDEF3) + ((2 * a1) & 0xFBFDBDE6) - v4 - 1084755008;
  LOBYTE(v3) = -93 * ((*(_DWORD *)(v3 - 4) - *(_DWORD *)(v1 - 4)) ^ 0x5E);
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93
                                                                      * ((dword_1EA807E68 + dword_1EA807CF8) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807CF8) ^ 0x5E))] ^ 0x55])
                                     + 81)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0 + v3) ^ 0x7Eu)
                                     - 8) ^ v3)
   + 4214))(v7);
  return (v7[2] - 101372955);
}

uint64_t PNFzIarR537mpF(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v12 = (unint64_t *)*(&off_1F2E838F0
                            + ((-93 * (dword_1EA807F28 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807F28 ^ 0x5E ^ dword_1EA807E68))] ^ 0x53])
                            - 249);
  unint64_t v13 = (char *)off_1F2E83BE8 - 12;
  unsigned __int8 v14 = off_1F2E83C28;
  uint64_t v15 = (uint64_t)*(&off_1F2E838F0
                 + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                      + (-93 * ((dword_1EA807E68 + *v12) ^ 0x5E))
                                                      - 12) ^ 0x53] ^ (-93 * ((dword_1EA807E68 + *v12) ^ 0x5E)))
                 - 222);
  unint64_t v16 = 1233700771 * ((unint64_t)&v19[*(void *)(v15 - 4) - *v12] ^ 0x51BD24D370C3655ELL);
  unint64_t *v12 = v16;
  *(void *)(v15 - 4) = v16;
  unint64_t v17 = 1067412197
      * ((((unint64_t)v20 | 0xC59D9380740F2E4ALL)
        - ((unint64_t)v20 | 0x3A626C7F8BF0D1B5)
        + 0x3A626C7F8BF0D1B5) ^ 0x1FADE510C7036C44);
  char v25 = -20 - v17;
  uint64_t v21 = a3;
  uint64_t v22 = a5;
  int v26 = (a6 ^ 0x7BDF97FB) + ((2 * a6) & 0xF7BF2FF6) - 588517617 + v17;
  uint64_t v29 = a7;
  uint64_t v30 = a11;
  v20[4] = (a4 ^ 0x7EF41DE3) + ((2 * a4) & 0xFDE83BC6) - v17 - 1242825858;
  uint64_t v27 = a10;
  uint64_t v28 = a12;
  uint64_t v23 = a9;
  uint64_t v24 = v17 ^ (0x1DF9787F30281A19 * a1 + 0x1E4D227EC11DAB65);
  int v31 = v17 ^ 0x745;
  v20[0] = (a2 ^ 0x5FFFECEF) + ((2 * a2) & 0xBFFFD9DE) - v17 - 1116487880;
  v20[1] = v17 + 494119975;
  v20[2] = (a8 ^ 0x3EEEFB67) + ((2 * a8) & 0x7DDDF6CE) - v17 - 168747526;
  LOBYTE(v12) = -93 * ((*(_DWORD *)(v15 - 4) + *(_DWORD *)v12) ^ 0x5E);
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807F28 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * (dword_1EA807F28 ^ 0x5E ^ dword_1EA807E68))] ^ 0x5B])
                                     + 21)
   + (v12 ^ (*v14)[v13[v12] ^ 0x1B])
   + 4207))(v20);
  return (v20[3] - 101372955);
}

uint64_t qOlNXzAbtnr0Is(uint64_t a1, int a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807CF0) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807CF0) ^ 0x5E))] ^ 0x13])
                - 59);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 + v3) ^ 0x5E))
                                                     - 12) ^ 0x13] ^ (-93 * ((dword_1EA807E68 + v3) ^ 0x5E)))
                - 105);
  uint64_t v5 = *(void *)(v4 - 4) - v3 - (void)&v7;
  *(void *)(v2 - 4) = (1233700771 * v5) ^ 0x51BD24D370C3655ELL;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  LODWORD(v3) = 2106769199 * ((((2 * v8) | 0xD6439898) - v8 + 350106548) ^ 0xA781A3E0);
  uint64_t v9 = a1;
  _DWORD v8[2] = v3 ^ 0xFCB63854;
  v8[0] = v3 + 1938131307 * a2 + 1859381268;
  LOBYTE(v4) = -93 * (*(_DWORD *)(v2 - 4) ^ 0x5E ^ *(_DWORD *)(v4 - 4));
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807CF0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807CF0 ^ 0x5E ^ dword_1EA807E68))] ^ 0x7E])
                                     - 77)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v4 - 4) ^ 0xA9u)
                                     - 8) ^ v4)
   + 4387))(v8);
  return 4294924507;
}

uint64_t R7YTuVAR3AZZg93q5T()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  id v0 = (unint64_t *)*(&off_1F2E838F0
                           + ((-93 * ((dword_1EA807E68 - dword_1EA807D60) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - dword_1EA807D60) ^ 0x5E))] ^ 0x5B])
                           - 37);
  uint64_t v1 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83CF8
                                                  + (*((unsigned __int8 *)off_1F2E83AF0
                                                     + (-93 * ((dword_1EA807E68 - *v0) ^ 0x5E))) ^ 0x41u)
                                                  - 8) ^ (-93 * ((dword_1EA807E68 - *v0) ^ 0x5E)))
                + 12);
  unint64_t v2 = 1233700771 * (*v0 ^ (unint64_t)&v4 ^ 0x51BD24D370C3655ELL ^ *(void *)(v1 - 4));
  unint64_t *v0 = v2;
  *(void *)(v1 - 4) = v2;
  unsigned int v6 = (1067412197
      * (((v5 | 0x34A45654) - v5 + (v5 & 0xCB5BA9A8)) ^ 0x87A8145A)) ^ 0xDBA27C11;
  LOBYTE(v1) = -93 * (*(_DWORD *)v0 ^ 0x5E ^ *(_DWORD *)(v1 - 4));
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * ((dword_1EA807E68 - dword_1EA807D60) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - dword_1EA807D60) ^ 0x5E))] ^ 0x5B])
                                    + 21)
   + (*((unsigned char *)off_1F2E83B88
                                     + (*((unsigned __int8 *)off_1F2E83CA0 + v1 - 8) ^ 0xDAu)
                                     - 4) ^ v1)
   + 4401))(v5);
  return 0;
}

uint64_t FLKdioewnv289voppasDk()
{
  return 4294924507;
}

uint64_t CTqR20dAIbQ7rRXM(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v28 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * (dword_1EA807C58 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * (dword_1EA807C58 ^ 0x5E ^ dword_1EA807E68))] ^ 0x8A])
                - 203);
  uint64_t v10 = *(void *)(v9 - 4);
  uint64_t v11 = (uint64_t)*(&off_1F2E838F0
                 + (*((unsigned char *)off_1F2E83B88
                                     + (*((unsigned __int8 *)off_1F2E83CA0
                                        + (-93 * (v10 ^ dword_1EA807E68 ^ 0x5E))
                                        - 8) ^ 0xDAu)
                                     - 4) ^ (-93 * (v10 ^ dword_1EA807E68 ^ 0x5E)))
                 - 67);
  unint64_t v12 = 1233700771 * ((unint64_t)&v16[v10 + *(void *)(v11 - 4)] ^ 0x51BD24D370C3655ELL);
  *(void *)(v9 - 4) = v12;
  *(void *)(v11 - 4) = v12;
  unsigned int v13 = 1742951923
      * (((v17 ^ 0xB26F8790) - 2 * ((v17 ^ 0xB26F8790) & 0x328BB6D1) + 848017105) ^ 0x367EF5D3);
  uint64_t v27 = a8;
  uint64_t v25 = a9;
  char v24 = (-13 * (((v17 ^ 0x90) - 2 * ((v17 ^ 0x90) & 0xD1) - 47) ^ 0xD3)) ^ 0x5B;
  uint64_t v19 = a1;
  uint64_t v21 = a5;
  unsigned int v26 = v13 + 1009597723;
  unsigned int v20 = (a4 ^ 0x7F7DE7CF) + ((2 * a4) & 0xFEFBCF9E) - 1128801282 + v13;
  unsigned int v22 = (a2 ^ 0x7E37F3FD) + ((2 * a2) & 0xFC6FE7FA) - 1107439664 + v13;
  unsigned int v23 = (a6 ^ 0xBCBCDFD7) + ((2 * a6) & 0x7979BFAE) + 2078539451 + v13;
  v17[0] = a7;
  v17[1] = a3;
  unsigned __int8 v14 = -93 * ((*(_DWORD *)(v11 - 4) - *(_DWORD *)(v9 - 4)) ^ 0x5E);
  (*((void (**)(void *))*(&off_1F2E838F0
                                     + ((-93 * ((dword_1EA807E68 + dword_1EA807C58) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807C58) ^ 0x5E))] ^ 0x2B])
                                     - 20)
   + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v14 - 12) ^ 0x1B] ^ v14)
   + 4247))(v17);
  return (v18 - 101372955);
}

uint64_t eb3cw0DOp9lHgRXCLhWA(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = *(&off_1F2E838F0
       + ((-93 * (dword_1EA807AC8 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * (dword_1EA807AC8 ^ 0x5E ^ dword_1EA807E68))] ^ 0x8E])
       + 65);
  unsigned __int8 v9 = -93 * (*v8 ^ dword_1EA807E68 ^ 0x5E);
  uint64_t v10 = (uint64_t)*(&off_1F2E838F0
                 + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v9 - 12) ^ 0x9A] ^ v9)
                 - 165);
  uint64_t v11 = *v8 - (void)&v14 + *(void *)(v10 - 4);
  *uint64_t v8 = 1233700771 * v11 - 0x51BD24D370C3655ELL;
  *(void *)(v10 - 4) = 1233700771 * (v11 ^ 0x51BD24D370C3655ELL);
  unint64_t v12 = 693013459
      * ((~(unint64_t)v15 & 0x5F7C0FA4766A5289 | (unint64_t)v15 & 0xA083F05B8995AD76) ^ 0x298C0C447A71E105);
  uint64_t v31 = a2;
  int v27 = v12 ^ ((a3 ^ 0xD7FDF9F7) + 1038778112 + ((2 * a3) & 0xAFFBF3EE));
  int v28 = (a5 ^ 0x15E8FFF7) + ((2 * a5) & 0x2BD1FFEE) - 34560 + v12;
  int v32 = v12 ^ 0xECC;
  int v22 = v12 ^ 0x15E878F7;
  int v16 = v12 + 1675139122;
  int v17 = v12 ^ 0x79CD6DDB;
  uint64_t v29 = a6;
  uint64_t v30 = v12 + 0x653EC904EC380E05 * a1 + 0x43FE5CE22EA4989ALL;
  uint64_t v20 = a8;
  uint64_t v21 = 0;
  uint64_t v18 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = a7;
  v15[0] = 56 - v12;
  uint64_t v23 = 0;
  uint64_t v24 = a4;
  LOBYTE(v8) = -93 * ((*(_DWORD *)(v10 - 4) + *(_DWORD *)v8) ^ 0x5E);
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * ((dword_1EA807E68 - dword_1EA807AC8) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - dword_1EA807AC8) ^ 0x5E))] ^ 0xA9])
                                    + 62)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v8 - 4) ^ 0x5Bu)
                                     - 8) ^ v8)
   + 4321))(v15);
  return (v19 - 101372955);
}

uint64_t W296voTQg1mC5(uint64_t a1, int a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 + dword_1EA807CD8) ^ 0x5E)) ^ byte_1D6FC6F00[byte_1D6FC6A00[(-93 * ((dword_1EA807E68 + dword_1EA807CD8) ^ 0x5E))] ^ 0x77])
       - 104);
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - *v2) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - *v2) ^ 0x5E))] ^ 0x8A])
                - 206);
  unint64_t v4 = (unint64_t)&v7[*(void *)(v3 - 4) ^ *v2];
  *unint64_t v2 = 1233700771 * v4 - 0x51BD24D370C3655ELL;
  *(void *)(v3 - 4) = 1233700771 * (v4 ^ 0x51BD24D370C3655ELL);
  int v5 = 1973783323 * ((&v8 - 696635915 - 2 * ((unint64_t)&v8 & 0xD67A2DF5)) ^ 0x3EB50F64);
  int v9 = v5 + 68676801 * a2 + 600911710;
  unsigned int v10 = v5 ^ 0xC686A663;
  uint64_t v8 = a1;
  LOBYTE(v2) = -93 * (*(_DWORD *)v2 ^ 0x5E ^ *(_DWORD *)(v3 - 4));
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93 * (dword_1EA807CD8 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * (dword_1EA807CD8 ^ 0x5E ^ dword_1EA807E68))] ^ 0x8A])
                                      - 99)
   + (*((unsigned char *)off_1F2E83918
                                     + (*((unsigned __int8 *)off_1F2E83AE8 + v2 - 8) ^ 0x77u)
                                     - 4) ^ v2)
   + 4261))(&v8);
  return 4294924507;
}

uint64_t YejTSDq30PG(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v27 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807D10) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807D10) ^ 0x5E))] ^ 0x13])
                - 25);
  uint64_t v10 = *(void *)(v9 - 4);
  uint64_t v11 = (uint64_t)*(&off_1F2E838F0
                 + (*((unsigned char *)off_1F2E83918
                                     + ~*((unsigned char *)off_1F2E83AE8
                                                         + (-93 * ((dword_1EA807E68 - v10) ^ 0x5E))
                                                         - 8)
                                     - 4) ^ (-93 * ((dword_1EA807E68 - v10) ^ 0x5E)))
                 - 48);
  uint64_t v12 = (*(void *)(v11 - 4) ^ v10) - (void)&v15;
  *(void *)(v9 - 4) = 1233700771 * (v12 - 0x51BD24D370C3655ELL);
  *(void *)(v11 - 4) = 1233700771 * (v12 ^ 0x51BD24D370C3655ELL);
  LODWORD(v12) = 1742951923 * (((~v16 | 0x9EC1A28A) + (v16 | 0x613E5D75)) ^ 0xD7A499E6);
  int v25 = v12 + 1009597723;
  v16[0] = a7;
  v16[1] = a3;
  int v19 = (a4 ^ 0xFEF7CBCF) + ((2 * a4) & 0xFDEF979E) + 1027471358 + v12;
  uint64_t v24 = a9;
  char v23 = (-13 * (((~v16 | 0x8A) + (v16 | 0x75)) ^ 0xE6)) ^ 0x5A;
  uint64_t v18 = a1;
  uint64_t v20 = a5;
  int v21 = (a2 ^ 0x7FBDFFEF) + ((2 * a2) & 0xFF7BFFDE) - 1133001762 + v12;
  int v22 = (a6 ^ 0xFEA8DE97) + ((2 * a6) & 0xFD51BD2E) + 972554235 + v12;
  uint64_t v26 = a8;
  int v13 = 1233700771 * ((*(_DWORD *)(v11 - 4) + *(_DWORD *)(v9 - 4)) ^ 0x70C3655E);
  (*((void (**)(void *))*(&off_1F2E838F0
                                     + ((-93 * ((dword_1EA807E68 - dword_1EA807D10) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807D10) ^ 0x5E))] ^ 0x53])
                                     - 115)
   + (*((unsigned char *)off_1F2E83B88
                                     + (*((unsigned __int8 *)off_1F2E83CA0 + v13 - 8) ^ 0xDAu)
                                     - 4) ^ v13)
   + 4383))(v16);
  return (v17 - 101372955);
}

uint64_t GW9oysOw9zb8E8sQxGyy(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v29 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *(&off_1F2E838F0
       + ((-93 * (dword_1EA807F08 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807F08 ^ 0x5E ^ dword_1EA807E68))] ^ 0x1B])
       - 153);
  unsigned __int8 v10 = -93 * (*v9 ^ dword_1EA807E68 ^ 0x5E);
  uint64_t v11 = (uint64_t)*(&off_1F2E838F0
                 + (*((unsigned char *)off_1F2E83B88
                                     + (*((unsigned __int8 *)off_1F2E83CA0 + v10 - 8) ^ 0xDAu)
                                     - 4) ^ v10)
                 - 67);
  unint64_t v12 = (*(void *)(v11 - 4) + *v9) ^ (unint64_t)&v16;
  *uint64_t v9 = 1233700771 * v12 - 0x51BD24D370C3655ELL;
  *(void *)(v11 - 4) = 1233700771 * (v12 ^ 0x51BD24D370C3655ELL);
  unint64_t v13 = 1067412197
      * (((unint64_t)&v17[0xE34E6A681C06BFEELL] - 2 * ((unint64_t)v17 & 0x8D39A9A0701AFFB5) - 3) ^ 0x5709DF30C316BDBBLL);
  int v23 = 1067412197
      * ((v17 - 2 * ((unint64_t)v17 & 0x8D39A9A0701AFFB5) + 1880817589) ^ 0xC316BDBB)
      + 1489733386;
  char v22 = -19 - -27 * ((v17 - 2 * ((unint64_t)v17 & 0x8D39A9A0701AFFB5) - 75) ^ 0xBB);
  uint64_t v20 = 0;
  uint64_t v21 = v13 ^ (0x1DF9787F30281A19 * a1 + 0x1E4D227EC11DAB65);
  int v28 = v13 ^ 0x745;
  v17[0] = (a2 ^ 0x3DF3AEFF) + ((2 * a2) & 0x7BE75DFE) - v13 - 545260248;
  v17[1] = v13 + 494119975;
  uint64_t v18 = a3;
  uint64_t v19 = 0;
  uint64_t v24 = a7;
  uint64_t v25 = a9;
  _DWORD v17[4] = (a4 ^ 0x7EFAFD7D) + ((2 * a4) & 0xFDF5FAFA) - v13 - 1243276316;
  void v17[2] = (a6 ^ 0x77FB7D77) + ((2 * a6) & 0xEFF6FAEE) - v13 - 1125868566;
  uint64_t v26 = a5;
  uint64_t v27 = a8;
  unsigned __int8 v14 = -93 * (*(_DWORD *)v9 ^ 0x5E ^ *(_DWORD *)(v11 - 4));
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807F08 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807F08 ^ 0x5E ^ dword_1EA807E68))] ^ 0x9A])
                                     - 58)
   + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v14 - 12) ^ 0x9A] ^ v14)
   + 4245))(v17);
  return (v17[3] - 101372955);
}

uint64_t TnhfdPSFlg(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  unint64_t v2 = *(&off_1F2E838F0
       + ((-93 * (dword_1EA807C90 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807C90 ^ 0x5E ^ dword_1EA807E68))] ^ 0x7E])
       - 123);
  uint64_t v3 = (char *)off_1F2E83BE8 - 12;
  unint64_t v4 = off_1F2E83C28;
  uint64_t v5 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 - *v2) ^ 0x5E))
                                                     - 12) ^ 0x13] ^ (-93 * ((dword_1EA807E68 - *v2) ^ 0x5E)))
                - 105);
  unint64_t v6 = (*(void *)(v5 - 4) + *v2) ^ (unint64_t)&v8;
  *unint64_t v2 = 1233700771 * v6 - 0x11759101A7DA6326;
  *(void *)(v5 - 4) = 1233700771 * (v6 ^ 0x51BD24D370C3655ELL);
  LODWORD(v6) = 253222187 * (&v9 ^ 0x8CC2826);
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  int v13 = v6 + 2167;
  char v10 = v6 ^ 0xF6;
  LOBYTE(v5) = -93 * ((*(_DWORD *)(v5 - 4) - *(_DWORD *)v2) ^ 0x5E);
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * (dword_1EA807C90 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807C90 ^ 0x5E ^ dword_1EA807E68))] ^ 0xBC])
                                  - 118)
   + (v5 ^ (*v4)[v3[v5] ^ 0x53])
   + 4224))(&v9);
  return (v9 - 101372955);
}

uint64_t t5TGOUBRGxEjMilNWp(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - dword_1EA807AE0) ^ 0x5E)) ^ byte_1D6FC6F00[byte_1D6FC6A00[(-93 * ((dword_1EA807E68 - dword_1EA807AE0) ^ 0x5E))] ^ 0x77])
                - 135);
  uint64_t v10 = *(void *)(v9 - 4);
  uint64_t v11 = (unsigned __int8 *)off_1F2E83AF0;
  uint64_t v12 = (uint64_t)*(&off_1F2E838F0
                 + (*((unsigned char *)off_1F2E83918
                                     + (*((unsigned __int8 *)off_1F2E83AE8
                                        + (-93 * ((dword_1EA807E68 - v10) ^ 0x5E))
                                        - 8) ^ 0x77u)
                                     - 4) ^ (-93 * ((dword_1EA807E68 - v10) ^ 0x5E)))
                 - 124);
  unint64_t v13 = (unint64_t)&v18[v10 + *(void *)(v12 - 4)];
  *(void *)(v9 - 4) = 1233700771 * (v13 - 0x51BD24D370C3655ELL);
  *(void *)(v12 - 4) = 1233700771 * (v13 ^ 0x51BD24D370C3655ELL);
  uint64_t v14 = 0x1DF9787F30281A19 * a1 + 0x1E4D227EC11DAB65;
  unsigned int v15 = (a4 ^ 0xB6FB9DFD) + ((2 * a4) & 0x6DF73BFA);
  unint64_t v16 = 1067412197
      * ((((2 * (void)v19) | 0xFD3D66F6ACD0DC90) - (void)v19 - 0x7E9EB37B56686E48) ^ 0xA4AEC5EBE5642C46);
  v19[0] = (a2 ^ 0x5F7BFD37) + ((2 * a2) & 0xBEF7FA6E) - v16 - 1107841296;
  v19[1] = v16 + 494119975;
  void v19[2] = (a6 ^ 0xFEF699F5) + ((2 * a6) & 0xFDED33EA) - v16 + 904494956;
  _DWORD v19[4] = v15 - v16 + 2112125796;
  uint64_t v20 = a3;
  uint64_t v21 = 0;
  char v24 = -20 - v16;
  uint64_t v22 = 0;
  unint64_t v23 = v16 ^ v14;
  uint64_t v26 = a7;
  uint64_t v27 = a9;
  int v30 = v16 ^ 0x745;
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  int v25 = v16 + 1489733386;
  LOBYTE(v9) = -93 * (*(_DWORD *)(v9 - 4) ^ 0x5E ^ *(_DWORD *)(v12 - 4));
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807AE0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807AE0 ^ 0x5E ^ dword_1EA807E68))] ^ 0x2B])
                                     - 20)
   + (*((unsigned char *)off_1F2E83CF8 + (v11[v9] ^ 0x41u) - 8) ^ v9)
   + 4422))(v19);
  return (v19[3] - 101372955);
}

uint64_t V1ENnlVTqh9Sf(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = (uint64_t)*(&off_1F2E838F0
                 + ((-93 * ((dword_1EA807E68 + dword_1EA807C08) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807C08) ^ 0x5E))] ^ 0xA9])
                 + 66);
  uint64_t v12 = *(void *)(v11 - 4);
  uint64_t v13 = (uint64_t)*(&off_1F2E838F0
                 + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                      + (-93 * ((dword_1EA807E68 - v12) ^ 0x5E))
                                                      - 12) ^ 0x9A] ^ (-93 * ((dword_1EA807E68 - v12) ^ 0x5E)))
                 - 165);
  uint64_t v14 = (*(void *)(v13 - 4) ^ v12) - (void)&v16;
  *(void *)(v11 - 4) = (1233700771 * v14) ^ 0x51BD24D370C3655ELL;
  *(void *)(v13 - 4) = 1233700771 * (v14 ^ 0x51BD24D370C3655ELL);
  LODWORD(v14) = 253222187 * (((~&v17 | 0x1106893E) + (&v17 | 0xEEF976C1)) ^ 0xE6355EE6);
  int v28 = (a8 ^ 0x6CFB6FBE) + ((2 * a8) & 0xD9F6DF7C) - 616702642 + v14;
  int v18 = (a6 ^ 0xF57CFFDC) + ((2 * a6) & 0xEAF9FFB8) + 1878250920 + v14;
  uint64_t v19 = a5;
  uint64_t v20 = a3;
  uint64_t v29 = a7;
  uint64_t v17 = a1;
  char v21 = 43 * (((~&v17 | 0x3E) + (&v17 | 0xC1)) ^ 0xE6) + 28;
  int v23 = v14 ^ ((a4 ^ 0x49397F1D) - 16790033 + ((2 * a4) & 0x9272FE3A));
  uint64_t v22 = a11;
  int v26 = (a2 ^ 0xD9B9FDDD) + ((2 * a2) & 0xB373FBBA) + 1853837103 + v14;
  uint64_t v27 = a10;
  int v30 = v14 + 1569;
  uint64_t v25 = a9;
  LOBYTE(v11) = -93 * ((*(_DWORD *)(v13 - 4) + *(_DWORD *)(v11 - 4)) ^ 0x5E);
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93
                                                                       * ((dword_1EA807E68 - dword_1EA807C08) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - dword_1EA807C08) ^ 0x5E))] ^ 0xA9])
                                      + 62)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v11 - 4) ^ 0x5Bu)
                                     - 8) ^ v11)
   + 4290))(&v17);
  return (v24 - 101372955);
}

uint64_t HMYy2ssZZIFQJ()
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - dword_1EA807F20) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - dword_1EA807F20) ^ 0x5E))] ^ 0x8A])
                - 197);
  uint64_t v1 = *(void *)(v0 - 4);
  unint64_t v2 = (char *)off_1F2E83BE8 - 12;
  uint64_t v3 = off_1F2E83C28;
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 - v1) ^ 0x5E))
                                                     - 12) ^ 0xBC] ^ (-93 * ((dword_1EA807E68 - v1) ^ 0x5E)))
                - 225);
  unint64_t v5 = (*(void *)(v4 - 4) - v1) ^ (unint64_t)&v7;
  *(void *)(v0 - 4) = 1233700771 * v5 - 0x11759101A7DA6326;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  LODWORD(v5) = 1629346421 * ((~&v8 & 0x61F387B1 | &v8 & 0x9E0C784E) ^ 0x47B11248);
  char v9 = 121 - v5;
  int v8 = 3943 - v5;
  LOBYTE(v4) = -93 * (*(_DWORD *)(v0 - 4) ^ 0x5E ^ *(_DWORD *)(v4 - 4));
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * (dword_1EA807F20 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807F20 ^ 0x5E ^ dword_1EA807E68))] ^ 0x55])
                                  + 81)
   + (v4 ^ (*v3)[v2[v4] ^ 0x9A])
   + 4313))(&v8);
  return (v10 - 101372955);
}

uint64_t sub_1D6F351E8(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83AB8 + (*((unsigned __int8 *)off_1F2E83C18 + a1 - 4) ^ 0x8Au)
                                            - 8) ^ a1;
}

uint64_t sub_1D6F35218(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83CF8 + (*((unsigned __int8 *)off_1F2E83AF0 + a1) ^ 0x2Bu) - 8) ^ a1;
}

uint64_t sub_1D6F35248(char a1, unsigned int a2)
{
  return (*off_1F2E83C28)[(*((unsigned char *)off_1F2E83BE8 + a2 - 12) ^ a1)] ^ a2;
}

uint64_t sub_1D6F35274(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83B80 + (*((unsigned __int8 *)off_1F2E83928 + a1 - 8) ^ 0x94u)
                                            - 4) ^ a1;
}

uint64_t sub_1D6F352A4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83CF8 + (*((unsigned __int8 *)off_1F2E83AF0 + a1) ^ 0x41u) - 8) ^ a1;
}

uint64_t sub_1D6F352D4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83B88 + (*((unsigned __int8 *)off_1F2E83CA0 + a1 - 8) ^ 0x8Eu)
                                            - 4) ^ a1;
}

uint64_t sub_1D6F35304(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83CF8 + (*((unsigned __int8 *)off_1F2E83AF0 + a1) ^ 0x55u) - 8) ^ a1;
}

uint64_t sub_1D6F35334(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83AB8 + (*((unsigned __int8 *)off_1F2E83C18 + a1 - 4) ^ 0xA9u)
                                            - 8) ^ a1;
}

uint64_t zMpzTxW41Kckl4a3h(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - dword_1EA807C48) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - dword_1EA807C48) ^ 0x5E))] ^ 0x8A])
                - 118);
  uint64_t v6 = *(void *)(v5 - 4);
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 - v6) ^ 0x5E))
                                                     - 12) ^ 0xBC] ^ (-93 * ((dword_1EA807E68 - v6) ^ 0x5E)))
                - 225);
  uint64_t v8 = (*(void *)(v7 - 4) ^ v6) - (void)&v10;
  *(void *)(v5 - 4) = 1233700771 * (v8 - 0x51BD24D370C3655ELL);
  *(void *)(v7 - 4) = 1233700771 * (v8 ^ 0x51BD24D370C3655ELL);
  LODWORD(v8) = 1067412197 * ((((2 * &v11) | 0xD65C3552) - &v11 + 349300055) ^ 0x582258A7);
  char v13 = 39 - -27 * ((((2 * &v11) | 0x52) - &v11 + 87) ^ 0xA7);
  uint64_t v11 = a5;
  int v12 = v8 + 1592;
  uint64_t v14 = a4;
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  int v15 = (a3 ^ 0x8F45FCFE) + ((2 * a3) & 0x1E8BF9FC) + 1962647414 + v8;
  LOBYTE(v7) = -93 * ((*(_DWORD *)(v7 - 4) + *(_DWORD *)(v5 - 4)) ^ 0x5E);
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93 * ((dword_1EA807E68 + dword_1EA807C48) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807C48) ^ 0x5E))] ^ 0x8A])
                                      - 99)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v7 - 4) ^ 0x5Bu)
                                     - 8) ^ v7)
   + 4369))(&v11);
  return (v16 - 101372955);
}

uint64_t HEDayhJoGfIZv()
{
  return 4294924503;
}

uint64_t XjXLwKrEB9m8(uint64_t a1, int a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807CA0) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807CA0) ^ 0x5E))] ^ 0x5B])
                + 11);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83CF8
                                    + (*((unsigned __int8 *)off_1F2E83AF0
                                       + (-93 * ((dword_1EA807E68 + v3) ^ 0x5E))) ^ 0x7Eu)
                                    - 8) ^ (-93 * ((dword_1EA807E68 + v3) ^ 0x5E)))
                - 184);
  uint64_t v5 = 1233700771 * (((*(void *)(v4 - 4) ^ v3) - (void)&v8) ^ 0x51BD24D370C3655ELL);
  *(void *)(v2 - 4) = v5;
  *(void *)(v4 - 4) = v5;
  int v6 = 1973783323 * ((&v9 - 920436535 - 2 * ((unint64_t)&v9 & 0xC92340C9)) ^ 0x21EC6258);
  uint64_t v9 = a1;
  int v10 = v6 + 68676801 * a2 + 600911710;
  unsigned int v11 = v6 ^ 0xC686A663;
  LOBYTE(v4) = -93 * ((*(_DWORD *)(v4 - 4) + *(_DWORD *)(v2 - 4)) ^ 0x5E);
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93 * (dword_1EA807CA0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * (dword_1EA807CA0 ^ 0x5E ^ dword_1EA807E68))] ^ 0xDA])
                                      + 40)
   + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v4 - 12) ^ 0x13] ^ v4)
   + 4280))(&v9);
  return 4294924507;
}

uint64_t G9mia9EJCQ0e2Cp3QPbO()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - dword_1EA807D48) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807D48) ^ 0x5E))] ^ 0x53])
                - 232);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - v1) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - v1) ^ 0x5E))] ^ 0x8A])
                - 206);
  uint64_t v3 = (*(void *)(v2 - 4) ^ v1) - (void)&v5;
  *(void *)(v0 - 4) = 1233700771 * v3 - 0x11759101A7DA6326;
  *(void *)(v2 - 4) = 1233700771 * (v3 ^ 0x51BD24D370C3655ELL);
  unsigned int v7 = (1067412197
      * ((2 * ((v6 ^ 0xB7992FC8) & 0x6B0B1F78) - (v6 ^ 0xB7992FC8) - 1795891066) ^ 0x90618D40)) ^ 0xDBA27C11;
  LOBYTE(v2) = -93 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)(v0 - 4)) ^ 0x5E);
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * (dword_1EA807D48 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * (dword_1EA807D48 ^ 0x5E ^ dword_1EA807E68))] ^ 0xDA])
                                    + 40)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v2 - 4) ^ 0xA9u)
                                     - 8) ^ v2)
   + 4423))(v6);
  return 0;
}

uint64_t BD56IdIsBgN3p(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - dword_1EA807E88) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - dword_1EA807E88) ^ 0x5E))] ^ 0xA9])
                + 67);
  uint64_t v4 = *(void *)(v3 - 4);
  char v5 = (char *)off_1F2E83BE8 - 12;
  int v6 = off_1F2E83C28;
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * (v4 ^ dword_1EA807E68 ^ 0x5E))
                                                     - 12) ^ 0x1B] ^ (-93 * (v4 ^ dword_1EA807E68 ^ 0x5E)))
                - 203);
  unint64_t v8 = (unint64_t)&v11[*(void *)(v7 - 4) ^ v4];
  *(void *)(v3 - 4) = 1233700771 * (v8 - 0x51BD24D370C3655ELL);
  *(void *)(v7 - 4) = 1233700771 * (v8 ^ 0x51BD24D370C3655ELL);
  unint64_t v9 = 597255653
     * ((((unint64_t)v12 | 0xC7A0EF5F19963657)
       - ((unint64_t)v12 | 0x385F10A0E669C9A8)
       + 0x385F10A0E669C9A8) ^ 0x45467B174C558EELL);
  v12[0] = v9 + 0x4E350C54CF3AFFD9;
  v12[1] = v9 - 0x7ECD902D2B7E4537;
  int v18 = v9 ^ 0x6C2D8673;
  int v19 = 466940279 - v9;
  int v13 = v9 + 2222;
  int v14 = v9 + 466940280;
  uint64_t v15 = a3;
  uint64_t v16 = a1;
  uint64_t v20 = a2;
  uint64_t v21 = 0;
  LOBYTE(v3) = -93 * (*(_DWORD *)(v3 - 4) ^ 0x5E ^ *(_DWORD *)(v7 - 4));
  (*((void (**)(void *))*(&off_1F2E838F0
                                     + ((-93 * ((dword_1EA807E68 + dword_1EA807E88) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807E88) ^ 0x5E))] ^ 0x7E])
                                     - 77)
   + (v3 ^ (*v6)[v5[v3] ^ 0x1B])
   + 4215))(v12);
  return (v17 - 101372955);
}

uint64_t N8pdwAfn(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 + dword_1EA807AC0) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 + dword_1EA807AC0) ^ 0x5E))] ^ 0xDA])
       + 38);
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * (*v1 ^ dword_1EA807E68 ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * (*v1 ^ dword_1EA807E68 ^ 0x5E))] ^ 0x8A])
                - 206);
  unint64_t v3 = (unint64_t)&v5[*(void *)(v2 - 4) ^ *v1];
  *uint64_t v1 = 1233700771 * v3 - 0x11759101A7DA6326;
  *(void *)(v2 - 4) = 1233700771 * (v3 ^ 0x51BD24D370C3655ELL);
  LODWORD(v3) = 1629346421 * ((~&v6 & 0xF2F41257 | &v6 & 0xD0BEDA8) ^ 0xD4B687AE);
  int v8 = v3 + 4345;
  uint64_t v6 = a1;
  char v9 = -30 - v3;
  LOBYTE(v2) = -93 * (*(_DWORD *)v1 ^ 0x5E ^ *(_DWORD *)(v2 - 4));
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93
                                                                       * ((dword_1EA807E68 - dword_1EA807AC0) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807AC0) ^ 0x5E))] ^ 0x13])
                                      + 2)
   + (*((unsigned char *)off_1F2E83B80
                                     + (*((unsigned __int8 *)off_1F2E83928 + v2 - 8) ^ 0x94u)
                                     - 4) ^ v2)
   + 4244))(&v6);
  return (v7 - 101372955);
}

uint64_t hKBLIYWgX(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  char v5 = *(&off_1F2E838F0
       + ((-93 * (dword_1EA807C30 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807C30 ^ 0x5E ^ dword_1EA807E68))] ^ 0x2B])
       - 110);
  uint64_t v6 = (char *)off_1F2E83BE8 - 12;
  int v7 = off_1F2E83C28;
  uint64_t v8 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 - *v5) ^ 0x5E))
                                                     - 12) ^ 0xBC] ^ (-93 * ((dword_1EA807E68 - *v5) ^ 0x5E)))
                - 225);
  unint64_t v9 = (unint64_t)&v11[*v5 + *(void *)(v8 - 4)];
  *char v5 = 1233700771 * (v9 - 0x51BD24D370C3655ELL);
  *(void *)(v8 - 4) = 1233700771 * (v9 ^ 0x51BD24D370C3655ELL);
  LODWORD(v9) = 2018881763
              * ((193099217 - (&v12 | 0xB8275D1) + (&v12 | 0xF47D8A2E)) ^ 0x53438D54);
  uint64_t v15 = a1;
  uint64_t v16 = a5;
  uint64_t v12 = a4;
  uint64_t v14 = a3;
  int v17 = a2 - v9;
  unsigned int v13 = v9 ^ 0x7A7E056A;
  LOBYTE(v5) = -93 * (*(_DWORD *)v5 ^ 0x5E ^ *(_DWORD *)(v8 - 4));
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93 * ((dword_1EA807E68 - dword_1EA807C30) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807C30) ^ 0x5E))] ^ 0xBC])
                                      - 118)
   + (v5 ^ (*v7)[v6[v5] ^ 0xBC])
   + 4197))(&v12);
  return v18;
}

uint64_t uZOxRFTqHPWsyRz(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807EA8) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 + dword_1EA807EA8) ^ 0x5E))] ^ 0xDA])
                - 74);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + v3) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + v3) ^ 0x5E))] ^ 0xA9])
                - 45);
  uint64_t v5 = *(void *)(v4 - 4) - v3 - (void)&v7;
  *(void *)(v2 - 4) = (1233700771 * v5) ^ 0x51BD24D370C3655ELL;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  unsigned int v10 = 1756268191
      * ((((2 * (v8 ^ 0xE0EFB346)) | 0xE1AA5BE0) - (v8 ^ 0xE0EFB346) + 254464528) ^ 0x455F7E08)
      + 318536051;
  v8[0] = a2;
  v8[1] = a1;
  LOBYTE(v4) = -93 * ((*(_DWORD *)(v4 - 4) + *(_DWORD *)(v2 - 4)) ^ 0x5E);
  (*((void (**)(void *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807EA8 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807EA8 ^ 0x5E ^ dword_1EA807E68))] ^ 0xBC])
                                     - 118)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v4 - 4) ^ 0xA9u)
                                     - 8) ^ v4)
   + 4393))(v8);
  return v9;
}

uint64_t Eqabp8dNUu0KCyhO()
{
  return 0;
}

uint64_t Ud5PNQt99i(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (unint64_t *)*(&off_1F2E838F0
                           + ((-93 * ((dword_1EA807E68 - dword_1EA807CE8) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 - dword_1EA807CE8) ^ 0x5E))] ^ 0x7E])
                           - 178);
  unsigned __int8 v2 = -93 * (*v1 ^ dword_1EA807E68 ^ 0x5E);
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83B80 + (*((unsigned __int8 *)off_1F2E83928 + v2 - 8) ^ 0x94u)
                                                             - 4) ^ v2)
                - 146);
  unint64_t v4 = 1233700771 * ((unint64_t)&v6[*(void *)(v3 - 4) - *v1] ^ 0x51BD24D370C3655ELL);
  *uint64_t v1 = v4;
  *(void *)(v3 - 4) = v4;
  uint64_t v8 = a1;
  unsigned int v9 = 1192087421
     - 1629346421 * ((((&v7 | 0xFF9B6318) ^ 0xFFFFFFFE) - (~&v7 | 0x649CE7)) ^ 0x2626091E);
  LOBYTE(v3) = -93 * (*(_DWORD *)v1 ^ 0x5E ^ *(_DWORD *)(v3 - 4));
  (*((void (**)(unsigned int *))*(&off_1F2E838F0
                                           + ((-93 * (dword_1EA807CE8 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807CE8 ^ 0x5E ^ dword_1EA807E68))] ^ 0x7E])
                                           - 77)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v3 - 4) ^ 0xA9u)
                                     - 8) ^ v3)
   + 4308))(&v7);
  return v7;
}

uint64_t N1tFeTVrKXYK(uint64_t a1, uint64_t a2, int a3, void *a4)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = (uint64_t *)*(&off_1F2E838F0
                  + ((-93 * ((dword_1EA807E68 + dword_1EA807EC8) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807EC8) ^ 0x5E))] ^ 0x55])
                  + 51);
  unsigned __int8 v6 = -93 * ((dword_1EA807E68 + *v5) ^ 0x5E);
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v6 - 12) ^ 0xBC] ^ v6)
                - 225);
  unint64_t v8 = (unint64_t)&v12[1] + *(void *)(v7 - 4) - *v5;
  *uint64_t v5 = (1233700771 * v8) ^ 0x51BD24D370C3655ELL;
  *(void *)(v7 - 4) = 1233700771 * (v8 ^ 0x51BD24D370C3655ELL);
  v12[0] = *a4;
  LODWORD(v8) = (a3 ^ 0xC6FDFBD6) + ((2 * a3) & 0x8DFBF7AC);
  unsigned int v9 = 462300053
     * (((v13 ^ 0xE8308263 | 0xDD367782)
       - (v13 ^ 0xE8308263)
       + ((v13 ^ 0xE8308263) & 0x22C98879)) ^ 0x2A6B01E8);
  uint64_t v20 = v12;
  uint64_t v18 = a1;
  uint64_t v19 = 0x46AAD4E1DD9011D4;
  int v14 = v9 ^ 0xC8A;
  uint64_t v22 = 0x1BD79320A3352CAFLL;
  uint64_t v23 = 0x3661B8258914B089;
  uint64_t v24 = 0x52214B67DD7D558ALL;
  unsigned int v21 = v8 - v9 + 2143010364;
  v13[0] = -107
         * (((v13 ^ 0x63 | 0x82)
           - (v13 ^ 0x63)
           + ((v13 ^ 0x63) & 0x79)) ^ 0xE8)
         + 98;
  uint64_t v15 = 0;
  uint64_t v16 = a2;
  LOBYTE(v5) = -93 * (*(_DWORD *)v5 ^ 0x5E ^ *(_DWORD *)(v7 - 4));
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * (dword_1EA807EC8 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807EC8 ^ 0x5E ^ dword_1EA807E68))] ^ 0x7E])
                                    - 77)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0 + v5) ^ 0x7Eu)
                                     - 8) ^ v5)
   + 4246))(v13);
  int v10 = v17;
  *a4 = v12[0];
  return (v10 - 101372955);
}

uint64_t uSB01B1R2Urw8Q1(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v34 = *MEMORY[0x1E4F143B8];
  int v10 = (uint64_t *)*(&off_1F2E838F0
                   + ((-93 * ((dword_1EA807E68 - dword_1EA807C40) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 - dword_1EA807C40) ^ 0x5E))] ^ 0x8E])
                   + 67);
  unsigned __int8 v11 = -93 * ((dword_1EA807E68 - *v10) ^ 0x5E);
  uint64_t v12 = (uint64_t)*(&off_1F2E838F0
                 + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v11 - 12) ^ 0x9A] ^ v11)
                 - 165);
  uint64_t v13 = 1233700771 * (((*(void *)(v12 - 4) ^ *v10) - (void)&v21) ^ 0x51BD24D370C3655ELL);
  *int v10 = v13;
  *(void *)(v12 - 4) = v13;
  uint64_t v14 = 0x1DF9787F30281A19 * a1 + 0x1E4D227EC11DAB65;
  unsigned int v15 = (a2 ^ 0x5FF7FC6F) + ((2 * a2) & 0xBFEFF8DE);
  unsigned int v16 = (a4 ^ 0x75F43BF1) + ((2 * a4) & 0xEBE877E2);
  unsigned int v17 = (a6 ^ 0xB4EB5975) + ((2 * a6) & 0x69D6B2EA);
  unint64_t v18 = 1067412197 * ((unint64_t)v22 ^ 0xDA307690B30C420ELL);
  uint64_t v29 = a8;
  uint64_t v30 = a10;
  char v27 = -20 - v18;
  v22[0] = v15 - v18 - 1115967560;
  v22[1] = v18 + 494119975;
  int v28 = v18 + 1489733386;
  uint64_t v25 = a7;
  unint64_t v26 = v18 ^ v14;
  v22[4] = v16 - v18 - 1091838608;
  void v22[2] = v17 - v18 + 2146746348;
  int v33 = v18 ^ 0x745;
  uint64_t v31 = a5;
  uint64_t v32 = a9;
  uint64_t v23 = a3;
  uint64_t v24 = 0;
  unsigned __int8 v19 = -93 * (*(_DWORD *)v10 ^ 0x5E ^ *(_DWORD *)(v12 - 4));
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807C40 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * (dword_1EA807C40 ^ 0x5E ^ dword_1EA807E68))] ^ 0xA9])
                                     + 62)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v19 - 4) ^ 0x5Bu)
                                     - 8) ^ v19)
   + 4324))(v22);
  return (v22[3] - 101372955);
}

uint64_t WURiUYOOBx4()
{
  return 4294924507;
}

uint64_t pduR7VAgOpwwTZi6E(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 + dword_1EA807C98) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807C98) ^ 0x5E))] ^ 0x13])
       + 5);
  unsigned __int8 v4 = -93 * (*v3 ^ dword_1EA807E68 ^ 0x5E);
  uint64_t v5 = (unsigned __int8 *)off_1F2E83AF0;
  uint64_t v6 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83918 + ~*((unsigned char *)off_1F2E83AE8 + v4 - 8) - 4) ^ v4)
                - 48);
  uint64_t v7 = *(void *)(v6 - 4) - *v3 - (void)&v9;
  *uint64_t v3 = 1233700771 * v7 - 0x51BD24D370C3655ELL;
  *(void *)(v6 - 4) = 1233700771 * (v7 ^ 0x51BD24D370C3655ELL);
  uint64_t v12 = a2;
  unint64_t v13 = -2018881763
      * ((~(unint64_t)&v10 & 0x8639215B72B2F71ELL | (unint64_t)&v10 & 0x79C6DEA48D4D08E1) ^ 0x5347F03D58CF064)
      + 0x717584D1D52972A3 * a1
      + 0x3EF112F4E8A527E7;
  uint64_t v11 = a3;
  int v10 = 2018881763 * ((~&v10 & 0x72B2F71E | (unint64_t)&v10 & 0x79C6DEA48D4D08E1) ^ 0xD58CF064)
      + 1810;
  LOBYTE(v3) = -93 * (*(_DWORD *)v3 ^ 0x5E ^ *(_DWORD *)(v6 - 4));
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * ((dword_1EA807E68 - dword_1EA807C98) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 - dword_1EA807C98) ^ 0x5E))] ^ 0x55])
                                  + 81)
   + (*((unsigned char *)off_1F2E83CF8 + (v5[v3] ^ 0x55u) - 8) ^ v3)
   + 4394))(&v10);
  return (v14 - 101372955);
}

uint64_t gcr8qXImzjLolsNNXIo(uint64_t a1, int a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  unsigned __int8 v2 = (unint64_t *)*(&off_1F2E838F0
                           + ((-93 * (dword_1EA807AA8 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807AA8 ^ 0x5E ^ dword_1EA807E68))] ^ 0xBC])
                           - 237);
  unsigned __int8 v3 = -93 * ((dword_1EA807E68 - *v2) ^ 0x5E);
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83B80 + (*((unsigned __int8 *)off_1F2E83928 + v3 - 8) ^ 0x94u)
                                                             - 4) ^ v3)
                - 146);
  unint64_t v5 = (*(void *)(v4 - 4) + *v2) ^ (unint64_t)&v7;
  *unsigned __int8 v2 = (1233700771 * v5) ^ 0x51BD24D370C3655ELL;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  uint64_t v9 = a1;
  int v10 = (1973783323 * ((v8 + 1286476629 - 2 * ((unint64_t)v8 & 0x4CAE1355)) ^ 0xA46131C4)) ^ 0xC28CAD33;
  int v11 = -1973783323 * ((v8 + 1286476629 - 2 * ((unint64_t)v8 & 0x4CAE1355)) ^ 0xA46131C4)
      + 715600923 * a2
      + 796881951;
  LODWORD(v4) = 1233700771 * ((*(_DWORD *)(v4 - 4) - *(_DWORD *)v2) ^ 0x70C3655E);
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * ((dword_1EA807E68 - dword_1EA807AA8) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807AA8) ^ 0x5E))] ^ 0x1B])
                                    - 96)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v4 - 4) ^ 0x8Au)
                                     - 8) ^ v4)
   + 4255))(v8);
  return 4294924507;
}

uint64_t jomCL4mkolcRMRSf(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807BF0) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807BF0) ^ 0x5E))] ^ 0x2B])
                - 101);
  uint64_t v10 = *(void *)(v9 - 4);
  int v11 = (unsigned __int8 *)off_1F2E83AF0;
  uint64_t v12 = (char *)off_1F2E83CF8 - 8;
  uint64_t v13 = (uint64_t)*(&off_1F2E838F0
                 + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0
                                        + (-93 * ((dword_1EA807E68 + v10) ^ 0x5E))) ^ 0x2Bu)
                                     - 8) ^ (-93 * ((dword_1EA807E68 + v10) ^ 0x5E)))
                 - 127);
  unint64_t v14 = v10 ^ (unint64_t)&v17 ^ *(void *)(v13 - 4);
  *(void *)(v9 - 4) = 1233700771 * v14 + 0x51BD24D370C3655ELL;
  *(void *)(v13 - 4) = 1233700771 * (v14 ^ 0x51BD24D370C3655ELL);
  unint64_t v15 = 693013459
      * ((~(unint64_t)v18 & 0x237FAC8925709580 | (unint64_t)v18 & 0xDC805376DA8F6A7FLL) ^ 0x558FAF69296B260CLL);
  uint64_t v28 = 0;
  uint64_t v29 = a8;
  v18[0] = 53 - v15;
  int v35 = v15 ^ 0xECC;
  uint64_t v23 = a9;
  uint64_t v24 = a6;
  uint64_t v33 = v15 + 0x653EC904EC380E05 * a1 + 0x43FE5CE22EA4989ALL;
  uint64_t v34 = a2;
  uint64_t v26 = 0;
  uint64_t v27 = a4;
  int v25 = v15 ^ 0x15E878F7;
  int v19 = v15 + 1675139122;
  int v20 = v15 ^ 0x79CD6DDB;
  uint64_t v32 = a7;
  uint64_t v21 = 0;
  int v30 = v15 ^ ((a3 ^ 0xBDEF7CFF) + 1475935224 + ((2 * a3) & 0x7BDEF9FE));
  int v31 = (a5 ^ 0x15FB78FF) + ((2 * a5) & 0x2BF6F1FE) - 1245192 + v15;
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * ((dword_1EA807E68 + dword_1EA807BF0) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807BF0) ^ 0x5E))] ^ 0x13])
                                    + 2)
   + ((-93 * (*(_DWORD *)(v9 - 4) ^ 0x5E ^ *(_DWORD *)(v13 - 4))) ^ v12[v11[(-93 * (*(_DWORD *)(v9 - 4) ^ 0x5E ^ *(_DWORD *)(v13 - 4)))] ^ 0x7E])
   + 4223))(v18);
  return (v22 - 101372955);
}

uint64_t pC3lVfLuVJLMz(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  unsigned __int8 v2 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 - dword_1EA807D20) ^ 0x5E)) ^ byte_1D6FC6F00[~byte_1D6FC6A00[(-93 * ((dword_1EA807E68 - dword_1EA807D20) ^ 0x5E))]])
       + 15);
  unsigned __int8 v3 = -93 * (*v2 ^ dword_1EA807E68 ^ 0x5E);
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v3 - 12) ^ 0x9A] ^ v3)
                - 165);
  unint64_t v5 = *v2 ^ (unint64_t)&v7 ^ *(void *)(v4 - 4);
  *unsigned __int8 v2 = 1233700771 * v5 - 0x11759101A7DA6326;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  LODWORD(v5) = 253222187 * (&v8 ^ 0x8CC2826);
  int v12 = v5 + 2167;
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  char v9 = v5 ^ 0xF7;
  LOBYTE(v4) = -93 * ((*(_DWORD *)(v4 - 4) - *(_DWORD *)v2) ^ 0x5E);
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * (dword_1EA807D20 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807D20 ^ 0x5E ^ dword_1EA807E68))] ^ 0x9A])
                                  - 58)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0 + v4) ^ 0x55u)
                                     - 8) ^ v4)
   + 4420))(&v8);
  return (v8 - 101372955);
}

uint64_t sub_1D6F37364(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - dword_1EA807A48) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 - dword_1EA807A48) ^ 0x5E))] ^ 0x8E])
                - 27);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83B88
                                    + (*((unsigned __int8 *)off_1F2E83CA0
                                       + (-93 * (v2 ^ dword_1EA807E68 ^ 0x5E))
                                       - 8) ^ 0xDAu)
                                    - 4) ^ (-93 * (v2 ^ dword_1EA807E68 ^ 0x5E)))
                - 67);
  uint64_t v4 = v2 - (void)&v6 + *(void *)(v3 - 4);
  *(void *)(v1 - 4) = 1233700771 * v4 - 0x11759101A7DA6326;
  *(void *)(v3 - 4) = 1233700771 * (v4 ^ 0x51BD24D370C3655ELL);
  uint64_t v7 = a1;
  unsigned int v8 = -1108061503 - 253222187 * ((&v7 & 0xFFDCBBF6 | ~(&v7 | 0xFFDCBBF6)) ^ 0x8EF6C2F);
  LOBYTE(v3) = -93 * ((*(_DWORD *)(v3 - 4) + *(_DWORD *)(v1 - 4)) ^ 0x5E);
  return (*((uint64_t (**)(uint64_t *))*(&off_1F2E838F0
                                                + ((-93 * ((dword_1EA807E68 - dword_1EA807A48) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 - dword_1EA807A48) ^ 0x5E))] ^ 0x2B])
                                                - 20)
          + (*((unsigned char *)off_1F2E83AB8
                                            + (*((unsigned __int8 *)off_1F2E83C18 + v3 - 4) ^ 0x5Bu)
                                            - 8) ^ v3)
          + 4311))(&v7);
}

uint64_t DCBmTAOBgNVHQ8()
{
  return 4294924507;
}

uint64_t C6vOmPSMmdHG7(uint64_t a1)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807D70) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807D70) ^ 0x5E))] ^ 0x55])
                - 10);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * (v2 ^ dword_1EA807E68 ^ 0x5E))
                                                     - 12) ^ 0x53] ^ (-93 * (v2 ^ dword_1EA807E68 ^ 0x5E)))
                - 222);
  uint64_t v4 = (*(void *)(v3 - 4) ^ v2) - (void)&v6;
  *(void *)(v1 - 4) = 1233700771 * v4 + 0x51BD24D370C3655ELL;
  *(void *)(v3 - 4) = 1233700771 * (v4 ^ 0x51BD24D370C3655ELL);
  uint64_t v8 = a1;
  char v10 = (-45 * ((2 * (&v7 & 0x38) - &v7 - 58) ^ 0x4A)) ^ 0xF4;
  unsigned int v9 = 693013459 * ((2 * (&v7 & 0x47361138) - &v7 + 952757958) ^ 0x34D25D4A) + 2068;
  LOBYTE(v3) = -93 * ((*(_DWORD *)(v3 - 4) - *(_DWORD *)(v1 - 4)) ^ 0x5E);
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * (dword_1EA807D70 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC7000[byte_1D6FC6C00[(-93 * (dword_1EA807D70 ^ 0x5E ^ dword_1EA807E68))] ^ 0x94])
                                  - 39)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v3 - 4) ^ 0x8Au)
                                     - 8) ^ v3)
   + 4264))(&v7);
  return (v7 - 101372955);
}

uint64_t yYL6hW9BuEShD(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  unint64_t v5 = *(&off_1F2E838F0
       + ((-93 * (dword_1EA807BE0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * (dword_1EA807BE0 ^ 0x5E ^ dword_1EA807E68))] ^ 0x5B])
       - 108);
  unsigned __int8 v6 = -93 * ((dword_1EA807E68 + *v5) ^ 0x5E);
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83B88 + (*((unsigned __int8 *)off_1F2E83CA0 + v6 - 8) ^ 0xDAu)
                                                             - 4) ^ v6)
                - 67);
  uint64_t v8 = *(void *)(v7 - 4) - *v5 - (void)&v11;
  *unint64_t v5 = 1233700771 * v8 + 0x51BD24D370C3655ELL;
  *(void *)(v7 - 4) = 1233700771 * (v8 ^ 0x51BD24D370C3655ELL);
  unsigned int v9 = 1629346421 * ((((2 * v12) | 0xCEC7D446) - v12 - 1734601251) ^ 0x41217FDA);
  uint64_t v15 = a2;
  uint64_t v16 = a5;
  unsigned int v17 = (a3 ^ 0x7DFFDFDE) + ((2 * a3) & 0xFBFFBFBC) - v9 - 279649808;
  uint64_t v13 = a4;
  v12[0] = (a1 ^ 0xFD2F7753) + ((2 * a1) & 0xFA5EEEA6) + 1073727936 + v9;
  v12[1] = v9 ^ 0xE6F;
  LOBYTE(v5) = -93 * (*(_DWORD *)v5 ^ 0x5E ^ *(_DWORD *)(v7 - 4));
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807BE0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807BE0 ^ 0x5E ^ dword_1EA807E68))] ^ 0x1B])
                                     - 96)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0 + v5) ^ 0x2Bu)
                                     - 8) ^ v5)
   + 4262))(v12);
  return (v14 - 101372955);
}

uint64_t dCvqjypPKUsP(uint64_t a1, uint64_t *a2)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (unint64_t *)*(&off_1F2E838F0
                           + (*((unsigned char *)off_1F2E83B88
                                               + (*((unsigned __int8 *)off_1F2E83CA0
                                                  + (-93 * ((dword_1EA807E68 + dword_1EA807CB0) ^ 0x5E))
                                                  - 8) ^ 0xDAu)
                                               - 4) ^ (-93 * ((dword_1EA807E68 + dword_1EA807CB0) ^ 0x5E)))
                           - 9);
  uint64_t v4 = (char *)off_1F2E83AE8 - 8;
  unint64_t v5 = (char *)off_1F2E83918 - 4;
  uint64_t v6 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83918
                                    + (*((unsigned __int8 *)off_1F2E83AE8
                                       + (-93 * (*v3 ^ dword_1EA807E68 ^ 0x5E))
                                       - 8) ^ 0x77u)
                                    - 4) ^ (-93 * (*v3 ^ dword_1EA807E68 ^ 0x5E)))
                - 124);
  unint64_t v7 = (unint64_t)&v13[*(void *)(v6 - 4) ^ *v3];
  *uint64_t v3 = (1233700771 * v7) ^ 0x51BD24D370C3655ELL;
  *(void *)(v6 - 4) = 1233700771 * (v7 ^ 0x51BD24D370C3655ELL);
  uint64_t v12 = *a2;
  uint64_t v8 = a1 - ((2 * a1) & 0xADD039880C82D904);
  unint64_t v9 = 2106769199
     * ((((unint64_t)&v14 | 0x39AE0EFAEE9D1A3ALL) - (void)&v14 + ((unint64_t)&v14 & 0xC651F1051162E5C0)) ^ 0xBCE15109A23D7596);
  int v17 = v9 + 1368;
  uint64_t v16 = v8 - v9 - 0x2917E33BF9BE937ELL;
  char v15 = v9 + 47;
  uint64_t v18 = &STACK[0x25154715FE2E6167];
  LOBYTE(v3) = -93 * ((*(_DWORD *)(v6 - 4) + *(_DWORD *)v3) ^ 0x5E);
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * (dword_1EA807CB0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC7000[byte_1D6FC6C00[(-93 * (dword_1EA807CB0 ^ 0x5E ^ dword_1EA807E68))] ^ 0x94])
                                  - 39)
   + (v3 ^ v5[~v4[v3]])
   + 4361))(&v14);
  int v10 = v14;
  *a2 = v12;
  return (v10 - 101372955);
}

uint64_t PFKf92jfaxmd034jfapP()
{
  return 4294924507;
}

uint64_t kNsH5DWSn1J(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807CE0) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807CE0) ^ 0x5E))] ^ 0x41])
                + 50);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (char *)off_1F2E83BE8 - 12;
  unint64_t v5 = off_1F2E83C28;
  uint64_t v6 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * (v3 ^ dword_1EA807E68 ^ 0x5E))
                                                     - 12) ^ 0x9A] ^ (-93 * (v3 ^ dword_1EA807E68 ^ 0x5E)))
                - 165);
  unint64_t v7 = v3 ^ (unint64_t)&v9 ^ *(void *)(v6 - 4);
  *(void *)(v2 - 4) = (1233700771 * v7) ^ 0x51BD24D370C3655ELL;
  *(void *)(v6 - 4) = 1233700771 * (v7 ^ 0x51BD24D370C3655ELL);
  unsigned int v11 = (1067412197 * (&v10 ^ 0xB30C420E)) ^ 0x54022ACD;
  uint64_t v12 = a2;
  uint64_t v10 = a1;
  LOBYTE(v6) = -93 * ((*(_DWORD *)(v6 - 4) + *(_DWORD *)(v2 - 4)) ^ 0x5E);
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93
                                                                       * ((dword_1EA807E68 + dword_1EA807CE0) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807CE0) ^ 0x5E))] ^ 0x5B])
                                      + 21)
   + (v6 ^ (*v5)[v4[v6] ^ 0x13])
   + 4318))(&v10);
  return v13;
}

uint64_t sWBoEyhXQd6FTiLw(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v33 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * (dword_1EA807D08 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807D08 ^ 0x5E ^ dword_1EA807E68))] ^ 0x55])
                + 22);
  uint64_t v9 = *(void *)(v8 - 4);
  uint64_t v10 = (uint64_t)*(&off_1F2E838F0
                 + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                      + (-93 * ((dword_1EA807E68 - v9) ^ 0x5E))
                                                      - 12) ^ 0xBC] ^ (-93 * ((dword_1EA807E68 - v9) ^ 0x5E)))
                 - 225);
  uint64_t v11 = 1233700771 * (((*(void *)(v10 - 4) ^ v9) - (void)&v14) ^ 0x51BD24D370C3655ELL);
  *(void *)(v8 - 4) = v11;
  *(void *)(v10 - 4) = v11;
  unint64_t v12 = 693013459
      * ((((unint64_t)v15 | 0x95CC0E6109160C0ALL) - ((unint64_t)v15 & 0x95CC0E6109160C0ALL)) ^ 0xE33C0D81050DBF86);
  int v22 = v12 ^ 0x15E878F7;
  v15[0] = 53 - v12;
  uint64_t v30 = v12 + 0x653EC904EC380E05 * a1 + 0x43FE5CE22EA4989ALL;
  uint64_t v31 = a2;
  uint64_t v23 = 0;
  uint64_t v24 = a4;
  uint64_t v25 = 0;
  uint64_t v26 = a7;
  uint64_t v29 = a6;
  uint64_t v20 = a8;
  uint64_t v21 = 0;
  int v27 = v12 ^ ((a3 ^ 0x5DEE79FF) - 1208353032 + ((2 * a3) & 0xBBDCF3FE));
  int v28 = (a5 ^ 0x97F8FCF7) + ((2 * a5) & 0x2FF1F9EE) + 2112846848 + v12;
  uint64_t v18 = 0;
  int v32 = v12 ^ 0xECC;
  int v16 = v12 + 1675139122;
  int v17 = v12 ^ 0x79CD6DDB;
  LOBYTE(v8) = -93 * ((*(_DWORD *)(v10 - 4) - *(_DWORD *)(v8 - 4)) ^ 0x5E);
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * (dword_1EA807D08 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807D08 ^ 0x5E ^ dword_1EA807E68))] ^ 0x55])
                                    + 81)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0 + v8) ^ 0x7Eu)
                                     - 8) ^ v8)
   + 4223))(v15);
  return (v19 - 101372955);
}

uint64_t n2qn70S3cN6uyWbw()
{
  return 0;
}

uint64_t MYiCHr2n1RFBPK6tHo(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  unint64_t v7 = *(&off_1F2E838F0
       + ((-93 * (dword_1EA807C28 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807C28 ^ 0x5E ^ dword_1EA807E68))] ^ 0x7E])
       - 93);
  uint64_t v8 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83CF8
                                    + (*((unsigned __int8 *)off_1F2E83AF0
                                       + (-93 * (*v7 ^ dword_1EA807E68 ^ 0x5E))) ^ 0x55u)
                                    - 8) ^ (-93 * (*v7 ^ dword_1EA807E68 ^ 0x5E)))
                - 26);
  uint64_t v9 = *(void *)(v8 - 4) - *v7 - (void)&v12;
  *unint64_t v7 = 1233700771 * v9 - 0x11759101A7DA6326;
  *(void *)(v8 - 4) = 1233700771 * (v9 ^ 0x51BD24D370C3655ELL);
  unsigned int v10 = 1742951923 * (((v13 | 0xA5AE53AE) - (v13 & 0xA5AE53AE)) ^ 0x1334973C);
  uint64_t v17 = a1;
  uint64_t v15 = a7;
  unsigned int v19 = v10 ^ ((a5 ^ 0x7FFB1EBB) - 302645768 + ((2 * a5) & 0xFFF63D76));
  unsigned int v23 = (a3 ^ 0xFFF3FCFB) + ((2 * a3) & 0xFFE7F9F6) - v10 + 1845305272;
  unsigned int v16 = 716 - v10;
  uint64_t v20 = 0x54D2A68F3DE7F476;
  uint64_t v21 = 0x2E29F0B9C308E859;
  uint64_t v22 = a4;
  char v18 = v10 ^ 0x40;
  v13[0] = a6;
  v13[1] = a2;
  LOBYTE(v7) = -93 * (*(_DWORD *)v7 ^ 0x5E ^ *(_DWORD *)(v8 - 4));
  (*((void (**)(void *))*(&off_1F2E838F0
                                     + ((-93 * ((dword_1EA807E68 - dword_1EA807C28) ^ 0x5E)) ^ byte_1D6FC7000[byte_1D6FC6C00[(-93 * ((dword_1EA807E68 - dword_1EA807C28) ^ 0x5E))] ^ 0x94])
                                     - 39)
   + (*((unsigned char *)off_1F2E83B88
                                     + (*((unsigned __int8 *)off_1F2E83CA0 + v7 - 8) ^ 0xDAu)
                                     - 4) ^ v7)
   + 4362))(v13);
  return (v14 - 101372955);
}

uint64_t WuLaQ4nIoKwZC7KxU(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 + dword_1EA807AD8) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807AD8) ^ 0x5E))] ^ 0x1B])
       - 143);
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83CF8
                                                  + (*((unsigned __int8 *)off_1F2E83AF0
                                                     + (-93 * ((dword_1EA807E68 + *v1) ^ 0x5E))) ^ 0x41u)
                                                  - 8) ^ (-93 * ((dword_1EA807E68 + *v1) ^ 0x5E)))
                + 12);
  uint64_t v3 = *(void *)(v2 - 4) - *v1 - (void)&v6;
  *uint64_t v1 = 1233700771 * v3 + 0x51BD24D370C3655ELL;
  *(void *)(v2 - 4) = 1233700771 * (v3 ^ 0x51BD24D370C3655ELL);
  unint64_t v4 = 1756268191
     * ((((unint64_t)v7 | 0x95DB989C42B98A78)
       - ((unint64_t)v7 | 0x6A246763BD467587)
       + 0x6A246763BD467587) ^ 0x7D0B623617DC6AC6);
  unint64_t v8 = (a1 ^ 0x7FBF3FFFFFE17BFFLL) + ((2 * a1) & 0xFF7E7FFFFFC2F7FELL) - 0x66A502701161096DLL + v4;
  v7[1] = v4 + 2295;
  LOBYTE(v2) = -93 * ((*(_DWORD *)(v2 - 4) + *(_DWORD *)v1) ^ 0x5E);
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93
                                                                      * ((dword_1EA807E68 - dword_1EA807AD8) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 - dword_1EA807AD8) ^ 0x5E))] ^ 0x8E])
                                     + 100)
   + (*((unsigned char *)off_1F2E83B88
                                     + (*((unsigned __int8 *)off_1F2E83CA0 + v2 - 8) ^ 0x8Eu)
                                     - 4) ^ v2)
   + 4466))(v7);
  return (v7[0] - 101372955);
}

uint64_t nmzhVvF6KUY3yZdQxgvcEoP7C7eQ()
{
  return 4294924507;
}

uint64_t mfGhVpprP0qip8G()
{
  return 0;
}

uint64_t gojqbvrX305gQO(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 - dword_1EA807D30) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807D30) ^ 0x5E))] ^ 0x13])
       - 73);
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - *v2) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 - *v2) ^ 0x5E))] ^ 0x8A])
                - 206);
  unint64_t v4 = (unint64_t)&v6[*(void *)(v3 - 4) ^ *v2];
  *uint64_t v2 = 1233700771 * v4 + 0x51BD24D370C3655ELL;
  *(void *)(v3 - 4) = 1233700771 * (v4 ^ 0x51BD24D370C3655ELL);
  unsigned int v8 = (1067412197
      * (((&v7 | 0xD68532F3) - &v7 + (&v7 & 0x297ACD08)) ^ 0x658970FD)) ^ 0x54022ACD;
  uint64_t v7 = a1;
  uint64_t v9 = a2;
  LOBYTE(v3) = -93 * ((*(_DWORD *)(v3 - 4) + *(_DWORD *)v2) ^ 0x5E);
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93 * (dword_1EA807D30 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807D30 ^ 0x5E ^ dword_1EA807E68))] ^ 0x7E])
                                      - 77)
   + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v3 - 12) ^ 0x13] ^ v3)
   + 4318))(&v7);
  return v10;
}

uint64_t FhS8L9pZ83yt(uint64_t a1, int a2)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 - dword_1EA807C18) ^ 0x5E)) ^ byte_1D6FC7000[byte_1D6FC6C00[(-93 * ((dword_1EA807E68 - dword_1EA807C18) ^ 0x5E))] ^ 0x94])
                - 154);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83B80
                                    + (*((unsigned __int8 *)off_1F2E83928
                                       + (-93 * ((dword_1EA807E68 - v3) ^ 0x5E))
                                       - 8) ^ 0x94u)
                                    - 4) ^ (-93 * ((dword_1EA807E68 - v3) ^ 0x5E)))
                - 146);
  unint64_t v5 = (unint64_t)&v7[*(void *)(v4 - 4) - v3];
  *(void *)(v2 - 4) = 1233700771 * v5 - 0x11759101A7DA6326;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  LODWORD(v3) = 2106769199 * ((v8 + 1092173262 - 2 * ((unint64_t)v8 & 0x41193DCE)) ^ 0xDB95262);
  v8[0] = v3 + 1938131307 * a2 + 1859381268;
  void v8[2] = v3 ^ 0xFCB63854;
  uint64_t v9 = a1;
  LOBYTE(v4) = -93 * ((*(_DWORD *)(v4 - 4) - *(_DWORD *)(v2 - 4)) ^ 0x5E);
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807C18 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807C18 ^ 0x5E ^ dword_1EA807E68))] ^ 0x2B])
                                     - 20)
   + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v4 - 12) ^ 0x1B] ^ v4)
   + 4229))(v8);
  return 4294924507;
}

uint64_t f5dnLMQHpqo6KM9x(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * (dword_1EA807B00 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * (dword_1EA807B00 ^ 0x5E ^ dword_1EA807E68))] ^ 0x7E])
                - 147);
  uint64_t v4 = *(void *)(v3 - 4);
  uint64_t v5 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83B80
                                    + (*((unsigned __int8 *)off_1F2E83928
                                       + (-93 * ((dword_1EA807E68 + v4) ^ 0x5E))
                                       - 8) ^ 0x94u)
                                    - 4) ^ (-93 * ((dword_1EA807E68 + v4) ^ 0x5E)))
                - 146);
  uint64_t v6 = v4 - (void)&v9 + *(void *)(v5 - 4);
  *(void *)(v3 - 4) = 1233700771 * v6 + 0x51BD24D370C3655ELL;
  *(void *)(v5 - 4) = 1233700771 * (v6 ^ 0x51BD24D370C3655ELL);
  unint64_t v7 = 1629346421 * ((unint64_t)&v10 ^ 0xA5844242264295F9);
  int v11 = 2172 - v7;
  int v14 = v7 ^ ((a3 ^ 0x7FF3E9F3) - 1065170 + ((2 * a3) & 0xFFE7D3E6));
  uint64_t v10 = a2;
  uint64_t v13 = a1 - ((2 * a1) & 0x59A7831D17BFFA7ELL) - v7 + 0x2CD3C18E8BDFFD3FLL;
  LOBYTE(v5) = -93 * ((*(_DWORD *)(v5 - 4) + *(_DWORD *)(v3 - 4)) ^ 0x5E);
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93
                                                                       * ((dword_1EA807E68 - dword_1EA807B00) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 - dword_1EA807B00) ^ 0x5E))] ^ 0xDA])
                                      + 40)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0 + v5) ^ 0x55u)
                                     - 8) ^ v5)
   + 4456))(&v10);
  return (v12 - 101372955);
}

uint64_t ZoqDk9vz2T2ka(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 + dword_1EA807A98) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807A98) ^ 0x5E))] ^ 0x9A])
       - 59);
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + *v1) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + *v1) ^ 0x5E))] ^ 0xA9])
                - 45);
  uint64_t v3 = *(void *)(v2 - 4) - *v1 - (void)&v5;
  *uint64_t v1 = 1233700771 * v3 + 0x51BD24D370C3655ELL;
  *(void *)(v2 - 4) = 1233700771 * (v3 ^ 0x51BD24D370C3655ELL);
  LODWORD(v3) = 2018881763 * (((~v6 | 0xA69CB628) + (v6 | 0x596349D7)) ^ 0xFE5D4EAC);
  uint64_t v7 = a1;
  v6[0] = v3 ^ 0xE8;
  int v8 = 4268 - v3;
  LOBYTE(v1) = -93 * ((*(_DWORD *)(v2 - 4) - *(_DWORD *)v1) ^ 0x5E);
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * ((dword_1EA807E68 + dword_1EA807A98) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807A98) ^ 0x5E))] ^ 0xA9])
                                    + 62)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v1 - 4) ^ 0xA9u)
                                     - 8) ^ v1)
   + 4388))(v6);
  return (v9 - 101372955);
}

uint64_t i2DzSgbBIIe95gyG0gW(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807A68) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807A68) ^ 0x5E))] ^ 0x7E])
                - 176);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 - v3) ^ 0x5E))
                                                     - 12) ^ 0x13] ^ (-93 * ((dword_1EA807E68 - v3) ^ 0x5E)))
                - 105);
  uint64_t v5 = *(void *)(v4 - 4) - v3 - (void)&v7;
  *(void *)(v2 - 4) = 1233700771 * v5 - 0x51BD24D370C3655ELL;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  unsigned int v11 = 1259
      - 1629346421 * ((((&v8 | 0xFE430E00) ^ 0xFFFFFFFE) - (~&v8 | 0x1BCF1FF)) ^ 0x27FE6406);
  uint64_t v9 = a2;
  uint64_t v10 = a1;
  LOBYTE(v4) = -93 * (*(_DWORD *)(v2 - 4) ^ 0x5E ^ *(_DWORD *)(v4 - 4));
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * (dword_1EA807A68 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807A68 ^ 0x5E ^ dword_1EA807E68))] ^ 0xBC])
                                  - 118)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v4 - 4) ^ 0xA9u)
                                     - 8) ^ v4)
   + 4396))(&v8);
  return (v8 - 101372955);
}

uint64_t tQFLvn2B7sZg9oYAhp0R8Jz(uint64_t a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  uint64_t v7 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807E78) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807E78) ^ 0x5E))] ^ 0xA9])
                + 59);
  uint64_t v8 = *(void *)(v7 - 4);
  uint64_t v9 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83918
                                    + ~*((unsigned char *)off_1F2E83AE8
                                                        + (-93 * ((dword_1EA807E68 + v8) ^ 0x5E))
                                                        - 8)
                                    - 4) ^ (-93 * ((dword_1EA807E68 + v8) ^ 0x5E)))
                - 48);
  unint64_t v10 = v8 ^ (unint64_t)&v13 ^ *(void *)(v9 - 4);
  *(void *)(v7 - 4) = 1233700771 * (v10 - 0x51BD24D370C3655ELL);
  *(void *)(v9 - 4) = 1233700771 * (v10 ^ 0x51BD24D370C3655ELL);
  unsigned int v11 = 693013459 * ((2 * (&v14 & 0x272D6C50) - &v14 - 657288276) ^ 0xD4C92020);
  int v17 = 1846432025 * a5 - v11 + 1957639145;
  uint64_t v14 = a1;
  uint64_t v18 = a4;
  uint64_t v21 = a6;
  unsigned int v15 = a7 - ((2 * a7) & 0xE6194C6E) - v11 + 1930208823;
  unsigned int v16 = (a3 ^ 0x7F5FAEF7) + ((2 * a3) & 0xFEBF5DEE) - 71764001 + v11;
  int v19 = v11 + 364678101 * a2 + 1141248014;
  unsigned int v20 = v11 ^ 0x847C8725;
  LOBYTE(v7) = -93 * (*(_DWORD *)(v7 - 4) ^ 0x5E ^ *(_DWORD *)(v9 - 4));
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93
                                                                       * ((dword_1EA807E68 - dword_1EA807E78) ^ 0x5E)) ^ byte_1D6FC6F00[~byte_1D6FC6A00[(-93 * ((dword_1EA807E68 - dword_1EA807E78) ^ 0x5E))]])
                                      + 59)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v7 - 4) ^ 0xA9u)
                                     - 8) ^ v7)
   + 4314))(&v14);
  return 4294924507;
}

uint64_t xznuOJnBntNZhCW(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(&off_1F2E838F0
       + ((-93 * (dword_1EA807D18 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * (dword_1EA807D18 ^ 0x5E ^ dword_1EA807E68))] ^ 0xA9])
       + 31);
  unsigned __int8 v4 = -93 * ((dword_1EA807E68 - *v3) ^ 0x5E);
  uint64_t v5 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83918 + ~*((unsigned char *)off_1F2E83AE8 + v4 - 8) - 4) ^ v4)
                - 48);
  unint64_t v6 = (*(void *)(v5 - 4) - *v3) ^ (unint64_t)&v8;
  *uint64_t v3 = 1233700771 * (v6 - 0x51BD24D370C3655ELL);
  *(void *)(v5 - 4) = 1233700771 * (v6 ^ 0x51BD24D370C3655ELL);
  LODWORD(v6) = 1239927961 * ((&v9 - 948946316 - 2 * ((unint64_t)&v9 & 0xC7703A74)) ^ 0xE012C7B8);
  uint64_t v10 = a2;
  uint64_t v12 = a1;
  int v11 = v6 ^ 0x3A70B6BE;
  int v9 = v6 + a3;
  LOBYTE(v5) = -93 * (*(_DWORD *)v3 ^ 0x5E ^ *(_DWORD *)(v5 - 4));
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * ((dword_1EA807E68 + dword_1EA807D18) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807D18) ^ 0x5E))] ^ 0xBC])
                                  - 118)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v5 - 4) ^ 0xA9u)
                                     - 8) ^ v5)
   + 4315))(&v9);
  return v13;
}

uint64_t sfgjsdew8e2qtdytnp()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807CC0) ^ 0x5E)) ^ byte_1D6FC7000[byte_1D6FC6C00[(-93 * ((dword_1EA807E68 + dword_1EA807CC0) ^ 0x5E))] ^ 0x94])
                - 170);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (char *)off_1F2E83CA0 - 8;
  uint64_t v3 = (char *)off_1F2E83B88 - 4;
  uint64_t v4 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83B88
                                    + (*((unsigned __int8 *)off_1F2E83CA0
                                       + (-93 * (v1 ^ dword_1EA807E68 ^ 0x5E))
                                       - 8) ^ 0x8Eu)
                                    - 4) ^ (-93 * (v1 ^ dword_1EA807E68 ^ 0x5E)))
                - 7);
  unint64_t v5 = (unint64_t)&v7[*(void *)(v4 - 4) ^ v1];
  *(void *)(v0 - 4) = 1233700771 * v5 + 0x51BD24D370C3655ELL;
  *(void *)(v4 - 4) = 1233700771 * (v5 ^ 0x51BD24D370C3655ELL);
  v8[0] = 3620 - 1067412197 * (((v8 | 0xC3CDD72F) - (v8 & 0xC3CDD72F)) ^ 0x70C19521);
  uint64_t v9 = 0x6D93E3DD35BE4F29;
  LOBYTE(v4) = -93 * ((*(_DWORD *)(v4 - 4) + *(_DWORD *)(v0 - 4)) ^ 0x5E);
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807CC0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807CC0 ^ 0x5E ^ dword_1EA807E68))] ^ 0x1B])
                                     - 96)
   + (v4 ^ v3[v2[v4] ^ 0xDA])
   + 4347))(v8);
  return v8[1] ^ 0x71BA9614u;
}

uint64_t Qt84D4aopGP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (unint64_t *)*(&off_1F2E838F0
                           + ((-93 * ((dword_1EA807E68 - dword_1EA807C50) ^ 0x5E)) ^ byte_1D6FC6F00[~byte_1D6FC6A00[(-93 * ((dword_1EA807E68 - dword_1EA807C50) ^ 0x5E))]])
                           - 37);
  uint64_t v4 = (unsigned __int8 *)off_1F2E83AF0;
  unint64_t v5 = (char *)off_1F2E83CF8 - 8;
  uint64_t v6 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83CF8
                                    + (*((unsigned __int8 *)off_1F2E83AF0
                                       + (-93 * ((dword_1EA807E68 - *v3) ^ 0x5E))) ^ 0x7Eu)
                                    - 8) ^ (-93 * ((dword_1EA807E68 - *v3) ^ 0x5E)))
                - 184);
  unint64_t v7 = 1233700771 * (*v3 ^ (unint64_t)&v9 ^ 0x51BD24D370C3655ELL ^ *(void *)(v6 - 4));
  *uint64_t v3 = v7;
  *(void *)(v6 - 4) = v7;
  uint64_t v12 = a2;
  unint64_t v13 = -2018881763
      * (((unint64_t)&v10 - 2 * ((unint64_t)&v10 & 0x56329F513678FF4FLL) + 0x56329F513678FF4FLL) ^ 0xD53FC1099146F835)
      + 0x717584D1D52972A3 * a1
      + 0x3EF112F4E8A527E7;
  int v10 = 2018881763
      * ((&v10 - 2 * ((unint64_t)&v10 & 0x56329F513678FF4FLL) + 913899343) ^ 0x9146F835)
      + 1810;
  uint64_t v11 = a3;
  LOBYTE(v6) = -93 * ((*(_DWORD *)(v6 - 4) - *(_DWORD *)v3) ^ 0x5E);
  (*((void (**)(int *))*(&off_1F2E838F0
                                  + ((-93 * ((dword_1EA807E68 + dword_1EA807C50) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807C50) ^ 0x5E))] ^ 0x9A])
                                  - 58)
   + (v6 ^ v5[v4[v6] ^ 0x2B])
   + 4293))(&v10);
  return (v14 - 101372955);
}

uint64_t BaRGxXGfX6Am0I()
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 - dword_1EA807AD0) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 - dword_1EA807AD0) ^ 0x5E))] ^ 0x7E])
       - 101);
  uint64_t v1 = (uint64_t)*(&off_1F2E838F0
                + (*((unsigned char *)off_1F2E83CF8
                                    + (*((unsigned __int8 *)off_1F2E83AF0
                                       + (-93 * ((dword_1EA807E68 + *v0) ^ 0x5E))) ^ 0x7Eu)
                                    - 8) ^ (-93 * ((dword_1EA807E68 + *v0) ^ 0x5E)))
                - 184);
  unint64_t v2 = (unint64_t)&v4[*(void *)(v1 - 4) ^ *v0];
  void *v0 = 1233700771 * v2 + 0x51BD24D370C3655ELL;
  *(void *)(v1 - 4) = 1233700771 * (v2 ^ 0x51BD24D370C3655ELL);
  v5[0] = 253222187 * ((2 * (v5 & 0x613270BC) - v5 - 1630695614) ^ 0x9601A764) + 2163;
  LOBYTE(v1) = -93 * ((*(_DWORD *)(v1 - 4) - *(_DWORD *)v0) ^ 0x5E);
  (*((void (**)(_DWORD *))*(&off_1F2E838F0
                                     + ((-93 * (dword_1EA807AD0 ^ 0x5E ^ dword_1EA807E68)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * (dword_1EA807AD0 ^ 0x5E ^ dword_1EA807E68))] ^ 0x13])
                                     + 2)
   + (*((unsigned char *)off_1F2E83AB8
                                     + (*((unsigned __int8 *)off_1F2E83C18 + v1 - 4) ^ 0xA9u)
                                     - 8) ^ v1)
   + 4419))(v5);
  return (v5[1] - 101372955);
}

uint64_t D2Zl4GdLl(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(&off_1F2E838F0
       + ((-93 * ((dword_1EA807E68 + dword_1EA807EA0) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + dword_1EA807EA0) ^ 0x5E))] ^ 0x5B])
       - 92);
  unsigned __int8 v4 = -93 * ((dword_1EA807E68 - *v3) ^ 0x5E);
  uint64_t v5 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + v4 - 12) ^ 0x9A] ^ v4)
                - 165);
  unint64_t v6 = (*(void *)(v5 - 4) + *v3) ^ (unint64_t)&v9;
  *uint64_t v3 = 1233700771 * v6 + 0x51BD24D370C3655ELL;
  *(void *)(v5 - 4) = 1233700771 * (v6 ^ 0x51BD24D370C3655ELL);
  unsigned int v7 = 1067412197 * ((((2 * v10) | 0xA68234C2) - v10 + 750708127) ^ 0x604D586F);
  uint64_t v11 = a2;
  uint64_t v13 = a1;
  unsigned int v14 = (a3 ^ 0xEFDDB9F6) + ((2 * a3) & 0xDFBB73EC) + 1038280448 + v7;
  unsigned int v12 = v7 ^ 0x8CCE470E;
  LOBYTE(v5) = -93 * ((*(_DWORD *)(v5 - 4) - *(_DWORD *)v3) ^ 0x5E);
  (*((void (**)(unsigned char *))*(&off_1F2E838F0
                                    + ((-93 * ((dword_1EA807E68 - dword_1EA807EA0) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807EA0) ^ 0x5E))] ^ 0x53])
                                    - 115)
   + (*((unsigned char *)off_1F2E83B88
                                     + (*((unsigned __int8 *)off_1F2E83CA0 + v5 - 8) ^ 0xDAu)
                                     - 4) ^ v5)
   + 4333))(v10);
  return 4294924507;
}

uint64_t sub_1D6F39E34(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F2E83AB8
         + (*((unsigned char *)off_1F2E83C18 + a2 - 4) ^ a1)
         - 8) ^ a2;
}

uint64_t sub_1D6F39E60(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F2E83CF8 + (*((unsigned char *)off_1F2E83AF0 + a2) ^ a1)
                                            - 8) ^ a2;
}

uint64_t sub_1D6F39E8C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83918 + ~*((unsigned char *)off_1F2E83AE8 + a1 - 8) - 4) ^ a1;
}

uint64_t sub_1D6F39EB8(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F2E83B80
         + (*((unsigned char *)off_1F2E83928 + a2 - 8) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1D6F39EE4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83B88 + (*((unsigned __int8 *)off_1F2E83CA0 + a1 - 8) ^ 0xDAu)
                                            - 4) ^ a1;
}

uint64_t sub_1D6F39F14(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83AB8 + (*((unsigned __int8 *)off_1F2E83C18 + a1 - 4) ^ 0x5Bu)
                                            - 8) ^ a1;
}

uint64_t sub_1D6F39F44(unsigned int a1)
{
  return (*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8 + a1 - 12) ^ 0x13] ^ a1;
}

uint64_t sub_1D6F39F70(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F2E83918 + (*((unsigned __int8 *)off_1F2E83AE8 + a1 - 8) ^ 0x77u)
                                            - 4) ^ a1;
}

uint64_t sub_1D6F39FA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v35 = *MEMORY[0x1E4F143B8];
  uint64_t v13 = (uint64_t)*(&off_1F2E838F0
                 + ((-93 * ((dword_1EA807E68 - dword_1EA807C10) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 - dword_1EA807C10) ^ 0x5E))] ^ 0x53])
                 - 137);
  uint64_t v14 = *(void *)(v13 - 4);
  uint64_t v15 = (uint64_t)*(&off_1F2E838F0
                 + ((-93 * ((dword_1EA807E68 + v14) ^ 0x5E)) ^ byte_1D6FC72B0[byte_1D6FC6E00[(-93 * ((dword_1EA807E68 + v14) ^ 0x5E))] ^ 0x8A])
                 - 206);
  unint64_t v16 = (*(void *)(v15 - 4) + v14) ^ (unint64_t)&v19;
  *(void *)(v13 - 4) = 1233700771 * v16 + 0x51BD24D370C3655ELL;
  *(void *)(v15 - 4) = 1233700771 * (v16 ^ 0x51BD24D370C3655ELL);
  unint64_t v17 = 1742951923
      * ((((unint64_t)&v20 | 0xC5420B4755190D6BLL)
        - (void)&v20
        + ((unint64_t)&v20 & 0x3ABDF4B8AAE6F290)) ^ 0x8C534B2BE383C9F9);
  uint64_t v20 = a11;
  int v26 = (a3 ^ 0xE7FFFFCB) + ((2 * a3) & 0xCFFFFF96) + 2099219197 + v17;
  uint64_t v22 = a6;
  unint64_t v23 = (a1 ^ 0x4FD773BBF7DDAF38) + ((2 * a1) & 0x9FAEE777EFBB5E70) - v17 - 0x2C4202B72508A00;
  int v28 = (a5 ^ 0xFB8FF36D) + ((2 * a5) & 0xF71FE6DA) - v17 + 922418684;
  uint64_t v30 = a12;
  uint64_t v31 = a9;
  int v32 = (a10 ^ 0xB2DBFB79) + ((2 * a10) & 0x65B7F6F2) + 2142172656 + v17;
  uint64_t v27 = a2;
  uint64_t v34 = a13;
  uint64_t v29 = a4;
  int v21 = (a7 ^ 0x7EDBFD69) + ((2 * a7) & 0xFDB7FAD2) - v17 - 1280379904;
  int v24 = v17 ^ ((a8 ^ 0x7DEF7CFD) - 1346372736 + ((2 * a8) & 0xFBDEF9FA));
  int v25 = v17 ^ 0x7CC;
  (*((void (**)(uint64_t *))*(&off_1F2E838F0
                                      + ((-93
                                                                       * ((dword_1EA807E68 + dword_1EA807C10) ^ 0x5E)) ^ byte_1D6FC6900[byte_1D6FC73B0[(-93 * ((dword_1EA807E68 + dword_1EA807C10) ^ 0x5E))] ^ 0x55])
                                      + 81)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0
                                        + (-93 * ((*(_DWORD *)(v15 - 4) - *(_DWORD *)(v13 - 4)) ^ 0x5E))) ^ 0x55u)
                                     - 8) ^ (-93 * ((*(_DWORD *)(v15 - 4) - *(_DWORD *)(v13 - 4)) ^ 0x5E)))
   + 4318))(&v20);
  return (v33 - 101372955);
}

uint64_t DBBThCw2vI05rGimZ393YZhnr0N(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807A58) ^ 0x5E)) ^ byte_1D6FC6F00[byte_1D6FC6A00[(-93 * ((dword_1EA807E68 + dword_1EA807A58) ^ 0x5E))] ^ 0x77])
                - 125);
  uint64_t v4 = *(void *)(v3 - 4);
  uint64_t v5 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 - v4) ^ 0x5E))
                                                     - 12) ^ 0xBC] ^ (-93 * ((dword_1EA807E68 - v4) ^ 0x5E)))
                - 225);
  unint64_t v6 = (*(void *)(v5 - 4) - v4) ^ (unint64_t)&v9;
  *(void *)(v3 - 4) = 1233700771 * (v6 - 0x51BD24D370C3655ELL);
  *(void *)(v5 - 4) = 1233700771 * (v6 ^ 0x51BD24D370C3655ELL);
  unsigned int v7 = 253222187 * (((v10 | 0x891BB96B) - (v10 & 0x891BB96B)) ^ 0x81D7914D);
  v10[0] = a2;
  v10[1] = a1;
  unsigned int v11 = v7 + 2077767822;
  unsigned int v12 = a3 - ((2 * a3) & 0xC6900A1C) - v7 + 1665664270;
  LOBYTE(v5) = -93 * (*(_DWORD *)(v3 - 4) ^ 0x5E ^ *(_DWORD *)(v5 - 4));
  (*((void (**)(void *))*(&off_1F2E838F0
                                     + ((-93
                                                                      * ((dword_1EA807E68 + dword_1EA807A58) ^ 0x5E)) ^ byte_1D6FC6B00[byte_1D6FC74B0[(-93 * ((dword_1EA807E68 + dword_1EA807A58) ^ 0x5E))] ^ 0x13])
                                     + 2)
   + (*((unsigned char *)off_1F2E83CF8
                                     + (*((unsigned __int8 *)off_1F2E83AF0 + v5) ^ 0x55u)
                                     - 8) ^ v5)
   + 4367))(v10);
  return 4294924507;
}

uint64_t YuSm1Tar2l(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (uint64_t)*(&off_1F2E838F0
                + ((-93 * ((dword_1EA807E68 + dword_1EA807C38) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 + dword_1EA807C38) ^ 0x5E))] ^ 0xDA])
                + 42);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (char *)off_1F2E83BE8 - 12;
  uint64_t v5 = off_1F2E83C28;
  uint64_t v6 = (uint64_t)*(&off_1F2E838F0
                + ((*off_1F2E83C28)[*((unsigned __int8 *)off_1F2E83BE8
                                                     + (-93 * ((dword_1EA807E68 - v3) ^ 0x5E))
                                                     - 12) ^ 0x9A] ^ (-93 * ((dword_1EA807E68 - v3) ^ 0x5E)))
                - 165);
  uint64_t v7 = v3 - (void)&v9 + *(void *)(v6 - 4);
  *(void *)(v2 - 4) = 1233700771 * v7 - 0x51BD24D370C3655ELL;
  *(void *)(v6 - 4) = 1233700771 * (v7 ^ 0x51BD24D370C3655ELL);
  v10[0] = a2;
  v10[1] = a1;
  unsigned int v12 = 1756268191
      * (((v10 ^ 0x9B10CB81 | 0x3AE0A6CC)
        - (v10 ^ 0x9B10CB81)
        + ((v10 ^ 0x9B10CB81) & 0xC51F5931)) ^ 0xF4958DF3)
      + 318536051;
  LODWORD(v6) = 1233700771 * ((*(_DWORD *)(v6 - 4) + *(_DWORD *)(v2 - 4)) ^ 0x70C3655E);
  (*((void (**)(void *))*(&off_1F2E838F0
                                     + ((-93
                                                                      * ((dword_1EA807E68 - dword_1EA807C38) ^ 0x5E)) ^ byte_1D6FC7100[byte_1D6FC6D00[(-93 * ((dword_1EA807E68 - dword_1EA807C38) ^ 0x5E))] ^ 0x8E])
                                     + 100)
   + (v6 ^ (*v5)[v4[v6] ^ 0x53])
   + 4216))(v10);
  return v11;
}