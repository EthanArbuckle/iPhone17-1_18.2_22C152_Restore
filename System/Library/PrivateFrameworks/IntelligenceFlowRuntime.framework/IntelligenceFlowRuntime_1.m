uint64_t _s26PromptStatementStepBuilderV10ResolutionOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7C8A8);
}

uint64_t _s26PromptStatementStepBuilderVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7C898);
}

uint64_t sub_253C72274(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  sub_253C0FF48();
  v4();
  return a2;
}

uint64_t sub_253C722D0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return a1;
}

uint64_t sub_253C72324(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  uint64_t v4 = sub_253C2F58C();
  v5(v4);
  return a2;
}

uint64_t *sub_253C72378(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFFE0();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253DEFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    uint64_t v16 = sub_253DF0A20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[8];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    uint64_t v20 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v22 = sub_253DF4BA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_253C72588(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253DEFFE0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = sub_253DF0A20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[8];
  _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v12 = sub_253DF4BA0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v10, v12);
  }
  return result;
}

uint64_t sub_253C72708(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF0A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  uint64_t v19 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253C728C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF0A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = a3[8];
    uint64_t v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_253C722D0(a1 + v16, (void (*)(void))_s26PromptStatementStepBuilderV10ResolutionOMa);
    uint64_t v19 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 16))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_253C72AAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF0A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  uint64_t v19 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253C72C6C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF0A20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  if (a1 != a2)
  {
    uint64_t v16 = a3[8];
    uint64_t v17 = (void *)(a1 + v16);
    v18 = (const void *)(a2 + v16);
    sub_253C722D0(a1 + v16, (void (*)(void))_s26PromptStatementStepBuilderV10ResolutionOMa);
    uint64_t v19 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      uint64_t v20 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_253C72E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C72E64);
}

uint64_t sub_253C72E64(uint64_t a1, uint64_t a2, int *a3)
{
  sub_253DEFFE0();
  sub_253C16A18();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_253DEFE90();
    sub_253C16A18();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[6];
    }
    else
    {
      sub_253DF0A20();
      sub_253C16A18();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[7];
      }
      else
      {
        uint64_t v8 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
        uint64_t v12 = a3[8];
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v9, a2, v8);
}

uint64_t sub_253C72F28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C72F3C);
}

uint64_t sub_253C72F3C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_253DEFFE0();
  sub_253C16A18();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_253DEFE90();
    sub_253C16A18();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      sub_253DF0A20();
      sub_253C16A18();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        uint64_t v10 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
        uint64_t v14 = a4[8];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v11, a2, a2, v10);
}

uint64_t sub_253C73008()
{
  uint64_t result = sub_253DEFFE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_253DEFE90();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_253DF0A20();
      if (v3 <= 0x3F)
      {
        uint64_t result = _s26PromptStatementStepBuilderV10ResolutionOMa(319);
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_253C73148(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_253DF4BA0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_253C73240(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t v3 = sub_253DF4BA0();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_253C732B8(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_253C7336C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253C722D0((uint64_t)a1, (void (*)(void))_s26PromptStatementStepBuilderV10ResolutionOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_253C73444(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_253C734F8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253C722D0((uint64_t)a1, (void (*)(void))_s26PromptStatementStepBuilderV10ResolutionOMa);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_253C735D0()
{
  uint64_t result = sub_253DF4BA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_253C73664()
{
  return *(void *)(v0 - 376);
}

uint64_t sub_253C7368C()
{
  return *(void *)(v0 - 384);
}

uint64_t sub_253C736C4()
{
  return *(void *)(v0 - 336);
}

uint64_t sub_253C73714()
{
  return v0;
}

uint64_t sub_253C73740()
{
  return v0;
}

uint64_t sub_253C73758()
{
  return v1 + *(int *)(v0 + 20);
}

uint64_t sub_253C73788()
{
  return _s24ActionConfirmationResultVMa(0);
}

uint64_t sub_253C737A8()
{
  return _s20ActionStepEvaluationVMa(0);
}

uint64_t sub_253C737C8()
{
  return sub_253DEFE90();
}

uint64_t sub_253C737F0()
{
  *(void *)(v1 - 168) = v0;
  return _s25ValueDisambiguationResultVMa(0);
}

uint64_t sub_253C73818()
{
  return v0;
}

uint64_t sub_253C73830()
{
  return *(void *)(v0 - 296);
}

uint64_t sub_253C73848()
{
  return v0;
}

uint64_t sub_253C73870()
{
  return *(void *)(v0 - 120);
}

uint64_t sub_253C73888()
{
  return sub_253DEFE90();
}

uint64_t sub_253C738A4()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253C738C0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_253C738E0()
{
  _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  return v0;
}

uint64_t sub_253C73900(uint64_t a1)
{
  uint64_t v30 = sub_253BDEDD8(&qword_26B255328);
  uint64_t v3 = MEMORY[0x270FA5388](v30);
  uint64_t v29 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  v28 = (char *)&v25 - v6;
  MEMORY[0x270FA5388](v5);
  v27 = (char *)&v25 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v8)
  {
    uint64_t v25 = v1;
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_253DF59D0();
    uint64_t result = sub_253DEB920(a1);
    if (v11)
    {
LABEL_20:
      __break(1u);
    }
    else
    {
      uint64_t v12 = result;
      uint64_t v13 = a1 + 64;
      uint64_t v14 = v8 - 1;
      uint64_t v26 = a1 + 64;
      uint64_t v15 = v30;
      uint64_t v16 = (uint64_t)v27;
      if ((result & 0x8000000000000000) == 0)
      {
        while (v12 < 1 << *(unsigned char *)(a1 + 32))
        {
          if ((*(void *)(v13 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0)
          {
            __break(1u);
LABEL_16:
            __break(1u);
LABEL_17:
            __break(1u);
LABEL_18:
            __break(1u);
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
          if (v10 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_16;
          }
          uint64_t v33 = 1 << v12;
          unint64_t v34 = (unint64_t)v12 >> 6;
          uint64_t v31 = v14;
          uint64_t v32 = v10;
          uint64_t v17 = *(int *)(v15 + 48);
          uint64_t v18 = *(void *)(a1 + 48);
          uint64_t v19 = sub_253DEFFE0();
          uint64_t v20 = *(void *)(v19 - 8);
          uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16);
          v21(v16, v18 + *(void *)(v20 + 72) * v12, v19);
          uint64_t v22 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
          *(void *)(v16 + v17) = v22;
          uint64_t v23 = (uint64_t)v28;
          v21((uint64_t)v28, v16, v19);
          *(void *)(v23 + *(int *)(v15 + 48)) = v22;
          uint64_t v24 = v29;
          sub_253C61B78(v23, v29, &qword_26B255328);
          swift_retain_n();
          sub_253BEFAC0(v16, &qword_26B255328);
          swift_retain();
          sub_253BEFAC0(v24, &qword_26B255328);
          sub_253DF59B0();
          sub_253DF59E0();
          sub_253DF59F0();
          uint64_t result = sub_253DF59C0();
          if (v12 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_17;
          }
          uint64_t v13 = v26;
          if ((*(void *)(v26 + 8 * v34) & v33) == 0) {
            goto LABEL_18;
          }
          if (v32 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_19;
          }
          uint64_t result = sub_253DF58B0();
          if (!v31) {
            return v35;
          }
          uint64_t v12 = result;
          uint64_t v10 = *(unsigned int *)(a1 + 36);
          uint64_t v14 = v31 - 1;
          if (result < 0) {
            break;
          }
        }
      }
      __break(1u);
      return v35;
    }
  }
  return result;
}

uint64_t sub_253C73BF4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(BOOL, unint64_t, uint64_t), uint64_t (*a6)(uint64_t))
{
  v53 = a3;
  uint64_t v61 = sub_253BDEDD8(a3);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v10);
  sub_253C34050();
  uint64_t v52 = v11;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  v51 = (char *)&v43 - v14;
  MEMORY[0x270FA5388](v13);
  sub_253C36430();
  uint64_t v50 = v15;
  uint64_t v16 = sub_253C36350();
  uint64_t v60 = a4(v16);
  sub_253C0F830();
  uint64_t v62 = v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v43 - v19;
  unint64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = MEMORY[0x263F8EE78];
  if (!v21) {
    return v22;
  }
  uint64_t v63 = MEMORY[0x263F8EE78];
  a5(0, v21, 0);
  uint64_t result = a6(a1);
  if ((v25 & 1) == 0)
  {
    unint64_t v26 = result;
    uint64_t v27 = a1 + 64;
    uint64_t v45 = v62 + 32;
    uint64_t v46 = v62 + 16;
    unint64_t v28 = v21 - 1;
    uint64_t v48 = a1;
    v49 = a5;
    v47 = v20;
    uint64_t v44 = a1 + 64;
    uint64_t v29 = v50;
    if ((result & 0x8000000000000000) == 0)
    {
      while ((uint64_t)v26 < 1 << *(unsigned char *)(a1 + 32))
      {
        if ((*(void *)(v27 + 8 * (v26 >> 6)) & (1 << v26)) == 0) {
          goto LABEL_20;
        }
        if (v24 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_21;
        }
        uint64_t v56 = 1 << v26;
        unint64_t v57 = v26 >> 6;
        unint64_t v54 = v28;
        uint64_t v55 = v24;
        uint64_t v30 = *(void *)(a1 + 48);
        uint64_t v31 = sub_253DEFFE0();
        sub_253BDF7F0();
        uint64_t v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v32 + 16);
        v33(v29, v30 + *(void *)(v32 + 72) * v26, v31);
        uint64_t v58 = *(void *)(v62 + 72);
        unint64_t v59 = v26;
        unint64_t v34 = *(void (**)(void))(v62 + 16);
        sub_253C7BDA0();
        v34();
        uint64_t v35 = (uint64_t)v51;
        v33((uint64_t)v51, v29, v31);
        sub_253C7BDA0();
        v34();
        uint64_t v37 = v52;
        v36 = v53;
        sub_253C61B78(v35, v52, v53);
        sub_253BEFAC0(v29, v36);
        sub_253C7BDA0();
        v34();
        sub_253BEFAC0(v37, v36);
        uint64_t v22 = v63;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          v38 = v49;
        }
        else
        {
          v38 = v49;
          v49(0, *(void *)(v22 + 16) + 1, 1);
          uint64_t v22 = v63;
        }
        unint64_t v40 = *(void *)(v22 + 16);
        unint64_t v39 = *(void *)(v22 + 24);
        uint64_t v41 = v59;
        if (v40 >= v39 >> 1)
        {
          v38(v39 > 1, v40 + 1, 1);
          uint64_t v22 = v63;
        }
        *(void *)(v22 + 16) = v40 + 1;
        sub_253C11244();
        sub_253C10134();
        uint64_t result = v42();
        uint64_t v63 = v22;
        a1 = v48;
        if (v41 >= -(-1 << *(unsigned char *)(v48 + 32))) {
          goto LABEL_22;
        }
        uint64_t v27 = v44;
        if ((*(void *)(v44 + 8 * v57) & v56) == 0) {
          goto LABEL_23;
        }
        if (v55 != *(_DWORD *)(v48 + 36)) {
          goto LABEL_24;
        }
        uint64_t result = sub_253DF58B0();
        if (!v54) {
          return v22;
        }
        unint64_t v26 = result;
        uint64_t v24 = *(unsigned int *)(a1 + 36);
        unint64_t v28 = v54 - 1;
        if (result < 0) {
          break;
        }
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_253C73FF4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = sub_253BDEDD8(&qword_26B255728);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253BDEDD8(&qword_269D7C8D8);
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v32 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v30 = (uint64_t)&v29 - v10;
  sub_253DB2EC8(v35, a1);
  uint64_t v11 = v35[0];
  uint64_t v34 = v35[1];
  int64_t v12 = v35[3];
  unint64_t v13 = v35[4];
  int64_t v36 = (unint64_t)(v35[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v33 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v12 << 6);
      goto LABEL_20;
    }
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v36) {
      goto LABEL_27;
    }
    unint64_t v18 = *(void *)(v34 + 8 * v17);
    int64_t v19 = v12 + 1;
    if (!v18)
    {
      int64_t v19 = v12 + 2;
      if (v12 + 2 >= v36) {
        goto LABEL_27;
      }
      unint64_t v18 = *(void *)(v34 + 8 * v19);
      if (!v18)
      {
        int64_t v19 = v12 + 3;
        if (v12 + 3 >= v36) {
          goto LABEL_27;
        }
        unint64_t v18 = *(void *)(v34 + 8 * v19);
        if (!v18)
        {
          int64_t v19 = v12 + 4;
          if (v12 + 4 >= v36) {
            goto LABEL_27;
          }
          unint64_t v18 = *(void *)(v34 + 8 * v19);
          if (!v18)
          {
            int64_t v19 = v12 + 5;
            if (v12 + 5 >= v36) {
              goto LABEL_27;
            }
            unint64_t v18 = *(void *)(v34 + 8 * v19);
            if (!v18)
            {
              int64_t v20 = v12 + 6;
              while (v20 < v36)
              {
                unint64_t v18 = *(void *)(v34 + 8 * v20++);
                if (v18)
                {
                  int64_t v19 = v20 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_release();
              return v33;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
    int64_t v12 = v19;
LABEL_20:
    unint64_t v21 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v16);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = *(void *)(*(void *)(v11 + 56) + 8 * v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v22, v23, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v6, 1, v7) == 1)
    {
      uint64_t result = sub_253BEFAC0((uint64_t)v6, &qword_26B255728);
    }
    else
    {
      uint64_t v25 = v30;
      sub_253C61B78((uint64_t)v6, v30, &qword_269D7C8D8);
      sub_253C61B78(v25, v32, &qword_269D7C8D8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v33 = sub_253DC453C();
      }
      unint64_t v26 = *(void *)(v33 + 16);
      if (v26 >= *(void *)(v33 + 24) >> 1) {
        uint64_t v33 = sub_253DC453C();
      }
      uint64_t v27 = v32;
      uint64_t v28 = v33;
      *(void *)(v33 + 16) = v26 + 1;
      uint64_t result = sub_253C61B78(v27, v28+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v26, &qword_269D7C8D8);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_253C743A4(void *a1, unint64_t a2, uint64_t (*a3)(char *, uint64_t *), uint64_t a4)
{
  uint64_t isUniquelyReferenced_nonNull_native = v4;
  uint64_t v34 = a3;
  uint64_t v35 = a4;
  uint64_t v36 = sub_253DEFFE0();
  uint64_t v29 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_253DF5AD0();
    if (v10) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v10) {
    goto LABEL_22;
  }
LABEL_3:
  uint64_t v32 = (void *)a2;
  unint64_t v33 = a2 & 0xC000000000000001;
  v28[0] = isUniquelyReferenced_nonNull_native;
  v28[1] = v29 + 16;
  uint64_t v30 = v10;
  uint64_t v31 = (void (**)(char *, uint64_t))(v29 + 8);
  uint64_t v11 = 4;
  while (1)
  {
    uint64_t isUniquelyReferenced_nonNull_native = v11 - 4;
    if (v33) {
      uint64_t v12 = MEMORY[0x25A26FC80](v11 - 4, a2);
    }
    else {
      uint64_t v12 = swift_retain();
    }
    if (__OFADD__(isUniquelyReferenced_nonNull_native, 1))
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    uint64_t v37 = v11 - 3;
    uint64_t v39 = v12;
    uint64_t v13 = v34(v9, &v39);
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v38 = a1;
    uint64_t v14 = v9;
    a2 = (unint64_t)a1;
    sub_253D87ADC();
    uint64_t v17 = a1[2];
    BOOL v18 = (v16 & 1) == 0;
    a1 = (void *)(v17 + v18);
    if (__OFADD__(v17, v18)) {
      goto LABEL_19;
    }
    unint64_t v19 = v15;
    char v20 = v16;
    sub_253BDEDD8(&qword_269D7C8D0);
    a2 = (unint64_t)&v38;
    if (sub_253DF5A70()) {
      break;
    }
LABEL_12:
    a1 = v38;
    if (v20)
    {
      uint64_t v23 = v38[7];
      swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v19) = v13;
      uint64_t v9 = v14;
    }
    else
    {
      v38[(v19 >> 6) + 8] |= 1 << v19;
      uint64_t v9 = v14;
      (*(void (**)(unint64_t, char *, uint64_t))(v29 + 16))(a1[6] + *(void *)(v29 + 72) * v19, v14, v36);
      *(void *)(a1[7] + 8 * v19) = v13;
      uint64_t v24 = a1[2];
      BOOL v25 = __OFADD__(v24, 1);
      uint64_t v26 = v24 + 1;
      if (v25) {
        goto LABEL_20;
      }
      a1[2] = v26;
    }
    swift_bridgeObjectRelease();
    (*v31)(v9, v36);
    swift_release();
    ++v11;
    a2 = (unint64_t)v32;
    if (v37 == v30) {
      goto LABEL_22;
    }
  }
  a2 = (unint64_t)v38;
  sub_253D87ADC();
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v19 = v21;
    goto LABEL_12;
  }
  uint64_t result = sub_253DF5CF0();
  __break(1u);
  return result;
}

uint64_t sub_253C746A0(uint64_t a1, uint64_t a2)
{
  uint64_t v120 = sub_253DF3080();
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v4);
  sub_253C36430();
  sub_253C36350();
  uint64_t v124 = sub_253DF3770();
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v6);
  sub_253C36430();
  sub_253C36350();
  sub_253DF2BE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253BDFA94();
  uint64_t v8 = sub_253C36350();
  type metadata accessor for FeedbackLearning.ActionValue(v8);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v9);
  sub_253BDFA94();
  uint64_t v129 = v10;
  sub_253C36350();
  sub_253DEFFE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v11);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v12);
  sub_253C63378();
  MEMORY[0x270FA5388](v13);
  sub_253C63378();
  MEMORY[0x270FA5388](v14);
  sub_253C36430();
  char v131 = v15;
  sub_253C36350();
  uint64_t v130 = sub_253DF3C70();
  sub_253C0F830();
  MEMORY[0x270FA5388](v16);
  sub_253BDFA94();
  sub_253C36350();
  sub_253DF4040();
  sub_253C0F830();
  uint64_t v18 = v17;
  MEMORY[0x270FA5388](v19);
  sub_253C34050();
  MEMORY[0x270FA5388](v20);
  sub_253C36430();
  sub_253C36350();
  uint64_t v138 = sub_253DF41F0();
  sub_253C0F830();
  uint64_t v22 = v21;
  MEMORY[0x270FA5388](v23);
  sub_253BDFA94();
  uint64_t v137 = v24;
  sub_253C36350();
  uint64_t v140 = sub_253DF4230();
  sub_253C0F830();
  MEMORY[0x270FA5388](v25);
  sub_253BDFA94();
  uint64_t v139 = v26;
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v121 = a1;
  if (!v27)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    uint64_t v99 = MEMORY[0x263F8EE80];
LABEL_61:
    uint64_t v100 = swift_bridgeObjectRetain();
    unint64_t v101 = sub_253C73900(v100);
    swift_bridgeObjectRelease();
    uint64_t v102 = swift_bridgeObjectRetain();
    uint64_t v103 = sub_253C73BF4(v102, (uint64_t)v144, &qword_26B255318, MEMORY[0x263F4D7C8], (void (*)(BOOL, unint64_t, uint64_t))sub_253DC70DC, sub_253DEB920);
    swift_bridgeObjectRelease();
    uint64_t v104 = swift_bridgeObjectRetain();
    v105 = (void *)sub_253C73BF4(v104, (uint64_t)v143, &qword_26B255320, MEMORY[0x263F4DA08], (void (*)(BOOL, unint64_t, uint64_t))sub_253DC7078, sub_253DEB920);
    swift_bridgeObjectRelease();
    unint64_t v141 = v101;
    sub_253C757E4(v101, (uint64_t)v105, v103, a2);
    swift_bridgeObjectRelease();
    uint64_t v142 = v99;
    if (v27)
    {
      sub_253C11244();
      uint64_t v107 = v121 + v106;
      uint64_t v109 = *(void *)(v108 + 72);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      do
      {
        sub_253C5EA04((uint64_t)&v142);
        v107 += v109;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease_n();
      uint64_t v110 = v142;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v110 = MEMORY[0x263F8EE80];
    }
    uint64_t v142 = v99;
    uint64_t v111 = *(void *)(v32 + 16);
    if (v111)
    {
      sub_253C11244();
      uint64_t v113 = v32 + v112;
      uint64_t v115 = *(void *)(v114 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_253C76604(&v142, v113, v110);
        v113 += v115;
        --v111;
      }
      while (v111);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_253C760E8(v141, v105);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_253C76594();
    uint64_t v116 = sub_253C76594();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v116;
  }
  sub_253C11244();
  uint64_t v29 = a1 + v28;
  v135 = (unsigned int (**)(uint64_t, uint64_t))(v22 + 88);
  v136 = v30;
  int v134 = *MEMORY[0x263F4DE90];
  v133 = (void (**)(void))(v18 + 32);
  uint64_t v132 = *(void *)(v31 + 56);
  swift_bridgeObjectRetain();
  uint64_t v32 = MEMORY[0x263F8EE78];
  uint64_t v33 = MEMORY[0x263F8EE80];
  uint64_t v34 = v27;
  uint64_t v127 = MEMORY[0x263F8EE80];
  uint64_t v125 = MEMORY[0x263F8EE80];
  uint64_t v36 = v137;
  uint64_t v35 = v138;
  while (1)
  {
    v136(v139, v29, v140);
    sub_253DF4200();
    if ((*v135)(v36, v35) == v134)
    {
      uint64_t v37 = sub_253C7BCD8();
      v38(v37);
      uint64_t v39 = *v133;
      sub_253BEFD2C();
      v39();
      sub_253C633D4();
      sub_253C0FF48();
      v40();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v32 = sub_253DC44F4(0, *(void *)(v32 + 16) + 1, 1, v32);
      }
      unint64_t v42 = *(void *)(v32 + 16);
      unint64_t v41 = *(void *)(v32 + 24);
      if (v42 >= v41 >> 1) {
        uint64_t v32 = sub_253DC44F4(v41 > 1, v42 + 1, 1, v32);
      }
      *(void *)(v32 + 16) = v42 + 1;
      sub_253C11244();
      sub_253BEFD2C();
      v39();
      sub_253BEFBCC();
      v43();
      sub_253BEFBCC();
      v44();
      goto LABEL_50;
    }
    sub_253C63544();
    if (v53) {
      break;
    }
    sub_253C63544();
    if (v53)
    {
      uint64_t v54 = sub_253C7BCD8();
      v55(v54);
      sub_253C7BD90();
      sub_253C10134();
      v56();
      uint64_t v57 = v128;
      sub_253DF2B50();
      sub_253C0FF48();
      v58();
      swift_storeEnumTagMultiPayload();
      _s13ActionCreatedCMa(0);
      uint64_t v32 = swift_allocObject();
      *(void *)(v32
                + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
      sub_253C7BC18(v129, v32 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v142 = v33;
      sub_253D87ADC();
      sub_253C7BE60();
      if (v50) {
        goto LABEL_73;
      }
      sub_253C7BE54();
      sub_253BDEDD8(&qword_269D7C8C8);
      if (sub_253C7BE34())
      {
        sub_253D87ADC();
        sub_253C7BD80();
        if (!v53) {
          goto LABEL_80;
        }
        uint64_t v57 = v59;
      }
      uint64_t v33 = v142;
      if (v129)
      {
        uint64_t v60 = *(void *)(v142 + 56);
        swift_release();
        *(void *)(v60 + 8 * v57) = v32;
      }
      else
      {
        sub_253C7BD2C();
        sub_253C7BD64();
        v80();
        sub_253C7BEB0();
        if (v50) {
          goto LABEL_76;
        }
        *(void *)(v142 + 16) = v81;
      }
      swift_bridgeObjectRelease();
      sub_253C633D4();
      sub_253BEFBCC();
      v82();
LABEL_49:
      sub_253BEFBCC();
      v83();
      sub_253BEFBCC();
      v84();
      sub_253C7BDD0();
LABEL_50:
      uint64_t v36 = v137;
      uint64_t v35 = v138;
      goto LABEL_51;
    }
    sub_253C63544();
    if (v61)
    {
      uint64_t v62 = sub_253C7BCD8();
      v63(v62);
      sub_253C7BD90();
      sub_253BEFD2C();
      v64();
      sub_253DF3730();
      sub_253C633D4();
      sub_253C0FF48();
      v65();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v142 = v127;
      sub_253D87ADC();
      sub_253C7BE88();
      if (v50) {
        goto LABEL_75;
      }
      sub_253C7BE54();
      sub_253BDEDD8(&qword_269D7C8C0);
      sub_253C7BE14();
      sub_253C7BDD0();
      if (v66)
      {
        sub_253D87ADC();
        sub_253C7BD80();
        if (!v53) {
          goto LABEL_80;
        }
      }
      if (v126)
      {
        uint64_t v67 = sub_253C7BE74(*(void *)(v142 + 56));
        v68(v67, v123, v124);
      }
      else
      {
        sub_253C7BCF4();
        sub_253C7BD64();
        v87();
        sub_253BEFD2C();
        v88();
        uint64_t v89 = *(void *)(v142 + 16);
        BOOL v50 = __OFADD__(v89, 1);
        uint64_t v90 = v89 + 1;
        if (v50) {
          goto LABEL_78;
        }
        *(void *)(v142 + 16) = v90;
      }
      uint64_t v127 = v142;
      swift_bridgeObjectRelease();
      sub_253C633D4();
      sub_253BEFBCC();
      v91();
      sub_253C633D4();
      goto LABEL_59;
    }
    sub_253C63544();
    if (v72)
    {
      uint64_t v73 = sub_253C7BCD8();
      v74(v73);
      sub_253C7BD90();
      sub_253BEFD2C();
      v75();
      sub_253DF3060();
      sub_253C633D4();
      sub_253C0FF48();
      v76();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v142 = v125;
      sub_253D87ADC();
      sub_253C7BE88();
      if (v50) {
        goto LABEL_77;
      }
      sub_253C7BE54();
      sub_253BDEDD8(&qword_269D7C8B8);
      sub_253C7BE14();
      sub_253C7BDD0();
      if (v77)
      {
        sub_253D87ADC();
        sub_253C7BD80();
        if (!v53) {
          goto LABEL_80;
        }
      }
      if (v122)
      {
        uint64_t v78 = sub_253C7BE74(*(void *)(v142 + 56));
        v79(v78, v119, v120);
      }
      else
      {
        sub_253C7BCF4();
        sub_253C7BD64();
        v92();
        sub_253BEFD2C();
        v93();
        uint64_t v94 = *(void *)(v142 + 16);
        BOOL v50 = __OFADD__(v94, 1);
        uint64_t v95 = v94 + 1;
        if (v50) {
          goto LABEL_79;
        }
        *(void *)(v142 + 16) = v95;
      }
      uint64_t v125 = v142;
      swift_bridgeObjectRelease();
      sub_253C633D4();
      sub_253BEFBCC();
      v96();
      sub_253C633D4();
LABEL_59:
      sub_253BEFBCC();
      v97();
      sub_253BEFBCC();
      v98();
      goto LABEL_50;
    }
    sub_253BEFBCC();
    v85();
    sub_253C633D4();
    sub_253BEFBCC();
    v86();
LABEL_51:
    v29 += v132;
    if (!--v34)
    {
      swift_bridgeObjectRelease();
      uint64_t v99 = MEMORY[0x263F8EE80];
      goto LABEL_61;
    }
  }
  uint64_t v45 = sub_253C7BCD8();
  v46(v45);
  sub_253C7BDB0();
  sub_253C7BD90();
  uint64_t v47 = v130;
  sub_253C10134();
  v48();
  sub_253DF3BB0();
  sub_253C0FF48();
  v49();
  swift_storeEnumTagMultiPayload();
  _s13ActionCreatedCMa(0);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32
            + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
  sub_253C7BC18(v129, v32 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v142 = v33;
  sub_253D87ADC();
  sub_253C7BE60();
  if (!v50)
  {
    sub_253C7BE54();
    sub_253BDEDD8(&qword_269D7C8C8);
    if (sub_253C7BE34())
    {
      sub_253D87ADC();
      sub_253C7BD80();
      if (!v53) {
        goto LABEL_80;
      }
      uint64_t v47 = v51;
    }
    uint64_t v33 = v142;
    if (v131)
    {
      uint64_t v52 = *(void *)(v142 + 56);
      swift_release();
      *(void *)(v52 + 8 * v47) = v32;
    }
    else
    {
      sub_253C7BD2C();
      sub_253C0FF48();
      v69();
      sub_253C7BEB0();
      if (v50) {
        goto LABEL_74;
      }
      *(void *)(v142 + 16) = v70;
    }
    swift_bridgeObjectRelease();
    sub_253C633D4();
    sub_253BEFBCC();
    v71();
    sub_253C7BDB0();
    goto LABEL_49;
  }
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __break(1u);
LABEL_80:
  uint64_t result = sub_253DF5CF0();
  __break(1u);
  return result;
}

uint64_t sub_253C757E4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v81 = sub_253DF26C0();
  uint64_t v8 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  v71 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_253DF46F0();
  *(void *)&long long v83 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  v79 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253BDEDD8(&qword_26B255E98);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v78 = (uint64_t)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)v67 - v14;
  uint64_t v85 = sub_253DEFFE0();
  uint64_t v16 = *(void *)(v85 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v85);
  v84 = (char *)v67 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v67 - v19;
  uint64_t v77 = a4;
  uint64_t v87 = a4;
  uint64_t v21 = (void *)MEMORY[0x263F8EE80];
  v67[2] = sub_253C743A4(MEMORY[0x263F8EE80], a1, (uint64_t (*)(char *, uint64_t *))sub_253C7BC10, (uint64_t)v86);
  v67[1] = 0;
  uint64_t v22 = *(void *)(a3 + 16);
  uint64_t v82 = v16;
  uint64_t v68 = a2;
  if (v22)
  {
    uint64_t v23 = *(void *)(sub_253DF3080() - 8);
    uint64_t v24 = a3 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
    uint64_t v74 = *(void *)(v23 + 72);
    v76 = (void (**)(char *, uint64_t))(v83 + 8);
    uint64_t v70 = v8 + 32;
    uint64_t v69 = v16 + 16;
    uint64_t v73 = (void (**)(char *, uint64_t))(v16 + 8);
    v67[0] = a3;
    swift_bridgeObjectRetain();
    long long v83 = xmmword_253DF6EC0;
    uint64_t v25 = v81;
    uint64_t v26 = v8;
    uint64_t v75 = v8;
    while (1)
    {
      uint64_t v27 = v79;
      sub_253DF3070();
      sub_253DF46E0();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v15, 0, 1, v25);
      (*v76)(v27, v80);
      uint64_t v28 = v78;
      sub_253C56520((uint64_t)v15, v78, &qword_26B255E98);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v28, 1, v25) == 1)
      {
        uint64_t v29 = 0;
      }
      else
      {
        uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 32);
        uint64_t v31 = v71;
        char v72 = v21;
        v30(v71, v28, v25);
        sub_253BDEDD8(&qword_269D7BDB0);
        unint64_t v32 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = v83;
        v30((char *)(v29 + v32), (uint64_t)v31, v25);
        uint64_t v21 = v72;
      }
      sub_253BEFAC0((uint64_t)v15, &qword_26B255E98);
      sub_253DF3060();
      sub_253BDEDD8(&qword_269D7C910);
      uint64_t v33 = (int *)(sub_253BDEDD8(&qword_269D7C8D8) - 8);
      unint64_t v34 = (*(unsigned __int8 *)(*(void *)v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v33 + 80);
      uint64_t v35 = swift_allocObject();
      *(_OWORD *)(v35 + 16) = v83;
      unint64_t v36 = v35 + v34;
      uint64_t v37 = v33[14];
      type metadata accessor for FeedbackLearning.CandidateParameter(0);
      swift_storeEnumTagMultiPayload();
      *(void *)(v36 + v37) = v29;
      sub_253BDEDD8(&qword_269D7C798);
      sub_253C7BBC8(&qword_269D7C918, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
      uint64_t v38 = sub_253DF5180();
      swift_isUniquelyReferenced_nonNull_native();
      v88 = v21;
      sub_253D87ADC();
      if (__OFADD__(v21[2], (v40 & 1) == 0)) {
        break;
      }
      unint64_t v41 = v39;
      char v42 = v40;
      sub_253BDEDD8(&qword_269D7C8D0);
      if (sub_253DF5A70())
      {
        sub_253D87ADC();
        if ((v42 & 1) != (v44 & 1)) {
          goto LABEL_33;
        }
        unint64_t v41 = v43;
      }
      uint64_t v21 = v88;
      if (v42)
      {
        uint64_t v45 = v88[7];
        swift_bridgeObjectRelease();
        *(void *)(v45 + 8 * v41) = v38;
      }
      else
      {
        v88[(v41 >> 6) + 8] |= 1 << v41;
        (*(void (**)(unint64_t, char *, uint64_t))(v82 + 16))(v21[6] + *(void *)(v82 + 72) * v41, v20, v85);
        *(void *)(v21[7] + 8 * v41) = v38;
        uint64_t v46 = v21[2];
        BOOL v47 = __OFADD__(v46, 1);
        uint64_t v48 = v46 + 1;
        if (v47) {
          goto LABEL_31;
        }
        v21[2] = v48;
      }
      swift_bridgeObjectRelease();
      (*v73)(v20, v85);
      uint64_t v26 = v75;
      v24 += v74;
      --v22;
      uint64_t v25 = v81;
      if (!v22)
      {
        swift_bridgeObjectRelease();
        a2 = v68;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    uint64_t v49 = *(void *)(a2 + 16);
    uint64_t v50 = v82;
    uint64_t v51 = (uint64_t)v84;
    if (!v49)
    {
LABEL_28:
      sub_253C76524();
      return sub_253C76524();
    }
    uint64_t v52 = *(void *)(sub_253DF3770() - 8);
    uint64_t v53 = a2 + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80));
    *(void *)&long long v83 = *(void *)(v52 + 72);
    uint64_t v81 = v50 + 16;
    uint64_t v54 = (void (**)(uint64_t, uint64_t))(v50 + 8);
    swift_bridgeObjectRetain();
    uint64_t v55 = (void *)MEMORY[0x263F8EE80];
    while (1)
    {
      uint64_t v56 = sub_253C781A0(v51, v53, v77);
      swift_isUniquelyReferenced_nonNull_native();
      v88 = v55;
      sub_253D87ADC();
      if (__OFADD__(v55[2], (v58 & 1) == 0)) {
        break;
      }
      unint64_t v59 = v57;
      char v60 = v58;
      sub_253BDEDD8(&qword_269D7C8D0);
      if (sub_253DF5A70())
      {
        sub_253D87ADC();
        if ((v60 & 1) != (v62 & 1)) {
          goto LABEL_33;
        }
        unint64_t v59 = v61;
      }
      uint64_t v55 = v88;
      if (v60)
      {
        uint64_t v63 = v88[7];
        swift_bridgeObjectRelease();
        *(void *)(v63 + 8 * v59) = v56;
        uint64_t v51 = (uint64_t)v84;
      }
      else
      {
        v88[(v59 >> 6) + 8] |= 1 << v59;
        uint64_t v51 = (uint64_t)v84;
        (*(void (**)(unint64_t, char *, uint64_t))(v82 + 16))(v55[6] + *(void *)(v82 + 72) * v59, v84, v85);
        *(void *)(v55[7] + 8 * v59) = v56;
        uint64_t v64 = v55[2];
        BOOL v47 = __OFADD__(v64, 1);
        uint64_t v65 = v64 + 1;
        if (v47) {
          goto LABEL_32;
        }
        v55[2] = v65;
      }
      swift_bridgeObjectRelease();
      (*v54)(v51, v85);
      v53 += v83;
      if (!--v49)
      {
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  uint64_t result = sub_253DF5CF0();
  __break(1u);
  return result;
}

uint64_t sub_253C760E8(unint64_t a1, void *a2)
{
  uint64_t v4 = sub_253DEFFE0();
  uint64_t v35 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v31 - v8;
  if (a1 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_253DF5AD0();
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v32 = v7;
  uint64_t v33 = a2;
  if (v10)
  {
    unint64_t v39 = a1 & 0xC000000000000001;
    uint64_t v34 = v35 + 16;
    unint64_t v36 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v11 = (void *)MEMORY[0x263F8EE80];
    uint64_t v12 = 4;
    uint64_t v37 = v10;
    unint64_t v38 = a1;
    while (1)
    {
      a2 = (void *)(v12 - 4);
      if (v39) {
        MEMORY[0x25A26FC80](v12 - 4, a1);
      }
      else {
        swift_retain();
      }
      if (__OFADD__(a2, 1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      uint64_t v40 = v12 - 3;
      uint64_t v13 = v4;
      sub_253CFA9B8();
      uint64_t v4 = sub_253C770C0();
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v41 = v11;
      uint64_t v7 = v9;
      a2 = v11;
      sub_253D87ADC();
      if (__OFADD__(v11[2], (v15 & 1) == 0)) {
        goto LABEL_26;
      }
      a1 = v14;
      char v16 = v15;
      sub_253BDEDD8(&qword_269D7C8D0);
      a2 = &v41;
      if (sub_253DF5A70())
      {
        a2 = v41;
        sub_253D87ADC();
        if ((v16 & 1) != (v18 & 1))
        {
          uint64_t result = sub_253DF5CF0();
          __break(1u);
          return result;
        }
        a1 = v17;
      }
      uint64_t v11 = v41;
      if (v16)
      {
        uint64_t v19 = v41[7];
        swift_bridgeObjectRelease();
        *(void *)(v19 + 8 * a1) = v4;
        uint64_t v9 = v7;
      }
      else
      {
        v41[(a1 >> 6) + 8] |= 1 << a1;
        uint64_t v9 = v7;
        (*(void (**)(unint64_t, char *, uint64_t))(v35 + 16))(v11[6] + *(void *)(v35 + 72) * a1, v7, v13);
        *(void *)(v11[7] + 8 * a1) = v4;
        uint64_t v20 = v11[2];
        BOOL v21 = __OFADD__(v20, 1);
        uint64_t v22 = v20 + 1;
        if (v21) {
          goto LABEL_27;
        }
        v11[2] = v22;
      }
      swift_bridgeObjectRelease();
      uint64_t v4 = v13;
      (*v36)(v9, v13);
      swift_release();
      ++v12;
      a1 = v38;
      if (v40 == v37)
      {
        swift_bridgeObjectRelease();
        a2 = v33;
        goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v23 = a2[2];
  if (v23)
  {
    uint64_t v24 = *(void *)(sub_253DF3770() - 8);
    uint64_t v25 = (uint64_t)a2 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    uint64_t v26 = *(void *)(v24 + 72);
    uint64_t v27 = (void (**)(char *, uint64_t))(v35 + 8);
    swift_bridgeObjectRetain();
    uint64_t v28 = (void *)MEMORY[0x263F8EE80];
    uint64_t v29 = v32;
    do
    {
      sub_253DF3730();
      sub_253C77430(v25);
      swift_isUniquelyReferenced_nonNull_native();
      unint64_t v41 = v28;
      sub_253DB34E8();
      uint64_t v28 = v41;
      swift_bridgeObjectRelease();
      (*v27)(v29, v4);
      v25 += v26;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  return sub_253C76524();
}

uint64_t sub_253C76524()
{
  sub_253C7BDE0();
  uint64_t v2 = sub_253C7BEC4();
  sub_253C79504(v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  if (v1) {
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_253C76594()
{
  sub_253C7BDE0();
  uint64_t v2 = sub_253C7BEC4();
  sub_253C797D4(v2, v3, v4, v5, v6);
  swift_bridgeObjectRelease();
  if (v1) {
    swift_bridgeObjectRelease();
  }
  return v0;
}

uint64_t sub_253C76604(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v105 = a3;
  long long v83 = a1;
  uint64_t v82 = sub_253DF4BA0();
  uint64_t v3 = *(void *)(v82 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v82);
  uint64_t v78 = (char *)v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v81 = (char *)v71 - v6;
  uint64_t v91 = sub_253DF3440();
  uint64_t v7 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v90 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253DF2AB0();
  uint64_t v102 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v104 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v108 = (char *)v71 - v12;
  uint64_t v13 = sub_253BDEDD8(&qword_26B255348);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  char v16 = (char *)v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v103 = (uint64_t)v71 - v17;
  uint64_t v106 = sub_253DEFFE0();
  uint64_t v18 = *(void *)(v106 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v106);
  v84 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v92 = (char *)v71 - v21;
  uint64_t v107 = sub_253DF32F0();
  uint64_t v22 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v109 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_253DF4000();
  uint64_t v25 = *(void *)(v24 + 16);
  if (!v25) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
  uint64_t v26 = v22 + 16;
  unint64_t v101 = v27;
  unint64_t v28 = (*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64);
  v71[1] = v24;
  unint64_t v29 = v24 + v28;
  uint64_t v100 = (void (**)(char *, char *, uint64_t))(v102 + 16);
  v98 = (void (**)(char *, uint64_t))(v102 + 8);
  uint64_t v99 = (uint64_t (**)(char *, uint64_t))(v102 + 88);
  int v97 = *MEMORY[0x263F4D528];
  uint64_t v89 = (void (**)(char *, uint64_t))(v102 + 96);
  v88 = (uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v87 = (void (**)(char *, uint64_t))(v7 + 8);
  v86 = (void (**)(void))(v18 + 32);
  uint64_t v77 = v3 + 16;
  uint64_t v76 = v3 + 32;
  v79 = (void (**)(unint64_t, char *, uint64_t))(v18 + 16);
  uint64_t v72 = v18;
  uint64_t v85 = (void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v73 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v102 = v26;
  uint64_t v94 = *(void *)(v26 + 56);
  uint64_t v95 = (void (**)(char *, uint64_t))(v26 - 8);
  long long v75 = xmmword_253DF6EC0;
  uint64_t v74 = v3;
  v96 = v16;
  uint64_t v93 = v9;
  while (1)
  {
    v101(v109, v29, v107);
    uint64_t v30 = v108;
    sub_253DF32D0();
    uint64_t v31 = v104;
    (*v100)(v104, v30, v9);
    int v32 = (*v99)(v31, v9);
    uint64_t v33 = v3;
    if (v32 == v97)
    {
      (*v89)(v31, v9);
      uint64_t v34 = v31;
      uint64_t v35 = v90;
      uint64_t v36 = v91;
      uint64_t v37 = (*v88)(v90, v34, v91);
      uint64_t v38 = (uint64_t)v96;
      MEMORY[0x25A26D780](v37);
      (*v87)(v35, v36);
      uint64_t v39 = v106;
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v38, 0, 1, v106);
      uint64_t v40 = v98;
    }
    else
    {
      uint64_t v38 = (uint64_t)v96;
      uint64_t v39 = v106;
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v96, 1, 1, v106);
      uint64_t v40 = v98;
      (*v98)(v31, v9);
    }
    uint64_t v41 = v103;
    sub_253C61B78(v38, v103, &qword_26B255348);
    (*v40)(v108, v9);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v41, 1, v39) == 1)
    {
      (*v95)(v109, v107);
      sub_253BEFAC0(v41, &qword_26B255348);
LABEL_17:
      uint64_t v3 = v33;
      goto LABEL_18;
    }
    char v42 = v92;
    (*v86)();
    if (!*(void *)(v105 + 16) || (sub_253D87ADC(), (v44 & 1) == 0))
    {
      (*v85)(v42, v106);
      (*v95)(v109, v107);
      goto LABEL_17;
    }
    uint64_t v45 = v78;
    uint64_t v46 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v78, *(void *)(v105 + 56) + *(void *)(v33 + 72) * v43, v82);
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v81, v45, v46);
    sub_253DF32E0();
    sub_253BDEDD8(&qword_269D7C910);
    BOOL v47 = (int *)(sub_253BDEDD8(&qword_269D7C8D8) - 8);
    unint64_t v48 = (*(unsigned __int8 *)(*(void *)v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v47 + 80);
    uint64_t v49 = swift_allocObject();
    *(_OWORD *)(v49 + 16) = v75;
    unint64_t v50 = v49 + v48;
    uint64_t v51 = v42;
    uint64_t v52 = v47[14];
    uint64_t v53 = *v79;
    (*v79)(v50, v51, v106);
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    swift_storeEnumTagMultiPayload();
    sub_253C5F88C();
    *(void *)(v50 + v52) = v54;
    sub_253BDEDD8(&qword_269D7C798);
    sub_253C7BBC8(&qword_269D7C918, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
    uint64_t v80 = sub_253DF5180();
    uint64_t v55 = v83;
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v110 = (void *)*v55;
    uint64_t v56 = v110;
    *uint64_t v55 = 0x8000000000000000;
    sub_253D87ADC();
    if (__OFADD__(v56[2], (v58 & 1) == 0)) {
      break;
    }
    unint64_t v59 = v57;
    char v60 = v58;
    sub_253BDEDD8(&qword_269D7C8D0);
    if (sub_253DF5A70())
    {
      sub_253D87ADC();
      if ((v60 & 1) != (v62 & 1)) {
        goto LABEL_27;
      }
      unint64_t v59 = v61;
    }
    uint64_t v63 = v110;
    if (v60)
    {
      uint64_t v64 = v110[7];
      swift_bridgeObjectRelease();
      *(void *)(v64 + 8 * v59) = v80;
      uint64_t v65 = v106;
    }
    else
    {
      v110[(v59 >> 6) + 8] |= 1 << v59;
      uint64_t v65 = v106;
      v53(v63[6] + *(void *)(v72 + 72) * v59, v84, v106);
      *(void *)(v63[7] + 8 * v59) = v80;
      uint64_t v66 = v63[2];
      BOOL v67 = __OFADD__(v66, 1);
      uint64_t v68 = v66 + 1;
      if (v67) {
        goto LABEL_26;
      }
      v63[2] = v68;
    }
    *long long v83 = v63;
    swift_bridgeObjectRelease();
    uint64_t v69 = *v85;
    (*v85)(v84, v65);
    (*v73)(v81, v82);
    v69(v92, v65);
    (*v95)(v109, v107);
    uint64_t v3 = v74;
LABEL_18:
    uint64_t v9 = v93;
    v29 += v94;
    if (!--v25) {
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_253DF5CF0();
  __break(1u);
  return result;
}

uint64_t sub_253C770C0()
{
  uint64_t v31 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  uint64_t v28 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v1 = (void *)((char *)v27 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v2 = sub_253C5DB18();
  sub_253DB2EC8(v33, v2);
  uint64_t v3 = v33[0];
  int64_t v4 = v33[3];
  unint64_t v5 = v33[4];
  uint64_t v29 = v33[1];
  int64_t v30 = (unint64_t)(v33[2] + 64) >> 6;
  v27[1] = v2;
  swift_bridgeObjectRetain();
  uint64_t v6 = (void *)MEMORY[0x263F8EE80];
  if (!v5) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v7 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v8 = v7 | (v4 << 6);
  while (1)
  {
    uint64_t v13 = (void *)(*(void *)(v3 + 48) + 16 * v8);
    uint64_t v14 = v13[1];
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v8);
    *uint64_t v1 = *v13;
    v1[1] = v14;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    int v32 = v6;
    uint64_t v16 = sub_253D87A00((uint64_t)v1);
    if (__OFADD__(v6[2], (v17 & 1) == 0)) {
      break;
    }
    unint64_t v18 = v16;
    char v19 = v17;
    sub_253BDEDD8(&qword_269D7C8E0);
    if (sub_253DF5A70())
    {
      uint64_t v20 = sub_253D87A00((uint64_t)v1);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_35;
      }
      unint64_t v18 = v20;
    }
    uint64_t v6 = v32;
    if (v19)
    {
      uint64_t v22 = v32[7];
      swift_bridgeObjectRelease();
      *(void *)(v22 + 8 * v18) = v15;
    }
    else
    {
      v32[(v18 >> 6) + 8] |= 1 << v18;
      sub_253C7BB5C((uint64_t)v1, v6[6] + *(void *)(v28 + 72) * v18);
      *(void *)(v6[7] + 8 * v18) = v15;
      uint64_t v23 = v6[2];
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        goto LABEL_33;
      }
      v6[2] = v25;
    }
    swift_bridgeObjectRelease();
    sub_253C7BC74((uint64_t)v1, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    if (v5) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v9 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_34;
    }
    if (v9 >= v30) {
      goto LABEL_31;
    }
    unint64_t v10 = *(void *)(v29 + 8 * v9);
    int64_t v11 = v4 + 1;
    if (!v10)
    {
      int64_t v11 = v4 + 2;
      if (v4 + 2 >= v30) {
        goto LABEL_31;
      }
      unint64_t v10 = *(void *)(v29 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v4 + 3;
        if (v4 + 3 >= v30) {
          goto LABEL_31;
        }
        unint64_t v10 = *(void *)(v29 + 8 * v11);
        if (!v10)
        {
          int64_t v11 = v4 + 4;
          if (v4 + 4 >= v30) {
            goto LABEL_31;
          }
          unint64_t v10 = *(void *)(v29 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 5;
            if (v4 + 5 >= v30) {
              goto LABEL_31;
            }
            unint64_t v10 = *(void *)(v29 + 8 * v11);
            if (!v10)
            {
              int64_t v11 = v4 + 6;
              if (v4 + 6 >= v30) {
                goto LABEL_31;
              }
              unint64_t v10 = *(void *)(v29 + 8 * v11);
              if (!v10)
              {
                int64_t v12 = v4 + 7;
                while (v12 < v30)
                {
                  unint64_t v10 = *(void *)(v29 + 8 * v12++);
                  if (v10)
                  {
                    int64_t v11 = v12 - 1;
                    goto LABEL_20;
                  }
                }
LABEL_31:
                swift_release();
                swift_bridgeObjectRelease();
                return (uint64_t)v6;
              }
            }
          }
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
    int64_t v4 = v11;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  uint64_t result = sub_253DF5CF0();
  __break(1u);
  return result;
}

uint64_t sub_253C77430(uint64_t a1)
{
  uint64_t v80 = sub_253BDEDD8(&qword_269D7C8F0);
  uint64_t v75 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  v79 = (uint64_t *)((char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = sub_253BDEDD8(&qword_269D7C8F8);
  uint64_t v3 = MEMORY[0x270FA5388](v99);
  v98 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v78 = (char *)&v71 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v77 = (char *)&v71 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v97 = (uint64_t)&v71 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v76 = (char *)&v71 - v11;
  uint64_t v72 = a1;
  uint64_t v12 = sub_253DF3740();
  sub_253DB2EC8(v102, v12);
  uint64_t v81 = v102[0];
  uint64_t v73 = v102[1];
  int64_t v82 = v102[3];
  unint64_t v13 = v102[4];
  int64_t v74 = (unint64_t)(v102[2] + 64) >> 6;
  uint64_t v71 = v12;
  swift_bridgeObjectRetain();
  uint64_t v14 = MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v96 = v14;
    if (v13)
    {
      uint64_t v87 = (v13 - 1) & v13;
      unint64_t v15 = __clz(__rbit64(v13)) | (v82 << 6);
    }
    else
    {
      int64_t v16 = v82 + 1;
      if (__OFADD__(v82, 1)) {
        goto LABEL_37;
      }
      if (v16 >= v74) {
        goto LABEL_34;
      }
      unint64_t v17 = *(void *)(v73 + 8 * v16);
      int64_t v18 = v82 + 1;
      if (!v17)
      {
        int64_t v18 = v82 + 2;
        if (v82 + 2 >= v74) {
          goto LABEL_34;
        }
        unint64_t v17 = *(void *)(v73 + 8 * v18);
        if (!v17)
        {
          int64_t v18 = v82 + 3;
          if (v82 + 3 >= v74) {
            goto LABEL_34;
          }
          unint64_t v17 = *(void *)(v73 + 8 * v18);
          if (!v17)
          {
            int64_t v18 = v82 + 4;
            if (v82 + 4 >= v74) {
              goto LABEL_34;
            }
            unint64_t v17 = *(void *)(v73 + 8 * v18);
            if (!v17)
            {
              int64_t v18 = v82 + 5;
              if (v82 + 5 >= v74) {
                goto LABEL_34;
              }
              unint64_t v17 = *(void *)(v73 + 8 * v18);
              if (!v17)
              {
                int64_t v18 = v82 + 6;
                if (v82 + 6 >= v74) {
                  goto LABEL_34;
                }
                unint64_t v17 = *(void *)(v73 + 8 * v18);
                if (!v17)
                {
                  int64_t v19 = v82 + 7;
                  while (v19 < v74)
                  {
                    unint64_t v17 = *(void *)(v73 + 8 * v19++);
                    if (v17)
                    {
                      int64_t v18 = v19 - 1;
                      goto LABEL_21;
                    }
                  }
LABEL_34:
                  swift_release();
                  uint64_t v68 = swift_bridgeObjectRelease();
                  MEMORY[0x270FA5388](v68);
                  *(&v71 - 2) = v72;
                  uint64_t v69 = sub_253C73FF4(v14, (void (*)(uint64_t, uint64_t, uint64_t))sub_253C7BBC0);
                  swift_bridgeObjectRelease();
                  return sub_253C792F4(v69);
                }
              }
            }
          }
        }
      }
LABEL_21:
      uint64_t v87 = (v17 - 1) & v17;
      unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
      int64_t v82 = v18;
    }
    uint64_t v20 = v81;
    uint64_t v21 = *(void *)(v81 + 48);
    uint64_t v22 = sub_253DF2D40();
    uint64_t v100 = *(void **)(v22 - 8);
    uint64_t v23 = (void (*)(void))v100[2];
    BOOL v24 = v76;
    ((void (*)(char *, unint64_t, uint64_t))v23)(v76, v21 + v100[9] * v15, v22);
    uint64_t v25 = *(void *)(v20 + 56);
    uint64_t v26 = sub_253DF4360();
    uint64_t v95 = *(void *)(v26 - 8);
    uint64_t v27 = v25 + *(void *)(v95 + 72) * v15;
    uint64_t v28 = v99;
    uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 16);
    v29(&v24[*(int *)(v99 + 48)], v27, v26);
    v92 = v29;
    uint64_t v30 = (uint64_t)v24;
    uint64_t v31 = v97;
    sub_253C61B78(v30, v97, &qword_269D7C8F8);
    uint64_t v32 = *(int *)(v28 + 48);
    uint64_t v33 = v77;
    uint64_t v34 = &v77[v32];
    uint64_t v35 = v31 + v32;
    uint64_t v90 = v23;
    uint64_t v91 = v31 + v32;
    ((void (*)(char *, uint64_t, uint64_t))v23)(v77, v31, v22);
    v86 = v34;
    v29(v34, v35, v26);
    uint64_t v93 = sub_253DF2D30();
    uint64_t v94 = v36;
    uint64_t v38 = v100 + 1;
    uint64_t v37 = (void (*)(char *, uint64_t))v100[1];
    v37(v33, v22);
    uint64_t v39 = v78;
    uint64_t v40 = &v78[*(int *)(v99 + 48)];
    ((void (*)(char *, uint64_t, uint64_t))v23)(v78, v31, v22);
    v84 = v40;
    uint64_t v41 = v40;
    uint64_t v43 = v91;
    char v42 = v92;
    v92(v41, v91, v26);
    uint64_t v89 = sub_253DF2D00();
    int v88 = v44;
    uint64_t v100 = v38;
    uint64_t v85 = v37;
    v37(v39, v22);
    uint64_t v45 = &v98[*(int *)(v99 + 48)];
    uint64_t v46 = v93;
    uint64_t v83 = v22;
    v90();
    v42(v45, v43, v26);
    uint64_t v47 = v95;
    uint64_t v48 = (uint64_t)v79;
    uint64_t v49 = (char *)v79 + *(int *)(v80 + 48);
    uint64_t *v79 = v89;
    *(unsigned char *)(v48 + 8) = v88 & 1;
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v49, v45, v26);
    unint64_t v50 = (void *)v96;
    swift_isUniquelyReferenced_nonNull_native();
    unint64_t v101 = v50;
    uint64_t v51 = v94;
    unint64_t v52 = sub_253D87918(v46, v94);
    if (__OFADD__(v50[2], (v53 & 1) == 0)) {
      break;
    }
    unint64_t v54 = v52;
    char v55 = v53;
    sub_253BDEDD8(&qword_269D7C900);
    if (sub_253DF5A70())
    {
      unint64_t v56 = sub_253D87918(v46, v51);
      if ((v55 & 1) != (v57 & 1)) {
        goto LABEL_38;
      }
      unint64_t v54 = v56;
    }
    char v58 = v101;
    swift_bridgeObjectRelease();
    if ((v55 & 1) == 0)
    {
      v58[(v54 >> 6) + 8] |= 1 << v54;
      unint64_t v59 = (uint64_t *)(v58[6] + 16 * v54);
      *unint64_t v59 = v46;
      v59[1] = v51;
      *(void *)(v58[7] + 8 * v54) = MEMORY[0x263F8EE78];
      uint64_t v60 = v58[2];
      BOOL v61 = __OFADD__(v60, 1);
      uint64_t v62 = v60 + 1;
      if (v61) {
        goto LABEL_36;
      }
      v58[2] = v62;
      swift_bridgeObjectRetain();
    }
    uint64_t v14 = (uint64_t)v58;
    uint64_t v63 = v58[7];
    uint64_t v64 = *(void *)(v63 + 8 * v54);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v63 + 8 * v54) = v64;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v64 = sub_253DC4550();
      *(void *)(v63 + 8 * v54) = v64;
    }
    unint64_t v66 = *(void *)(v64 + 16);
    if (v66 >= *(void *)(v64 + 24) >> 1)
    {
      uint64_t v64 = sub_253DC4550();
      *(void *)(v63 + 8 * v54) = v64;
    }
    *(void *)(v64 + 16) = v66 + 1;
    sub_253C61B78(v48, v64+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v66, &qword_269D7C8F0);
    swift_bridgeObjectRelease();
    v85(v98, v83);
    BOOL v67 = *(void (**)(char *, uint64_t))(v47 + 8);
    v67(v84, v26);
    v67(v86, v26);
    sub_253BEFAC0(v97, &qword_269D7C8F8);
    unint64_t v13 = v87;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_253DF5CF0();
  __break(1u);
  return result;
}

uint64_t sub_253C77D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v34 = a1;
  uint64_t v3 = sub_253DF26C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s19ToolboxSearchResultVMa(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253BDEDD8(&qword_269D7C7B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = sub_253BDEDD8(&qword_26B255E98);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  int64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v31 - v19;
  sub_253CFA81C();
  sub_253C5DC98();
  swift_bridgeObjectRelease();
  sub_253C56520((uint64_t)v14, (uint64_t)v12, &qword_269D7C7B0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v6) == 1)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v20, 1, 1, v3);
  }
  else
  {
    sub_253C7BC18((uint64_t)v12, (uint64_t)v8, (void (*)(void))_s19ToolboxSearchResultVMa);
    sub_253C5DF48();
    sub_253C7BC74((uint64_t)v8, (void (*)(void))_s19ToolboxSearchResultVMa);
  }
  sub_253BEFAC0((uint64_t)v14, &qword_269D7C7B0);
  sub_253C56520((uint64_t)v20, (uint64_t)v18, &qword_26B255E98);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v3) == 1)
  {
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    uint64_t v23 = v32;
    v22(v32, v18, v3);
    sub_253BDEDD8(&qword_269D7BDB0);
    unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_253DF6EC0;
    v22((char *)(v21 + v24), v23, v3);
  }
  sub_253BEFAC0((uint64_t)v20, &qword_26B255E98);
  sub_253CFA9B8();
  sub_253BDEDD8(&qword_269D7C910);
  uint64_t v25 = (int *)(sub_253BDEDD8(&qword_269D7C8D8) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(*(void *)v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v25 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_253DF6EC0;
  unint64_t v28 = v27 + v26;
  uint64_t v29 = v25[14];
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  swift_storeEnumTagMultiPayload();
  *(void *)(v28 + v29) = v21;
  sub_253BDEDD8(&qword_269D7C798);
  sub_253C7BBC8(&qword_269D7C918, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
  return sub_253DF5180();
}

uint64_t sub_253C781A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a3;
  uint64_t v34 = a1;
  uint64_t v3 = sub_253DF26C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s19ToolboxSearchResultVMa(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253BDEDD8(&qword_269D7C7B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v31 - v13;
  uint64_t v15 = sub_253BDEDD8(&qword_26B255E98);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  int64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v31 - v19;
  sub_253DF3760();
  sub_253C5DC98();
  swift_bridgeObjectRelease();
  sub_253C56520((uint64_t)v14, (uint64_t)v12, &qword_269D7C7B0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v6) == 1)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v20, 1, 1, v3);
  }
  else
  {
    sub_253C7BC18((uint64_t)v12, (uint64_t)v8, (void (*)(void))_s19ToolboxSearchResultVMa);
    sub_253C5DF48();
    sub_253C7BC74((uint64_t)v8, (void (*)(void))_s19ToolboxSearchResultVMa);
  }
  sub_253BEFAC0((uint64_t)v14, &qword_269D7C7B0);
  sub_253C56520((uint64_t)v20, (uint64_t)v18, &qword_26B255E98);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v3) == 1)
  {
    uint64_t v21 = 0;
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    uint64_t v23 = v32;
    v22(v32, v18, v3);
    sub_253BDEDD8(&qword_269D7BDB0);
    unint64_t v24 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_253DF6EC0;
    v22((char *)(v21 + v24), v23, v3);
  }
  sub_253BEFAC0((uint64_t)v20, &qword_26B255E98);
  sub_253DF3730();
  sub_253BDEDD8(&qword_269D7C910);
  uint64_t v25 = (int *)(sub_253BDEDD8(&qword_269D7C8D8) - 8);
  unint64_t v26 = (*(unsigned __int8 *)(*(void *)v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v25 + 80);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_253DF6EC0;
  unint64_t v28 = v27 + v26;
  uint64_t v29 = v25[14];
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  swift_storeEnumTagMultiPayload();
  *(void *)(v28 + v29) = v21;
  sub_253BDEDD8(&qword_269D7C798);
  sub_253C7BBC8(&qword_269D7C918, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
  return sub_253DF5180();
}

uint64_t sub_253C7860C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(char *, uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  char v42 = a3;
  uint64_t v39 = a4;
  uint64_t v6 = sub_253DF4360();
  uint64_t v44 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_253DF4BA0();
  uint64_t v9 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253DEFFE0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF3730();
  uint64_t v16 = a1;
  uint64_t v17 = a1;
  unint64_t v18 = a2;
  uint64_t v19 = sub_253C78A38(v17, a2, (uint64_t)v15, (uint64_t)v42);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (!v19)
  {
    uint64_t v28 = sub_253BDEDD8(&qword_269D7C8D8);
    uint64_t v29 = v16;
    uint64_t v30 = *(int *)(v28 + 48);
    uint64_t v31 = (uint64_t)v39;
    *uint64_t v39 = v29;
    *(void *)(v31 + 8) = v18;
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    swift_storeEnumTagMultiPayload();
LABEL_14:
    *(void *)(v31 + v30) = 0;
    goto LABEL_15;
  }
  uint64_t v38 = v16;
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    unint64_t v37 = v18;
    uint64_t v45 = MEMORY[0x263F8EE78];
    sub_253DC6968(0, v20, 0);
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
    uint64_t v22 = *(unsigned __int8 *)(v44 + 80);
    uint64_t v36 = v19;
    uint64_t v23 = v19 + ((v22 + 32) & ~v22);
    uint64_t v41 = *(void *)(v44 + 72);
    char v42 = v21;
    v44 += 16;
    unint64_t v24 = (void (**)(char *, uint64_t))(v44 - 8);
    uint64_t v40 = v9 + 32;
    do
    {
      v42(v8, v23, v6);
      sub_253DF4330();
      (*v24)(v8, v6);
      uint64_t v25 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253DC6968(0, *(void *)(v25 + 16) + 1, 1);
        uint64_t v25 = v45;
      }
      unint64_t v27 = *(void *)(v25 + 16);
      unint64_t v26 = *(void *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_253DC6968(v26 > 1, v27 + 1, 1);
        uint64_t v25 = v45;
      }
      *(void *)(v25 + 16) = v27 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v25+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v27, v11, v43);
      uint64_t v45 = v25;
      v23 += v41;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    unint64_t v18 = v37;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_253C60460();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(int *)(sub_253BDEDD8(&qword_269D7C8D8) + 48);
  uint64_t v31 = (uint64_t)v39;
  *uint64_t v39 = v38;
  *(void *)(v31 + 8) = v18;
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  swift_storeEnumTagMultiPayload();
  if (!v33) {
    goto LABEL_14;
  }
  *(void *)(v31 + v30) = v33;
LABEL_15:
  uint64_t v34 = sub_253BDEDD8(&qword_269D7C8D8);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v31, 0, 1, v34);
  return swift_bridgeObjectRetain();
}

uint64_t sub_253C78A38(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v73 = a3;
  unint64_t v74 = a2;
  uint64_t v71 = a1;
  uint64_t v5 = sub_253DEFFE0();
  uint64_t v78 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v75 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253DF24A0();
  uint64_t v76 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253DF4360();
  uint64_t v83 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  v79 = (char *)&v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v80 = (char *)&v67 - v13;
  uint64_t v82 = sub_253BDEDD8(&qword_269D7C8F0);
  uint64_t v14 = MEMORY[0x270FA5388](v82);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v81 = (char *)&v67 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v67 - v20;
  MEMORY[0x270FA5388](v19);
  unint64_t v24 = (char *)&v67 - v23;
  uint64_t v25 = *(void *)(a4 + 16);
  uint64_t v26 = MEMORY[0x263F8EE78];
  if (v25)
  {
    uint64_t v69 = v5;
    uint64_t v70 = v9;
    uint64_t v72 = v10;
    unint64_t v67 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v68 = v7;
    uint64_t v27 = a4 + v67;
    uint64_t v84 = *(void *)(v22 + 72);
    uint64_t v77 = a4;
    swift_bridgeObjectRetain();
    uint64_t v28 = v27;
    uint64_t v29 = v25;
    while (1)
    {
      sub_253C56520(v28, (uint64_t)v24, &qword_269D7C8F0);
      int v30 = v24[8];
      sub_253BEFAC0((uint64_t)v24, &qword_269D7C8F0);
      if (v30 != 1) {
        break;
      }
      v28 += v84;
      if (!--v29)
      {
        swift_bridgeObjectRelease();
        v86[0] = v26;
        sub_253DC6A30(0, v25, 0);
        uint64_t v31 = (void (**)(char *, char *, uint64_t))(v83 + 16);
        uint64_t v32 = (void (**)(char *, char *, uint64_t))(v83 + 32);
        uint64_t v33 = v72;
        uint64_t v34 = v80;
        do
        {
          sub_253C56520(v27, (uint64_t)v21, &qword_269D7C8F0);
          uint64_t v35 = *(int *)(v82 + 48);
          uint64_t v36 = &v81[v35];
          (*v31)(&v81[v35], &v21[v35], v33);
          unint64_t v37 = *v32;
          (*v32)(v34, v36, v33);
          sub_253BEFAC0((uint64_t)v21, &qword_269D7C8F0);
          uint64_t v26 = v86[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253DC6A30(0, *(void *)(v26 + 16) + 1, 1);
            uint64_t v26 = v86[0];
          }
          unint64_t v39 = *(void *)(v26 + 16);
          unint64_t v38 = *(void *)(v26 + 24);
          if (v39 >= v38 >> 1)
          {
            sub_253DC6A30(v38 > 1, v39 + 1, 1);
            uint64_t v26 = v86[0];
          }
          *(void *)(v26 + 16) = v39 + 1;
          unint64_t v40 = v26
              + ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))
              + *(void *)(v83 + 72) * v39;
          uint64_t v34 = v80;
          v37((char *)v40, v80, v33);
          v86[0] = v26;
          v27 += v84;
          --v25;
        }
        while (v25);
        return v26;
      }
    }
    uint64_t v41 = v77;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v42 = v70;
    uint64_t v43 = v78;
    do
    {
      sub_253C56520(v27, (uint64_t)v16, &qword_269D7C8F0);
      char v44 = v16[8];
      sub_253BEFAC0((uint64_t)v16, &qword_269D7C8F0);
      if (v44)
      {
        swift_bridgeObjectRelease();
        sub_253DF1790();
        char v57 = v75;
        uint64_t v58 = v69;
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v75, v73, v69);
        unint64_t v59 = v74;
        swift_bridgeObjectRetain_n();
        uint64_t v60 = sub_253DF2490();
        os_log_type_t v61 = sub_253DF56E0();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = swift_slowAlloc();
          uint64_t v84 = swift_slowAlloc();
          v86[0] = v84;
          *(_DWORD *)uint64_t v62 = 136315394;
          swift_bridgeObjectRetain();
          uint64_t v85 = sub_253D8E5FC(v71, v59, v86);
          sub_253DF5820();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v62 + 12) = 2080;
          sub_253C7BBC8((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
          uint64_t v63 = sub_253DF5C40();
          uint64_t v85 = sub_253D8E5FC(v63, v64, v86);
          sub_253DF5820();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v57, v58);
          _os_log_impl(&dword_253BD8000, v60, v61, "Cannot coalesce parameter paths for %s in resolver request with id %s", (uint8_t *)v62, 0x16u);
          uint64_t v65 = v84;
          swift_arrayDestroy();
          MEMORY[0x25A2709B0](v65, -1, -1);
          MEMORY[0x25A2709B0](v62, -1, -1);
        }
        else
        {
          swift_bridgeObjectRelease_n();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v57, v58);
        }

        (*(void (**)(char *, uint64_t))(v76 + 8))(v42, v68);
        return 0;
      }
      v27 += v84;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    v86[0] = v41;
    swift_bridgeObjectRetain();
    sub_253C7A0E0(v86);
    uint64_t v45 = v86[0];
    uint64_t v46 = *(void *)(v86[0] + 16);
    uint64_t v47 = v72;
    uint64_t v48 = v79;
    if (v46)
    {
      v86[0] = v26;
      sub_253DC6A30(0, v46, 0);
      uint64_t v80 = (char *)v45;
      uint64_t v49 = v45 + v67;
      unint64_t v50 = (void (**)(char *, char *, uint64_t))(v83 + 16);
      uint64_t v51 = (void (**)(char *, char *, uint64_t))(v83 + 32);
      do
      {
        sub_253C56520(v49, (uint64_t)v21, &qword_269D7C8F0);
        uint64_t v52 = *(int *)(v82 + 48);
        char v53 = &v81[v52];
        (*v50)(&v81[v52], &v21[v52], v47);
        unint64_t v54 = *v51;
        (*v51)(v48, v53, v47);
        sub_253BEFAC0((uint64_t)v21, &qword_269D7C8F0);
        uint64_t v26 = v86[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_253DC6A30(0, *(void *)(v26 + 16) + 1, 1);
          uint64_t v26 = v86[0];
        }
        unint64_t v56 = *(void *)(v26 + 16);
        unint64_t v55 = *(void *)(v26 + 24);
        if (v56 >= v55 >> 1)
        {
          sub_253DC6A30(v55 > 1, v56 + 1, 1);
          uint64_t v26 = v86[0];
        }
        *(void *)(v26 + 16) = v56 + 1;
        uint64_t v48 = v79;
        v54((char *)(v26+ ((*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80))+ *(void *)(v83 + 72) * v56), v79, v47);
        v86[0] = v26;
        v49 += v84;
        --v46;
      }
      while (v46);
      swift_release();
    }
    else
    {
      swift_release();
      return MEMORY[0x263F8EE78];
    }
  }
  return v26;
}

uint64_t sub_253C792F4(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_253BDEDD8(&qword_269D7C908);
    uint64_t v3 = sub_253DF5B00();
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE80];
  }
  uint64_t v6 = v3;
  sub_253C79DB8(a1, 1, &v6);
  uint64_t v4 = v6;
  if (v1) {
    swift_release();
  }
  return v4;
}

uint64_t sub_253C79384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);

  return swift_bridgeObjectRetain();
}

uint64_t sub_253C79404(uint64_t a1, uint64_t a2)
{
  sub_253C7BB5C(a2, a1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_253C79448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253C79498(a1, &qword_26B255330, &qword_26B255350, (uint64_t (*)(uint64_t, uint64_t, void))sub_253C79384, a2);
}

uint64_t sub_253C79470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253C79498(a1, &qword_269D7C8E8, &qword_269D7C8D8, (uint64_t (*)(uint64_t, uint64_t, void))sub_253C79404, a2);
}

uint64_t sub_253C79498@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, void)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(int *)(sub_253BDEDD8(a2) + 48);
  uint64_t v10 = *(int *)(sub_253BDEDD8(a3) + 48);
  uint64_t result = a4(a5, a1, *(void *)(a1 + v9));
  *(void *)(a5 + v10) = result;
  return result;
}

uint64_t sub_253C79504(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  v36[8] = sub_253DEFFE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v11);
  sub_253C2F394();
  uint64_t v12 = sub_253BDEDD8(&qword_26B255358);
  MEMORY[0x270FA5388](v12 - 8);
  sub_253C363A4();
  sub_253D74B9C(v36, a1, a2, a3);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_253D74BDC();
  uint64_t v13 = sub_253BDEDD8(&qword_26B255350);
  sub_253C49DB0(v5);
  if (v14)
  {
LABEL_3:
    swift_release();
    swift_bridgeObjectRelease();
    sub_253BDF450();
    return swift_release();
  }
  else
  {
    while (1)
    {
      uint64_t v16 = *(int *)(v13 + 48);
      sub_253C7BE9C();
      v17();
      uint64_t v18 = *(void *)(v5 + v16);
      uint64_t v19 = *a5;
      sub_253D87ADC();
      unint64_t v21 = v20;
      uint64_t v23 = sub_253C7BDC0(v22, *(void *)(v19 + 16));
      if (v25) {
        break;
      }
      char v26 = v24;
      if (*(void *)(v19 + 24) >= v23)
      {
        if ((a4 & 1) == 0)
        {
          sub_253BDEDD8(&qword_269D7C8D0);
          sub_253DF5A80();
        }
      }
      else
      {
        sub_253D72734();
        sub_253D87ADC();
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_19;
        }
        unint64_t v21 = v27;
      }
      uint64_t v29 = *a5;
      if (v26)
      {
        uint64_t v30 = *(void *)(*(void *)(v29 + 56) + 8 * v21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_253BEFBCC();
        v31();
        uint64_t v32 = *(void *)(*a5 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v32 + 8 * v21) = v30;
      }
      else
      {
        sub_253C7BE00(v29 + 8 * (v21 >> 6));
        sub_253C7BE9C();
        v33();
        *(void *)(*(void *)(v29 + 56) + 8 * v21) = v18;
        uint64_t v34 = *(void *)(v29 + 16);
        BOOL v25 = __OFADD__(v34, 1);
        uint64_t v35 = v34 + 1;
        if (v25) {
          goto LABEL_18;
        }
        *(void *)(v29 + 16) = v35;
      }
      sub_253D74BDC();
      uint64_t v13 = sub_253BDEDD8(&qword_26B255350);
      a4 = 1;
      sub_253C49DB0(v5);
      if (v14) {
        goto LABEL_3;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_253DF5CF0();
    __break(1u);
  }
  return result;
}

uint64_t sub_253C797D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v65 = a2;
  v59[1] = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  sub_253C0F830();
  uint64_t v66 = v11;
  MEMORY[0x270FA5388](v12);
  sub_253C2F394();
  uint64_t v13 = sub_253BDEDD8(&qword_26B255728);
  MEMORY[0x270FA5388](v13 - 8);
  sub_253C363A4();
  uint64_t v14 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v61 = v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_253BDEDD8(&qword_26B255358);
  MEMORY[0x270FA5388](v19 - 8);
  unint64_t v21 = (char *)v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253D74B9C(&v68, a1, v65, a3);
  v59[3] = a1;
  swift_bridgeObjectRetain();
  v59[2] = a3;
  swift_retain();
  sub_253D74BDC();
  uint64_t v22 = sub_253BDEDD8(&qword_26B255350);
  sub_253C49DB0((uint64_t)v21);
  if (!v23)
  {
    uint64_t v63 = *(void *)(v61 + 32);
    uint64_t v64 = v61 + 32;
    v59[5] = v61 + 8;
    uint64_t v60 = a5;
    v59[7] = v14;
    v59[6] = v18;
    uint64_t v62 = v21;
    do
    {
      uint64_t v25 = *(int *)(v22 + 48);
      sub_253BEFD2C();
      v26();
      uint64_t v65 = *(void *)&v21[v25];
      uint64_t v27 = *a5;
      sub_253D87ADC();
      unint64_t v29 = v28;
      uint64_t v31 = sub_253C7BDC0(v30, *(void *)(v27 + 16));
      if (v33) {
        goto LABEL_32;
      }
      char v34 = v32;
      if (*(void *)(v27 + 24) >= v31)
      {
        if ((a4 & 1) == 0)
        {
          sub_253BDEDD8(&qword_269D7C8D0);
          sub_253DF5A80();
        }
      }
      else
      {
        sub_253D72734();
        sub_253D87ADC();
        if ((v34 & 1) != (v36 & 1)) {
          goto LABEL_34;
        }
        unint64_t v29 = v35;
      }
      uint64_t v37 = *a5;
      if (v34)
      {
        unint64_t v38 = *(uint64_t **)(*(void *)(v37 + 56) + 8 * v29);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v69 = v38;
        sub_253D74B9C(&v67, v65, sub_253C79470, 0);
        swift_bridgeObjectRetain();
        sub_253D74E2C();
        uint64_t v40 = sub_253BDEDD8(&qword_269D7C8D8);
        while (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v6, 1, v40) != 1)
        {
          uint64_t v41 = *(int *)(v40 + 48);
          sub_253C7BC18(v6, v5, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
          uint64_t v42 = *(void *)(v6 + v41);
          unint64_t v43 = sub_253D87A00(v5);
          uint64_t v45 = sub_253C7BDC0(v44, v38[2]);
          if (v33)
          {
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
            while (1)
            {
LABEL_34:
              sub_253DF5CF0();
              __break(1u);
            }
          }
          char v47 = v46;
          if (v38[3] >= v45)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_253BDEDD8(&qword_269D7C8E0);
              sub_253DF5A80();
            }
          }
          else
          {
            sub_253D72990();
            uint64_t v48 = sub_253D87A00(v5);
            if ((v47 & 1) != (v49 & 1)) {
              goto LABEL_34;
            }
            unint64_t v43 = v48;
          }
          unint64_t v38 = v69;
          if (v47)
          {
            uint64_t v50 = *(void *)(v69[7] + 8 * v43);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            sub_253C7BC74(v5, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
            uint64_t v51 = v38[7];
            swift_bridgeObjectRelease();
            *(void *)(v51 + 8 * v43) = v50;
          }
          else
          {
            v69[(v43 >> 6) + 8] |= 1 << v43;
            sub_253C7BC18(v5, v38[6] + *(void *)(v66 + 72) * v43, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
            *(void *)(v38[7] + 8 * v43) = v42;
            uint64_t v52 = v38[2];
            BOOL v33 = __OFADD__(v52, 1);
            uint64_t v53 = v52 + 1;
            if (v33) {
              goto LABEL_31;
            }
            v38[2] = v53;
          }
          sub_253D74E2C();
          uint64_t v40 = sub_253BDEDD8(&qword_269D7C8D8);
          char isUniquelyReferenced_nonNull_native = 1;
        }
        swift_bridgeObjectRelease();
        sub_253BDF450();
        swift_release();
        swift_bridgeObjectRelease();
        sub_253C7BDB0();
        sub_253BEFBCC();
        v57();
        a5 = v60;
        uint64_t v58 = *(void *)(*v60 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v58 + 8 * v29) = v38;
      }
      else
      {
        sub_253C7BE00(v37 + 8 * (v29 >> 6));
        sub_253BEFD2C();
        v54();
        *(void *)(*(void *)(v37 + 56) + 8 * v29) = v65;
        uint64_t v55 = *(void *)(v37 + 16);
        BOOL v33 = __OFADD__(v55, 1);
        uint64_t v56 = v55 + 1;
        if (v33) {
          goto LABEL_33;
        }
        *(void *)(v37 + 16) = v56;
      }
      unint64_t v21 = v62;
      sub_253D74BDC();
      uint64_t v22 = sub_253BDEDD8(&qword_26B255350);
      a4 = 1;
      sub_253C49DB0((uint64_t)v21);
    }
    while (!v23);
  }
  swift_release();
  swift_bridgeObjectRelease();
  sub_253BDF450();
  return swift_release();
}

uint64_t sub_253C79DB8(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v35 = a3;
  uint64_t v5 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253BDEDD8(&qword_269D7C8D8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return swift_bridgeObjectRelease();
  }
  v31[0] = v5;
  v31[1] = a1;
  uint64_t v14 = *(int *)(v9 + 48);
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  uint64_t v33 = *(void *)(v10 + 72);
  uint64_t v34 = v14;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_253C56520(v15, (uint64_t)v12, &qword_269D7C8D8);
    sub_253C7BC18((uint64_t)v12, (uint64_t)v7, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    uint64_t v16 = *(void *)&v12[v34];
    uint64_t v17 = *v35;
    unint64_t v19 = sub_253D87A00((uint64_t)v7);
    uint64_t v20 = *(void *)(v17 + 16);
    BOOL v21 = (v18 & 1) == 0;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v22 = v18;
    if (*(void *)(v17 + 24) >= v20 + v21)
    {
      if (a2)
      {
        if (v18) {
          goto LABEL_10;
        }
      }
      else
      {
        sub_253BDEDD8(&qword_269D7C8E0);
        sub_253DF5A80();
        if (v22) {
          goto LABEL_10;
        }
      }
    }
    else
    {
      sub_253D72990();
      uint64_t v23 = sub_253D87A00((uint64_t)v7);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_20;
      }
      unint64_t v19 = v23;
      if (v22)
      {
LABEL_10:
        sub_253C7BC74((uint64_t)v7, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
        uint64_t v25 = *(void *)(*v35 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v25 + 8 * v19) = v16;
        goto LABEL_14;
      }
    }
    char v26 = (void *)*v35;
    *(void *)(*v35 + 8 * (v19 >> 6) + 64) |= 1 << v19;
    sub_253C7BC18((uint64_t)v7, v26[6] + *(void *)(v32 + 72) * v19, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    *(void *)(v26[7] + 8 * v19) = v16;
    uint64_t v27 = v26[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_19;
    }
    v26[2] = v29;
LABEL_14:
    v15 += v33;
    a2 = 1;
    if (!--v13) {
      return swift_bridgeObjectRelease_n();
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_253DF5CF0();
  __break(1u);
  return result;
}

void sub_253C7A0E0(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_253BDEDD8(&qword_269D7C8F0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_253DEB998();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_253C7A18C(v6);
  *a1 = v3;
}

void sub_253C7A18C(uint64_t *a1)
{
  uint64_t v3 = sub_253BDEDD8(&qword_269D7C8F0);
  uint64_t v200 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v194 = (uint64_t)&v179 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v208 = (uint64_t)&v179 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  v202 = (uint64_t **)((char *)&v179 - v9);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v203 = (uint64_t **)((char *)&v179 - v11);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v179 - v13;
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v214 = (uint64_t)&v179 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v188 = (uint64_t **)((char *)&v179 - v18);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v195 = (uint64_t **)((char *)&v179 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v179 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v198 = (uint64_t)&v179 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  BOOL v28 = (char *)&v179 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v179 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v34 = (char *)&v179 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v186 = (uint64_t)&v179 - v35;
  v216 = a1;
  uint64_t v36 = a1[1];
  uint64_t v37 = sub_253DF5C30();
  if (v37 >= v36)
  {
    if ((v36 & 0x8000000000000000) == 0)
    {
      if (v36) {
        sub_253C7B078(0, v36, 1, v216);
      }
      return;
    }
    goto LABEL_154;
  }
  uint64_t v183 = v37;
  uint64_t v201 = v1;
  uint64_t v181 = sub_253DCADF0(v36 / 2);
  unint64_t v199 = v38;
  uint64_t v182 = v36;
  if (v36 <= 0)
  {
    uint64_t v40 = (char *)MEMORY[0x263F8EE78];
    unint64_t v121 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_117:
    if (v121 < 2)
    {
LABEL_130:
      swift_bridgeObjectRelease();
      if (v182 >= -1) {
        goto LABEL_131;
      }
      goto LABEL_159;
    }
    uint64_t v172 = *v216;
    while (1)
    {
      unint64_t v173 = v121 - 2;
      if (v121 < 2) {
        break;
      }
      if (!v172) {
        goto LABEL_163;
      }
      uint64_t v174 = *(void *)&v40[16 * v173 + 32];
      uint64_t v175 = *(void *)&v40[16 * v121 + 24];
      uint64_t v176 = v201;
      sub_253C7B45C(v172 + *(void *)(v200 + 72) * v174, v172 + *(void *)(v200 + 72) * *(void *)&v40[16 * v121 + 16], v172 + *(void *)(v200 + 72) * v175, v199);
      uint64_t v201 = v176;
      if (v176) {
        goto LABEL_114;
      }
      if (v175 < v174) {
        goto LABEL_149;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v40 = sub_253DEB3A8((uint64_t)v40);
      }
      if (v173 >= *((void *)v40 + 2)) {
        goto LABEL_150;
      }
      v177 = &v40[16 * v173 + 32];
      *(void *)v177 = v174;
      *((void *)v177 + 1) = v175;
      unint64_t v178 = *((void *)v40 + 2);
      if (v121 > v178) {
        goto LABEL_151;
      }
      memmove(&v40[16 * v121 + 16], &v40[16 * v121 + 32], 16 * (v178 - v121));
      *((void *)v40 + 2) = v178 - 1;
      unint64_t v121 = v178 - 1;
      if (v178 <= 2) {
        goto LABEL_130;
      }
    }
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
LABEL_162:
    __break(1u);
LABEL_163:
    __break(1u);
    return;
  }
  v185 = v34;
  v180 = (uint64_t *)v31;
  v179 = (uint64_t *)v28;
  v193 = v23;
  uint64_t v39 = 0;
  uint64_t v40 = (char *)MEMORY[0x263F8EE78];
  uint64_t v41 = v36;
  uint64_t v215 = v3;
  v184 = v14;
  while (1)
  {
    v196 = v40;
    uint64_t v197 = v39;
    if (v39 + 1 >= v41)
    {
      uint64_t v58 = v39 + 1;
    }
    else
    {
      uint64_t v42 = v39;
      uint64_t v43 = *v216;
      uint64_t v44 = *(void *)(v200 + 72);
      uint64_t v207 = v39 + 1;
      uint64_t v45 = v186;
      sub_253C56520(v43 + v44 * (v39 + 1), v186, &qword_269D7C8F0);
      uint64_t v187 = v43;
      uint64_t v213 = v44;
      sub_253C56520(v43 + v44 * v42, (uint64_t)v185, &qword_269D7C8F0);
      uint64_t v46 = *(int *)(v3 + 48);
      char v47 = v180;
      uint64_t v48 = (char *)v180 + v46;
      uint64_t v49 = v45 + v46;
      char v50 = *(unsigned char *)(v45 + 8);
      uint64_t v211 = *(void *)v45;
      uint64_t *v180 = v211;
      *((unsigned char *)v47 + 8) = v50;
      uint64_t v51 = sub_253DF4360();
      uint64_t v52 = *(void *)(v51 - 8);
      uint64_t v54 = v52 + 16;
      uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
      v53(v48, v49, v51);
      char v57 = *(void (**)(char *, uint64_t))(v52 + 8);
      uint64_t v55 = v52 + 8;
      uint64_t v56 = v57;
      v57(v48, v51);
      v210 = v53;
      if (v50)
      {
        LODWORD(v211) = 0;
      }
      else
      {
        uint64_t v59 = *(int *)(v215 + 48);
        uint64_t v60 = v179;
        uint64_t v61 = (char *)v179 + v59;
        uint64_t v62 = &v185[v59];
        uint64_t v63 = *(void *)v185;
        LOBYTE(v59) = v185[8];
        LODWORD(v209) = v59;
        uint64_t *v179 = v63;
        *((unsigned char *)v60 + 8) = v59;
        v53(v61, (uint64_t)v62, v51);
        v56(v61, v51);
        LODWORD(v211) = (v211 < v63) & ~v209;
      }
      sub_253BEFAC0((uint64_t)v185, &qword_269D7C8F0);
      sub_253BEFAC0(v186, &qword_269D7C8F0);
      uint64_t v39 = v197;
      uint64_t v58 = v197 + 2;
      uint64_t v3 = v215;
      if (v197 + 2 < v41)
      {
        v204 = v56;
        uint64_t v205 = v54;
        uint64_t v206 = v51;
        uint64_t v209 = v55;
        uint64_t v192 = v213 * v207;
        uint64_t v64 = v187;
        uint64_t v207 = v197 + 2;
        uint64_t v191 = v213 * v58;
        uint64_t v212 = v41;
        while (1)
        {
          uint64_t v65 = v198;
          sub_253C56520(v64 + v191, v198, &qword_269D7C8F0);
          uint64_t v66 = (uint64_t)v193;
          sub_253C56520(v64 + v192, (uint64_t)v193, &qword_269D7C8F0);
          uint64_t v67 = *(int *)(v3 + 48);
          uint64_t v68 = v195;
          uint64_t v69 = (char *)v195 + v67;
          uint64_t v70 = v65 + v67;
          uint64_t v71 = *(void *)v65;
          LOBYTE(v65) = *(unsigned char *)(v65 + 8);
          void *v195 = v71;
          *((unsigned char *)v68 + 8) = v65;
          uint64_t v72 = v206;
          uint64_t v73 = v210;
          v210((char *)v68 + v67, v70, v206);
          unint64_t v74 = v69;
          uint64_t v75 = v204;
          v204(v74, v72);
          if (v65)
          {
            int v76 = 0;
          }
          else
          {
            uint64_t v77 = *(int *)(v215 + 48);
            uint64_t v78 = v188;
            v79 = (char *)v188 + v77;
            uint64_t v80 = v66 + v77;
            uint64_t v189 = *(void *)v66;
            LOBYTE(v77) = *(unsigned char *)(v66 + 8);
            int v190 = v77;
            void *v188 = v189;
            *((unsigned char *)v78 + 8) = v77;
            v73(v79, v80, v72);
            v75(v79, v72);
            int v76 = (v71 < v189) & ~v190;
          }
          sub_253BEFAC0(v66, &qword_269D7C8F0);
          sub_253BEFAC0(v198, &qword_269D7C8F0);
          uint64_t v3 = v215;
          uint64_t v40 = v196;
          uint64_t v41 = v212;
          if (v211 != v76) {
            break;
          }
          v64 += v213;
          if (++v207 >= v212)
          {
            uint64_t v58 = v212;
            goto LABEL_18;
          }
        }
        uint64_t v58 = v207;
LABEL_18:
        uint64_t v39 = v197;
      }
      if (!v211) {
        goto LABEL_36;
      }
      if (v58 < v39) {
        goto LABEL_156;
      }
      if (v39 < v58)
      {
        uint64_t v81 = 0;
        uint64_t v82 = v213 * (v58 - 1);
        uint64_t v83 = v58 * v213;
        uint64_t v84 = v39;
        uint64_t v85 = v39 * v213;
        uint64_t v212 = v41;
        do
        {
          if (v84 != v58 + v81 - 1)
          {
            uint64_t v86 = v187;
            if (!v187) {
              goto LABEL_162;
            }
            unint64_t v87 = v187 + v85;
            uint64_t v211 = v187 + v82;
            sub_253C61B78(v187 + v85, v194, &qword_269D7C8F0);
            if (v85 < v82 || v87 >= v86 + v83)
            {
              uint64_t v89 = v211;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v89 = v211;
              if (v85 != v82) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_253C61B78(v194, v89, &qword_269D7C8F0);
            uint64_t v41 = v212;
          }
          ++v84;
          --v81;
          v82 -= v213;
          v83 -= v213;
          v85 += v213;
        }
        while (v84 < v58 + v81);
        uint64_t v14 = v184;
        uint64_t v40 = v196;
        uint64_t v39 = v197;
      }
      else
      {
LABEL_36:
        uint64_t v14 = v184;
      }
    }
    if (v58 < v41)
    {
      BOOL v136 = __OFSUB__(v58, v39);
      uint64_t v90 = v58 - v39;
      if (v136) {
        goto LABEL_153;
      }
      if (v90 < v183)
      {
        if (__OFADD__(v197, v183)) {
          goto LABEL_157;
        }
        if (v197 + v183 >= v41) {
          uint64_t v91 = v41;
        }
        else {
          uint64_t v91 = v197 + v183;
        }
        if (v91 < v197) {
          goto LABEL_158;
        }
        if (v58 == v91)
        {
          uint64_t v39 = v197;
          goto LABEL_61;
        }
        v92 = *(void (**)(char *, uint64_t))(v200 + 72);
        uint64_t v93 = (void)v92 * (v58 - 1);
        v204 = v92;
        uint64_t v94 = v58 * (void)v92;
        uint64_t v192 = v91;
        do
        {
          uint64_t v95 = 0;
          uint64_t v96 = v197;
          uint64_t v206 = v93;
          uint64_t v207 = v58;
          uint64_t v205 = v94;
          while (1)
          {
            uint64_t v211 = v96;
            uint64_t v97 = *v216;
            v210 = (void (*)(char *, uint64_t, uint64_t))(v94 + v95);
            uint64_t v98 = v94 + v95 + v97;
            uint64_t v99 = v214;
            sub_253C56520(v98, v214, &qword_269D7C8F0);
            uint64_t v212 = v95;
            uint64_t v209 = v93 + v95;
            sub_253C56520(v93 + v95 + v97, (uint64_t)v14, &qword_269D7C8F0);
            uint64_t v100 = *(int *)(v3 + 48);
            unint64_t v101 = v203;
            uint64_t v102 = (char *)v203 + v100;
            uint64_t v103 = v99 + v100;
            char v104 = *(unsigned char *)(v99 + 8);
            uint64_t v213 = *(void *)v99;
            void *v203 = v213;
            *((unsigned char *)v101 + 8) = v104;
            uint64_t v105 = sub_253DF4360();
            uint64_t v106 = *(void *)(v105 - 8);
            uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 16);
            v107(v102, v103, v105);
            uint64_t v108 = *(void (**)(char *, uint64_t))(v106 + 8);
            v108(v102, v105);
            if (v104) {
              goto LABEL_55;
            }
            uint64_t v109 = *(int *)(v215 + 48);
            uint64_t v110 = v202;
            uint64_t v111 = (char *)v202 + v109;
            uint64_t v112 = *(void *)v14;
            char v113 = v14[8];
            void *v202 = *(void *)v14;
            *((unsigned char *)v110 + 8) = v113;
            v107((char *)v110 + v109, (uint64_t)&v14[v109], v105);
            v108(v111, v105);
            if (v113)
            {
LABEL_55:
              sub_253BEFAC0((uint64_t)v14, &qword_269D7C8F0);
              sub_253BEFAC0(v214, &qword_269D7C8F0);
              uint64_t v3 = v215;
              goto LABEL_57;
            }
            sub_253BEFAC0((uint64_t)v14, &qword_269D7C8F0);
            sub_253BEFAC0(v214, &qword_269D7C8F0);
            if (v213 >= v112) {
              break;
            }
            uint64_t v114 = *v216;
            uint64_t v3 = v215;
            uint64_t v94 = v205;
            uint64_t v93 = v206;
            if (!*v216) {
              goto LABEL_160;
            }
            uint64_t v115 = v212;
            uint64_t v116 = v114 + v206 + v212;
            sub_253C61B78(v114 + v205 + v212, v208, &qword_269D7C8F0);
            swift_arrayInitWithTakeFrontToBack();
            sub_253C61B78(v208, v116, &qword_269D7C8F0);
            uint64_t v95 = v115 - (void)v204;
            uint64_t v96 = v211 + 1;
            uint64_t v117 = v207;
            if (v207 == v211 + 1) {
              goto LABEL_58;
            }
          }
          uint64_t v3 = v215;
LABEL_57:
          uint64_t v93 = v206;
          uint64_t v117 = v207;
          uint64_t v94 = v205;
LABEL_58:
          uint64_t v58 = v117 + 1;
          v93 += (uint64_t)v204;
          v94 += (uint64_t)v204;
        }
        while (v58 != v192);
        uint64_t v58 = v192;
        uint64_t v40 = v196;
      }
      uint64_t v39 = v197;
    }
LABEL_61:
    if (v58 < v39) {
      goto LABEL_152;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v207 = v58;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v40 = sub_253DEB2B0(0, *((void *)v40 + 2) + 1, 1, v40);
    }
    unint64_t v120 = *((void *)v40 + 2);
    unint64_t v119 = *((void *)v40 + 3);
    unint64_t v121 = v120 + 1;
    if (v120 >= v119 >> 1) {
      uint64_t v40 = sub_253DEB2B0((char *)(v119 > 1), v120 + 1, 1, v40);
    }
    *((void *)v40 + 2) = v121;
    char v122 = v40 + 32;
    uint64_t v123 = &v40[16 * v120 + 32];
    uint64_t v124 = v207;
    *(void *)uint64_t v123 = v197;
    *((void *)v123 + 1) = v124;
    if (v120) {
      break;
    }
    unint64_t v121 = 1;
LABEL_109:
    uint64_t v41 = v216[1];
    uint64_t v39 = v207;
    uint64_t v14 = v184;
    if (v207 >= v41) {
      goto LABEL_117;
    }
  }
  while (1)
  {
    unint64_t v125 = v121 - 1;
    if (v121 >= 4)
    {
      uint64_t v130 = &v122[16 * v121];
      uint64_t v131 = *((void *)v130 - 8);
      uint64_t v132 = *((void *)v130 - 7);
      BOOL v136 = __OFSUB__(v132, v131);
      uint64_t v133 = v132 - v131;
      if (v136) {
        goto LABEL_137;
      }
      uint64_t v135 = *((void *)v130 - 6);
      uint64_t v134 = *((void *)v130 - 5);
      BOOL v136 = __OFSUB__(v134, v135);
      uint64_t v128 = v134 - v135;
      char v129 = v136;
      if (v136) {
        goto LABEL_138;
      }
      unint64_t v137 = v121 - 2;
      uint64_t v138 = &v122[16 * v121 - 32];
      uint64_t v140 = *(void *)v138;
      uint64_t v139 = *((void *)v138 + 1);
      BOOL v136 = __OFSUB__(v139, v140);
      uint64_t v141 = v139 - v140;
      if (v136) {
        goto LABEL_139;
      }
      BOOL v136 = __OFADD__(v128, v141);
      uint64_t v142 = v128 + v141;
      if (v136) {
        goto LABEL_141;
      }
      if (v142 >= v133)
      {
        v160 = &v122[16 * v125];
        uint64_t v162 = *(void *)v160;
        uint64_t v161 = *((void *)v160 + 1);
        BOOL v136 = __OFSUB__(v161, v162);
        uint64_t v163 = v161 - v162;
        if (v136) {
          goto LABEL_147;
        }
        BOOL v153 = v128 < v163;
        goto LABEL_98;
      }
    }
    else
    {
      if (v121 != 3)
      {
        uint64_t v154 = *((void *)v40 + 4);
        uint64_t v155 = *((void *)v40 + 5);
        BOOL v136 = __OFSUB__(v155, v154);
        uint64_t v147 = v155 - v154;
        char v148 = v136;
        goto LABEL_92;
      }
      uint64_t v127 = *((void *)v40 + 4);
      uint64_t v126 = *((void *)v40 + 5);
      BOOL v136 = __OFSUB__(v126, v127);
      uint64_t v128 = v126 - v127;
      char v129 = v136;
    }
    if (v129) {
      goto LABEL_140;
    }
    unint64_t v137 = v121 - 2;
    v143 = &v122[16 * v121 - 32];
    uint64_t v145 = *(void *)v143;
    uint64_t v144 = *((void *)v143 + 1);
    BOOL v146 = __OFSUB__(v144, v145);
    uint64_t v147 = v144 - v145;
    char v148 = v146;
    if (v146) {
      goto LABEL_142;
    }
    v149 = &v122[16 * v125];
    uint64_t v151 = *(void *)v149;
    uint64_t v150 = *((void *)v149 + 1);
    BOOL v136 = __OFSUB__(v150, v151);
    uint64_t v152 = v150 - v151;
    if (v136) {
      goto LABEL_144;
    }
    if (__OFADD__(v147, v152)) {
      goto LABEL_146;
    }
    if (v147 + v152 >= v128)
    {
      BOOL v153 = v128 < v152;
LABEL_98:
      if (v153) {
        unint64_t v125 = v137;
      }
      goto LABEL_100;
    }
LABEL_92:
    if (v148) {
      goto LABEL_143;
    }
    v156 = &v122[16 * v125];
    uint64_t v158 = *(void *)v156;
    uint64_t v157 = *((void *)v156 + 1);
    BOOL v136 = __OFSUB__(v157, v158);
    uint64_t v159 = v157 - v158;
    if (v136) {
      goto LABEL_145;
    }
    if (v159 < v147) {
      goto LABEL_109;
    }
LABEL_100:
    unint64_t v164 = v125 - 1;
    if (v125 - 1 >= v121)
    {
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
      goto LABEL_148;
    }
    if (!*v216) {
      goto LABEL_161;
    }
    v165 = v40;
    v166 = &v122[16 * v164];
    uint64_t v167 = *(void *)v166;
    v168 = &v122[16 * v125];
    uint64_t v169 = *((void *)v168 + 1);
    uint64_t v170 = v201;
    sub_253C7B45C(*v216 + *(void *)(v200 + 72) * *(void *)v166, *v216 + *(void *)(v200 + 72) * *(void *)v168, *v216 + *(void *)(v200 + 72) * v169, v199);
    if (v170) {
      break;
    }
    if (v169 < v167) {
      goto LABEL_134;
    }
    if (v125 > *((void *)v165 + 2)) {
      goto LABEL_135;
    }
    *(void *)v166 = v167;
    *(void *)&v122[16 * v164 + 8] = v169;
    unint64_t v171 = *((void *)v165 + 2);
    if (v125 >= v171) {
      goto LABEL_136;
    }
    uint64_t v40 = v165;
    uint64_t v201 = 0;
    unint64_t v121 = v171 - 1;
    memmove(&v122[16 * v125], v168 + 16, 16 * (v171 - 1 - v125));
    *((void *)v40 + 2) = v171 - 1;
    if (v171 <= 2) {
      goto LABEL_109;
    }
  }
LABEL_114:
  swift_bridgeObjectRelease();
  if (v182 < -1) {
    goto LABEL_155;
  }
LABEL_131:
  *(void *)(v181 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_253C7B078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v54 = a4;
  uint64_t v43 = a1;
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C8F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v51 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v44 = (uint64_t *)((char *)&v41 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v46 = (uint64_t *)((char *)&v41 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t result = MEMORY[0x270FA5388](v13);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v50 = a3;
  uint64_t v42 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *(void *)(v17 + 72);
    uint64_t v21 = v20 * (v50 - 1);
    uint64_t v47 = v20;
    uint64_t v22 = v20 * v50;
    uint64_t v45 = (char *)&v41 - v18;
    uint64_t v57 = v6;
    while (2)
    {
      uint64_t v23 = 0;
      uint64_t v55 = v43;
      uint64_t v48 = v22;
      uint64_t v49 = v21;
      while (1)
      {
        uint64_t v24 = *v54;
        uint64_t v53 = v22 + v23;
        sub_253C56520(v22 + v23 + v24, (uint64_t)v19, &qword_269D7C8F0);
        uint64_t v58 = v23;
        uint64_t v52 = v21 + v23;
        sub_253C56520(v21 + v23 + v24, (uint64_t)v15, &qword_269D7C8F0);
        uint64_t v25 = *(int *)(v6 + 48);
        uint64_t v26 = v46;
        uint64_t v27 = (char *)v46 + v25;
        BOOL v28 = &v19[v25];
        char v29 = v19[8];
        uint64_t v56 = *(void *)v19;
        *uint64_t v46 = v56;
        *((unsigned char *)v26 + 8) = v29;
        uint64_t v30 = sub_253DF4360();
        uint64_t v31 = *(void *)(v30 - 8);
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
        v32(v27, v28, v30);
        uint64_t v33 = *(void (**)(char *, uint64_t))(v31 + 8);
        v33(v27, v30);
        if (v29) {
          break;
        }
        uint64_t v34 = *(int *)(v57 + 48);
        uint64_t v35 = v44;
        uint64_t v36 = (char *)v44 + v34;
        uint64_t v37 = *(void *)v15;
        char v38 = v15[8];
        *uint64_t v44 = *(void *)v15;
        *((unsigned char *)v35 + 8) = v38;
        v32((char *)v35 + v34, &v15[v34], v30);
        v33(v36, v30);
        if (v38) {
          break;
        }
        sub_253BEFAC0((uint64_t)v15, &qword_269D7C8F0);
        uint64_t v19 = v45;
        uint64_t result = sub_253BEFAC0((uint64_t)v45, &qword_269D7C8F0);
        uint64_t v6 = v57;
        uint64_t v22 = v48;
        uint64_t v21 = v49;
        if (v56 < v37)
        {
          uint64_t v39 = *v54;
          if (!*v54)
          {
            __break(1u);
            return result;
          }
          uint64_t v40 = v39 + v49 + v58;
          sub_253C61B78(v39 + v48 + v58, v51, &qword_269D7C8F0);
          swift_arrayInitWithTakeFrontToBack();
          uint64_t result = sub_253C61B78(v51, v40, &qword_269D7C8F0);
          uint64_t v23 = v58 - v47;
          if (v50 != ++v55) {
            continue;
          }
        }
        goto LABEL_11;
      }
      sub_253BEFAC0((uint64_t)v15, &qword_269D7C8F0);
      uint64_t v19 = v45;
      uint64_t result = sub_253BEFAC0((uint64_t)v45, &qword_269D7C8F0);
      uint64_t v6 = v57;
      uint64_t v22 = v48;
      uint64_t v21 = v49;
LABEL_11:
      v21 += v47;
      v22 += v47;
      if (++v50 != v42) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_253C7B45C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_253BDEDD8(&qword_269D7C8F0);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  unint64_t v87 = (uint64_t *)((char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v90 = (uint64_t *)((char *)&v85 - v12);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v85 - v14;
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v85 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v88 = (uint64_t)&v85 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v93 = (uint64_t *)((char *)&v85 - v22);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  MEMORY[0x270FA5388](v23);
  unint64_t v95 = (unint64_t)&v85 - v25;
  uint64_t v27 = *(void *)(v26 + 72);
  if (!v27)
  {
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  BOOL v28 = a2 - a1 == 0x8000000000000000 && v27 == -1;
  if (v28) {
    goto LABEL_79;
  }
  int64_t v29 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v27 == -1) {
    goto LABEL_80;
  }
  unint64_t v100 = v24;
  uint64_t v31 = v29 / v27;
  uint64_t v99 = v8;
  uint64_t v91 = v27;
  if ((uint64_t)(a2 - a1) / v27 >= v29 / v27)
  {
    sub_253DC5A54(a2, v29 / v27);
    uint64_t v33 = (void *)(a4 + v31 * v27);
    if (v31 * v27 >= 1 && a1 < a2)
    {
      uint64_t v62 = -v27;
      unint64_t v97 = a1;
      unint64_t v98 = a4;
      uint64_t v88 = -v27;
      uint64_t v89 = v18;
      uint64_t v86 = v15;
      do
      {
        unint64_t v95 = a3;
        unint64_t v96 = (unint64_t)v33;
        uint64_t v93 = (void *)((char *)v33 + v62);
        sub_253C56520((uint64_t)v33 + v62, (uint64_t)v18, &qword_269D7C8F0);
        unint64_t v100 = a2;
        unint64_t v92 = a2 + v62;
        sub_253C56520(a2 + v62, (uint64_t)v15, &qword_269D7C8F0);
        uint64_t v63 = *(int *)(v8 + 48);
        uint64_t v64 = v90;
        uint64_t v65 = (char *)v90 + v63;
        uint64_t v66 = &v18[v63];
        char v67 = v18[8];
        uint64_t v94 = *(void *)v18;
        *uint64_t v90 = v94;
        *((unsigned char *)v64 + 8) = v67;
        uint64_t v68 = sub_253DF4360();
        uint64_t v69 = *(void *)(v68 - 8);
        uint64_t v70 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
        v70(v65, v66, v68);
        uint64_t v71 = *(void (**)(char *, uint64_t))(v69 + 8);
        v71(v65, v68);
        if (v67)
        {
          int v72 = 0;
        }
        else
        {
          uint64_t v73 = *(int *)(v8 + 48);
          unint64_t v74 = v87;
          uint64_t v75 = (char *)v87 + v73;
          uint64_t v76 = *(void *)v15;
          int v77 = v15[8];
          *unint64_t v87 = *(void *)v15;
          *((unsigned char *)v74 + 8) = v77;
          v70((char *)v74 + v73, &v15[v73], v68);
          v71(v75, v68);
          int v72 = (v94 < v76) & ~v77;
          uint64_t v8 = v99;
        }
        uint64_t v62 = v88;
        unint64_t v78 = v95;
        a3 = v95 + v88;
        sub_253BEFAC0((uint64_t)v15, &qword_269D7C8F0);
        uint64_t v18 = v89;
        sub_253BEFAC0((uint64_t)v89, &qword_269D7C8F0);
        a2 = v100;
        if (v72)
        {
          if (v78 < v100 || a3 >= v100)
          {
            a2 = v92;
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v80 = v97;
            a4 = v98;
          }
          else
          {
            BOOL v28 = v78 == v100;
            unint64_t v80 = v97;
            a4 = v98;
            a2 = v92;
            if (!v28) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          uint64_t v33 = (void *)v96;
        }
        else if (v78 < v96 || a3 >= v96)
        {
          uint64_t v82 = v93;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v33 = v82;
          unint64_t v80 = v97;
          a4 = v98;
        }
        else
        {
          BOOL v28 = v78 == v96;
          unint64_t v80 = v97;
          a4 = v98;
          if (v28)
          {
            uint64_t v33 = v93;
          }
          else
          {
            uint64_t v83 = v93;
            swift_arrayInitWithTakeBackToFront();
            uint64_t v33 = v83;
            uint64_t v15 = v86;
          }
        }
      }
      while ((unint64_t)v33 > a4 && a2 > v80);
    }
  }
  else
  {
    uint64_t v32 = (uint64_t)(a2 - a1) / v27;
    sub_253DC5A54(a1, v32);
    uint64_t v33 = (void *)(a4 + v32 * v27);
    if (v32 * v27 >= 1 && a2 < a3)
    {
      uint64_t v38 = v100;
      unint64_t v92 = a3;
      unint64_t v96 = (unint64_t)v33;
      do
      {
        unint64_t v97 = a1;
        unint64_t v100 = a2;
        uint64_t v39 = v95;
        sub_253C56520(a2, v95, &qword_269D7C8F0);
        unint64_t v98 = a4;
        sub_253C56520(a4, v38, &qword_269D7C8F0);
        uint64_t v40 = *(int *)(v8 + 48);
        uint64_t v41 = v93;
        uint64_t v42 = (char *)v93 + v40;
        uint64_t v43 = v39 + v40;
        uint64_t v44 = *(void *)v39;
        LOBYTE(v39) = *(unsigned char *)(v39 + 8);
        uint64_t v94 = v44;
        *uint64_t v93 = v44;
        *((unsigned char *)v41 + 8) = v39;
        uint64_t v45 = v38;
        uint64_t v46 = sub_253DF4360();
        uint64_t v47 = *(void *)(v46 - 8);
        uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v47 + 16);
        v48(v42, v43, v46);
        uint64_t v49 = *(void (**)(char *, uint64_t))(v47 + 8);
        v49(v42, v46);
        if (v39) {
          goto LABEL_29;
        }
        uint64_t v50 = *(int *)(v99 + 48);
        uint64_t v51 = v88;
        uint64_t v52 = (char *)(v88 + v50);
        uint64_t v53 = *(void *)v45;
        char v54 = *(unsigned char *)(v45 + 8);
        *(void *)uint64_t v88 = *(void *)v45;
        *(unsigned char *)(v51 + 8) = v54;
        v48((char *)(v51 + v50), v45 + v50, v46);
        v49(v52, v46);
        if (v54)
        {
LABEL_29:
          sub_253BEFAC0(v45, &qword_269D7C8F0);
          sub_253BEFAC0(v95, &qword_269D7C8F0);
          uint64_t v38 = v45;
        }
        else
        {
          sub_253BEFAC0(v45, &qword_269D7C8F0);
          sub_253BEFAC0(v95, &qword_269D7C8F0);
          uint64_t v38 = v45;
          if (v94 < v53)
          {
            uint64_t v56 = v91;
            unint64_t v57 = v92;
            unint64_t v59 = v100 + v91;
            unint64_t v55 = v97;
            a4 = v98;
            if (v97 >= v100 && v97 < v59)
            {
              if (v97 == v100) {
                goto LABEL_38;
              }
LABEL_37:
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_38;
            }
LABEL_35:
            swift_arrayInitWithTakeFrontToBack();
            goto LABEL_38;
          }
        }
        unint64_t v55 = v97;
        uint64_t v56 = v91;
        unint64_t v57 = v92;
        a4 = v98 + v91;
        BOOL v58 = v97 < v98 || v97 >= a4;
        unint64_t v59 = v100;
        if (v58) {
          goto LABEL_35;
        }
        if (v97 != v98) {
          goto LABEL_37;
        }
LABEL_38:
        uint64_t v33 = (void *)v96;
        a1 = v55 + v56;
        BOOL v60 = a4 >= v96 || v59 >= v57;
        a2 = v59;
        uint64_t v8 = v99;
      }
      while (!v60);
    }
  }
  uint64_t v36 = (uint64_t)v33 - a4;
  if (v91 != -1 || v36 != 0x8000000000000000)
  {
    sub_253DC5A54(a4, v36 / v91);
    return;
  }
LABEL_81:
  __break(1u);
}

uint64_t sub_253C7BB5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_253C7BBC0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(char *, uint64_t, uint64_t)@<X2>, uint64_t *a4@<X8>)
{
  return sub_253C7860C(a1, a2, a3, a4);
}

uint64_t sub_253C7BBC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253C7BC10(uint64_t a1, uint64_t a2)
{
  return sub_253C77D20(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_253C7BC18(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  sub_253C10134();
  v4();
  return a2;
}

uint64_t sub_253C7BC74(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return a1;
}

ValueMetadata *_s28StatementParameterResolutionVMa()
{
  return &_s28StatementParameterResolutionVN;
}

uint64_t sub_253C7BCD8()
{
  return v0;
}

uint64_t sub_253C7BCF4()
{
  *(void *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  return *(void *)(v0 + 48) + *(void *)(*(void *)(v2 - 408) + 72) * v1;
}

uint64_t sub_253C7BD2C()
{
  *(void *)(v1 + 8 * (v0 >> 6) + 64) |= 1 << v0;
  return *(void *)(v1 + 48) + *(void *)(*(void *)(v2 - 408) + 72) * v0;
}

uint64_t sub_253C7BD90()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_253C7BDC0@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  return a2 + ((a1 & 1) == 0);
}

uint64_t sub_253C7BDE0()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void sub_253C7BE00(uint64_t a1@<X8>)
{
  *(void *)(a1 + 64) |= v1;
}

uint64_t sub_253C7BE14()
{
  return sub_253DF5A70();
}

uint64_t sub_253C7BE34()
{
  return sub_253DF5A70();
}

uint64_t sub_253C7BE74@<X0>(uint64_t a1@<X8>)
{
  return a1 + *(void *)(*(void *)(v1 - 256) + 72) * v2;
}

void sub_253C7BEB0()
{
  *(void *)(*(void *)(v2 + 56) + 8 * v0) = v1;
}

uint64_t sub_253C7BEC4()
{
  return v0;
}

uint64_t *sub_253C7BED8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = sub_253DEFFE0();
        uint64_t v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16);
        v18(a1, a2, v17);
        uint64_t v19 = (int *)_s23ParameterStepEvaluationVMa(0);
        v18((uint64_t *)((char *)a1 + v19[5]), (uint64_t *)((char *)a2 + v19[5]), v17);
        uint64_t v20 = v19[6];
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = sub_253DF2D40();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        uint64_t v24 = v19[7];
        uint64_t v25 = (uint64_t *)((char *)a1 + v24);
        uint64_t v26 = (uint64_t *)((char *)a2 + v24);
        _s19ParameterStepResultOMa(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v46 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v25, v26, v46);
            uint64_t v47 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
            uint64_t v48 = (char *)v25 + v47;
            uint64_t v49 = (char *)v26 + v47;
            uint64_t v50 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
            break;
          case 2u:
            uint64_t v51 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v25, v26, v51);
            uint64_t v52 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
            uint64_t v53 = (char *)v25 + v52;
            char v54 = (char *)v26 + v52;
            uint64_t v55 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
            break;
          case 3u:
            uint64_t v56 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v25, v26, v56);
            uint64_t v57 = _s27ParameterConfirmationResultVMa(0);
            *((unsigned char *)v25 + *(int *)(v57 + 20)) = *((unsigned char *)v26 + *(int *)(v57 + 20));
            uint64_t v58 = *(int *)(v57 + 24);
            unint64_t v59 = (char *)v25 + v58;
            BOOL v60 = (char *)v26 + v58;
            uint64_t v61 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
            break;
          case 4u:
            *uint64_t v25 = *v26;
            uint64_t v62 = _s29ParameterDisambiguationResultVMa(0);
            uint64_t v63 = *(int *)(v62 + 20);
            uint64_t v64 = (char *)v25 + v63;
            uint64_t v65 = (char *)v26 + v63;
            uint64_t v66 = _s20DisambiguationResultOMa(0);
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v67 = sub_253DF4BA0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v64, v65, v67);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
            }
            uint64_t v68 = *(int *)(v62 + 24);
            uint64_t v69 = (char *)v25 + v68;
            uint64_t v70 = (char *)v26 + v68;
            uint64_t v71 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
            break;
          default:
            uint64_t v27 = sub_253BDEDD8(&qword_269D7C890);
            if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v26, 1, v27))
            {
              uint64_t v28 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
              memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
            }
            else
            {
              uint64_t v72 = sub_253DF4BA0();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 16))(v25, v26, v72);
              _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v25, 0, 1, v27);
            }
            uint64_t v73 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
            unint64_t v74 = (char *)v25 + v73;
            uint64_t v75 = (char *)v26 + v73;
            uint64_t v76 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v29 = sub_253DEFFE0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        uint64_t v30 = *(int *)(_s20ActionStepEvaluationVMa(0) + 20);
        uint64_t v31 = (char *)a1 + v30;
        uint64_t v32 = (char *)a2 + v30;
        *((unsigned char *)a1 + v30) = *v32;
        uint64_t v33 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
        uint64_t v34 = &v31[v33];
        uint64_t v35 = &v32[v33];
        uint64_t v36 = sub_253DEFE90();
        (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        break;
      case 3u:
        uint64_t v37 = sub_253DEFFE0();
        uint64_t v38 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v37 - 8) + 16);
        v38(a1, a2, v37);
        uint64_t v39 = _s19ValueStepEvaluationVMa(0);
        v38((uint64_t *)((char *)a1 + *(int *)(v39 + 20)), (uint64_t *)((char *)a2 + *(int *)(v39 + 20)), v37);
        uint64_t v40 = *(int *)(v39 + 24);
        uint64_t v8 = (char *)a1 + v40;
        uint64_t v9 = (char *)a2 + v40;
        *(uint64_t *)((char *)a1 + v40) = *(uint64_t *)((char *)a2 + v40);
        uint64_t v10 = _s25ValueDisambiguationResultVMa(0);
        uint64_t v41 = *(int *)(v10 + 20);
        uint64_t v12 = &v8[v41];
        uint64_t v13 = &v9[v41];
        uint64_t v14 = _s20DisambiguationResultOMa(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_12;
        }
        goto LABEL_4;
      default:
        uint64_t v6 = sub_253DEFFE0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = *(int *)(_s18ToolStepEvaluationVMa(0) + 20);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        *(uint64_t *)((char *)a1 + v7) = *(uint64_t *)((char *)a2 + v7);
        uint64_t v10 = _s24ToolDisambiguationResultVMa(0);
        uint64_t v11 = *(int *)(v10 + 20);
        uint64_t v12 = &v8[v11];
        uint64_t v13 = &v9[v11];
        uint64_t v14 = _s20DisambiguationResultOMa(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_4:
          uint64_t v15 = sub_253DF4BA0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_12:
          memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
        }
        uint64_t v42 = *(int *)(v10 + 24);
        uint64_t v43 = &v8[v42];
        uint64_t v44 = &v9[v42];
        uint64_t v45 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s18ToolStepEvaluationVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2557B0);
}

uint64_t _s24ToolDisambiguationResultVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2558A8);
}

uint64_t _s20DisambiguationResultOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B251C70);
}

uint64_t _s23ParameterStepEvaluationVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255840);
}

uint64_t _s19ParameterStepResultOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2557C8);
}

uint64_t _s25ParameterNeedsValueResultV16NeedsValueResultOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2558B8);
}

uint64_t _s25ParameterNeedsValueResultVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2558C8);
}

uint64_t _s25ParameterNotAllowedResultVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2558D8);
}

uint64_t _s33ParameterCandidatesNotFoundResultVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255918);
}

uint64_t _s27ParameterConfirmationResultVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2558F8);
}

uint64_t _s29ParameterDisambiguationResultVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255908);
}

uint64_t _s20ActionStepEvaluationVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255800);
}

uint64_t _s24ActionConfirmationResultVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255870);
}

uint64_t _s19ValueStepEvaluationVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2557E8);
}

uint64_t _s25ValueDisambiguationResultVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2558E8);
}

uint64_t sub_253C7CA3C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = a1 + *(int *)(_s18ToolStepEvaluationVMa(0) + 20);
      swift_bridgeObjectRelease();
      uint64_t v5 = _s24ToolDisambiguationResultVMa(0);
      goto LABEL_11;
    case 1:
      uint64_t v6 = sub_253DEFFE0();
      uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
      v7(a1, v6);
      uint64_t v8 = (int *)_s23ParameterStepEvaluationVMa(0);
      v7(a1 + v8[5], v6);
      uint64_t v9 = a1 + v8[6];
      uint64_t v10 = sub_253DF2D40();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      uint64_t v11 = a1 + v8[7];
      _s19ParameterStepResultOMa(0);
      uint64_t result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          uint64_t v12 = sub_253BDEDD8(&qword_269D7C890);
          if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v11, 1, v12))
          {
            uint64_t v13 = sub_253DF4BA0();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
          }
          uint64_t found = _s25ParameterNeedsValueResultVMa(0);
          goto LABEL_8;
        case 1:
          uint64_t v26 = sub_253DF4BA0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v11, v26);
          uint64_t found = _s25ParameterNotAllowedResultVMa(0);
          goto LABEL_8;
        case 2:
          uint64_t v27 = sub_253DF4BA0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v11, v27);
          uint64_t found = _s33ParameterCandidatesNotFoundResultVMa(0);
          goto LABEL_8;
        case 3:
          uint64_t v28 = sub_253DF4BA0();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v11, v28);
          uint64_t v16 = *(int *)(_s27ParameterConfirmationResultVMa(0) + 24);
          goto LABEL_9;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v29 = _s29ParameterDisambiguationResultVMa(0);
          uint64_t v30 = v11 + *(int *)(v29 + 20);
          _s20DisambiguationResultOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v31 = sub_253DF4BA0();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
          }
          uint64_t v16 = *(int *)(v29 + 24);
          goto LABEL_9;
        default:
          return result;
      }
      return result;
    case 2:
      uint64_t v15 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
      uint64_t v11 = a1 + *(int *)(_s20ActionStepEvaluationVMa(0) + 20);
      uint64_t found = _s24ActionConfirmationResultVMa(0);
LABEL_8:
      uint64_t v16 = *(int *)(found + 20);
LABEL_9:
      uint64_t v17 = v11 + v16;
      goto LABEL_14;
    case 3:
      uint64_t v18 = sub_253DEFFE0();
      uint64_t v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
      v19(a1, v18);
      uint64_t v20 = _s19ValueStepEvaluationVMa(0);
      v19(a1 + *(int *)(v20 + 20), v18);
      uint64_t v4 = a1 + *(int *)(v20 + 24);
      swift_bridgeObjectRelease();
      uint64_t v5 = _s25ValueDisambiguationResultVMa(0);
LABEL_11:
      uint64_t v21 = v5;
      uint64_t v22 = v4 + *(int *)(v5 + 20);
      _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v23 = sub_253DF4BA0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
      }
      uint64_t v17 = v4 + *(int *)(v21 + 24);
LABEL_14:
      uint64_t v24 = sub_253DEFE90();
      uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8);
      uint64_t result = v25(v17, v24);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253C7CF44(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = sub_253DEFFE0();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
      v15(a1, a2, v14);
      uint64_t v16 = (int *)_s23ParameterStepEvaluationVMa(0);
      v15(a1 + v16[5], a2 + v16[5], v14);
      uint64_t v17 = v16[6];
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = sub_253DF2D40();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      uint64_t v21 = v16[7];
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (void *)(a2 + v21);
      _s19ParameterStepResultOMa(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v43 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v22, v23, v43);
          uint64_t v44 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
          uint64_t v45 = (char *)v22 + v44;
          uint64_t v46 = (char *)v23 + v44;
          uint64_t v47 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
          break;
        case 2u:
          uint64_t v48 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(v22, v23, v48);
          uint64_t v49 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
          uint64_t v50 = (char *)v22 + v49;
          uint64_t v51 = (char *)v23 + v49;
          uint64_t v52 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
          break;
        case 3u:
          uint64_t v53 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v22, v23, v53);
          uint64_t v54 = _s27ParameterConfirmationResultVMa(0);
          *((unsigned char *)v22 + *(int *)(v54 + 20)) = *((unsigned char *)v23 + *(int *)(v54 + 20));
          uint64_t v55 = *(int *)(v54 + 24);
          uint64_t v56 = (char *)v22 + v55;
          uint64_t v57 = (char *)v23 + v55;
          uint64_t v58 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
          break;
        case 4u:
          *uint64_t v22 = *v23;
          uint64_t v59 = _s29ParameterDisambiguationResultVMa(0);
          uint64_t v60 = *(int *)(v59 + 20);
          uint64_t v61 = (char *)v22 + v60;
          uint64_t v62 = (char *)v23 + v60;
          uint64_t v63 = _s20DisambiguationResultOMa(0);
          swift_bridgeObjectRetain();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v64 = sub_253DF4BA0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v61, v62, v64);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
          }
          uint64_t v65 = *(int *)(v59 + 24);
          uint64_t v66 = (char *)v22 + v65;
          uint64_t v67 = (char *)v23 + v65;
          uint64_t v68 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
          break;
        default:
          uint64_t v24 = sub_253BDEDD8(&qword_269D7C890);
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v23, 1, v24))
          {
            uint64_t v25 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
            memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            uint64_t v69 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v22, v23, v69);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v22, 0, 1, v24);
          }
          uint64_t v70 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
          uint64_t v71 = (char *)v22 + v70;
          uint64_t v72 = (char *)v23 + v70;
          uint64_t v73 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
          break;
      }
      swift_storeEnumTagMultiPayload();
      break;
    case 2u:
      uint64_t v26 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
      uint64_t v27 = *(int *)(_s20ActionStepEvaluationVMa(0) + 20);
      uint64_t v28 = a1 + v27;
      uint64_t v29 = (unsigned char *)(a2 + v27);
      *(unsigned char *)(a1 + v27) = *v29;
      uint64_t v30 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
      uint64_t v31 = v28 + v30;
      uint64_t v32 = &v29[v30];
      uint64_t v33 = sub_253DEFE90();
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      break;
    case 3u:
      uint64_t v34 = sub_253DEFFE0();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
      v35(a1, a2, v34);
      uint64_t v36 = _s19ValueStepEvaluationVMa(0);
      v35(a1 + *(int *)(v36 + 20), a2 + *(int *)(v36 + 20), v34);
      uint64_t v37 = *(int *)(v36 + 24);
      uint64_t v6 = a1 + v37;
      uint64_t v7 = a2 + v37;
      *(void *)(a1 + v37) = *(void *)(a2 + v37);
      uint64_t v8 = _s25ValueDisambiguationResultVMa(0);
      uint64_t v38 = *(int *)(v8 + 20);
      uint64_t v10 = (void *)(v6 + v38);
      uint64_t v11 = (const void *)(v7 + v38);
      uint64_t v12 = _s20DisambiguationResultOMa(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_10;
      }
      goto LABEL_3;
    default:
      uint64_t v4 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(_s18ToolStepEvaluationVMa(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      *(void *)(a1 + v5) = *(void *)(a2 + v5);
      uint64_t v8 = _s24ToolDisambiguationResultVMa(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (void *)(v6 + v9);
      uint64_t v11 = (const void *)(v7 + v9);
      uint64_t v12 = _s20DisambiguationResultOMa(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_3:
        uint64_t v13 = sub_253DF4BA0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
LABEL_10:
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      uint64_t v39 = *(int *)(v8 + 24);
      uint64_t v40 = v6 + v39;
      uint64_t v41 = v7 + v39;
      uint64_t v42 = sub_253DEFE90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253C7D878(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253C7F598(a1, (void (*)(void))_s23StatementStepEvaluationOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = sub_253DEFFE0();
        uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
        v15(a1, a2, v14);
        uint64_t v16 = (int *)_s23ParameterStepEvaluationVMa(0);
        v15(a1 + v16[5], a2 + v16[5], v14);
        uint64_t v17 = v16[6];
        uint64_t v18 = a1 + v17;
        uint64_t v19 = a2 + v17;
        uint64_t v20 = sub_253DF2D40();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        uint64_t v21 = v16[7];
        uint64_t v22 = (void *)(a1 + v21);
        uint64_t v23 = (void *)(a2 + v21);
        _s19ParameterStepResultOMa(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v43 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v22, v23, v43);
            uint64_t v44 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
            uint64_t v45 = (char *)v22 + v44;
            uint64_t v46 = (char *)v23 + v44;
            uint64_t v47 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
            break;
          case 2u:
            uint64_t v48 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(v22, v23, v48);
            uint64_t v49 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
            uint64_t v50 = (char *)v22 + v49;
            uint64_t v51 = (char *)v23 + v49;
            uint64_t v52 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
            break;
          case 3u:
            uint64_t v53 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v22, v23, v53);
            uint64_t v54 = _s27ParameterConfirmationResultVMa(0);
            *((unsigned char *)v22 + *(int *)(v54 + 20)) = *((unsigned char *)v23 + *(int *)(v54 + 20));
            uint64_t v55 = *(int *)(v54 + 24);
            uint64_t v56 = (char *)v22 + v55;
            uint64_t v57 = (char *)v23 + v55;
            uint64_t v58 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
            break;
          case 4u:
            *uint64_t v22 = *v23;
            uint64_t v59 = _s29ParameterDisambiguationResultVMa(0);
            uint64_t v60 = *(int *)(v59 + 20);
            uint64_t v61 = (char *)v22 + v60;
            uint64_t v62 = (char *)v23 + v60;
            uint64_t v63 = _s20DisambiguationResultOMa(0);
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v64 = sub_253DF4BA0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v61, v62, v64);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
            }
            uint64_t v65 = *(int *)(v59 + 24);
            uint64_t v66 = (char *)v22 + v65;
            uint64_t v67 = (char *)v23 + v65;
            uint64_t v68 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
            break;
          default:
            uint64_t v24 = sub_253BDEDD8(&qword_269D7C890);
            if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v23, 1, v24))
            {
              uint64_t v25 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
              memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
            }
            else
            {
              uint64_t v69 = sub_253DF4BA0();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v22, v23, v69);
              _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v22, 0, 1, v24);
            }
            uint64_t v70 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
            uint64_t v71 = (char *)v22 + v70;
            uint64_t v72 = (char *)v23 + v70;
            uint64_t v73 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v26 = sub_253DEFFE0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        uint64_t v27 = *(int *)(_s20ActionStepEvaluationVMa(0) + 20);
        uint64_t v28 = a1 + v27;
        uint64_t v29 = (unsigned char *)(a2 + v27);
        *(unsigned char *)(a1 + v27) = *v29;
        uint64_t v30 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
        uint64_t v31 = v28 + v30;
        uint64_t v32 = &v29[v30];
        uint64_t v33 = sub_253DEFE90();
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
        break;
      case 3u:
        uint64_t v34 = sub_253DEFFE0();
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
        v35(a1, a2, v34);
        uint64_t v36 = _s19ValueStepEvaluationVMa(0);
        v35(a1 + *(int *)(v36 + 20), a2 + *(int *)(v36 + 20), v34);
        uint64_t v37 = *(int *)(v36 + 24);
        uint64_t v6 = a1 + v37;
        uint64_t v7 = a2 + v37;
        *(void *)(a1 + v37) = *(void *)(a2 + v37);
        uint64_t v8 = _s25ValueDisambiguationResultVMa(0);
        uint64_t v38 = *(int *)(v8 + 20);
        uint64_t v10 = (void *)(v6 + v38);
        uint64_t v11 = (const void *)(v7 + v38);
        uint64_t v12 = _s20DisambiguationResultOMa(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_11;
        }
        goto LABEL_4;
      default:
        uint64_t v4 = sub_253DEFFE0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = *(int *)(_s18ToolStepEvaluationVMa(0) + 20);
        uint64_t v6 = a1 + v5;
        uint64_t v7 = a2 + v5;
        *(void *)(a1 + v5) = *(void *)(a2 + v5);
        uint64_t v8 = _s24ToolDisambiguationResultVMa(0);
        uint64_t v9 = *(int *)(v8 + 20);
        uint64_t v10 = (void *)(v6 + v9);
        uint64_t v11 = (const void *)(v7 + v9);
        uint64_t v12 = _s20DisambiguationResultOMa(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_4:
          uint64_t v13 = sub_253DF4BA0();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v10, v11, v13);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_11:
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        }
        uint64_t v39 = *(int *)(v8 + 24);
        uint64_t v40 = v6 + v39;
        uint64_t v41 = v7 + v39;
        uint64_t v42 = sub_253DEFE90();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s23StatementStepEvaluationOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255858);
}

uint64_t sub_253C7E1F0(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = sub_253DEFFE0();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
      v15(a1, a2, v14);
      uint64_t v16 = (int *)_s23ParameterStepEvaluationVMa(0);
      v15(a1 + v16[5], a2 + v16[5], v14);
      uint64_t v17 = v16[6];
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      uint64_t v20 = sub_253DF2D40();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      uint64_t v21 = v16[7];
      uint64_t v22 = (void *)(a1 + v21);
      uint64_t v23 = (void *)(a2 + v21);
      _s19ParameterStepResultOMa(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v43 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 32))(v22, v23, v43);
          uint64_t v44 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
          uint64_t v45 = (char *)v22 + v44;
          uint64_t v46 = (char *)v23 + v44;
          uint64_t v47 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
          break;
        case 2u:
          uint64_t v48 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 32))(v22, v23, v48);
          uint64_t v49 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
          uint64_t v50 = (char *)v22 + v49;
          uint64_t v51 = (char *)v23 + v49;
          uint64_t v52 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
          break;
        case 3u:
          uint64_t v53 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 32))(v22, v23, v53);
          uint64_t v54 = _s27ParameterConfirmationResultVMa(0);
          *((unsigned char *)v22 + *(int *)(v54 + 20)) = *((unsigned char *)v23 + *(int *)(v54 + 20));
          uint64_t v55 = *(int *)(v54 + 24);
          uint64_t v56 = (char *)v22 + v55;
          uint64_t v57 = (char *)v23 + v55;
          uint64_t v58 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
          break;
        case 4u:
          *uint64_t v22 = *v23;
          uint64_t v59 = _s29ParameterDisambiguationResultVMa(0);
          uint64_t v60 = *(int *)(v59 + 20);
          uint64_t v61 = (char *)v22 + v60;
          uint64_t v62 = (char *)v23 + v60;
          uint64_t v63 = _s20DisambiguationResultOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v64 = sub_253DF4BA0();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v61, v62, v64);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
          }
          uint64_t v65 = *(int *)(v59 + 24);
          uint64_t v66 = (char *)v22 + v65;
          uint64_t v67 = (char *)v23 + v65;
          uint64_t v68 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
          break;
        default:
          uint64_t v24 = sub_253BDEDD8(&qword_269D7C890);
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v23, 1, v24))
          {
            uint64_t v25 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
            memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
          }
          else
          {
            uint64_t v69 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 32))(v22, v23, v69);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v22, 0, 1, v24);
          }
          uint64_t v70 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
          uint64_t v71 = (char *)v22 + v70;
          uint64_t v72 = (char *)v23 + v70;
          uint64_t v73 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
          break;
      }
      swift_storeEnumTagMultiPayload();
      break;
    case 2u:
      uint64_t v26 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
      uint64_t v27 = *(int *)(_s20ActionStepEvaluationVMa(0) + 20);
      uint64_t v28 = a1 + v27;
      uint64_t v29 = (unsigned char *)(a2 + v27);
      *(unsigned char *)(a1 + v27) = *v29;
      uint64_t v30 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
      uint64_t v31 = v28 + v30;
      uint64_t v32 = &v29[v30];
      uint64_t v33 = sub_253DEFE90();
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      break;
    case 3u:
      uint64_t v34 = sub_253DEFFE0();
      uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32);
      v35(a1, a2, v34);
      uint64_t v36 = _s19ValueStepEvaluationVMa(0);
      v35(a1 + *(int *)(v36 + 20), a2 + *(int *)(v36 + 20), v34);
      uint64_t v37 = *(int *)(v36 + 24);
      uint64_t v6 = a1 + v37;
      uint64_t v7 = a2 + v37;
      *(void *)(a1 + v37) = *(void *)(a2 + v37);
      uint64_t v8 = _s25ValueDisambiguationResultVMa(0);
      uint64_t v38 = *(int *)(v8 + 20);
      uint64_t v10 = (void *)(v6 + v38);
      uint64_t v11 = (const void *)(v7 + v38);
      uint64_t v12 = _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_10;
      }
      goto LABEL_3;
    default:
      uint64_t v4 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = *(int *)(_s18ToolStepEvaluationVMa(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      *(void *)(a1 + v5) = *(void *)(a2 + v5);
      uint64_t v8 = _s24ToolDisambiguationResultVMa(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = (void *)(v6 + v9);
      uint64_t v11 = (const void *)(v7 + v9);
      uint64_t v12 = _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
LABEL_3:
        uint64_t v13 = sub_253DF4BA0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
LABEL_10:
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      uint64_t v39 = *(int *)(v8 + 24);
      uint64_t v40 = v6 + v39;
      uint64_t v41 = v7 + v39;
      uint64_t v42 = sub_253DEFE90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253C7EB0C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253C7F598(a1, (void (*)(void))_s23StatementStepEvaluationOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = sub_253DEFFE0();
        uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32);
        v15(a1, a2, v14);
        uint64_t v16 = (int *)_s23ParameterStepEvaluationVMa(0);
        v15(a1 + v16[5], a2 + v16[5], v14);
        uint64_t v17 = v16[6];
        uint64_t v18 = a1 + v17;
        uint64_t v19 = a2 + v17;
        uint64_t v20 = sub_253DF2D40();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        uint64_t v21 = v16[7];
        uint64_t v22 = (void *)(a1 + v21);
        uint64_t v23 = (void *)(a2 + v21);
        _s19ParameterStepResultOMa(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v43 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 32))(v22, v23, v43);
            uint64_t v44 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
            uint64_t v45 = (char *)v22 + v44;
            uint64_t v46 = (char *)v23 + v44;
            uint64_t v47 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
            break;
          case 2u:
            uint64_t v48 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 32))(v22, v23, v48);
            uint64_t v49 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
            uint64_t v50 = (char *)v22 + v49;
            uint64_t v51 = (char *)v23 + v49;
            uint64_t v52 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
            break;
          case 3u:
            uint64_t v53 = sub_253DF4BA0();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 32))(v22, v23, v53);
            uint64_t v54 = _s27ParameterConfirmationResultVMa(0);
            *((unsigned char *)v22 + *(int *)(v54 + 20)) = *((unsigned char *)v23 + *(int *)(v54 + 20));
            uint64_t v55 = *(int *)(v54 + 24);
            uint64_t v56 = (char *)v22 + v55;
            uint64_t v57 = (char *)v23 + v55;
            uint64_t v58 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
            break;
          case 4u:
            *uint64_t v22 = *v23;
            uint64_t v59 = _s29ParameterDisambiguationResultVMa(0);
            uint64_t v60 = *(int *)(v59 + 20);
            uint64_t v61 = (char *)v22 + v60;
            uint64_t v62 = (char *)v23 + v60;
            uint64_t v63 = _s20DisambiguationResultOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v64 = sub_253DF4BA0();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v61, v62, v64);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
            }
            uint64_t v65 = *(int *)(v59 + 24);
            uint64_t v66 = (char *)v22 + v65;
            uint64_t v67 = (char *)v23 + v65;
            uint64_t v68 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
            break;
          default:
            uint64_t v24 = sub_253BDEDD8(&qword_269D7C890);
            if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v23, 1, v24))
            {
              uint64_t v25 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
              memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
            }
            else
            {
              uint64_t v69 = sub_253DF4BA0();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 32))(v22, v23, v69);
              _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v22, 0, 1, v24);
            }
            uint64_t v70 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
            uint64_t v71 = (char *)v22 + v70;
            uint64_t v72 = (char *)v23 + v70;
            uint64_t v73 = sub_253DEFE90();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
            break;
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v26 = sub_253DEFFE0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
        uint64_t v27 = *(int *)(_s20ActionStepEvaluationVMa(0) + 20);
        uint64_t v28 = a1 + v27;
        uint64_t v29 = (unsigned char *)(a2 + v27);
        *(unsigned char *)(a1 + v27) = *v29;
        uint64_t v30 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
        uint64_t v31 = v28 + v30;
        uint64_t v32 = &v29[v30];
        uint64_t v33 = sub_253DEFE90();
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        break;
      case 3u:
        uint64_t v34 = sub_253DEFFE0();
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 32);
        v35(a1, a2, v34);
        uint64_t v36 = _s19ValueStepEvaluationVMa(0);
        v35(a1 + *(int *)(v36 + 20), a2 + *(int *)(v36 + 20), v34);
        uint64_t v37 = *(int *)(v36 + 24);
        uint64_t v6 = a1 + v37;
        uint64_t v7 = a2 + v37;
        *(void *)(a1 + v37) = *(void *)(a2 + v37);
        uint64_t v8 = _s25ValueDisambiguationResultVMa(0);
        uint64_t v38 = *(int *)(v8 + 20);
        uint64_t v10 = (void *)(v6 + v38);
        uint64_t v11 = (const void *)(v7 + v38);
        uint64_t v12 = _s20DisambiguationResultOMa(0);
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_11;
        }
        goto LABEL_4;
      default:
        uint64_t v4 = sub_253DEFFE0();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        uint64_t v5 = *(int *)(_s18ToolStepEvaluationVMa(0) + 20);
        uint64_t v6 = a1 + v5;
        uint64_t v7 = a2 + v5;
        *(void *)(a1 + v5) = *(void *)(a2 + v5);
        uint64_t v8 = _s24ToolDisambiguationResultVMa(0);
        uint64_t v9 = *(int *)(v8 + 20);
        uint64_t v10 = (void *)(v6 + v9);
        uint64_t v11 = (const void *)(v7 + v9);
        uint64_t v12 = _s20DisambiguationResultOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_4:
          uint64_t v13 = sub_253DF4BA0();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_11:
          memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        }
        uint64_t v39 = *(int *)(v8 + 24);
        uint64_t v40 = v6 + v39;
        uint64_t v41 = v7 + v39;
        uint64_t v42 = sub_253DEFE90();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253C7F44C()
{
  uint64_t result = _s18ToolStepEvaluationVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = _s23ParameterStepEvaluationVMa(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = _s20ActionStepEvaluationVMa(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = _s19ValueStepEvaluationVMa(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_253C7F598(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return a1;
}

uint64_t sub_253C7F5F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C7F608);
}

uint64_t sub_253C7F60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C7F620);
}

uint64_t *sub_253C7F628(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFFE0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v12 = _s25ValueDisambiguationResultVMa(0);
    uint64_t v13 = *(int *)(v12 + 20);
    uint64_t v14 = &v10[v13];
    uint64_t v15 = &v11[v13];
    uint64_t v16 = _s20DisambiguationResultOMa(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_253DF4BA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    uint64_t v19 = *(int *)(v12 + 24);
    uint64_t v20 = &v10[v19];
    uint64_t v21 = &v11[v19];
    uint64_t v22 = sub_253DEFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t sub_253C7F824(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFFE0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v7 = _s25ValueDisambiguationResultVMa(0);
  uint64_t v8 = v6 + *(int *)(v7 + 20);
  _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_253DF4BA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = v6 + *(int *)(v7 + 24);
  uint64_t v11 = sub_253DEFE90();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);

  return v12(v10, v11);
}

uint64_t sub_253C7F970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v11 = _s25ValueDisambiguationResultVMa(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (const void *)(v10 + v12);
  uint64_t v15 = _s20DisambiguationResultOMa(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v17 = *(int *)(v11 + 24);
  uint64_t v18 = v9 + v17;
  uint64_t v19 = v10 + v17;
  uint64_t v20 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

uint64_t sub_253C7FB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = _s25ValueDisambiguationResultVMa(0);
  uint64_t v12 = v11;
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(v11 + 20);
    uint64_t v14 = (void *)(v9 + v13);
    uint64_t v15 = (const void *)(v10 + v13);
    sub_253C7F598(v9 + v13, (void (*)(void))_s20DisambiguationResultOMa);
    uint64_t v16 = _s20DisambiguationResultOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = *(int *)(v12 + 24);
  uint64_t v19 = v9 + v18;
  uint64_t v20 = v10 + v18;
  uint64_t v21 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  return a1;
}

uint64_t sub_253C7FCF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v11 = _s25ValueDisambiguationResultVMa(0);
  uint64_t v12 = *(int *)(v11 + 20);
  uint64_t v13 = (void *)(v9 + v12);
  uint64_t v14 = (const void *)(v10 + v12);
  uint64_t v15 = _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v17 = *(int *)(v11 + 24);
  uint64_t v18 = v9 + v17;
  uint64_t v19 = v10 + v17;
  uint64_t v20 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  return a1;
}

uint64_t sub_253C7FE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  swift_bridgeObjectRelease();
  uint64_t v11 = _s25ValueDisambiguationResultVMa(0);
  uint64_t v12 = v11;
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(v11 + 20);
    uint64_t v14 = (void *)(v9 + v13);
    uint64_t v15 = (const void *)(v10 + v13);
    sub_253C7F598(v9 + v13, (void (*)(void))_s20DisambiguationResultOMa);
    uint64_t v16 = _s20DisambiguationResultOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
  }
  uint64_t v18 = *(int *)(v12 + 24);
  uint64_t v19 = v9 + v18;
  uint64_t v20 = v10 + v18;
  uint64_t v21 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t sub_253C80068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C8007C);
}

uint64_t sub_253C8007C()
{
  sub_253C8F0EC();
  sub_253C6FFEC();
  if (*(_DWORD *)(v1 + 84) == v0)
  {
    uint64_t v2 = sub_253C8F5BC();
  }
  else
  {
    _s25ValueDisambiguationResultVMa(0);
    uint64_t v2 = sub_253C8F5B0();
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, v0, v3);
}

uint64_t sub_253C800E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C800FC);
}

uint64_t sub_253C800FC(uint64_t a1, uint64_t a2, int a3)
{
  sub_253C8F0EC();
  sub_253C6FFEC();
  if (*(_DWORD *)(v4 + 84) == a3)
  {
    sub_253C8F27C();
  }
  else
  {
    _s25ValueDisambiguationResultVMa(0);
    sub_253C8F5B0();
  }
  sub_253C8F1EC();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v6, v7, v8);
}

uint64_t sub_253C8016C()
{
  uint64_t result = sub_253DEFFE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = _s25ValueDisambiguationResultVMa(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_253C80234(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_253DEFE90();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_253C80300(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_253DEFE90();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

unsigned char *sub_253C80368(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_253DEFE90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *sub_253C803E4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_253DEFE90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *sub_253C80460(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_253DEFE90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *sub_253C804DC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = sub_253DEFE90();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_253C80558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C8056C);
}

uint64_t sub_253C8056C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *a1;
    if (v4 >= 3) {
      return v4 - 2;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_253DEFE90();
    uint64_t v9 = (uint64_t)&a1[*(int *)(a3 + 20)];
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v9, a2, v8);
  }
}

uint64_t sub_253C805EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C80600);
}

unsigned char *sub_253C80600(unsigned char *result, char a2, int a3)
{
  if (a3 == 253)
  {
    *uint64_t result = a2 + 2;
  }
  else
  {
    sub_253DEFE90();
    sub_253C8F1EC();
    return (unsigned char *)_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v3, v4, v5, v6);
  }
  return result;
}

uint64_t sub_253C80678()
{
  uint64_t result = sub_253DEFE90();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_253C80710(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFFE0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v11 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
    uint64_t v12 = &v9[v11];
    uint64_t v13 = &v10[v11];
    uint64_t v14 = sub_253DEFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_253C80834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = v5 + *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  uint64_t v7 = sub_253DEFE90();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_253C808EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + v7) = *v9;
  uint64_t v10 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_253DEFE90();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

uint64_t sub_253C809C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + v7) = *v9;
  uint64_t v10 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_253DEFE90();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_253C80A94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + v7) = *v9;
  uint64_t v10 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_253DEFE90();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t sub_253C80B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (unsigned char *)(a2 + v7);
  *(unsigned char *)(a1 + v7) = *v9;
  uint64_t v10 = *(int *)(_s24ActionConfirmationResultVMa(0) + 20);
  uint64_t v11 = v8 + v10;
  uint64_t v12 = &v9[v10];
  uint64_t v13 = sub_253DEFE90();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_253C80C3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C80C50);
}

uint64_t sub_253C80C50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253C819E4(a1, a2, a3, MEMORY[0x263F4BF98], _s24ActionConfirmationResultVMa);
}

uint64_t sub_253C80C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C80C90);
}

uint64_t sub_253C80C90(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_253C81AA0(a1, a2, a3, a4, MEMORY[0x263F4BF98], (void (*)(void))_s24ActionConfirmationResultVMa);
}

uint64_t sub_253C80CBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253C81B54(a1, a2, a3, MEMORY[0x263F4BF98], _s24ActionConfirmationResultVMa);
}

void sub_253C80CE8()
{
  sub_253C8F550();
  sub_253C6FFEC();
  int v4 = *(_DWORD *)(v3 + 80);
  *uint64_t v6 = *v5;
  if ((v4 & 0x20000) != 0)
  {
    swift_retain();
  }
  else
  {
    uint64_t v7 = v2;
    sub_253C8F388();
    sub_253C8F34C();
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      sub_253DF4BA0();
      sub_253BDF7F0();
      uint64_t v10 = sub_253C8F1B0();
      v11(v10);
      sub_253C8F158();
    }
    else
    {
      sub_253C8F318(EnumCaseMultiPayload, v9, *(void *)(*(void *)(v1 - 8) + 64));
    }
    sub_253C8F04C();
    sub_253BDF7F0();
    (*(void (**)(uint64_t, uint64_t))(v12 + 16))(v7, v0);
  }
  sub_253C8F44C();
}

uint64_t sub_253C80DE4()
{
  sub_253C8F388();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0 + *(int *)(v1 + 20);
  _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253DF4BA0();
    sub_253BDF7F0();
    (*(void (**)(uint64_t))(v3 + 8))(v2);
  }
  uint64_t v4 = v0 + *(int *)(v1 + 24);
  sub_253DEFE90();
  sub_253BDF7F0();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);

  return v7(v4, v5);
}

void sub_253C80EAC()
{
  sub_253C8F550();
  sub_253C8F388();
  *uint64_t v2 = *v1;
  sub_253C8F34C();
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_253DF4BA0();
    sub_253BDF7F0();
    uint64_t v5 = sub_253C8F1B0();
    v6(v5);
    sub_253C8F158();
  }
  else
  {
    sub_253C8F318(EnumCaseMultiPayload, v4, *(void *)(*(void *)(v0 - 8) + 64));
  }
  sub_253C8F04C();
  sub_253BDF7F0();
  sub_253C8F06C();
  v7();
  sub_253C8F44C();
}

uint64_t sub_253C80F74()
{
  sub_253C8F5DC();
  *uint64_t v2 = v3;
  uint64_t v4 = sub_253C8F204();
  if (v4 == 1)
  {
    sub_253DF4BA0();
    sub_253BDF7F0();
    uint64_t v6 = sub_253C8F4A0();
    v7(v6);
    sub_253C8F158();
  }
  else
  {
    sub_253C8F318(v4, v5, *(void *)(*(void *)(v1 - 8) + 64));
  }
  sub_253C8F04C();
  sub_253BDF7F0();
  sub_253C8F190();
  v8();
  return v0;
}

uint64_t sub_253C81034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C81048);
}

uint64_t sub_253C8104C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    _s20DisambiguationResultOMa(0);
    sub_253C6FFEC();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = sub_253DEFE90();
      uint64_t v11 = *(int *)(a3 + 24);
    }
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1 + v11, a2, v10);
  }
}

uint64_t sub_253C810FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C81110);
}

void *sub_253C81114(void *result, int a2, int a3)
{
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    _s20DisambiguationResultOMa(0);
    sub_253C6FFEC();
    if (*(_DWORD *)(v4 + 84) != a3) {
      sub_253DEFE90();
    }
    sub_253C8F1EC();
    return (void *)_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v6, v7, v8);
  }
  return result;
}

uint64_t sub_253C811BC()
{
  uint64_t result = _s20DisambiguationResultOMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_253DEFE90();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_253C81294(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DF4BA0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253DEFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_253C813A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DF4BA0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = sub_253DEFE90();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_253C8144C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF4BA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_253C8150C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF4BA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_253C815D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF4BA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_253C81690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF4BA0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_253C81750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C81764);
}

uint64_t sub_253C81764(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253DF4BA0();
  sub_253C6FFEC();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    uint64_t v7 = sub_253C8F5BC();
  }
  else
  {
    if (a2 == 253)
    {
      unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
      if (v9 >= 3) {
        return v9 - 2;
      }
      else {
        return 0;
      }
    }
    sub_253DEFE90();
    uint64_t v7 = sub_253C8F5B0();
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v7, a2, v8);
}

uint64_t sub_253C81808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C8181C);
}

void sub_253C8181C(uint64_t a1, char a2, int a3, uint64_t a4)
{
  sub_253DF4BA0();
  sub_253C6FFEC();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_253C8F27C();
  }
  else
  {
    if (a3 == 253)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 2;
      return;
    }
    sub_253DEFE90();
    sub_253C8F5B0();
  }
  sub_253C8F1EC();

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, v10, v11, v12);
}

uint64_t sub_253C818BC()
{
  uint64_t result = sub_253DF4BA0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_253DEFE90();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_253C819A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C819B8);
}

uint64_t sub_253C819B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253C819E4(a1, a2, a3, MEMORY[0x263F80508], MEMORY[0x263F07508]);
}

uint64_t sub_253C819E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v9 = sub_253C8F5C8();
  v10(v9);
  sub_253C6FFEC();
  if (*(_DWORD *)(v11 + 84) == v5)
  {
    uint64_t v12 = sub_253C8F5BC();
  }
  else
  {
    uint64_t v13 = a5(0);
    uint64_t v12 = v6 + *(int *)(a3 + 20);
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v12, v5, v13);
}

uint64_t sub_253C81A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C81A74);
}

uint64_t sub_253C81A74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_253C81AA0(a1, a2, a3, a4, MEMORY[0x263F80508], MEMORY[0x263F07508]);
}

uint64_t sub_253C81AA0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  uint64_t v8 = sub_253C8F5C8();
  v9(v8);
  sub_253C6FFEC();
  if (*(_DWORD *)(v10 + 84) == a3) {
    sub_253C8F27C();
  }
  else {
    a6(0);
  }
  sub_253C8F1EC();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v11, v12, v13, v14);
}

uint64_t sub_253C81B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253C81B54(a1, a2, a3, MEMORY[0x263F80508], MEMORY[0x263F07508]);
}

uint64_t sub_253C81B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result = a4(319);
  if (v7 <= 0x3F)
  {
    uint64_t result = a5(319);
    if (v8 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_253C81C28()
{
  sub_253C8F388();
  sub_253C6FFEC();
  int v3 = *(_DWORD *)(v2 + 80);
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = *v1;
    *uint64_t v0 = *v1;
    uint64_t v0 = (uint64_t *)(v6 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    sub_253DF4BA0();
    sub_253BDF7F0();
    sub_253C8F06C();
    v4();
    sub_253C8F108();
    sub_253BDF7F0();
    sub_253C8F06C();
    v5();
  }
  return v0;
}

uint64_t sub_253C81CE4()
{
  sub_253C8F1DC();
  sub_253DF4BA0();
  sub_253BDF7F0();
  sub_253BEFBCC();
  v2();
  uint64_t v3 = v1 + *(int *)(v0 + 20);
  sub_253DEFE90();
  sub_253BDF7F0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);

  return v6(v3, v4);
}

uint64_t sub_253C81D70()
{
  sub_253C8F120();
  sub_253BDF7F0();
  sub_253C8F06C();
  v1();
  sub_253C8F108();
  sub_253BDF7F0();
  sub_253C8F06C();
  v2();
  return v0;
}

uint64_t sub_253C81DF0()
{
  sub_253C8F120();
  sub_253BDF7F0();
  sub_253C8F2F0();
  v1();
  sub_253C8F108();
  sub_253BDF7F0();
  sub_253C8F2F0();
  v2();
  return v0;
}

uint64_t sub_253C81E70()
{
  sub_253C8F120();
  sub_253BDF7F0();
  sub_253C8F190();
  v1();
  sub_253C8F108();
  sub_253BDF7F0();
  sub_253C8F190();
  v2();
  return v0;
}

uint64_t sub_253C81EF0()
{
  sub_253C8F120();
  sub_253BDF7F0();
  sub_253C8F2E0();
  v1();
  sub_253C8F108();
  sub_253BDF7F0();
  sub_253C8F2E0();
  v2();
  return v0;
}

uint64_t sub_253C81F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C81F84);
}

uint64_t sub_253C81F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253C819E4(a1, a2, a3, MEMORY[0x263F80508], MEMORY[0x263F07508]);
}

uint64_t sub_253C81FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C81FC4);
}

uint64_t sub_253C81FC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_253C81AA0(a1, a2, a3, a4, MEMORY[0x263F80508], MEMORY[0x263F07508]);
}

uint64_t *sub_253C81FF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253BDEDD8(&qword_269D7C890);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_253DF4BA0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = sub_253DEFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t sub_253C8215C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_269D7C890);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v4))
  {
    uint64_t v5 = sub_253DF4BA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = sub_253DEFE90();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

char *sub_253C82224(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C890);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_253DF4BA0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_253DEFE90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_253C82340(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C890);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v16 = sub_253DF4BA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(a1, a2, v16);
      goto LABEL_7;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C890);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v9 = sub_253DF4BA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_253DEFE90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

char *sub_253C824D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C890);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_253DF4BA0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_253DEFE90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_253C825EC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C890);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v16 = sub_253DF4BA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(a1, a2, v16);
      goto LABEL_7;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C890);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v9 = sub_253DF4BA0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_253DEFE90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_253C8277C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C82790);
}

uint64_t sub_253C82790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253C819E4(a1, a2, a3, (uint64_t)_s25ParameterNeedsValueResultV16NeedsValueResultOMa, MEMORY[0x263F07508]);
}

uint64_t sub_253C827BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C827D0);
}

uint64_t sub_253C827D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_253C81AA0(a1, a2, a3, a4, (uint64_t)_s25ParameterNeedsValueResultV16NeedsValueResultOMa, MEMORY[0x263F07508]);
}

uint64_t sub_253C827FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253C81B54(a1, a2, a3, _s25ParameterNeedsValueResultV16NeedsValueResultOMa, MEMORY[0x263F07508]);
}

uint64_t *sub_253C82828(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_253BDEDD8(&qword_269D7C890);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_253DF4BA0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_253C82930(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7C890);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = sub_253DF4BA0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_253C829C0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C890);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_253C82A8C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C890);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C890);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_253DF4BA0();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_253C82BCC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C890);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_253C82C98(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C890);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C890);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_253DF4BA0();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_253C82DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C82DEC);
}

uint64_t sub_253C82DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_269D7C890);
  unsigned int v5 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_253C82E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C82E4C);
}

uint64_t sub_253C82E4C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v4 = (a2 + 1);
  }
  else {
    uint64_t v4 = 0;
  }
  sub_253BDEDD8(&qword_269D7C890);
  uint64_t v5 = sub_253C8F27C();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v4, a3, v6);
}

uint64_t sub_253C82EA8(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7C890);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
}

uint64_t sub_253C82EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_269D7C890);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v4);
}

uint64_t sub_253C82F40()
{
  uint64_t result = sub_253DF4BA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_253C82FB8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
        uint64_t v11 = (char *)a1 + v10;
        uint64_t v12 = (char *)a2 + v10;
        uint64_t v13 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        break;
      case 2u:
        uint64_t v14 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        break;
      case 3u:
        uint64_t v19 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        uint64_t v20 = _s27ParameterConfirmationResultVMa(0);
        *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
        uint64_t v21 = *(int *)(v20 + 24);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v25 = _s29ParameterDisambiguationResultVMa(0);
        uint64_t v26 = *(int *)(v25 + 20);
        uint64_t v27 = (char *)a1 + v26;
        uint64_t v28 = (char *)a2 + v26;
        uint64_t v29 = _s20DisambiguationResultOMa(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v30 = sub_253DF4BA0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v27, v28, v30);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        }
        uint64_t v31 = *(int *)(v25 + 24);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        break;
      default:
        uint64_t v6 = sub_253BDEDD8(&qword_269D7C890);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
        {
          uint64_t v7 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        }
        else
        {
          uint64_t v35 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
        }
        uint64_t v36 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253C83480(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = sub_253BDEDD8(&qword_269D7C890);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v3))
      {
        uint64_t v4 = sub_253DF4BA0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      }
      uint64_t found = _s25ParameterNeedsValueResultVMa(0);
      goto LABEL_7;
    case 1:
      uint64_t v6 = sub_253DF4BA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      uint64_t found = _s25ParameterNotAllowedResultVMa(0);
      goto LABEL_7;
    case 2:
      uint64_t v7 = sub_253DF4BA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      uint64_t found = _s33ParameterCandidatesNotFoundResultVMa(0);
LABEL_7:
      uint64_t v8 = *(int *)(found + 20);
      goto LABEL_12;
    case 3:
      uint64_t v9 = sub_253DF4BA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      uint64_t v8 = *(int *)(_s27ParameterConfirmationResultVMa(0) + 24);
      goto LABEL_12;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v10 = _s29ParameterDisambiguationResultVMa(0);
      uint64_t v11 = a1 + *(int *)(v10 + 20);
      _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = sub_253DF4BA0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      }
      uint64_t v8 = *(int *)(v10 + 24);
LABEL_12:
      uint64_t v13 = a1 + v8;
      uint64_t v14 = sub_253DEFE90();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
      uint64_t result = v15(v13, v14);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_253C836F0(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      break;
    case 2u:
      uint64_t v11 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      break;
    case 3u:
      uint64_t v16 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      uint64_t v17 = _s27ParameterConfirmationResultVMa(0);
      *((unsigned char *)a1 + *(int *)(v17 + 20)) = *((unsigned char *)a2 + *(int *)(v17 + 20));
      uint64_t v18 = *(int *)(v17 + 24);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      break;
    case 4u:
      *a1 = *a2;
      uint64_t v22 = _s29ParameterDisambiguationResultVMa(0);
      uint64_t v23 = *(int *)(v22 + 20);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = _s20DisambiguationResultOMa(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v27 = sub_253DF4BA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v24, v25, v27);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      uint64_t v28 = *(int *)(v22 + 24);
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      break;
    default:
      uint64_t v4 = sub_253BDEDD8(&qword_269D7C890);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v4))
      {
        uint64_t v5 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
      }
      else
      {
        uint64_t v32 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v4);
      }
      uint64_t v33 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_253C83B68(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_253C7F598((uint64_t)a1, (void (*)(void))_s19ParameterStepResultOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        break;
      case 2u:
        uint64_t v11 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
        break;
      case 3u:
        uint64_t v16 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = _s27ParameterConfirmationResultVMa(0);
        *((unsigned char *)a1 + *(int *)(v17 + 20)) = *((unsigned char *)a2 + *(int *)(v17 + 20));
        uint64_t v18 = *(int *)(v17 + 24);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v22 = _s29ParameterDisambiguationResultVMa(0);
        uint64_t v23 = *(int *)(v22 + 20);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = _s20DisambiguationResultOMa(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v27 = sub_253DF4BA0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v24, v25, v27);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        }
        uint64_t v28 = *(int *)(v22 + 24);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
        break;
      default:
        uint64_t v4 = sub_253BDEDD8(&qword_269D7C890);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v4))
        {
          uint64_t v5 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        }
        else
        {
          uint64_t v32 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v4);
        }
        uint64_t v33 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_253C84004(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      break;
    case 2u:
      uint64_t v11 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      break;
    case 3u:
      uint64_t v16 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      uint64_t v17 = _s27ParameterConfirmationResultVMa(0);
      *((unsigned char *)a1 + *(int *)(v17 + 20)) = *((unsigned char *)a2 + *(int *)(v17 + 20));
      uint64_t v18 = *(int *)(v17 + 24);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      break;
    case 4u:
      *a1 = *a2;
      uint64_t v22 = _s29ParameterDisambiguationResultVMa(0);
      uint64_t v23 = *(int *)(v22 + 20);
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v27 = sub_253DF4BA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      uint64_t v28 = *(int *)(v22 + 24);
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      uint64_t v31 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      break;
    default:
      uint64_t v4 = sub_253BDEDD8(&qword_269D7C890);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v4))
      {
        uint64_t v5 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
      }
      else
      {
        uint64_t v32 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v4);
      }
      uint64_t v33 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
      uint64_t v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_253C84474(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_253C7F598((uint64_t)a1, (void (*)(void))_s19ParameterStepResultOMa);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        break;
      case 2u:
        uint64_t v11 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
        break;
      case 3u:
        uint64_t v16 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        uint64_t v17 = _s27ParameterConfirmationResultVMa(0);
        *((unsigned char *)a1 + *(int *)(v17 + 20)) = *((unsigned char *)a2 + *(int *)(v17 + 20));
        uint64_t v18 = *(int *)(v17 + 24);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 4u:
        *a1 = *a2;
        uint64_t v22 = _s29ParameterDisambiguationResultVMa(0);
        uint64_t v23 = *(int *)(v22 + 20);
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = _s20DisambiguationResultOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v27 = sub_253DF4BA0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        }
        uint64_t v28 = *(int *)(v22 + 24);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        break;
      default:
        uint64_t v4 = sub_253BDEDD8(&qword_269D7C890);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v4))
        {
          uint64_t v5 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
          memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
        }
        else
        {
          uint64_t v32 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v4);
        }
        uint64_t v33 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
        uint64_t v34 = (char *)a1 + v33;
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253C84908()
{
  uint64_t result = _s25ParameterNeedsValueResultVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = _s25ParameterNotAllowedResultVMa(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = _s33ParameterCandidatesNotFoundResultVMa(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = _s27ParameterConfirmationResultVMa(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = _s29ParameterDisambiguationResultVMa(319);
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_253C84A80(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFFE0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + a3[5]), (uint64_t *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253DF2D40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = a3[7];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    _s19ParameterStepResultOMa(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v19 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v14, v15, v19);
        uint64_t v20 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
        uint64_t v21 = (char *)v14 + v20;
        uint64_t v22 = (char *)v15 + v20;
        uint64_t v23 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        break;
      case 2u:
        uint64_t v24 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v14, v15, v24);
        uint64_t v25 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
        uint64_t v26 = (char *)v14 + v25;
        uint64_t v27 = (char *)v15 + v25;
        uint64_t v28 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        break;
      case 3u:
        uint64_t v29 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v14, v15, v29);
        uint64_t v30 = _s27ParameterConfirmationResultVMa(0);
        *((unsigned char *)v14 + *(int *)(v30 + 20)) = *((unsigned char *)v15 + *(int *)(v30 + 20));
        uint64_t v31 = *(int *)(v30 + 24);
        uint64_t v32 = (char *)v14 + v31;
        uint64_t v33 = (char *)v15 + v31;
        uint64_t v34 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        break;
      case 4u:
        void *v14 = *v15;
        uint64_t v35 = _s29ParameterDisambiguationResultVMa(0);
        uint64_t v36 = *(int *)(v35 + 20);
        uint64_t v37 = (char *)v14 + v36;
        uint64_t v38 = (char *)v15 + v36;
        uint64_t v39 = _s20DisambiguationResultOMa(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v40 = sub_253DF4BA0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v37, v38, v40);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
        }
        uint64_t v41 = *(int *)(v35 + 24);
        uint64_t v42 = (char *)v14 + v41;
        uint64_t v43 = (char *)v15 + v41;
        uint64_t v44 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
        break;
      default:
        uint64_t v16 = sub_253BDEDD8(&qword_269D7C890);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v17 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
          memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          uint64_t v45 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v14, v15, v45);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v14, 0, 1, v16);
        }
        uint64_t v46 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
        uint64_t v47 = (char *)v14 + v46;
        uint64_t v48 = (char *)v15 + v46;
        uint64_t v49 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253C8500C(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253DEFFE0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = sub_253DF2D40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  _s19ParameterStepResultOMa(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v10 = sub_253BDEDD8(&qword_269D7C890);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v8, 1, v10))
      {
        uint64_t v11 = sub_253DF4BA0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v8, v11);
      }
      uint64_t found = _s25ParameterNeedsValueResultVMa(0);
      goto LABEL_7;
    case 1:
      uint64_t v13 = sub_253DF4BA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v8, v13);
      uint64_t found = _s25ParameterNotAllowedResultVMa(0);
      goto LABEL_7;
    case 2:
      uint64_t v14 = sub_253DF4BA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v8, v14);
      uint64_t found = _s33ParameterCandidatesNotFoundResultVMa(0);
LABEL_7:
      uint64_t v15 = *(int *)(found + 20);
      goto LABEL_12;
    case 3:
      uint64_t v16 = sub_253DF4BA0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v8, v16);
      uint64_t v15 = *(int *)(_s27ParameterConfirmationResultVMa(0) + 24);
      goto LABEL_12;
    case 4:
      swift_bridgeObjectRelease();
      uint64_t v17 = _s29ParameterDisambiguationResultVMa(0);
      uint64_t v18 = v8 + *(int *)(v17 + 20);
      _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v19 = sub_253DF4BA0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      }
      uint64_t v15 = *(int *)(v17 + 24);
LABEL_12:
      uint64_t v20 = v8 + v15;
      uint64_t v21 = sub_253DEFE90();
      uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
      uint64_t result = v22(v20, v21);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253C85338(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DF2D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  _s19ParameterStepResultOMa(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v13, v14, v17);
      uint64_t v18 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
      uint64_t v19 = (char *)v13 + v18;
      uint64_t v20 = (char *)v14 + v18;
      uint64_t v21 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      break;
    case 2u:
      uint64_t v22 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v13, v14, v22);
      uint64_t v23 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
      uint64_t v24 = (char *)v13 + v23;
      uint64_t v25 = (char *)v14 + v23;
      uint64_t v26 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      break;
    case 3u:
      uint64_t v27 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v13, v14, v27);
      uint64_t v28 = _s27ParameterConfirmationResultVMa(0);
      *((unsigned char *)v13 + *(int *)(v28 + 20)) = *((unsigned char *)v14 + *(int *)(v28 + 20));
      uint64_t v29 = *(int *)(v28 + 24);
      uint64_t v30 = (char *)v13 + v29;
      uint64_t v31 = (char *)v14 + v29;
      uint64_t v32 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      break;
    case 4u:
      *uint64_t v13 = *v14;
      uint64_t v33 = _s29ParameterDisambiguationResultVMa(0);
      uint64_t v34 = *(int *)(v33 + 20);
      uint64_t v35 = (char *)v13 + v34;
      uint64_t v36 = (char *)v14 + v34;
      uint64_t v37 = _s20DisambiguationResultOMa(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v38 = sub_253DF4BA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v35, v36, v38);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      uint64_t v39 = *(int *)(v33 + 24);
      uint64_t v40 = (char *)v13 + v39;
      uint64_t v41 = (char *)v14 + v39;
      uint64_t v42 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
      break;
    default:
      uint64_t v15 = sub_253BDEDD8(&qword_269D7C890);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v43 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v13, v14, v43);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v44 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
      uint64_t v45 = (char *)v13 + v44;
      uint64_t v46 = (char *)v14 + v44;
      uint64_t v47 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253C85874(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DF2D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v12 = a3[7];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_253C7F598(a1 + v12, (void (*)(void))_s19ParameterStepResultOMa);
    _s19ParameterStepResultOMa(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v13, v14, v17);
        uint64_t v18 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
        uint64_t v19 = (char *)v13 + v18;
        uint64_t v20 = (char *)v14 + v18;
        uint64_t v21 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        break;
      case 2u:
        uint64_t v22 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v13, v14, v22);
        uint64_t v23 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
        uint64_t v24 = (char *)v13 + v23;
        uint64_t v25 = (char *)v14 + v23;
        uint64_t v26 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        break;
      case 3u:
        uint64_t v27 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v13, v14, v27);
        uint64_t v28 = _s27ParameterConfirmationResultVMa(0);
        *((unsigned char *)v13 + *(int *)(v28 + 20)) = *((unsigned char *)v14 + *(int *)(v28 + 20));
        uint64_t v29 = *(int *)(v28 + 24);
        uint64_t v30 = (char *)v13 + v29;
        uint64_t v31 = (char *)v14 + v29;
        uint64_t v32 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
        break;
      case 4u:
        *uint64_t v13 = *v14;
        uint64_t v33 = _s29ParameterDisambiguationResultVMa(0);
        uint64_t v34 = *(int *)(v33 + 20);
        uint64_t v35 = (char *)v13 + v34;
        uint64_t v36 = (char *)v14 + v34;
        uint64_t v37 = _s20DisambiguationResultOMa(0);
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v38 = sub_253DF4BA0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v35, v36, v38);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        uint64_t v39 = *(int *)(v33 + 24);
        uint64_t v40 = (char *)v13 + v39;
        uint64_t v41 = (char *)v14 + v39;
        uint64_t v42 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
        break;
      default:
        uint64_t v15 = sub_253BDEDD8(&qword_269D7C890);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v14, 1, v15))
        {
          uint64_t v16 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
          memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          uint64_t v43 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v13, v14, v43);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v13, 0, 1, v15);
        }
        uint64_t v44 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
        uint64_t v45 = (char *)v13 + v44;
        uint64_t v46 = (char *)v14 + v44;
        uint64_t v47 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253C85DD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DF2D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  _s19ParameterStepResultOMa(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v17 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
      uint64_t v18 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
      uint64_t v19 = (char *)v13 + v18;
      uint64_t v20 = (char *)v14 + v18;
      uint64_t v21 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      break;
    case 2u:
      uint64_t v22 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v13, v14, v22);
      uint64_t v23 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
      uint64_t v24 = (char *)v13 + v23;
      uint64_t v25 = (char *)v14 + v23;
      uint64_t v26 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      break;
    case 3u:
      uint64_t v27 = sub_253DF4BA0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 32))(v13, v14, v27);
      uint64_t v28 = _s27ParameterConfirmationResultVMa(0);
      *((unsigned char *)v13 + *(int *)(v28 + 20)) = *((unsigned char *)v14 + *(int *)(v28 + 20));
      uint64_t v29 = *(int *)(v28 + 24);
      uint64_t v30 = (char *)v13 + v29;
      uint64_t v31 = (char *)v14 + v29;
      uint64_t v32 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      break;
    case 4u:
      *uint64_t v13 = *v14;
      uint64_t v33 = _s29ParameterDisambiguationResultVMa(0);
      uint64_t v34 = *(int *)(v33 + 20);
      uint64_t v35 = (char *)v13 + v34;
      uint64_t v36 = (char *)v14 + v34;
      uint64_t v37 = _s20DisambiguationResultOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v38 = sub_253DF4BA0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      uint64_t v39 = *(int *)(v33 + 24);
      uint64_t v40 = (char *)v13 + v39;
      uint64_t v41 = (char *)v14 + v39;
      uint64_t v42 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
      break;
    default:
      uint64_t v15 = sub_253BDEDD8(&qword_269D7C890);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v14, 1, v15))
      {
        uint64_t v16 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
        memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        uint64_t v43 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 32))(v13, v14, v43);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v13, 0, 1, v15);
      }
      uint64_t v44 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
      uint64_t v45 = (char *)v13 + v44;
      uint64_t v46 = (char *)v14 + v44;
      uint64_t v47 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253C86300(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DF2D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  if (a1 != a2)
  {
    uint64_t v12 = a3[7];
    uint64_t v13 = (void *)(a1 + v12);
    uint64_t v14 = (void *)(a2 + v12);
    sub_253C7F598(a1 + v12, (void (*)(void))_s19ParameterStepResultOMa);
    _s19ParameterStepResultOMa(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v17 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(v13, v14, v17);
        uint64_t v18 = *(int *)(_s25ParameterNotAllowedResultVMa(0) + 20);
        uint64_t v19 = (char *)v13 + v18;
        uint64_t v20 = (char *)v14 + v18;
        uint64_t v21 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 2u:
        uint64_t v22 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 32))(v13, v14, v22);
        uint64_t v23 = *(int *)(_s33ParameterCandidatesNotFoundResultVMa(0) + 20);
        uint64_t v24 = (char *)v13 + v23;
        uint64_t v25 = (char *)v14 + v23;
        uint64_t v26 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        break;
      case 3u:
        uint64_t v27 = sub_253DF4BA0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 32))(v13, v14, v27);
        uint64_t v28 = _s27ParameterConfirmationResultVMa(0);
        *((unsigned char *)v13 + *(int *)(v28 + 20)) = *((unsigned char *)v14 + *(int *)(v28 + 20));
        uint64_t v29 = *(int *)(v28 + 24);
        uint64_t v30 = (char *)v13 + v29;
        uint64_t v31 = (char *)v14 + v29;
        uint64_t v32 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        break;
      case 4u:
        *uint64_t v13 = *v14;
        uint64_t v33 = _s29ParameterDisambiguationResultVMa(0);
        uint64_t v34 = *(int *)(v33 + 20);
        uint64_t v35 = (char *)v13 + v34;
        uint64_t v36 = (char *)v14 + v34;
        uint64_t v37 = _s20DisambiguationResultOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v38 = sub_253DF4BA0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
        }
        uint64_t v39 = *(int *)(v33 + 24);
        uint64_t v40 = (char *)v13 + v39;
        uint64_t v41 = (char *)v14 + v39;
        uint64_t v42 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
        break;
      default:
        uint64_t v15 = sub_253BDEDD8(&qword_269D7C890);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v14, 1, v15))
        {
          uint64_t v16 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
          memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          uint64_t v43 = sub_253DF4BA0();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 32))(v13, v14, v43);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v13, 0, 1, v15);
        }
        uint64_t v44 = *(int *)(_s25ParameterNeedsValueResultVMa(0) + 20);
        uint64_t v45 = (char *)v13 + v44;
        uint64_t v46 = (char *)v14 + v44;
        uint64_t v47 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253C86850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C86864);
}

uint64_t sub_253C86864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253C8F0EC();
  sub_253C6FFEC();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_253C8F5BC();
  }
  else
  {
    sub_253DF2D40();
    sub_253C6FFEC();
    if (*(_DWORD *)(v10 + 84) == v3)
    {
      uint64_t v8 = v9;
      uint64_t v11 = *(int *)(a3 + 24);
    }
    else
    {
      uint64_t v8 = _s19ParameterStepResultOMa(0);
      uint64_t v11 = *(int *)(a3 + 28);
    }
    uint64_t v7 = v4 + v11;
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v7, v3, v8);
}

uint64_t sub_253C868FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C86910);
}

uint64_t sub_253C86910(uint64_t a1, uint64_t a2, int a3)
{
  sub_253C8F0EC();
  sub_253C6FFEC();
  if (*(_DWORD *)(v4 + 84) == a3)
  {
    sub_253C8F27C();
  }
  else
  {
    sub_253DF2D40();
    sub_253C6FFEC();
    if (*(_DWORD *)(v5 + 84) != a3) {
      _s19ParameterStepResultOMa(0);
    }
  }
  sub_253C8F1EC();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v6, v7, v8, v9);
}

uint64_t sub_253C869AC()
{
  uint64_t result = sub_253DEFFE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_253DF2D40();
    if (v2 <= 0x3F)
    {
      uint64_t result = _s19ParameterStepResultOMa(319);
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_253C86AB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_253DF4BA0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_253C86BAC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_253DF4BA0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_253C86C28(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_253C86CE0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253C7F598((uint64_t)a1, (void (*)(void))_s20DisambiguationResultOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_253C86DBC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_253C86E74(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253C7F598((uint64_t)a1, (void (*)(void))_s20DisambiguationResultOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_253C86F50()
{
  uint64_t result = sub_253DF4BA0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_253C86FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253C8F388();
  *uint64_t v3 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v3 != v4)
  {
    sub_253C7F598((uint64_t)v3 + *(int *)(a3 + 20), (void (*)(void))_s20DisambiguationResultOMa);
    uint64_t v8 = sub_253C8F204();
    if (v8 == 1)
    {
      sub_253DF4BA0();
      sub_253BDF7F0();
      uint64_t v10 = sub_253C8F1B0();
      v11(v10);
      sub_253C8F158();
    }
    else
    {
      sub_253C8F318(v8, v9, *(void *)(*(void *)(v5 - 8) + 64));
    }
  }
  sub_253C8F04C();
  sub_253BDF7F0();
  sub_253C8F2F0();
  v12();
  return v3;
}

void *sub_253C870E4()
{
  sub_253C8F5DC();
  *uint64_t v0 = v4;
  swift_bridgeObjectRelease();
  if (v0 != v1)
  {
    sub_253C7F598((uint64_t)v0 + *(int *)(v2 + 20), (void (*)(void))_s20DisambiguationResultOMa);
    uint64_t v5 = sub_253C8F204();
    if (v5 == 1)
    {
      sub_253DF4BA0();
      sub_253BDF7F0();
      uint64_t v7 = sub_253C8F4A0();
      v8(v7);
      sub_253C8F158();
    }
    else
    {
      sub_253C8F318(v5, v6, *(void *)(*(void *)(v3 - 8) + 64));
    }
  }
  sub_253C8F04C();
  sub_253BDF7F0();
  sub_253C8F2E0();
  v9();
  return v0;
}

uint64_t sub_253C871D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C871E4);
}

uint64_t sub_253C871E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C871FC);
}

uint64_t *sub_253C87200(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFFE0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v11 = _s24ToolDisambiguationResultVMa(0);
    uint64_t v12 = *(int *)(v11 + 20);
    uint64_t v13 = &v9[v12];
    uint64_t v14 = &v10[v12];
    uint64_t v15 = _s20DisambiguationResultOMa(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_253DF4BA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    uint64_t v18 = *(int *)(v11 + 24);
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = sub_253DEFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  }
  return a1;
}

uint64_t sub_253C873DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v6 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v7 = v5 + *(int *)(v6 + 20);
  _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_253DF4BA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v5 + *(int *)(v6 + 24);
  uint64_t v10 = sub_253DEFE90();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

uint64_t sub_253C87504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v10 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = _s20DisambiguationResultOMa(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = *(int *)(v10 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

uint64_t sub_253C87690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v11 = v10;
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = (void *)(v8 + v12);
    uint64_t v14 = (const void *)(v9 + v12);
    sub_253C7F598(v8 + v12, (void (*)(void))_s20DisambiguationResultOMa);
    uint64_t v15 = _s20DisambiguationResultOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v17 = *(int *)(v11 + 24);
  uint64_t v18 = v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

uint64_t sub_253C87848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v10 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_253DF4BA0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v16 = *(int *)(v10 + 24);
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

uint64_t sub_253C879CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v11 = v10;
  if (a1 != a2)
  {
    uint64_t v12 = *(int *)(v10 + 20);
    uint64_t v13 = (void *)(v8 + v12);
    uint64_t v14 = (const void *)(v9 + v12);
    sub_253C7F598(v8 + v12, (void (*)(void))_s20DisambiguationResultOMa);
    uint64_t v15 = _s20DisambiguationResultOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = sub_253DF4BA0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v17 = *(int *)(v11 + 24);
  uint64_t v18 = v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t sub_253C87B7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C87B90);
}

uint64_t sub_253C87B90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253C8F0EC();
  sub_253C6FFEC();
  if (*(_DWORD *)(v7 + 84) != v3)
  {
    _s14ToolStepResultOMa(0);
    v4 += *(int *)(a3 + 20);
    uint64_t v6 = _s24ToolDisambiguationResultVMa(0);
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v4, v3, v6);
}

uint64_t _s14ToolStepResultOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2556C8);
}

uint64_t sub_253C87C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C87C38);
}

uint64_t sub_253C87C38(uint64_t a1, uint64_t a2, int a3)
{
  sub_253C8F0EC();
  sub_253C6FFEC();
  if (*(_DWORD *)(v4 + 84) != a3)
  {
    _s14ToolStepResultOMa(0);
    _s24ToolDisambiguationResultVMa(0);
  }
  sub_253C8F27C();
  sub_253C8F1EC();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v6, v7, v8);
}

uint64_t sub_253C87CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253C81B54(a1, a2, a3, MEMORY[0x263F4BF98], _s24ToolDisambiguationResultVMa);
}

uint64_t *sub_253C87CD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v6 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a1;
    uint64_t v7 = _s24ToolDisambiguationResultVMa(0);
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = (char *)v6 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = _s20DisambiguationResultOMa(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = sub_253DF4BA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v9, v10, v12);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    uint64_t v13 = *(int *)(v7 + 24);
    uint64_t v14 = (char *)v6 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_253DEFE90();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v6;
}

uint64_t sub_253C87E60(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v3 = a1 + *(int *)(v2 + 20);
  _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_253DF4BA0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  }
  uint64_t v5 = a1 + *(int *)(v2 + 24);
  uint64_t v6 = sub_253DEFE90();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

void *sub_253C87F44(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = _s20DisambiguationResultOMa(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_253DF4BA0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  uint64_t v10 = *(int *)(v4 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_253DEFE90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  return a1;
}

void *sub_253C88084(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v5 = v4;
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(v4 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_253C7F598((uint64_t)a1 + v6, (void (*)(void))_s20DisambiguationResultOMa);
    uint64_t v9 = _s20DisambiguationResultOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_253DF4BA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(v5 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253DEFE90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

void *sub_253C881E8(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v4 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v5 = *(int *)(v4 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = _s20DisambiguationResultOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_253DF4BA0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  uint64_t v10 = *(int *)(v4 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_253DEFE90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *sub_253C88318(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v5 = v4;
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(v4 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_253C7F598((uint64_t)a1 + v6, (void (*)(void))_s20DisambiguationResultOMa);
    uint64_t v9 = _s20DisambiguationResultOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_253DF4BA0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(v5 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_253DEFE90();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_253C88474(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s24ToolDisambiguationResultVMa(0);

  return MEMORY[0x270FA0340](a1, a2, v4, sub_253C884CC);
}

uint64_t sub_253C884D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s24ToolDisambiguationResultVMa(0);

  return MEMORY[0x270FA0580](a1, a2, a3, v6, sub_253C88538);
}

uint64_t sub_253C8853C(uint64_t a1)
{
  uint64_t result = _s24ToolDisambiguationResultVMa(319);
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

#error "253C88BA0: call analysis failed (funcsize=390)"

void sub_253C88C74()
{
  sub_253C8F550();
  uint64_t v4 = _s19ValueStepEvaluationVMa(0);
  uint64_t v5 = sub_253BDF9FC(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_253C8F098();
  uint64_t v7 = _s20ActionStepEvaluationVMa(v6);
  uint64_t v8 = sub_253BDF9FC(v7);
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253C567FC();
  uint64_t v10 = _s23ParameterStepEvaluationVMa(v9);
  uint64_t v11 = sub_253BDF9FC(v10);
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_253C8F07C();
  uint64_t v13 = _s18ToolStepEvaluationVMa(v12);
  uint64_t v14 = sub_253BDF9FC(v13);
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_253C63598();
  _s23StatementStepEvaluationOMa(v15);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v16);
  sub_253C16A90();
  sub_253C11100();
  sub_253C8E184();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253C8F52C();
      sub_253C8E134();
      sub_253C8F33C();
      sub_253DF58F0();
      swift_bridgeObjectRelease();
      sub_253C8F494();
      sub_253C8F1A0(v22 + 5);
      sub_253C894A0();
      sub_253C8F1C4();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      uint64_t v18 = _s23ParameterStepEvaluationVMa;
      uint64_t v19 = v2;
      break;
    case 2u:
      sub_253C8E134();
      sub_253C8F4EC();
      swift_bridgeObjectRelease();
      sub_253C8F494();
      sub_253C8F480(v20 | 2);
      sub_253C89058();
      sub_253C8F1C4();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      uint64_t v18 = _s20ActionStepEvaluationVMa;
      uint64_t v19 = v1;
      break;
    case 3u:
      sub_253C8E134();
      sub_253C8F33C();
      sub_253DF58F0();
      swift_bridgeObjectRelease();
      sub_253C8F494();
      sub_253C8F1A0(v21 + 1);
      sub_253C8967C();
      sub_253DF52E0();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      uint64_t v18 = _s19ValueStepEvaluationVMa;
      uint64_t v19 = v0;
      break;
    default:
      sub_253C8E134();
      sub_253C8F50C();
      swift_bridgeObjectRelease();
      sub_253C8F494();
      sub_253C8F1A0(v17);
      sub_253C892DC();
      sub_253C8F1C4();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      uint64_t v18 = _s18ToolStepEvaluationVMa;
      uint64_t v19 = v3;
      break;
  }
  sub_253C7F598(v19, (void (*)(void))v18);
  sub_253C11100();
  sub_253C8F44C();
}

BOOL sub_253C88FD8(uint64_t a1, uint64_t a2)
{
  BOOL result = 0;
  if (sub_253DEFFB0())
  {
    uint64_t v4 = _s20ActionStepEvaluationVMa(0);
    if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 20)))
    {
      _s24ActionConfirmationResultVMa(0);
      if (sub_253DEFE60()) {
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_253C89058()
{
  sub_253C8F014();
  sub_253DF58F0();
  sub_253C8F2BC();
  sub_253C8F400();
  sub_253DF52E0();
  sub_253DEFFE0();
  sub_253C89EDC((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
  sub_253DF5C40();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253C8EFAC();
  _s20ActionStepEvaluationVMa(0);
  sub_253C891A4();
  sub_253C8F140();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  return v1;
}

uint64_t sub_253C89140(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v2 = sub_253C8F1DC();
  uint64_t v3 = _s24ActionConfirmationResultVMa(v2);
  sub_253C8F1F8(*(int *)(v3 + 20));

  return sub_253DEFE60();
}

uint64_t sub_253C891A4()
{
  sub_253C8F3D0();
  sub_253DF58F0();
  sub_253C8F2BC();
  sub_253C8F174();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253C8EFD8();
  _s24ActionConfirmationResultVMa(0);
  sub_253C8F3E8();
  sub_253C89EDC((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
  sub_253C8F2A4();
  sub_253C8F140();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  return v1;
}

uint64_t sub_253C892DC()
{
  sub_253C8F014();
  sub_253DF58F0();
  sub_253C8F2BC();
  sub_253C8F400();
  sub_253DF52E0();
  sub_253DEFFE0();
  sub_253C89EDC((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
  sub_253DF5C40();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253C8EFAC();
  _s18ToolStepEvaluationVMa(0);
  sub_253C89AC0();
  sub_253C8F140();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  return v1;
}

uint64_t sub_253C893C4(uint64_t a1, uint64_t a2)
{
  return sub_253C8A1E4(a1, a2, MEMORY[0x263F4BF90], _s18ToolStepEvaluationVMa, (uint64_t (*)(uint64_t))sub_253C898CC) & 1;
}

void sub_253C8941C()
{
  if (sub_253DEFFB0())
  {
    _s23ParameterStepEvaluationVMa(0);
    if (sub_253C8F590())
    {
      sub_253C8F1F8(*(int *)(v0 + 24));
      if (sub_253DF2D10())
      {
        sub_253C8F1F8(*(int *)(v0 + 28));
        sub_253C8AA4C();
      }
    }
  }
}

uint64_t sub_253C894A0()
{
  sub_253C8F014();
  sub_253DF58F0();
  sub_253C8F608();
  sub_253C8F174();
  _s23ParameterStepEvaluationVMa(0);
  sub_253C8F570();
  sub_253C89EDC((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
  sub_253C8F4B4();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253C8EFD8();
  sub_253C8F4B4();
  sub_253C8F394();
  swift_bridgeObjectRelease();
  sub_253DF52E0();
  sub_253DF2D40();
  sub_253DF5A40();
  sub_253C8EFAC();
  sub_253C8B258();
  sub_253C8F140();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  return v1;
}

uint64_t sub_253C895F0()
{
  if (sub_253DEFFB0() & 1) != 0 && (_s19ValueStepEvaluationVMa(0), (sub_253C8F590()))
  {
    uint64_t v1 = (void *)sub_253C8F1F8(*(int *)(v0 + 24));
    char v3 = sub_253C8A7B0(v1, v2, (uint64_t (*)(void, void))sub_253CBAFA8, _s25ValueDisambiguationResultVMa);
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_253C8967C()
{
  sub_253C8F014();
  sub_253DF58F0();
  sub_253C8F2BC();
  sub_253C8F174();
  _s19ValueStepEvaluationVMa(0);
  sub_253C8F570();
  sub_253C89EDC((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
  sub_253C8F4B4();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253C8EFD8();
  sub_253C8F4B4();
  sub_253C8F394();
  swift_bridgeObjectRelease();
  sub_253C8EFAC();
  sub_253C8A890(72, 0xD000000000000020, 0x8000000253E19290, (void (*)(void))_s25ValueDisambiguationResultVMa);
  sub_253C8F140();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  return v1;
}

uint64_t sub_253C897BC()
{
  sub_253C8F014();
  sub_253DF58F0();
  sub_253C8F608();
  sub_253C8F174();
  uint64_t v0 = sub_253DF46F0();
  uint64_t v1 = swift_bridgeObjectRetain();
  MEMORY[0x25A26F710](v1, v0);
  sub_253C8F394();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253C8EFAC();
  _s24ToolDisambiguationResultVMa(0);
  sub_253C8D8C8();
  sub_253C8F394();
  swift_bridgeObjectRelease();
  sub_253C8EFD8();
  sub_253C8F3E8();
  sub_253C89EDC((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
  sub_253C8F2A4();
  sub_253C8F140();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  return v3;
}

void sub_253C898CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_253C8F550();
  a17 = v18;
  a18 = v19;
  _s24ToolDisambiguationResultVMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v20);
  sub_253C2F354();
  uint64_t v23 = v21 - v22;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&a9 - v25;
  uint64_t v27 = sub_253BDEDD8(&qword_269D7CA18);
  uint64_t v28 = sub_253BDF9FC(v27);
  MEMORY[0x270FA5388](v28);
  sub_253C16A90();
  sub_253C8E184();
  sub_253C8E184();
  sub_253C8E134();
  sub_253C8E134();
  sub_253CBAFF0();
  if (v29)
  {
    sub_253C8C300();
    if (v30) {
      sub_253DEFE60();
    }
  }
  sub_253C7F598(v23, (void (*)(void))_s24ToolDisambiguationResultVMa);
  sub_253C7F598((uint64_t)v26, (void (*)(void))_s24ToolDisambiguationResultVMa);
  sub_253C8F44C();
}

uint64_t sub_253C89A78(void *a1, void *a2)
{
  return sub_253C8A7B0(a1, a2, (uint64_t (*)(void, void))sub_253CBAFF0, _s24ToolDisambiguationResultVMa) & 1;
}

unint64_t sub_253C89AC0()
{
  uint64_t v1 = _s24ToolDisambiguationResultVMa(0);
  uint64_t v2 = sub_253BDF9FC(v1);
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = sub_253C8F098();
  uint64_t v4 = _s14ToolStepResultOMa(v3);
  uint64_t v5 = sub_253BDF9FC(v4);
  MEMORY[0x270FA5388](v5);
  sub_253C8E184();
  sub_253C8F460();
  sub_253C8E134();
  sub_253DF58F0();
  swift_bridgeObjectRelease();
  sub_253C897BC();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  sub_253C7F598(v0, (void (*)(void))_s24ToolDisambiguationResultVMa);
  return 0xD00000000000001ELL;
}

void sub_253C89C14()
{
  sub_253C1CED0();
  uint64_t v2 = sub_253DF4BA0();
  sub_253C0F830();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
  uint64_t v7 = sub_253BDF9FC(v6);
  MEMORY[0x270FA5388](v7);
  sub_253C16AA8();
  uint64_t v8 = sub_253BDEDD8(&qword_269D7CA28);
  uint64_t v9 = sub_253BDF9FC(v8);
  MEMORY[0x270FA5388](v9);
  sub_253C4E9DC();
  uint64_t v11 = v0 + *(int *)(v10 + 56);
  sub_253C8E184();
  sub_253C8E184();
  sub_253BDEDD8(&qword_269D7C890);
  sub_253C8F42C(v0);
  if (!v12)
  {
    sub_253C8E184();
    sub_253C8F42C(v11);
    if (!v12)
    {
      sub_253C8F61C();
      sub_253BEFD2C();
      v13();
      sub_253DF4B80();
      uint64_t v14 = *(void (**)(uint64_t))(v4 + 8);
      uint64_t v15 = sub_253C8F460();
      v14(v15);
      ((void (*)(uint64_t, uint64_t))v14)(v1, v2);
      sub_253C7F598(v0, (void (*)(void))_s25ParameterNeedsValueResultV16NeedsValueResultOMa);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
LABEL_9:
    sub_253BEFAC0(v0, &qword_269D7CA28);
    goto LABEL_10;
  }
  sub_253C8F42C(v11);
  if (!v12) {
    goto LABEL_9;
  }
  sub_253C7F598(v0, (void (*)(void))_s25ParameterNeedsValueResultV16NeedsValueResultOMa);
LABEL_10:
  sub_253C1CEE8();
}

uint64_t sub_253C89E58(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C920, (void (*)(uint64_t))_s14ToolStepResultOMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C928, (void (*)(uint64_t))_s14ToolStepResultOMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C89EDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253C89F24(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C930, (void (*)(uint64_t))_s18ToolStepEvaluationVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C938, (void (*)(uint64_t))_s18ToolStepEvaluationVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C89FA8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C940, (void (*)(uint64_t))_s24ToolDisambiguationResultVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C948, (void (*)(uint64_t))_s24ToolDisambiguationResultVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

void sub_253C8A030()
{
  sub_253C8F550();
  sub_253BDEDD8(&qword_26B255E98);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v1);
  sub_253C8F07C();
  sub_253DF4BA0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = _s25ParameterNeedsValueResultV16NeedsValueResultOMa(0);
  uint64_t v4 = sub_253BDF9FC(v3);
  MEMORY[0x270FA5388](v4);
  sub_253C16A90();
  sub_253C8E184();
  uint64_t v5 = sub_253BDEDD8(&qword_269D7C890);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v5) == 1)
  {
    sub_253C8F288();
  }
  else
  {
    sub_253C8F61C();
    sub_253BEFD2C();
    v6();
    sub_253C5FEE4();
    sub_253C8F330();
    sub_253DF5290();
    sub_253DF52E0();
    swift_bridgeObjectRelease();
    sub_253C8EFFC();
    uint64_t v7 = sub_253C8F460();
    v8(v7);
  }
  sub_253C8F330();
  sub_253C8F44C();
}

uint64_t sub_253C8A1E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t))
{
  if ((a3() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a4(0);
  uint64_t v7 = sub_253C8F1F8(*(int *)(v6 + 20));

  return a5(v7);
}

uint64_t sub_253C8A278()
{
  sub_253C8F014();
  sub_253DF58F0();
  sub_253C8F2BC();
  sub_253C8F400();
  sub_253DF52E0();
  _s25ParameterNeedsValueResultVMa(0);
  sub_253C8F3E8();
  sub_253C89EDC((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
  sub_253C8F2A4();
  sub_253C8F140();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  return v1;
}

uint64_t sub_253C8A328(uint64_t a1, uint64_t a2)
{
  return sub_253C8A1E4(a1, a2, (uint64_t (*)(void))sub_253C89C14, _s25ParameterNeedsValueResultVMa, MEMORY[0x263F074F0]) & 1;
}

uint64_t sub_253C8A380()
{
  return sub_253C8A468(61, 0xD000000000000020, 0x8000000253E19140, (void (*)(void))_s25ParameterNotAllowedResultVMa);
}

uint64_t sub_253C8A3C8(uint64_t a1, uint64_t a2)
{
  return sub_253C8A1E4(a1, a2, MEMORY[0x263F804B8], _s25ParameterNotAllowedResultVMa, MEMORY[0x263F074F0]) & 1;
}

uint64_t sub_253C8A420()
{
  return sub_253C8A468(69, 0xD000000000000028, 0x8000000253E19170, (void (*)(void))_s33ParameterCandidatesNotFoundResultVMa);
}

uint64_t sub_253C8A468(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return 0;
}

uint64_t sub_253C8A578(uint64_t a1, uint64_t a2)
{
  if ((sub_253DF4B80() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = _s27ParameterConfirmationResultVMa(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v4 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 20))) {
    return 0;
  }
  sub_253C8F1F8(*(int *)(v4 + 24));

  return sub_253DEFE60();
}

uint64_t sub_253C8A5E8(uint64_t a1, uint64_t a2)
{
  return sub_253C8A1E4(a1, a2, MEMORY[0x263F804B8], _s33ParameterCandidatesNotFoundResultVMa, MEMORY[0x263F074F0]) & 1;
}

uint64_t sub_253C8A644()
{
  sub_253C8F3D0();
  sub_253DF58F0();
  sub_253C8F2BC();
  sub_253C8F174();
  sub_253DF4BA0();
  sub_253DF5A40();
  sub_253C8EFAC();
  _s27ParameterConfirmationResultVMa(0);
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253C8EFD8();
  sub_253C8F3E8();
  sub_253C89EDC((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
  sub_253C8F2A4();
  sub_253C8F140();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  return v1;
}

uint64_t sub_253C8A7B0(void *a1, void *a2, uint64_t (*a3)(void, void), uint64_t (*a4)(void))
{
  if ((a3(*a1, *a2) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = a4(0);
  sub_253C8C300();
  if ((v6 & 1) == 0) {
    return 0;
  }
  sub_253C8F1F8(*(int *)(v5 + 24));

  return sub_253DEFE60();
}

uint64_t sub_253C8A848()
{
  return sub_253C8A890(76, 0xD000000000000024, 0x8000000253E191D0, (void (*)(void))_s29ParameterDisambiguationResultVMa);
}

uint64_t sub_253C8A890(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_253C8F014();
  sub_253DF58F0();
  sub_253DF52E0();
  uint64_t v5 = sub_253DF4BA0();
  uint64_t v6 = swift_bridgeObjectRetain();
  MEMORY[0x25A26F710](v6, v5);
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253C8EFAC();
  a4(0);
  sub_253C8D8C8();
  sub_253C8F394();
  swift_bridgeObjectRelease();
  sub_253C8EFD8();
  sub_253C8F3E8();
  sub_253C89EDC((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
  sub_253C8F2A4();
  sub_253C8F140();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  return v8;
}

uint64_t sub_253C8A9C0(void *a1, void *a2)
{
  return sub_253C8A7B0(a1, a2, (uint64_t (*)(void, void))sub_253CBAFA8, _s29ParameterDisambiguationResultVMa) & 1;
}

uint64_t sub_253C8AA04()
{
  return sub_253C8A890(72, 0xD000000000000020, 0x8000000253E19290, (void (*)(void))_s25ValueDisambiguationResultVMa);
}

void sub_253C8AA4C()
{
  sub_253C1CED0();
  uint64_t v52 = v4;
  uint64_t v53 = v5;
  uint64_t v47 = _s29ParameterDisambiguationResultVMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253C36350();
  uint64_t v46 = _s27ParameterConfirmationResultVMa(v8);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v9);
  sub_253BDFA94();
  uint64_t v49 = v10;
  uint64_t v11 = sub_253C36350();
  v45[3] = _s33ParameterCandidatesNotFoundResultVMa(v11);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  uint64_t v50 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253C36350();
  v45[2] = _s25ParameterNotAllowedResultVMa(v14);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v15);
  uint64_t v48 = (char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_253C36350();
  v45[1] = _s25ParameterNeedsValueResultVMa(v17);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v18);
  sub_253C4E9DC();
  _s19ParameterStepResultOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v19);
  sub_253C8F238();
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)v45 - v22;
  MEMORY[0x270FA5388](v21);
  sub_253C8F46C();
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v45 - v26;
  MEMORY[0x270FA5388](v25);
  char v29 = (char *)v45 - v28;
  uint64_t v30 = sub_253BDEDD8(&qword_269D7CA20);
  uint64_t v31 = sub_253BDF9FC(v30);
  MEMORY[0x270FA5388](v31);
  sub_253C8F0B4();
  sub_253C8E184();
  sub_253C8E184();
  sub_253C8F5F0();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253C8E184();
      if (sub_253C8F300() != 1)
      {
        uint64_t v32 = _s25ParameterNotAllowedResultVMa;
        uint64_t v33 = (uint64_t)v27;
        goto LABEL_27;
      }
      uint64_t v40 = (uint64_t)v48;
      sub_253C8E134();
      if (sub_253DF4B80() & 1) != 0 && (sub_253DEFE60())
      {
        uint64_t v35 = _s25ParameterNotAllowedResultVMa;
        sub_253C7F598(v40, (void (*)(void))_s25ParameterNotAllowedResultVMa);
        uint64_t v36 = (uint64_t)v27;
        goto LABEL_22;
      }
      uint64_t v43 = _s25ParameterNotAllowedResultVMa;
      sub_253C7F598(v40, (void (*)(void))_s25ParameterNotAllowedResultVMa);
      uint64_t v36 = (uint64_t)v27;
      goto LABEL_35;
    case 2u:
      sub_253C8E184();
      if (sub_253C8F300() != 2)
      {
        uint64_t v32 = _s33ParameterCandidatesNotFoundResultVMa;
        uint64_t v33 = v3;
        goto LABEL_27;
      }
      uint64_t v34 = (uint64_t)v50;
      sub_253C8E134();
      if (sub_253DF4B80() & 1) != 0 && (sub_253DEFE60())
      {
        uint64_t v35 = _s33ParameterCandidatesNotFoundResultVMa;
        sub_253C7F598(v34, (void (*)(void))_s33ParameterCandidatesNotFoundResultVMa);
        uint64_t v36 = v3;
        goto LABEL_22;
      }
      uint64_t v43 = _s33ParameterCandidatesNotFoundResultVMa;
      sub_253C7F598(v34, (void (*)(void))_s33ParameterCandidatesNotFoundResultVMa);
      uint64_t v36 = v3;
      goto LABEL_35;
    case 3u:
      sub_253C8E184();
      if (sub_253C8F300() != 3)
      {
        uint64_t v32 = _s27ParameterConfirmationResultVMa;
        uint64_t v33 = (uint64_t)v23;
        goto LABEL_27;
      }
      uint64_t v41 = v49;
      sub_253C8E134();
      if ((sub_253DF4B80() & 1) != 0
        && v23[*(int *)(v46 + 20)] == *(unsigned char *)(v41 + *(int *)(v46 + 20))
        && (sub_253DEFE60() & 1) != 0)
      {
        uint64_t v35 = _s27ParameterConfirmationResultVMa;
        sub_253C7F598(v41, (void (*)(void))_s27ParameterConfirmationResultVMa);
        uint64_t v36 = (uint64_t)v23;
        goto LABEL_22;
      }
      uint64_t v43 = _s27ParameterConfirmationResultVMa;
      sub_253C7F598(v41, (void (*)(void))_s27ParameterConfirmationResultVMa);
      uint64_t v36 = (uint64_t)v23;
      goto LABEL_35;
    case 4u:
      sub_253C8E184();
      if (sub_253C8F300() != 4)
      {
        uint64_t v32 = _s29ParameterDisambiguationResultVMa;
        uint64_t v33 = v2;
        goto LABEL_27;
      }
      uint64_t v37 = (uint64_t)v51;
      sub_253C8E134();
      sub_253CBAFA8();
      if (v38 & 1) != 0 && (sub_253C8C300(), (v39) && (sub_253DEFE60())
      {
        uint64_t v35 = _s29ParameterDisambiguationResultVMa;
        sub_253C7F598(v37, (void (*)(void))_s29ParameterDisambiguationResultVMa);
        uint64_t v36 = v2;
LABEL_22:
        uint64_t v42 = v35;
      }
      else
      {
        uint64_t v43 = _s29ParameterDisambiguationResultVMa;
        sub_253C7F598(v37, (void (*)(void))_s29ParameterDisambiguationResultVMa);
        uint64_t v36 = v2;
LABEL_35:
        uint64_t v42 = v43;
      }
      goto LABEL_36;
    default:
      sub_253C8E184();
      if (sub_253C8F300())
      {
        uint64_t v32 = _s25ParameterNeedsValueResultVMa;
        uint64_t v33 = (uint64_t)v29;
LABEL_27:
        sub_253C7F598(v33, (void (*)(void))v32);
        sub_253BEFAC0(v0, &qword_269D7CA20);
      }
      else
      {
        sub_253C8E134();
        sub_253C89C14();
        if (v44) {
          sub_253DEFE60();
        }
        sub_253C7F598(v1, (void (*)(void))_s25ParameterNeedsValueResultVMa);
        uint64_t v36 = (uint64_t)v29;
        uint64_t v42 = _s25ParameterNeedsValueResultVMa;
LABEL_36:
        sub_253C7F598(v36, (void (*)(void))v42);
        sub_253C7F598(v0, (void (*)(void))_s19ParameterStepResultOMa);
      }
      sub_253C1CEE8();
      return;
  }
}

uint64_t sub_253C8B210(void *a1, void *a2)
{
  return sub_253C8A7B0(a1, a2, (uint64_t (*)(void, void))sub_253CBAFA8, _s25ValueDisambiguationResultVMa) & 1;
}

void sub_253C8B258()
{
  sub_253C8F550();
  uint64_t v5 = _s29ParameterDisambiguationResultVMa(0);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253C8F098();
  uint64_t v8 = _s27ParameterConfirmationResultVMa(v7);
  uint64_t v9 = sub_253BDF9FC(v8);
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_253C567FC();
  uint64_t found = _s33ParameterCandidatesNotFoundResultVMa(v10);
  uint64_t v12 = sub_253BDF9FC(found);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253C8F07C();
  uint64_t v14 = _s25ParameterNotAllowedResultVMa(v13);
  uint64_t v15 = sub_253BDF9FC(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_253C63598();
  uint64_t v17 = _s25ParameterNeedsValueResultVMa(v16);
  uint64_t v18 = sub_253BDF9FC(v17);
  MEMORY[0x270FA5388](v18);
  sub_253C16A90();
  _s19ParameterStepResultOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v19);
  sub_253C566F8();
  sub_253C8F3AC();
  sub_253C8E184();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253C8E134();
      sub_253C8F4CC();
      swift_bridgeObjectRelease();
      sub_253C8A468(61, 0xD000000000000020, 0x8000000253E19140, (void (*)(void))_s25ParameterNotAllowedResultVMa);
      sub_253C8F1C4();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      uint64_t v21 = _s25ParameterNotAllowedResultVMa;
      uint64_t v22 = v3;
      break;
    case 2u:
      sub_253C8E134();
      sub_253C8F33C();
      sub_253DF58F0();
      swift_bridgeObjectRelease();
      sub_253C8F5FC();
      sub_253C8A468(69, v23 + 9, 0x8000000253E19170, (void (*)(void))_s33ParameterCandidatesNotFoundResultVMa);
      sub_253C8F1C4();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      uint64_t v21 = _s33ParameterCandidatesNotFoundResultVMa;
      uint64_t v22 = v2;
      break;
    case 3u:
      sub_253C8E134();
      sub_253C8F50C();
      swift_bridgeObjectRelease();
      sub_253C8F5FC();
      sub_253C8F480(v24 + 2);
      sub_253C8A644();
      sub_253C8F1C4();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      uint64_t v21 = _s27ParameterConfirmationResultVMa;
      uint64_t v22 = v1;
      break;
    case 4u:
      sub_253C8E134();
      sub_253C8F4EC();
      swift_bridgeObjectRelease();
      sub_253C8F5FC();
      sub_253C8A890(76, v25 + 5, 0x8000000253E191D0, (void (*)(void))_s29ParameterDisambiguationResultVMa);
      sub_253DF52E0();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      uint64_t v21 = _s29ParameterDisambiguationResultVMa;
      uint64_t v22 = v0;
      break;
    default:
      sub_253C8E134();
      sub_253C8F4CC();
      swift_bridgeObjectRelease();
      sub_253C8F5FC();
      sub_253C8F1A0(v20);
      sub_253C8A278();
      sub_253C8F1C4();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      uint64_t v21 = _s25ParameterNeedsValueResultVMa;
      uint64_t v22 = v4;
      break;
  }
  sub_253C7F598(v22, (void (*)(void))v21);
  sub_253C8F3AC();
  sub_253C8F44C();
}

uint64_t sub_253C8B700(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D7269666E6F63 && a2 == 0xE900000000000064;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64657463656A6572 && a2 == 0xE800000000000000;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x656E6F646E616261 && a2 == 0xE900000000000064)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_253DF5C90();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_253C8B868(char a1)
{
  if (!a1) {
    return 0x656D7269666E6F63;
  }
  if (a1 == 1) {
    return 0x64657463656A6572;
  }
  return 0x656E6F646E616261;
}

uint64_t sub_253C8B8C0()
{
  return 1;
}

uint64_t sub_253C8B8E0()
{
  return 0;
}

void sub_253C8B8EC()
{
  sub_253C59954();
  char v26 = v0;
  BOOL v2 = v1;
  sub_253BDEDD8(&qword_269D7CB68);
  sub_253C0F830();
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v23 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253BDEDD8(&qword_269D7CB70);
  sub_253C0F830();
  uint64_t v21 = v7;
  uint64_t v22 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253BDEDD8(&qword_269D7CB78);
  sub_253C0F830();
  v20[1] = v11;
  MEMORY[0x270FA5388](v12);
  sub_253C2F37C();
  sub_253BDEDD8(&qword_269D7CB80);
  sub_253C0F830();
  MEMORY[0x270FA5388](v13);
  sub_253C16A90();
  sub_253BDF5F8(v2, v2[3]);
  sub_253C8EA5C();
  sub_253DF5E40();
  if (!v26)
  {
    sub_253C8EB40();
    sub_253C8F0D0();
    uint64_t v14 = sub_253C8F564();
    uint64_t v16 = v10;
LABEL_6:
    v15(v14, v16);
    goto LABEL_7;
  }
  if (v26 != 1)
  {
    sub_253C8EAA8();
    uint64_t v17 = v23;
    sub_253C8F0D0();
    uint64_t v16 = v25;
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
    uint64_t v14 = (uint64_t)v17;
    goto LABEL_6;
  }
  sub_253C8EAF4();
  sub_253C8F0D0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v22);
LABEL_7:
  uint64_t v18 = sub_253C8F52C();
  v19(v18);
  sub_253C5993C();
}

void sub_253C8BB5C()
{
  sub_253C59954();
  uint64_t v40 = (void *)v0;
  uint64_t v4 = v3;
  v37[5] = sub_253BDEDD8(&qword_269D7CB28);
  sub_253C0F830();
  v37[8] = v5;
  MEMORY[0x270FA5388](v6);
  sub_253BDFA94();
  uint64_t v39 = v7;
  sub_253BDEDD8(&qword_269D7CB30);
  sub_253C0F830();
  v37[6] = v9;
  v37[7] = v8;
  MEMORY[0x270FA5388](v8);
  sub_253C16AA8();
  uint64_t v10 = sub_253BDEDD8(&qword_269D7CB38);
  sub_253C0F830();
  v37[4] = v11;
  MEMORY[0x270FA5388](v12);
  sub_253C16A90();
  uint64_t v13 = sub_253BDEDD8(&qword_269D7CB40);
  sub_253C0F830();
  uint64_t v38 = v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253BDF5F8(v4, v4[3]);
  sub_253C8EA5C();
  uint64_t v18 = (uint64_t)v40;
  sub_253DF5E30();
  if (v18) {
    goto LABEL_10;
  }
  v37[1] = v10;
  v37[2] = v2;
  v37[3] = v1;
  uint64_t v40 = v4;
  uint64_t v19 = v17;
  uint64_t v20 = sub_253DF5BB0();
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
LABEL_9:
    uint64_t v28 = sub_253DF5960();
    swift_allocError();
    uint64_t v30 = v29;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v30 = &_s18ConfirmationResultON;
    sub_253DF5B40();
    sub_253DF5950();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, *MEMORY[0x263F8DCB0], v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v13);
    uint64_t v4 = v40;
LABEL_10:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
    goto LABEL_11;
  }
  v37[0] = 0;
  uint64_t v22 = v17;
  int v23 = *(unsigned __int8 *)(v20 + 32);
  sub_253CC30E8(1, v21, v20, v20 + 32, 0, (2 * v21) | 1);
  uint64_t v25 = v24;
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (v25 != v27 >> 1)
  {
    uint64_t v19 = v22;
    goto LABEL_9;
  }
  if (v23)
  {
    if (v23 == 1)
    {
      sub_253C8EAF4();
      sub_253C8F410();
      sub_253C8F564();
      sub_253BEFBCC();
      v31();
      swift_unknownObjectRelease();
      uint64_t v32 = sub_253C11100();
    }
    else
    {
      sub_253C8EAA8();
      sub_253C8F410();
      sub_253BEFBCC();
      v36();
      swift_unknownObjectRelease();
      uint64_t v32 = sub_253C8F3AC();
    }
    v33(v32);
  }
  else
  {
    sub_253C8EB40();
    sub_253C8F410();
    sub_253C8F564();
    sub_253BEFBCC();
    v34();
    swift_unknownObjectRelease();
    sub_253BEFBCC();
    v35();
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v40);
LABEL_11:
  sub_253C5993C();
}

uint64_t sub_253C8BFF8(uint64_t a1)
{
  unint64_t v2 = sub_253C8EAA8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253C8C034(uint64_t a1)
{
  unint64_t v2 = sub_253C8EAA8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253C8C070()
{
  return sub_253C247E8();
}

uint64_t sub_253C8C090()
{
  return sub_253C8B868(*v0);
}

uint64_t sub_253C8C098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253C8B700(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253C8C0C0(uint64_t a1)
{
  unint64_t v2 = sub_253C8EA5C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253C8C0FC(uint64_t a1)
{
  unint64_t v2 = sub_253C8EA5C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253C8C138(uint64_t a1)
{
  unint64_t v2 = sub_253C8EB40();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253C8C174(uint64_t a1)
{
  unint64_t v2 = sub_253C8EB40();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253C8C1B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253C8B8C0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_253C8C1DC(uint64_t a1)
{
  unint64_t v2 = sub_253C8EAF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253C8C218(uint64_t a1)
{
  unint64_t v2 = sub_253C8EAF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253C8C254(unsigned char *a1@<X8>)
{
  sub_253C8BB5C();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_253C8C280()
{
}

uint64_t sub_253C8C29C()
{
  return sub_253C8C2A4(*v0);
}

uint64_t sub_253C8C2A4(char a1)
{
  if (!a1) {
    return 0x6D7269666E6F632ELL;
  }
  if (a1 == 1) {
    return 0x657463656A65722ELL;
  }
  return 0x6E6F646E6162612ELL;
}

void sub_253C8C300()
{
  sub_253C1CED0();
  uint64_t v2 = sub_253DF4BA0();
  sub_253C0F830();
  uint64_t v14 = v3;
  MEMORY[0x270FA5388](v4);
  sub_253C8F254();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v5);
  sub_253C2F354();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253BDEDD8(&qword_269D7CA30);
  uint64_t v8 = sub_253BDF9FC(v7);
  MEMORY[0x270FA5388](v8);
  sub_253C8F0B4();
  sub_253C8E184();
  sub_253C8E184();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253C8E184();
      if (sub_253C4A0D4() == 1)
      {
        sub_253C8F61C();
        sub_253BEFD2C();
        v9();
        sub_253DF4B80();
        uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
        v10(v1, v2);
        uint64_t v11 = sub_253C8F330();
        ((void (*)(uint64_t))v10)(v11);
        goto LABEL_6;
      }
      uint64_t v12 = sub_253C8F330();
      v13(v12);
      goto LABEL_12;
    case 2u:
      if (sub_253C4A0D4() != 2) {
        goto LABEL_12;
      }
      goto LABEL_6;
    case 3u:
      if (sub_253C4A0D4() == 3) {
        goto LABEL_6;
      }
      goto LABEL_12;
    default:
      sub_253C8E184();
      if (sub_253C4A0D4()) {
LABEL_12:
      }
        sub_253BEFAC0(v0, &qword_269D7CA30);
      else {
LABEL_6:
      }
        sub_253C7F598(v0, (void (*)(void))_s20DisambiguationResultOMa);
      sub_253C1CEE8();
      return;
  }
}

uint64_t sub_253C8C5C8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656E6F646E616261 && a2 == 0xE900000000000064;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656C65536D657469 && a2 == 0xEC00000064657463;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6C655365756C6176 && a2 == 0xED00006465746365;
      if (v7 || (sub_253DF5C90() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64657463656A6572 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = sub_253DF5C90();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_253C8C7C0()
{
  return 4;
}

uint64_t sub_253C8C7C8(char a1)
{
  uint64_t result = 0x656E6F646E616261;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x656C65536D657469;
      break;
    case 2:
      uint64_t result = 0x6C655365756C6176;
      break;
    case 3:
      uint64_t result = 0x64657463656A6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253C8C874(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7865646E69 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_253C8C8F4()
{
  return 0x7865646E69;
}

uint64_t sub_253C8C908(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_253C8C988()
{
  return 0x65756C6176;
}

void sub_253C8C99C()
{
  sub_253C59954();
  BOOL v2 = v1;
  sub_253BDEDD8(&qword_269D7CA90);
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253BDFA94();
  sub_253BDEDD8(&qword_269D7CA98);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253BDFA94();
  sub_253C36350();
  sub_253DF4BA0();
  sub_253C0F830();
  uint64_t v34 = v6;
  uint64_t v35 = v5;
  MEMORY[0x270FA5388](v5);
  sub_253BDFA94();
  uint64_t v33 = v7;
  sub_253BDEDD8(&qword_269D7CAA0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v8);
  sub_253C2F37C();
  sub_253BDEDD8(&qword_269D7CAA8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253C566F8();
  _s20DisambiguationResultOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v10);
  sub_253BDEDD8(&qword_269D7CAB0);
  sub_253C0F830();
  uint64_t v36 = v12;
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11);
  sub_253C16A90();
  sub_253BDF5F8(v2, v2[3]);
  sub_253C8E1D4();
  sub_253DF5E40();
  sub_253C8E184();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253BEFD2C();
      v27(v25, v26);
      sub_253C8E26C();
      sub_253C8F0D0();
      sub_253C89EDC(&qword_269D7BDD8, MEMORY[0x263F80508]);
      sub_253DF5C20();
      sub_253BEFBCC();
      v30(v28, v29);
      (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
      goto LABEL_7;
    case 2u:
      sub_253C8E304();
      sub_253C8F0D0();
      sub_253BEFBCC();
      v18(v16, v17);
      uint64_t v19 = sub_253C8F52C();
      goto LABEL_5;
    case 3u:
      sub_253C8E220();
      sub_253DF5BC0();
      sub_253BEFBCC();
      v24(v22, v23);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
      uint64_t v19 = v0;
      uint64_t v20 = v37;
LABEL_5:
      v21(v19, v20);
      break;
    default:
      sub_253C8E2B8();
      sub_253C8F0D0();
      sub_253DF5C00();
      sub_253C8F564();
      sub_253BEFBCC();
      v15(v13, v14);
LABEL_7:
      uint64_t v31 = sub_253C8F52C();
      v32(v31);
      break;
  }
  sub_253C5993C();
}

void sub_253C8CE60()
{
  sub_253C59954();
  uint64_t v76 = v0;
  uint64_t v2 = v1;
  uint64_t v73 = v3;
  sub_253BDEDD8(&qword_269D7CA38);
  sub_253C0F830();
  uint64_t v65 = v5;
  uint64_t v66 = v4;
  MEMORY[0x270FA5388](v4);
  sub_253BDFA94();
  uint64_t v70 = v6;
  uint64_t v67 = sub_253BDEDD8(&qword_269D7CA40);
  sub_253C0F830();
  uint64_t v72 = v7;
  MEMORY[0x270FA5388](v8);
  uint64_t v71 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253BDEDD8(&qword_269D7CA48);
  sub_253C0F830();
  uint64_t v63 = v11;
  uint64_t v64 = v10;
  MEMORY[0x270FA5388](v10);
  sub_253BDFA94();
  uint64_t v69 = v12;
  sub_253BDEDD8(&qword_269D7CA50);
  sub_253C0F830();
  uint64_t v61 = v14;
  uint64_t v62 = v13;
  MEMORY[0x270FA5388](v13);
  sub_253BDFA94();
  uint64_t v68 = v15;
  sub_253BDEDD8(&qword_269D7CA58);
  sub_253C0F830();
  uint64_t v74 = v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_253C566DC();
  uint64_t v19 = _s20DisambiguationResultOMa(v18);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v20);
  sub_253C2F354();
  uint64_t v23 = v21 - v22;
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  unint64_t v27 = (void *)((char *)v58 - v26);
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)v58 - v28;
  uint64_t v75 = v2;
  uint64_t v30 = (void *)sub_253C11100();
  sub_253BDF5F8(v30, v31);
  sub_253C8E1D4();
  uint64_t v32 = v76;
  sub_253DF5E30();
  if (v32) {
    goto LABEL_11;
  }
  uint64_t v59 = v27;
  uint64_t v60 = v23;
  uint64_t v76 = v29;
  uint64_t v33 = sub_253DF5BB0();
  uint64_t v34 = *(void *)(v33 + 16);
  if (!v34)
  {
    uint64_t v40 = v19;
    goto LABEL_7;
  }
  v58[1] = 0;
  uint64_t v35 = *(unsigned __int8 *)(v33 + 32);
  sub_253CC30E8(1, v34, v33, v33 + 32, 0, (2 * v34) | 1);
  uint64_t v37 = v36;
  unint64_t v39 = v38;
  swift_bridgeObjectRelease();
  uint64_t v40 = v19;
  if (v37 != v39 >> 1)
  {
LABEL_7:
    uint64_t v43 = sub_253DF5960();
    swift_allocError();
    uint64_t v45 = v44;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v45 = v40;
    sub_253DF5B40();
    sub_253DF5950();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v43 - 8) + 104))(v45, *MEMORY[0x263F8DCB0], v43);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v46 = sub_253C8F3AC();
    v48(v46, v47);
    goto LABEL_11;
  }
  switch(v35)
  {
    case 1:
      sub_253C8E2B8();
      sub_253C8F028();
      uint64_t v51 = sub_253DF5B80();
      sub_253BEFBCC();
      v52();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v53();
      *uint64_t v59 = v51;
      swift_storeEnumTagMultiPayload();
      sub_253C8E134();
      break;
    case 2:
      sub_253C8E26C();
      sub_253C8F028();
      sub_253DF4BA0();
      sub_253C89EDC(&qword_269D7BDF0, MEMORY[0x263F80508]);
      sub_253DF5BA0();
      uint64_t v54 = sub_253C8F2C8();
      v55(v54);
      swift_unknownObjectRelease();
      uint64_t v56 = sub_253C8F3B8();
      v57(v56);
      sub_253C8F5F0();
      swift_storeEnumTagMultiPayload();
      sub_253C8E134();
      break;
    case 3:
      sub_253C8E220();
      sub_253C8F028();
      sub_253BEFBCC();
      v49();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v50();
      sub_253C8F5F0();
      goto LABEL_12;
    default:
      sub_253C8E304();
      sub_253C8F028();
      sub_253BEFBCC();
      v41();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v42();
      sub_253C8F5F0();
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
  }
  sub_253C8E134();
LABEL_11:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v75);
  sub_253C5993C();
}

uint64_t sub_253C8D584(uint64_t a1)
{
  unint64_t v2 = sub_253C8E304();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253C8D5C0(uint64_t a1)
{
  unint64_t v2 = sub_253C8E304();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253C8D5FC()
{
  return sub_253C8C7C8(*v0);
}

uint64_t sub_253C8D604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253C8C5C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253C8D62C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253C8C7C0();
  *a1 = result;
  return result;
}

uint64_t sub_253C8D654(uint64_t a1)
{
  unint64_t v2 = sub_253C8E1D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253C8D690(uint64_t a1)
{
  unint64_t v2 = sub_253C8E1D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253C8D6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253C8C874(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_253C8D6FC(uint64_t a1)
{
  unint64_t v2 = sub_253C8E2B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253C8D738(uint64_t a1)
{
  unint64_t v2 = sub_253C8E2B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253C8D774(uint64_t a1)
{
  unint64_t v2 = sub_253C8E220();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253C8D7B0(uint64_t a1)
{
  unint64_t v2 = sub_253C8E220();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253C8D7F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253C8C908(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_253C8D81C(uint64_t a1)
{
  unint64_t v2 = sub_253C8E26C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253C8D858(uint64_t a1)
{
  unint64_t v2 = sub_253C8E26C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253C8D894()
{
}

void sub_253C8D8AC()
{
}

uint64_t sub_253C8D8C8()
{
  sub_253DF4BA0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v0);
  sub_253C8F254();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v1);
  sub_253C2F37C();
  sub_253C8E184();
  swift_getEnumCaseMultiPayload();
  sub_253C8F288();
  switch(v2)
  {
    case 1:
      sub_253C8F61C();
      sub_253BEFD2C();
      v3();
      sub_253DF58F0();
      sub_253DF52E0();
      sub_253DF5A40();
      sub_253C8EFFC();
      uint64_t v4 = sub_253C8F460();
      v5(v4);
      break;
    case 2:
    case 3:
      return sub_253C8F330();
    default:
      sub_253DF58F0();
      swift_bridgeObjectRelease();
      sub_253DF5C40();
      sub_253DF52E0();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      break;
  }
  return sub_253C8F330();
}

uint64_t sub_253C8DB04(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C950, (void (*)(uint64_t))_s23ParameterStepEvaluationVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C958, (void (*)(uint64_t))_s23ParameterStepEvaluationVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8DB88(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C960, (void (*)(uint64_t))_s19ParameterStepResultOMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C968, (void (*)(uint64_t))_s19ParameterStepResultOMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8DC0C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C970, (void (*)(uint64_t))_s25ParameterNeedsValueResultVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C978, (void (*)(uint64_t))_s25ParameterNeedsValueResultVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8DC90(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C980, (void (*)(uint64_t))_s25ParameterNotAllowedResultVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C988, (void (*)(uint64_t))_s25ParameterNotAllowedResultVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8DD14(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C990, (void (*)(uint64_t))_s33ParameterCandidatesNotFoundResultVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C998, (void (*)(uint64_t))_s33ParameterCandidatesNotFoundResultVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8DD98(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C9A0, (void (*)(uint64_t))_s27ParameterConfirmationResultVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C9A8, (void (*)(uint64_t))_s27ParameterConfirmationResultVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8DE1C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C9B0, (void (*)(uint64_t))_s29ParameterDisambiguationResultVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C9B8, (void (*)(uint64_t))_s29ParameterDisambiguationResultVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8DEA0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C9C0, (void (*)(uint64_t))_s20ActionStepEvaluationVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C9C8, (void (*)(uint64_t))_s20ActionStepEvaluationVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8DF24(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C9D0, (void (*)(uint64_t))_s24ActionConfirmationResultVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C9D8, (void (*)(uint64_t))_s24ActionConfirmationResultVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8DFA8(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C9E0, (void (*)(uint64_t))_s19ValueStepEvaluationVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C9E8, (void (*)(uint64_t))_s19ValueStepEvaluationVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8E02C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7C9F0, (void (*)(uint64_t))_s25ValueDisambiguationResultVMa);
  uint64_t result = sub_253C89EDC(&qword_269D7C9F8, (void (*)(uint64_t))_s25ValueDisambiguationResultVMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8E0B0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_253C89EDC(&qword_269D7CA00, (void (*)(uint64_t))_s23StatementStepEvaluationOMa);
  uint64_t result = sub_253C89EDC(&qword_269D7CA08, (void (*)(uint64_t))_s23StatementStepEvaluationOMa);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_253C8E134()
{
  uint64_t v1 = sub_253C8F1DC();
  v2(v1);
  sub_253BDF7F0();
  sub_253C8F190();
  v3();
  return v0;
}

uint64_t sub_253C8E184()
{
  uint64_t v1 = sub_253C8F1DC();
  v2(v1);
  sub_253BDF7F0();
  sub_253C8F06C();
  v3();
  return v0;
}

unint64_t sub_253C8E1D4()
{
  unint64_t result = qword_269D7CA60;
  if (!qword_269D7CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CA60);
  }
  return result;
}

unint64_t sub_253C8E220()
{
  unint64_t result = qword_269D7CA70;
  if (!qword_269D7CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CA70);
  }
  return result;
}

unint64_t sub_253C8E26C()
{
  unint64_t result = qword_269D7CA78;
  if (!qword_269D7CA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CA78);
  }
  return result;
}

unint64_t sub_253C8E2B8()
{
  unint64_t result = qword_269D7CA80;
  if (!qword_269D7CA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CA80);
  }
  return result;
}

unint64_t sub_253C8E304()
{
  unint64_t result = qword_269D7CA88;
  if (!qword_269D7CA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CA88);
  }
  return result;
}

uint64_t _s20DisambiguationResultO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v5 = v6 - 4;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s20DisambiguationResultO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253C8E4A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20DisambiguationResultO10CodingKeysOMa()
{
  return &_s20DisambiguationResultO10CodingKeysON;
}

ValueMetadata *_s20DisambiguationResultO19AbandonedCodingKeysOMa()
{
  return &_s20DisambiguationResultO19AbandonedCodingKeysON;
}

ValueMetadata *_s20DisambiguationResultO22ItemSelectedCodingKeysOMa()
{
  return &_s20DisambiguationResultO22ItemSelectedCodingKeysON;
}

unsigned char *_s20DisambiguationResultO22ItemSelectedCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x253C8E59CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s20DisambiguationResultO23ValueSelectedCodingKeysOMa()
{
  return &_s20DisambiguationResultO23ValueSelectedCodingKeysON;
}

ValueMetadata *_s20DisambiguationResultO18RejectedCodingKeysOMa()
{
  return &_s20DisambiguationResultO18RejectedCodingKeysON;
}

ValueMetadata *_s18ConfirmationResultOMa()
{
  return &_s18ConfirmationResultON;
}

unint64_t sub_253C8E600()
{
  unint64_t result = qword_269D7CAB8;
  if (!qword_269D7CAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CAB8);
  }
  return result;
}

unint64_t sub_253C8E650()
{
  unint64_t result = qword_269D7CAC0;
  if (!qword_269D7CAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CAC0);
  }
  return result;
}

unint64_t sub_253C8E6A0()
{
  unint64_t result = qword_269D7CAC8;
  if (!qword_269D7CAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CAC8);
  }
  return result;
}

unint64_t sub_253C8E6F0()
{
  unint64_t result = qword_269D7CAD0;
  if (!qword_269D7CAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CAD0);
  }
  return result;
}

unint64_t sub_253C8E740()
{
  unint64_t result = qword_269D7CAD8;
  if (!qword_269D7CAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CAD8);
  }
  return result;
}

unint64_t sub_253C8E790()
{
  unint64_t result = qword_269D7CAE0;
  if (!qword_269D7CAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CAE0);
  }
  return result;
}

unint64_t sub_253C8E7E0()
{
  unint64_t result = qword_269D7CAE8;
  if (!qword_269D7CAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CAE8);
  }
  return result;
}

unint64_t sub_253C8E830()
{
  unint64_t result = qword_269D7CAF0;
  if (!qword_269D7CAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CAF0);
  }
  return result;
}

unint64_t sub_253C8E880()
{
  unint64_t result = qword_269D7CAF8;
  if (!qword_269D7CAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CAF8);
  }
  return result;
}

unint64_t sub_253C8E8D0()
{
  unint64_t result = qword_269D7CB00;
  if (!qword_269D7CB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB00);
  }
  return result;
}

unint64_t sub_253C8E920()
{
  unint64_t result = qword_269D7CB08;
  if (!qword_269D7CB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB08);
  }
  return result;
}

unint64_t sub_253C8E970()
{
  unint64_t result = qword_269D7CB10;
  if (!qword_269D7CB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB10);
  }
  return result;
}

unint64_t sub_253C8E9C0()
{
  unint64_t result = qword_269D7CB18;
  if (!qword_269D7CB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB18);
  }
  return result;
}

unint64_t sub_253C8EA10()
{
  unint64_t result = qword_269D7CB20;
  if (!qword_269D7CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB20);
  }
  return result;
}

unint64_t sub_253C8EA5C()
{
  unint64_t result = qword_269D7CB48;
  if (!qword_269D7CB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB48);
  }
  return result;
}

unint64_t sub_253C8EAA8()
{
  unint64_t result = qword_269D7CB50;
  if (!qword_269D7CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB50);
  }
  return result;
}

unint64_t sub_253C8EAF4()
{
  unint64_t result = qword_269D7CB58;
  if (!qword_269D7CB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB58);
  }
  return result;
}

unint64_t sub_253C8EB40()
{
  unint64_t result = qword_269D7CB60;
  if (!qword_269D7CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB60);
  }
  return result;
}

unsigned char *_s18ConfirmationResultOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253C8EC58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s18ConfirmationResultO10CodingKeysOMa()
{
  return &_s18ConfirmationResultO10CodingKeysON;
}

ValueMetadata *_s18ConfirmationResultO19ConfirmedCodingKeysOMa()
{
  return &_s18ConfirmationResultO19ConfirmedCodingKeysON;
}

ValueMetadata *_s18ConfirmationResultO18RejectedCodingKeysOMa()
{
  return &_s18ConfirmationResultO18RejectedCodingKeysON;
}

ValueMetadata *_s18ConfirmationResultO19AbandonedCodingKeysOMa()
{
  return &_s18ConfirmationResultO19AbandonedCodingKeysON;
}

unint64_t sub_253C8ECC4()
{
  unint64_t result = qword_269D7CB88;
  if (!qword_269D7CB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB88);
  }
  return result;
}

unint64_t sub_253C8ED14()
{
  unint64_t result = qword_269D7CB90;
  if (!qword_269D7CB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB90);
  }
  return result;
}

unint64_t sub_253C8ED64()
{
  unint64_t result = qword_269D7CB98;
  if (!qword_269D7CB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CB98);
  }
  return result;
}

unint64_t sub_253C8EDB4()
{
  unint64_t result = qword_269D7CBA0;
  if (!qword_269D7CBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CBA0);
  }
  return result;
}

unint64_t sub_253C8EE04()
{
  unint64_t result = qword_269D7CBA8;
  if (!qword_269D7CBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CBA8);
  }
  return result;
}

unint64_t sub_253C8EE54()
{
  unint64_t result = qword_269D7CBB0;
  if (!qword_269D7CBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CBB0);
  }
  return result;
}

unint64_t sub_253C8EEA4()
{
  unint64_t result = qword_269D7CBB8;
  if (!qword_269D7CBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CBB8);
  }
  return result;
}

unint64_t sub_253C8EEF4()
{
  unint64_t result = qword_269D7CBC0;
  if (!qword_269D7CBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CBC0);
  }
  return result;
}

unint64_t sub_253C8EF44()
{
  unint64_t result = qword_269D7CBC8;
  if (!qword_269D7CBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CBC8);
  }
  return result;
}

uint64_t sub_253C8EFAC()
{
  return sub_253DF52E0();
}

uint64_t sub_253C8EFD8()
{
  return sub_253DF52E0();
}

uint64_t sub_253C8EFFC()
{
  return sub_253DF52E0();
}

uint64_t sub_253C8F028()
{
  return sub_253DF5B30();
}

uint64_t sub_253C8F04C()
{
  return sub_253DEFE90();
}

uint64_t sub_253C8F07C()
{
  return 0;
}

uint64_t sub_253C8F098()
{
  return 0;
}

uint64_t sub_253C8F0D0()
{
  return sub_253DF5BC0();
}

uint64_t sub_253C8F0EC()
{
  return sub_253DEFFE0();
}

uint64_t sub_253C8F108()
{
  return sub_253DEFE90();
}

uint64_t sub_253C8F120()
{
  return sub_253DF4BA0();
}

uint64_t sub_253C8F140()
{
  return sub_253DF52E0();
}

uint64_t sub_253C8F158()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_253C8F174()
{
  return sub_253DF52E0();
}

void sub_253C8F1A0(uint64_t a1@<X8>)
{
  *(void *)(v2 - 80) = a1;
  *(void *)(v2 - 72) = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_253C8F1B0()
{
  return v0;
}

uint64_t sub_253C8F1C4()
{
  return sub_253DF52E0();
}

uint64_t sub_253C8F1DC()
{
  return 0;
}

uint64_t sub_253C8F1F8@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_253C8F204()
{
  _s20DisambiguationResultOMa(0);
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253C8F254()
{
  return _s20DisambiguationResultOMa(0);
}

uint64_t sub_253C8F27C()
{
  return v0;
}

uint64_t sub_253C8F2A4()
{
  return sub_253DF5C40();
}

uint64_t sub_253C8F2C8()
{
  return v0;
}

uint64_t sub_253C8F300()
{
  return swift_getEnumCaseMultiPayload();
}

void *sub_253C8F318(uint64_t a1, uint64_t a2, size_t a3)
{
  return memcpy(v3, v4, a3);
}

uint64_t sub_253C8F330()
{
  return v0;
}

void sub_253C8F33C()
{
  *(void *)(v0 - 80) = 0;
  *(void *)(v0 - 72) = 0xE000000000000000;
}

uint64_t sub_253C8F34C()
{
  _s20DisambiguationResultOMa(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_253C8F394()
{
  return sub_253DF52E0();
}

uint64_t sub_253C8F3AC()
{
  return v0;
}

uint64_t sub_253C8F3B8()
{
  return v0;
}

uint64_t sub_253C8F3E8()
{
  return sub_253DEFE90();
}

uint64_t sub_253C8F410()
{
  return sub_253DF5B30();
}

uint64_t sub_253C8F42C(uint64_t a1)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

uint64_t sub_253C8F460()
{
  return v0;
}

void sub_253C8F480(uint64_t a1@<X8>)
{
  *(void *)(v2 - 80) = a1;
  *(void *)(v2 - 72) = (v1 - 32) | 0x8000000000000000;
}

uint64_t sub_253C8F4A0()
{
  return v0;
}

uint64_t sub_253C8F4B4()
{
  return sub_253DF5C40();
}

uint64_t sub_253C8F4CC()
{
  *(void *)(v0 - 80) = 0;
  *(void *)(v0 - 72) = 0xE000000000000000;
  return sub_253DF58F0();
}

uint64_t sub_253C8F4EC()
{
  *(void *)(v0 - 80) = 0;
  *(void *)(v0 - 72) = 0xE000000000000000;
  return sub_253DF58F0();
}

uint64_t sub_253C8F50C()
{
  *(void *)(v0 - 80) = 0;
  *(void *)(v0 - 72) = 0xE000000000000000;
  return sub_253DF58F0();
}

uint64_t sub_253C8F52C()
{
  return v0;
}

uint64_t sub_253C8F538()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253C8F564()
{
  return v0;
}

uint64_t sub_253C8F570()
{
  return sub_253DEFFE0();
}

uint64_t sub_253C8F590()
{
  return sub_253DEFFB0();
}

uint64_t sub_253C8F5B0()
{
  return v0 + *(int *)(v1 + 24);
}

uint64_t sub_253C8F5BC()
{
  return v0;
}

uint64_t sub_253C8F5C8()
{
  return 0;
}

uint64_t sub_253C8F5F0()
{
  return v0;
}

uint64_t sub_253C8F61C()
{
  return v0;
}

uint64_t sub_253C8F628(uint64_t a1, void (*a2)(void, void))
{
  uint64_t v5 = sub_253BDEDD8(&qword_26B255868);
  MEMORY[0x270FA5388](v5 - 8);
  BOOL v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s23StatementStepEvaluationOMa(0);
  uint64_t v25 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v26 = (uint64_t)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v24 = (uint64_t)v21 - v11;
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return MEMORY[0x263F8EE78];
  }
  v21[1] = v2;
  uint64_t v13 = sub_253BDEDD8(&qword_26B2552B8);
  uint64_t v14 = a1
      + ((*(unsigned __int8 *)(*(void *)(v13 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80));
  uint64_t v15 = *(void *)(*(void *)(v13 - 8) + 72);
  v21[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v22 = v8;
  uint64_t v23 = a2;
  do
  {
    a2(v14, v14 + *(int *)(v13 + 48));
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v7, 1, v8) == 1)
    {
      sub_253BDF664((uint64_t)v7, &qword_26B255868);
    }
    else
    {
      uint64_t v17 = v24;
      sub_253C91AB4((uint64_t)v7, v24);
      sub_253C91AB4(v17, v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = sub_253DC43D4(0, *(void *)(v16 + 16) + 1, 1, v16);
      }
      unint64_t v19 = *(void *)(v16 + 16);
      unint64_t v18 = *(void *)(v16 + 24);
      if (v19 >= v18 >> 1) {
        uint64_t v16 = sub_253DC43D4(v18 > 1, v19 + 1, 1, v16);
      }
      *(void *)(v16 + 16) = v19 + 1;
      sub_253C91AB4(v26, v16+ ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80))+ *(void *)(v25 + 72) * v19);
      uint64_t v8 = v22;
      a2 = v23;
    }
    v14 += v15;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_253C8F904@<X0>(NSObject *a1@<X0>, void (*a2)(char *, unint64_t, uint64_t)@<X1>, void *a3@<X3>, uint64_t a4@<X8>)
{
  v193 = a3;
  v228 = a2;
  uint64_t v213 = a4;
  uint64_t v190 = sub_253DF1400();
  uint64_t v186 = *(void *)(v190 - 8);
  MEMORY[0x270FA5388](v190);
  v185 = (char *)&v181 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_253DEFFE0();
  uint64_t v197 = *(void *)(v198 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v198);
  uint64_t v191 = (char *)&v181 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v199 = (char *)&v181 - v8;
  uint64_t v192 = sub_253DF0BE0();
  uint64_t v189 = *(void *)(v192 - 8);
  MEMORY[0x270FA5388](v192);
  v188 = (char *)&v181 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253DF0A20();
  uint64_t v233 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v187 = (char *)&v181 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v230 = (char *)&v181 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v206 = (char *)&v181 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v215 = (char *)&v181 - v17;
  uint64_t v194 = sub_253BDEDD8(&qword_26B255868);
  uint64_t v18 = MEMORY[0x270FA5388](v194);
  v203 = (char *)&v181 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v200 = (uint64_t)&v181 - v21;
  MEMORY[0x270FA5388](v20);
  v224 = (char *)&v181 - v22;
  uint64_t v23 = sub_253BDEDD8(&qword_26B255420);
  MEMORY[0x270FA5388](v23 - 8);
  os_log_t v220 = (os_log_t)((char *)&v181 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v232 = sub_253DF10D0();
  uint64_t v225 = *(void *)(v232 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v232);
  v202 = (char *)&v181 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  v229 = (char *)&v181 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v181 - v29;
  uint64_t v31 = sub_253DF0880();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v184 = (char *)&v181 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v207 = (char *)&v181 - v36;
  MEMORY[0x270FA5388](v35);
  unint64_t v38 = (char *)&v181 - v37;
  uint64_t v39 = sub_253DEFE90();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v222 = (char *)&v181 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v205 = (char *)&v181 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (char *)&v181 - v45;
  uint64_t v47 = sub_253DF24A0();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v226 = v47;
  uint64_t v227 = v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v208 = (char *)&v181 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v183 = (char *)&v181 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v201 = (char *)&v181 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v209 = (char *)&v181 - v56;
  MEMORY[0x270FA5388](v55);
  uint64_t v58 = (char *)&v181 - v57;
  sub_253DF1790();
  uint64_t v59 = *(char **)(v40 + 16);
  os_log_t v219 = a1;
  uint64_t v60 = a1;
  uint64_t v61 = v39;
  v218 = (uint8_t *)(v40 + 16);
  v217 = (void (*)(char *, os_log_t, uint64_t))v59;
  ((void (*)(char *, NSObject *, uint64_t))v59)(v46, v60, v39);
  uint64_t v223 = v32;
  uint64_t v62 = *(void (**)(char *, void, uint64_t))(v32 + 16);
  v216 = (void (*)(void, void))v38;
  uint64_t v221 = v31;
  uint64_t v196 = v32 + 16;
  v195 = v62;
  v62(v38, v228, v31);
  uint64_t v63 = sub_253DF2490();
  os_log_type_t v64 = sub_253DF56D0();
  LODWORD(v204) = v64;
  BOOL v65 = os_log_type_enabled(v63, v64);
  uint64_t v231 = v10;
  uint64_t v66 = v233;
  uint64_t v214 = v61;
  uint64_t v212 = v40;
  v210 = v30;
  if (v65)
  {
    uint64_t v67 = swift_slowAlloc();
    uint64_t v182 = swift_slowAlloc();
    v234 = (char *)v182;
    *(_DWORD *)uint64_t v67 = 136315394;
    sub_253C920EC((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
    uint64_t v68 = sub_253DF5C40();
    uint64_t v235 = sub_253D8E5FC(v68, v69, (uint64_t *)&v234);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    uint64_t v211 = *(void (**)(char *, uint64_t))(v40 + 8);
    v211(v46, v61);
    *(_WORD *)(v67 + 12) = 2080;
    uint64_t v70 = v216;
    sub_253DF0870();
    uint64_t v71 = v232;
    uint64_t v72 = MEMORY[0x25A26F710]();
    unint64_t v74 = v73;
    swift_bridgeObjectRelease();
    uint64_t v235 = sub_253D8E5FC(v72, v74, (uint64_t *)&v234);
    uint64_t v10 = v231;
    sub_253DF5820();
    uint64_t v75 = (uint64_t)v224;
    swift_bridgeObjectRelease();
    uint64_t v76 = v70;
    uint64_t v77 = v221;
    v216 = *(void (**)(void, void))(v223 + 8);
    v216(v76, v221);
    _os_log_impl(&dword_253BD8000, v63, (os_log_type_t)v204, "Evaluating system response with id=%s, statementResults=%s", (uint8_t *)v67, 0x16u);
    uint64_t v78 = v182;
    swift_arrayDestroy();
    MEMORY[0x25A2709B0](v78, -1, -1);
    uint64_t v79 = v67;
    uint64_t v80 = v233;
    MEMORY[0x25A2709B0](v79, -1, -1);

    uint64_t v81 = v226;
    uint64_t v82 = *(void (**)(char *, uint64_t))(v227 + 8);
    v82(v58, v226);
    uint64_t v83 = v214;
  }
  else
  {
    uint64_t v83 = v61;
    uint64_t v211 = *(void (**)(char *, uint64_t))(v40 + 8);
    v211(v46, v61);
    uint64_t v84 = v216;
    uint64_t v77 = v221;
    v216 = *(void (**)(void, void))(v223 + 8);
    v216(v84, v221);

    uint64_t v81 = v226;
    uint64_t v82 = *(void (**)(char *, uint64_t))(v227 + 8);
    v82(v58, v226);
    uint64_t v75 = (uint64_t)v224;
    uint64_t v80 = v66;
    uint64_t v71 = v232;
  }
  os_log_t v85 = v220;
  sub_253C60DAC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v85, 1, v71) == 1)
  {
    sub_253BDF664((uint64_t)v85, &qword_26B255420);
    uint64_t v86 = v209;
    sub_253DF1790();
    unint64_t v87 = v205;
    v217(v205, v219, v83);
    uint64_t v88 = sub_253DF2490();
    os_log_type_t v89 = sub_253DF56E0();
    if (os_log_type_enabled(v88, v89))
    {
      uint64_t v90 = (uint8_t *)swift_slowAlloc();
      uint64_t v91 = swift_slowAlloc();
      v234 = (char *)v91;
      *(_DWORD *)uint64_t v90 = 136315138;
      sub_253C920EC((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
      uint64_t v92 = sub_253DF5C40();
      uint64_t v235 = sub_253D8E5FC(v92, v93, (uint64_t *)&v234);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      v211(v87, v83);
      _os_log_impl(&dword_253BD8000, v88, v89, "Could not extract statementId for system response with id %s, skipping", v90, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v91, -1, -1);
      MEMORY[0x25A2709B0](v90, -1, -1);

      uint64_t v94 = v209;
    }
    else
    {
      v211(v87, v83);

      uint64_t v94 = v86;
    }
    v82(v94, v226);
    uint64_t v115 = v213;
    uint64_t v116 = _s23StatementStepEvaluationOMa(0);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v115, 1, 1, v116);
  }
  unint64_t v95 = v210;
  (*(void (**)(char *, os_log_t, uint64_t))(v225 + 32))(v210, v85, v71);
  v217(v222, v219, v83);
  unint64_t v96 = v215;
  sub_253DF10C0();
  unint64_t v97 = v206;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v206, v96, v10);
  int v98 = (*(uint64_t (**)(char *, uint64_t))(v80 + 88))(v97, v10);
  BOOL v99 = v98 == *MEMORY[0x263F4C7D8] || v98 == *MEMORY[0x263F4C790];
  unint64_t v100 = v207;
  v204 = v82;
  if (v99) {
    goto LABEL_12;
  }
  if (v98 == *MEMORY[0x263F4C798]
    || v98 == *MEMORY[0x263F4C7A0]
    || v98 == *MEMORY[0x263F4C7B8]
    || v98 == *MEMORY[0x263F4C7C0])
  {
    goto LABEL_27;
  }
  if (v98 == *MEMORY[0x263F4C7A8])
  {
    (*(void (**)(char *, uint64_t))(v80 + 96))(v97, v10);
    uint64_t v146 = v189;
    uint64_t v147 = v188;
    (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v188, v97, v192);
    uint64_t v148 = (uint64_t)v199;
    sub_253DF1090();
    uint64_t v149 = (uint64_t)v191;
    sub_253DF10A0();
    sub_253C91554(v148, v149, (uint64_t)v222, v200);
    uint64_t v150 = *(void (**)(uint64_t, uint64_t))(v197 + 8);
    uint64_t v151 = v198;
    v150(v149, v198);
    v150((uint64_t)v199, v151);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v147, v192);
LABEL_40:
    uint64_t v159 = _s23StatementStepEvaluationOMa(0);
    uint64_t v160 = v200;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v200, 0, 1, v159);
    sub_253BDF6B8(v160, v75, &qword_26B255868);
    goto LABEL_32;
  }
  if (v98 == *MEMORY[0x263F4C7C8])
  {
    (*(void (**)(char *, uint64_t))(v80 + 96))(v97, v10);
    uint64_t v152 = v186;
    BOOL v153 = v185;
    (*(void (**)(char *, char *, uint64_t))(v186 + 32))(v185, v97, v190);
    uint64_t v154 = (uint64_t)v199;
    sub_253DF1090();
    uint64_t v155 = (uint64_t)v191;
    sub_253DF10A0();
    sub_253C91598(v154, v155, (uint64_t)v222, v200);
    v156 = *(void (**)(uint64_t, uint64_t))(v197 + 8);
    uint64_t v157 = v155;
    uint64_t v158 = v198;
    v156(v157, v198);
    v156(v154, v158);
    (*(void (**)(char *, uint64_t))(v152 + 8))(v153, v190);
    goto LABEL_40;
  }
  uint64_t v82 = v204;
  if (v98 == *MEMORY[0x263F4C788])
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v80 + 8))(v97, v10);
    unint64_t v101 = v201;
    sub_253DF1790();
    v195(v100, v228, v77);
    uint64_t v102 = sub_253DF2490();
    LODWORD(v220) = sub_253DF56D0();
    if (os_log_type_enabled(v102, (os_log_type_t)v220))
    {
      os_log_t v219 = v102;
      uint64_t v103 = (uint8_t *)swift_slowAlloc();
      v217 = (void (*)(char *, os_log_t, uint64_t))swift_slowAlloc();
      v234 = (char *)v217;
      v218 = v103;
      *(_DWORD *)uint64_t v103 = 136315138;
      uint64_t v104 = sub_253DF0870();
      uint64_t v105 = *(void *)(v104 + 16);
      if (v105)
      {
        uint64_t v235 = MEMORY[0x263F8EE78];
        sub_253DC7140(0, v105, 0);
        v228 = *(void (**)(char *, unint64_t, uint64_t))(v225 + 16);
        unint64_t v106 = (*(unsigned __int8 *)(v225 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80);
        uint64_t v209 = (char *)v104;
        unint64_t v107 = v104 + v106;
        uint64_t v108 = *(void *)(v225 + 72);
        uint64_t v109 = (void (**)(char *, uint64_t))(v225 + 8);
        uint64_t v110 = v231;
        uint64_t v71 = v232;
        do
        {
          uint64_t v111 = v229;
          v228(v229, v107, v71);
          sub_253DF10C0();
          (*v109)(v111, v71);
          uint64_t v112 = v235;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253DC7140(0, *(void *)(v112 + 16) + 1, 1);
            uint64_t v112 = v235;
          }
          unint64_t v114 = *(void *)(v112 + 16);
          unint64_t v113 = *(void *)(v112 + 24);
          if (v114 >= v113 >> 1)
          {
            sub_253DC7140(v113 > 1, v114 + 1, 1);
            uint64_t v112 = v235;
          }
          *(void *)(v112 + 16) = v114 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v233 + 32))(v112+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(void *)(v233 + 72) * v114, v230, v110);
          uint64_t v235 = v112;
          v107 += v108;
          --v105;
          uint64_t v71 = v232;
        }
        while (v105);
        swift_bridgeObjectRelease();
        uint64_t v81 = v226;
        uint64_t v10 = v110;
        unint64_t v100 = v207;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v112 = MEMORY[0x263F8EE78];
        uint64_t v71 = v232;
      }
      unint64_t v120 = v218;
      uint64_t v121 = MEMORY[0x25A26F710](v112, v10);
      unint64_t v123 = v122;
      swift_bridgeObjectRelease();
      uint64_t v235 = sub_253D8E5FC(v121, v123, (uint64_t *)&v234);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      v216(v100, v221);
      os_log_t v124 = v219;
      _os_log_impl(&dword_253BD8000, v219, (os_log_type_t)v220, "Skipping system response outcome not related to plan resolution, outcomes=%s", v120, 0xCu);
      unint64_t v125 = v217;
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v125, -1, -1);
      MEMORY[0x25A2709B0](v120, -1, -1);

      v204(v201, v81);
      uint64_t v75 = (uint64_t)v224;
      unint64_t v95 = v210;
    }
    else
    {
      v216(v100, v77);

      v82(v101, v81);
      uint64_t v71 = v232;
    }
    uint64_t v126 = _s23StatementStepEvaluationOMa(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v75, 1, 1, v126);
    goto LABEL_32;
  }
  if (v98 != *MEMORY[0x263F4C7B0])
  {
    if (v98 != *MEMORY[0x263F4C7D0])
    {
      uint64_t v161 = v183;
      sub_253DF1790();
      v195(v184, v228, v77);
      uint64_t v162 = sub_253DF2490();
      LODWORD(v228) = sub_253DF56E0();
      if (os_log_type_enabled(v162, (os_log_type_t)v228))
      {
        os_log_t v220 = v162;
        os_log_t v163 = (os_log_t)swift_slowAlloc();
        uint64_t v164 = swift_slowAlloc();
        v234 = (char *)v164;
        LODWORD(v163->isa) = 136315138;
        v165 = v184;
        uint64_t v166 = sub_253DF0870();
        uint64_t v167 = *(void *)(v166 + 16);
        if (v167)
        {
          v218 = (uint8_t *)v164;
          os_log_t v219 = v163;
          uint64_t v235 = MEMORY[0x263F8EE78];
          sub_253DC7140(0, v167, 0);
          v230 = *(char **)(v225 + 16);
          unint64_t v168 = v166 + ((*(unsigned __int8 *)(v225 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80));
          uint64_t v169 = *(void *)(v225 + 72);
          uint64_t v170 = (void (**)(char *, uint64_t))(v225 + 8);
          do
          {
            unint64_t v171 = v229;
            ((void (*)(char *, unint64_t, uint64_t))v230)(v229, v168, v71);
            sub_253DF10C0();
            (*v170)(v171, v71);
            uint64_t v172 = v235;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_253DC7140(0, *(void *)(v172 + 16) + 1, 1);
              uint64_t v172 = v235;
            }
            unint64_t v174 = *(void *)(v172 + 16);
            unint64_t v173 = *(void *)(v172 + 24);
            if (v174 >= v173 >> 1)
            {
              sub_253DC7140(v173 > 1, v174 + 1, 1);
              uint64_t v172 = v235;
            }
            *(void *)(v172 + 16) = v174 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v233 + 32))(v172+ ((*(unsigned __int8 *)(v233 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v233 + 80))+ *(void *)(v233 + 72) * v174, v187, v231);
            uint64_t v235 = v172;
            v168 += v169;
            --v167;
            uint64_t v71 = v232;
          }
          while (v167);
          swift_bridgeObjectRelease();
          uint64_t v82 = v204;
          v165 = v184;
          os_log_t v163 = v219;
          uint64_t v164 = (uint64_t)v218;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v172 = MEMORY[0x263F8EE78];
        }
        uint64_t v175 = v231;
        uint64_t v176 = MEMORY[0x25A26F710](v172, v231);
        unint64_t v178 = v177;
        swift_bridgeObjectRelease();
        uint64_t v235 = sub_253D8E5FC(v176, v178, (uint64_t *)&v234);
        sub_253DF5820();
        swift_bridgeObjectRelease();
        v216(v165, v221);
        os_log_t v179 = v220;
        _os_log_impl(&dword_253BD8000, v220, (os_log_type_t)v228, "Found an unhandled system response outcome, systemResponseOutcomesFound=%s", (uint8_t *)v163, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25A2709B0](v164, -1, -1);
        MEMORY[0x25A2709B0](v163, -1, -1);

        v82(v183, v226);
        uint64_t v10 = v175;
        uint64_t v80 = v233;
        uint64_t v75 = (uint64_t)v224;
        unint64_t v95 = v210;
      }
      else
      {
        v216(v184, v77);

        v82(v161, v81);
      }
      uint64_t v180 = _s23StatementStepEvaluationOMa(0);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v75, 1, 1, v180);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v206, v10);
      goto LABEL_32;
    }
    goto LABEL_12;
  }
LABEL_27:
  v118 = sub_253BDF5F8(v193, v193[3]);
  uint64_t v119 = _s19TranscriptRetrieverVMa();
  sub_253C1601C((uint64_t)v118 + *(int *)(v119 + 24), (uint64_t)&v234);
  sub_253C9175C((uint64_t)v222, &v234, v75);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v234);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v97, v10);
LABEL_32:
  uint64_t v127 = (uint64_t)v203;
  uint64_t v128 = v202;
  char v129 = v208;
  sub_253DF1790();
  uint64_t v130 = v225;
  (*(void (**)(char *, char *, uint64_t))(v225 + 16))(v128, v95, v71);
  sub_253C92084(v75, v127);
  uint64_t v131 = sub_253DF2490();
  os_log_type_t v132 = sub_253DF56C0();
  if (os_log_type_enabled(v131, v132))
  {
    uint64_t v133 = swift_slowAlloc();
    v230 = (char *)swift_slowAlloc();
    v234 = v230;
    *(_DWORD *)uint64_t v133 = 136315394;
    v229 = (char *)(v133 + 4);
    uint64_t v134 = v199;
    sub_253DF10A0();
    sub_253C920EC((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
    uint64_t v135 = v198;
    uint64_t v136 = sub_253DF5C40();
    unint64_t v138 = v137;
    (*(void (**)(char *, uint64_t))(v197 + 8))(v134, v135);
    uint64_t v235 = sub_253D8E5FC(v136, v138, (uint64_t *)&v234);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    uint64_t v139 = *(void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v140 = v232;
    v139(v128, v232);
    *(_WORD *)(v133 + 12) = 2080;
    sub_253C92084(v127, v200);
    uint64_t v141 = sub_253DF5290();
    uint64_t v235 = sub_253D8E5FC(v141, v142, (uint64_t *)&v234);
    sub_253DF5820();
    v143 = v224;
    swift_bridgeObjectRelease();
    sub_253BDF664(v127, &qword_26B255868);
    _os_log_impl(&dword_253BD8000, v131, v132, "Generated a statement step result for statement %s: %s", (uint8_t *)v133, 0x16u);
    uint64_t v144 = v230;
    swift_arrayDestroy();
    MEMORY[0x25A2709B0](v144, -1, -1);
    MEMORY[0x25A2709B0](v133, -1, -1);

    v204(v208, v226);
    (*(void (**)(char *, uint64_t))(v233 + 8))(v215, v231);
    v211(v222, v214);
    v139(v210, v140);
    uint64_t v75 = (uint64_t)v143;
  }
  else
  {

    sub_253BDF664(v127, &qword_26B255868);
    uint64_t v145 = *(void (**)(char *, uint64_t))(v130 + 8);
    v145(v128, v71);
    v204(v129, v226);
    (*(void (**)(char *, uint64_t))(v233 + 8))(v215, v10);
    v211(v222, v214);
    v145(v95, v71);
  }
  return sub_253BDF6B8(v75, v213, &qword_26B255868);
}

uint64_t sub_253C91554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_253C915DC(a1, a2, a3, MEMORY[0x263F4C9A8], _s25ParameterNotAllowedResultVMa, MEMORY[0x263F4C9A0], a4);
}

uint64_t sub_253C91598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_253C915DC(a1, a2, a3, MEMORY[0x263F4CCF0], _s33ParameterCandidatesNotFoundResultVMa, MEMORY[0x263F4CCE8], a4);
}

uint64_t sub_253C915DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(void)@<X4>, uint64_t (*a5)(void)@<X5>, void (*a6)(uint64_t)@<X7>, uint64_t a7@<X8>)
{
  uint64_t v13 = _s23ParameterStepEvaluationVMa(0);
  uint64_t v14 = a7 + *(int *)(v13 + 28);
  a4();
  uint64_t v15 = v14 + *(int *)(a5(0) + 20);
  sub_253DEFE90();
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, a3);
  _s19ParameterStepResultOMa(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = sub_253DEFFE0();
  sub_253BDF7F0();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  v19(a7, a1, v17);
  uint64_t v20 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v19)(a7 + *(int *)(v13 + 20), a2, v17);
  a6(v20);
  sub_253DF2D20();
  _s23StatementStepEvaluationOMa(0);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_253C9175C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_253DEFE90();
  sub_253C0F830();
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v9);
  sub_253C566F8();
  sub_253DF24A0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  sub_253C10D28();
  uint64_t v11 = sub_253BDEDD8(&qword_26B255868);
  MEMORY[0x270FA5388](v11 - 8);
  sub_253C10D28();
  uint64_t v14 = v13 - v12;
  sub_253BDF5F8(a2, a2[3]);
  sub_253C6C590(a1, v14);
  uint64_t v15 = _s23StatementStepEvaluationOMa(0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v14, 1, v15) == 1)
  {
    uint64_t v32 = a3;
    sub_253BDF664(v14, &qword_26B255868);
    sub_253DF1790();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v3, a1, v7);
    uint64_t v16 = sub_253DF2490();
    os_log_type_t v17 = sub_253DF56E0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v34 = v31;
      *(_DWORD *)uint64_t v18 = 136315138;
      sub_253C920EC((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
      uint64_t v19 = sub_253DF5C40();
      sub_253D8E5FC(v19, v20, &v34);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      uint64_t v21 = sub_253C92160();
      v22(v21);
      _os_log_impl(&dword_253BD8000, v16, v17, "Cannot retrieve a statement step for a prompt outcome with systemResponseEventId=%s", v18, 0xCu);
      uint64_t v23 = 1;
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v31, -1, -1);
      MEMORY[0x25A2709B0](v18, -1, -1);

      uint64_t v24 = sub_253C92148();
      v25(v24);
    }
    else
    {
      uint64_t v26 = sub_253C92160();
      v27(v26);

      uint64_t v28 = sub_253C92148();
      v29(v28);
      uint64_t v23 = 1;
    }
    a3 = v32;
  }
  else
  {
    sub_253C91AB4(v14, a3);
    uint64_t v23 = 0;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a3, v23, 1, v15);
}

uint64_t _s22StatementStepEvaluatorCMa()
{
  return self;
}

uint64_t sub_253C91AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s23StatementStepEvaluationOMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_253C91B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v74 = a2;
  uint64_t v65 = sub_253DF0880();
  sub_253C0F830();
  uint64_t v73 = v10;
  MEMORY[0x270FA5388](v11);
  sub_253C10D28();
  uint64_t v64 = v13 - v12;
  uint64_t v66 = sub_253DF41F0();
  sub_253C0F830();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  sub_253C566F8();
  uint64_t v17 = sub_253BDEDD8(&qword_26B2552C0);
  MEMORY[0x270FA5388](v17 - 8);
  sub_253C10D28();
  uint64_t v20 = v19 - v18;
  uint64_t v76 = sub_253BDEDD8(&qword_26B2552B8);
  sub_253C0F830();
  uint64_t v63 = v21;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v75 = (uint64_t)v57 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v62 = (uint64_t)v57 - v25;
  uint64_t v26 = sub_253DF4230();
  sub_253C0F830();
  uint64_t v28 = v27;
  MEMORY[0x270FA5388](v29);
  sub_253C10D28();
  uint64_t v32 = v31 - v30;
  v77[3] = a4;
  v77[4] = a5;
  uint64_t v33 = sub_253BDEE6C(v77);
  uint64_t v34 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(v33, v74, a4);
  uint64_t v35 = *(void *)(a1 + 16);
  if (v35)
  {
    uint64_t v58 = a3;
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
    uint64_t v36 = v28 + 16;
    uint64_t v38 = a1 + ((*(unsigned __int8 *)(v36 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 64));
    uint64_t v71 = *(void *)(v36 + 56);
    uint64_t v72 = v37;
    uint64_t v70 = v15 + 88;
    int v69 = *MEMORY[0x263F4DFE0];
    uint64_t v61 = v15 + 8;
    uint64_t v60 = v15 + 96;
    uint64_t v59 = (void (**)(uint64_t, uint64_t, uint64_t))(v73 + 32);
    uint64_t v68 = (void (**)(uint64_t, uint64_t))(v36 - 8);
    v57[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v39 = MEMORY[0x263F8EE78];
    uint64_t v40 = v76;
    uint64_t v73 = v36;
    uint64_t v74 = v26;
    do
    {
      v72(v32, v38, v26);
      sub_253DF4200();
      uint64_t v41 = sub_253C92134();
      int v43 = v42(v41);
      if (v43 == v69)
      {
        uint64_t v44 = sub_253C92134();
        v45(v44);
        uint64_t v67 = v39;
        uint64_t v46 = *v59;
        uint64_t v47 = v64;
        uint64_t v48 = v65;
        (*v59)(v64, v5, v65);
        uint64_t v49 = v20 + *(int *)(v76 + 48);
        sub_253DF4180();
        uint64_t v50 = v48;
        uint64_t v40 = v76;
        v46(v49, v47, v50);
        uint64_t v39 = v67;
        uint64_t v26 = v74;
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v20, 0, 1, v40);
      }
      else
      {
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v20, 1, 1, v40);
        uint64_t v51 = sub_253C92134();
        v52(v51);
      }
      (*v68)(v32, v26);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v20, 1, v40) == 1)
      {
        sub_253BDF664(v20, &qword_26B2552C0);
      }
      else
      {
        uint64_t v53 = v62;
        sub_253BDF6B8(v20, v62, &qword_26B2552B8);
        sub_253BDF6B8(v53, v75, &qword_26B2552B8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v39 = sub_253DC4564();
        }
        unint64_t v54 = *(void *)(v39 + 16);
        if (v54 >= *(void *)(v39 + 24) >> 1) {
          uint64_t v39 = sub_253DC4564();
        }
        *(void *)(v39 + 16) = v54 + 1;
        sub_253BDF6B8(v75, v39+ ((*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80))+ *(void *)(v63 + 72) * v54, &qword_26B2552B8);
        uint64_t v26 = v74;
      }
      v38 += v71;
      --v35;
    }
    while (v35);
    uint64_t v34 = swift_bridgeObjectRelease();
    a3 = v58;
  }
  else
  {
    uint64_t v39 = MEMORY[0x263F8EE78];
  }
  MEMORY[0x270FA5388](v34);
  v57[-2] = a3;
  v57[-1] = v77;
  uint64_t v55 = sub_253C8F628(v39, (void (*)(void, void))sub_253C9207C);
  swift_bridgeObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v77);
  return v55;
}

uint64_t sub_253C9207C@<X0>(NSObject *a1@<X0>, void (*a2)(char *, unint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  return sub_253C8F904(a1, a2, *(void **)(v3 + 24), a3);
}

uint64_t sub_253C92084(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_26B255868);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_253C920EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253C92134()
{
  return v0;
}

uint64_t sub_253C92148()
{
  return v0;
}

uint64_t sub_253C92160()
{
  return v0;
}

uint64_t sub_253C92178(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_253BDEDD8(&qword_26B255868);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = _s23StatementStepEvaluationOMa(0);
  uint64_t v20 = *(void *)(v22 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v22);
  uint64_t v21 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10)
  {
    uint64_t v11 = *(void *)(sub_253DF3030() - 8);
    uint64_t v12 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v13 = *(void *)(v11 + 72);
    uint64_t v18 = a1;
    swift_bridgeObjectRetain();
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t v19 = a2;
    while (1)
    {
      sub_253C938FC(v12, a2, (uint64_t)v7);
      if (v2) {
        break;
      }
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v7, 1, v22) == 1)
      {
        sub_253BDF664((uint64_t)v7, &qword_26B255868);
      }
      else
      {
        sub_253C9434C();
        sub_253C9434C();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v14 = sub_253DC43D4(0, *(void *)(v14 + 16) + 1, 1, v14);
        }
        unint64_t v16 = *(void *)(v14 + 16);
        unint64_t v15 = *(void *)(v14 + 24);
        if (v16 >= v15 >> 1) {
          uint64_t v14 = sub_253DC43D4(v15 > 1, v16 + 1, 1, v14);
        }
        *(void *)(v14 + 16) = v16 + 1;
        sub_253C9434C();
        a2 = v19;
      }
      v12 += v13;
      if (!--v10)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v14;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v14;
}

uint64_t sub_253C92490(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = sub_253C92508(a1, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 16) = v4;
  return v3;
}

uint64_t sub_253C92508(uint64_t a1, uint64_t a2)
{
  uint64_t v130 = _s19ValueStepEvaluationVMa(0);
  MEMORY[0x270FA5388](v130);
  char v129 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = _s24ActionConfirmationResultVMa(0);
  MEMORY[0x270FA5388](v128);
  uint64_t v127 = (char *)&v101 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = _s20ActionStepEvaluationVMa(0);
  MEMORY[0x270FA5388](v126);
  unint64_t v125 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = _s29ParameterDisambiguationResultVMa(0);
  MEMORY[0x270FA5388](v113);
  uint64_t v112 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = _s27ParameterConfirmationResultVMa(0);
  MEMORY[0x270FA5388](v111);
  uint64_t v110 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t found = _s33ParameterCandidatesNotFoundResultVMa(0);
  MEMORY[0x270FA5388](found);
  uint64_t v108 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = _s25ParameterNotAllowedResultVMa(0);
  MEMORY[0x270FA5388](v107);
  unint64_t v106 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = _s25ParameterNeedsValueResultVMa(0);
  MEMORY[0x270FA5388](v105);
  uint64_t v104 = (char *)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = _s19ParameterStepResultOMa(0);
  MEMORY[0x270FA5388](v124);
  uint64_t v133 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = _s23ParameterStepEvaluationVMa(0);
  MEMORY[0x270FA5388](v123);
  os_log_type_t v132 = (char *)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = _s24ToolDisambiguationResultVMa(0);
  MEMORY[0x270FA5388](v122);
  uint64_t v121 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _s14ToolStepResultOMa(0);
  MEMORY[0x270FA5388](v15 - 8);
  unint64_t v120 = (char *)&v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = _s18ToolStepEvaluationVMa(0);
  MEMORY[0x270FA5388](v119);
  v118 = (char *)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = _s23StatementStepEvaluationOMa(0);
  uint64_t v103 = *(void *)(v136 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v136);
  unint64_t v142 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  v143 = (char *)&v101 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v139 = (char *)&v101 - v22;
  uint64_t v23 = sub_253DEFE90();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v117 = (char *)&v101 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v135 = (char *)&v101 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v131 = (char *)&v101 - v30;
  MEMORY[0x270FA5388](v29);
  unint64_t v138 = (void (**)(char *, uint64_t))((char *)&v101 - v31);
  uint64_t v32 = _s19SystemResponseEventVMa(0);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v32 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v137 = (uint64_t)&v101 - v35;
  uint64_t v115 = sub_253DF24A0();
  uint64_t v114 = *(void *)(v115 - 8);
  MEMORY[0x270FA5388](v115);
  uint64_t v37 = (char *)&v101 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = *(void *)(a1 + 16);
  uint64_t v144 = v23;
  uint64_t v140 = v24;
  uint64_t v116 = v37;
  if (v38)
  {
    uint64_t v102 = a2;
    uint64_t v39 = a1 + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80));
    uint64_t v40 = *(void *)(v33 + 72);
    uint64_t v141 = (void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    uint64_t v134 = (void (**)(char *, uint64_t))(v24 + 8);
    uint64_t v101 = a1;
    swift_bridgeObjectRetain();
    uint64_t v41 = MEMORY[0x263F8EE80];
    uint64_t v43 = v137;
    uint64_t v42 = (char *)v138;
    do
    {
      sub_253C942AC();
      uint64_t v44 = v23;
      uint64_t v45 = *v141;
      (*v141)(v42, v43, v44);
      sub_253C942AC();
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v146 = v41;
      sub_253D87B8C();
      if (__OFADD__(*(void *)(v41 + 16), (v47 & 1) == 0))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        sub_253DF5CF0();
        __break(1u);
        JUMPOUT(0x253C9381CLL);
      }
      unint64_t v48 = v46;
      char v49 = v47;
      sub_253BDEDD8(&qword_269D7CBD0);
      char v50 = sub_253DF5A70();
      uint64_t v42 = (char *)v138;
      if (v50)
      {
        sub_253D87B8C();
        if ((v49 & 1) != (v52 & 1)) {
          goto LABEL_47;
        }
        unint64_t v48 = v51;
      }
      uint64_t v41 = v146;
      if (v49)
      {
        sub_253C942FC();
      }
      else
      {
        *(void *)(v146 + 8 * (v48 >> 6) + 64) |= 1 << v48;
        v45((char *)(*(void *)(v41 + 48) + *(void *)(v140 + 72) * v48), (uint64_t)v42, v144);
        sub_253C9434C();
        uint64_t v53 = *(void *)(v41 + 16);
        BOOL v54 = __OFADD__(v53, 1);
        uint64_t v55 = v53 + 1;
        if (v54) {
          goto LABEL_45;
        }
        *(void *)(v41 + 16) = v55;
        uint64_t v41 = v146;
      }
      swift_bridgeObjectRelease();
      uint64_t v23 = v144;
      (*v134)(v42, v144);
      uint64_t v43 = v137;
      sub_253C9439C(v137, (void (*)(void))_s19SystemResponseEventVMa);
      v39 += v40;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
    uint64_t v24 = v140;
    a2 = v102;
    uint64_t v37 = v116;
  }
  else
  {
    uint64_t v41 = MEMORY[0x263F8EE80];
  }
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_253C92178(a2, v41);
  swift_bridgeObjectRelease();
  sub_253DF1790();
  swift_bridgeObjectRetain_n();
  uint64_t v57 = sub_253DF2490();
  os_log_type_t v58 = sub_253DF56C0();
  BOOL v59 = os_log_type_enabled(v57, v58);
  uint64_t v60 = v131;
  if (v59)
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    uint64_t v62 = swift_slowAlloc();
    uint64_t v146 = v62;
    *(_DWORD *)uint64_t v61 = 136315138;
    uint64_t v63 = swift_bridgeObjectRetain();
    uint64_t v64 = MEMORY[0x25A26F710](v63, v136);
    unint64_t v66 = v65;
    swift_bridgeObjectRelease();
    uint64_t v145 = sub_253D8E5FC(v64, v66, &v146);
    uint64_t v23 = v144;
    sub_253DF5820();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_253BD8000, v57, v58, "Generated statement steps for system prompt resolutions: %s", v61, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2709B0](v62, -1, -1);
    uint64_t v67 = v61;
    uint64_t v24 = v140;
    MEMORY[0x25A2709B0](v67, -1, -1);

    (*(void (**)(char *, uint64_t))(v114 + 8))(v116, v115);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v37, v115);
  }
  uint64_t v68 = *(void *)(v56 + 16);
  if (v68)
  {
    unint64_t v69 = v56 + ((*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80));
    uint64_t v70 = *(void *)(v103 + 72);
    uint64_t v141 = (void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    uint64_t v71 = (void (**)(char *, char *, uint64_t))(v24 + 32);
    uint64_t v137 = v56;
    unint64_t v138 = (void (**)(char *, uint64_t))(v24 + 8);
    swift_bridgeObjectRetain();
    uint64_t v72 = MEMORY[0x263F8EE80];
    while (2)
    {
      uint64_t v73 = v70;
      sub_253C942AC();
      sub_253C942AC();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_253C9434C();
          sub_253C942AC();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          unint64_t v87 = v117;
          switch(EnumCaseMultiPayload)
          {
            case 1:
              uint64_t v88 = (uint64_t)v106;
              sub_253C9434C();
              (*v141)(v87, v88 + *(int *)(v107 + 20), v23);
              os_log_type_t v89 = _s25ParameterNotAllowedResultVMa;
              break;
            case 2:
              uint64_t v88 = (uint64_t)v108;
              sub_253C9434C();
              (*v141)(v87, v88 + *(int *)(found + 20), v23);
              os_log_type_t v89 = _s33ParameterCandidatesNotFoundResultVMa;
              break;
            case 3:
              uint64_t v88 = (uint64_t)v110;
              sub_253C9434C();
              (*v141)(v87, v88 + *(int *)(v111 + 24), v23);
              os_log_type_t v89 = _s27ParameterConfirmationResultVMa;
              break;
            case 4:
              uint64_t v88 = (uint64_t)v112;
              sub_253C9434C();
              (*v141)(v87, v88 + *(int *)(v113 + 24), v23);
              os_log_type_t v89 = _s29ParameterDisambiguationResultVMa;
              break;
            default:
              uint64_t v88 = (uint64_t)v104;
              sub_253C9434C();
              (*v141)(v87, v88 + *(int *)(v105 + 20), v23);
              os_log_type_t v89 = _s25ParameterNeedsValueResultVMa;
              break;
          }
          sub_253C9439C(v88, (void (*)(void))v89);
          uint64_t v78 = v135;
          (*v71)(v135, v87, v23);
          uint64_t v84 = _s23ParameterStepEvaluationVMa;
          uint64_t v85 = (uint64_t)v132;
          goto LABEL_31;
        case 2u:
          uint64_t v74 = v125;
          sub_253C9434C();
          uint64_t v80 = v127;
          sub_253C942AC();
          uint64_t v81 = &v80[*(int *)(v128 + 20)];
          uint64_t v78 = v135;
          (*v71)(v135, v81, v23);
          uint64_t v79 = _s20ActionStepEvaluationVMa;
          goto LABEL_23;
        case 3u:
          uint64_t v74 = v129;
          sub_253C9434C();
          uint64_t v82 = &v74[*(int *)(v130 + 24)];
          uint64_t v83 = &v82[*(int *)(_s25ValueDisambiguationResultVMa(0) + 24)];
          uint64_t v78 = v135;
          (*v141)(v135, (uint64_t)v83, v23);
          uint64_t v79 = _s19ValueStepEvaluationVMa;
          goto LABEL_23;
        default:
          uint64_t v74 = v118;
          sub_253C9434C();
          sub_253C942AC();
          uint64_t v75 = v121;
          sub_253C9434C();
          uint64_t v76 = v135;
          (*v141)(v135, (uint64_t)&v75[*(int *)(v122 + 24)], v23);
          uint64_t v77 = (uint64_t)v75;
          uint64_t v78 = v76;
          uint64_t v60 = v131;
          sub_253C9439C(v77, (void (*)(void))_s24ToolDisambiguationResultVMa);
          uint64_t v79 = _s18ToolStepEvaluationVMa;
LABEL_23:
          uint64_t v84 = v79;
          uint64_t v85 = (uint64_t)v74;
LABEL_31:
          sub_253C9439C(v85, (void (*)(void))v84);
          (*v71)(v60, v78, v23);
          sub_253C942AC();
          swift_isUniquelyReferenced_nonNull_native();
          uint64_t v146 = v72;
          sub_253D87B8C();
          if (__OFADD__(*(void *)(v72 + 16), (v91 & 1) == 0)) {
            goto LABEL_44;
          }
          unint64_t v92 = v90;
          char v93 = v91;
          sub_253BDEDD8(&qword_269D7C870);
          char v94 = sub_253DF5A70();
          uint64_t v95 = (uint64_t)v139;
          uint64_t v23 = v144;
          if ((v94 & 1) == 0) {
            goto LABEL_35;
          }
          sub_253D87B8C();
          if ((v93 & 1) != (v97 & 1)) {
            goto LABEL_47;
          }
          unint64_t v92 = v96;
LABEL_35:
          uint64_t v72 = v146;
          if (v93)
          {
            uint64_t v70 = v73;
            sub_253C942FC();
          }
          else
          {
            *(void *)(v146 + 8 * (v92 >> 6) + 64) |= 1 << v92;
            (*(void (**)(unint64_t, char *, uint64_t))(v140 + 16))(*(void *)(v72 + 48) + *(void *)(v140 + 72) * v92, v60, v23);
            uint64_t v70 = v73;
            sub_253C9434C();
            uint64_t v98 = *(void *)(v72 + 16);
            BOOL v54 = __OFADD__(v98, 1);
            uint64_t v99 = v98 + 1;
            if (v54) {
              goto LABEL_46;
            }
            *(void *)(v72 + 16) = v99;
            uint64_t v72 = v146;
          }
          swift_bridgeObjectRelease();
          (*v138)(v60, v23);
          sub_253C9439C(v95, (void (*)(void))_s23StatementStepEvaluationOMa);
          v69 += v70;
          if (--v68) {
            continue;
          }
          swift_bridgeObjectRelease();
          break;
      }
      break;
    }
  }
  else
  {
    uint64_t v72 = MEMORY[0x263F8EE80];
  }
  swift_bridgeObjectRelease();
  return v72;
}

uint64_t sub_253C93840@<X0>(uint64_t a1@<X8>)
{
  if (*(void *)(*(void *)(v1 + 16) + 16) && (sub_253D87B8C(), (v3 & 1) != 0))
  {
    uint64_t v4 = _s23StatementStepEvaluationOMa(0);
    sub_253BDF7F0();
    sub_253C942AC();
    uint64_t v5 = a1;
    uint64_t v6 = 0;
    uint64_t v7 = v4;
  }
  else
  {
    uint64_t v7 = _s23StatementStepEvaluationOMa(0);
    uint64_t v5 = a1;
    uint64_t v6 = 1;
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v6, 1, v7);
}

uint64_t sub_253C938FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a3;
  uint64_t v87 = a2;
  uint64_t v4 = sub_253DF2FF0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v80 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s26PromptStatementStepBuilderV10ResolutionOMa(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v78 = (uint64_t *)((char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_253BDEDD8(&qword_269D7C868);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v79 = (uint8_t *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = _s26PromptStatementStepBuilderVMa(0);
  MEMORY[0x270FA5388](v77);
  uint64_t v76 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_253DF3030();
  uint64_t v86 = *(void *)(v88 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v88);
  uint64_t v72 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v81 = (char *)&v71 - v13;
  uint64_t v14 = sub_253DF24A0();
  uint64_t v82 = *(void *)(v14 - 8);
  uint64_t v83 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v85 = (char *)&v71 - v18;
  uint64_t v19 = sub_253BDEDD8(&qword_269D7C858);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_253DEFE90();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v74 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v71 - v26;
  uint64_t v28 = _s19SystemResponseEventVMa(0);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v71 - v32;
  sub_253DF3020();
  sub_253D7F144(v87, (uint64_t)v21);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v87 = v22;
  uint64_t v75 = v23 + 8;
  uint64_t v73 = v34;
  v34(v27, v22);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v21, 1, v28) == 1)
  {
    sub_253BDF664((uint64_t)v21, &qword_269D7C858);
    sub_253DF1790();
    uint64_t v35 = v86;
    uint64_t v36 = v81;
    uint64_t v37 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v81, a1, v88);
    uint64_t v38 = sub_253DF2490();
    os_log_type_t v39 = sub_253DF56E0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v80 = (char *)swift_slowAlloc();
      unint64_t v90 = v80;
      *(_DWORD *)uint64_t v40 = 136315138;
      uint64_t v79 = v40 + 4;
      uint64_t v41 = v74;
      sub_253DF3020();
      sub_253C6DDA0();
      uint64_t v42 = v87;
      uint64_t v43 = sub_253DF5C40();
      unint64_t v45 = v44;
      v73(v41, v42);
      uint64_t v89 = sub_253D8E5FC(v43, v45, (uint64_t *)&v90);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v81, v88);
      _os_log_impl(&dword_253BD8000, v38, v39, "Cannot find a response event for a system prompt resolution with systemResponseEventId=%s", v40, 0xCu);
      unint64_t v46 = v80;
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v46, -1, -1);
      MEMORY[0x25A2709B0](v40, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
    }

    (*(void (**)(char *, uint64_t))(v82 + 8))(v85, v83);
    uint64_t v67 = v84;
    uint64_t v68 = _s23StatementStepEvaluationOMa(0);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v67, 1, 1, v68);
  }
  else
  {
    uint64_t v47 = (uint64_t)v76;
    uint64_t v48 = v86;
    sub_253C9434C();
    sub_253C942AC();
    sub_253DF3000();
    char v49 = v78;
    sub_253C71F24(v78);
    char v50 = v79;
    sub_253C71510((uint64_t)v31, (uint64_t)v49, (uint64_t)v79);
    uint64_t v51 = (uint64_t)v33;
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v50, 1, v77) == 1)
    {
      sub_253BDF664((uint64_t)v50, &qword_269D7C868);
      char v52 = v17;
      sub_253DF1790();
      uint64_t v53 = v48;
      BOOL v54 = v72;
      uint64_t v55 = v88;
      (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v72, a1, v88);
      uint64_t v56 = sub_253DF2490();
      os_log_type_t v57 = sub_253DF56E0();
      int v58 = v57;
      if (os_log_type_enabled(v56, v57))
      {
        LODWORD(v85) = v58;
        uint64_t v59 = swift_slowAlloc();
        uint64_t v80 = (char *)swift_slowAlloc();
        unint64_t v90 = v80;
        *(_DWORD *)uint64_t v59 = 136315138;
        uint64_t v78 = (void *)(v59 + 4);
        uint64_t v79 = (uint8_t *)v59;
        uint64_t v60 = v74;
        sub_253DF3020();
        sub_253C6DDA0();
        uint64_t v61 = v87;
        uint64_t v62 = sub_253DF5C40();
        uint64_t v81 = v52;
        unint64_t v64 = v63;
        v73(v60, v61);
        uint64_t v89 = sub_253D8E5FC(v62, v64, (uint64_t *)&v90);
        sub_253DF5820();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v88);
        unint64_t v65 = v79;
        _os_log_impl(&dword_253BD8000, v56, (os_log_type_t)v85, "Cannot create a statement step builder for systemResponseEventId=%s", v79, 0xCu);
        unint64_t v66 = v80;
        swift_arrayDestroy();
        MEMORY[0x25A2709B0](v66, -1, -1);
        MEMORY[0x25A2709B0](v65, -1, -1);

        (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v83);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
        (*(void (**)(char *, uint64_t))(v82 + 8))(v52, v83);
      }
      sub_253C9439C(v51, (void (*)(void))_s19SystemResponseEventVMa);
      uint64_t v70 = _s23StatementStepEvaluationOMa(0);
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v84, 1, 1, v70);
    }
    else
    {
      sub_253C9434C();
      sub_253C701BC(v84);
      sub_253C9439C(v47, (void (*)(void))_s26PromptStatementStepBuilderVMa);
      return sub_253C9439C((uint64_t)v33, (void (*)(void))_s19SystemResponseEventVMa);
    }
  }
}

uint64_t _s29SystemPromptResponseRetrieverCMa()
{
  return self;
}

uint64_t sub_253C942AC()
{
  uint64_t v1 = sub_253C8F1DC();
  v2(v1);
  sub_253BDF7F0();
  uint64_t v3 = sub_253C943F4();
  v4(v3);
  return v0;
}

uint64_t sub_253C942FC()
{
  uint64_t v1 = sub_253C8F1DC();
  v2(v1);
  sub_253BDF7F0();
  uint64_t v3 = sub_253C943F4();
  v4(v3);
  return v0;
}

uint64_t sub_253C9434C()
{
  uint64_t v1 = sub_253C8F1DC();
  v2(v1);
  sub_253BDF7F0();
  uint64_t v3 = sub_253C943F4();
  v4(v3);
  return v0;
}

uint64_t sub_253C9439C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_253C943F4()
{
  return v0;
}

void sub_253C94404(uint64_t a1)
{
  uint64_t v3 = sub_253DF2D40();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v35 = v3;
  uint64_t v36 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v34 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v33 = (char *)&v27 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    uint64_t v27 = v1;
    uint64_t v39 = MEMORY[0x263F8EE78];
    sub_253DC6918(0, v8, 0);
    uint64_t v9 = sub_253C9C374(a1);
    if ((v9 & 0x8000000000000000) == 0)
    {
      unint64_t v11 = v9;
      if (v9 < 1 << *(unsigned char *)(a1 + 32))
      {
        int v12 = v10;
        uint64_t v13 = a1 + 64;
        uint64_t v30 = v36 + 32;
        uint64_t v31 = v36 + 16;
        uint64_t v28 = a1 + 64;
        uint64_t v29 = v36 + 8;
        uint64_t v32 = a1;
        while ((*(void *)(v13 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
        {
          if (v12 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_20;
          }
          uint64_t v14 = v35;
          uint64_t v15 = v36;
          unint64_t v16 = *(void *)(a1 + 48) + *(void *)(v36 + 72) * v11;
          uint64_t v17 = v33;
          (*(void (**)(char *, unint64_t, uint64_t))(v36 + 16))(v33, v16, v35);
          uint64_t v18 = v34;
          (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v34, v17, v14);
          uint64_t v19 = sub_253DF2D30();
          uint64_t v37 = v20;
          uint64_t v38 = v19;
          (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
          uint64_t v21 = v39;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253DC6918(0, *(void *)(v21 + 16) + 1, 1);
            uint64_t v21 = v39;
          }
          unint64_t v23 = *(void *)(v21 + 16);
          unint64_t v22 = *(void *)(v21 + 24);
          a1 = v32;
          if (v23 >= v22 >> 1)
          {
            sub_253DC6918(v22 > 1, v23 + 1, 1);
            uint64_t v21 = v39;
          }
          *(void *)(v21 + 16) = v23 + 1;
          uint64_t v24 = v21 + 16 * v23;
          uint64_t v25 = v37;
          *(void *)(v24 + 32) = v38;
          *(void *)(v24 + 40) = v25;
          if ((uint64_t)v11 >= -(-1 << *(unsigned char *)(a1 + 32))) {
            goto LABEL_21;
          }
          uint64_t v13 = v28;
          if ((*(void *)(v28 + 8 * (v11 >> 6)) & (1 << v11)) == 0) {
            goto LABEL_22;
          }
          if (v12 != *(_DWORD *)(a1 + 36)) {
            goto LABEL_23;
          }
          uint64_t v26 = sub_253DF58B0();
          if (!--v8) {
            return;
          }
          unint64_t v11 = v26;
          if ((v26 & 0x8000000000000000) == 0)
          {
            int v12 = *(_DWORD *)(a1 + 36);
            if (v26 < 1 << *(unsigned char *)(a1 + 32)) {
              continue;
            }
          }
          goto LABEL_24;
        }
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
      }
    }
LABEL_24:
    __break(1u);
  }
}

uint64_t sub_253C94704(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3 + 56;
  uint64_t v4 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a3 + 56);
  int64_t v37 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v7 = 0;
  uint64_t v8 = MEMORY[0x263F8EE78];
  if (!v6) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  for (unint64_t i = v9 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v12)) + (v7 << 6))
  {
    uint64_t v14 = (void *)(*(void *)(a3 + 48) + 16 * i);
    uint64_t v15 = v14[1];
    v40[0] = *v14;
    v40[1] = v15;
    swift_bridgeObjectRetain();
    a1(&v41, v40);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return v8;
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v41;
    uint64_t v17 = *(void *)(v41 + 16);
    uint64_t v18 = *(void *)(v8 + 16);
    uint64_t v19 = v18 + v17;
    if (__OFADD__(v18, v17))
    {
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v19 > *(void *)(v8 + 24) >> 1)
    {
      if (v18 <= v19) {
        uint64_t v21 = v18 + v17;
      }
      else {
        uint64_t v21 = v18;
      }
      uint64_t v8 = sub_253DC4200(isUniquelyReferenced_nonNull_native, v21, 1, v8);
    }
    if (*(void *)(v16 + 16))
    {
      uint64_t v22 = *(void *)(v8 + 16);
      uint64_t v23 = (*(void *)(v8 + 24) >> 1) - v22;
      uint64_t v24 = *(void *)(_s16CandidateSummaryVMa(0) - 8);
      uint64_t v25 = *(void *)(v24 + 72);
      if (v23 < v17) {
        goto LABEL_48;
      }
      unint64_t v26 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      unint64_t v27 = v8 + v26 + v25 * v22;
      unint64_t v28 = v16 + v26;
      uint64_t v29 = v25 * v17;
      unint64_t v30 = v27 + v29;
      unint64_t v31 = v28 + v29;
      if (v28 < v30 && v27 < v31) {
        goto LABEL_52;
      }
      swift_arrayInitWithCopy();
      if (v17)
      {
        uint64_t v33 = *(void *)(v8 + 16);
        BOOL v11 = __OFADD__(v33, v17);
        uint64_t v34 = v33 + v17;
        if (v11) {
          goto LABEL_50;
        }
        *(void *)(v8 + 16) = v34;
      }
    }
    else if (v17)
    {
      goto LABEL_47;
    }
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v11 = __OFADD__(v7++, 1);
    if (v11) {
      goto LABEL_49;
    }
    if (v7 >= v37) {
      goto LABEL_44;
    }
    unint64_t v12 = *(void *)(v36 + 8 * v7);
    if (!v12) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v12 - 1) & v12;
  }
  int64_t v13 = v7 + 1;
  if (v7 + 1 >= v37) {
    goto LABEL_44;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v7 + 2;
  if (v7 + 2 >= v37) {
    goto LABEL_44;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v7 + 3;
  if (v7 + 3 >= v37) {
    goto LABEL_44;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12) {
    goto LABEL_16;
  }
  int64_t v13 = v7 + 4;
  if (v7 + 4 >= v37)
  {
LABEL_44:
    swift_release();
    return v8;
  }
  unint64_t v12 = *(void *)(v36 + 8 * v13);
  if (v12)
  {
LABEL_16:
    int64_t v7 = v13;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v7 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v7 >= v37) {
      goto LABEL_44;
    }
    unint64_t v12 = *(void *)(v36 + 8 * v7);
    ++v13;
    if (v12) {
      goto LABEL_17;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  uint64_t result = sub_253DF5B10();
  __break(1u);
  return result;
}

uint64_t sub_253C94A6C(uint64_t a1, uint64_t a2)
{
  if ((sub_253DEFFB0() & 1) != 0
    && (uint64_t v4 = _s16CandidateSummaryVMa(0), static FeedbackLearning.CandidateParameter.== infix(_:_:)(), (v5 & 1) != 0)
    && (sub_253DF2680() & 1) != 0)
  {
    uint64_t v6 = *(int *)(v4 + 28);
    char v10 = *(unsigned char *)(a1 + v6);
    unsigned __int8 v9 = *(unsigned char *)(a2 + v6);
    char v7 = static FeedbackLearning.CandidateOutcome.== infix(_:_:)(&v10, &v9);
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_253C94B0C(uint64_t a1)
{
  uint64_t v3 = sub_253DF42A0();
  sub_253C0F830();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_253C10D28();
  sub_253C9D3F8();
  sub_253BEFD38();
  v7();
  uint64_t v8 = _s22StatementStepEvaluatorCMa();
  v16[3] = v8;
  v16[4] = &off_27035E560;
  v16[0] = swift_allocObject();
  _s22TaskCandidateEvaluatorCMa(0);
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = sub_253C31DA4((uint64_t)v16, v8);
  MEMORY[0x270FA5388](v10);
  sub_253C16A90();
  (*(void (**)(uint64_t *))(v11 + 16))(v1);
  uint64_t v12 = *v1;
  int64_t v13 = (void *)(v9
                 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_statementEvaluator);
  v13[3] = v8;
  v13[4] = &off_27035E560;
  *int64_t v13 = v12;
  sub_253BEFD2C();
  v14();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v16);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v3);
  return v9;
}

void sub_253C94CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253C59954();
  a19 = v22;
  a20 = v23;
  uint64_t v110 = v24;
  uint64_t v106 = v25;
  uint64_t v27 = v26;
  uint64_t v111 = v28;
  uint64_t v109 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v108 = v29;
  MEMORY[0x270FA5388](v30);
  sub_253BDFA94();
  sub_253C9D444(v31);
  uint64_t v130 = sub_253BDEDD8(&qword_269D7C8F8);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v32);
  sub_253C34050();
  uint64_t v118 = v33;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v34);
  sub_253C33FFC();
  uint64_t v117 = v35;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v36);
  sub_253C33FFC();
  uint64_t v116 = v37;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v38);
  sub_253C36430();
  uint64_t v115 = v39;
  sub_253C36350();
  uint64_t v40 = sub_253DF3770();
  sub_253C0F830();
  uint64_t v42 = v41;
  MEMORY[0x270FA5388](v43);
  sub_253C9D2E0();
  MEMORY[0x270FA5388](v44);
  unint64_t v46 = (char *)&v105 - v45;
  sub_253DF24A0();
  sub_253C0F830();
  uint64_t v128 = v48;
  unint64_t v129 = v47;
  MEMORY[0x270FA5388](v47);
  sub_253C4E9DC();
  sub_253DF1790();
  char v49 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
  uint64_t v112 = v27;
  v49(v46, v27, v40);
  char v50 = sub_253DF2490();
  os_log_type_t v51 = sub_253DF56D0();
  uint64_t v127 = v50;
  LODWORD(v126) = v51;
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v119 = v20;
  if (v52)
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v125 = swift_slowAlloc();
    a10 = v125;
    *(_DWORD *)uint64_t v53 = 136315138;
    uint64_t v124 = v53 + 4;
    v49(v21, (uint64_t)v46, v40);
    uint64_t v54 = sub_253DF5290();
    uint64_t v131 = sub_253D8E5FC(v54, v55, &a10);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    uint64_t v56 = sub_253C9D2FC();
    v57(v56);
    int v58 = v127;
    _os_log_impl(&dword_253BD8000, v127, (os_log_type_t)v126, "Evaluating resolver request for candidate success: %s", v53, 0xCu);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();
  }
  else
  {
    uint64_t v59 = sub_253C9D2FC();
    v60(v59);
  }
  sub_253BEFBCC();
  v61();
  uint64_t v62 = sub_253DF3740();
  uint64_t v63 = *(void *)(v62 + 16);
  if (v63)
  {
    a10 = MEMORY[0x263F8EE78];
    sub_253DC6918(0, v63, 0);
    uint64_t v64 = sub_253DEB920(v62);
    if ((v66 & 1) == 0)
    {
      unint64_t v67 = v64;
      if (v64 < 0 || v64 >= 1 << *(unsigned char *)(v62 + 32))
      {
LABEL_28:
        __break(1u);
      }
      else
      {
        uint64_t v68 = v62 + 64;
        uint64_t v113 = v62 + 64;
        uint64_t v114 = v62;
        while ((*(void *)(v68 + 8 * (v67 >> 6)) & (1 << v67)) != 0)
        {
          if (v65 != *(_DWORD *)(v62 + 36)) {
            goto LABEL_30;
          }
          uint64_t v122 = 1 << v67;
          unint64_t v123 = v67 >> 6;
          uint64_t v120 = v63;
          uint64_t v121 = v65;
          uint64_t v69 = v115;
          uint64_t v126 = v115 + *(int *)(v130 + 48);
          uint64_t v70 = sub_253DF2D40();
          sub_253C0F830();
          uint64_t v128 = v71;
          uint64_t v73 = *(void (**)(void))(v72 + 16);
          uint64_t v124 = (uint8_t *)v70;
          sub_253C100A4();
          v73();
          uint64_t v74 = v73;
          uint64_t v125 = (uint64_t)v73;
          sub_253DF4360();
          sub_253C0F830();
          uint64_t v127 = v75;
          unint64_t v129 = v67;
          isa = (void (*)(void))v75[2].isa;
          sub_253C102E4();
          isa();
          uint64_t v77 = v116;
          sub_253C100A4();
          v74();
          sub_253C102E4();
          isa();
          uint64_t v78 = v77;
          uint64_t v79 = v117;
          sub_253C61B78(v78, v117, &qword_269D7C8F8);
          sub_253BEFAC0(v69, &qword_269D7C8F8);
          sub_253C100A4();
          v80();
          sub_253C102E4();
          isa();
          uint64_t v81 = sub_253DF2D30();
          uint64_t v83 = v82;
          sub_253BEFBCC();
          v84();
          sub_253BEFBCC();
          v85();
          sub_253BEFAC0(v79, &qword_269D7C8F8);
          uint64_t v86 = a10;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253DC6918(0, *(void *)(v86 + 16) + 1, 1);
            uint64_t v86 = a10;
          }
          unint64_t v88 = *(void *)(v86 + 16);
          unint64_t v87 = *(void *)(v86 + 24);
          uint64_t v62 = v114;
          if (v88 >= v87 >> 1)
          {
            sub_253DC6918(v87 > 1, v88 + 1, 1);
            uint64_t v86 = a10;
          }
          *(void *)(v86 + 16) = v88 + 1;
          uint64_t v89 = v86 + 16 * v88;
          *(void *)(v89 + 32) = v81;
          *(void *)(v89 + 40) = v83;
          sub_253C9D3E4();
          if (v90 == v91) {
            goto LABEL_31;
          }
          uint64_t v68 = v113;
          if ((*(void *)(v113 + 8 * v123) & v122) == 0) {
            goto LABEL_32;
          }
          if (v121 != *(_DWORD *)(v62 + 36)) {
            goto LABEL_33;
          }
          uint64_t v92 = sub_253DF58B0();
          uint64_t v63 = v120 - 1;
          if (v120 == 1)
          {
            swift_bridgeObjectRelease();
            goto LABEL_25;
          }
          unint64_t v67 = v92;
          if ((v92 & 0x8000000000000000) == 0)
          {
            uint64_t v65 = *(unsigned int *)(v62 + 36);
            if (v92 < 1 << *(unsigned char *)(v62 + 32)) {
              continue;
            }
          }
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v86 = MEMORY[0x263F8EE78];
LABEL_25:
    uint64_t v93 = sub_253DF3750();
    uint64_t v94 = sub_253D22784(v93);
    swift_bridgeObjectRelease();
    if (v94)
    {
      sub_253C94404(v94);
      swift_bridgeObjectRelease();
    }
    uint64_t v95 = v107;
    uint64_t v96 = v112;
    sub_253DF3730();
    uint64_t v97 = sub_253C688DC(v95, v106);
    MEMORY[0x270FA5388](v97);
    sub_253C9D354();
    *(void *)(v98 - 16) = v95;
    uint64_t v100 = sub_253CF1D78((void (*)(uint64_t))sub_253C9C43C, v99, v97, (uint64_t)&v132);
    swift_bridgeObjectRelease();
    sub_253BEFBCC();
    v101();
    a10 = v86;
    sub_253DBF0A0();
    uint64_t v102 = sub_253CFA318(a10);
    MEMORY[0x270FA5388](v102);
    sub_253C9D354();
    *(void *)(v103 - 16) = v110;
    *(void *)(v103 - 8) = v96;
    sub_253C94704((void (*)(uint64_t *__return_ptr, void *))sub_253C9C45C, v104, v102);
    swift_bridgeObjectRelease();
    a10 = v100;
    sub_253DBF02C();
    *uint64_t v111 = a10;
    sub_253C5993C();
  }
}

uint64_t sub_253C95508@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_253DEFFE0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  sub_253DF3730();
  sub_253C5A5AC();
  uint64_t v14 = v7;
  uint64_t v15 = v9;
  uint64_t v16 = v8;
  uint64_t v11 = sub_253CF1D78((void (*)(uint64_t))sub_253C9C498, (uint64_t)v13, v10, (uint64_t)v17);
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
  *a2 = v11;
  return result;
}

void sub_253C9565C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253C59954();
  a19 = v22;
  a20 = v23;
  unint64_t v67 = v24;
  uint64_t v68 = v21;
  uint64_t v62 = v25;
  sub_253DF0880();
  sub_253C0F830();
  uint64_t v64 = v27;
  uint64_t v65 = v26;
  MEMORY[0x270FA5388](v26);
  sub_253C2F354();
  MEMORY[0x270FA5388](v28);
  sub_253C36430();
  uint64_t v63 = v29;
  sub_253C36350();
  uint64_t v30 = sub_253DF24A0();
  sub_253C0F830();
  uint64_t v61 = v31;
  MEMORY[0x270FA5388](v32);
  sub_253BDFA94();
  uint64_t v66 = v33;
  uint64_t v34 = sub_253BDEDD8(&qword_26B255420);
  MEMORY[0x270FA5388](v34 - 8);
  sub_253C4E9DC();
  sub_253DEFFE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v35);
  sub_253C9D2E0();
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = (char *)v58 - v37;
  sub_253C60DAC();
  uint64_t v39 = sub_253DF10D0();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v20, 1, v39) == 1)
  {
    uint64_t v62 = v30;
    sub_253BEFAC0(v20, &qword_26B255420);
    sub_253DF1790();
    uint64_t v40 = *(void (**)(void))(v64 + 16);
    sub_253C100A4();
    v40();
    uint64_t v41 = sub_253DF2490();
    os_log_type_t v42 = sub_253DF56E0();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      os_log_t v59 = v41;
      uint64_t v44 = (uint8_t *)v43;
      uint64_t v60 = swift_slowAlloc();
      a10 = v60;
      *(_DWORD *)uint64_t v44 = 136315138;
      v58[1] = v44 + 4;
      sub_253C100A4();
      v40();
      uint64_t v45 = sub_253DF5290();
      v69[1] = sub_253D8E5FC(v45, v46, &a10);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253BEFBCC();
      v47();
      os_log_t v48 = v59;
      _os_log_impl(&dword_253BD8000, v59, v42, "Cannot extract statementId to evaluate a tool resolution: %s", v44, 0xCu);
      swift_arrayDestroy();
      sub_253BDF910();
      sub_253BDF910();
    }
    else
    {
      sub_253BEFBCC();
      v56();
    }
    sub_253BEFD20();
    v57();
    uint64_t v54 = MEMORY[0x263F8EE78];
  }
  else
  {
    sub_253DF10A0();
    sub_253BEFBCC();
    v49();
    sub_253BEFD2C();
    v50();
    uint64_t v51 = sub_253C9D450((uint64_t)v38);
    MEMORY[0x270FA5388](v51);
    sub_253C9D354();
    *(void *)(v52 - 16) = v38;
    uint64_t v54 = sub_253CF1D78((void (*)(uint64_t))sub_253C9C41C, v53, v51, (uint64_t)v69);
    swift_bridgeObjectRelease();
    sub_253C0FDBC();
    v55();
  }
  *unint64_t v67 = v54;
  sub_253C5993C();
}

uint64_t sub_253C95A8C()
{
  sub_253C9D364();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v3);
  sub_253C4E9DC();
  sub_253C9C504(v2, v1, (void (*)(void))_s23StatementStepEvaluationOMa);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_253C9CBCC(v1, (void (*)(void))_s23StatementStepEvaluationOMa);
    uint64_t v4 = 1;
  }
  else
  {
    sub_253C9C560(v1, v0, (void (*)(void))_s18ToolStepEvaluationVMa);
    uint64_t v4 = 0;
  }
  uint64_t v5 = _s18ToolStepEvaluationVMa(0);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v4, 1, v5);
}

uint64_t sub_253C95B78()
{
  sub_253C9D364();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v3);
  sub_253C4E9DC();
  sub_253C9C504(v2, v1, (void (*)(void))_s23StatementStepEvaluationOMa);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    sub_253C9C560(v1, v0, (void (*)(void))_s19ValueStepEvaluationVMa);
    uint64_t v4 = 0;
  }
  else
  {
    sub_253C9CBCC(v1, (void (*)(void))_s23StatementStepEvaluationOMa);
    uint64_t v4 = 1;
  }
  uint64_t v5 = _s19ValueStepEvaluationVMa(0);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v4, 1, v5);
}

uint64_t sub_253C95C68()
{
  sub_253C9D364();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v3);
  sub_253C4E9DC();
  sub_253C9C504(v2, v1, (void (*)(void))_s23StatementStepEvaluationOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253C9C560(v1, v0, (void (*)(void))_s23ParameterStepEvaluationVMa);
    uint64_t v4 = 0;
  }
  else
  {
    sub_253C9CBCC(v1, (void (*)(void))_s23StatementStepEvaluationOMa);
    uint64_t v4 = 1;
  }
  uint64_t v5 = _s23ParameterStepEvaluationVMa(0);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v4, 1, v5);
}

void sub_253C95D58()
{
  sub_253C1CED0();
  uint64_t v2 = v1;
  uint64_t v53 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_253C16A90();
  uint64_t v6 = sub_253DF41F0();
  sub_253C0F830();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_253C10D28();
  v51[12] = sub_253DF3770();
  sub_253C0F830();
  uint64_t v11 = v10;
  MEMORY[0x270FA5388](v12);
  uint64_t v61 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253C33FF0();
  MEMORY[0x270FA5388](v14);
  sub_253C36430();
  uint64_t v60 = v15;
  v51[11] = sub_253DF4230();
  sub_253C0F830();
  MEMORY[0x270FA5388](v16);
  sub_253BDFA94();
  uint64_t v62 = v18;
  uint64_t v19 = *(void *)(v2 + 16);
  if (!v19)
  {
    uint64_t v23 = MEMORY[0x263F8EE80];
LABEL_17:
    size_t v50 = sub_253DCB020(v23);
    swift_bridgeObjectRelease();
    uint64_t v63 = v50;
    swift_retain();
    sub_253C9A0A8(&v63);
    swift_release();
    sub_253C1CEE8();
    return;
  }
  uint64_t v58 = *(void *)(v17 + 16);
  sub_253C11244();
  uint64_t v21 = v2 + v20;
  uint64_t v57 = v8 + 88;
  int v56 = *MEMORY[0x263F4DFF8];
  v51[9] = v8 + 96;
  v51[10] = v8 + 8;
  uint64_t v52 = (void *)(v11 + 32);
  v51[8] = v11 + 16;
  v51[3] = v4 + 16;
  v51[2] = v11 + 40;
  v51[4] = v4;
  v51[6] = v4 + 8;
  v51[5] = v11 + 8;
  uint64_t v59 = v22;
  uint64_t v54 = *(void *)(v22 + 56);
  uint64_t v55 = v22 - 8;
  v51[1] = v2;
  swift_bridgeObjectRetain();
  uint64_t v23 = MEMORY[0x263F8EE80];
  v51[7] = v6;
  while (1)
  {
    sub_253BEFD38();
    v24();
    sub_253DF4200();
    uint64_t v25 = sub_253C9D2B0();
    int v27 = v26(v25);
    if (v27 != v56)
    {
      sub_253BEFBCC();
      v41();
      goto LABEL_14;
    }
    uint64_t v28 = sub_253C9D2B0();
    v29(v28);
    v51[13] = *v52;
    sub_253BEFD2C();
    v30();
    sub_253DF3730();
    sub_253C0FF48();
    v31();
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v63 = v23;
    uint64_t v32 = v0;
    sub_253D87ADC();
    if (__OFADD__(*(void *)(v23 + 16), (v34 & 1) == 0)) {
      break;
    }
    unint64_t v35 = v33;
    char v36 = v34;
    sub_253BDEDD8(&qword_269D7C8C0);
    if (sub_253DF5A70())
    {
      sub_253D87ADC();
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_20;
      }
      unint64_t v35 = v37;
    }
    uint64_t v39 = v63;
    if (v36)
    {
      sub_253C9D380();
      v40();
      uint64_t v0 = v32;
    }
    else
    {
      *(void *)(v63 + 8 * (v35 >> 6) + 64) |= 1 << v35;
      uint64_t v0 = v32;
      sub_253C0FF48();
      v42();
      sub_253BEFD2C();
      v43();
      uint64_t v44 = *(void *)(v39 + 16);
      BOOL v45 = __OFADD__(v44, 1);
      uint64_t v46 = v44 + 1;
      if (v45) {
        goto LABEL_19;
      }
      *(void *)(v39 + 16) = v46;
    }
    uint64_t v23 = v63;
    swift_bridgeObjectRelease();
    sub_253BEFBCC();
    v47();
    sub_253C633D4();
    sub_253BEFBCC();
    v48();
LABEL_14:
    sub_253BEFBCC();
    v49();
    v21 += v54;
    if (!--v19)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  sub_253DF5CF0();
  __break(1u);
  swift_release();
  __break(1u);
}

void sub_253C96268()
{
  sub_253C1CED0();
  uint64_t v1 = v0;
  sub_253DF0A20();
  sub_253C0F830();
  MEMORY[0x270FA5388](v2);
  sub_253C8F07C();
  uint64_t v57 = sub_253DF10D0();
  sub_253C0F830();
  uint64_t v4 = v3;
  MEMORY[0x270FA5388](v5);
  sub_253C10D28();
  uint64_t v8 = v7 - v6;
  sub_253DF41F0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253C10D28();
  uint64_t v10 = sub_253BDEDD8(&qword_26B255390);
  MEMORY[0x270FA5388](v10 - 8);
  sub_253BDFA94();
  sub_253C34018(v11);
  uint64_t v12 = sub_253DF0880();
  sub_253C0F830();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  sub_253C34050();
  uint64_t v52 = v16;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v17);
  sub_253C33FFC();
  sub_253C33FF0();
  MEMORY[0x270FA5388](v18);
  sub_253C36430();
  uint64_t v48 = v19;
  sub_253DF4230();
  sub_253C0F830();
  MEMORY[0x270FA5388](v20);
  sub_253BDFA94();
  uint64_t v51 = *(void *)(v1 + 16);
  if (v51)
  {
    sub_253C11244();
    int v50 = *MEMORY[0x263F4DFE0];
    uint64_t v54 = (void (**)(void))(v14 + 32);
    int v56 = *MEMORY[0x263F4C798];
    uint64_t v21 = (void (**)(uint64_t, uint64_t))(v4 + 8);
    swift_bridgeObjectRetain();
    uint64_t v53 = MEMORY[0x263F8EE78];
    uint64_t v22 = v47;
    uint64_t v49 = v12;
    sub_253C9D42C();
    while (1)
    {
      uint64_t v55 = v23;
      sub_253BEFD38();
      v24();
      sub_253DF4200();
      sub_253C36388();
      if (v25() == v50)
      {
        uint64_t v26 = sub_253C9D390();
        v27(v26);
        sub_253BEFD2C();
        v28();
        uint64_t v29 = *(void *)(sub_253DF0870() + 16);
        if (v29)
        {
          sub_253C11244();
          uint64_t v32 = v30 + v31;
          uint64_t v33 = *(void *)(v4 + 72);
          char v34 = *(void (**)(void))(v4 + 16);
          while (1)
          {
            uint64_t v4 = v57;
            sub_253BEFD38();
            v34();
            sub_253DF10C0();
            sub_253C36388();
            int v36 = v35();
            sub_253BEFBCC();
            v37();
            (*v21)(v8, v57);
            if (v36 == v56) {
              break;
            }
            v32 += v33;
            if (!--v29)
            {
              swift_bridgeObjectRelease();
              sub_253C9D2C4();
              uint64_t v22 = v47;
              sub_253C9D42C();
              goto LABEL_11;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v22 = v47;
          uint64_t v12 = v49;
          sub_253BEFD2C();
          v46();
          sub_253C9D2C4();
          sub_253C9D42C();
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
LABEL_11:
        uint64_t v12 = v49;
      }
      else
      {
        sub_253C9D390();
      }
      sub_253BEFBCC();
      v38();
      uint64_t v39 = 1;
LABEL_13:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v22, v39, 1, v12);
      sub_253BEFBCC();
      v40();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v22, 1, v12) == 1)
      {
        sub_253BEFAC0(v22, &qword_26B255390);
      }
      else
      {
        uint64_t v41 = *v54;
        ((void (*)(uint64_t, uint64_t, uint64_t))*v54)(v48, v22, v12);
        ((void (*)(uint64_t, uint64_t, uint64_t))v41)(v52, v48, v12);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v42 = v53;
        }
        else {
          uint64_t v42 = sub_253DC4578(0, *(void *)(v53 + 16) + 1, 1, v53);
        }
        unint64_t v44 = *(void *)(v42 + 16);
        unint64_t v43 = *(void *)(v42 + 24);
        if (v44 >= v43 >> 1) {
          uint64_t v42 = sub_253DC4578(v43 > 1, v44 + 1, 1, v42);
        }
        *(void *)(v42 + 16) = v44 + 1;
        sub_253C11244();
        uint64_t v53 = v45;
        uint64_t v12 = v49;
        sub_253BEFD2C();
        v41();
        sub_253C9D42C();
      }
      uint64_t v23 = v55 + 1;
      if (v55 + 1 == v51)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_253C1CEE8();
}

uint64_t sub_253C968C8()
{
  sub_253DF42A0();
  sub_253BDF7F0();
  sub_253BEFBCC();
  v1();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_statementEvaluator);
  uint64_t v2 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v3 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return MEMORY[0x270FA0228](v0, v2, v3);
}

uint64_t sub_253C9696C()
{
  return _s22TaskCandidateEvaluatorCMa(0);
}

uint64_t _s22TaskCandidateEvaluatorCMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255820);
}

uint64_t sub_253C96994()
{
  uint64_t result = sub_253DF42A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_253C96A2C()
{
  sub_253C1CED0();
  uint64_t v323 = v0;
  uint64_t v303 = v1;
  uint64_t v3 = v2;
  v302 = v4;
  uint64_t v366 = type metadata accessor for FeedbackLearning.ActionValue(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v5);
  sub_253BDFA94();
  sub_253C9D444(v6);
  uint64_t v344 = sub_253BDEDD8(&qword_26B2552C8);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v7);
  sub_253C34050();
  uint64_t v343 = v8;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v9);
  sub_253C33FFC();
  uint64_t v342 = v10;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v11);
  sub_253C33FFC();
  uint64_t v341 = v12;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v13);
  sub_253C36430();
  sub_253C9D444(v14);
  uint64_t v352 = sub_253BDEDD8((uint64_t *)&unk_26B2552D0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v15);
  sub_253C34050();
  uint64_t v351 = v16;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v17);
  sub_253C33FFC();
  uint64_t v350 = v18;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v19);
  sub_253C33FFC();
  uint64_t v349 = v20;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v21);
  sub_253C36430();
  sub_253C34018(v22);
  uint64_t v299 = sub_253DF24A0();
  sub_253C0F830();
  uint64_t v361 = v23;
  MEMORY[0x270FA5388](v24);
  sub_253BDFA94();
  sub_253C9D444(v25);
  uint64_t v26 = sub_253BDEDD8(&qword_26B2519D0);
  MEMORY[0x270FA5388](v26 - 8);
  sub_253BDFA94();
  sub_253C34018(v27);
  uint64_t v305 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v357 = v28;
  MEMORY[0x270FA5388](v29);
  sub_253BDFA94();
  sub_253C34018(v30);
  uint64_t v321 = sub_253DF0A20();
  sub_253C0F830();
  uint64_t v354 = v31;
  MEMORY[0x270FA5388](v32);
  sub_253C34050();
  uint64_t v320 = v33;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v34);
  sub_253C36430();
  sub_253C34018(v35);
  uint64_t v319 = sub_253DF38F0();
  sub_253C0F830();
  v338 = v36;
  MEMORY[0x270FA5388](v37);
  sub_253BDFA94();
  sub_253C34018(v38);
  uint64_t v331 = sub_253DF3170();
  sub_253C0F830();
  v337 = v39;
  MEMORY[0x270FA5388](v40);
  sub_253C34050();
  uint64_t v298 = v41;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v42);
  sub_253C33FFC();
  uint64_t v328 = v43;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v44);
  sub_253C36430();
  sub_253C34018(v45);
  uint64_t v368 = sub_253DF2BE0();
  sub_253C0F830();
  uint64_t v47 = v46;
  MEMORY[0x270FA5388](v48);
  sub_253C2F354();
  int isUniquelyReferenced_nonNull_native = (void (*)(void))(v49 - v50);
  MEMORY[0x270FA5388](v52);
  sub_253C33FFC();
  uint64_t v358 = v53;
  sub_253C33FF0();
  uint64_t v55 = MEMORY[0x270FA5388](v54);
  uint64_t v57 = &v285[-v56];
  MEMORY[0x270FA5388](v55);
  sub_253C36430();
  sub_253C34018(v58);
  uint64_t v372 = sub_253DEFE90();
  sub_253C0F830();
  uint64_t v60 = v59;
  MEMORY[0x270FA5388](v61);
  sub_253C34050();
  uint64_t v297 = v62;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v63);
  sub_253C33FFC();
  uint64_t v300 = v64;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v65);
  sub_253C33FFC();
  uint64_t v296 = v66;
  sub_253C33FF0();
  uint64_t v68 = MEMORY[0x270FA5388](v67);
  uint64_t v70 = &v285[-v69];
  MEMORY[0x270FA5388](v68);
  sub_253C36430();
  uint64_t v365 = v71;
  sub_253C36350();
  uint64_t v370 = sub_253DF3C70();
  sub_253C0F830();
  uint64_t v73 = v72;
  MEMORY[0x270FA5388](v74);
  sub_253C2F354();
  uint64_t v77 = v75 - v76;
  MEMORY[0x270FA5388](v78);
  sub_253C33FFC();
  uint64_t v367 = v79;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v80);
  sub_253C33FFC();
  unint64_t v363 = v81;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v82);
  sub_253C36430();
  uint64_t v362 = v83;
  sub_253C36350();
  uint64_t v346 = sub_253DF41F0();
  sub_253C0F830();
  uint64_t v85 = v84;
  MEMORY[0x270FA5388](v86);
  sub_253BDFA94();
  uint64_t v345 = v87;
  uint64_t v347 = sub_253DF4230();
  sub_253C0F830();
  MEMORY[0x270FA5388](v88);
  sub_253C2F354();
  MEMORY[0x270FA5388](v89);
  sub_253C36430();
  uint64_t v364 = v91;
  v375[2] = MEMORY[0x263F8EE88];
  uint64_t v92 = *(void *)(v3 + 16);
  uint64_t v373 = v47;
  v353 = isUniquelyReferenced_nonNull_native;
  uint64_t v369 = v73;
  uint64_t v371 = v77;
  uint64_t v374 = v60;
  if (v92)
  {
    uint64_t v295 = v90;
    sub_253C11244();
    uint64_t v93 = v3;
    uint64_t v95 = v3 + v94;
    uint64_t v359 = v85 + 88;
    uint64_t v360 = v96;
    LODWORD(v356) = *MEMORY[0x263F4DEB8];
    v355 = (void (**)(void))(v97 - 8);
    uint64_t v314 = v85 + 8;
    uint64_t v339 = v85 + 96;
    v313 = v337 + 4;
    v312 = v338 + 1;
    uint64_t v311 = v354 + 16;
    uint64_t v310 = v354 + 88;
    int v335 = *MEMORY[0x263F4DF50];
    int v327 = *MEMORY[0x263F4DF48];
    int v309 = *MEMORY[0x263F4C7D8];
    int v308 = *MEMORY[0x263F4C7D0];
    v307 = (void (**)(void))(v354 + 8);
    v318 = v337 + 2;
    v322 = v337 + 1;
    v304 = (void (**)(void))(v357 + 8);
    uint64_t v292 = v60 + 32;
    uint64_t v332 = v60 + 16;
    v338 = (void (**)(uint64_t, uint64_t))(v60 + 8);
    uint64_t v293 = v361 + 8;
    v330 = (void (**)(void))(v47 + 32);
    uint64_t v326 = v47 + 16;
    uint64_t v306 = v47 + 40;
    uint64_t v324 = v47 + 8;
    v337 = (void (**)(void))(v73 + 32);
    uint64_t v334 = v73 + 16;
    uint64_t v325 = v73 + 40;
    uint64_t v361 = v97;
    uint64_t v354 = *(void *)(v97 + 56);
    uint64_t v333 = v73 + 8;
    uint64_t v294 = v93;
    swift_bridgeObjectRetain();
    *(void *)&long long v98 = 136315394;
    long long v291 = v98;
    uint64_t v290 = MEMORY[0x263F8EE58] + 8;
    uint64_t v336 = MEMORY[0x263F8EE80];
    uint64_t v357 = MEMORY[0x263F8EE80];
    sub_253C9D404();
    v316 = v57;
    v315 = v70;
    while (1)
    {
      sub_253BEFD38();
      v99();
      sub_253DF4200();
      sub_253C36388();
      int v101 = v100();
      if (v101 == v356) {
        break;
      }
      if (v101 == v335)
      {
        uint64_t v114 = sub_253C9D20C();
        v115(v114);
        uint64_t v116 = *v330;
        sub_253BEFD2C();
        v116();
        sub_253DF4180();
        sub_253C633D4();
        sub_253C0FF48();
        v117();
        uint64_t v118 = v336;
        int isUniquelyReferenced_nonNull_native = (void (*)(void))swift_isUniquelyReferenced_nonNull_native();
        v375[0] = v118;
        sub_253D87B8C();
        sub_253C9D3B0();
        if (v108) {
          goto LABEL_102;
        }
        char v120 = v119;
        sub_253BDEDD8(&qword_269D7CBD8);
        sub_253C9D3C4();
        sub_253C9D438();
        if (v121)
        {
          sub_253D87B8C();
          if ((v120 & 1) != (v122 & 1)) {
            goto LABEL_107;
          }
        }
        uint64_t v123 = v375[0];
        if (v120)
        {
          sub_253C9D380();
          v124();
        }
        else
        {
          sub_253C9D22C();
          sub_253C0FF48();
          v146();
          sub_253BEFD2C();
          v116();
          uint64_t v147 = *(void *)(v123 + 16);
          BOOL v108 = __OFADD__(v147, 1);
          uint64_t v148 = v147 + 1;
          if (v108) {
            goto LABEL_104;
          }
          *(void *)(v123 + 16) = v148;
        }
        uint64_t v336 = v375[0];
        swift_bridgeObjectRelease();
        sub_253C633D4();
        sub_253BEFBCC();
        v149();
        sub_253C633D4();
        goto LABEL_30;
      }
      if (v101 == v327)
      {
        uint64_t v125 = sub_253C9D20C();
        v126(v125);
        sub_253C633D4();
        sub_253C10134();
        v127();
        sub_253DF3160();
        sub_253DF38D0();
        sub_253BEFBCC();
        v128();
        sub_253C633D4();
        sub_253C0FF48();
        v129();
        sub_253C633D4();
        sub_253C36388();
        int v131 = v130();
        uint64_t v132 = *v307;
        sub_253C0FDBC();
        v132();
        sub_253C0FDBC();
        v132();
        uint64_t v133 = v331;
        uint64_t v134 = *v318;
        sub_253BEFD38();
        v134();
        BOOL v135 = v131 == v309 || v131 == v308;
        uint64_t v136 = v322;
        if (!v135)
        {
          int isUniquelyReferenced_nonNull_native = *v322;
          ((void (*)(uint64_t, uint64_t))*v322)(v328, v133);
          goto LABEL_34;
        }
        sub_253DF3110();
        uint64_t v133 = v331;
        sub_253D7F720();
        char v138 = v137;
        uint64_t v139 = *v304;
        sub_253C0F824();
        v139();
        int isUniquelyReferenced_nonNull_native = *v136;
        sub_253C0FDBC();
        isUniquelyReferenced_nonNull_native();
        if (v138)
        {
LABEL_34:
          ((void (*)(uint64_t, uint64_t))isUniquelyReferenced_nonNull_native)(v329, v133);
          sub_253BEFBCC();
          v152();
          sub_253C9D438();
        }
        else
        {
          uint64_t v153 = v301;
          sub_253DF3140();
          uint64_t v154 = v372;
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v153, 1, v372) == 1)
          {
            sub_253BEFAC0(v153, &qword_26B2519D0);
            sub_253DF1790();
            sub_253BEFD38();
            v134();
            sub_253BEFD38();
            v155();
            v156 = sub_253DF2490();
            os_log_type_t v157 = sub_253DF56D0();
            int v158 = v157;
            if (os_log_type_enabled(v156, v157))
            {
              uint64_t v159 = (_DWORD *)swift_slowAlloc();
              v289 = v159;
              uint64_t v288 = swift_slowAlloc();
              v375[0] = v288;
              *uint64_t v159 = v291;
              os_log_t v287 = v156;
              sub_253DF3110();
              sub_253C9C4BC((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
              int v286 = v158;
              uint64_t v160 = sub_253DF5C40();
              unint64_t v162 = v161;
              sub_253C0F824();
              v139();
              uint64_t v163 = sub_253D8E5FC(v160, v162, v375);
              uint64_t v164 = v289;
              *(void *)(v289 + 1) = v163;
              swift_bridgeObjectRelease();
              sub_253C9D260();
              isUniquelyReferenced_nonNull_native();
              *((_WORD *)v164 + 6) = 2080;
              sub_253DF4180();
              sub_253C9C4BC((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
              uint64_t v165 = sub_253DF5C40();
              unint64_t v167 = v166;
              sub_253BEFBCC();
              v168();
              uint64_t v169 = sub_253D8E5FC(v165, v167, v375);
              uint64_t v170 = (uint8_t *)v289;
              *(void *)((char *)v289 + 14) = v169;
              swift_bridgeObjectRelease();
              unint64_t v171 = *v355;
              sub_253BEFD20();
              v171();
              os_log_t v172 = v287;
              _os_log_impl(&dword_253BD8000, v287, (os_log_type_t)v286, "Statement result with an executed outcome is not referencing an action in %s, eventId=%s", v170, 0x16u);
              uint64_t v173 = v288;
              swift_arrayDestroy();
              MEMORY[0x25A2709B0](v173, -1, -1);
              MEMORY[0x25A2709B0](v170, -1, -1);

              sub_253C633D4();
              sub_253BEFBCC();
              v174();
              sub_253C9D260();
              isUniquelyReferenced_nonNull_native();
              sub_253C9D344();
              sub_253BEFD20();
              v171();
            }
            else
            {

              uint64_t v182 = *v355;
              sub_253C0FDBC();
              v182();
              sub_253BEFD20();
              isUniquelyReferenced_nonNull_native();
              sub_253BEFBCC();
              v183();
              sub_253BEFD20();
              isUniquelyReferenced_nonNull_native();
              uint64_t v184 = sub_253C9D344();
              ((void (*)(uint64_t))v182)(v184);
            }
          }
          else
          {
            sub_253C633D4();
            uint64_t v175 = v296;
            sub_253C10134();
            v176();
            sub_253C633D4();
            sub_253C0FF48();
            v177();
            uint64_t v178 = v154;
            uint64_t v179 = v300;
            sub_253D03B7C();
            uint64_t v180 = *v338;
            (*v338)(v179, v178);
            v180(v175, v178);
            sub_253C9D260();
            isUniquelyReferenced_nonNull_native();
            sub_253BEFBCC();
            v181();
          }
          int isUniquelyReferenced_nonNull_native = v353;
        }
LABEL_31:
        sub_253C9D404();
        goto LABEL_32;
      }
      sub_253C9D344();
      sub_253BEFBCC();
      v144();
      sub_253BEFBCC();
      v145();
LABEL_32:
      v95 += v354;
      if (!--v92)
      {
        uint64_t v3 = v294;
        swift_bridgeObjectRelease();
        uint64_t v185 = v357;
        goto LABEL_42;
      }
    }
    uint64_t v102 = sub_253C9D20C();
    v103(v102);
    uint64_t v104 = *v337;
    sub_253BEFD2C();
    v104();
    sub_253DF4180();
    sub_253C633D4();
    sub_253C0FF48();
    v105();
    uint64_t v106 = v357;
    int isUniquelyReferenced_nonNull_native = (void (*)(void))swift_isUniquelyReferenced_nonNull_native();
    v375[0] = v106;
    sub_253D87B8C();
    sub_253C9D3B0();
    if (v108) {
      goto LABEL_101;
    }
    char v109 = v107;
    sub_253BDEDD8(&qword_269D7CBE0);
    sub_253C9D3C4();
    sub_253C9D438();
    if (v110)
    {
      sub_253D87B8C();
      if ((v109 & 1) != (v111 & 1)) {
        goto LABEL_107;
      }
    }
    uint64_t v112 = v375[0];
    if (v109)
    {
      sub_253C9D380();
      v113();
    }
    else
    {
      sub_253C9D22C();
      sub_253C0FF48();
      v140();
      sub_253BEFD2C();
      v104();
      uint64_t v141 = *(void *)(v112 + 16);
      BOOL v108 = __OFADD__(v141, 1);
      uint64_t v142 = v141 + 1;
      if (v108) {
        goto LABEL_103;
      }
      *(void *)(v112 + 16) = v142;
    }
    uint64_t v357 = v375[0];
    swift_bridgeObjectRelease();
    sub_253BEFBCC();
    v143();
    sub_253C633D4();
LABEL_30:
    sub_253BEFBCC();
    v150();
    sub_253BEFBCC();
    v151();
    goto LABEL_31;
  }
  uint64_t v185 = MEMORY[0x263F8EE80];
  uint64_t v336 = MEMORY[0x263F8EE80];
LABEL_42:
  v338 = (void (**)(uint64_t, uint64_t))sub_253C98964(v3, v323);
  swift_bridgeObjectRetain();
  sub_253C9B82C();
  uint64_t v187 = v186;
  uint64_t v339 = 0;
  uint64_t v357 = v185;
  swift_bridgeObjectRelease();
  uint64_t v188 = *(void *)(v187 + 16);
  uint64_t v189 = v317;
  if (v188)
  {
    v375[0] = MEMORY[0x263F8EE78];
    sub_253DC729C(0, v188, 0);
    unint64_t v190 = sub_253DEB920(v187);
    if (v192)
    {
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    uint64_t v193 = v187 + 64;
    uint64_t v194 = v374;
    v355 = (void (**)(void))(v374 + 16);
    uint64_t v354 = v369 + 16;
    uint64_t v346 = v374 + 8;
    uint64_t v195 = v188 - 1;
    uint64_t v196 = v370;
    uint64_t v356 = v187;
    uint64_t v345 = v187 + 64;
    uint64_t v347 = v369 + 32;
    int isUniquelyReferenced_nonNull_native = (void (*)(void))v372;
    if ((v190 & 0x8000000000000000) == 0)
    {
      while ((uint64_t)v190 < 1 << *(unsigned char *)(v187 + 32))
      {
        if ((*(void *)(v193 + 8 * (v190 >> 6)) & (1 << v190)) == 0) {
          goto LABEL_90;
        }
        if (*(_DWORD *)(v187 + 36) != v191) {
          goto LABEL_91;
        }
        uint64_t v361 = 1 << v190;
        uint64_t v362 = v190 >> 6;
        uint64_t v359 = v195;
        uint64_t v360 = v191;
        uint64_t v197 = v352;
        uint64_t v198 = v196;
        uint64_t v199 = v348;
        unint64_t v363 = v348 + *(int *)(v352 + 48);
        unint64_t v200 = v363;
        uint64_t v201 = *(void (**)(uint64_t, unint64_t, void (*)(void)))(v194 + 16);
        unint64_t v202 = v190;
        v201(v348, *(void *)(v187 + 48) + *(void *)(v194 + 72) * v190, isUniquelyReferenced_nonNull_native);
        uint64_t v203 = *(void *)(v187 + 56);
        uint64_t v204 = v369;
        uint64_t v364 = *(void *)(v369 + 72);
        uint64_t v365 = v202;
        uint64_t v205 = v203 + v364 * v202;
        uint64_t v206 = *(void (**)(unint64_t, uint64_t, uint64_t))(v369 + 16);
        v206(v200, v205, v198);
        uint64_t v207 = v349;
        v201(v349, v199, isUniquelyReferenced_nonNull_native);
        v206(v207 + *(int *)(v197 + 48), v363, v198);
        uint64_t v208 = v207;
        uint64_t v209 = v350;
        sub_253C61B78(v208, v350, (uint64_t *)&unk_26B2552D0);
        sub_253BEFAC0(v199, (uint64_t *)&unk_26B2552D0);
        uint64_t v210 = *(int *)(v197 + 48);
        unint64_t v211 = v351 + v210;
        uint64_t v212 = v209 + v210;
        v201(v351, v209, isUniquelyReferenced_nonNull_native);
        uint64_t v189 = v347;
        uint64_t v213 = v212;
        uint64_t v196 = v370;
        v206(v211, v213, v370);
        uint64_t v214 = *(void (**)(void))(v204 + 32);
        sub_253C9D3F8();
        v214();
        sub_253BEFBCC();
        v215();
        sub_253BEFAC0(v209, (uint64_t *)&unk_26B2552D0);
        uint64_t v216 = v375[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v217 = sub_253C9D418();
          sub_253DC729C(v217, v218, v219);
          uint64_t v196 = v370;
          uint64_t v216 = v375[0];
        }
        unint64_t v221 = *(void *)(v216 + 16);
        unint64_t v220 = *(void *)(v216 + 24);
        uint64_t v187 = v356;
        if (v221 >= v220 >> 1)
        {
          char v223 = sub_253C9D314(v220);
          sub_253DC729C(v223, v224, v225);
          uint64_t v196 = v370;
          uint64_t v216 = v375[0];
        }
        *(void *)(v216 + 16) = v221 + 1;
        sub_253C11244();
        ((void (*)(unint64_t, uint64_t, uint64_t))v214)(v216 + v222 + v221 * v364, v367, v196);
        v375[0] = v216;
        if (v365 >= -(-1 << *(unsigned char *)(v187 + 32))) {
          goto LABEL_92;
        }
        uint64_t v193 = v345;
        if ((*(void *)(v345 + 8 * v362) & v361) == 0) {
          goto LABEL_93;
        }
        if (*(_DWORD *)(v187 + 36) != v360) {
          goto LABEL_94;
        }
        unint64_t v190 = sub_253DF58B0();
        if (!v359)
        {
          swift_release();
          sub_253C9D32C();
          goto LABEL_60;
        }
        uint64_t v191 = *(unsigned int *)(v187 + 36);
        uint64_t v195 = v359 - 1;
        uint64_t v194 = v374;
        if ((v190 & 0x8000000000000000) != 0) {
          break;
        }
      }
    }
    __break(1u);
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
LABEL_95:
    __break(1u);
LABEL_96:
    __break(1u);
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  swift_release();
  uint64_t v216 = MEMORY[0x263F8EE78];
LABEL_60:
  swift_bridgeObjectRetain();
  sub_253C9B82C();
  uint64_t v227 = v226;
  swift_bridgeObjectRelease();
  uint64_t v228 = *(void *)(v227 + 16);
  uint64_t v351 = v216;
  if (!v228)
  {
    swift_release();
    uint64_t v247 = MEMORY[0x263F8EE78];
    uint64_t v244 = v368;
LABEL_79:
    uint64_t v258 = *(void *)(v216 + 16);
    uint64_t v259 = v216;
    uint64_t v260 = v369;
    if (v258)
    {
      v375[0] = MEMORY[0x263F8EE78];
      sub_253DF59D0();
      uint64_t v261 = v189;
      uint64_t v263 = *(void *)(v260 + 16);
      uint64_t v262 = v260 + 16;
      uint64_t v374 = v263;
      sub_253C11244();
      uint64_t v265 = v259 + v264;
      uint64_t v372 = *(void *)(v262 + 56);
      int isUniquelyReferenced_nonNull_native = (void (*)(void))v370;
      do
      {
        v266 = (void (*)(void))v374;
        sub_253C100A4();
        v266();
        sub_253C100A4();
        v266();
        swift_storeEnumTagMultiPayload();
        _s13ActionCreatedCMa(0);
        uint64_t v267 = swift_allocObject();
        *(void *)(v267
                  + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
        sub_253C9C560(v261, v267 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
        (*(void (**)(uint64_t, void (*)(void)))(v262 - 8))(v371, isUniquelyReferenced_nonNull_native);
        sub_253DF59B0();
        sub_253DF59E0();
        sub_253DF59F0();
        sub_253DF59C0();
        v265 += v372;
        --v258;
      }
      while (v258);
      uint64_t v268 = v375[0];
      swift_bridgeObjectRelease();
      uint64_t v189 = v261;
      uint64_t v244 = v368;
      sub_253C9D438();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v268 = MEMORY[0x263F8EE78];
    }
    uint64_t v269 = *(void *)(v247 + 16);
    unint64_t v270 = MEMORY[0x263F8EE78];
    if (v269)
    {
      uint64_t v371 = v268;
      v375[0] = MEMORY[0x263F8EE78];
      sub_253DF59D0();
      v271 = isUniquelyReferenced_nonNull_native;
      uint64_t v272 = v189;
      uint64_t v273 = *(void *)(v373 + 16);
      v373 += 16;
      uint64_t v374 = v273;
      sub_253C11244();
      uint64_t v275 = v247 + v274;
      uint64_t v372 = *(void *)(v276 + 56);
      v277 = (void (**)(void (*)(void), uint64_t))(v276 - 8);
      do
      {
        v278 = (void (*)(void))v374;
        sub_253C9D3A4();
        v278();
        sub_253C9D3A4();
        v278();
        swift_storeEnumTagMultiPayload();
        _s13ActionCreatedCMa(0);
        uint64_t v279 = swift_allocObject();
        *(void *)(v279
                  + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
        sub_253C9C560(v272, v279 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
        (*v277)(v271, v244);
        sub_253DF59B0();
        sub_253DF59E0();
        sub_253DF59F0();
        sub_253DF59C0();
        v275 += v372;
        --v269;
      }
      while (v269);
      unint64_t v270 = v375[0];
      uint64_t v268 = v371;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v375[0] = v268;
    sub_253DBF15C(v270);
    uint64_t v280 = v375[0];
    v281 = (int *)_s14ActionExecutedVMa(0);
    v282 = v302;
    v302[3] = (uint64_t)v281;
    v282[4] = (uint64_t)&off_27035DEB8;
    v283 = sub_253BDEE6C(v282);
    sub_253DF42A0();
    sub_253BDF7F0();
    sub_253C0FF48();
    v284();
    *(uint64_t *)((char *)v283 + v281[5]) = (uint64_t)v338;
    *(uint64_t *)((char *)v283 + v281[6]) = v280;
    *(uint64_t *)((char *)v283 + v281[7]) = v323;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_253C1CEE8();
    return;
  }
  v375[0] = MEMORY[0x263F8EE78];
  sub_253DC7238(0, v228, 0);
  uint64_t v229 = sub_253DEB920(v227);
  if ((v231 & 1) == 0)
  {
    unint64_t v232 = v229;
    uint64_t v233 = v227;
    uint64_t v234 = v227 + 64;
    uint64_t v235 = v374;
    uint64_t v356 = v374 + 16;
    uint64_t v236 = v373;
    v355 = (void (**)(void))(v373 + 16);
    uint64_t v367 = v373 + 32;
    uint64_t v354 = v374 + 8;
    uint64_t v237 = v228 - 1;
    uint64_t v359 = v227;
    uint64_t v352 = v227 + 64;
    int isUniquelyReferenced_nonNull_native = (void (*)(void))v372;
    if ((v229 & 0x8000000000000000) == 0)
    {
      while ((uint64_t)v232 < 1 << *(unsigned char *)(v233 + 32))
      {
        if ((*(void *)(v234 + 8 * (v232 >> 6)) & (1 << v232)) == 0) {
          goto LABEL_96;
        }
        if (*(_DWORD *)(v233 + 36) != v230) {
          goto LABEL_97;
        }
        uint64_t v362 = 1 << v232;
        unint64_t v363 = v232 >> 6;
        uint64_t v360 = v237;
        uint64_t v361 = v230;
        uint64_t v238 = v340;
        v239 = *(void (**)(uint64_t, unint64_t, void (*)(void)))(v235 + 16);
        v239(v340, *(void *)(v233 + 48) + *(void *)(v235 + 72) * v232, isUniquelyReferenced_nonNull_native);
        uint64_t v364 = *(void *)(v236 + 72);
        uint64_t v365 = v232;
        v240 = *(void (**)(void))(v236 + 16);
        sub_253C100A4();
        v240();
        uint64_t v241 = v341;
        v239(v341, v238, isUniquelyReferenced_nonNull_native);
        sub_253C9D3F8();
        sub_253C100A4();
        v240();
        uint64_t v242 = v241;
        uint64_t v243 = v342;
        sub_253C61B78(v242, v342, &qword_26B2552C8);
        sub_253BEFAC0(v238, &qword_26B2552C8);
        v239(v343, v243, isUniquelyReferenced_nonNull_native);
        uint64_t v244 = v368;
        sub_253C100A4();
        v240();
        v245 = *(void (**)(void))(v373 + 32);
        sub_253C9D3F8();
        sub_253BEFD2C();
        v245();
        sub_253BEFBCC();
        v246();
        sub_253BEFAC0(v243, &qword_26B2552C8);
        uint64_t v247 = v375[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v248 = sub_253C9D418();
          sub_253DC7238(v248, v249, v250);
          uint64_t v244 = v368;
          uint64_t v247 = v375[0];
        }
        unint64_t v252 = *(void *)(v247 + 16);
        unint64_t v251 = *(void *)(v247 + 24);
        uint64_t v189 = v365;
        if (v252 >= v251 >> 1)
        {
          char v255 = sub_253C9D314(v251);
          sub_253DC7238(v255, v256, v257);
          uint64_t v244 = v368;
          uint64_t v247 = v375[0];
        }
        *(void *)(v247 + 16) = v252 + 1;
        sub_253C11244();
        sub_253BEFD2C();
        v245();
        v375[0] = v247;
        uint64_t v233 = v359;
        sub_253C9D3E4();
        if (v253 == v108) {
          goto LABEL_98;
        }
        uint64_t v234 = v352;
        if ((*(void *)(v352 + 8 * v363) & v362) == 0) {
          goto LABEL_99;
        }
        if (*(_DWORD *)(v233 + 36) != v361) {
          goto LABEL_100;
        }
        uint64_t v254 = sub_253DF58B0();
        if (!v360)
        {
          swift_release();
          sub_253C9D32C();
          uint64_t v216 = v351;
          goto LABEL_79;
        }
        unint64_t v232 = v254;
        uint64_t v230 = *(unsigned int *)(v233 + 36);
        uint64_t v237 = v360 - 1;
        uint64_t v236 = v373;
        uint64_t v235 = v374;
        if (v254 < 0) {
          goto LABEL_95;
        }
      }
    }
    goto LABEL_95;
  }
LABEL_106:
  __break(1u);
LABEL_107:
  sub_253DF5CF0();
  __break(1u);
}

uint64_t sub_253C98964(uint64_t a1, uint64_t a2)
{
  uint64_t v129 = a2;
  uint64_t v128 = _s13ValueExecutedVMa(0);
  uint64_t v127 = *(void *)(v128 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v128);
  uint64_t v136 = (uint64_t)v126 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v135 = (uint64_t)v126 - v5;
  uint64_t v6 = sub_253DF4BA0();
  uint64_t v134 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v133 = (char *)v126 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v126 - v9;
  uint64_t v159 = sub_253DF3440();
  uint64_t v204 = *(void (**)(char *, uint64_t))(v159 - 8);
  MEMORY[0x270FA5388](v159);
  int v158 = (char *)v126 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253BDEDD8(&qword_26B255348);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v126 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v126 - v16;
  uint64_t v18 = sub_253DF2AB0();
  uint64_t v199 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v173 = (char *)v126 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v185 = (char *)v126 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v126 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)v126 - v26;
  uint64_t v188 = sub_253DF32F0();
  uint64_t v194 = *(void *)(v188 - 8);
  MEMORY[0x270FA5388](v188);
  uint64_t v189 = (char *)v126 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_253DF4040();
  uint64_t v197 = *(char **)(v175 - 8);
  MEMORY[0x270FA5388](v175);
  unint64_t v174 = (char *)v126 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = sub_253DEFFE0();
  uint64_t v184 = *(void *)(v207 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v207);
  uint64_t v32 = (char *)v126 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v205 = (char *)v126 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v126[2] = (char *)v126 - v36;
  MEMORY[0x270FA5388](v35);
  uint64_t v203 = (char *)v126 - v37;
  uint64_t v152 = sub_253DF0A20();
  uint64_t v206 = *(void (***)(char *, uint64_t))(v152 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v152);
  uint64_t v151 = (char *)v126 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v163 = (char *)v126 - v40;
  uint64_t v150 = sub_253DF38F0();
  uint64_t v202 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  uint64_t v149 = (char *)v126 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_253DF3170();
  uint64_t v201 = *(char ***)(v165 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v165);
  uint64_t v148 = (char *)v126 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v42);
  unint64_t v168 = (char *)v126 - v44;
  uint64_t v164 = sub_253DF41F0();
  uint64_t v45 = *(void *)(v164 - 8);
  MEMORY[0x270FA5388](v164);
  uint64_t v179 = (char *)v126 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = MEMORY[0x263F8EE80];
  uint64_t v47 = *(void *)(a1 + 16);
  if (!v47)
  {
LABEL_56:
    swift_bridgeObjectRelease();
    uint64_t v124 = MEMORY[0x263F8EE78];
    goto LABEL_57;
  }
  unint64_t v166 = v32;
  uint64_t v183 = v18;
  uint64_t v170 = v17;
  unint64_t v171 = v15;
  os_log_t v172 = v10;
  uint64_t v48 = v47;
  uint64_t v49 = *(void *)(sub_253DF4230() - 8);
  uint64_t v50 = a1 + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
  uint64_t v180 = *(void *)(v49 + 72);
  v126[1] = a1;
  swift_bridgeObjectRetain_n();
  uint64_t v178 = v50;
  uint64_t v51 = v48;
  uint64_t v52 = v48;
  uint64_t v53 = v188;
  uint64_t v54 = v189;
  uint64_t v137 = v6;
  uint64_t v55 = v205;
  do
  {
    sub_253C5EA04((uint64_t)&v208);
    v50 += v180;
    --v52;
  }
  while (v52);
  swift_bridgeObjectRelease_n();
  uint64_t v169 = v208;
  uint64_t v208 = MEMORY[0x263F8EE88];
  unint64_t v177 = (uint64_t (**)(char *, uint64_t))(v45 + 88);
  int v176 = *MEMORY[0x263F4DE90];
  int v162 = *MEMORY[0x263F4DF48];
  uint64_t v147 = (void (**)(char *, uint64_t))(v45 + 8);
  unint64_t v167 = (void (**)(char *, uint64_t))(v45 + 96);
  uint64_t v146 = (void (**)(char *, char *, uint64_t))(v201 + 4);
  uint64_t v145 = (void (**)(char *, uint64_t))(v202 + 8);
  uint64_t v144 = (void (**)(char *, char *, uint64_t))(v206 + 2);
  v143 = (uint64_t (**)(char *, uint64_t))(v206 + 11);
  int v142 = *MEMORY[0x263F4C7D8];
  int v141 = *MEMORY[0x263F4C7D0];
  uint64_t v140 = v206 + 1;
  uint64_t v139 = (void (**)(char *, char *, uint64_t))(v201 + 2);
  char v138 = (void (**)(char *, uint64_t))(v201 + 1);
  uint64_t v206 = (void (**)(char *, uint64_t))(v184 + 8);
  unint64_t v161 = (void (**)(char *, char *, uint64_t))(v197 + 32);
  uint64_t v191 = v194 + 16;
  unint64_t v200 = (uint64_t (**)(char *, uint64_t))(v199 + 88);
  uint64_t v201 = (char **)(v199 + 16);
  uint64_t v198 = (void (**)(char *, uint64_t))(v199 + 8);
  uint64_t v202 = v184 + 16;
  os_log_type_t v157 = (void (**)(char *, uint64_t))(v199 + 96);
  v156 = (uint64_t (**)(char *, char *, uint64_t))((char *)v204 + 32);
  LODWORD(v199) = *MEMORY[0x263F4D528];
  uint64_t v155 = (void (**)(char *, uint64_t))((char *)v204 + 8);
  uint64_t v154 = (void (**)(char *, uint64_t, uint64_t))(v184 + 32);
  uint64_t v132 = v134 + 16;
  uint64_t v131 = v134 + 32;
  uint64_t v130 = (void (**)(char *, uint64_t))(v134 + 8);
  uint64_t v160 = (void (**)(char *, uint64_t))(v197 + 8);
  unint64_t v190 = (void (**)(char *, uint64_t))(v194 + 8);
  swift_bridgeObjectRetain();
  uint64_t v153 = MEMORY[0x263F8EE78];
  uint64_t v56 = v183;
  uint64_t v57 = v164;
  uint64_t v182 = v25;
  uint64_t v181 = v27;
  do
  {
    uint64_t v186 = v51 - 1;
    uint64_t v58 = v179;
    sub_253DF4200();
    int v59 = (*v177)(v58, v57);
    if (v59 != v176)
    {
      if (v59 != v162)
      {
        (*v147)(v58, v57);
        goto LABEL_53;
      }
      (*v167)(v58, v57);
      (*v146)(v168, v58, v165);
      char v107 = v149;
      sub_253DF3160();
      BOOL v108 = v163;
      sub_253DF38D0();
      (*v145)(v107, v150);
      char v109 = v151;
      uint64_t v110 = v152;
      (*v144)(v151, v108, v152);
      LODWORD(v204) = (*v143)(v109, v110);
      char v111 = *v140;
      uint64_t v112 = v109;
      uint64_t v113 = v165;
      (*v140)(v112, v110);
      uint64_t v114 = v110;
      uint64_t v115 = v148;
      v111(v163, v114);
      (*v139)(v115, v168, v113);
      if (v204 == v142 || v204 == v141)
      {
        uint64_t v117 = v203;
        uint64_t v118 = v138;
        uint64_t v119 = v113;
        sub_253DF3110();
        sub_253D7F720();
        char v121 = v120;
        uint64_t v204 = *v206;
        v204(v117, v207);
        char v122 = *v118;
        v122(v115, v119);
        if ((v121 & 1) == 0)
        {
          uint64_t v123 = v168;
          sub_253DF3110();
          sub_253D039EC();
          v204(v117, v207);
          v122(v123, v165);
          uint64_t v54 = v189;
          uint64_t v55 = v205;
          goto LABEL_52;
        }
        uint64_t v54 = v189;
        uint64_t v55 = v205;
        uint64_t v113 = v165;
      }
      else
      {
        char v122 = *v138;
        (*v138)(v115, v113);
      }
      v122(v168, v113);
LABEL_52:
      uint64_t v57 = v164;
      goto LABEL_53;
    }
    (*v167)(v58, v57);
    (*v161)(v174, v58, v175);
    uint64_t v60 = sub_253DF4000();
    uint64_t v61 = v60;
    uint64_t v195 = *(void *)(v60 + 16);
    if (v195)
    {
      unint64_t v62 = 0;
      unint64_t v192 = v60 + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80));
      uint64_t v193 = v60;
      while (1)
      {
        if (v62 >= *(void *)(v61 + 16))
        {
          __break(1u);
          goto LABEL_56;
        }
        (*(void (**)(char *, unint64_t, uint64_t))(v194 + 16))(v54, v192 + *(void *)(v194 + 72) * v62, v53);
        sub_253DF32D0();
        uint64_t v197 = *v201;
        ((void (*)(char *, char *, uint64_t))v197)(v25, v27, v56);
        uint64_t v196 = *v200;
        int v63 = v196(v25, v56);
        uint64_t v64 = v55;
        uint64_t v65 = *v198;
        (*v198)(v25, v56);
        v65(v27, v56);
        uint64_t v66 = v65;
        uint64_t v55 = v64;
        if (v63 != v199) {
          goto LABEL_18;
        }
        uint64_t v67 = v208;
        swift_bridgeObjectRetain();
        sub_253DF32E0();
        if (!*(void *)(v67 + 16)) {
          break;
        }
        sub_253C9C4BC(&qword_26B255340, MEMORY[0x263F4BF98]);
        uint64_t v68 = sub_253DF5220();
        uint64_t v69 = -1 << *(unsigned char *)(v67 + 32);
        unint64_t v70 = v68 & ~v69;
        if (((*(void *)(v67 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70) & 1) == 0) {
          break;
        }
        uint64_t v187 = v66;
        uint64_t v71 = ~v69;
        uint64_t v72 = *(void *)(v184 + 72);
        uint64_t v204 = *(void (**)(char *, uint64_t))(v184 + 16);
        while (1)
        {
          uint64_t v73 = v203;
          uint64_t v74 = v207;
          ((void (*)(char *, unint64_t, uint64_t))v204)(v203, *(void *)(v67 + 48) + v72 * v70, v207);
          sub_253C9C4BC(&qword_269D7CC00, MEMORY[0x263F4BF98]);
          char v75 = sub_253DF5250();
          uint64_t v76 = *v206;
          (*v206)(v73, v74);
          if (v75) {
            break;
          }
          unint64_t v70 = (v70 + 1) & v71;
          if (((*(void *)(v67 + 56 + ((v70 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v70) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            uint64_t v55 = v205;
            v76(v205, v207);
            uint64_t v56 = v183;
            uint64_t v25 = v182;
            uint64_t v27 = v181;
            goto LABEL_17;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v77 = v207;
        v76(v205, v207);
        uint64_t v78 = v185;
        sub_253DF32D0();
        uint64_t v79 = v173;
        uint64_t v56 = v183;
        ((void (*)(char *, char *, uint64_t))v197)(v173, v78, v183);
        int v80 = v196(v79, v56);
        if (v80 == v199)
        {
          (*v157)(v79, v56);
          unint64_t v81 = v158;
          uint64_t v82 = v79;
          uint64_t v83 = v159;
          uint64_t v84 = (*v156)(v158, v82, v159);
          uint64_t v85 = (uint64_t)v171;
          MEMORY[0x25A26D780](v84);
          (*v155)(v81, v83);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v85, 0, 1, v77);
          uint64_t v86 = v172;
          uint64_t v87 = (uint64_t)v170;
          uint64_t v88 = v187;
        }
        else
        {
          uint64_t v85 = (uint64_t)v171;
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v171, 1, 1, v77);
          uint64_t v88 = v187;
          v187(v79, v56);
          uint64_t v86 = v172;
          uint64_t v87 = (uint64_t)v170;
        }
        sub_253C61B78(v85, v87, &qword_26B255348);
        v88(v185, v56);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v87, 1, v77) == 1)
        {
          uint64_t v54 = v189;
          uint64_t v53 = v188;
          (*v190)(v189, v188);
          sub_253BEFAC0(v87, &qword_26B255348);
        }
        else
        {
          uint64_t v89 = v77;
          uint64_t v90 = v166;
          (*v154)(v166, v87, v89);
          uint64_t v54 = v189;
          if (*(void *)(v169 + 16) && (sub_253D87ADC(), (v92 & 1) != 0))
          {
            uint64_t v93 = v134;
            uint64_t v94 = v86;
            uint64_t v95 = v133;
            uint64_t v96 = v137;
            (*(void (**)(char *, uint64_t, uint64_t))(v134 + 16))(v133, *(void *)(v169 + 56) + *(void *)(v134 + 72) * v91, v137);
            (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v94, v95, v96);
            sub_253C5F88C();
            if (v97)
            {
              uint64_t v98 = v97;
              uint64_t v99 = v135;
              sub_253DF32E0();
              uint64_t v100 = v128;
              ((void (*)(uint64_t, char *, uint64_t))v204)(v99 + *(int *)(v128 + 20), v166, v207);
              *(void *)(v99 + *(int *)(v100 + 24)) = v98;
              sub_253C9C504(v99, v136, (void (*)(void))_s13ValueExecutedVMa);
              uint64_t v101 = v153;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              uint64_t v55 = v205;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                uint64_t v101 = sub_253DC4698(0, *(void *)(v101 + 16) + 1, 1, v101);
              }
              uint64_t v61 = v193;
              uint64_t v153 = v101;
              unint64_t v104 = *(void *)(v101 + 16);
              unint64_t v103 = *(void *)(v101 + 24);
              uint64_t v25 = v182;
              uint64_t v54 = v189;
              if (v104 >= v103 >> 1) {
                uint64_t v153 = sub_253DC4698(v103 > 1, v104 + 1, 1, v153);
              }
              uint64_t v105 = v153;
              *(void *)(v153 + 16) = v104 + 1;
              sub_253C9C560(v136, v105+ ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80))+ *(void *)(v127 + 72) * v104, (void (*)(void))_s13ValueExecutedVMa);
              sub_253C9CBCC(v135, (void (*)(void))_s13ValueExecutedVMa);
              (*v130)(v94, v137);
              v76(v166, v207);
              uint64_t v53 = v188;
              (*v190)(v54, v188);
              uint64_t v27 = v181;
              goto LABEL_20;
            }
            (*v130)(v94, v96);
            uint64_t v106 = v166;
          }
          else
          {
            uint64_t v106 = v90;
          }
          v76(v106, v207);
          uint64_t v53 = v188;
          (*v190)(v54, v188);
        }
        uint64_t v25 = v182;
        uint64_t v27 = v181;
        uint64_t v55 = v205;
LABEL_19:
        uint64_t v61 = v193;
LABEL_20:
        if (++v62 == v195)
        {
          swift_bridgeObjectRelease();
          uint64_t v57 = v164;
          goto LABEL_49;
        }
      }
      swift_bridgeObjectRelease();
      (*v206)(v55, v207);
LABEL_17:
      uint64_t v53 = v188;
      uint64_t v54 = v189;
LABEL_18:
      (*v190)(v54, v53);
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
LABEL_49:
    (*v160)(v174, v175);
LABEL_53:
    uint64_t v51 = v186;
  }
  while (v186);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v124 = v153;
LABEL_57:
  swift_bridgeObjectRelease();
  return v124;
}

void sub_253C9A0A8(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_253DF3770() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_253DEB9AC(v3);
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_253C9A150((uint64_t)v6);
  *a1 = v3;
}

void sub_253C9A150(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v165 = sub_253DEFFE0();
  uint64_t v4 = *(void *)(v165 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v165);
  uint64_t v164 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v163 = (char *)&v143 - v7;
  uint64_t v8 = sub_253DF3770();
  uint64_t v154 = *(void **)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v151 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v170 = (char *)&v143 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  int v162 = (char *)&v143 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v166 = (char *)&v143 - v15;
  uint64_t v16 = *(void *)(a1 + 8);
  uint64_t v17 = sub_253DF5C30();
  if (v17 >= v16)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      if (v16) {
        sub_253C9AE18(0, v16, 1, (void *)a1);
      }
      return;
    }
    goto LABEL_145;
  }
  uint64_t v18 = v17;
  uint64_t v145 = sub_253DCADD8(v16 / 2);
  unint64_t v153 = v19;
  uint64_t v146 = v16;
  if (v16 <= 0)
  {
LABEL_106:
    uint64_t v21 = (char *)MEMORY[0x263F8EE78];
    unint64_t v86 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_107:
    if (v86 < 2)
    {
      uint64_t v136 = v146;
LABEL_120:
      swift_bridgeObjectRelease();
      if (v136 >= -1) {
        goto LABEL_121;
      }
      goto LABEL_149;
    }
    uint64_t v137 = *(void *)a1;
    uint64_t v136 = v146;
    while (1)
    {
      unint64_t v138 = v86 - 2;
      if (v86 < 2) {
        break;
      }
      if (!v137) {
        goto LABEL_153;
      }
      uint64_t v139 = v21;
      uint64_t v140 = *(void *)&v21[16 * v138 + 32];
      a1 = *(void *)&v21[16 * v86 + 24];
      sub_253C9B1E4(v137 + v154[9] * v140, v137 + v154[9] * *(void *)&v21[16 * v86 + 16], v137 + v154[9] * a1, v153);
      if (v2) {
        goto LABEL_104;
      }
      if (a1 < v140) {
        goto LABEL_140;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v139 = sub_253DEB3A8((uint64_t)v139);
      }
      if (v138 >= *((void *)v139 + 2)) {
        goto LABEL_141;
      }
      int v141 = &v139[16 * v138 + 32];
      *(void *)int v141 = v140;
      *((void *)v141 + 1) = a1;
      unint64_t v142 = *((void *)v139 + 2);
      if (v86 > v142) {
        goto LABEL_142;
      }
      memmove(&v139[16 * v86 + 16], &v139[16 * v86 + 32], 16 * (v142 - v86));
      uint64_t v21 = v139;
      *((void *)v139 + 2) = v142 - 1;
      unint64_t v86 = v142 - 1;
      if (v142 <= 2) {
        goto LABEL_120;
      }
    }
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  uint64_t v147 = v18;
  uint64_t v20 = 0;
  uint64_t v160 = (void (**)(char *, uint64_t))(v4 + 8);
  unint64_t v161 = v154 + 2;
  uint64_t v159 = (void (**)(char *, uint64_t))(v154 + 1);
  unint64_t v174 = (char **)(v154 + 4);
  uint64_t v21 = (char *)MEMORY[0x263F8EE78];
  unint64_t v167 = (void *)a1;
  uint64_t v169 = v8;
  while (1)
  {
    uint64_t v22 = v20 + 1;
    uint64_t v150 = v21;
    uint64_t v152 = v20;
    if (v20 + 1 >= v16)
    {
      uint64_t v46 = (void (*)(void))v20;
      uint64_t v47 = v147;
    }
    else
    {
      uint64_t v23 = *(void *)a1;
      os_log_t v172 = (void (*)(void))v154[9];
      uint64_t v24 = v172;
      uint64_t v173 = (char *)(v20 + 1);
      uint64_t v25 = (void (*)(void))v154[2];
      v25();
      uint64_t v171 = v16;
      uint64_t v26 = v162;
      unint64_t v168 = v25;
      ((void (*)(char *, uint64_t, uint64_t))v25)(v162, v23 + (void)v24 * v20, v8);
      uint64_t v27 = v163;
      sub_253DF3730();
      uint64_t v28 = v164;
      sub_253DF3730();
      LODWORD(v158) = sub_253DEFFA0();
      uint64_t v29 = (char *)*v160;
      uint64_t v30 = v165;
      (*v160)(v28, v165);
      os_log_type_t v157 = (void (*)(char *, uint64_t))v29;
      ((void (*)(char *, uint64_t))v29)(v27, v30);
      uint64_t v31 = (void (*)(char *, uint64_t))v154[1];
      uint64_t v32 = v26;
      uint64_t v16 = v171;
      uint64_t v33 = v169;
      v31(v32, v169);
      v156 = (char *)v31;
      v31(v166, v33);
      uint64_t v22 = v20 + 2;
      uint64_t v148 = v23;
      if (v20 + 2 >= v16)
      {
        a1 = (uint64_t)v167;
      }
      else
      {
        uint64_t v144 = v2;
        uint64_t v155 = (void)v172 * (void)v173;
        uint64_t v34 = v23;
        uint64_t v149 = (void)v172 * v22;
        while (1)
        {
          uint64_t v35 = v22;
          uint64_t v36 = v166;
          uint64_t v37 = v168;
          uint64_t v38 = v169;
          ((void (*)(char *, uint64_t, uint64_t))v168)(v166, v34 + v149, v169);
          uint64_t v39 = v162;
          ((void (*)(char *, uint64_t, uint64_t))v37)(v162, v34 + v155, v38);
          uint64_t v40 = v163;
          sub_253DF3730();
          uint64_t v41 = v164;
          sub_253DF3730();
          LODWORD(v173) = sub_253DEFFA0();
          uint64_t v42 = v41;
          uint64_t v43 = v165;
          uint64_t v44 = v157;
          v157(v42, v165);
          v44(v40, v43);
          uint64_t v45 = (void (*)(char *, uint64_t))v156;
          ((void (*)(char *, uint64_t))v156)(v39, v38);
          v45(v36, v38);
          if ((v158 ^ v173)) {
            break;
          }
          uint64_t v22 = v35 + 1;
          uint64_t v16 = v171;
          v34 += (uint64_t)v172;
          if (v35 + 1 >= v171)
          {
            uint64_t v22 = v171;
            a1 = (uint64_t)v167;
            uint64_t v2 = v144;
            goto LABEL_13;
          }
        }
        a1 = (uint64_t)v167;
        uint64_t v2 = v144;
        uint64_t v22 = v35;
        uint64_t v16 = v171;
      }
LABEL_13:
      uint64_t v48 = v150;
      uint64_t v8 = v169;
      uint64_t v47 = v147;
      uint64_t v46 = (void (*)(void))v152;
      if (v158)
      {
        if (v22 < v152) {
          goto LABEL_146;
        }
        if (v152 < v22)
        {
          uint64_t v49 = 0;
          uint64_t v50 = v172;
          uint64_t v51 = (void)v172 * (v22 - 1);
          uint64_t v52 = v22 * (void)v172;
          uint64_t v53 = v152 * (void)v172;
          unint64_t v168 = (void (*)(void))v22;
          do
          {
            if (v46 != (void (*)(void))(v22 + v49 - 1))
            {
              uint64_t v54 = v148;
              if (!v148) {
                goto LABEL_152;
              }
              uint64_t v55 = v2;
              unint64_t v56 = v148 + v53;
              uint64_t v158 = v148 + v51;
              uint64_t v57 = v169;
              uint64_t v173 = *v174;
              ((void (*)(char *, uint64_t, uint64_t, char *))v173)(v151, v148 + v53, v169, v48);
              if (v53 < v51 || v56 >= v54 + v52)
              {
                uint64_t v59 = v158;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v59 = v158;
                if (v53 != v51) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v173)(v59, v151, v57);
              uint64_t v48 = v150;
              uint64_t v2 = v55;
              a1 = (uint64_t)v167;
              uint64_t v22 = (uint64_t)v168;
              uint64_t v50 = v172;
            }
            uint64_t v46 = (void (*)(void))((char *)v46 + 1);
            --v49;
            v51 -= (uint64_t)v50;
            v52 -= (uint64_t)v50;
            v53 += (uint64_t)v50;
          }
          while ((uint64_t)v46 < v22 + v49);
          uint64_t v8 = v169;
          uint64_t v47 = v147;
          uint64_t v46 = (void (*)(void))v152;
          uint64_t v16 = v171;
        }
      }
    }
    if (v22 < v16)
    {
      if (__OFSUB__(v22, v46)) {
        goto LABEL_144;
      }
      if (v22 - (uint64_t)v46 < v47)
      {
        if (__OFADD__(v46, v47)) {
          goto LABEL_147;
        }
        if ((uint64_t)v46 + v47 >= v16) {
          uint64_t v60 = v16;
        }
        else {
          uint64_t v60 = (uint64_t)v46 + v47;
        }
        if (v60 < (uint64_t)v46) {
          goto LABEL_148;
        }
        if (v22 != v60)
        {
          uint64_t v144 = v2;
          uint64_t v61 = (char *)v154[9];
          uint64_t v155 = v154[2];
          v156 = v61;
          uint64_t v62 = (void)v61 * (v22 - 1);
          uint64_t v63 = v22 * (void)v61;
          uint64_t v149 = v60;
          do
          {
            uint64_t v64 = 0;
            unint64_t v168 = (void (*)(void))v22;
            os_log_type_t v157 = (void (*)(char *, uint64_t))v63;
            uint64_t v158 = v62;
            while (1)
            {
              uint64_t v65 = *(void *)a1;
              uint64_t v171 = v63 + v64;
              os_log_t v172 = v46;
              uint64_t v66 = (char *)(v63 + v64 + v65);
              uint64_t v67 = v166;
              uint64_t v68 = (void (*)(char *, uint64_t, uint64_t))v155;
              ((void (*)(char *, char *, uint64_t))v155)(v166, v66, v8);
              uint64_t v69 = v62 + v64 + v65;
              unint64_t v70 = v162;
              v68(v162, v69, v8);
              uint64_t v71 = v163;
              sub_253DF3730();
              uint64_t v72 = (uint64_t *)a1;
              uint64_t v73 = v164;
              sub_253DF3730();
              LODWORD(v173) = sub_253DEFFA0();
              uint64_t v74 = *v160;
              char v75 = v73;
              uint64_t v76 = v165;
              (*v160)(v75, v165);
              uint64_t v77 = v71;
              uint64_t v8 = v169;
              v74(v77, v76);
              uint64_t v78 = *v159;
              (*v159)(v70, v8);
              v78(v67, v8);
              if ((v173 & 1) == 0) {
                break;
              }
              uint64_t v79 = *v72;
              if (!*v72) {
                goto LABEL_150;
              }
              uint64_t v63 = (uint64_t)v157;
              uint64_t v62 = v158;
              int v80 = (char *)(v79 + v158 + v64);
              unint64_t v81 = *v174;
              ((void (*)(char *, char *, uint64_t))*v174)(v170, (char *)v157 + v79 + v64, v8);
              swift_arrayInitWithTakeFrontToBack();
              ((void (*)(char *, char *, uint64_t))v81)(v80, v170, v8);
              v64 -= (uint64_t)v156;
              uint64_t v46 = (void (*)(void))((char *)v172 + 1);
              a1 = (uint64_t)v167;
              uint64_t v82 = v168;
              if (v168 == (void (*)(void))((char *)v172 + 1)) {
                goto LABEL_46;
              }
            }
            uint64_t v82 = v168;
            a1 = (uint64_t)v72;
            uint64_t v63 = (uint64_t)v157;
            uint64_t v62 = v158;
LABEL_46:
            uint64_t v22 = (uint64_t)v82 + 1;
            v62 += (uint64_t)v156;
            v63 += (uint64_t)v156;
            uint64_t v46 = (void (*)(void))v152;
          }
          while (v22 != v149);
          uint64_t v22 = v149;
          uint64_t v2 = v144;
        }
      }
    }
    if (v22 < (uint64_t)v46) {
      goto LABEL_143;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v168 = (void (*)(void))v22;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v21 = v150;
    }
    else {
      uint64_t v21 = sub_253DEB2B0(0, *((void *)v150 + 2) + 1, 1, v150);
    }
    unint64_t v85 = *((void *)v21 + 2);
    unint64_t v84 = *((void *)v21 + 3);
    unint64_t v86 = v85 + 1;
    if (v85 >= v84 >> 1) {
      uint64_t v21 = sub_253DEB2B0((char *)(v84 > 1), v85 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v86;
    uint64_t v87 = v21 + 32;
    uint64_t v88 = &v21[16 * v85 + 32];
    uint64_t v89 = v168;
    *(void *)uint64_t v88 = v46;
    *((void *)v88 + 1) = v89;
    if (v85) {
      break;
    }
    unint64_t v86 = 1;
    uint64_t v8 = v169;
LABEL_97:
    uint64_t v16 = *(void *)(a1 + 8);
    uint64_t v20 = (uint64_t)v168;
    if ((uint64_t)v168 >= v16) {
      goto LABEL_107;
    }
  }
  uint64_t v8 = v169;
  while (1)
  {
    unint64_t v90 = v86 - 1;
    if (v86 >= 4)
    {
      uint64_t v95 = &v87[16 * v86];
      uint64_t v96 = *((void *)v95 - 8);
      uint64_t v97 = *((void *)v95 - 7);
      BOOL v101 = __OFSUB__(v97, v96);
      uint64_t v98 = v97 - v96;
      if (v101) {
        goto LABEL_128;
      }
      uint64_t v100 = *((void *)v95 - 6);
      uint64_t v99 = *((void *)v95 - 5);
      BOOL v101 = __OFSUB__(v99, v100);
      uint64_t v93 = v99 - v100;
      char v94 = v101;
      if (v101) {
        goto LABEL_129;
      }
      unint64_t v102 = v86 - 2;
      unint64_t v103 = &v87[16 * v86 - 32];
      uint64_t v105 = *(void *)v103;
      uint64_t v104 = *((void *)v103 + 1);
      BOOL v101 = __OFSUB__(v104, v105);
      uint64_t v106 = v104 - v105;
      if (v101) {
        goto LABEL_130;
      }
      BOOL v101 = __OFADD__(v93, v106);
      uint64_t v107 = v93 + v106;
      if (v101) {
        goto LABEL_132;
      }
      if (v107 >= v98)
      {
        uint64_t v125 = &v87[16 * v90];
        uint64_t v127 = *(void *)v125;
        uint64_t v126 = *((void *)v125 + 1);
        BOOL v101 = __OFSUB__(v126, v127);
        uint64_t v128 = v126 - v127;
        if (v101) {
          goto LABEL_138;
        }
        BOOL v118 = v93 < v128;
        goto LABEL_86;
      }
    }
    else
    {
      if (v86 != 3)
      {
        uint64_t v119 = *((void *)v21 + 4);
        uint64_t v120 = *((void *)v21 + 5);
        BOOL v101 = __OFSUB__(v120, v119);
        uint64_t v112 = v120 - v119;
        char v113 = v101;
        goto LABEL_80;
      }
      uint64_t v92 = *((void *)v21 + 4);
      uint64_t v91 = *((void *)v21 + 5);
      BOOL v101 = __OFSUB__(v91, v92);
      uint64_t v93 = v91 - v92;
      char v94 = v101;
    }
    if (v94) {
      goto LABEL_131;
    }
    unint64_t v102 = v86 - 2;
    BOOL v108 = &v87[16 * v86 - 32];
    uint64_t v110 = *(void *)v108;
    uint64_t v109 = *((void *)v108 + 1);
    BOOL v111 = __OFSUB__(v109, v110);
    uint64_t v112 = v109 - v110;
    char v113 = v111;
    if (v111) {
      goto LABEL_133;
    }
    uint64_t v114 = &v87[16 * v90];
    uint64_t v116 = *(void *)v114;
    uint64_t v115 = *((void *)v114 + 1);
    BOOL v101 = __OFSUB__(v115, v116);
    uint64_t v117 = v115 - v116;
    if (v101) {
      goto LABEL_135;
    }
    if (__OFADD__(v112, v117)) {
      goto LABEL_137;
    }
    if (v112 + v117 >= v93)
    {
      BOOL v118 = v93 < v117;
LABEL_86:
      if (v118) {
        unint64_t v90 = v102;
      }
      goto LABEL_88;
    }
LABEL_80:
    if (v113) {
      goto LABEL_134;
    }
    char v121 = &v87[16 * v90];
    uint64_t v123 = *(void *)v121;
    uint64_t v122 = *((void *)v121 + 1);
    BOOL v101 = __OFSUB__(v122, v123);
    uint64_t v124 = v122 - v123;
    if (v101) {
      goto LABEL_136;
    }
    if (v124 < v112) {
      goto LABEL_97;
    }
LABEL_88:
    unint64_t v129 = v90 - 1;
    if (v90 - 1 >= v86)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    uint64_t v130 = *(void *)a1;
    if (!*(void *)a1) {
      goto LABEL_151;
    }
    uint64_t v131 = v21;
    uint64_t v132 = &v87[16 * v129];
    uint64_t v133 = *(void *)v132;
    a1 = (uint64_t)&v87[16 * v90];
    uint64_t v134 = *(void *)(a1 + 8);
    sub_253C9B1E4(v130 + v154[9] * *(void *)v132, v130 + v154[9] * *(void *)a1, v130 + v154[9] * v134, v153);
    if (v2) {
      break;
    }
    if (v134 < v133) {
      goto LABEL_125;
    }
    if (v90 > *((void *)v131 + 2)) {
      goto LABEL_126;
    }
    *(void *)uint64_t v132 = v133;
    *(void *)&v87[16 * v129 + 8] = v134;
    unint64_t v135 = *((void *)v131 + 2);
    if (v90 >= v135) {
      goto LABEL_127;
    }
    unint64_t v86 = v135 - 1;
    memmove(&v87[16 * v90], (const void *)(a1 + 16), 16 * (v135 - 1 - v90));
    uint64_t v21 = v131;
    *((void *)v131 + 2) = v135 - 1;
    BOOL v118 = v135 > 2;
    a1 = (uint64_t)v167;
    uint64_t v8 = v169;
    if (!v118) {
      goto LABEL_97;
    }
  }
  uint64_t v136 = v146;
LABEL_104:
  swift_bridgeObjectRelease();
  if (v136 < -1)
  {
    __break(1u);
    goto LABEL_106;
  }
LABEL_121:
  *(void *)(v145 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_253C9AE18(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v46 = a1;
  uint64_t v56 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v56 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v54 = (char *)&v44 - v10;
  uint64_t v11 = sub_253DF3770();
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v53 = (char *)&v44 - v15;
  uint64_t result = MEMORY[0x270FA5388](v14);
  uint64_t v52 = (char *)&v44 - v18;
  uint64_t v60 = a3;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    uint64_t v19 = v17 + 16;
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v49 = v20;
    uint64_t v47 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v50 = v19;
    uint64_t v51 = v11;
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v22 = v21 * (v60 - 1);
    uint64_t v57 = v21;
    uint64_t v23 = v21 * v60;
    while (2)
    {
      uint64_t v24 = 0;
      uint64_t v64 = v46;
      uint64_t v58 = v23;
      uint64_t v59 = v22;
      do
      {
        uint64_t v25 = *a4;
        uint64_t v63 = v23 + v24;
        uint64_t v26 = v23 + v24 + v25;
        uint64_t v27 = v52;
        uint64_t v28 = v49;
        v49(v52, v26, v11);
        uint64_t v29 = v22 + v24 + v25;
        uint64_t v30 = v53;
        v28(v53, v29, v11);
        uint64_t v31 = v54;
        sub_253DF3730();
        uint64_t v32 = a4;
        uint64_t v33 = v55;
        sub_253DF3730();
        int v65 = sub_253DEFFA0();
        uint64_t v34 = *v48;
        uint64_t v35 = v33;
        uint64_t v36 = v56;
        (*v48)(v35, v56);
        uint64_t v37 = v36;
        a4 = v32;
        uint64_t v11 = v51;
        v34(v31, v37);
        uint64_t v38 = *v47;
        uint64_t v39 = v30;
        uint64_t v22 = v59;
        (*v47)(v39, v11);
        uint64_t v40 = v27;
        uint64_t v23 = v58;
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v40, v11);
        if ((v65 & 1) == 0) {
          break;
        }
        uint64_t v41 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v42 = v41 + v22 + v24;
        uint64_t v43 = *v61;
        (*v61)(v62, v41 + v23 + v24, v11);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v43)(v42, v62, v11);
        v24 -= v57;
        ++v64;
      }
      while (v60 != v64);
      v22 += v57;
      v23 += v57;
      if (++v60 != v45) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_253C9B1E4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v83 = sub_253DEFFE0();
  uint64_t v8 = *(void *)(v83 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v83);
  uint64_t v82 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v81 = (char *)&v68 - v11;
  uint64_t v87 = sub_253DF3770();
  uint64_t v12 = *(void *)(v87 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v87);
  int v80 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v79 = (char *)&v68 - v15;
  uint64_t v17 = *(void *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  int64_t v18 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_76;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_77;
  }
  unint64_t v86 = a1;
  uint64_t v22 = v18 / v17;
  uint64_t v23 = v20 / v17;
  uint64_t v78 = v17;
  if (v18 / v17 >= v20 / v17)
  {
    sub_253DC5A3C(a2, v20 / v17);
    uint64_t v24 = (char *)(a4 + v23 * v17);
    if (v23 * v17 >= 1 && v86 < a2)
    {
      uint64_t v73 = -v17;
      uint64_t v27 = *(void (**)(char *))(v12 + 16);
      uint64_t v71 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v72 = v27;
      uint64_t v77 = v12 + 16;
      unint64_t v69 = a4;
      unint64_t v70 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v28 = v79;
      uint64_t v29 = v80;
      do
      {
        uint64_t v30 = v73;
        unint64_t v84 = (unint64_t)v24;
        unint64_t v85 = a3 + v73;
        char v75 = &v24[v73];
        unint64_t v76 = a3;
        uint64_t v31 = v87;
        uint64_t v32 = v72;
        v72(v28);
        uint64_t v74 = (void (**)(char *, uint64_t))(a2 + v30);
        v32(v29);
        unint64_t v33 = a2;
        uint64_t v34 = v81;
        sub_253DF3730();
        uint64_t v35 = v82;
        sub_253DF3730();
        char v36 = sub_253DEFFA0();
        uint64_t v37 = *v71;
        uint64_t v38 = v35;
        uint64_t v39 = v83;
        (*v71)(v38, v83);
        v37(v34, v39);
        uint64_t v40 = *v70;
        (*v70)(v29, v31);
        v40(v28, v31);
        if (v36)
        {
          uint64_t v41 = (char *)v84;
          a3 = v85;
          if (v76 < v33 || v85 >= v33)
          {
            a2 = (unint64_t)v74;
            swift_arrayInitWithTakeFrontToBack();
            a4 = v69;
            unint64_t v43 = v86;
            uint64_t v17 = v78;
          }
          else
          {
            unint64_t v43 = v86;
            uint64_t v17 = v78;
            a2 = (unint64_t)v74;
            if (v76 != v33) {
              swift_arrayInitWithTakeBackToFront();
            }
            a4 = v69;
          }
          uint64_t v24 = v41;
        }
        else
        {
          a3 = v85;
          BOOL v44 = v76 < v84 || v85 >= v84;
          a2 = v33;
          if (v44)
          {
            uint64_t v45 = v75;
            swift_arrayInitWithTakeFrontToBack();
            uint64_t v24 = v45;
            a4 = v69;
            unint64_t v43 = v86;
            uint64_t v17 = v78;
          }
          else
          {
            uint64_t v17 = v78;
            if (v76 == v84)
            {
              uint64_t v24 = v75;
            }
            else
            {
              uint64_t v46 = v75;
              swift_arrayInitWithTakeBackToFront();
              uint64_t v24 = v46;
            }
            a4 = v69;
            unint64_t v43 = v86;
          }
        }
      }
      while ((unint64_t)v24 > a4 && a2 > v43);
    }
  }
  else
  {
    sub_253DC5A3C(v86, v18 / v17);
    uint64_t v24 = (char *)(a4 + v22 * v17);
    if (v22 * v17 >= 1 && a2 < a3)
    {
      unint64_t v84 = a4 + v22 * v17;
      unint64_t v85 = a3;
      uint64_t v48 = *(char **)(v12 + 16);
      uint64_t v74 = (void (**)(char *, uint64_t))(v8 + 8);
      char v75 = v48;
      uint64_t v77 = v12 + 16;
      uint64_t v73 = v12 + 8;
      uint64_t v49 = v79;
      uint64_t v50 = v80;
      do
      {
        unint64_t v76 = a2;
        unint64_t v51 = a2;
        uint64_t v52 = v87;
        uint64_t v53 = v75;
        ((void (*)(char *, unint64_t, uint64_t))v75)(v49, v51, v87);
        ((void (*)(char *, unint64_t, uint64_t))v53)(v50, a4, v52);
        uint64_t v54 = v81;
        sub_253DF3730();
        uint64_t v55 = v82;
        sub_253DF3730();
        char v56 = sub_253DEFFA0();
        unint64_t v57 = a4;
        uint64_t v58 = *v74;
        uint64_t v59 = v55;
        uint64_t v60 = v83;
        (*v74)(v59, v83);
        v58(v54, v60);
        uint64_t v61 = *(void (**)(char *, uint64_t))v73;
        (*(void (**)(char *, uint64_t))v73)(v50, v52);
        v61(v49, v52);
        if (v56)
        {
          uint64_t v17 = v78;
          a2 = v76 + v78;
          unint64_t v62 = v86;
          if (v86 < v76 || v86 >= a2) {
            goto LABEL_60;
          }
          if (v86 != v76) {
            goto LABEL_64;
          }
        }
        else
        {
          a2 = v76;
          uint64_t v17 = v78;
          a4 += v78;
          unint64_t v62 = v86;
          if (v86 < v57 || v86 >= a4)
          {
LABEL_60:
            swift_arrayInitWithTakeFrontToBack();
            goto LABEL_65;
          }
          if (v86 != v57) {
LABEL_64:
          }
            swift_arrayInitWithTakeBackToFront();
        }
LABEL_65:
        uint64_t v24 = (char *)v84;
        unint64_t v86 = v62 + v17;
      }
      while (a4 < v84 && a2 < v85);
    }
  }
  uint64_t v66 = &v24[-a4];
  if (v17 != -1 || v66 != (char *)0x8000000000000000)
  {
    sub_253DC5A3C(a4, (uint64_t)v66 / v17);
    return;
  }
LABEL_78:
  __break(1u);
}

void sub_253C9B82C()
{
  sub_253C59954();
  v5[1] = *MEMORY[0x263EF8340];
  char v2 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v3 = (unint64_t)((1 << v2) + 63) >> 6;
  if ((v2 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    sub_253D03724(0, v3, (void *)((char *)v5 - ((8 * v3 + 15) & 0x3FFFFFFFFFFFFFF0)));
    sub_253C9D27C();
    if (v0) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v4 = (void *)swift_slowAlloc();
    sub_253D03724(0, v3, v4);
    sub_253C9D27C();
    sub_253BDF910();
  }
  sub_253C5993C();
}

void sub_253C9B978()
{
  sub_253C59954();
  v49[3] = v2;
  v49[2] = v3;
  uint64_t v5 = v4;
  uint64_t v50 = v0;
  uint64_t v64 = v6;
  uint64_t v8 = v7;
  v49[1] = v9;
  uint64_t v51 = v10;
  uint64_t v59 = v11;
  uint64_t v63 = sub_253BDEDD8(v11);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253C8F07C();
  uint64_t v14 = v5(v13);
  sub_253C0F830();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v49 - v18;
  sub_253DEFE90();
  sub_253C0F830();
  MEMORY[0x270FA5388](v20);
  unint64_t v69 = (char *)v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253C33FF0();
  MEMORY[0x270FA5388](v22);
  uint64_t v52 = 0;
  int64_t v25 = 0;
  uint64_t v65 = v8;
  uint64_t v26 = *(void *)(v8 + 64);
  uint64_t v56 = v8 + 64;
  uint64_t v27 = 1 << *(unsigned char *)(v8 + 32);
  if (v27 < 64) {
    uint64_t v28 = ~(-1 << v27);
  }
  else {
    uint64_t v28 = -1;
  }
  unint64_t v29 = v28 & v26;
  uint64_t v60 = v16 + 16;
  uint64_t v61 = v24;
  uint64_t v72 = (void (**)(void))(v24 + 8);
  uint64_t v62 = v16;
  int64_t v57 = (unint64_t)(v27 + 63) >> 6;
  uint64_t v58 = v16 + 8;
  uint64_t v54 = v19;
  uint64_t v55 = v14;
  uint64_t v53 = (char *)v49 - v23;
  while (1)
  {
    if (v29)
    {
      uint64_t v67 = (v29 - 1) & v29;
      int64_t v68 = v25;
      unint64_t v30 = __clz(__rbit64(v29)) | (v25 << 6);
      goto LABEL_21;
    }
    int64_t v31 = v25 + 1;
    if (__OFADD__(v25, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v31 >= v57) {
      goto LABEL_31;
    }
    unint64_t v32 = *(void *)(v56 + 8 * v31);
    int64_t v33 = v25 + 1;
    if (!v32)
    {
      int64_t v33 = v25 + 2;
      if (v25 + 2 >= v57) {
        goto LABEL_31;
      }
      unint64_t v32 = *(void *)(v56 + 8 * v33);
      if (!v32)
      {
        int64_t v33 = v25 + 3;
        if (v25 + 3 >= v57) {
          goto LABEL_31;
        }
        unint64_t v32 = *(void *)(v56 + 8 * v33);
        if (!v32) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v67 = (v32 - 1) & v32;
    int64_t v68 = v33;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_21:
    uint64_t v71 = *(void *)(v61 + 72);
    uint64_t v35 = *(void (**)(void))(v61 + 16);
    sub_253C9D3A4();
    v35();
    unint64_t v66 = v30;
    char v36 = *(void (**)(void))(v62 + 16);
    sub_253C102E4();
    v36();
    unint64_t v70 = v35;
    sub_253C9D3A4();
    v35();
    sub_253C102E4();
    v36();
    uint64_t v37 = *v64;
    int64_t v25 = v68;
    if (!*(void *)(*v64 + 16)) {
      goto LABEL_27;
    }
    sub_253C9C4BC(&qword_26B2552E0, MEMORY[0x263F07508]);
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_253DF5220();
    uint64_t v39 = -1 << *(unsigned char *)(v37 + 32);
    unint64_t v40 = v38 & ~v39;
    if ((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40))
    {
      uint64_t v41 = ~v39;
      while (1)
      {
        sub_253BEFD38();
        v42();
        sub_253C9C4BC(&qword_269D7CBE8, MEMORY[0x263F07508]);
        char v43 = sub_253DF5250();
        BOOL v44 = *v72;
        sub_253C0F824();
        v44();
        if (v43) {
          break;
        }
        unint64_t v40 = (v40 + 1) & v41;
        if (((*(void *)(v37 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
          goto LABEL_26;
        }
      }
      swift_bridgeObjectRelease();
      sub_253BEFAC0(v1, v59);
      sub_253BEFBCC();
      v47();
      sub_253C0F824();
      v44();
      *(void *)(v51 + ((v66 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v66;
      BOOL v48 = __OFADD__(v52++, 1);
      unint64_t v29 = v67;
      int64_t v25 = v68;
      if (v48)
      {
        __break(1u);
LABEL_31:
        sub_253C9BF20();
        sub_253C5993C();
        return;
      }
    }
    else
    {
LABEL_26:
      swift_bridgeObjectRelease();
      int64_t v25 = v68;
LABEL_27:
      sub_253BEFAC0(v1, v59);
      sub_253BEFBCC();
      v45();
      sub_253BEFBCC();
      v46();
      unint64_t v29 = v67;
    }
  }
  uint64_t v34 = v25 + 4;
  if (v25 + 4 >= v57) {
    goto LABEL_31;
  }
  unint64_t v32 = *(void *)(v56 + 8 * v34);
  if (v32)
  {
    int64_t v33 = v25 + 4;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v57) {
      goto LABEL_31;
    }
    unint64_t v32 = *(void *)(v56 + 8 * v33);
    ++v34;
    if (v32) {
      goto LABEL_20;
    }
  }
LABEL_33:
  __break(1u);
}

void sub_253C9BF20()
{
  sub_253C1CED0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  v10(0);
  sub_253C0F830();
  uint64_t v41 = v11;
  MEMORY[0x270FA5388](v12);
  sub_253C34050();
  sub_253C33FF0();
  MEMORY[0x270FA5388](v13);
  sub_253C36430();
  sub_253DEFE90();
  sub_253C0F830();
  uint64_t v40 = v14;
  MEMORY[0x270FA5388](v15);
  sub_253C34050();
  sub_253C33FF0();
  MEMORY[0x270FA5388](v16);
  sub_253C36430();
  if (!v5) {
    goto LABEL_36;
  }
  if (*(void *)(v3 + 16) == v5)
  {
    swift_retain();
LABEL_36:
    sub_253C1CEE8();
    return;
  }
  sub_253BDEDD8(v1);
  uint64_t v17 = sub_253DF5B00();
  uint64_t v38 = v7;
  if (v7 < 1) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = *v9;
  }
  uint64_t v19 = 0;
  uint64_t v39 = v17;
  uint64_t v20 = v17 + 64;
  while (1)
  {
    uint64_t v44 = v5;
    if (v18)
    {
      uint64_t v42 = (v18 - 1) & v18;
      uint64_t v43 = v19;
      goto LABEL_25;
    }
    uint64_t v21 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      goto LABEL_39;
    }
    if (v21 >= v38) {
      goto LABEL_36;
    }
    uint64_t v22 = v9[v21];
    uint64_t v23 = v19 + 1;
    if (!v22)
    {
      uint64_t v23 = v19 + 2;
      if (v19 + 2 >= v38) {
        goto LABEL_36;
      }
      uint64_t v22 = v9[v23];
      if (!v22)
      {
        uint64_t v23 = v19 + 3;
        if (v19 + 3 >= v38) {
          goto LABEL_36;
        }
        uint64_t v22 = v9[v23];
        if (!v22) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v42 = (v22 - 1) & v22;
    uint64_t v43 = v23;
LABEL_25:
    sub_253C0FF48();
    v25();
    sub_253C0FF48();
    v26();
    uint64_t v27 = *(void (**)(void))(v40 + 32);
    sub_253BEFD2C();
    v27();
    uint64_t v28 = *(void (**)(void))(v41 + 32);
    sub_253BEFD2C();
    v28();
    sub_253C9C4BC(&qword_26B2552E0, MEMORY[0x263F07508]);
    uint64_t v29 = sub_253DF5220();
    uint64_t v30 = -1 << *(unsigned char *)(v39 + 32);
    unint64_t v31 = v29 & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v20 + 8 * (v31 >> 6))) == 0)
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v30) >> 6;
      while (++v32 != v35 || (v34 & 1) == 0)
      {
        BOOL v36 = v32 == v35;
        if (v32 == v35) {
          unint64_t v32 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v20 + 8 * v32);
        if (v37 != -1)
        {
          unint64_t v33 = __clz(__rbit64(~v37)) + (v32 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v33 = __clz(__rbit64((-1 << v31) & ~*(void *)(v20 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v20 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    sub_253BEFD2C();
    v27();
    sub_253BEFD2C();
    v28();
    ++*(void *)(v39 + 16);
    --v5;
    if (__OFSUB__(v44, 1)) {
      goto LABEL_38;
    }
    uint64_t v18 = v42;
    uint64_t v19 = v43;
    if (v44 == 1) {
      goto LABEL_36;
    }
  }
  uint64_t v24 = v19 + 4;
  if (v19 + 4 >= v38) {
    goto LABEL_36;
  }
  uint64_t v22 = v9[v24];
  if (v22)
  {
    uint64_t v23 = v19 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v38) {
      goto LABEL_36;
    }
    uint64_t v22 = v9[v23];
    ++v24;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_253C9C374(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 192;
  for (uint64_t i = 12; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_253C9C41C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253C9DF7C(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_253C9C43C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253C68E88(a1, a2);
}

uint64_t sub_253C9C45C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_253C95508(a1, a2);
}

uint64_t _s16CandidateSummaryVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2556D8);
}

uint64_t sub_253C9C498@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253C5B7AC(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_253C9C4BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253C9C504(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  sub_253C0FF48();
  v4();
  return a2;
}

uint64_t sub_253C9C560(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  sub_253C10134();
  v4();
  return a2;
}

void *sub_253C9C5BC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = sub_253DEFFE0();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = v11[1];
      void *v10 = *v11;
      v10[1] = v15;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        goto LABEL_9;
      }
      v8(v10, v11, v7);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_253DF26C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    return a1;
  }
  uint64_t v14 = *a2;
  *a1 = *a2;
  a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_253C9C784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFFE0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v5(v6, v4);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  uint64_t v9 = sub_253DF26C0();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

void *sub_253C9C888(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_7;
    }
    v7(v9, v10, v6);
  }
  swift_storeEnumTagMultiPayload();
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = (uint64_t)a1 + v14;
  uint64_t v16 = (uint64_t)a2 + v14;
  uint64_t v17 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_253C9CA00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_253C9CBCC(a1 + v8, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_8;
      }
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_8:
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_253C9CBCC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return a1;
}

char *sub_253C9CC20(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_253DF26C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_253C9CD74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_253C9CBCC(a1 + v8, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_253C9CF14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C9CF28);
}

uint64_t sub_253C9CF28(uint64_t a1, uint64_t a2, int *a3)
{
  sub_253DEFFE0();
  sub_253C16A18();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_253C16A18();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      sub_253DF26C0();
      sub_253C16A18();
      if (*(_DWORD *)(v14 + 84) != a2)
      {
        unsigned int v16 = *(unsigned __int8 *)(a1 + a3[7]);
        int v17 = v16 & 0x3C | (v16 >> 6);
        unsigned int v18 = v17 ^ 0x3F;
        unsigned int v19 = 64 - v17;
        if (v18 >= 0x3D) {
          return 0;
        }
        else {
          return v19;
        }
      }
      uint64_t v8 = v13;
      uint64_t v12 = a3[6];
    }
    uint64_t v9 = a1 + v12;
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v9, a2, v8);
}

uint64_t sub_253C9D00C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C9D020);
}

void sub_253C9D020(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_253DEFFE0();
  sub_253C16A18();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_253C16A18();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_253DF26C0();
      sub_253C16A18();
      if (*(_DWORD *)(v16 + 84) != a3)
      {
        *(unsigned char *)(a1 + a4[7]) = 4 * (((-(int)a2 >> 2) & 0xF) - 16 * a2);
        return;
      }
      uint64_t v10 = v15;
      uint64_t v14 = a4[6];
    }
    uint64_t v11 = a1 + v14;
  }

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v11, a2, a2, v10);
}

uint64_t sub_253C9D100()
{
  uint64_t result = sub_253DEFFE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedbackLearning.CandidateParameter(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_253DF26C0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_253C9D20C()
{
  return v0;
}

uint64_t sub_253C9D22C()
{
  *(void *)(v0 + 8 * (v1 >> 6) + 64) |= 1 << v1;
  return *(void *)(v0 + 48) + *(void *)(*(void *)(v2 - 120) + 72) * v1;
}

void sub_253C9D27C()
{
  sub_253C9B978();
}

uint64_t sub_253C9D2B0()
{
  return v0;
}

uint64_t sub_253C9D2FC()
{
  return v0;
}

BOOL sub_253C9D314@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_253C9D344()
{
  return *(void *)(v0 - 200);
}

uint64_t sub_253C9D364()
{
  return _s23StatementStepEvaluationOMa(0);
}

uint64_t sub_253C9D390()
{
  return v0;
}

uint64_t sub_253C9D3C4()
{
  return sub_253DF5A70();
}

uint64_t sub_253C9D418()
{
  return 0;
}

void sub_253C9D444(uint64_t a1@<X8>)
{
  *(void *)(v1 - 256) = a1;
}

uint64_t sub_253C9D450(uint64_t a1)
{
  uint64_t v131 = sub_253DF46F0();
  sub_253C0F830();
  uint64_t v116 = v3;
  MEMORY[0x270FA5388](v4);
  sub_253BDFA94();
  uint64_t v130 = v5;
  _s22CandidateIdExtractableOMa();
  sub_253C0F830();
  uint64_t v128 = v7;
  uint64_t v129 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = _s24ToolDisambiguationResultVMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (uint64_t *)((char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = _s14ToolStepResultOMa(0);
  MEMORY[0x270FA5388](v13 - 8);
  sub_253BDFA94();
  uint64_t v122 = v14;
  uint64_t v15 = _s18ToolStepEvaluationVMa(0);
  sub_253C0F830();
  uint64_t v125 = v16;
  MEMORY[0x270FA5388](v17);
  sub_253BDFA94();
  uint64_t v117 = v18;
  uint64_t v19 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v113 = v20;
  MEMORY[0x270FA5388](v21);
  sub_253C34050();
  uint64_t v108 = v22;
  MEMORY[0x270FA5388](v23);
  int64_t v25 = (char *)&v102 - v24;
  uint64_t v114 = sub_253DF24A0();
  sub_253C0F830();
  uint64_t v27 = v26;
  MEMORY[0x270FA5388](v28);
  sub_253C34050();
  uint64_t v110 = v29;
  MEMORY[0x270FA5388](v30);
  unint64_t v32 = (char *)&v102 - v31;
  uint64_t v33 = *(void *)(v1 + *(int *)(_s22ToolCandidateEvaluatorVMa() + 20));
  uint64_t v133 = a1;
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_253DDCAFC((uint64_t (*)(char *))sub_253C9E0BC, (uint64_t)v132, v33);
  uint64_t v35 = v113;
  uint64_t v36 = v34;
  sub_253DF1790();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  uint64_t v126 = v25;
  uint64_t v109 = a1;
  uint64_t v107 = v35 + 16;
  uint64_t v105 = v37;
  v37((uint64_t)v25, a1, v19);
  uint64_t v112 = v36;
  swift_bridgeObjectRetain_n();
  uint64_t v127 = v32;
  uint64_t v38 = sub_253DF2490();
  os_log_type_t v39 = sub_253DF56C0();
  int v40 = v39;
  BOOL v41 = os_log_type_enabled(v38, v39);
  uint64_t v111 = v27;
  uint64_t v118 = v15;
  if (v41)
  {
    uint64_t v42 = swift_slowAlloc();
    uint64_t v124 = swift_slowAlloc();
    uint64_t v135 = v124;
    *(_DWORD *)uint64_t v42 = 136315394;
    LODWORD(v121) = v40;
    sub_253C69014();
    uint64_t v43 = sub_253DF5C40();
    uint64_t v134 = sub_253D8E5FC(v43, v44, &v135);
    os_log_t v120 = v38;
    sub_253DF5820();
    swift_bridgeObjectRelease();
    uint64_t v104 = *(void *)(v35 + 8);
    sub_253C0F824();
    v45();
    *(_WORD *)(v42 + 12) = 2080;
    uint64_t v46 = v112;
    uint64_t v47 = swift_bridgeObjectRetain();
    uint64_t v48 = MEMORY[0x25A26F710](v47, v118);
    unint64_t v50 = v49;
    swift_bridgeObjectRelease();
    uint64_t v134 = sub_253D8E5FC(v48, v50, &v135);
    sub_253DF5820();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v51 = v120;
    _os_log_impl(&dword_253BD8000, v120, (os_log_type_t)v121, "Matching tool step evaluations for statementId=%s: %s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();

    uint64_t v106 = *(void (**)(char *, uint64_t))(v111 + 8);
    sub_253C0F824();
    v52();
    uint64_t v53 = v46;
  }
  else
  {
    uint64_t v104 = *(void *)(v35 + 8);
    sub_253C0F824();
    v54();

    uint64_t v55 = v112;
    swift_bridgeObjectRelease_n();
    uint64_t v106 = *(void (**)(char *, uint64_t))(v27 + 8);
    v106(v127, v114);
    uint64_t v53 = v55;
  }
  uint64_t v56 = v117;
  char v121 = *(char **)(v53 + 16);
  if (v121)
  {
    uint64_t v103 = v19;
    sub_253C599B8();
    os_log_t v120 = (os_log_t)(v57 + v58);
    uint64_t v59 = (void (**)(uint64_t, uint64_t))(v116 + 8);
    uint64_t v119 = *(void *)(v60 + 72);
    swift_bridgeObjectRetain();
    uint64_t v61 = 0;
    uint64_t v62 = MEMORY[0x263F8EE78];
    uint64_t v63 = v118;
    uint64_t v115 = v12;
    do
    {
      uint64_t v127 = v61;
      sub_253C9E0EC((uint64_t)v120 + v119 * (void)v61, v56, (void (*)(void))_s18ToolStepEvaluationVMa);
      uint64_t v64 = v122;
      sub_253C9E0EC(v56 + *(int *)(v63 + 20), v122, (void (*)(void))_s14ToolStepResultOMa);
      sub_253C9E14C(v64, (uint64_t)v12, (void (*)(void))_s24ToolDisambiguationResultVMa);
      uint64_t v65 = *v12;
      uint64_t v126 = (char *)*(int *)(v123 + 20);
      uint64_t v66 = *(void *)(v65 + 16);
      if (v66)
      {
        uint64_t v125 = v62;
        uint64_t v135 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_253DC6E58(0, v66, 0);
        sub_253C599B8();
        uint64_t v124 = v65;
        uint64_t v68 = v65 + v67;
        uint64_t v70 = *(void *)(v69 + 72);
        uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
        do
        {
          uint64_t v73 = v130;
          uint64_t v72 = v131;
          v71(v130, v68, v131);
          v71((uint64_t)v9, v73, v72);
          swift_storeEnumTagMultiPayload();
          (*v59)(v73, v72);
          uint64_t v74 = v135;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253DC6E58(0, *(void *)(v74 + 16) + 1, 1);
            uint64_t v74 = v135;
          }
          unint64_t v76 = *(void *)(v74 + 16);
          unint64_t v75 = *(void *)(v74 + 24);
          if (v76 >= v75 >> 1)
          {
            sub_253DC6E58(v75 > 1, v76 + 1, 1);
            uint64_t v74 = v135;
          }
          *(void *)(v74 + 16) = v76 + 1;
          sub_253C599B8();
          sub_253C9E14C((uint64_t)v9, v74 + v77 + *(void *)(v78 + 72) * v76, (void (*)(void))_s22CandidateIdExtractableOMa);
          v68 += v70;
          --v66;
        }
        while (v66);
        uint64_t v12 = v115;
        uint64_t v63 = v118;
        uint64_t v56 = v117;
        uint64_t v62 = v125;
      }
      else
      {
        swift_bridgeObjectRetain();
      }
      sub_253C649E0();
      uint64_t v80 = v79;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_253C9E1AC((uint64_t)v12, (void (*)(void))_s24ToolDisambiguationResultVMa);
      sub_253C9E1AC(v56, (void (*)(void))_s18ToolStepEvaluationVMa);
      if (v80)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_253DC4248();
          uint64_t v62 = v82;
        }
        unint64_t v81 = *(void *)(v62 + 16);
        if (v81 >= *(void *)(v62 + 24) >> 1)
        {
          sub_253DC4248();
          uint64_t v62 = v83;
        }
        *(void *)(v62 + 16) = v81 + 1;
        *(void *)(v62 + 8 * v81 + 32) = v80;
      }
      uint64_t v61 = v127 + 1;
    }
    while (v127 + 1 != v121);
    swift_bridgeObjectRelease_n();
    uint64_t v19 = v103;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v62 = MEMORY[0x263F8EE78];
  }
  sub_253DF1790();
  v105(v108, v109, v19);
  swift_bridgeObjectRetain_n();
  unint64_t v84 = sub_253DF2490();
  uint64_t v85 = v62;
  os_log_type_t v86 = sub_253DF56C0();
  if (os_log_type_enabled(v84, v86))
  {
    uint64_t v87 = swift_slowAlloc();
    uint64_t v135 = swift_slowAlloc();
    *(_DWORD *)uint64_t v87 = 136315394;
    sub_253C69014();
    uint64_t v88 = sub_253DF5C40();
    uint64_t v134 = sub_253D8E5FC(v88, v89, &v135);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    uint64_t v90 = sub_253C9E728();
    v91(v90);
    *(_WORD *)(v87 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v92 = sub_253BDEDD8(&qword_269D7C7D8);
    uint64_t v93 = MEMORY[0x25A26F710](v62, v92);
    unint64_t v95 = v94;
    swift_bridgeObjectRelease();
    uint64_t v134 = sub_253D8E5FC(v93, v95, &v135);
    sub_253DF5820();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_253BD8000, v84, v86, "Generated tool candidate results for statementId=%s: %s", (uint8_t *)v87, 0x16u);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();
  }
  else
  {
    uint64_t v96 = sub_253C9E728();
    v97(v96);

    swift_bridgeObjectRelease_n();
  }
  sub_253C0F824();
  v98();
  sub_253C0E904(v85);
  uint64_t v100 = v99;
  swift_bridgeObjectRelease();
  return v100;
}

uint64_t sub_253C9DF7C@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_253DEFFE0();
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(a3, a2);
  uint64_t v7 = _s16CandidateSummaryVMa(0);
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = &a1[*(int *)(_s15CandidateResultVMa() + 20)];
  uint64_t v9 = a3 + *(int *)(v7 + 24);
  sub_253DF26C0();
  sub_253BDF7F0();
  uint64_t result = (*(uint64_t (**)(uint64_t, unsigned char *))(v10 + 16))(v9, v8);
  *(unsigned char *)(a3 + *(int *)(v7 + 28)) = *a1;
  return result;
}

uint64_t _s22ToolCandidateEvaluatorVMa()
{
  uint64_t result = qword_26B255830;
  if (!qword_26B255830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_253C9E0BC()
{
  return sub_253DEFFB0() & 1;
}

uint64_t sub_253C9E0EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_253C9E14C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_253C9E1AC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t *sub_253C9E204(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DF42A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_253C9E2D4(uint64_t a1)
{
  uint64_t v2 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_253C9E348(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_253C9E3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_253C9E454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_253C9E4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_253C9E554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253C9E568);
}

uint64_t sub_253C9E568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253DF42A0();
  sub_253C16A18();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_253C9E5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253C9E608);
}

void sub_253C9E608(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_253DF42A0();
  sub_253C16A18();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

uint64_t sub_253C9E690()
{
  uint64_t result = sub_253DF42A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_253C9E728()
{
  return v0;
}

uint64_t _s17WaterfallMediatorVwCP(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s17WaterfallMediatorVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s17WaterfallMediatorVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s17WaterfallMediatorVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t _s17WaterfallMediatorVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s17WaterfallMediatorVwet(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s17WaterfallMediatorVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s17WaterfallMediatorVMa()
{
  return &_s17WaterfallMediatorVN;
}

uint64_t sub_253C9E8A8(uint64_t a1, void *a2)
{
  uint64_t v4 = *((void *)v2 + 1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_253BDF5F8(a2, a2[3]);

  return sub_253C9E908(a1, (uint64_t)v6, v5, v4);
}

uint64_t sub_253C9E908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v28[3] = _s19TranscriptRetrieverVMa();
  v28[4] = (uint64_t)&off_270361158;
  uint64_t v7 = sub_253BDEE6C(v28);
  sub_253C9EB10(a2, (uint64_t)v7);
  uint64_t v8 = *(void *)(a4 + 16);
  if (v8)
  {
    unsigned int v26 = a3;
    uint64_t v9 = (void *)(a4 + 32);
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v11 = MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v12 = v9[3];
      uint64_t v13 = v9[4];
      sub_253BDF5F8(v9, v12);
      char v14 = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t, uint64_t))(v13 + 16))(a1, v28, v12, v13);
      char v16 = v15;
      uint64_t v18 = v17;
      uint64_t v20 = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253DC4064();
        uint64_t v11 = v23;
      }
      unint64_t v21 = *(void *)(v11 + 16);
      if (v21 >= *(void *)(v11 + 24) >> 1)
      {
        sub_253DC4064();
        uint64_t v11 = v24;
      }
      *(void *)(v11 + 16) = v21 + 1;
      uint64_t v22 = v11 + 32 * v21;
      *(unsigned char *)(v22 + 32) = v14;
      *(unsigned char *)(v22 + 40) = v16;
      *(void *)(v22 + 48) = v18;
      *(void *)(v22 + 56) = v20;
      if (!v16) {
        break;
      }
      swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_11;
      }
      uint64_t v10 = v18;
LABEL_12:
      v9 += 5;
      if (!--v8)
      {
        swift_bridgeObjectRelease();
        a3 = v26;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
LABEL_14:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v28);
  return a3;
}

uint64_t sub_253C9EB10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s19TranscriptRetrieverVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t _s17ActionPromptVoterVwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 4) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v5 = v6 - 5;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s17ActionPromptVoterVwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253C9ECCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17ActionPromptVoterVMa()
{
  return &_s17ActionPromptVoterVN;
}

unsigned char *_s19TaskCompletionVoterVwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253C9EDD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s19TaskCompletionVoterVMa()
{
  return &_s19TaskCompletionVoterVN;
}

uint64_t sub_253C9EE08@<X0>(uint64_t a1@<X0>, void (*a2)(char *)@<X1>, uint64_t a3@<X2>, void (*a4)(char *)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v27 = a3;
  uint64_t v28 = a2;
  uint64_t v29 = a6;
  uint64_t v7 = sub_253DF0140();
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253DF01F0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253DF0A20();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == *MEMORY[0x263F4C7D8])
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
    v28(v13);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    uint64_t v20 = v25;
    uint64_t v21 = v24;
    uint64_t v22 = v29;
    if (v18 == *MEMORY[0x263F4C7D0])
    {
      (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v9, v17, v7);
      v20(v9);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v9, v7);
    }
    else
    {
      uint64_t v23 = _s20TaskStatementOutcomeOMa(0);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v22, 1, 1, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    }
  }
}

uint64_t sub_253C9F158@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  v23[3] = a2;
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C750);
  uint64_t v7 = sub_253BDF9FC(v6);
  MEMORY[0x270FA5388](v7);
  sub_253C10D28();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = _s20TaskStatementOutcomeOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  sub_253C2F364();
  uint64_t v13 = sub_253BDEDD8(&qword_269D7CC08);
  uint64_t v14 = sub_253BDF9FC(v13);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v23 - v18;
  uint64_t v25 = *(void *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowExpression(0) + 20));
  uint64_t v24 = a1;
  swift_bridgeObjectRetain();
  sub_253BDEDD8(&qword_269D7BBF8);
  sub_253C6B610();
  sub_253DF3870();
  swift_bridgeObjectRelease();
  sub_253C2E770((uint64_t)v19, (uint64_t)v17, &qword_269D7CC08);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v11) != 1)
  {
    sub_253BEFAC0((uint64_t)v19, &qword_269D7CC08);
    sub_253CA0064((uint64_t)v17, v3, (void (*)(void))_s20TaskStatementOutcomeOMa);
    sub_253CA0064(v3, a3, (void (*)(void))_s20TaskStatementOutcomeOMa);
LABEL_6:
    uint64_t v21 = 0;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a3, v21, 1, v11);
  }
  sub_253BEFAC0((uint64_t)v17, &qword_269D7CC08);
  sub_253C9F6D0(a1, v10);
  sub_253BEFAC0((uint64_t)v19, &qword_269D7CC08);
  uint64_t v20 = _s23StatementCreatedOutcomeVMa(0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, 1, v20) != 1)
  {
    sub_253CA0010(v10, a3, (void (*)(void))_s23StatementCreatedOutcomeVMa);
    swift_storeEnumTagMultiPayload();
    sub_253CA00C4(v10, (void (*)(void))_s23StatementCreatedOutcomeVMa);
    goto LABEL_6;
  }
  sub_253BEFAC0(v10, &qword_269D7C750);
  uint64_t v21 = 1;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a3, v21, 1, v11);
}

uint64_t sub_253C9F424@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  sub_253C10D28();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_253BDEDD8(&qword_26B2519D0);
  uint64_t v12 = sub_253BDF9FC(v11);
  MEMORY[0x270FA5388](v12);
  sub_253CA0118();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
  uint64_t v17 = sub_253BDF9FC(v16);
  MEMORY[0x270FA5388](v17);
  sub_253C2F364();
  uint64_t v18 = type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
  sub_253CA0010(a1 + *(int *)(v18 + 20), v3, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
  uint64_t v19 = sub_253BDEDD8(&qword_269D7CC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v3, 2, v19))
  {
    sub_253DF3140();
    sub_253C2E770((uint64_t)v15, v2, &qword_26B2519D0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v6) == 1)
    {
      uint64_t v20 = _s28StatementResolutionReferenceOMa(0);
      sub_253C636DC(v20);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v2, v6);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v10, v6);
      _s28StatementResolutionReferenceOMa(0);
      swift_storeEnumTagMultiPayload();
      sub_253CA0134();
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v10, v6);
    }
    return sub_253BEFAC0((uint64_t)v15, &qword_26B2519D0);
  }
  else
  {
    sub_253DF3120();
    _s28StatementResolutionReferenceOMa(0);
    swift_storeEnumTagMultiPayload();
    sub_253CA0134();
    sub_253DEFFE0();
    sub_253BDF7F0();
    sub_253BEFBCC();
    return v21();
  }
}

uint64_t sub_253C9F6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v6);
  sub_253C10D28();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_253BDEDD8(&qword_269D7CC18);
  uint64_t v11 = sub_253BDF9FC(v10);
  MEMORY[0x270FA5388](v11);
  sub_253CA0118();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
  uint64_t v16 = sub_253BDF9FC(v15);
  MEMORY[0x270FA5388](v16);
  sub_253C10D28();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
  sub_253CA0010(a1 + *(int *)(v20 + 20), v19, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
  uint64_t v21 = sub_253BDEDD8(&qword_269D7CC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v19, 2, v21))
  {
    uint64_t v22 = type metadata accessor for FeedbackLearning.FlowExpression(0);
    sub_253D23254(*(void *)(a1 + *(int *)(v22 + 24)), (uint64_t)v14);
    sub_253C2E770((uint64_t)v14, v2, &qword_269D7CC18);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v5) == 1)
    {
      uint64_t v23 = _s23StatementCreatedOutcomeVMa(0);
      sub_253C636DC(v23);
    }
    else
    {
      sub_253CA0064(v2, v9, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
      sub_253DEFE90();
      sub_253BDF7F0();
      uint64_t v27 = sub_253C2F578();
      v28(v27);
      _s28StatementResolutionReferenceOMa(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = _s23StatementCreatedOutcomeVMa(0);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, 0, 1, v29);
      sub_253CA00C4(v9, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
    }
    return sub_253BEFAC0((uint64_t)v14, &qword_269D7CC18);
  }
  else
  {
    uint64_t v24 = _s23StatementCreatedOutcomeVMa(0);
    sub_253C636DC(v24);
    sub_253DEFFE0();
    sub_253BDF7F0();
    sub_253BEFBCC();
    return v25();
  }
}

uint64_t sub_253C9F958@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v34 = a1;
  uint64_t v30 = sub_253DF0A20();
  uint64_t v33 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v29 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_253DF38F0();
  uint64_t v31 = *(void *)(v3 - 8);
  uint64_t v32 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253BDEDD8(&qword_269D7CC10);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s28StatementResolutionReferenceOMa(0);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_253DF3170();
  uint64_t v37 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253DF41F0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF4200();
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v17, v14) == *MEMORY[0x263F4DF48])
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v18 = v35;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v13, v17, v35);
    sub_253C9F424(v34, (uint64_t)v8);
    int v19 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v9);
    uint64_t v20 = v36;
    if (v19 == 1)
    {
      (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v18);
      sub_253BEFAC0((uint64_t)v8, &qword_269D7CC10);
      uint64_t v21 = _s20TaskStatementOutcomeOMa(0);
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v20, 1, 1, v21);
    }
    else
    {
      sub_253CA0064((uint64_t)v8, (uint64_t)v11, (void (*)(void))_s28StatementResolutionReferenceOMa);
      sub_253DF3160();
      uint64_t v24 = (uint64_t)v29;
      sub_253DF38D0();
      uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v5, v32);
      uint64_t v26 = MEMORY[0x270FA5388](v25);
      *(&v28 - 2) = (uint64_t)v11;
      MEMORY[0x270FA5388](v26);
      *(&v28 - 2) = (uint64_t)v11;
      sub_253C9EE08(v24, (void (*)(char *))sub_253C9FF80, v27, (void (*)(char *))sub_253C9FFC8, (uint64_t)(&v28 - 4), v20);
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v24, v30);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v18);
      return sub_253CA00C4((uint64_t)v11, (void (*)(void))_s28StatementResolutionReferenceOMa);
    }
  }
  else
  {
    uint64_t v23 = _s20TaskStatementOutcomeOMa(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v36, 1, 1, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
}

uint64_t sub_253C9FE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(void)@<X3>, uint64_t a5@<X8>)
{
  sub_253CA0010(a2, a5, (void (*)(void))_s28StatementResolutionReferenceOMa);
  uint64_t v9 = a5 + *(int *)(a3(0) + 20);
  a4(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, a1);
  uint64_t v11 = _s20TaskStatementOutcomeOMa(0);
  swift_storeEnumTagMultiPayload();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a5, 0, 1, v11);
}

uint64_t sub_253C9FF64@<X0>(uint64_t a1@<X8>)
{
  return sub_253C9F958(*(void *)(v1 + 16), a1);
}

uint64_t sub_253C9FF80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253C9FE80(a1, *(void *)(v2 + 16), _s23StatementSuccessOutcomeVMa, MEMORY[0x263F4C158], a2);
}

uint64_t sub_253C9FFC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253C9FE80(a1, *(void *)(v2 + 16), _s23StatementFailureOutcomeVMa, MEMORY[0x263F4C098], a2);
}

uint64_t sub_253CA0010(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  uint64_t v4 = sub_253C2F578();
  v5(v4);
  return a2;
}

uint64_t sub_253CA0064(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_253CA00C4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return a1;
}

uint64_t sub_253CA0134()
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, 0, 1, v1);
}

void sub_253CA0154()
{
  sub_253C1CED0();
  uint64_t v3 = v0;
  sub_253DF41F0();
  sub_253C0F830();
  uint64_t v34 = v5;
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v4);
  sub_253BDFA94();
  uint64_t v33 = v6;
  sub_253C36350();
  uint64_t v7 = sub_253DF4230();
  sub_253C0F830();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_253C8F238();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v32 - v12;
  uint64_t v14 = _s17FastTaskEvaluatorVMa();
  uint64_t v15 = sub_253BDF9FC(v14);
  MEMORY[0x270FA5388](v15);
  sub_253C2F394();
  uint64_t v16 = sub_253BDEDD8(&qword_26B2519D0);
  uint64_t v17 = sub_253BDF9FC(v16);
  MEMORY[0x270FA5388](v17);
  int v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253CA0410();
  uint64_t v20 = sub_253DEFE90();
  int v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  sub_253BDF664((uint64_t)v19, &qword_26B2519D0);
  sub_253CA3544(v3, v2, (void (*)(void))_s17FastTaskEvaluatorVMa);
  uint64_t v22 = *(void (**)(void))(v9 + 16);
  sub_253CA4054();
  v22();
  if (v21 == 1)
  {
    char v23 = 0;
  }
  else
  {
    sub_253CA0880();
    char v23 = v24;
  }
  uint64_t v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v25(v13, v7);
  sub_253CA35A4(v2, (void (*)(void))_s17FastTaskEvaluatorVMa);
  sub_253CA4054();
  v22();
  if ((v23 & 1) == 0)
  {
    uint64_t v26 = v33;
    sub_253DF4200();
    uint64_t v28 = v34;
    uint64_t v27 = v35;
    sub_253C635B4();
    int v30 = v29();
    if (v30 == *MEMORY[0x263F4DEC0]
      || (v30 != *MEMORY[0x263F4E018] ? (BOOL v31 = v30 == *MEMORY[0x263F4E020]) : (BOOL v31 = 1), !v31))
    {
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
    }
  }
  v25(v1, v7);
  sub_253C1CEE8();
}

void sub_253CA0410()
{
  sub_253C1CED0();
  uint64_t v2 = v1;
  uint64_t v3 = sub_253BDEDD8(&qword_26B255420);
  uint64_t v4 = sub_253BDF9FC(v3);
  MEMORY[0x270FA5388](v4);
  sub_253BDFA94();
  uint64_t v48 = v5;
  sub_253C36350();
  sub_253DF0880();
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253BDFA94();
  sub_253C36350();
  sub_253DF3170();
  sub_253C0F830();
  uint64_t v46 = v8;
  uint64_t v47 = v7;
  MEMORY[0x270FA5388](v7);
  sub_253BDFA94();
  uint64_t v45 = v9;
  sub_253C36350();
  uint64_t v10 = sub_253DF0240();
  sub_253C0F830();
  uint64_t v49 = v11;
  MEMORY[0x270FA5388](v12);
  sub_253C8F098();
  sub_253DF32A0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v13);
  sub_253C10D28();
  uint64_t v14 = sub_253DF41F0();
  sub_253C0F830();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  sub_253C10D28();
  uint64_t v20 = v19 - v18;
  sub_253DF4200();
  sub_253C635B4();
  int v22 = v21();
  if (v22 == *MEMORY[0x263F4DEB8] || v22 == *MEMORY[0x263F4DF50])
  {
    sub_253DF4180();
    uint64_t v23 = sub_253DEFE90();
    uint64_t v24 = v2;
    uint64_t v25 = 0;
LABEL_4:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v24, v25, 1, v23);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v14);
    goto LABEL_5;
  }
  if (v22 == *MEMORY[0x263F4DED8])
  {
    uint64_t v26 = sub_253CA3FCC();
    v27(v26);
    sub_253BEFD2C();
    v28();
    sub_253DF3140();
    sub_253C0FD90();
    v29();
    goto LABEL_5;
  }
  if (v22 == *MEMORY[0x263F4DFD0])
  {
    uint64_t v30 = sub_253CA3FCC();
    v31(v30);
    sub_253BEFD2C();
    v32();
    sub_253DF0230();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v0, v10);
    goto LABEL_5;
  }
  if (v22 != *MEMORY[0x263F4DFE0])
  {
    if (v22 == *MEMORY[0x263F4DF48])
    {
      uint64_t v41 = sub_253CA3FCC();
      v42(v41);
      sub_253BEFD2C();
      v43();
      sub_253DF3140();
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
      goto LABEL_5;
    }
    sub_253DEFE90();
    uint64_t v24 = sub_253CA4048();
    goto LABEL_4;
  }
  uint64_t v33 = sub_253CA3FCC();
  v34(v33);
  sub_253BEFD2C();
  v35();
  sub_253C60DAC();
  uint64_t v36 = sub_253DF10D0();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v48, 1, v36) == 1)
  {
    sub_253CA3FE4();
    v37();
    sub_253BDF664(v48, &qword_26B255420);
    sub_253DEFE90();
    uint64_t v38 = sub_253CA4048();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v38, v39, 1, v40);
  }
  else
  {
    sub_253DF0230();
    sub_253CA3FE4();
    v44();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v48, v36);
  }
LABEL_5:
  sub_253C1CEE8();
}

void sub_253CA0880()
{
  sub_253C1CED0();
  uint64_t v3 = sub_253DF0A20();
  sub_253C0F830();
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v5);
  sub_253C8F238();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = sub_253BDEDD8(&qword_26B255420);
  uint64_t v10 = sub_253BDF9FC(v9);
  MEMORY[0x270FA5388](v10);
  sub_253C2F394();
  sub_253DF10D0();
  sub_253C0F830();
  uint64_t v44 = v12;
  uint64_t v45 = v11;
  MEMORY[0x270FA5388](v11);
  sub_253C8F098();
  sub_253DF0880();
  sub_253C0F830();
  uint64_t v46 = v14;
  uint64_t v47 = v13;
  MEMORY[0x270FA5388](v13);
  sub_253C10D28();
  uint64_t v15 = sub_253DF41F0();
  sub_253C0F830();
  uint64_t v17 = v16;
  MEMORY[0x270FA5388](v18);
  sub_253C10D28();
  uint64_t v21 = v20 - v19;
  sub_253DF4200();
  sub_253C635B4();
  if (v22() == *MEMORY[0x263F4DFE0])
  {
    uint64_t v23 = v44;
    uint64_t v41 = v1;
    uint64_t v42 = v3;
    (*(void (**)(uint64_t, uint64_t))(v17 + 96))(v21, v15);
    sub_253BEFD2C();
    v24();
    sub_253C60DAC();
    uint64_t v25 = sub_253CA4048();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v25, v26, v45) == 1)
    {
      uint64_t v27 = sub_253CA4068();
      v28(v27);
      sub_253BDF664(v2, &qword_26B255420);
    }
    else
    {
      uint64_t v29 = v0;
      uint64_t v30 = v45;
      sub_253BEFD2C();
      v31();
      sub_253DF10C0();
      uint64_t v32 = v42;
      uint64_t v33 = v43;
      uint64_t v34 = v41;
      sub_253BEFD38();
      v35();
      sub_253C635B4();
      v36();
      uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
      v37(v34, v32);
      v37((uint64_t)v8, v32);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v29, v30);
      uint64_t v38 = sub_253CA4068();
      v39(v38);
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v21, v15);
  }
  sub_253C1CEE8();
}

void sub_253CA0BC0()
{
  sub_253C1CED0();
  uint64_t v234 = v0;
  uint64_t v235 = v2;
  uint64_t v236 = v1;
  uint64_t v243 = v3;
  uint64_t v237 = v4;
  uint64_t v5 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  sub_253BDFA94();
  sub_253C9D444(v7);
  uint64_t v8 = sub_253BDEDD8(&qword_26B2556C0);
  uint64_t v9 = sub_253BDF9FC(v8);
  MEMORY[0x270FA5388](v9);
  sub_253BDFA94();
  uint64_t v11 = sub_253C34018(v10);
  uint64_t v213 = type metadata accessor for FeedbackLearning.TaskEvaluation(v11);
  sub_253C0F830();
  uint64_t v204 = v12;
  MEMORY[0x270FA5388](v13);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v14);
  sub_253C33FFC();
  sub_253C63378();
  MEMORY[0x270FA5388](v15);
  sub_253C36430();
  sub_253C9D444(v16);
  uint64_t v17 = sub_253BDEDD8(&qword_26B255630);
  uint64_t v18 = sub_253BDF9FC(v17);
  MEMORY[0x270FA5388](v18);
  sub_253BDFA94();
  uint64_t v20 = sub_253C34018(v19);
  uint64_t v217 = type metadata accessor for FeedbackLearning.FlowTask(v20);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v21);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v22);
  sub_253C36430();
  sub_253C34018(v23);
  uint64_t v219 = sub_253DF24A0();
  sub_253C0F830();
  uint64_t v218 = v24;
  MEMORY[0x270FA5388](v25);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v26);
  sub_253C33FFC();
  sub_253C63378();
  MEMORY[0x270FA5388](v27);
  sub_253C36430();
  sub_253C9D444(v28);
  uint64_t v29 = sub_253BDEDD8(&qword_26B255348);
  uint64_t v30 = sub_253BDF9FC(v29);
  MEMORY[0x270FA5388](v30);
  sub_253BDFA94();
  sub_253C34018(v31);
  uint64_t v224 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v222 = v32;
  MEMORY[0x270FA5388](v33);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v34);
  sub_253C33FFC();
  sub_253C63378();
  MEMORY[0x270FA5388](v35);
  sub_253C36430();
  sub_253C9D444(v36);
  uint64_t v37 = sub_253BDEDD8(&qword_26B2519D0);
  uint64_t v38 = sub_253BDF9FC(v37);
  MEMORY[0x270FA5388](v38);
  sub_253BDFA94();
  sub_253C34018(v39);
  uint64_t v40 = sub_253DEFE90();
  sub_253C0F830();
  uint64_t v223 = v41;
  MEMORY[0x270FA5388](v42);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v43);
  sub_253C33FFC();
  sub_253C63378();
  MEMORY[0x270FA5388](v44);
  sub_253C36430();
  sub_253C34018(v45);
  uint64_t v46 = sub_253DF14C0();
  uint64_t v47 = sub_253BDF9FC(v46);
  MEMORY[0x270FA5388](v47);
  sub_253BDFA94();
  sub_253C34018(v48);
  uint64_t v231 = sub_253DF42A0();
  sub_253C0F830();
  uint64_t v230 = v49;
  MEMORY[0x270FA5388](v50);
  sub_253BDFA94();
  sub_253C34018(v51);
  uint64_t v233 = sub_253DF3E70();
  sub_253C0F830();
  uint64_t v232 = v52;
  MEMORY[0x270FA5388](v53);
  sub_253BDFA94();
  sub_253C34018(v54);
  uint64_t v209 = _s19TranscriptRetrieverVMa();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v55);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v56);
  sub_253C36430();
  sub_253C34018(v57);
  sub_253DF41F0();
  sub_253C0F830();
  uint64_t v241 = v59;
  uint64_t v242 = v58;
  MEMORY[0x270FA5388](v58);
  sub_253BDFA94();
  uint64_t v240 = v60;
  sub_253C36350();
  uint64_t v239 = sub_253DF2400();
  sub_253C0F830();
  uint64_t v62 = v61;
  MEMORY[0x270FA5388](v63);
  sub_253C8F238();
  MEMORY[0x270FA5388](v64);
  uint64_t v66 = (char *)v203 - v65;
  sub_253DF2420();
  sub_253C0F830();
  uint64_t v68 = v67;
  uint64_t v70 = MEMORY[0x270FA5388](v69);
  MEMORY[0x270FA5388](v70);
  sub_253DF1630();
  sub_253DF1630();
  sub_253DF2410();
  sub_253DF23D0();
  uint64_t v72 = *(void (**)(void))(v68 + 8);
  uint64_t v71 = v68 + 8;
  uint64_t v238 = v72;
  sub_253C0FD90();
  v73();
  uint64_t v74 = sub_253DF2410();
  os_signpost_type_t v75 = sub_253DF5790();
  if (sub_253DF5800())
  {
    unint64_t v76 = (uint8_t *)swift_slowAlloc();
    uint64_t v220 = v40;
    uint64_t v77 = v76;
    *(_WORD *)unint64_t v76 = 0;
    os_signpost_id_t v78 = sub_253DF23E0();
    _os_signpost_emit_with_name_impl(&dword_253BD8000, v74, v75, v78, "FeedbackLearning.evaluate", "", v77, 2u);
    uint64_t v40 = v220;
    sub_253BDF910();
  }

  uint64_t v79 = v239;
  sub_253BEFD38();
  v80();
  sub_253DF2470();
  swift_allocObject();
  uint64_t v81 = sub_253DF2460();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v66, v79);
  sub_253C0FD90();
  v82();
  uint64_t v83 = (uint64_t)v243;
  sub_253DF4200();
  sub_253C635B4();
  int v85 = v84();
  if (v85 == *MEMORY[0x263F4DEC0])
  {
    uint64_t v86 = sub_253CA4004();
    v87(v86);
LABEL_10:
    uint64_t v89 = v226;
    sub_253CA3FF4();
    v90();
    uint64_t v91 = v229;
    uint64_t v92 = v234;
    sub_253CA3FF4();
    v93();
    sub_253CA403C();
    sub_253CEAA18(v89, v91, v94);
    uint64_t v95 = _s17FastTaskEvaluatorVMa();
    uint64_t v96 = (char **)sub_253BDF5F8((void *)(v92 + *(int *)(v95 + 24)), *(void *)(v92 + *(int *)(v95 + 24) + 24));
    uint64_t v97 = sub_253DF3E40();
    uint64_t v98 = sub_253CACDC0(v97, v71, *v96);
    swift_bridgeObjectRelease();
    uint64_t v99 = v227;
    sub_253DF3E60();
    uint64_t v100 = v228;
    MEMORY[0x25A26B7F0](v99);
    sub_253DF3E40();
    sub_253CFDB54();
    swift_bridgeObjectRelease();
    uint64_t v101 = sub_253CA35A4(v100, MEMORY[0x263F4CE38]);
    MEMORY[0x270FA5388](v101);
    v203[-6] = v92;
    v203[-5] = v71;
    v203[-4] = v98;
    v203[-3] = v83;
    v203[-2] = v235;
    sub_253C57698();
    uint64_t v103 = v102;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v104 = v237;
    *uint64_t v237 = 0;
    *((void *)v104 + 1) = v103;
    sub_253CA35A4(v71, (void (*)(void))_s19TranscriptRetrieverVMa);
    goto LABEL_11;
  }
  if (v85 == *MEMORY[0x263F4E018] || v85 == *MEMORY[0x263F4E020]) {
    goto LABEL_10;
  }
  uint64_t v105 = sub_253CA4004();
  v106(v105);
  uint64_t v107 = v225;
  sub_253CA0410();
  int v108 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v107, 1, v40);
  if (v108 == 1)
  {
    uint64_t v109 = &qword_26B2519D0;
    uint64_t v110 = v107;
LABEL_16:
    sub_253BDF664(v110, v109);
    uint64_t v116 = v237;
    *uint64_t v237 = 1;
    *((void *)v116 + 1) = MEMORY[0x263F8EE78];
    goto LABEL_11;
  }
  uint64_t v111 = v223;
  sub_253BEFD2C();
  v112();
  sub_253CA403C();
  sub_253CA2E84(v113);
  uint64_t v114 = v224;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v71, 1, v224) == 1)
  {
    sub_253CA3FE4();
    v115();
    uint64_t v109 = &qword_26B255348;
    uint64_t v110 = v71;
    goto LABEL_16;
  }
  uint64_t v241 = v81;
  uint64_t v117 = v222;
  uint64_t v118 = v221;
  sub_253BEFD2C();
  v119();
  sub_253DF1790();
  sub_253BEFD38();
  v120();
  uint64_t v121 = v216;
  uint64_t v238 = *(void (**)(void))(v117 + 16);
  uint64_t v239 = v117 + 16;
  sub_253BEFD38();
  v122();
  uint64_t v123 = sub_253DF2490();
  uint64_t v124 = v40;
  os_log_type_t v125 = sub_253DF56C0();
  BOOL v126 = os_log_type_enabled(v123, v125);
  uint64_t v220 = v124;
  if (v126)
  {
    uint64_t v127 = swift_slowAlloc();
    uint64_t v240 = swift_slowAlloc();
    v247[0] = v240;
    *(_DWORD *)uint64_t v127 = 136315394;
    sub_253C6B664((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
    uint64_t v128 = sub_253DF5C40();
    uint64_t v245 = sub_253D8E5FC(v128, v129, v247);
    uint64_t v118 = v246;
    sub_253DF5820();
    swift_bridgeObjectRelease();
    uint64_t v130 = *(void (**)(void))(v111 + 8);
    sub_253C0F824();
    v130();
    *(_WORD *)(v127 + 12) = 2080;
    sub_253C6B664((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
    uint64_t v131 = sub_253CA401C();
    uint64_t v245 = sub_253D8E5FC(v131, v132, v247);
    sub_253CA407C();
    uint64_t v114 = v224;
    sub_253DF5820();
    swift_bridgeObjectRelease();
    uint64_t v242 = *(void (**)(void))(v222 + 8);
    sub_253C0F824();
    v133();
    _os_log_impl(&dword_253BD8000, v123, v125, "Event references action id=%s and statement id=%s. Generating updated task evaluation.", (uint8_t *)v127, 0x16u);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();
  }
  else
  {
    uint64_t v130 = *(void (**)(void))(v111 + 8);
    sub_253C0F824();
    v130();
    uint64_t v242 = *(void (**)(void))(v117 + 8);
    ((void (*)(uint64_t, uint64_t))v242)(v121, v114);
  }

  uint64_t v240 = *(void *)(v218 + 8);
  sub_253C0F824();
  v134();
  uint64_t v135 = v217;
  uint64_t v136 = v215;
  sub_253CFAB60();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v136, 1, v135) != 1)
  {
    uint64_t v238 = v130;
    uint64_t v145 = v212;
    sub_253CA34C0(v136, v212, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    sub_253DF3E40();
    sub_253C5B9F8();
    swift_bridgeObjectRelease();
    uint64_t v146 = *(int *)(v135 + 28);
    sub_253CA403C();
    uint64_t v147 = v229;
    uint64_t v148 = v234;
    sub_253BEFD38();
    v149();
    uint64_t v150 = swift_bridgeObjectRetain();
    uint64_t v239 = sub_253C746A0(v150, v147);
    swift_bridgeObjectRelease();
    sub_253C0FD90();
    v151();
    uint64_t v152 = v145;
    uint64_t v153 = *(void *)(v145 + v146);
    swift_bridgeObjectRetain();
    sub_253C96A2C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v154 = _s23PromptResponseRetrieverCMa();
    swift_allocObject();
    uint64_t v155 = swift_bridgeObjectRetain();
    v156 = sub_253C6BAA8(v155);
    uint64_t v157 = v214;
    sub_253CA3FF4();
    v158();
    uint64_t v159 = v209;
    sub_253C1601C((uint64_t)v247, v157 + *(int *)(v209 + 20));
    uint64_t v160 = (void *)(v157 + *(int *)(v159 + 24));
    v160[3] = v154;
    v160[4] = &off_27035DF18;
    uint64_t v161 = v157;
    void *v160 = v156;
    int v162 = (uint64_t *)(v157 + *(int *)(v159 + 28));
    v162[3] = (uint64_t)&_s28StatementParameterResolutionVN;
    v162[4] = (uint64_t)&off_27035DFC0;
    *int v162 = v239;
    uint64_t v163 = _s17FastTaskEvaluatorVMa();
    uint64_t v164 = (char *)*sub_253BDF5F8((void *)(v148 + *(int *)(v163 + 24)), *(void *)(v148 + *(int *)(v163 + 24) + 24));
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v165 = sub_253CACDC0(v153, v161, v164);
    swift_bridgeObjectRelease();
    v246[2] = v159;
    v246[3] = &off_270361158;
    unint64_t v166 = sub_253BDEE6C(&v245);
    sub_253CA3544(v161, (uint64_t)v166, (void (*)(void))_s19TranscriptRetrieverVMa);
    uint64_t v167 = v211;
    sub_253CA2880(v152, (uint64_t)&v245, v165, v211);
    swift_bridgeObjectRelease();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v245);
    uint64_t v168 = sub_253CA4048();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v168, v169, v213) == 1)
    {
      sub_253BDF664(v167, &qword_26B2556C0);
      swift_release();
      sub_253CA35A4(v161, (void (*)(void))_s19TranscriptRetrieverVMa);
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v247);
      sub_253CA35A4(v152, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
      sub_253C0F824();
      v170();
      sub_253C0F824();
      v171();
      os_log_t v172 = v237;
      *uint64_t v237 = 1;
    }
    else
    {
      uint64_t v176 = v208;
      sub_253CA34C0(v167, v208, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
      uint64_t v177 = sub_253BDEDD8(&qword_269D7C728);
      uint64_t v178 = v207;
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v207, 1, 1, v177);
      static FeedbackLearning.TaskFinalResolutionState.== infix(_:_:)();
      char v180 = v179;
      sub_253CA35A4(v178, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
      if ((v180 & 1) == 0)
      {
        sub_253BDEDD8(&qword_269D7CC28);
        unint64_t v196 = (*(unsigned __int8 *)(v204 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v204 + 80);
        uint64_t v197 = swift_allocObject();
        *(_OWORD *)(v197 + 16) = xmmword_253DF6EC0;
        sub_253CA34C0(v176, v197 + v196, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
        swift_release();
        sub_253CA35A4(v214, (void (*)(void))_s19TranscriptRetrieverVMa);
        _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v247);
        sub_253CA35A4(v152, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
        sub_253C0F824();
        v198();
        sub_253C0F824();
        v199();
        unint64_t v200 = v237;
        *uint64_t v237 = 1;
        *((void *)v200 + 1) = v197;
        goto LABEL_11;
      }
      uint64_t v243 = v156;
      sub_253DF1790();
      uint64_t v181 = v205;
      sub_253CA3544(v152, v205, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
      uint64_t v182 = v206;
      sub_253CA3544(v176, v206, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
      uint64_t v183 = sub_253DF2490();
      os_log_type_t v184 = sub_253DF56C0();
      BOOL v185 = os_log_type_enabled(v183, v184);
      uint64_t v186 = v242;
      if (v185)
      {
        uint64_t v187 = swift_slowAlloc();
        uint64_t v242 = v186;
        uint64_t v188 = v182;
        uint64_t v189 = v187;
        uint64_t v245 = swift_slowAlloc();
        *(_DWORD *)uint64_t v189 = 136315394;
        sub_253C6B664((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
        uint64_t v190 = sub_253DF5C40();
        uint64_t v244 = sub_253D8E5FC(v190, v191, &v245);
        sub_253DF5820();
        swift_bridgeObjectRelease();
        sub_253CA35A4(v181, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
        *(_WORD *)(v189 + 12) = 2080;
        sub_253CA3544(v188, v203[1], (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
        uint64_t v192 = sub_253DF5290();
        uint64_t v244 = sub_253D8E5FC(v192, v193, &v245);
        sub_253DF5820();
        sub_253CA407C();
        swift_bridgeObjectRelease();
        uint64_t v194 = v188;
        uint64_t v186 = v242;
        sub_253CA35A4(v194, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
        _os_log_impl(&dword_253BD8000, v183, v184, "Task with statement id=%s is incomplete, not generating task evaluation for result=%s", (uint8_t *)v189, 0x16u);
        swift_arrayDestroy();
        sub_253BDF910();
        sub_253BDF910();

        sub_253C63748();
        sub_253C0F824();
        v195();
      }
      else
      {
        sub_253CA35A4(v181, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
        sub_253CA35A4(v182, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);

        sub_253C63748();
        sub_253C0F824();
        v201();
        sub_253CA407C();
      }
      swift_release();
      sub_253CA35A4(v208, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
      sub_253CA35A4(v214, (void (*)(void))_s19TranscriptRetrieverVMa);
      _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v247);
      sub_253CA35A4(v152, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
      sub_253C63748();
      sub_253C0F824();
      v186();
      sub_253C63748();
      sub_253C0F824();
      v202();
      os_log_t v172 = v237;
      *uint64_t v237 = 1;
    }
    *((void *)v172 + 1) = MEMORY[0x263F8EE78];
    goto LABEL_11;
  }
  sub_253BDF664(v136, &qword_26B255630);
  sub_253CA403C();
  sub_253DF1790();
  uint64_t v137 = v210;
  sub_253BEFD38();
  v138();
  uint64_t v139 = sub_253DF2490();
  os_log_type_t v140 = sub_253DF56C0();
  if (os_log_type_enabled(v139, v140))
  {
    int v141 = (uint8_t *)swift_slowAlloc();
    v247[0] = swift_slowAlloc();
    *(_DWORD *)int v141 = 136315138;
    uint64_t v118 = v141 + 4;
    sub_253C6B664((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
    uint64_t v142 = sub_253CA401C();
    uint64_t v245 = sub_253D8E5FC(v142, v143, v247);
    sub_253CA407C();
    uint64_t v114 = v224;
    sub_253DF5820();
    swift_bridgeObjectRelease();
    uint64_t v144 = v242;
    sub_253C0F824();
    v144();
    _os_log_impl(&dword_253BD8000, v139, v140, "Could not build a flow action for event with statement id=%s", v141, 0xCu);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();
  }
  else
  {
    uint64_t v173 = v137;
    uint64_t v144 = v242;
    ((void (*)(uint64_t, uint64_t))v242)(v173, v114);
  }

  sub_253C63748();
  sub_253C0F824();
  v174();
  uint64_t v175 = v237;
  ((void (*)(void *, uint64_t))v144)(v118, v114);
  sub_253C0F824();
  v130();
  *uint64_t v175 = 1;
  *((void *)v175 + 1) = MEMORY[0x263F8EE78];
LABEL_11:
  sub_253CA2398();
  swift_release();
  sub_253C1CEE8();
}

uint64_t sub_253CA2398()
{
  uint64_t v0 = sub_253DF2430();
  uint64_t v39 = *(void *)(v0 - 8);
  uint64_t v40 = v0;
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_253DF2400();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v35 - v7;
  uint64_t v9 = sub_253DF2420();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF1630();
  uint64_t v13 = sub_253DF2410();
  sub_253DF2440();
  int v14 = sub_253DF5780();
  if (sub_253DF5800())
  {
    int v36 = v14;
    uint64_t v37 = v12;
    uint64_t v38 = v9;
    os_log_t v35 = v13;
    swift_retain();
    sub_253DF2480();
    swift_release();
    uint64_t v16 = v39;
    uint64_t v15 = v40;
    int v17 = (*(uint64_t (**)(char *, uint64_t))(v39 + 88))(v2, v40);
    uint64_t v18 = v6;
    uint64_t v19 = v10;
    uint64_t v21 = v41;
    uint64_t v20 = v42;
    if (v17 == *MEMORY[0x263F90238])
    {
      char v22 = 0;
      char v23 = 0;
      uint64_t v24 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v2, v15);
      uint64_t v24 = "%s";
      char v23 = 2;
      char v22 = 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v18, v8, v20);
    uint64_t v26 = swift_slowAlloc();
    uint64_t v27 = v18;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v44 = v28;
    *(unsigned char *)uint64_t v26 = v23;
    *(unsigned char *)(v26 + 1) = v22;
    *(_WORD *)(v26 + 2) = 2080;
    sub_253DF15D0();
    uint64_t v29 = sub_253DF5910();
    uint64_t v43 = sub_253D8E5FC(v29, v30, &v44);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    os_signpost_id_t v31 = sub_253DF23E0();
    os_log_t v32 = v35;
    _os_signpost_emit_with_name_impl(&dword_253BD8000, v35, (os_signpost_type_t)v36, v31, "FeedbackLearning.evaluate", v24, (uint8_t *)v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25A2709B0](v28, -1, -1);
    MEMORY[0x25A2709B0](v26, -1, -1);

    uint64_t v33 = *(void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v34 = v42;
    v33(v8, v42);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v37, v38);
    return ((uint64_t (*)(char *, uint64_t))v33)(v27, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_253CA27BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  v10[3] = _s19TranscriptRetrieverVMa();
  v10[4] = (uint64_t)&off_270361158;
  uint64_t v8 = sub_253BDEE6C(v10);
  sub_253CA3544(a2, (uint64_t)v8, (void (*)(void))_s19TranscriptRetrieverVMa);
  sub_253CA2880(a1, (uint64_t)v10, a3, a4);
  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v10);
}

uint64_t sub_253CA2880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v23 = a1;
  uint64_t v27 = a4;
  uint64_t v19 = type metadata accessor for FeedbackLearning.FlowTask(0);
  uint64_t v4 = MEMORY[0x270FA5388](v19);
  uint64_t v28 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  char v22 = (char *)&v18 - v6;
  uint64_t v7 = sub_253DF24A0();
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v29 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  MEMORY[0x270FA5388](v26);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253DEFE90();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DEFE80();
  _s17FastTaskEvaluatorVMa();
  sub_253C52154();
  sub_253CA5E00(v23, v24, v25, (uint64_t)v10);
  sub_253C526B4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v15 = (uint64_t)v10;
  uint64_t v16 = v27;
  sub_253CA34C0(v15, v27, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v16, 0, 1, v26);
}

uint64_t sub_253CA2E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v1 = sub_253BDEDD8(&qword_26B255420);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v41 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_253DF0880();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v38 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253DF3170();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  MEMORY[0x270FA5388](v5);
  os_log_t v35 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253DF2BE0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253DF3C70();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253DF41F0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF4200();
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v16 + 88))(v18, v15);
  if (v19 == *MEMORY[0x263F4DEB8])
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v18, v11);
    uint64_t v20 = v42;
    sub_253DF3BB0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v21 = sub_253DEFFE0();
    uint64_t v22 = v20;
LABEL_12:
    uint64_t v29 = 0;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v22, v29, 1, v21);
  }
  uint64_t v23 = v42;
  if (v19 == *MEMORY[0x263F4DF50])
  {
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v18, v7);
    sub_253DF2B50();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_11:
    uint64_t v21 = sub_253DEFFE0();
    uint64_t v22 = v23;
    goto LABEL_12;
  }
  if (v19 != *MEMORY[0x263F4DFE0])
  {
    if (v19 != *MEMORY[0x263F4DF48])
    {
      uint64_t v34 = sub_253DEFFE0();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v23, 1, 1, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
    (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
    unint64_t v30 = v35;
    uint64_t v31 = v36;
    uint64_t v32 = v37;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v35, v18, v37);
    sub_253DF3110();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v30, v32);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v16 + 96))(v18, v15);
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  uint64_t v26 = v40;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v18, v40);
  uint64_t v27 = (uint64_t)v41;
  sub_253C60DAC();
  uint64_t v28 = sub_253DF10D0();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v27, 1, v28) != 1)
  {
    sub_253DF10A0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
  sub_253BDF664(v27, &qword_26B255420);
  uint64_t v21 = sub_253DEFFE0();
  uint64_t v22 = v23;
  uint64_t v29 = 1;
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v22, v29, 1, v21);
}

uint64_t _s17FastTaskEvaluatorVMa()
{
  uint64_t result = qword_26B2556F0;
  if (!qword_26B2556F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_253CA34C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_253CA3520@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253CA27BC(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_253CA3544(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_253CA35A4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t *sub_253CA35FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DF42A0();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    v8((uint64_t *)((char *)a1 + v9), (uint64_t *)((char *)a2 + v9), v7);
    uint64_t v12 = *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20);
    long long v13 = *(_OWORD *)&v11[v12 + 24];
    *(_OWORD *)&v10[v12 + 24] = v13;
    (**(void (***)(void))(v13 - 8))();
    uint64_t v14 = a3[6];
    long long v15 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)a1 + v14 + 24) = v15;
    (**(void (***)(void))(v15 - 8))();
    uint64_t v16 = a3[7];
    long long v17 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)a1 + v16 + 24) = v17;
    (**(void (***)(void))(v17 - 8))();
  }
  return a1;
}

uint64_t sub_253CA37F8(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253DF42A0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  v5(v6, v4);
  uint64_t v7 = type metadata accessor for FeedbackLearning.TaskEvaluator();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v6 + *(int *)(v7 + 20));
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + a2[6]);
  uint64_t v8 = a1 + a2[7];

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v8);
}

uint64_t sub_253CA38BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DF42A0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20);
  long long v12 = *(_OWORD *)(v10 + v11 + 24);
  *(_OWORD *)(v9 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  uint64_t v13 = a3[6];
  long long v14 = *(_OWORD *)(a2 + v13 + 24);
  *(_OWORD *)(a1 + v13 + 24) = v14;
  (**(void (***)(void))(v14 - 8))();
  uint64_t v15 = a3[7];
  long long v16 = *(_OWORD *)(a2 + v15 + 24);
  *(_OWORD *)(a1 + v15 + 24) = v16;
  (**(void (***)(void))(v16 - 8))();
  return a1;
}

uint64_t sub_253CA3A68(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DF42A0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = type metadata accessor for FeedbackLearning.TaskEvaluator();
  sub_253C22614((uint64_t *)(v9 + *(int *)(v11 + 20)), (uint64_t *)(v10 + *(int *)(v11 + 20)));
  sub_253C22614((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  sub_253C22614((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t sub_253CA3B48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DF42A0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20);
  uint64_t v12 = v9 + v11;
  uint64_t v13 = v10 + v11;
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  uint64_t v15 = a3[6];
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v15;
  uint64_t v18 = a2 + v15;
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  return a1;
}

uint64_t sub_253CA3C48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DF42A0();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20);
  uint64_t v12 = v9 + v11;
  uint64_t v13 = v10 + v11;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v12);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v15);
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v19);
  long long v22 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v22;
  *(void *)(v20 + 32) = *(void *)(v21 + 32);
  return a1;
}

uint64_t sub_253CA3D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CA3D78);
}

uint64_t sub_253CA3D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253DF42A0();
  sub_253C16A18();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v9, a2, v8);
  }
  type metadata accessor for FeedbackLearning.TaskEvaluator();
  sub_253C16A18();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_253CA3E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CA3E44);
}

void sub_253CA3E44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_253DF42A0();
  sub_253C16A18();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for FeedbackLearning.TaskEvaluator();
    sub_253C16A18();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v11, a2, a2, v10);
}

uint64_t sub_253CA3EF8()
{
  uint64_t result = sub_253DF42A0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedbackLearning.TaskEvaluator();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_253CA3FCC()
{
  return v0;
}

uint64_t sub_253CA4004()
{
  return v0;
}

uint64_t sub_253CA401C()
{
  return sub_253DF5C40();
}

uint64_t sub_253CA4048()
{
  return v0;
}

uint64_t sub_253CA4068()
{
  return v0;
}

double sub_253CA4088()
{
  sub_253BDEDD8(&qword_26B256228);
  uint64_t v0 = swift_allocObject();
  *(void *)&double result = 3;
  *(_OWORD *)(v0 + 16) = xmmword_253DFA3F0;
  *(void *)(v0 + 56) = &_s17ActionPromptVoterVN;
  *(void *)(v0 + 64) = &off_27035E6B0;
  *(unsigned char *)(v0 + 32) = 0;
  *(void *)(v0 + 96) = &_s19TaskCompletionVoterVN;
  *(void *)(v0 + 104) = &off_27035E760;
  *(unsigned char *)(v0 + 72) = 3;
  *(void *)(v0 + 136) = &unk_2703611E8;
  *(void *)(v0 + 144) = &off_2703613C0;
  *(void *)(v0 + 120) = MEMORY[0x263F8EE78];
  *(unsigned char *)(v0 + 128) = 1;
  *(unsigned char *)(v0 + 112) = 0;
  qword_26B2575D8 = (uint64_t)&_s17WaterfallMediatorVN;
  unk_26B2575E0 = &off_27035E600;
  byte_26B2575C0 = 4;
  qword_26B2575C8 = v0;
  return result;
}

uint64_t sub_253CA4148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v19 = a3;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_253DC71A4();
    uint64_t v8 = v22;
    uint64_t v14 = *(void *)(sub_253DF3770() - 8);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v16 = *(void *)(v14 + 72);
    while (1)
    {
      sub_253C94CD0(v15, a2, v19, v9, v10, v11, v12, v13, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v22 = v8;
      unint64_t v17 = *(void *)(v8 + 16);
      if (v17 >= *(void *)(v8 + 24) >> 1) {
        sub_253DC71A4();
      }
      *(void *)(v8 + 16) = v17 + 1;
      *(void *)(v8 + 8 * v17 + 32) = v20;
      v15 += v16;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x263F8EE78];
LABEL_10:
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_253CA42E0(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v3 = sub_253BDEDD8(&qword_26B2556E8);
  MEMORY[0x270FA5388](v3 - 8);
  int v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = _s16CandidateSummaryVMa(0);
  uint64_t v35 = *(void *)(v40 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v40);
  uint64_t v36 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v34 = (uint64_t)&v33 - v8;
  uint64_t v9 = sub_253BDEDD8(&qword_269D7CC60);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v33 - v13;
  sub_253DB2EC8(v41, a1);
  uint64_t v15 = v41[0];
  int64_t v16 = v41[3];
  unint64_t v17 = v41[4];
  uint64_t v38 = v41[1];
  int64_t v39 = (unint64_t)(v41[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v37 = MEMORY[0x263F8EE78];
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_20;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v21 >= v39) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v38 + 8 * v21);
    int64_t v23 = v16 + 1;
    if (!v22)
    {
      int64_t v23 = v16 + 2;
      if (v16 + 2 >= v39) {
        goto LABEL_27;
      }
      unint64_t v22 = *(void *)(v38 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v16 + 3;
        if (v16 + 3 >= v39) {
          goto LABEL_27;
        }
        unint64_t v22 = *(void *)(v38 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v16 + 4;
          if (v16 + 4 >= v39) {
            goto LABEL_27;
          }
          unint64_t v22 = *(void *)(v38 + 8 * v23);
          if (!v22)
          {
            int64_t v23 = v16 + 5;
            if (v16 + 5 >= v39) {
              goto LABEL_27;
            }
            unint64_t v22 = *(void *)(v38 + 8 * v23);
            if (!v22)
            {
              int64_t v24 = v16 + 6;
              while (v24 < v39)
              {
                unint64_t v22 = *(void *)(v38 + 8 * v24++);
                if (v22)
                {
                  int64_t v23 = v24 - 1;
                  goto LABEL_19;
                }
              }
LABEL_27:
              swift_bridgeObjectRelease();
              swift_release();
              return v37;
            }
          }
        }
      }
    }
LABEL_19:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v23 << 6);
    int64_t v16 = v23;
LABEL_20:
    uint64_t v25 = *(void *)(v15 + 48);
    uint64_t v26 = sub_253DF26C0();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v14, v25 + *(void *)(*(void *)(v26 - 8) + 72) * v20, v26);
    *(void *)&v14[*(int *)(v9 + 48)] = *(void *)(*(void *)(v15 + 56) + 8 * v20);
    sub_253CAEC1C((uint64_t)v14, (uint64_t)v12, &qword_269D7CC60);
    uint64_t v27 = *(void *)&v12[*(int *)(v9 + 48)];
    swift_bridgeObjectRetain();
    sub_253C59A44(v27, v42, (uint64_t)v5);
    sub_253BDF664((uint64_t)v12, &qword_269D7CC60);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v5, 1, v40) == 1)
    {
      uint64_t result = sub_253BDF664((uint64_t)v5, &qword_26B2556E8);
    }
    else
    {
      uint64_t v28 = v34;
      sub_253CAED38((uint64_t)v5, v34, (void (*)(void))_s16CandidateSummaryVMa);
      sub_253CAED38(v28, v36, (void (*)(void))_s16CandidateSummaryVMa);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v37 = sub_253DC4200(0, *(void *)(v37 + 16) + 1, 1, v37);
      }
      unint64_t v30 = *(void *)(v37 + 16);
      unint64_t v29 = *(void *)(v37 + 24);
      if (v30 >= v29 >> 1) {
        uint64_t v37 = sub_253DC4200(v29 > 1, v30 + 1, 1, v37);
      }
      uint64_t v31 = v36;
      uint64_t v32 = v37;
      *(void *)(v37 + 16) = v30 + 1;
      uint64_t result = sub_253CAED38(v31, v32+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v30, (void (*)(void))_s16CandidateSummaryVMa);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_253CA4764(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  uint64_t v44 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v47 = (uint64_t)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = _s16CandidateSummaryVMa(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v46 = (uint64_t)v38 - v10;
  uint64_t v48 = (void *)MEMORY[0x263F8EE80];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v38[0] = v3;
    v38[1] = a1;
    v38[2] = v1;
    uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = (v12 + 32) & ~v12;
    uint64_t v14 = a1 + v13;
    uint64_t v15 = *(void *)(v9 + 72);
    uint64_t v45 = v13;
    uint64_t v42 = v15 + v13;
    int64_t v16 = (void *)MEMORY[0x263F8EE80];
    uint64_t v41 = v12 | 7;
    long long v40 = xmmword_253DF6EC0;
    uint64_t v43 = v8;
    uint64_t v39 = v5;
    while (1)
    {
      uint64_t v17 = v46;
      sub_253CAEC70(v14, v46, (void (*)(void))_s16CandidateSummaryVMa);
      uint64_t v18 = v17 + *(int *)(v5 + 20);
      uint64_t v19 = v47;
      sub_253CAEC70(v18, v47, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
      unint64_t v21 = sub_253D87A00(v19);
      uint64_t v22 = v16[2];
      BOOL v23 = (v20 & 1) == 0;
      if (__OFADD__(v22, v23)) {
        break;
      }
      char v24 = v20;
      if (v16[3] < v22 + v23)
      {
        sub_253D72158();
        int64_t v16 = v48;
        uint64_t v25 = sub_253D87A00(v47);
        if ((v24 & 1) != (v26 & 1)) {
          goto LABEL_21;
        }
        unint64_t v21 = v25;
      }
      if (v24)
      {
        sub_253CAECE0(v47, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
        int64_t v16 = v48;
        uint64_t v27 = v48[7];
        sub_253CAED38(v46, (uint64_t)v8, (void (*)(void))_s16CandidateSummaryVMa);
        uint64_t v28 = *(void *)(v27 + 8 * v21);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v27 + 8 * v21) = v28;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v28 = sub_253DC4200(0, *(void *)(v28 + 16) + 1, 1, v28);
          *(void *)(v27 + 8 * v21) = v28;
        }
        unint64_t v31 = *(void *)(v28 + 16);
        unint64_t v30 = *(void *)(v28 + 24);
        if (v31 >= v30 >> 1)
        {
          uint64_t v28 = sub_253DC4200(v30 > 1, v31 + 1, 1, v28);
          *(void *)(v27 + 8 * v21) = v28;
        }
        uint64_t v5 = v39;
        *(void *)(v28 + 16) = v31 + 1;
        uint64_t v32 = v28 + v45 + v31 * v15;
        uint64_t v8 = v43;
        sub_253CAED38((uint64_t)v43, v32, (void (*)(void))_s16CandidateSummaryVMa);
      }
      else
      {
        sub_253BDEDD8(&qword_269D7BD98);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = v40;
        sub_253CAED38(v46, v33 + v45, (void (*)(void))_s16CandidateSummaryVMa);
        v16[(v21 >> 6) + 8] |= 1 << v21;
        sub_253CAED38(v47, v16[6] + *(void *)(v44 + 72) * v21, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
        *(void *)(v16[7] + 8 * v21) = v33;
        uint64_t v34 = v16[2];
        BOOL v35 = __OFADD__(v34, 1);
        uint64_t v36 = v34 + 1;
        if (v35) {
          goto LABEL_20;
        }
        v16[2] = v36;
      }
      v14 += v15;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v16;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    uint64_t result = sub_253DF5CF0();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_253CA4BAC(uint64_t a1)
{
  uint64_t v3 = sub_253DF26C0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v49 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s16CandidateSummaryVMa(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v47 = (uint64_t)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v48 = (uint64_t)v36 - v10;
  uint64_t v50 = (void *)MEMORY[0x263F8EE80];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v36[1] = a1;
    v36[2] = v1;
    uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = (v12 + 32) & ~v12;
    uint64_t v14 = a1 + v13;
    uint64_t v15 = *(void *)(v9 + 72);
    uint64_t v45 = v13;
    uint64_t v46 = (void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    uint64_t v42 = v15 + v13;
    uint64_t v40 = v4 + 32;
    uint64_t v41 = v12 | 7;
    int64_t v16 = (void *)MEMORY[0x263F8EE80];
    uint64_t v39 = (void (**)(char *, uint64_t))(v4 + 8);
    long long v38 = xmmword_253DF6EC0;
    uint64_t v43 = v6;
    uint64_t v44 = v4;
    uint64_t v37 = v3;
    while (1)
    {
      uint64_t v17 = v48;
      sub_253CAEC70(v14, v48, (void (*)(void))_s16CandidateSummaryVMa);
      (*v46)(v49, v17 + *(int *)(v6 + 24), v3);
      sub_253D87A2C();
      unint64_t v20 = v19;
      uint64_t v21 = v16[2];
      BOOL v22 = (v18 & 1) == 0;
      if (__OFADD__(v21, v22)) {
        break;
      }
      char v23 = v18;
      if (v16[3] < v21 + v22)
      {
        sub_253D724D8();
        int64_t v16 = v50;
        sub_253D87A2C();
        if ((v23 & 1) != (v25 & 1)) {
          goto LABEL_21;
        }
        unint64_t v20 = v24;
      }
      if (v23)
      {
        (*v39)(v49, v3);
        int64_t v16 = v50;
        uint64_t v26 = v50[7];
        sub_253CAED38(v48, v47, (void (*)(void))_s16CandidateSummaryVMa);
        uint64_t v27 = *(void *)(v26 + 8 * v20);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v26 + 8 * v20) = v27;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v27 = sub_253DC4200(0, *(void *)(v27 + 16) + 1, 1, v27);
          *(void *)(v26 + 8 * v20) = v27;
        }
        unint64_t v30 = *(void *)(v27 + 16);
        unint64_t v29 = *(void *)(v27 + 24);
        if (v30 >= v29 >> 1)
        {
          uint64_t v27 = sub_253DC4200(v29 > 1, v30 + 1, 1, v27);
          *(void *)(v26 + 8 * v20) = v27;
        }
        uint64_t v3 = v37;
        *(void *)(v27 + 16) = v30 + 1;
        sub_253CAED38(v47, v27 + v45 + v30 * v15, (void (*)(void))_s16CandidateSummaryVMa);
        uint64_t v6 = v43;
        uint64_t v4 = v44;
      }
      else
      {
        sub_253BDEDD8(&qword_269D7BD98);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = v38;
        sub_253CAED38(v48, v31 + v45, (void (*)(void))_s16CandidateSummaryVMa);
        v16[(v20 >> 6) + 8] |= 1 << v20;
        (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v16[6] + *(void *)(v4 + 72) * v20, v49, v3);
        *(void *)(v16[7] + 8 * v20) = v31;
        uint64_t v32 = v16[2];
        BOOL v33 = __OFADD__(v32, 1);
        uint64_t v34 = v32 + 1;
        if (v33) {
          goto LABEL_20;
        }
        v16[2] = v34;
      }
      v14 += v15;
      if (!--v11)
      {
        swift_bridgeObjectRelease();
        return (uint64_t)v16;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    uint64_t result = sub_253DF5CF0();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE80];
  }
  return result;
}

uint64_t sub_253CA4FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v45 = sub_253BDEDD8(&qword_269D7CC58);
  uint64_t v3 = MEMORY[0x270FA5388](v45);
  uint64_t v44 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v41 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v43 = (uint64_t)&v41 - v8;
  sub_253DB2EC8(v48, a1);
  uint64_t v46 = v48[0];
  int64_t v49 = v48[3];
  unint64_t v9 = v48[4];
  uint64_t v41 = v48[1];
  int64_t v42 = (unint64_t)(v48[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v12 = (uint64_t)v44;
  if (!v9) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v13 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v14 = v13 | (v49 << 6);
  while (1)
  {
    uint64_t v18 = v46;
    uint64_t v19 = *(void *)(v46 + 48);
    uint64_t v20 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    uint64_t v21 = v43;
    sub_253CAEC70(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v14, v43, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    uint64_t v22 = *(void *)(*(void *)(v18 + 56) + 8 * v14);
    uint64_t v23 = v45;
    *(void *)(v21 + *(int *)(v45 + 48)) = v22;
    sub_253CAEC1C(v21, (uint64_t)v7, &qword_269D7CC58);
    uint64_t v24 = *(int *)(v23 + 48);
    sub_253CAEC70((uint64_t)v7, v12, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    *(void *)(v12 + v24) = *(void *)&v7[v24];
    swift_bridgeObjectRetain();
    uint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v26 = sub_253CA4BAC(v25);
    sub_253CAECE0(v12, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    uint64_t v27 = v47;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_253CA42E0(v26, v27);
    swift_bridgeObjectRelease();
    uint64_t result = sub_253BDF664((uint64_t)v7, &qword_269D7CC58);
    uint64_t v29 = *(void *)(v28 + 16);
    uint64_t v30 = *(void *)(v11 + 16);
    uint64_t v31 = v30 + v29;
    if (__OFADD__(v30, v29)) {
      break;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (!result || v31 > *(void *)(v11 + 24) >> 1)
    {
      if (v30 <= v31) {
        uint64_t v32 = v30 + v29;
      }
      else {
        uint64_t v32 = v30;
      }
      uint64_t result = sub_253DC4200(result, v32, 1, v11);
      uint64_t v11 = result;
    }
    if (*(void *)(v28 + 16))
    {
      uint64_t v33 = (*(void *)(v11 + 24) >> 1) - *(void *)(v11 + 16);
      uint64_t v34 = _s16CandidateSummaryVMa(0);
      uint64_t v36 = *(void *)(v34 - 8);
      uint64_t result = v34 - 8;
      uint64_t v35 = v36;
      if (v33 < v29) {
        goto LABEL_38;
      }
      uint64_t result = sub_253DC6148(v28 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80)), v29);
      if (v29)
      {
        uint64_t v37 = *(void *)(v11 + 16);
        BOOL v38 = __OFADD__(v37, v29);
        uint64_t v39 = v37 + v29;
        if (v38) {
          goto LABEL_40;
        }
        *(void *)(v11 + 16) = v39;
      }
    }
    else if (v29)
    {
      goto LABEL_37;
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v15 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      goto LABEL_39;
    }
    if (v15 >= v42) {
      goto LABEL_35;
    }
    unint64_t v16 = *(void *)(v41 + 8 * v15);
    if (!v16)
    {
      int64_t v17 = v49 + 2;
      if (v49 + 2 >= v42) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v41 + 8 * v17);
      if (v16) {
        goto LABEL_12;
      }
      int64_t v17 = v49 + 3;
      if (v49 + 3 >= v42) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v41 + 8 * v17);
      if (v16) {
        goto LABEL_12;
      }
      int64_t v17 = v49 + 4;
      if (v49 + 4 >= v42) {
        goto LABEL_35;
      }
      unint64_t v16 = *(void *)(v41 + 8 * v17);
      if (v16)
      {
LABEL_12:
        int64_t v15 = v17;
      }
      else
      {
        int64_t v15 = v49 + 5;
        if (v49 + 5 >= v42) {
          goto LABEL_35;
        }
        unint64_t v16 = *(void *)(v41 + 8 * v15);
        if (!v16)
        {
          int64_t v40 = v49 + 6;
          while (v40 < v42)
          {
            unint64_t v16 = *(void *)(v41 + 8 * v40++);
            if (v16)
            {
              int64_t v15 = v40 - 1;
              goto LABEL_13;
            }
          }
LABEL_35:
          swift_bridgeObjectRelease();
          swift_release();
          return v11;
        }
      }
    }
LABEL_13:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v49 = v15;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_253CA5430(uint64_t a1, uint64_t (*a2)(char *, uint64_t))
{
  int64_t v42 = a2;
  uint64_t v41 = sub_253BDEDD8(&qword_269D7C8E8);
  MEMORY[0x270FA5388](v41);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DB2EC8(v43, a1);
  uint64_t v5 = v43[0];
  int64_t v44 = v43[3];
  unint64_t v6 = v43[4];
  uint64_t v39 = v43[1];
  int64_t v40 = (unint64_t)(v43[2] + 64) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v7 = MEMORY[0x263F8EE78];
  if (!v6) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v44 << 6);
  while (1)
  {
    uint64_t v14 = *(void *)(v5 + 48);
    uint64_t v15 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_253CAEC70(v14 + *(void *)(*(void *)(v15 - 8) + 72) * v9, (uint64_t)v4, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    uint64_t v16 = *(void *)(*(void *)(v5 + 56) + 8 * v9);
    *(void *)&v4[*(int *)(v41 + 48)] = v16;
    swift_bridgeObjectRetain();
    uint64_t v17 = v42(v4, v16);
    sub_253BDF664((uint64_t)v4, &qword_269D7C8E8);
    uint64_t v18 = *(void *)(v17 + 16);
    uint64_t v19 = *(void *)(v7 + 16);
    uint64_t v20 = v19 + v18;
    if (__OFADD__(v19, v18)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || v20 > *(void *)(v7 + 24) >> 1)
    {
      if (v19 <= v20) {
        uint64_t v22 = v19 + v18;
      }
      else {
        uint64_t v22 = v19;
      }
      uint64_t v7 = sub_253DC4200(isUniquelyReferenced_nonNull_native, v22, 1, v7);
    }
    if (*(void *)(v17 + 16))
    {
      uint64_t v23 = *(void *)(v7 + 16);
      uint64_t v24 = (*(void *)(v7 + 24) >> 1) - v23;
      uint64_t v25 = *(void *)(_s16CandidateSummaryVMa(0) - 8);
      uint64_t v26 = *(void *)(v25 + 72);
      if (v24 < v18) {
        goto LABEL_42;
      }
      unint64_t v27 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      unint64_t v28 = v7 + v27 + v26 * v23;
      unint64_t v29 = v17 + v27;
      uint64_t v30 = v26 * v18;
      unint64_t v31 = v28 + v30;
      unint64_t v32 = v29 + v30;
      if (v29 < v31 && v28 < v32) {
        goto LABEL_45;
      }
      swift_arrayInitWithCopy();
      if (v18)
      {
        uint64_t v34 = *(void *)(v7 + 16);
        BOOL v35 = __OFADD__(v34, v18);
        uint64_t v36 = v34 + v18;
        if (v35) {
          goto LABEL_43;
        }
        *(void *)(v7 + 16) = v36;
      }
    }
    else if (v18)
    {
      goto LABEL_41;
    }
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      goto LABEL_44;
    }
    if (v10 >= v40) {
      goto LABEL_39;
    }
    unint64_t v11 = *(void *)(v39 + 8 * v10);
    int64_t v12 = v44 + 1;
    if (!v11)
    {
      int64_t v12 = v44 + 2;
      if (v44 + 2 >= v40) {
        goto LABEL_39;
      }
      unint64_t v11 = *(void *)(v39 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v44 + 3;
        if (v44 + 3 >= v40) {
          goto LABEL_39;
        }
        unint64_t v11 = *(void *)(v39 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v44 + 4;
          if (v44 + 4 >= v40) {
            goto LABEL_39;
          }
          unint64_t v11 = *(void *)(v39 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v44 + 5;
            if (v44 + 5 >= v40) {
              goto LABEL_39;
            }
            unint64_t v11 = *(void *)(v39 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v44 + 6;
              while (v13 < v40)
              {
                unint64_t v11 = *(void *)(v39 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_39:
              swift_release();
              return v7;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v44 = v12;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  uint64_t result = sub_253DF5B10();
  __break(1u);
  return result;
}

uint64_t sub_253CA5808(void (*a1)(uint64_t *__return_ptr, unsigned char *))
{
  uint64_t v4 = type metadata accessor for FeedbackLearning.FlowExpression(0);
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_253BDEDD8(&qword_26B2555D8);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_253C2E770(v1, (uint64_t)v9, &qword_26B2555D8);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v4) == 1) {
    return 2;
  }
  sub_253CAED38((uint64_t)v9, (uint64_t)v6, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  a1(&v12, v6);
  uint64_t result = sub_253CAECE0((uint64_t)v6, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  if (!v2) {
    return v12;
  }
  return result;
}

uint64_t sub_253CA5984(void (*a1)(uint64_t *__return_ptr, unsigned char *), uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6)
{
  if (!a5) {
    return 3;
  }
  v9[0] = a3;
  v9[8] = a4;
  uint64_t v10 = a5;
  uint64_t v11 = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1(&v12, v9);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6) {
    return v12;
  }
  return result;
}

uint64_t sub_253CA5A30@<X0>(void (*a1)(unsigned char *)@<X0>, char a2@<W2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  if (a4)
  {
    v10[0] = a2;
    v10[8] = a3;
    uint64_t v11 = a4;
    uint64_t v12 = a5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a1(v10);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = _s24StatementExecutionResultOMa(0);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a6, 1, 1, v9);
  }
}

uint64_t sub_253CA5AF8(uint64_t a1, void (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a2;
  uint64_t v7 = sub_253DEFFE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int64_t v13 = (char *)&v26 - v12;
  uint64_t v32 = a1;
  uint64_t v14 = *(void *)(a4 + 56);
  uint64_t v26 = a4 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v29 = v8 + 16;
  int64_t v27 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v28 = v8 + 32;
  uint64_t v18 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v31 = a4;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v20 = 0;
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v21 | (v20 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v20 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, *(void *)(v31 + 48) + *(void *)(v8 + 72) * i, v7);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, v7);
    v30(&v32, v11);
    if (v4)
    {
      swift_bridgeObjectRelease();
      (*v18)(v11, v7);
      return swift_release();
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v18)(v11, v7);
    if (v17) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v20++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v27) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v26 + 8 * v20);
    if (!v24) {
      break;
    }
LABEL_17:
    unint64_t v17 = (v24 - 1) & v24;
  }
  int64_t v25 = v20 + 1;
  if (v20 + 1 >= v27) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24) {
    goto LABEL_16;
  }
  int64_t v25 = v20 + 2;
  if (v20 + 2 >= v27) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24) {
    goto LABEL_16;
  }
  int64_t v25 = v20 + 3;
  if (v20 + 3 >= v27) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24) {
    goto LABEL_16;
  }
  int64_t v25 = v20 + 4;
  if (v20 + 4 >= v27)
  {
LABEL_26:
    swift_release();
    return v32;
  }
  unint64_t v24 = *(void *)(v26 + 8 * v25);
  if (v24)
  {
LABEL_16:
    int64_t v20 = v25;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v20 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v20 >= v27) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v26 + 8 * v20);
    ++v25;
    if (v24) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_253CA5E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v191 = a3;
  uint64_t v209 = (void *)a2;
  uint64_t v202 = a4;
  uint64_t v6 = sub_253DF14C0();
  uint64_t v7 = sub_253BDF9FC(v6);
  MEMORY[0x270FA5388](v7);
  sub_253BDFA94();
  uint64_t v192 = v8;
  sub_253C36350();
  uint64_t v194 = sub_253DF2600();
  sub_253C0F830();
  uint64_t v193 = v9;
  MEMORY[0x270FA5388](v10);
  sub_253BDFA94();
  uint64_t v207 = v11;
  uint64_t v12 = sub_253C36350();
  uint64_t v13 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(v12);
  uint64_t v14 = sub_253BDF9FC(v13);
  MEMORY[0x270FA5388](v14);
  sub_253BDFA94();
  uint64_t v205 = v15;
  uint64_t v16 = sub_253C36350();
  uint64_t v17 = type metadata accessor for FeedbackLearning.TaskOutcome(v16);
  uint64_t v18 = sub_253BDF9FC(v17);
  MEMORY[0x270FA5388](v18);
  sub_253BDFA94();
  uint64_t v208 = v19;
  uint64_t v190 = sub_253BDEDD8(&qword_269D7CC38);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v20);
  sub_253C34050();
  uint64_t v189 = v21;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v22);
  sub_253C33FFC();
  uint64_t v196 = v23;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v186 - v25;
  uint64_t v27 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
  uint64_t v28 = sub_253BDF9FC(v27);
  MEMORY[0x270FA5388](v28);
  sub_253BDFA94();
  uint64_t v203 = v29;
  uint64_t v30 = sub_253BDEDD8(&qword_26B2555D8);
  uint64_t v31 = sub_253BDF9FC(v30);
  MEMORY[0x270FA5388](v31);
  sub_253BDFA94();
  uint64_t v217 = v32;
  uint64_t v33 = sub_253C36350();
  uint64_t v211 = type metadata accessor for FeedbackLearning.FlowExpression(v33);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v34);
  sub_253BDFA94();
  uint64_t v214 = v35;
  uint64_t v36 = sub_253C36350();
  uint64_t v220 = type metadata accessor for FeedbackLearning.FlowTask(v36);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v37);
  sub_253C34050();
  uint64_t v212 = v38;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v39);
  sub_253C33FFC();
  uint64_t v204 = v40;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v41);
  sub_253C33FFC();
  uint64_t v218 = v42;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v43);
  sub_253C33FFC();
  uint64_t v197 = v44;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v45);
  sub_253C33FFC();
  uint64_t v195 = v46;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v47);
  int64_t v49 = (char *)v186 - v48;
  uint64_t v50 = sub_253DF24A0();
  sub_253C0F830();
  uint64_t v52 = v51;
  MEMORY[0x270FA5388](v53);
  sub_253C34050();
  uint64_t v216 = v54;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v55);
  sub_253C33FFC();
  uint64_t v210 = v56;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v57);
  sub_253C33FFC();
  uint64_t v219 = (_DWORD *)v58;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v59);
  sub_253C33FFC();
  uint64_t v201 = v60;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v61);
  sub_253C33FFC();
  uint64_t v200 = v62;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v63);
  sub_253DF1790();
  sub_253CAEC70(a1, (uint64_t)v49, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
  uint64_t v64 = sub_253DF2490();
  os_log_type_t v65 = sub_253DF56D0();
  int v66 = v65;
  BOOL v67 = os_log_type_enabled(v64, v65);
  uint64_t v213 = v4;
  uint64_t v206 = v26;
  if (v67)
  {
    LODWORD(v198) = v66;
    sub_253CAEF84();
    uint64_t v188 = sub_253CAEFCC();
    uint64_t v222 = v188;
    uint64_t v187 = v4;
    *(_DWORD *)uint64_t v4 = 136315138;
    v186[1] = v4 + 4;
    sub_253DEFFE0();
    sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
    uint64_t v68 = sub_253DF5C40();
    uint64_t v70 = sub_253CAEF6C(v68, v69);
    sub_253C4C370(v70);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    sub_253CAECE0((uint64_t)v49, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    _os_log_impl(&dword_253BD8000, v64, (os_log_type_t)v198, "Starting to run task evaluator for task with statementId=%s", v187, 0xCu);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();
  }
  else
  {
    sub_253CAECE0((uint64_t)v49, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
  }

  uint64_t v71 = *(void (**)(void))(v52 + 8);
  sub_253C0F824();
  v71();
  uint64_t v72 = *(void *)(a1 + *(int *)(v220 + 24));
  uint64_t v73 = v217;
  uint64_t v74 = v218;
  if (*(void *)(v72 + 16) > 2uLL)
  {
    os_signpost_type_t v75 = v216;
    sub_253DF1790();
    uint64_t v76 = v212;
    sub_253CAEC70(a1, v212, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    uint64_t v77 = (void *)sub_253DF2490();
    os_log_type_t v78 = sub_253DF56E0();
    if (sub_253CAEFB0(v78))
    {
      sub_253CAEF84();
      uint64_t v79 = sub_253CAEFCC();
      sub_253CAEF28(v79);
      *os_signpost_type_t v75 = 136315138;
      uint64_t v219 = v75 + 1;
      sub_253CAF03C();
      sub_253CAEFA0();
      sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v80 = sub_253DF5C40();
      uint64_t v82 = sub_253CAEF6C(v80, v81);
      sub_253C4C370(v82);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253CAECE0(v76, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
      sub_253CAF008(&dword_253BD8000, v83, v84, "Task with statementId=%s is referencing more than two expressions");
      char v85 = 1;
      swift_arrayDestroy();
      sub_253BDF910();
      sub_253BDF910();

      sub_253CAEEE4();
      v86();
    }
    else
    {
      sub_253CAECE0(v76, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);

      sub_253C0F824();
      v71();
      char v85 = 1;
    }
LABEL_17:
    sub_253CAE204();
    swift_allocError();
    *uint64_t v112 = v85;
    return swift_willThrow();
  }
  sub_253D23280(v72, (uint64_t)v217);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v73, 1, v211) == 1)
  {
    sub_253BDF664((uint64_t)v73, &qword_26B2555D8);
    uint64_t v87 = v210;
    sub_253DF1790();
    uint64_t v88 = v204;
    sub_253CAEC70(a1, v204, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    uint64_t v89 = (void *)sub_253DF2490();
    os_log_type_t v90 = sub_253DF56E0();
    if (sub_253CAEFB0(v90))
    {
      sub_253CAEF84();
      uint64_t v91 = sub_253CAEFCC();
      sub_253CAEF28(v91);
      *uint64_t v87 = 136315138;
      v186[0] = v52;
      sub_253CAF03C();
      sub_253CAEFA0();
      sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v92 = sub_253DF5C40();
      uint64_t v94 = sub_253CAEF6C(v92, v93);
      sub_253CAEF50(v94);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253CAECE0(v88, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
      sub_253CAF008(&dword_253BD8000, v95, v96, "Task with statementId=%s does not reference any expression");
      swift_arrayDestroy();
      sub_253BDF910();
      sub_253BDF910();

      sub_253C63748();
      sub_253CAEEE4();
      v97();
    }
    else
    {
      sub_253CAECE0(v88, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);

      ((void (*)(_DWORD *, uint64_t))v71)(v87, v50);
    }
    char v85 = 0;
    goto LABEL_17;
  }
  uint64_t v98 = (uint64_t)v73;
  uint64_t v99 = v214;
  sub_253CAED38(v98, v214, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  uint64_t v100 = v99 + *(int *)(type metadata accessor for FeedbackLearning.FlowExpressionValue(0) + 20);
  uint64_t v101 = v203;
  sub_253CAEC70(v100, v203, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
  uint64_t v102 = sub_253BDEDD8(&qword_269D7CC20);
  int v103 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v101, 2, v102);
  if (v103)
  {
    if (v103 != 1)
    {
      sub_253DF1790();
      sub_253CAEC70(a1, v74, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
      uint64_t v104 = sub_253DF2490();
      os_log_type_t v105 = sub_253DF56D0();
      if (sub_253CAEFB0(v105))
      {
        uint64_t v106 = (uint8_t *)swift_slowAlloc();
        uint64_t v107 = swift_slowAlloc();
        sub_253CAEF28(v107);
        uint64_t v217 = v106;
        *(_DWORD *)uint64_t v106 = 136315138;
        v186[0] = v52;
        sub_253DEFFE0();
        sub_253CAEFA0();
        sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
        uint64_t v108 = sub_253DF5C40();
        uint64_t v110 = sub_253CAEF6C(v108, v109);
        sub_253CAEF50(v110);
        sub_253DF5820();
        swift_bridgeObjectRelease();
        sub_253CAECE0(v74, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
        _os_log_impl(&dword_253BD8000, v104, (os_log_type_t)v64, "Task with statementId=%s is not complete, skipping running task evaluation", v217, 0xCu);
        swift_arrayDestroy();
        sub_253BDF910();
        sub_253BDF910();

        sub_253C63748();
        sub_253CAEEE4();
        v111();
      }
      else
      {
        sub_253CAECE0(v74, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);

        ((void (*)(_DWORD *, uint64_t))v71)(v219, v50);
      }
      sub_253CA7E10(a1, v202);
      return sub_253CAECE0(v214, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
    }
  }
  else
  {
    sub_253DEFFE0();
    sub_253BDF7F0();
    (*(void (**)(uint64_t))(v114 + 8))(v101);
  }
  uint64_t v198 = v71;
  uint64_t v219 = (_DWORD *)a1;
  v186[0] = v52;
  uint64_t v115 = (void *)(v215 + *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluator() + 20));
  uint64_t v116 = v115[3];
  uint64_t v117 = v115[4];
  sub_253BDF5F8(v115, v116);
  uint64_t result = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v117 + 16))(v214, v209, v116, v117);
  LODWORD(v218) = v119;
  uint64_t v120 = *(void *)(v118 + 16);
  uint64_t v199 = v50;
  LODWORD(v216) = result;
  uint64_t v212 = v121;
  uint64_t v217 = (uint8_t *)v118;
  if (v120)
  {
    int v122 = *(unsigned __int8 *)(v118 + 32);
    unsigned int v123 = *(unsigned __int8 *)(v118 + 40);
    uint64_t v124 = *(void *)(v118 + 56);
    uint64_t v125 = *(void *)(v118 + 48);
    uint64_t v126 = v124;
    uint64_t v127 = *(unsigned __int8 *)(v118 + 40);
    if (*(unsigned char *)(v118 + 32))
    {
      if (v120 == 1)
      {
        uint64_t v126 = 0;
        uint64_t v125 = 0;
        uint64_t v128 = 0;
        sub_253CAF028();
        if (v122 != 3) {
          goto LABEL_43;
        }
        goto LABEL_42;
      }
      unint64_t v129 = (uint64_t *)(v118 + 88);
      uint64_t v130 = 1;
      while (1)
      {
        uint64_t v131 = v130 + 1;
        if (__OFADD__(v130, 1)) {
          break;
        }
        if (!*((unsigned char *)v129 - 24))
        {
          uint64_t v127 = *((unsigned __int8 *)v129 - 16);
          uint64_t v125 = *(v129 - 1);
          uint64_t v126 = *v129;
          goto LABEL_33;
        }
        v129 += 4;
        ++v130;
        if (v131 == v120)
        {
          uint64_t v128 = 0;
          uint64_t v125 = 0;
          uint64_t v126 = 0;
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_54:
      __break(1u);
      return result;
    }
LABEL_33:
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v128 = v127;
LABEL_34:
    if (v122 == 3)
    {
LABEL_42:
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      LOBYTE(v50) = 3;
      uint64_t v127 = v124;
      uint64_t v120 = v123;
      goto LABEL_43;
    }
    if (v120 != 1)
    {
      unint64_t v132 = v217 + 88;
      uint64_t v133 = 1;
      do
      {
        uint64_t v134 = v133 + 1;
        if (__OFADD__(v133, 1)) {
          goto LABEL_54;
        }
        if (*(v132 - 24) == 3)
        {
          unsigned int v123 = *(v132 - 16);
          uint64_t v124 = *(void *)v132;
          goto LABEL_42;
        }
        v132 += 32;
        ++v133;
      }
      while (v134 != v120);
    }
    sub_253CAF028();
  }
  else
  {
    LOBYTE(v50) = 0;
    uint64_t v127 = 0;
    uint64_t v128 = 0;
    uint64_t v125 = 0;
    uint64_t v126 = 0;
  }
LABEL_43:
  MEMORY[0x270FA5388](result);
  v186[-2] = v215;
  uint64_t v136 = v135;
  uint64_t v137 = v213;
  LODWORD(v204) = sub_253CA5984((void (*)(uint64_t *__return_ptr, unsigned char *))sub_253CAE250, (uint64_t)&v186[-4], 0, v128, v125, v126);
  uint64_t v138 = sub_253CAE26C(0, v128, v125);
  MEMORY[0x270FA5388](v138);
  sub_253CAF05C();
  uint64_t v139 = (uint64_t)v206;
  uint64_t v203 = v120;
  uint64_t v210 = (_DWORD *)v136;
  uint64_t v188 = v127;
  sub_253CA5A30((void (*)(unsigned char *))sub_253CAE2B0, v50, v120, v136, v127, (uint64_t)v206);
  uint64_t v140 = v139;
  sub_253DF1790();
  uint64_t v141 = (uint64_t)v219;
  uint64_t v142 = v195;
  sub_253CAEC70((uint64_t)v219, v195, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
  uint64_t v143 = v196;
  sub_253C2E770(v139, v196, &qword_269D7CC38);
  uint64_t v144 = sub_253DF2490();
  os_log_type_t v145 = sub_253DF56C0();
  BOOL v146 = os_log_type_enabled(v144, v145);
  uint64_t v213 = v137;
  if (v146)
  {
    uint64_t v147 = v142;
    uint64_t v148 = swift_slowAlloc();
    uint64_t v211 = swift_slowAlloc();
    uint64_t v222 = v211;
    *(_DWORD *)uint64_t v148 = 136315394;
    uint64_t v187 = (uint8_t *)(v148 + 4);
    uint64_t v149 = v220;
    sub_253DEFFE0();
    sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
    uint64_t v150 = sub_253DF5C40();
    uint64_t v221 = sub_253CAEF6C(v150, v151);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    sub_253CAECE0(v147, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    *(_WORD *)(v148 + 12) = 2080;
    sub_253C2E770(v143, v189, &qword_269D7CC38);
    uint64_t v152 = sub_253DF5290();
    uint64_t v221 = sub_253D8E5FC(v152, v153, &v222);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    uint64_t v141 = (uint64_t)v219;
    sub_253BDF664(v143, &qword_269D7CC38);
    _os_log_impl(&dword_253BD8000, v144, v145, "The task execution result for statementId=%s is %s", (uint8_t *)v148, 0x16u);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();

    uint64_t v154 = v186[0];
    uint64_t v155 = (uint64_t)v198;
    sub_253C0F824();
    ((void (*)(void))v155)();
  }
  else
  {
    sub_253CAECE0(v142, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    sub_253BDF664(v143, &qword_269D7CC38);

    uint64_t v154 = v186[0];
    uint64_t v155 = (uint64_t)v198;
    sub_253C0F824();
    ((void (*)(void))v155)();
    uint64_t v149 = v220;
  }
  uint64_t v156 = v191;
  uint64_t v157 = v141 + *(int *)(v149 + 20);
  sub_253CA872C(v157, v218, v204, v139, v208);
  uint64_t v211 = v157;
  if (v210)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unsigned __int8 v158 = v203;
  }
  else
  {
    unsigned __int8 v158 = 3;
  }
  uint64_t v159 = v209;
  uint64_t v160 = v215;
  sub_253CA9104(v141, (uint64_t)v209, v158, v140, v205);
  uint64_t v161 = sub_253BDF5F8(v159, v159[3]);
  uint64_t v162 = sub_253CAE2CC(v141, v156, (uint64_t)v161, v160);
  sub_253CA9334(v141, v207);
  uint64_t v163 = v201;
  sub_253DF1790();
  uint64_t v164 = v197;
  sub_253CAEC70(v141, v197, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
  swift_bridgeObjectRetain_n();
  uint64_t v165 = v163;
  unint64_t v166 = sub_253DF2490();
  os_log_type_t v167 = sub_253DF56C0();
  uint64_t v168 = v167;
  if (os_log_type_enabled(v166, v167))
  {
    uint64_t v155 = swift_slowAlloc();
    uint64_t v154 = swift_slowAlloc();
    uint64_t v222 = v154;
    *(_DWORD *)uint64_t v155 = 136315394;
    sub_253DEFFE0();
    sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
    uint64_t v169 = sub_253DF5C40();
    uint64_t v221 = sub_253CAEF6C(v169, v170);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    sub_253CAECE0(v164, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    *(_WORD *)(v155 + 12) = 2080;
    uint64_t v165 = v155 + 14;
    uint64_t v171 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
    uint64_t v172 = swift_bridgeObjectRetain();
    uint64_t v173 = MEMORY[0x25A26F710](v172, v171);
    unint64_t v175 = v174;
    swift_bridgeObjectRelease();
    uint64_t v176 = v173;
    uint64_t v177 = v207;
    uint64_t v221 = sub_253D8E5FC(v176, v175, &v222);
    uint64_t v178 = v205;
    sub_253DF5820();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_253BD8000, v166, (os_log_type_t)v168, "The inferred candidate evaluations for statementId=%s: %s", (uint8_t *)v155, 0x16u);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();

    sub_253C63748();
    sub_253CAEEE4();
    v179();
    sub_253BDF664((uint64_t)v206, &qword_269D7CC38);
    sub_253CAECE0(v214, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
    sub_253CAEF00();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    sub_253CAECE0(v164, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    sub_253C0F824();
    ((void (*)(void))v155)();
    sub_253BDF664((uint64_t)v206, &qword_269D7CC38);
    sub_253CAECE0(v214, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
    sub_253CAEF00();
    uint64_t v178 = v205;
    uint64_t v177 = v207;
  }
  sub_253CAEC70((uint64_t)v219, v165, MEMORY[0x263F4CE38]);
  sub_253DEFE90();
  sub_253BDF7F0();
  sub_253C8F190();
  v180();
  uint64_t v181 = (int *)type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  uint64_t v182 = v155 + v181[5];
  sub_253DEFFE0();
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v183 + 16))(v182, v211);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v154 + 32))(v155 + v181[6], v177, v168);
  *(void *)(v155 + v181[7]) = v162;
  sub_253CAED38(v178, v155 + v181[8], (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  uint64_t result = sub_253CAED38(v208, v155 + v181[9], (void (*)(void))type metadata accessor for FeedbackLearning.TaskOutcome);
  uint64_t v184 = v155 + v181[10];
  *(unsigned char *)uint64_t v184 = (_BYTE)v216;
  *(unsigned char *)(v184 + 8) = v218;
  BOOL v185 = v217;
  *(void *)(v184 + 16) = v212;
  *(void *)(v184 + 24) = v185;
  return result;
}

uint64_t FeedbackLearning.TaskEvaluator.init(toolbox:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_253DF42A0();
  sub_253C0F830();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v4);
  if (qword_26B255938 != -1) {
    swift_once();
  }
  sub_253C1601C((uint64_t)&byte_26B2575C0, (uint64_t)v14);
  sub_253C0F824();
  v10();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v9, v4);
  uint64_t v11 = type metadata accessor for FeedbackLearning.TaskEvaluator();
  return sub_253BDB0E4(v14, a2 + *(int *)(v11 + 20));
}

uint64_t type metadata accessor for FeedbackLearning.TaskEvaluator()
{
  uint64_t result = qword_26B255680;
  if (!qword_26B255680) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FeedbackLearning.TaskEvaluator.evaluateTasks(transcript:)(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = sub_253DEFE90();
  sub_253BDF9FC(v3);
  v2[4] = sub_253BDF868();
  uint64_t v4 = sub_253DF14C0();
  sub_253BDF9FC(v4);
  v2[5] = sub_253BDF868();
  uint64_t v5 = sub_253DF3E70();
  v2[6] = v5;
  sub_253BDF7B0(v5);
  v2[7] = v6;
  v2[8] = sub_253BDF868();
  uint64_t v7 = _s19TranscriptRetrieverVMa();
  sub_253BDF9FC(v7);
  v2[9] = sub_253BDF868();
  uint64_t v8 = sub_253DF42A0();
  v2[10] = v8;
  sub_253BDF7B0(v8);
  v2[11] = v9;
  v2[12] = sub_253BDF868();
  return MEMORY[0x270FA2498](sub_253CA76B8, 0, 0);
}

uint64_t sub_253CA76B8()
{
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[7];
  uint64_t v20 = v0[8];
  uint64_t v16 = v0[6];
  uint64_t v17 = v0[9];
  uint64_t v19 = v0[5];
  uint64_t v5 = v0[3];
  uint64_t v18 = v0[4];
  uint64_t v6 = v0[2];
  _s22TaskCandidateEvaluatorCMa(0);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  v7(v1, v5, v3);
  uint64_t v8 = (char *)sub_253C94B0C(v1);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v20, v6, v16);
  v7(v1, v5, v3);
  sub_253CEAA18(v20, v1, v17);
  uint64_t v9 = sub_253DF3E40();
  uint64_t v10 = sub_253CACDC0(v9, v17, v8);
  swift_bridgeObjectRelease();
  sub_253DF3E60();
  MEMORY[0x25A26B7F0](v18);
  sub_253DF3E40();
  sub_253CFDB54();
  swift_bridgeObjectRelease();
  sub_253CAECE0(v19, MEMORY[0x263F4CE38]);
  uint64_t v11 = (void *)swift_task_alloc();
  v11[2] = v5;
  v11[3] = v17;
  v11[4] = v10;
  sub_253C57698();
  uint64_t v13 = v12;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_253CAECE0(v17, (void (*)(void))_s19TranscriptRetrieverVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  return v14(v13);
}

uint64_t sub_253CA7914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v9 = type metadata accessor for FeedbackLearning.FlowTask(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = sub_253DF24A0();
  uint64_t v40 = *(void *)(v15 - 8);
  uint64_t v41 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v43[3] = _s19TranscriptRetrieverVMa();
  v43[4] = (uint64_t)&off_270361158;
  uint64_t v17 = sub_253BDEE6C(v43);
  sub_253CAEC70(a2, (uint64_t)v17, (void (*)(void))_s19TranscriptRetrieverVMa);
  sub_253CA5E00(a1, (uint64_t)v43, a3, a4);
  if (v4)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v43);
    sub_253DF1790();
    sub_253CAEC70(a1, (uint64_t)v14, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    sub_253CAEC70(a1, (uint64_t)v12, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
    id v18 = v4;
    id v19 = v4;
    uint64_t v20 = sub_253DF2490();
    os_log_type_t v21 = sub_253DF56E0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v39 = a4;
      uint64_t v23 = v22;
      uint64_t v37 = (void *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      v43[0] = v38;
      *(_DWORD *)uint64_t v23 = 136315650;
      sub_253DEFFE0();
      sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v24 = sub_253DF5C40();
      uint64_t v44 = sub_253D8E5FC(v24, v25, v43);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253CAECE0((uint64_t)v14, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v26 = sub_253DEFE40();
      uint64_t v44 = sub_253D8E5FC(v26, v27, v43);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253CAECE0((uint64_t)v12, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
      *(_WORD *)(v23 + 22) = 2112;
      id v28 = v4;
      uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v44 = v29;
      sub_253DF5820();
      uint64_t v30 = v37;
      *uint64_t v37 = v29;

      _os_log_impl(&dword_253BD8000, v20, v21, "Failed to evaluate flow action with statementId=%s in session %s: %@", (uint8_t *)v23, 0x20u);
      sub_253BDEDD8(&qword_26B2519F0);
      uint64_t v31 = 1;
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v30, -1, -1);
      uint64_t v32 = v38;
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v32, -1, -1);
      uint64_t v33 = v23;
      a4 = v39;
      MEMORY[0x25A2709B0](v33, -1, -1);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
    }
    else
    {

      sub_253CAECE0((uint64_t)v14, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
      sub_253CAECE0((uint64_t)v12, (void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v42, v41);
      uint64_t v31 = 1;
    }
  }
  else
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v43);
    uint64_t v31 = 0;
  }
  uint64_t v34 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a4, v31, 1, v34);
}

uint64_t sub_253CA7E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_253DF14C0();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253CAEC70(a1, (uint64_t)v6, MEMORY[0x263F4CE38]);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowTask(0) + 20);
  uint64_t v8 = (int *)type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  sub_253CA9334(a1, a2 + v8[6]);
  uint64_t v9 = a2 + v8[8];
  uint64_t v10 = sub_253BDEDD8(&qword_269D7C728);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v9, 1, 1, v10);
  uint64_t v11 = a2 + v8[9];
  uint64_t v12 = sub_253BDEDD8(&qword_269D7C770);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v11, 1, 4, v12);
  *(unsigned char *)(v11 + *(int *)(type metadata accessor for FeedbackLearning.TaskOutcome(0) + 20)) = 3;
  uint64_t v13 = sub_253DEFE90();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a2, v6, v13);
  uint64_t v14 = a2 + v8[5];
  uint64_t v15 = sub_253DEFFE0();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v7, v15);
  uint64_t v17 = MEMORY[0x263F8EE78];
  *(void *)(a2 + v8[7]) = MEMORY[0x263F8EE78];
  uint64_t v18 = a2 + v8[10];
  *(unsigned char *)uint64_t v18 = 1;
  *(unsigned char *)(v18 + 8) = 0;
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v17;
  return result;
}

uint64_t sub_253CA7FE4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = _s19EvaluatorVoteSourceOMa(0);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - v9;
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v16 = (char *)&v23 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  unint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v24 = (char *)v14;
    uint64_t v25 = v13;
    uint64_t v26 = a2;
    uint64_t v27 = v2;
    uint64_t v19 = v17 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v20 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain();
    os_log_type_t v21 = 0;
    while (1)
    {
      sub_253CAEC70(v19, (uint64_t)v16, (void (*)(void))_s19EvaluatorVoteSourceOMa);
      sub_253CAEC70((uint64_t)v16, (uint64_t)v10, (void (*)(void))_s19EvaluatorVoteSourceOMa);
      if (swift_getEnumCaseMultiPayload() == 1) {
        break;
      }
      swift_bridgeObjectRetain();
      sub_253CAECE0((uint64_t)v10, (void (*)(void))_s19EvaluatorVoteSourceOMa);
      sub_253CAECE0((uint64_t)v16, (void (*)(void))_s19EvaluatorVoteSourceOMa);
      swift_bridgeObjectRelease();
      ++v21;
      v19 += v20;
      if ((char *)v18 == v21) {
        goto LABEL_8;
      }
    }
    sub_253CAECE0((uint64_t)v16, (void (*)(void))_s19EvaluatorVoteSourceOMa);
    if ((char *)v18 == v21)
    {
LABEL_8:
      char v22 = 3;
LABEL_12:
      a2 = v26;
      uint64_t result = swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    if ((unint64_t)v21 >= v18)
    {
      __break(1u);
    }
    else
    {
      unint64_t v18 = v25;
      sub_253CAEC70(v19, v25, (void (*)(void))_s19EvaluatorVoteSourceOMa);
      os_log_type_t v21 = v24;
      sub_253CAEC70(v18, (uint64_t)v24, (void (*)(void))_s19EvaluatorVoteSourceOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        char v22 = *v21;
        sub_253CAECE0(v18, (void (*)(void))_s19EvaluatorVoteSourceOMa);
        goto LABEL_12;
      }
    }
    sub_253CAECE0((uint64_t)v21, (void (*)(void))_s19EvaluatorVoteSourceOMa);
    uint64_t result = sub_253CAECE0(v18, (void (*)(void))_s19EvaluatorVoteSourceOMa);
    __break(1u);
  }
  else
  {
    char v22 = 3;
LABEL_13:
    *a2 = v22;
  }
  return result;
}

uint64_t sub_253CA82D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v45 = _s24StatementExecutionResultOMa(0);
  MEMORY[0x270FA5388](v45);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = _s19EvaluatorVoteSourceOMa(0);
  uint64_t v8 = *(void *)(v44 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v44);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v46 = (uint64_t)&v36 - v12;
  uint64_t v13 = sub_253BDEDD8(&qword_269D7CC38);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v39 = (uint64_t)&v36 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v36 - v18;
  MEMORY[0x270FA5388](v17);
  char v22 = (char *)&v36 - v21;
  uint64_t v23 = *(void *)(a1 + 16);
  unint64_t v24 = *(void *)(v23 + 16);
  if (!v24)
  {
    swift_bridgeObjectRetain();
    uint64_t v31 = 1;
LABEL_15:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, v31, 1, v45);
    return swift_bridgeObjectRelease();
  }
  uint64_t v37 = v7;
  uint64_t v38 = v20;
  uint64_t v40 = a2;
  uint64_t v41 = v3;
  uint64_t v25 = v23 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  uint64_t v43 = *(void *)(v8 + 72);
  swift_bridgeObjectRetain();
  unint64_t v26 = 0;
  uint64_t v42 = v11;
  while (1)
  {
    uint64_t v27 = v46;
    sub_253CAEC70(v25, v46, (void (*)(void))_s19EvaluatorVoteSourceOMa);
    sub_253CAEC70(v27, (uint64_t)v11, (void (*)(void))_s19EvaluatorVoteSourceOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = v45;
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v19, 1, 1, v45);
      swift_bridgeObjectRetain();
      sub_253CAECE0((uint64_t)v11, (void (*)(void))_s19EvaluatorVoteSourceOMa);
    }
    else
    {
      sub_253CAED38((uint64_t)v11, (uint64_t)v19, (void (*)(void))_s24StatementExecutionResultOMa);
      uint64_t v28 = v45;
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v19, 0, 1, v45);
      swift_bridgeObjectRetain();
    }
    sub_253CAEC1C((uint64_t)v19, (uint64_t)v22, &qword_269D7CC38);
    sub_253CAECE0(v46, (void (*)(void))_s19EvaluatorVoteSourceOMa);
    swift_bridgeObjectRelease();
    int v29 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v22, 1, v28);
    uint64_t result = sub_253BDF664((uint64_t)v22, &qword_269D7CC38);
    if (v29 != 1) {
      break;
    }
    ++v26;
    uint64_t v11 = v42;
    v25 += v43;
    if (v24 == v26) {
      goto LABEL_11;
    }
  }
  if (v24 == v26)
  {
LABEL_11:
    uint64_t v31 = 1;
    a2 = v40;
    goto LABEL_15;
  }
  if (v26 >= v24)
  {
    __break(1u);
  }
  else
  {
    uint64_t v32 = v39;
    sub_253CAA948(v25, v39);
    uint64_t v33 = v38;
    sub_253C2E770(v32, v38, &qword_269D7CC38);
    uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v33, 1, v45);
    if (result != 1)
    {
      uint64_t v34 = v33;
      uint64_t v35 = (uint64_t)v37;
      sub_253CAED38(v34, (uint64_t)v37, (void (*)(void))_s24StatementExecutionResultOMa);
      sub_253BDF664(v32, &qword_269D7CC38);
      a2 = v40;
      sub_253CAED38(v35, v40, (void (*)(void))_s24StatementExecutionResultOMa);
      uint64_t v31 = 0;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_253CA872C@<X0>(uint64_t a1@<X0>, unsigned __int8 a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v67 = a4;
  int v73 = a3;
  uint64_t v71 = a1;
  uint64_t v72 = a5;
  int v5 = a2;
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v63 = (char *)&v62 - v11;
  uint64_t v12 = sub_253DF24A0();
  uint64_t v68 = *(void *)(v12 - 8);
  uint64_t v69 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v70 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  int v66 = (char *)&v62 - v15;
  uint64_t v16 = _s23StatementFailureOutcomeVMa(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  os_log_type_t v65 = (char *)&v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v64 = (uint64_t)&v62 - v22;
  uint64_t v23 = sub_253BDEDD8(&qword_269D7CC38);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v25 = (char *)&v62 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = _s24StatementExecutionResultOMa(0);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  int v29 = (char *)&v62 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v62 - v30;
  if (!v5)
  {
    sub_253DF1790();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, v71, v6);
    uint64_t v43 = sub_253DF2490();
    os_log_type_t v44 = sub_253DF56D0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v75 = v46;
      *(_DWORD *)uint64_t v45 = 136315138;
      sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v47 = sub_253DF5C40();
      uint64_t v74 = sub_253D8E5FC(v47, v48, &v75);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      _os_log_impl(&dword_253BD8000, v43, v44, "The final task evaluation vote is abstain, not setting task status for %s", v45, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v46, -1, -1);
      MEMORY[0x25A2709B0](v45, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }

    (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v69);
    goto LABEL_12;
  }
  uint64_t v32 = v71;
  sub_253C2E770(v67, (uint64_t)v25, &qword_269D7CC38);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v25, 1, v26) == 1)
  {
    sub_253BDF664((uint64_t)v25, &qword_269D7CC38);
    uint64_t v33 = v66;
    sub_253DF1790();
    uint64_t v34 = v63;
    uint64_t v35 = v6;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v63, v32, v6);
    uint64_t v36 = sub_253DF2490();
    os_log_type_t v37 = sub_253DF56E0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = v34;
      uint64_t v40 = swift_slowAlloc();
      uint64_t v75 = v40;
      *(_DWORD *)uint64_t v38 = 136315138;
      sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v41 = sub_253DF5C40();
      uint64_t v74 = sub_253D8E5FC(v41, v42, &v75);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v35);
      _os_log_impl(&dword_253BD8000, v36, v37, "The task outcome cannot be determined, action execution result was not set for %s", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v40, -1, -1);
      MEMORY[0x25A2709B0](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v66, v69);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v6);

      (*(void (**)(char *, uint64_t))(v68 + 8))(v33, v69);
    }
LABEL_12:
    uint64_t v53 = v72;
    uint64_t v54 = sub_253BDEDD8(&qword_269D7C770);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v53, 1, 4, v54);
    goto LABEL_19;
  }
  sub_253CAED38((uint64_t)v25, (uint64_t)v31, (void (*)(void))_s24StatementExecutionResultOMa);
  sub_253CAEC70((uint64_t)v31, (uint64_t)v29, (void (*)(void))_s24StatementExecutionResultOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253CAECE0((uint64_t)v31, (void (*)(void))_s24StatementExecutionResultOMa);
      uint64_t v49 = sub_253BDEDD8(&qword_269D7C770);
      uint64_t v50 = (uint64_t)v65;
      uint64_t v51 = (uint64_t)v65;
      uint64_t v52 = 3;
      goto LABEL_17;
    case 2u:
      sub_253CAED38((uint64_t)v29, (uint64_t)v18, (void (*)(void))_s23StatementFailureOutcomeVMa);
      uint64_t v50 = (uint64_t)v65;
      sub_253DF0130();
      sub_253CAECE0((uint64_t)v18, (void (*)(void))_s23StatementFailureOutcomeVMa);
      sub_253CAECE0((uint64_t)v31, (void (*)(void))_s24StatementExecutionResultOMa);
      type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = sub_253BDEDD8(&qword_269D7C770);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v50, 0, 4, v55);
      goto LABEL_18;
    case 3u:
      sub_253CAECE0((uint64_t)v31, (void (*)(void))_s24StatementExecutionResultOMa);
      uint64_t v56 = &v29[*(int *)(sub_253BDEDD8(&qword_269D7C748) + 48)];
      uint64_t v57 = sub_253DF2C40();
      uint64_t v50 = (uint64_t)v65;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v65, v56, v57);
      type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v58 = sub_253BDEDD8(&qword_269D7C770);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v50, 0, 4, v58);
      sub_253BDF664((uint64_t)v29, &qword_269D7C750);
      goto LABEL_18;
    case 4u:
      sub_253CAECE0((uint64_t)v31, (void (*)(void))_s24StatementExecutionResultOMa);
      uint64_t v49 = sub_253BDEDD8(&qword_269D7C770);
      uint64_t v50 = (uint64_t)v65;
      uint64_t v51 = (uint64_t)v65;
      uint64_t v52 = 4;
      goto LABEL_17;
    default:
      sub_253CAECE0((uint64_t)v31, (void (*)(void))_s24StatementExecutionResultOMa);
      uint64_t v49 = sub_253BDEDD8(&qword_269D7C770);
      uint64_t v50 = (uint64_t)v65;
      uint64_t v51 = (uint64_t)v65;
      uint64_t v52 = 2;
LABEL_17:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v51, v52, 4, v49);
      sub_253CAECE0((uint64_t)v29, (void (*)(void))_s24StatementExecutionResultOMa);
LABEL_18:
      uint64_t v59 = v64;
      sub_253CAED38(v50, v64, (void (*)(void))type metadata accessor for FeedbackLearning.TaskStatus);
      uint64_t v60 = v59;
      uint64_t v53 = v72;
      sub_253CAED38(v60, v72, (void (*)(void))type metadata accessor for FeedbackLearning.TaskStatus);
      break;
  }
LABEL_19:
  uint64_t result = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *(unsigned char *)(v53 + *(int *)(result + 20)) = v73;
  return result;
}

uint64_t sub_253CA9104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int v9 = a3;
  uint64_t v10 = sub_253BDEDD8(&qword_269D7CC38);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = _s24StatementExecutionResultOMa(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v9 != 3)
  {
    sub_253C2E770(a4, (uint64_t)v12, &qword_269D7CC38);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v13) == 1)
    {
      sub_253BDF664((uint64_t)v12, &qword_269D7CC38);
    }
    else
    {
      sub_253CAED38((uint64_t)v12, (uint64_t)v15, (void (*)(void))_s24StatementExecutionResultOMa);
      if ((v9 - 1) <= 1)
      {
        sub_253CAAA70(a1, a2, a5);
        sub_253CAECE0((uint64_t)v15, (void (*)(void))_s24StatementExecutionResultOMa);
        uint64_t v18 = sub_253BDEDD8(&qword_269D7C728);
        uint64_t v19 = a5;
        uint64_t v20 = 0;
        return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v19, v20, 1, v18);
      }
      sub_253CAECE0((uint64_t)v15, (void (*)(void))_s24StatementExecutionResultOMa);
    }
    uint64_t v18 = sub_253BDEDD8(&qword_269D7C728);
    uint64_t v19 = a5;
    uint64_t v20 = 1;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v19, v20, 1, v18);
  }
  uint64_t v16 = sub_253BDEDD8(&qword_269D7C728);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a5, 1, 1, v16);
}

uint64_t sub_253CA9334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v149 = (char *)a1;
  uint64_t v122 = a2;
  uint64_t v2 = sub_253BDEDD8(&qword_269D7CC48);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v103 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_253DF24A0();
  uint64_t v117 = *(void *)(v118 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v118);
  uint64_t v7 = (char *)&v103 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v113 = (char *)&v103 - v8;
  uint64_t v131 = sub_253DEFE20();
  uint64_t v116 = *(void *)(v131 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v131);
  uint64_t v11 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v114 = (char *)&v103 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v106 = (char *)&v103 - v14;
  uint64_t v120 = sub_253DF4420();
  unint64_t v145 = *(void *)(v120 - 8);
  MEMORY[0x270FA5388](v120);
  int v119 = (char *)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_253DEFFE0();
  uint64_t v140 = *(void (***)(char *, uint64_t))(v153 - 8);
  MEMORY[0x270FA5388](v153);
  unint64_t v151 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_253DF32F0();
  uint64_t v130 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  uint64_t v150 = (char *)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_253DF4040();
  uint64_t v139 = *(char **)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  unint64_t v129 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_253DF41F0();
  uint64_t v148 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v143 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_253DF4230();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v110 = (char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v147 = (char *)&v103 - v24;
  uint64_t v25 = sub_253BDEDD8(&qword_26B2552B0);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v112 = (uint64_t)&v103 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v109 = (uint64_t)&v103 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v107 = (uint64_t)&v103 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v108 = (uint64_t)&v103 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v144 = (uint64_t)&v103 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v115 = (uint64_t)&v103 - v36;
  uint64_t v37 = sub_253BDEDD8(&qword_26B2555D8);
  MEMORY[0x270FA5388](v37 - 8);
  uint64_t v39 = (char *)&v103 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for FeedbackLearning.FlowExpression(0);
  uint64_t v41 = MEMORY[0x270FA5388](v40);
  uint64_t v43 = (char *)&v103 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v41);
  uint64_t v46 = (char *)&v103 - v45;
  MEMORY[0x270FA5388](v44);
  unint64_t v48 = (char *)&v103 - v47;
  uint64_t v49 = type metadata accessor for FeedbackLearning.FlowTask(0);
  sub_253D227DC(*(void *)&v149[*(int *)(v49 + 24)]);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v39, 1, v40) == 1)
  {
    sub_253BDF664((uint64_t)v39, &qword_26B2555D8);
    sub_253DF1790();
    uint64_t v50 = sub_253DF2490();
    os_log_type_t v51 = sub_253DF56E0();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl(&dword_253BD8000, v50, v51, "The task start expression could not be retrieved, using the current time", v52, 2u);
      MEMORY[0x25A2709B0](v52, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v117 + 8))(v7, v118);
    sub_253DEFE10();
    uint64_t v53 = sub_253DF2980();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v4, 1, 1, v53);
    return sub_253DF25F0();
  }
  os_log_type_t v105 = v11;
  uint64_t v104 = v4;
  sub_253CAED38((uint64_t)v39, (uint64_t)v48, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  uint64_t v55 = *(void *)&v48[*(int *)(v40 + 20)];
  sub_253CAEC70((uint64_t)v48, (uint64_t)v46, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  int v103 = v48;
  uint64_t v149 = v43;
  sub_253CAEC70((uint64_t)v48, (uint64_t)v43, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  uint64_t v56 = *(void *)(v55 + 16);
  uint64_t v146 = v55;
  uint64_t v142 = v56;
  if (v56)
  {
    uint64_t v57 = v21 + 16;
    uint64_t v141 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
    uint64_t v138 = v55 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v58 = *(void *)(v21 + 72);
    uint64_t v136 = (uint64_t (**)(char *, uint64_t))(v148 + 88);
    uint64_t v137 = v58;
    uint64_t v126 = (void (**)(char *, uint64_t))(v148 + 8);
    uint64_t v125 = (void (**)(char *, uint64_t))(v148 + 96);
    uint64_t v124 = (void (**)(char *, char *, uint64_t))(v139 + 32);
    uint64_t v148 = v130 + 16;
    int v135 = *MEMORY[0x263F4DE90];
    uint64_t v59 = v140 + 1;
    uint64_t v60 = (void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v111 = (void (**)(char *, uint64_t))(v145 + 8);
    unsigned int v123 = (void (**)(char *, uint64_t))(v139 + 8);
    uint64_t v140 = (void (**)(char *, uint64_t))(v57 - 8);
    swift_bridgeObjectRetain();
    unint64_t v61 = 0;
    uint64_t v62 = v131;
    uint64_t v63 = v129;
    uint64_t v64 = v128;
    uint64_t v139 = v46;
    uint64_t v121 = v20;
    uint64_t v127 = v57;
    while (1)
    {
      unint64_t v145 = v61;
      uint64_t v65 = v138 + v137 * v61;
      v141(v147, v65, v20);
      swift_bridgeObjectRetain();
      int v66 = v143;
      sub_253DF4200();
      int v67 = (*v136)(v66, v64);
      uint64_t v134 = v65;
      if (v67 == v135)
      {
        (*v125)(v66, v64);
        uint64_t v68 = v66;
        uint64_t v69 = v133;
        (*v124)(v63, v68, v133);
        uint64_t v70 = sub_253DF4000();
        uint64_t v71 = *(void *)(v70 + 16);
        if (v71)
        {
          unint64_t v72 = (*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
          uint64_t v132 = v70;
          unint64_t v73 = v70 + v72;
          uint64_t v74 = *(void *)(v130 + 72);
          uint64_t v75 = *(void (**)(char *, unint64_t, uint64_t))(v130 + 16);
          while (1)
          {
            uint64_t v76 = v150;
            uint64_t v77 = v152;
            v75(v150, v73, v152);
            os_log_type_t v78 = v151;
            sub_253DF32E0();
            char v79 = sub_253DEFFB0();
            (*v59)(v78, v153);
            (*v60)(v76, v77);
            if (v79) {
              break;
            }
            v73 += v74;
            if (!--v71)
            {
              swift_bridgeObjectRelease();
              uint64_t v62 = v131;
              uint64_t v69 = v133;
              uint64_t v20 = v121;
              uint64_t v63 = v129;
              uint64_t v64 = v128;
              goto LABEL_15;
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v81 = v119;
          sub_253DF4220();
          uint64_t v80 = v144;
          sub_253DF4410();
          (*v111)(v81, v120);
          uint64_t v63 = v129;
          (*v123)(v129, v133);
          uint64_t v62 = v131;
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v80, 0, 1, v131);
          uint64_t v20 = v121;
          uint64_t v64 = v128;
        }
        else
        {
          swift_bridgeObjectRelease();
LABEL_15:
          (*v123)(v63, v69);
          uint64_t v80 = v144;
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v144, 1, 1, v62);
        }
      }
      else
      {
        uint64_t v80 = v144;
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v144, 1, 1, v62);
        (*v126)(v66, v64);
      }
      uint64_t v82 = *v140;
      (*v140)(v147, v20);
      swift_bridgeObjectRelease();
      int v83 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v80, 1, v62);
      sub_253BDF664(v80, &qword_26B2552B0);
      if (v83 != 1) {
        break;
      }
      unint64_t v61 = v145 + 1;
      uint64_t v46 = v139;
      if (v145 + 1 == v142) {
        goto LABEL_22;
      }
    }
    uint64_t v46 = v139;
    if (v145 != v142)
    {
      if (v145 >= *(void *)(v146 + 16))
      {
        __break(1u);
      }
      else
      {
        uint64_t v96 = (uint64_t)v110;
        v141(v110, v134, v20);
        uint64_t v97 = v107;
        sub_253CAC96C(v96, v107);
        sub_253CAECE0((uint64_t)v46, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
        v82((char *)v96, v20);
        uint64_t v98 = v108;
        sub_253CAEC1C(v97, v108, &qword_26B2552B0);
        uint64_t v99 = v109;
        sub_253C2E770(v98, v109, &qword_26B2552B0);
        int v100 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v99, 1, v62);
        uint64_t v86 = v105;
        uint64_t v87 = v116;
        uint64_t v84 = v115;
        if (v100 != 1)
        {
          uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t))(v116 + 32);
          uint64_t v102 = v106;
          v101(v106, v99, v62);
          sub_253BDF664(v98, &qword_26B2552B0);
          v101((char *)v84, (uint64_t)v102, v62);
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v84, 0, 1, v62);
          swift_bridgeObjectRelease();
          uint64_t v85 = (uint64_t)v104;
          goto LABEL_23;
        }
      }
      uint64_t result = sub_253CAECE0((uint64_t)v149, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
      __break(1u);
      return result;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v62 = v131;
  }
LABEL_22:
  sub_253CAECE0((uint64_t)v46, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  uint64_t v84 = v115;
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v115, 1, 1, v62);
  swift_bridgeObjectRelease();
  uint64_t v85 = (uint64_t)v104;
  uint64_t v86 = v105;
  uint64_t v87 = v116;
LABEL_23:
  sub_253CAECE0((uint64_t)v149, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  uint64_t v88 = v112;
  sub_253C2E770(v84, v112, &qword_26B2552B0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v88, 1, v62) == 1)
  {
    sub_253BDF664(v88, &qword_26B2552B0);
    sub_253DF1790();
    uint64_t v89 = sub_253DF2490();
    os_log_type_t v90 = sub_253DF56E0();
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v91 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v91 = 0;
      _os_log_impl(&dword_253BD8000, v89, v90, "The task occurred time could not be retrieved, using the current time", v91, 2u);
      uint64_t v92 = v91;
      uint64_t v87 = v116;
      MEMORY[0x25A2709B0](v92, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v117 + 8))(v113, v118);
    unint64_t v93 = v114;
    sub_253DEFE10();
  }
  else
  {
    unint64_t v93 = v114;
    (*(void (**)(char *, uint64_t, uint64_t))(v87 + 32))(v114, v88, v62);
  }
  uint64_t v94 = (uint64_t)v103;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v86, v93, v62);
  uint64_t v95 = sub_253DF2980();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v85, 1, 1, v95);
  sub_253DF25F0();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v93, v62);
  sub_253BDF664(v84, &qword_26B2552B0);
  return sub_253CAECE0(v94, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
}

uint64_t sub_253CAA408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v41 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v40 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253DF24A0();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253BDEDD8(&qword_269D7CC18);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowTask(0) + 32));
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v39 = (char *)v11;
    uint64_t v20 = v6;
    uint64_t v21 = v10;
    uint64_t v22 = a3;
    uint64_t v23 = v18 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v24 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_253CAEC70(v23, (uint64_t)v14, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
      if (sub_253DEFE60()) {
        break;
      }
      sub_253CAECE0((uint64_t)v14, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
      v23 += v24;
      if (!--v19)
      {
        uint64_t v25 = 1;
        goto LABEL_8;
      }
    }
    sub_253CAED38((uint64_t)v14, (uint64_t)v17, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
    uint64_t v25 = 0;
LABEL_8:
    a3 = v22;
    uint64_t v10 = v21;
    uint64_t v6 = v20;
    uint64_t v11 = (uint64_t)v39;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = 1;
  }
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, v25, 1, v11);
  swift_bridgeObjectRelease();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v11) == 1)
  {
    sub_253BDF664((uint64_t)v17, &qword_269D7CC18);
    sub_253DF1790();
    uint64_t v27 = v40;
    uint64_t v26 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v40, a2, v6);
    uint64_t v28 = sub_253DF2490();
    os_log_type_t v29 = sub_253DF56E0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = v27;
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v45 = v32;
      uint64_t v38 = a3;
      uint64_t v39 = v10;
      *(_DWORD *)uint64_t v31 = 136315138;
      v37[1] = v31 + 4;
      sub_253CAEBD4((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
      uint64_t v33 = sub_253DF5C40();
      uint64_t v44 = sub_253D8E5FC(v33, v34, &v45);
      a3 = v38;
      sub_253DF5820();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v6);
      _os_log_impl(&dword_253BD8000, v28, v29, "The referenced created action event cannot be found, actionEventId=%s", v31, 0xCu);
      uint64_t v35 = 1;
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v32, -1, -1);
      MEMORY[0x25A2709B0](v31, -1, -1);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v39, v43);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v6);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v43);
      uint64_t v35 = 1;
    }
  }
  else
  {
    sub_253CAED38((uint64_t)v17, a3, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
    uint64_t v35 = 0;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a3, v35, 1, v11);
}

uint64_t sub_253CAA948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = _s19EvaluatorVoteSourceOMa(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253CAEC70(a1, (uint64_t)v6, (void (*)(void))_s19EvaluatorVoteSourceOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = _s24StatementExecutionResultOMa(0);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, 1, 1, v7);
    return sub_253CAECE0((uint64_t)v6, (void (*)(void))_s19EvaluatorVoteSourceOMa);
  }
  else
  {
    sub_253CAED38((uint64_t)v6, a2, (void (*)(void))_s24StatementExecutionResultOMa);
    uint64_t v9 = _s24StatementExecutionResultOMa(0);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a2, 0, 1, v9);
  }
}

uint64_t sub_253CAAA70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v34 = a1;
  uint64_t v4 = sub_253BDEDD8(&qword_26B2555D8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253BDEDD8(&qword_269D7CC18);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_253DEFE90();
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s28StatementResolutionReferenceOMa(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253BDEDD8(&qword_269D7CC08);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = _s20TaskStatementOutcomeOMa(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253CAAEE4((uint64_t)v17);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v18) == 1)
  {
    sub_253BDF664((uint64_t)v17, &qword_269D7CC08);
    uint64_t v21 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    uint64_t v22 = a3;
    uint64_t v23 = 1;
  }
  else
  {
    uint64_t v33 = a3;
    sub_253CAED38((uint64_t)v17, (uint64_t)v20, (void (*)(void))_s20TaskStatementOutcomeOMa);
    sub_253CD9D00((uint64_t)v14);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = v35;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v11, v14, v37);
      uint64_t v25 = v34;
      sub_253CAA408(v34, (uint64_t)v11, (uint64_t)v9);
      uint64_t v26 = type metadata accessor for FeedbackLearning.FlowTask(0);
      uint64_t v27 = sub_253D23280(*(void *)(v25 + *(int *)(v26 + 24)), (uint64_t)v6);
      MEMORY[0x270FA5388](v27);
      uint64_t v28 = v36;
      *(&v33 - 2) = (uint64_t)v20;
      *(&v33 - 1) = v28;
      LOBYTE(v25) = sub_253CA5808((void (*)(uint64_t *__return_ptr, unsigned char *))sub_253CAEBB4);
      sub_253BDF664((uint64_t)v6, &qword_26B2555D8);
      sub_253CAB5F8((uint64_t)v9, v25 & 1, v33);
      sub_253BDF664((uint64_t)v9, &qword_269D7CC18);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, v37);
      return sub_253CAECE0((uint64_t)v20, (void (*)(void))_s20TaskStatementOutcomeOMa);
    }
    sub_253CAECE0((uint64_t)v20, (void (*)(void))_s20TaskStatementOutcomeOMa);
    uint64_t v30 = sub_253DEFFE0();
    uint64_t v31 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v33, v14, v30);
    uint64_t v32 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = v31;
    uint64_t v23 = 0;
    uint64_t v21 = v32;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v22, v23, 1, v21);
}

uint64_t sub_253CAAEE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = _s23StatementFailureOutcomeVMa(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253BDEDD8(&qword_269D7C750);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v34 - v11;
  uint64_t v13 = _s23StatementSuccessOutcomeVMa(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _s24StatementExecutionResultOMa(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253CAEC70(v2, (uint64_t)v18, (void (*)(void))_s24StatementExecutionResultOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253CAEC1C((uint64_t)v18, (uint64_t)v12, &qword_269D7C750);
      uint64_t v22 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v12, 1, v22) == 1)
      {
        sub_253BDF664((uint64_t)v12, &qword_269D7C750);
        uint64_t v23 = _s20TaskStatementOutcomeOMa(0);
        uint64_t v24 = a1;
        uint64_t v25 = 1;
        return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v24, v25, 1, v23);
      }
      sub_253CAEC70((uint64_t)v12, a1, (void (*)(void))_s23StatementCreatedOutcomeVMa);
      uint64_t v19 = _s20TaskStatementOutcomeOMa(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v20 = _s23StatementCreatedOutcomeVMa;
      uint64_t v21 = (uint64_t)v12;
      goto LABEL_10;
    case 2u:
      sub_253CAED38((uint64_t)v18, (uint64_t)v6, (void (*)(void))_s23StatementFailureOutcomeVMa);
      sub_253CAEC70((uint64_t)v6, a1, (void (*)(void))_s23StatementFailureOutcomeVMa);
      uint64_t v19 = _s20TaskStatementOutcomeOMa(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v20 = _s23StatementFailureOutcomeVMa;
      uint64_t v21 = (uint64_t)v6;
      goto LABEL_10;
    case 3u:
      sub_253CAEC1C((uint64_t)v18, (uint64_t)v10, &qword_269D7C750);
      uint64_t v26 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 1, v26) == 1)
      {
        sub_253BDF664((uint64_t)v10, &qword_269D7C750);
        uint64_t v27 = _s20TaskStatementOutcomeOMa(0);
        uint64_t v28 = a1;
        uint64_t v29 = 1;
      }
      else
      {
        sub_253CAEC70((uint64_t)v10, a1, (void (*)(void))_s23StatementCreatedOutcomeVMa);
        uint64_t v31 = _s20TaskStatementOutcomeOMa(0);
        swift_storeEnumTagMultiPayload();
        sub_253CAECE0((uint64_t)v10, (void (*)(void))_s23StatementCreatedOutcomeVMa);
        uint64_t v28 = a1;
        uint64_t v29 = 0;
        uint64_t v27 = v31;
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v28, v29, 1, v27);
      uint64_t v32 = &v18[*(int *)(sub_253BDEDD8(&qword_269D7C748) + 48)];
      uint64_t v33 = sub_253DF2C40();
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v32, v33);
    case 4u:
      return sub_253CAEC1C((uint64_t)v18, a1, &qword_269D7CC08);
    default:
      sub_253CAED38((uint64_t)v18, (uint64_t)v15, (void (*)(void))_s23StatementSuccessOutcomeVMa);
      sub_253CAEC70((uint64_t)v15, a1, (void (*)(void))_s23StatementSuccessOutcomeVMa);
      uint64_t v19 = _s20TaskStatementOutcomeOMa(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v20 = _s23StatementSuccessOutcomeVMa;
      uint64_t v21 = (uint64_t)v15;
LABEL_10:
      sub_253CAECE0(v21, (void (*)(void))v20);
      uint64_t v24 = a1;
      uint64_t v25 = 0;
      uint64_t v23 = v19;
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v24, v25, 1, v23);
  }
}

uint64_t sub_253CAB3B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = _s20TaskStatementOutcomeOMa(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253DEFFE0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v22[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  uint64_t v15 = sub_253BDF5F8(a3, a3[3]);
  uint64_t v16 = _s19TranscriptRetrieverVMa();
  sub_253C1601C((uint64_t)v15 + *(int *)(v16 + 20), (uint64_t)v22);
  sub_253BDF5F8(v22, v22[3]);
  _s14ActionExecutedVMa(0);
  sub_253CAEC70(a2, (uint64_t)v10, (void (*)(void))_s20TaskStatementOutcomeOMa);
  if (swift_getEnumCaseMultiPayload())
  {
    swift_bridgeObjectRetain();
    sub_253CAECE0((uint64_t)v10, (void (*)(void))_s20TaskStatementOutcomeOMa);
    sub_253D7F720();
    char v18 = v17;
    swift_bridgeObjectRelease();
    char v19 = v18 ^ 1;
  }
  else
  {
    sub_253CAECE0((uint64_t)v10, (void (*)(void))_s20TaskStatementOutcomeOMa);
    char v19 = 0;
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t result = _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v22);
  *a4 = v19 & 1;
  return result;
}

uint64_t sub_253CAB5F8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v85 = a2;
  uint64_t v5 = sub_253DF46F0();
  uint64_t v88 = *(void *)(v5 - 8);
  uint64_t v89 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v84 = &v77[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_253DF24A0();
  uint64_t v94 = *(void *)(v7 - 8);
  uint64_t v95 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v86 = &v77[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  int v83 = &v77[-v10];
  uint64_t v91 = sub_253DF4280();
  uint64_t v93 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  os_log_type_t v90 = &v77[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_253BDEDD8(&qword_269D7BD08);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v87 = &v77[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v92 = &v77[-v15];
  uint64_t v16 = sub_253BDEDD8(&qword_269D7C7B0);
  MEMORY[0x270FA5388](v16 - 8);
  char v18 = &v77[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = _s19ToolboxSearchResultVMa(0);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v82 = (uint64_t *)&v77[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = &v77[-v22];
  uint64_t v24 = sub_253BDEDD8(&qword_269D7CC18);
  MEMORY[0x270FA5388](v24 - 8);
  uint64_t v26 = &v77[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v27 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = &v77[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  unint64_t v81 = &v77[-v32];
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = &v77[-v33];
  sub_253C2E770(a1, (uint64_t)v26, &qword_269D7CC18);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v26, 1, v27) == 1)
  {
    sub_253BDF664((uint64_t)v26, &qword_269D7CC18);
    uint64_t v35 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    uint64_t v36 = a3;
    goto LABEL_20;
  }
  uint64_t v80 = a3;
  sub_253CAED38((uint64_t)v26, (uint64_t)v34, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
  sub_253CFA81C();
  sub_253C5DC98();
  swift_bridgeObjectRelease();
  uint64_t v37 = (uint64_t)v34;
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19) == 1)
  {
    sub_253BDF664((uint64_t)v18, &qword_269D7C7B0);
    uint64_t v38 = v86;
    sub_253DF1790();
    sub_253CAEC70(v37, (uint64_t)v30, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
    uint64_t v39 = sub_253DF2490();
    os_log_type_t v40 = sub_253DF56E0();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v98[0] = v42;
      uint64_t v96 = v37;
      *(_DWORD *)uint64_t v41 = 136315138;
      sub_253CFA81C();
      uint64_t v97 = sub_253D8E5FC(v43, v44, v98);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253CAECE0((uint64_t)v30, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
      _os_log_impl(&dword_253BD8000, v39, v40, "The referenced action tool definition cannot be extracted, toolId=%s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v42, -1, -1);
      MEMORY[0x25A2709B0](v41, -1, -1);

      (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v38, v95);
      uint64_t v45 = v96;
    }
    else
    {

      sub_253CAECE0((uint64_t)v30, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
      (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v38, v95);
      uint64_t v45 = v37;
    }
    sub_253CAECE0(v45, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
    uint64_t v54 = v80;
    uint64_t v35 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    uint64_t v36 = v54;
    goto LABEL_20;
  }
  uint64_t v46 = v23;
  sub_253CAED38((uint64_t)v18, (uint64_t)v23, (void (*)(void))_s19ToolboxSearchResultVMa);
  uint64_t v47 = v93;
  uint64_t v49 = v90;
  uint64_t v48 = v91;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v93 + 16))(v90, &v23[*(int *)(v19 + 20)], v91);
  int v50 = (*(uint64_t (**)(unsigned char *, uint64_t))(v47 + 88))(v49, v48);
  if (v50 == *MEMORY[0x263F4E088])
  {
    sub_253CAECE0((uint64_t)v23, (void (*)(void))_s19ToolboxSearchResultVMa);
    (*(void (**)(unsigned char *, uint64_t))(v47 + 96))(v49, v48);
    uint64_t v52 = v88;
    uint64_t v51 = v89;
    uint64_t v53 = (uint64_t)v92;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v88 + 32))(v92, v49, v89);
LABEL_12:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v53, 0, 1, v51);
LABEL_18:
    uint64_t v69 = v87;
    sub_253CAEC1C(v53, (uint64_t)v87, &qword_269D7BD08);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v69, 1, v51) != 1)
    {
      unint64_t v72 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v52 + 32);
      unint64_t v73 = v84;
      v72(v84, v69, v51);
      uint64_t v74 = v80;
      sub_253CAED38(v37, v80, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
      uint64_t v75 = type metadata accessor for FeedbackLearning.TaskAction(0);
      v72((unsigned char *)(v74 + *(int *)(v75 + 20)), v73, v51);
      *(unsigned char *)(v74 + *(int *)(v75 + 24)) = v85 & 1;
      uint64_t v76 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = v74;
      uint64_t v70 = 0;
      uint64_t v35 = v76;
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v36, v70, 1, v35);
    }
    sub_253CAECE0(v37, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
    sub_253BDF664((uint64_t)v69, &qword_269D7BD08);
    uint64_t v35 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    uint64_t v36 = v80;
LABEL_20:
    uint64_t v70 = 1;
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v36, v70, 1, v35);
  }
  uint64_t v52 = v88;
  uint64_t v51 = v89;
  uint64_t v53 = (uint64_t)v92;
  if (v50 == *MEMORY[0x263F4E078])
  {
    sub_253CAECE0((uint64_t)v23, (void (*)(void))_s19ToolboxSearchResultVMa);
    (*(void (**)(unsigned char *, uint64_t))(v47 + 96))(v49, v48);
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v52 + 32))(v53, v49, v51);
    goto LABEL_12;
  }
  if (v50 == *MEMORY[0x263F4E080])
  {
    sub_253DF1790();
    uint64_t v55 = v81;
    sub_253CAEC70(v37, (uint64_t)v81, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
    uint64_t v56 = (uint64_t)v23;
    uint64_t v57 = v82;
    sub_253CAEC70(v56, (uint64_t)v82, (void (*)(void))_s19ToolboxSearchResultVMa);
    uint64_t v58 = sub_253DF2490();
    uint64_t v86 = v46;
    uint64_t v59 = v58;
    os_log_type_t v60 = sub_253DF56E0();
    int v61 = v60;
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v62 = swift_slowAlloc();
      uint64_t v79 = swift_slowAlloc();
      v98[0] = v79;
      *(_DWORD *)uint64_t v62 = 136315394;
      sub_253DEFE90();
      uint64_t v96 = v37;
      sub_253CAEBD4((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
      int v78 = v61;
      uint64_t v63 = sub_253DF5C40();
      uint64_t v97 = sub_253D8E5FC(v63, v64, v98);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253CAECE0((uint64_t)v55, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
      *(_WORD *)(v62 + 12) = 2080;
      uint64_t v65 = *v57;
      unint64_t v66 = v57[1];
      swift_bridgeObjectRetain();
      uint64_t v97 = sub_253D8E5FC(v65, v66, v98);
      uint64_t v37 = v96;
      sub_253DF5820();
      uint64_t v48 = v91;
      swift_bridgeObjectRelease();
      sub_253CAECE0((uint64_t)v57, (void (*)(void))_s19ToolboxSearchResultVMa);
      _os_log_impl(&dword_253BD8000, v59, (os_log_type_t)v78, "Action with eventId=%s is referencing a schema with id=%s", (uint8_t *)v62, 0x16u);
      uint64_t v67 = v79;
      swift_arrayDestroy();
      uint64_t v49 = v90;
      MEMORY[0x25A2709B0](v67, -1, -1);
      uint64_t v68 = v62;
      uint64_t v53 = (uint64_t)v92;
      MEMORY[0x25A2709B0](v68, -1, -1);
    }
    else
    {

      sub_253CAECE0((uint64_t)v57, (void (*)(void))_s19ToolboxSearchResultVMa);
      sub_253CAECE0((uint64_t)v55, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
    }
    (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v83, v95);
    sub_253CAECE0((uint64_t)v86, (void (*)(void))_s19ToolboxSearchResultVMa);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v53, 1, 1, v51);
    (*(void (**)(unsigned char *, uint64_t))(v93 + 8))(v49, v48);
    goto LABEL_18;
  }
  uint64_t result = sub_253DF5C80();
  __break(1u);
  return result;
}

void sub_253CAC1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = sub_253BDF5F8(a5, a5[3]);
  sub_253CAE3F4(a2, a4, (uint64_t)v7);
  sub_253DBF364();
}

void sub_253CAC24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_253DEFFE0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253DF24A0();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    MEMORY[0x270FA5388](v16);
    *(&v29 - 4) = a4;
    *(&v29 - 3) = a1;
    *(&v29 - 2) = a3;
    sub_253C578E8();
  }
  else
  {
    uint64_t v33 = v17;
    sub_253DF1790();
    sub_253CAEC70(a1, (uint64_t)v14, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
    uint64_t v20 = sub_253DF2490();
    os_log_type_t v21 = sub_253DF56E0();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v35 = v32;
      *(_DWORD *)uint64_t v23 = 136315394;
      int v31 = v22;
      os_log_t v30 = v20;
      uint64_t v24 = FeedbackLearning.CandidateParameter.description.getter();
      uint64_t v34 = sub_253D8E5FC(v24, v25, &v35);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253CAECE0((uint64_t)v14, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
      *(_WORD *)(v23 + 12) = 2080;
      sub_253CAEBD4((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v26 = sub_253DF5C40();
      uint64_t v34 = sub_253D8E5FC(v26, v27, &v35);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v20 = v30;
      _os_log_impl(&dword_253BD8000, v30, (os_log_type_t)v31, "Cannot retrieve candidate id for parameter %s in %s, candidateId is nil", (uint8_t *)v23, 0x16u);
      uint64_t v28 = v32;
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v28, -1, -1);
      MEMORY[0x25A2709B0](v23, -1, -1);
    }
    else
    {
      sub_253CAECE0((uint64_t)v14, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }

    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v15);
  }
}

uint64_t sub_253CAC688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (*(void *)(a2 + 16)
    && (sub_253D87A00(a3), (v9 & 1) != 0)
    && (swift_bridgeObjectRetain(), sub_253D7F854(), char v11 = v10, swift_bridgeObjectRelease(), (v11 & 1) != 0))
  {
    uint64_t v12 = _s16CandidateSummaryVMa(0);
    uint64_t v13 = a5;
    uint64_t v14 = 1;
  }
  else
  {
    uint64_t v15 = sub_253DEFFE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a5, a4, v15);
    uint64_t v16 = (int *)_s16CandidateSummaryVMa(0);
    sub_253CAEC70(a3, a5 + v16[5], (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
    uint64_t v17 = a5 + v16[6];
    uint64_t v18 = sub_253DF26C0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v17, a1, v18);
    *(unsigned char *)(a5 + v16[7]) = -126;
    uint64_t v13 = a5;
    uint64_t v14 = 0;
    uint64_t v12 = (uint64_t)v16;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v13, v14, 1, v12);
}

uint64_t sub_253CAC804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = (int *)_s16CandidateSummaryVMa(0);
  uint64_t v5 = a1 + v4[6];
  uint64_t v6 = a1 + v4[5];
  sub_253C5E238();
  uint64_t v7 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t v8 = (int *)type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  sub_253CAEC70(v6, a2 + v8[5], (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
  uint64_t v9 = a2 + v8[6];
  uint64_t v10 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v5, v10);
  uint64_t v11 = a2 + v8[7];
  uint64_t v12 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v11, 1, 1, v12);
  char v14 = *(unsigned char *)(a1 + v4[7]);
  *(unsigned char *)(a2 + v8[8]) = v15;
  *(unsigned char *)(a2 + v8[9]) = v14;
  return result;
}

uint64_t sub_253CAC96C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v3 = sub_253DF4420();
  uint64_t v35 = *(void *)(v3 - 8);
  uint64_t v36 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v33 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253DEFFE0();
  uint64_t v37 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253DF4040();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253DF41F0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = a1;
  sub_253DF4200();
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v15, v12) == *MEMORY[0x263F4DE90])
  {
    (*(void (**)(char *, uint64_t))(v13 + 96))(v15, v12);
    uint64_t v32 = v9;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
    uint64_t v16 = sub_253DF4000();
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      uint64_t v31 = v8;
      uint64_t v18 = *(void *)(sub_253DF32F0() - 8);
      unint64_t v19 = v16 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
      uint64_t v20 = (void (**)(char *, uint64_t))(v37 + 8);
      uint64_t v21 = *(void *)(v18 + 72);
      while (1)
      {
        sub_253DF32E0();
        char v22 = sub_253DEFFB0();
        (*v20)(v7, v5);
        if (v22) {
          break;
        }
        v19 += v21;
        if (!--v17)
        {
          swift_bridgeObjectRelease();
          uint64_t v23 = v38;
          uint64_t v8 = v31;
          goto LABEL_9;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v29 = v33;
      sub_253DF4220();
      uint64_t v30 = v38;
      sub_253DF4410();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v36);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v31);
      uint64_t v26 = sub_253DEFE20();
      uint64_t v27 = v30;
      uint64_t v28 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = v38;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v8);
      uint64_t v26 = sub_253DEFE20();
      uint64_t v27 = v23;
      uint64_t v28 = 1;
    }
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v27, v28, 1, v26);
  }
  else
  {
    uint64_t v24 = sub_253DEFE20();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v38, 1, 1, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_253CACDC0(uint64_t a1, uint64_t a2, char *a3)
{
  uint64_t v156 = a1;
  uint64_t v5 = sub_253BDEDD8(&qword_26B2557F8);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = _s19ValueStepEvaluationVMa(0);
  sub_253C0F830();
  uint64_t v159 = v9;
  MEMORY[0x270FA5388](v10);
  sub_253C34050();
  uint64_t v165 = v11;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v12);
  sub_253C36430();
  uint64_t v158 = v13;
  uint64_t v14 = sub_253BDEDD8(&qword_26B255850);
  uint64_t v15 = sub_253BDF9FC(v14);
  MEMORY[0x270FA5388](v15);
  sub_253BDFA94();
  uint64_t v145 = v16;
  uint64_t v17 = sub_253C36350();
  uint64_t v169 = _s23ParameterStepEvaluationVMa(v17);
  sub_253C0F830();
  uint64_t v161 = v18;
  MEMORY[0x270FA5388](v19);
  sub_253C34050();
  uint64_t v168 = v20;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v21);
  sub_253C36430();
  uint64_t v160 = v22;
  uint64_t v23 = sub_253BDEDD8(&qword_26B2557C0);
  uint64_t v24 = sub_253BDF9FC(v23);
  MEMORY[0x270FA5388](v24);
  sub_253BDFA94();
  uint64_t v164 = v25;
  uint64_t v26 = sub_253C36350();
  uint64_t v172 = _s18ToolStepEvaluationVMa(v26);
  sub_253C0F830();
  uint64_t v163 = v27;
  MEMORY[0x270FA5388](v28);
  sub_253C34050();
  uint64_t v171 = v29;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v30);
  sub_253C36430();
  uint64_t v162 = v31;
  uint64_t v32 = sub_253C36350();
  uint64_t v146 = _s23StatementStepEvaluationOMa(v32);
  sub_253C0F830();
  uint64_t v151 = v33;
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v143 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  sub_253C33FFC();
  uint64_t v167 = v38;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v39);
  sub_253C36430();
  uint64_t v170 = v40;
  sub_253C36350();
  uint64_t v154 = sub_253DF42A0();
  sub_253C0F830();
  uint64_t v153 = v41;
  MEMORY[0x270FA5388](v42);
  sub_253BDFA94();
  uint64_t v152 = v43;
  sub_253C36350();
  uint64_t v147 = _s22ToolCandidateEvaluatorVMa();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v44);
  sub_253BDFA94();
  uint64_t v150 = v45;
  sub_253C36350();
  uint64_t v46 = sub_253DF24A0();
  sub_253C0F830();
  uint64_t v155 = v47;
  MEMORY[0x270FA5388](v48);
  sub_253C34050();
  uint64_t v149 = v49;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (char *)&v143 - v51;
  uint64_t v177 = _s19TranscriptRetrieverVMa();
  uint64_t v178 = &off_270361158;
  uint64_t v53 = sub_253BDEE6C(&v176);
  sub_253CAEC70(a2, (uint64_t)v53, (void (*)(void))_s19TranscriptRetrieverVMa);
  uint64_t v54 = sub_253BDF5F8(&a3[OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_statementEvaluator], *(void *)&a3[OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_statementEvaluator+ 24]);
  uint64_t v56 = v177;
  uint64_t v55 = v178;
  uint64_t v57 = sub_253BDF5F8(&v176, v177);
  v174[3] = v56;
  uint64_t v175 = (uint64_t)v55[1];
  uint64_t v58 = v175;
  uint64_t v59 = sub_253BDEE6C(v174);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v59, v57, v56);
  uint64_t v60 = sub_253C91B18(v156, (uint64_t)v59, *v54, v56, v58);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v174);
  sub_253DF1790();
  swift_bridgeObjectRetain_n();
  uint64_t v173 = v52;
  int v61 = sub_253DF2490();
  os_log_type_t v62 = sub_253DF56C0();
  int v63 = v62;
  BOOL v64 = os_log_type_enabled(v61, v62);
  uint64_t v157 = v60;
  uint64_t v148 = v46;
  if (v64)
  {
    int v144 = v63;
    uint64_t v65 = (uint8_t *)swift_slowAlloc();
    v174[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 136315138;
    uint64_t v143 = v65 + 4;
    uint64_t v66 = swift_bridgeObjectRetain();
    uint64_t v67 = MEMORY[0x25A26F710](v66, v146);
    unint64_t v69 = v68;
    swift_bridgeObjectRelease();
    uint64_t v70 = sub_253D8E5FC(v67, v69, v174);
    sub_253CAEFE8(v70);
    sub_253DF5820();
    swift_bridgeObjectRelease_n();
    uint64_t v60 = v157;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_253BD8000, v61, (os_log_type_t)v144, "Generated parameter step evaluations: %s", v65, 0xCu);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v146 = *(void *)(v155 + 8);
  sub_253C0F824();
  v71();
  uint64_t v72 = *(void *)(v60 + 16);
  uint64_t v173 = a3;
  uint64_t v73 = v151;
  if (v72)
  {
    uint64_t v74 = v60 + ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80));
    uint64_t v75 = *(void *)(v151 + 72);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v76 = MEMORY[0x263F8EE78];
    uint64_t v77 = v74;
    uint64_t v78 = v72;
    do
    {
      sub_253CAEC70(v77, (uint64_t)v37, (void (*)(void))_s23StatementStepEvaluationOMa);
      sub_253C95B78();
      sub_253CAECE0((uint64_t)v37, (void (*)(void))_s23StatementStepEvaluationOMa);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v166) == 1)
      {
        sub_253BDF664((uint64_t)v8, &qword_26B2557F8);
      }
      else
      {
        uint64_t v79 = v158;
        sub_253CAED38((uint64_t)v8, v158, (void (*)(void))_s19ValueStepEvaluationVMa);
        sub_253CAED38(v79, v165, (void (*)(void))_s19ValueStepEvaluationVMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v84 = sub_253C10694();
          uint64_t v76 = sub_253DC4650(v84, v85, v86, v76);
        }
        unint64_t v81 = *(void *)(v76 + 16);
        unint64_t v80 = *(void *)(v76 + 24);
        if (v81 >= v80 >> 1)
        {
          char v87 = sub_253C363D0(v80);
          uint64_t v76 = sub_253DC4650(v87, v88, v89, v76);
        }
        *(void *)(v76 + 16) = v81 + 1;
        sub_253CAEF3C();
        sub_253CAED38(v165, v76 + v82 + *(void *)(v83 + 72) * v81, (void (*)(void))_s19ValueStepEvaluationVMa);
        a3 = v173;
      }
      v77 += v75;
      --v78;
    }
    while (v78);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v90 = MEMORY[0x263F8EE78];
    uint64_t v91 = v72;
    uint64_t v92 = v145;
    uint64_t v93 = v167;
    do
    {
      sub_253CAEC70(v74, v93, (void (*)(void))_s23StatementStepEvaluationOMa);
      sub_253C95C68();
      sub_253CAECE0(v93, (void (*)(void))_s23StatementStepEvaluationOMa);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v92, 1, v169) == 1)
      {
        sub_253BDF664(v92, &qword_26B255850);
      }
      else
      {
        uint64_t v94 = v160;
        sub_253CAED38(v92, v160, (void (*)(void))_s23ParameterStepEvaluationVMa);
        sub_253CAED38(v94, v168, (void (*)(void))_s23ParameterStepEvaluationVMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v99 = sub_253C10694();
          uint64_t v90 = sub_253DC4608(v99, v100, v101, v90);
        }
        unint64_t v96 = *(void *)(v90 + 16);
        unint64_t v95 = *(void *)(v90 + 24);
        if (v96 >= v95 >> 1)
        {
          char v102 = sub_253C363D0(v95);
          uint64_t v90 = sub_253DC4608(v102, v103, v104, v90);
        }
        *(void *)(v90 + 16) = v96 + 1;
        sub_253CAEF3C();
        sub_253CAED38(v168, v90 + v97 + *(void *)(v98 + 72) * v96, (void (*)(void))_s23ParameterStepEvaluationVMa);
        a3 = v173;
      }
      v74 += v75;
      --v91;
    }
    while (v91);
    swift_release();
    uint64_t v60 = v157;
    swift_bridgeObjectRelease();
    uint64_t v73 = v151;
  }
  else
  {
    uint64_t v90 = MEMORY[0x263F8EE78];
    uint64_t v76 = MEMORY[0x263F8EE78];
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v153 + 16))(v152, &a3[OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning22TaskCandidateEvaluator_toolbox], v154);
  uint64_t v105 = v164;
  if (v72)
  {
    uint64_t v106 = v60 + ((*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80));
    uint64_t v107 = *(void *)(v73 + 72);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v108 = MEMORY[0x263F8EE78];
    uint64_t v109 = v170;
    do
    {
      sub_253CAEC70(v106, v109, (void (*)(void))_s23StatementStepEvaluationOMa);
      sub_253C95A8C();
      sub_253CAECE0(v109, (void (*)(void))_s23StatementStepEvaluationOMa);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v105, 1, v172) == 1)
      {
        sub_253BDF664(v105, &qword_26B2557C0);
      }
      else
      {
        uint64_t v110 = v105;
        uint64_t v111 = v162;
        sub_253CAED38(v110, v162, (void (*)(void))_s18ToolStepEvaluationVMa);
        sub_253CAED38(v111, v171, (void (*)(void))_s18ToolStepEvaluationVMa);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          char v116 = sub_253C10694();
          uint64_t v108 = sub_253DC45C0(v116, v117, v118, v108);
        }
        unint64_t v113 = *(void *)(v108 + 16);
        unint64_t v112 = *(void *)(v108 + 24);
        if (v113 >= v112 >> 1)
        {
          char v119 = sub_253C363D0(v112);
          uint64_t v108 = sub_253DC45C0(v119, v120, v121, v108);
        }
        *(void *)(v108 + 16) = v113 + 1;
        sub_253CAEF3C();
        sub_253CAED38(v171, v108 + v114 + *(void *)(v115 + 72) * v113, (void (*)(void))_s18ToolStepEvaluationVMa);
        uint64_t v105 = v164;
      }
      v106 += v107;
      --v72;
    }
    while (v72);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v108 = MEMORY[0x263F8EE78];
  }
  uint64_t v122 = v150;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v153 + 32))(v122, v152, v154);
  *(void *)(v122 + *(int *)(v147 + 20)) = v108;
  sub_253C95D58();
  uint64_t v124 = v123;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v125 = sub_253CA4148(v124, v76, v90);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253C96268();
  uint64_t v127 = v126;
  MEMORY[0x270FA5388](v126);
  sub_253CAF05C();
  uint64_t v129 = sub_253CF1DE0((void (*)(uint64_t *__return_ptr, uint64_t))sub_253CAECC4, v128, v127);
  swift_bridgeObjectRelease();
  sub_253DF1790();
  swift_bridgeObjectRetain_n();
  uint64_t v130 = sub_253DF2490();
  os_log_type_t v131 = sub_253DF56C0();
  if (os_log_type_enabled(v130, v131))
  {
    uint64_t v132 = (uint8_t *)swift_slowAlloc();
    v174[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v132 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v133 = sub_253BDEDD8(&qword_26B256008);
    uint64_t v134 = MEMORY[0x25A26F710](v125, v133);
    unint64_t v136 = v135;
    swift_bridgeObjectRelease();
    uint64_t v137 = sub_253D8E5FC(v134, v136, v174);
    sub_253CAEFE8(v137);
    sub_253DF5820();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_253BD8000, v130, v131, "Generated candidate outcomes: %s", v132, 0xCu);
    swift_arrayDestroy();
    uint64_t v122 = v150;
    sub_253BDF910();
    sub_253BDF910();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_253C63748();
  sub_253C0F824();
  v138();
  sub_253C0EBAC(v125);
  uint64_t v140 = v139;
  swift_bridgeObjectRelease();
  sub_253C0EBAC(v129);
  swift_bridgeObjectRelease();
  v174[0] = v140;
  sub_253DBF02C();
  uint64_t v141 = v174[0];
  sub_253CAECE0(v122, (void (*)(void))_s22ToolCandidateEvaluatorVMa);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v176);
  return v141;
}

uint64_t sub_253CADC20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253CA7914(a1, *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t *_s13TaskEvaluatorVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DF42A0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    long long v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
  }
  return a1;
}

uint64_t _s13TaskEvaluatorVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v5);
}

uint64_t _s13TaskEvaluatorVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  long long v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  return a1;
}

uint64_t _s13TaskEvaluatorVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  sub_253C22614((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  return a1;
}

uint64_t _s13TaskEvaluatorVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  return a1;
}

uint64_t _s13TaskEvaluatorVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF42A0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v7);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  return a1;
}

uint64_t _s13TaskEvaluatorVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CAE040);
}

uint64_t sub_253CAE040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253DF42A0();
  sub_253C16A18();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t _s13TaskEvaluatorVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CAE0E4);
}

void sub_253CAE0E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_253DF42A0();
  sub_253C16A18();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
}

uint64_t sub_253CAE170()
{
  uint64_t result = sub_253DF42A0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_253CAE204()
{
  unint64_t result = qword_269D7CC40;
  if (!qword_269D7CC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CC40);
  }
  return result;
}

uint64_t sub_253CAE250()
{
  sub_253CAEFFC();
  return sub_253CA7FE4(v0, v1);
}

uint64_t sub_253CAE26C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_253CAE2B0()
{
  sub_253CAEFFC();
  return sub_253CA82D4(v0, v1);
}

uint64_t sub_253CAE2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v12[3] = _s19TranscriptRetrieverVMa();
  v12[4] = (uint64_t)&off_270361158;
  uint64_t v7 = sub_253BDEE6C(v12);
  sub_253CAEC70(a3, (uint64_t)v7, (void (*)(void))_s19TranscriptRetrieverVMa);
  type metadata accessor for FeedbackLearning.FlowTask(0);
  swift_bridgeObjectRetain();
  sub_253CFA158();
  swift_bridgeObjectRelease();
  sub_253CFA5D4();
  v11[2] = a4;
  v11[3] = a2;
  v11[4] = v12;
  uint64_t v9 = sub_253CA5AF8(MEMORY[0x263F8EE78], (void (*)(uint64_t *, char *))sub_253CAE3D4, (uint64_t)v11, v8);
  swift_bridgeObjectRelease();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v12);
  return v9;
}

void sub_253CAE3D4(uint64_t a1, uint64_t a2)
{
  sub_253CAC1E0(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_253CAE3F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v58 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  uint64_t v61 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_253DF26C0();
  uint64_t v8 = *(void *)(v67 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v67);
  uint64_t v66 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  BOOL v64 = (char *)&v54 - v11;
  uint64_t v65 = _s16CandidateSummaryVMa(0);
  uint64_t v12 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = _s33CandidateParameterResolutionStateVMa(0);
  MEMORY[0x270FA5388](v60);
  uint64_t v16 = (char *)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = _s19TranscriptRetrieverVMa();
  uint64_t v73 = v59;
  uint64_t v74 = &off_270361158;
  uint64_t v17 = sub_253BDEE6C(v72);
  sub_253CAEC70(a3, (uint64_t)v17, (void (*)(void))_s19TranscriptRetrieverVMa);
  uint64_t v69 = a1;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_253DDCB50((uint64_t (*)(char *))sub_253C9E0BC, (uint64_t)v68, a2);
  sub_253CA4764(v18);
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_253CA4FFC(v19, v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v54 = 0;
    uint64_t v56 = v16;
    uint64_t v57 = a1;
    uint64_t v22 = v20;
    uint64_t v23 = v20 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v24 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v62 = *(void *)(v12 + 72);
    int v63 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v55 = v22;
    swift_bridgeObjectRetain();
    uint64_t v25 = (void *)MEMORY[0x263F8EE80];
    uint64_t v27 = v66;
    uint64_t v26 = v67;
    while (1)
    {
      sub_253CAEC70(v23, (uint64_t)v14, (void (*)(void))_s16CandidateSummaryVMa);
      uint64_t v28 = v65;
      sub_253CAEC70((uint64_t)&v14[*(int *)(v65 + 20)], (uint64_t)v7, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
      (*v63)(v27, &v14[*(int *)(v28 + 24)], v26);
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v71 = v25;
      uint64_t v29 = sub_253D87A00((uint64_t)v7);
      if (__OFADD__(v25[2], (v30 & 1) == 0)) {
        break;
      }
      unint64_t v31 = v29;
      char v32 = v30;
      sub_253BDEDD8(&qword_269D7CC50);
      char v33 = sub_253DF5A70();
      uint64_t v25 = v71;
      if (v33)
      {
        uint64_t v34 = sub_253D87A00((uint64_t)v7);
        if ((v32 & 1) != (v35 & 1)) {
          goto LABEL_18;
        }
        unint64_t v31 = v34;
      }
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
      {
        v25[(v31 >> 6) + 8] |= 1 << v31;
        sub_253CAEC70((uint64_t)v7, v25[6] + *(void *)(v61 + 72) * v31, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
        *(void *)(v25[7] + 8 * v31) = MEMORY[0x263F8EE88];
        uint64_t v36 = v25[2];
        BOOL v37 = __OFADD__(v36, 1);
        uint64_t v38 = v36 + 1;
        if (v37) {
          goto LABEL_17;
        }
        v25[2] = v38;
      }
      uint64_t v39 = v64;
      uint64_t v27 = v66;
      sub_253D03D0C();
      sub_253CAECE0((uint64_t)v7, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateParameter);
      uint64_t v26 = v67;
      (*v24)(v39, v67);
      sub_253CAECE0((uint64_t)v14, (void (*)(void))_s16CandidateSummaryVMa);
      v23 += v62;
      if (!--v21)
      {
        uint64_t v20 = v55;
        swift_bridgeObjectRelease();
        a1 = v57;
        uint64_t v16 = v56;
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    uint64_t result = sub_253DF5CF0();
    __break(1u);
  }
  else
  {
    uint64_t v25 = (void *)MEMORY[0x263F8EE80];
LABEL_13:
    uint64_t v40 = sub_253BDF5F8(v72, v73);
    uint64_t v41 = v59;
    uint64_t v42 = *sub_253BDF5F8((void *)((char *)v40 + *(int *)(v59 + 28)), *(void *)((char *)v40 + *(int *)(v59 + 28) + 24));
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_253D7F0D4(a1, v42);
    uint64_t v44 = swift_bridgeObjectRelease();
    if (!v43)
    {
      sub_253BDEDD8(&qword_269D7C798);
      sub_253CAEBD4(&qword_269D7C918, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
      uint64_t v44 = sub_253DF5180();
      uint64_t v43 = v44;
    }
    MEMORY[0x270FA5388](v44);
    *(&v54 - 2) = a1;
    *(&v54 - 1) = (uint64_t)v25;
    sub_253CA5430(v43, (uint64_t (*)(char *, uint64_t))sub_253CAEB70);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v45 = (char *)sub_253BDF5F8(v72, v73) + *(int *)(v41 + 20);
    uint64_t v46 = sub_253BDF5F8(v72, v73);
    uint64_t v47 = v60;
    sub_253C1601C((uint64_t)v46 + *(int *)(v41 + 28), (uint64_t)&v16[*(int *)(v60 + 24)]);
    uint64_t v48 = sub_253DEFFE0();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v16, a1, v48);
    sub_253C1601C((uint64_t)v45, (uint64_t)&v16[*(int *)(v47 + 20)]);
    uint64_t v71 = (void *)v20;
    sub_253DBF02C();
    sub_253CA4764((uint64_t)v71);
    uint64_t v49 = swift_bridgeObjectRetain();
    uint64_t v50 = sub_253CA4FFC(v49, v49);
    uint64_t v51 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v51);
    *(&v54 - 2) = (uint64_t)v16;
    uint64_t v52 = sub_253CF1F18((void (*)(uint64_t))sub_253CAEB78, (uint64_t)(&v54 - 4), v50, (uint64_t)v70);
    sub_253CAECE0((uint64_t)v16, (void (*)(void))_s33CandidateParameterResolutionStateVMa);
    swift_bridgeObjectRelease();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v72);
    return v52;
  }
  return result;
}

void sub_253CAEB70(uint64_t a1, uint64_t a2)
{
  sub_253CAC24C(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_253CAEB78()
{
  sub_253CAEFFC();
  return sub_253CAC804(v0, v1);
}

uint64_t sub_253CAEB94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253CAC688(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_253CAEBB4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_253CAB3B4(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_253CAEBD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253CAEC1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_253BDEDD8(a3);
  sub_253BDF7F0();
  sub_253C8F190();
  v4();
  return a2;
}

uint64_t sub_253CAEC70(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  uint64_t v4 = sub_253C2F578();
  v5(v4);
  return a2;
}

#error "253CAECD4: call analysis failed (funcsize=7)"

uint64_t sub_253CAECE0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_253CAED38(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  sub_253C8F190();
  v4();
  return a2;
}

unsigned char *storeEnumTagSinglePayload for TaskEvaluatorError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CAEE5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TaskEvaluatorError()
{
  return &type metadata for TaskEvaluatorError;
}

unint64_t sub_253CAEE98()
{
  unint64_t result = qword_269D7CC68;
  if (!qword_269D7CC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CC68);
  }
  return result;
}

uint64_t sub_253CAEF28(uint64_t result)
{
  *(void *)(v2 - 296) = v1;
  *(void *)(v2 - 72) = result;
  return result;
}

uint64_t sub_253CAEF50(uint64_t a1)
{
  *(void *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_253CAEF6C(uint64_t a1, unint64_t a2)
{
  return sub_253D8E5FC(a1, a2, (uint64_t *)(v2 - 72));
}

uint64_t sub_253CAEF84()
{
  return swift_slowAlloc();
}

void sub_253CAEFA0()
{
  *(void *)(v1 - 288) = v0;
}

BOOL sub_253CAEFB0(os_log_type_t a1)
{
  return os_log_type_enabled(v1, a1);
}

uint64_t sub_253CAEFCC()
{
  return swift_slowAlloc();
}

uint64_t sub_253CAEFE8(uint64_t a1)
{
  *(void *)(v1 - 200) = a1;
  return v1 - 200;
}

void sub_253CAF008(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_253CAF03C()
{
  return sub_253DEFFE0();
}

uint64_t sub_253CAF070()
{
  sub_253DF52E0();

  return swift_bridgeObjectRelease();
}

uint64_t FeedbackLearning.ConfirmationPromptResult.hash(into:)()
{
  return sub_253DF5DC0();
}

BOOL static FeedbackLearning.ConfirmationPromptResult.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_253CAF184(uint64_t a1)
{
  unint64_t v2 = sub_253CAF5E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CAF1C0(uint64_t a1)
{
  unint64_t v2 = sub_253CAF5E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CAF1FC(uint64_t a1)
{
  unint64_t v2 = sub_253CAF594();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CAF238(uint64_t a1)
{
  unint64_t v2 = sub_253CAF594();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CAF274(uint64_t a1)
{
  unint64_t v2 = sub_253CAF678();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CAF2B0(uint64_t a1)
{
  unint64_t v2 = sub_253CAF678();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CAF2EC(uint64_t a1)
{
  unint64_t v2 = sub_253CAF62C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CAF328(uint64_t a1)
{
  unint64_t v2 = sub_253CAF62C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.ConfirmationPromptResult.encode(to:)()
{
  sub_253C59954();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_253BDEDD8(&qword_269D7CC70);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253CD8AB8(v5, v12);
  sub_253BDEDD8(&qword_269D7CC78);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253C2F394();
  sub_253BDEDD8(&qword_269D7CC80);
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253C2F37C();
  sub_253BDEDD8(&qword_269D7CC88);
  sub_253C0F830();
  MEMORY[0x270FA5388](v8);
  sub_253C16A90();
  int v9 = *v1;
  sub_253CD8DE0(v3);
  sub_253CAF594();
  sub_253DF5E40();
  if (v9)
  {
    if (v9 == 1)
    {
      sub_253CAF62C();
      sub_253C8F0D0();
    }
    else
    {
      sub_253CAF5E0();
      sub_253C8F0D0();
      sub_253CD9338();
    }
  }
  else
  {
    sub_253CAF678();
    sub_253C8F0D0();
    sub_253C8F564();
  }
  sub_253BEFBCC();
  v10();
  sub_253CD8DC0();
  v11();
  sub_253C5993C();
}

unint64_t sub_253CAF594()
{
  unint64_t result = qword_269D7CC90;
  if (!qword_269D7CC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CC90);
  }
  return result;
}

unint64_t sub_253CAF5E0()
{
  unint64_t result = qword_269D7CC98;
  if (!qword_269D7CC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CC98);
  }
  return result;
}

unint64_t sub_253CAF62C()
{
  unint64_t result = qword_269D7CCA0;
  if (!qword_269D7CCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CCA0);
  }
  return result;
}

unint64_t sub_253CAF678()
{
  unint64_t result = qword_269D7CCA8;
  if (!qword_269D7CCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CCA8);
  }
  return result;
}

void FeedbackLearning.ConfirmationPromptResult.init(from:)()
{
  sub_253C59954();
  unint64_t v2 = v1;
  unint64_t v31 = v3;
  sub_253BDEDD8(&qword_269D7CCB0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253CD8BAC(v5, v30);
  sub_253BDEDD8(&qword_269D7CCB8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253C16AA8();
  sub_253BDEDD8(&qword_269D7CCC0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253C566F8();
  sub_253BDEDD8(&qword_269D7CCC8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v8);
  sub_253C2F394();
  sub_253BDF5F8(v2, v2[3]);
  sub_253CAF594();
  sub_253CD9B38();
  sub_253DF5E30();
  if (v0) {
    goto LABEL_8;
  }
  char v32 = v2;
  uint64_t v9 = sub_253DF5BB0();
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10
    || (int v11 = *(unsigned __int8 *)(v9 + 32),
        sub_253CD01CC(1, v10, v9, v9 + 32, 0, (2 * v10) | 1),
        uint64_t v13 = v12,
        unint64_t v15 = v14,
        swift_bridgeObjectRelease(),
        v13 != v15 >> 1))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v21 = v20;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v21 = &type metadata for FeedbackLearning.ConfirmationPromptResult;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253CD8DD0();
    v22();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v23 = sub_253C4BBBC();
    v24(v23);
LABEL_8:
    uint64_t v25 = (uint64_t)v2;
    goto LABEL_9;
  }
  char v16 = v11;
  if (v11)
  {
    if (v11 == 1)
    {
      sub_253CAF62C();
      sub_253CD956C();
      uint64_t v17 = v31;
      sub_253BEFBCC();
      v18();
      swift_unknownObjectRelease();
      sub_253C0FFA4();
      v19();
    }
    else
    {
      sub_253CAF5E0();
      sub_253CD956C();
      uint64_t v17 = v31;
      sub_253BEFBCC();
      v28();
      swift_unknownObjectRelease();
      sub_253C0FFA4();
      v29();
      char v16 = v11;
    }
  }
  else
  {
    sub_253CAF678();
    sub_253CD956C();
    sub_253C8F564();
    sub_253BEFBCC();
    v26();
    swift_unknownObjectRelease();
    sub_253BEFBCC();
    v27();
    uint64_t v17 = v31;
  }
  *uint64_t v17 = v16;
  uint64_t v25 = (uint64_t)v32;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v25);
  sub_253CD9300();
  sub_253C5993C();
}

void sub_253CAFB20()
{
}

void sub_253CAFB38()
{
}

uint64_t FeedbackLearning.ConfirmationPromptResult.description.getter()
{
  uint64_t v1 = 0x657463656A65722ELL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E6F646E6162612ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D7269666E6F632ELL;
  }
}

uint64_t sub_253CAFBB8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000253E19580 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000253E195A0 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v5 = a1 == 0x656E6F646E616261 && a2 == 0xE900000000000064;
    if (v5 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x64657463656A6572 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v7 = sub_253DF5C90();
      swift_bridgeObjectRelease();
      if (v7) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_253CAFD70(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x656E6F646E616261;
      break;
    case 3:
      unint64_t result = 0x64657463656A6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253CAFE0C(uint64_t a1)
{
  unint64_t v2 = sub_253CC3184();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CAFE48(uint64_t a1)
{
  unint64_t v2 = sub_253CC3184();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CAFE84(uint64_t a1)
{
  unint64_t v2 = sub_253CC321C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CAFEC0(uint64_t a1)
{
  unint64_t v2 = sub_253CC321C();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_253CAFEFC()
{
  return sub_253CAFD70(*v0);
}

uint64_t sub_253CAFF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CAFBB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CAFF2C(uint64_t a1)
{
  unint64_t v2 = sub_253CC30EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CAFF68(uint64_t a1)
{
  unint64_t v2 = sub_253CC30EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CAFFA4(uint64_t a1)
{
  unint64_t v2 = sub_253CC31D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CAFFE0(uint64_t a1)
{
  unint64_t v2 = sub_253CC31D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB001C(uint64_t a1)
{
  unint64_t v2 = sub_253CC3138();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB0058(uint64_t a1)
{
  unint64_t v2 = sub_253CC3138();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.DisambiguationPromptResult.encode(to:)()
{
  sub_253C59954();
  unint64_t v2 = v1;
  sub_253BDEDD8(&qword_269D7CCD0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253CD8AB8(v4, v18);
  sub_253BDEDD8(&qword_269D7CCD8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253C567E0(v6, v19);
  sub_253BDEDD8(&qword_269D7CCE0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253CD8BE4(v8, v20);
  sub_253BDEDD8(&qword_269D7CCE8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253C16A90();
  sub_253BDEDD8(&qword_269D7CCF0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = *v0;
  sub_253CD9818(v2);
  sub_253CC30EC();
  sub_253CD9868();
  switch(v11)
  {
    case 1:
      sub_253CC31D0();
      sub_253CD8CA8();
      goto LABEL_6;
    case 2:
      sub_253CC3184();
      sub_253CD8CA8();
      goto LABEL_6;
    case 3:
      sub_253CC3138();
      sub_253CD8CA8();
LABEL_6:
      sub_253CD9338();
      break;
    default:
      sub_253CC321C();
      sub_253CD8CA8();
      sub_253CD9674();
      break;
  }
  sub_253BEFBCC();
  v14(v12, v13);
  sub_253C634D8();
  v17(v15, v16);
  sub_253C5993C();
}

void FeedbackLearning.DisambiguationPromptResult.init(from:)()
{
  sub_253C59954();
  unint64_t v2 = v1;
  uint64_t v29 = v3;
  sub_253BDEDD8(&qword_269D7CD20);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253CD9374(v5, v26);
  sub_253BDEDD8(&qword_269D7CD28);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253C567E0(v7, v27);
  sub_253BDEDD8(&qword_269D7CD30);
  sub_253C0F830();
  MEMORY[0x270FA5388](v8);
  sub_253C2F37C();
  sub_253BDEDD8(&qword_269D7CD38);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253C16A90();
  sub_253BDEDD8(&qword_269D7CD40);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  sub_253CD8DE0(v2);
  sub_253CC30EC();
  sub_253CD96D8();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t v11 = sub_253CD9430();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12 || (sub_253CD9094(v11, v12), sub_253CD9964(), v2))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    unint64_t v14 = v13;
    sub_253BDEDD8(&qword_269D7CA68);
    void *v14 = &type metadata for FeedbackLearning.DisambiguationPromptResult;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253C0FD9C();
    v15();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v16 = sub_253CD91C8();
    v17(v16);
    unint64_t v2 = v0;
LABEL_7:
    uint64_t v18 = (uint64_t)v2;
    goto LABEL_8;
  }
  switch(v28)
  {
    case 1:
      sub_253CC31D0();
      sub_253CD8D44();
      goto LABEL_12;
    case 2:
      sub_253CC3184();
      sub_253CD8D44();
LABEL_12:
      sub_253CD9690();
      goto LABEL_13;
    case 3:
      sub_253CC3138();
      sub_253CD9608();
      sub_253BEFD20();
      v22();
      swift_unknownObjectRelease();
      uint64_t v23 = sub_253CD8B3C();
      v24(v23);
      uint64_t v18 = (uint64_t)v0;
      uint64_t v25 = v29;
      goto LABEL_14;
    default:
      sub_253CC321C();
      sub_253CD8D44();
      sub_253CD9C6C();
LABEL_13:
      sub_253BEFBCC();
      v19();
      swift_unknownObjectRelease();
      uint64_t v20 = sub_253CD8B3C();
      v21(v20);
      uint64_t v18 = (uint64_t)v0;
      uint64_t v25 = v29;
LABEL_14:
      *uint64_t v25 = v28;
      break;
  }
LABEL_8:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v18);
  sub_253CD93FC();
  sub_253C5993C();
}

void sub_253CB0790()
{
}

void sub_253CB07A8()
{
}

void FeedbackLearning.DisambiguationPromptResult.description.getter()
{
  switch(*v0)
  {
    case 1:
      sub_253CD989C();
      break;
    default:
      return;
  }
}

uint64_t static FeedbackLearning.CandidateOutcome.== infix(_:_:)(unsigned char *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (!(v2 >> 6))
  {
    if (v3 <= 0x3F) {
      return v2 == v3;
    }
    return sub_253BE181C();
  }
  if (v2 >> 6 == 1)
  {
    if ((v3 & 0xC0) == 0x40) {
      return ((v3 ^ v2) & 0x3F) == 0;
    }
    return sub_253BE181C();
  }
  switch(*a1)
  {
    case 0x81:
      if (v3 != 129) {
        return sub_253BE181C();
      }
      break;
    case 0x82:
      if (v3 != 130) {
        return sub_253BE181C();
      }
      break;
    case 0x83:
      if (v3 != 131) {
        return sub_253BE181C();
      }
      break;
    default:
      if (v3 != 128) {
        return sub_253BE181C();
      }
      break;
  }
  return 1;
}

uint64_t sub_253CB0904(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x616D7269666E6F63 && a2 == 0xEC0000006E6F6974;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6769626D61736964 && a2 == 0xEE006E6F69746175;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6465727265666E69 && a2 == 0xEF73736563637553;
      if (v7 || (sub_253DF5C90() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6465727265666E69 && a2 == 0xEF6572756C696146;
        if (v8 || (sub_253DF5C90() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000010 && a2 == 0x8000000253E195C0 || (sub_253DF5C90() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v10 = sub_253DF5C90();
          swift_bridgeObjectRelease();
          if (v10) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_253CB0BEC()
{
  return 6;
}

unint64_t sub_253CB0BF4(char a1)
{
  unint64_t result = 0x616D7269666E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6769626D61736964;
      break;
    case 2:
    case 3:
      unint64_t result = 0x6465727265666E69;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253CB0CE0()
{
  return 12383;
}

unint64_t sub_253CB0CEC()
{
  return sub_253CB0BF4(*v0);
}

uint64_t sub_253CB0CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CB0904(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CB0D1C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253CB0BEC();
  *a1 = result;
  return result;
}

uint64_t sub_253CB0D44(uint64_t a1)
{
  unint64_t v2 = sub_253CC3268();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB0D80(uint64_t a1)
{
  unint64_t v2 = sub_253CC3268();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB0DBC()
{
  return sub_253CC0540();
}

uint64_t sub_253CB0DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CBE960(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_253CB0E04(uint64_t a1)
{
  unint64_t v2 = sub_253CC347C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB0E40(uint64_t a1)
{
  unint64_t v2 = sub_253CC347C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB0E7C(uint64_t a1)
{
  unint64_t v2 = sub_253CC33E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB0EB8(uint64_t a1)
{
  unint64_t v2 = sub_253CC33E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB0EF4(uint64_t a1)
{
  unint64_t v2 = sub_253CC334C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB0F30(uint64_t a1)
{
  unint64_t v2 = sub_253CC334C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB0F6C(uint64_t a1)
{
  unint64_t v2 = sub_253CC3300();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB0FA8(uint64_t a1)
{
  unint64_t v2 = sub_253CC3300();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB0FE4(uint64_t a1)
{
  unint64_t v2 = sub_253CC3398();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB1020(uint64_t a1)
{
  unint64_t v2 = sub_253CC3398();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB105C(uint64_t a1)
{
  unint64_t v2 = sub_253CC32B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB1098(uint64_t a1)
{
  unint64_t v2 = sub_253CC32B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.CandidateOutcome.encode(to:)()
{
  sub_253C59954();
  unint64_t v2 = v1;
  sub_253BDEDD8(&qword_269D7CD48);
  sub_253C0F830();
  v24[10] = v4;
  v24[11] = v3;
  MEMORY[0x270FA5388](v3);
  sub_253CD8BC8(v5, v24[0]);
  sub_253BDEDD8(&qword_269D7CD50);
  sub_253C0F830();
  v24[7] = v7;
  v24[8] = v6;
  MEMORY[0x270FA5388](v6);
  sub_253CD8DA4(v8, v24[0]);
  sub_253BDEDD8(&qword_269D7CD58);
  sub_253C0F830();
  v24[4] = v10;
  v24[5] = v9;
  MEMORY[0x270FA5388](v9);
  v24[3] = (uint64_t)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253BDEDD8(&qword_269D7CD60);
  sub_253C0F830();
  v24[1] = v13;
  v24[2] = v12;
  MEMORY[0x270FA5388](v12);
  sub_253BDFA94();
  v24[0] = v14;
  sub_253BDEDD8(&qword_269D7CD68);
  sub_253C0F830();
  v24[13] = v16;
  v24[14] = v15;
  MEMORY[0x270FA5388](v15);
  sub_253C2F394();
  sub_253BDEDD8(&qword_269D7CD70);
  sub_253C0F830();
  v24[12] = v17;
  MEMORY[0x270FA5388](v18);
  sub_253C16A90();
  sub_253BDEDD8(&qword_269D7CD78);
  sub_253C0F830();
  v24[16] = v19;
  v24[17] = v20;
  MEMORY[0x270FA5388](v19);
  sub_253C2F37C();
  unsigned int v21 = *v0;
  sub_253CD8DE0(v2);
  sub_253CC3268();
  sub_253DF5E40();
  if (v21 >> 6)
  {
    if (v21 >> 6 == 1)
    {
      sub_253CC33E4();
      sub_253CD8C18();
      sub_253CC3430();
      sub_253DF5C20();
      sub_253CD9680();
    }
    else
    {
      switch(v21)
      {
        case 0x81u:
          sub_253CC334C();
          sub_253CD8C18();
          break;
        case 0x82u:
          sub_253CC3300();
          sub_253CD8C18();
          break;
        case 0x83u:
          sub_253CC32B4();
          sub_253CD8C18();
          break;
        default:
          sub_253CC3398();
          sub_253CD8C18();
          break;
      }
      sub_253CD9674();
    }
  }
  else
  {
    sub_253CC347C();
    sub_253CD8C18();
    sub_253CC34C8();
    sub_253DF5C20();
    sub_253CD9674();
  }
  sub_253BEFBCC();
  v22();
  sub_253BEFBCC();
  v23();
  sub_253C59994();
  sub_253C5993C();
}

void FeedbackLearning.CandidateOutcome.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12)
{
  sub_253C59954();
  uint64_t v14 = v13;
  uint64_t v62 = v15;
  sub_253BDEDD8(&qword_269D7CDC8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v16);
  sub_253CD8BC8(v17, v58);
  sub_253BDEDD8(&qword_269D7CDD0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v18);
  sub_253CD8BE4(v19, v59);
  sub_253BDEDD8(&qword_269D7CDD8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v20);
  sub_253C6B840(v21, v60);
  sub_253BDEDD8(&qword_269D7CDE0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v22);
  sub_253CD8DA4(v23, v61);
  sub_253BDEDD8(&qword_269D7CDE8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v24);
  sub_253C16A90();
  sub_253BDEDD8(&qword_269D7CDF0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v25);
  sub_253C566F8();
  sub_253BDEDD8(&qword_269D7CDF8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v26);
  sub_253C363A4();
  int v63 = v14;
  sub_253CD90E0(v14);
  sub_253CC3268();
  sub_253DF5E30();
  if (v12) {
    goto LABEL_12;
  }
  if (!*(void *)(sub_253DF5BB0() + 16)
    || (sub_253CD95BC(),
        uint64_t v28 = *(unsigned __int8 *)(v27 + 32),
        sub_253CD95A0(v29, v30, v31, v27 + 32, v32, v33),
        uint64_t v35 = v34,
        unint64_t v37 = v36,
        swift_bridgeObjectRelease(),
        v35 != v37 >> 1))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v39 = v38;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v39 = &type metadata for FeedbackLearning.CandidateOutcome;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253C0FD9C();
    v40();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v47 = sub_253CD91B4();
    v48(v47);
LABEL_12:
    uint64_t v49 = (uint64_t)v63;
    goto LABEL_13;
  }
  switch(v28)
  {
    case 1:
      sub_253CC33E4();
      sub_253CD8D64();
      sub_253CC3514();
      sub_253CD9ACC();
      sub_253BEFBCC();
      v56();
      swift_unknownObjectRelease();
      sub_253C0FFA4();
      v57();
      a10 = a12 | 0x40;
      goto LABEL_16;
    case 2:
      sub_253CC3398();
      sub_253CD8D64();
      sub_253CD9690();
      sub_253BEFBCC();
      v41();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v42();
      a10 = 0x80;
      goto LABEL_14;
    case 3:
      sub_253CC334C();
      sub_253CD8D64();
      sub_253BEFBCC();
      v43();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v44();
      a10 = -127;
      goto LABEL_14;
    case 4:
      sub_253CC3300();
      sub_253CD8D64();
      sub_253BEFD5C();
      v45();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v46();
      a10 = -126;
      goto LABEL_14;
    case 5:
      sub_253CC32B4();
      sub_253CD8D64();
      sub_253BEFBCC();
      v50();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v51();
      a10 = -125;
LABEL_14:
      uint64_t v49 = (uint64_t)v63;
      uint64_t v52 = v62;
      break;
    default:
      sub_253CC347C();
      sub_253CD8D64();
      sub_253CC3560();
      sub_253CD9ACC();
      sub_253BEFBCC();
      v53();
      swift_unknownObjectRelease();
      sub_253C0FFA4();
      v54();
LABEL_16:
      uint64_t v49 = (uint64_t)v63;
      uint64_t v52 = v62;
      break;
  }
  *uint64_t v52 = a10;
LABEL_13:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v49);
  sub_253C59994();
  sub_253C5993C();
}

void sub_253CB1C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FeedbackLearning.CandidateOutcome.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8[0], vars8[1], vars8[2]);
}

void sub_253CB1C20()
{
}

unint64_t FeedbackLearning.CandidateOutcome.description.getter()
{
  unsigned int v1 = *v0;
  if (!(v1 >> 6))
  {
    sub_253CD9834();
    swift_bridgeObjectRelease();
    strcpy((char *)v3, ".confirmation(");
    HIBYTE(v3[1]) = -18;
    sub_253DF52E0();
    swift_bridgeObjectRelease();
    sub_253C8EFFC();
    return v3[0];
  }
  if (v1 >> 6 == 1)
  {
    sub_253CD9834();
    sub_253DF52E0();
    sub_253CAF070();
    return v3[0];
  }
  unint64_t result = sub_253CD98A8();
  switch(v1)
  {
    case 0x82u:
      ++result;
      break;
    case 0x83u:
      unint64_t result = 0x6E776F6E6B6E752ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253CB1DDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x766C6F7365726E75 && a2 == 0xEA00000000006465;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000253E195E0 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000253E19600 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465747563657865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v7 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v7) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_253CB1F90(char a1)
{
  unint64_t result = 0x766C6F7365726E75;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6465747563657865;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_253CB2034()
{
  return sub_253CB1F90(*v0);
}

uint64_t sub_253CB203C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CB1DDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CB2064(uint64_t a1)
{
  unint64_t v2 = sub_253CC35AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB20A0(uint64_t a1)
{
  unint64_t v2 = sub_253CC35AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB20DC(uint64_t a1)
{
  unint64_t v2 = sub_253CC35F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB2118(uint64_t a1)
{
  unint64_t v2 = sub_253CC35F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB2154(uint64_t a1)
{
  unint64_t v2 = sub_253CC3690();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB2190(uint64_t a1)
{
  unint64_t v2 = sub_253CC3690();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB21CC(uint64_t a1)
{
  unint64_t v2 = sub_253CC3644();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB2208(uint64_t a1)
{
  unint64_t v2 = sub_253CC3644();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB2244(uint64_t a1)
{
  unint64_t v2 = sub_253CC36DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB2280(uint64_t a1)
{
  unint64_t v2 = sub_253CC36DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.CandidateParameterResolution.encode(to:)()
{
  sub_253C59954();
  unint64_t v2 = v1;
  sub_253BDEDD8(&qword_269D7CE10);
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253CD8AB8(v4, v18);
  sub_253BDEDD8(&qword_269D7CE18);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253C567E0(v6, v19);
  sub_253BDEDD8(&qword_269D7CE20);
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253CD8BE4(v8, v20);
  sub_253BDEDD8(&qword_269D7CE28);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253C16A90();
  sub_253BDEDD8(&qword_269D7CE30);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = *v0;
  sub_253CD9818(v2);
  sub_253CC35AC();
  sub_253CD9868();
  switch(v11)
  {
    case 1:
      sub_253CC3690();
      sub_253CD8CA8();
      goto LABEL_6;
    case 2:
      sub_253CC3644();
      sub_253CD8CA8();
      goto LABEL_6;
    case 3:
      sub_253CC35F8();
      sub_253CD8CA8();
LABEL_6:
      sub_253CD9338();
      break;
    default:
      sub_253CC36DC();
      sub_253CD8CA8();
      sub_253CD9674();
      break;
  }
  sub_253BEFBCC();
  v14(v12, v13);
  sub_253C634D8();
  v17(v15, v16);
  sub_253C5993C();
}

uint64_t _s23IntelligenceFlowRuntime16FeedbackLearningO24ConfirmationPromptResultO9hashValueSivg_0()
{
  return sub_253DF5DD0();
}

void FeedbackLearning.CandidateParameterResolution.init(from:)()
{
  sub_253C59954();
  unint64_t v2 = v1;
  uint64_t v29 = v3;
  sub_253BDEDD8(&qword_269D7CE60);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253CD9374(v5, v26);
  sub_253BDEDD8(&qword_269D7CE68);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253C567E0(v7, v27);
  sub_253BDEDD8(&qword_269D7CE70);
  sub_253C0F830();
  MEMORY[0x270FA5388](v8);
  sub_253C2F37C();
  sub_253BDEDD8(&qword_269D7CE78);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253C16A90();
  sub_253BDEDD8(&qword_269D7CE80);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  sub_253CD8DE0(v2);
  sub_253CC35AC();
  sub_253CD96D8();
  if (v0) {
    goto LABEL_7;
  }
  uint64_t v11 = sub_253CD9430();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12 || (sub_253CD9094(v11, v12), sub_253CD9964(), v2))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v14 = v13;
    sub_253BDEDD8(&qword_269D7CA68);
    void *v14 = &type metadata for FeedbackLearning.CandidateParameterResolution;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253C0FD9C();
    v15();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v16 = sub_253CD91C8();
    v17(v16);
    unint64_t v2 = v0;
LABEL_7:
    uint64_t v18 = (uint64_t)v2;
    goto LABEL_8;
  }
  switch(v28)
  {
    case 1:
      sub_253CC3690();
      sub_253CD8D44();
      goto LABEL_12;
    case 2:
      sub_253CC3644();
      sub_253CD8D44();
LABEL_12:
      sub_253CD9690();
      goto LABEL_13;
    case 3:
      sub_253CC35F8();
      sub_253CD9608();
      sub_253BEFD20();
      v22();
      swift_unknownObjectRelease();
      uint64_t v23 = sub_253CD8B3C();
      v24(v23);
      uint64_t v18 = (uint64_t)v0;
      uint64_t v25 = v29;
      goto LABEL_14;
    default:
      sub_253CC36DC();
      sub_253CD8D44();
      sub_253CD9C6C();
LABEL_13:
      sub_253BEFBCC();
      v19();
      swift_unknownObjectRelease();
      uint64_t v20 = sub_253CD8B3C();
      v21(v20);
      uint64_t v18 = (uint64_t)v0;
      uint64_t v25 = v29;
LABEL_14:
      *uint64_t v25 = v28;
      break;
  }
LABEL_8:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v18);
  sub_253CD93FC();
  sub_253C5993C();
}

void sub_253CB29F8()
{
}

void sub_253CB2A10()
{
}

void FeedbackLearning.CandidateParameterResolution.description.getter()
{
  switch(*v0)
  {
    case 1:
      sub_253CD989C();
      break;
    default:
      return;
  }
}

uint64_t sub_253CB2AD0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x7972657571 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_253CB2B50()
{
  return 0x7972657571;
}

uint64_t sub_253CB2B68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CB2AD0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_253CB2B94(uint64_t a1)
{
  unint64_t v2 = sub_253CC3728();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB2BD0(uint64_t a1)
{
  unint64_t v2 = sub_253CC3728();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.CandidateSearchQuery.encode(to:)()
{
  sub_253CD92C0();
  sub_253BDEDD8(&qword_269D7CE88);
  sub_253C0F830();
  MEMORY[0x270FA5388](v0);
  sub_253CD8AD4();
  sub_253CC3728();
  sub_253C4BC6C();
  sub_253DF2F10();
  sub_253CC3794(&qword_269D7BE98, MEMORY[0x263F4D738]);
  sub_253C4BBE8();
  sub_253C0FDC8();
  v1();
  sub_253CD91DC();
}

void FeedbackLearning.CandidateSearchQuery.init(from:)()
{
  sub_253C59954();
  sub_253C4BCA0(v2);
  sub_253DF2F10();
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253C4BC2C(v4, v11);
  sub_253BDEDD8(&qword_269D7CE98);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_253C4BC10();
  uint64_t v7 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(v6);
  uint64_t v8 = sub_253BDF9FC(v7);
  MEMORY[0x270FA5388](v8);
  sub_253CD90E0(v0);
  sub_253CC3728();
  sub_253C4BC48();
  if (!v1)
  {
    sub_253CC3794(&qword_269D7BE90, MEMORY[0x263F4D738]);
    sub_253C4BB70();
    sub_253BEFBCC();
    v9();
    sub_253C10134();
    v10();
    sub_253CC392C();
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v0);
  sub_253CD9300();
  sub_253C5993C();
}

void sub_253CB2ED0()
{
}

void sub_253CB2EE8()
{
}

void static FeedbackLearning.CandidateParameter.== infix(_:_:)()
{
  sub_253C1CED0();
  sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v17 = v2;
  MEMORY[0x270FA5388](v3);
  sub_253CD8E8C();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v4);
  sub_253C9D2E0();
  MEMORY[0x270FA5388](v5);
  sub_253CD8E6C();
  uint64_t v6 = sub_253BDEDD8(&qword_269D7CEA0);
  uint64_t v7 = sub_253BDF9FC(v6);
  MEMORY[0x270FA5388](v7);
  sub_253C8F0B4();
  uint64_t v9 = (void *)(v0 + v8);
  sub_253CC3B6C();
  sub_253C115AC();
  sub_253CC3B6C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_253CC3B6C();
      uint64_t v12 = *v1;
      uint64_t v11 = v1[1];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        if (v12 == *v9 && v11 == v9[1])
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          sub_253C10F58();
          sub_253DF5C90();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
    }
    else if (swift_getEnumCaseMultiPayload() == 2)
    {
LABEL_17:
      sub_253CC39A0();
      goto LABEL_18;
    }
  }
  else
  {
    sub_253CC3B6C();
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_253CD94F4();
      sub_253BEFD2C();
      v15();
      sub_253DEFFB0();
      uint64_t v16 = *(void (**)(void))(v17 + 8);
      sub_253C10F58();
      sub_253C0FD90();
      v16();
      sub_253C0FD90();
      v16();
      sub_253CC39A0();
      goto LABEL_18;
    }
    sub_253C0FD90();
    v14();
  }
  sub_253BEFAC0(v0, &qword_269D7CEA0);
LABEL_18:
  sub_253C1CEE8();
}

void FeedbackLearning.CandidateParameter.hash(into:)()
{
  sub_253C8F550();
  sub_253DEFFE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v0);
  sub_253CD8E8C();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v1);
  sub_253C16AA8();
  sub_253CC3B6C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_253DF5DC0();
      sub_253DF52C0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_253DF5DC0();
    }
  }
  else
  {
    sub_253BEFD2C();
    v3();
    sub_253DF5DC0();
    sub_253CC3794(&qword_26B255340, MEMORY[0x263F4BF98]);
    sub_253C8F5BC();
    sub_253DF5230();
    sub_253BEFD5C();
    v4();
  }
  sub_253C8F44C();
}

uint64_t sub_253CB3378(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1819242356 && a2 == 0xE400000000000000;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6574656D61726170 && a2 == 0xE900000000000072)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_253DF5C90();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_253CB34BC(char a1)
{
  if (!a1) {
    return 1819242356;
  }
  if (a1 == 1) {
    return 0x65756C6176;
  }
  return 0x6574656D61726170;
}

uint64_t sub_253CB350C()
{
  return sub_253CB34BC(*v0);
}

uint64_t sub_253CB3514@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CB3378(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CB353C(uint64_t a1)
{
  unint64_t v2 = sub_253CC37FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB3578(uint64_t a1)
{
  unint64_t v2 = sub_253CC37FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB35B4(uint64_t a1)
{
  unint64_t v2 = sub_253CC3848();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB35F0(uint64_t a1)
{
  unint64_t v2 = sub_253CC3848();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB362C(uint64_t a1)
{
  unint64_t v2 = sub_253CC38E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB3668(uint64_t a1)
{
  unint64_t v2 = sub_253CC38E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB36A4(uint64_t a1)
{
  unint64_t v2 = sub_253CC3894();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB36E0(uint64_t a1)
{
  unint64_t v2 = sub_253CC3894();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.CandidateParameter.encode(to:)()
{
  sub_253C59954();
  uint64_t v25 = v0;
  unint64_t v2 = v1;
  sub_253BDEDD8(&qword_269D7CEA8);
  sub_253C0F830();
  v24[7] = v4;
  v24[8] = v3;
  MEMORY[0x270FA5388](v3);
  sub_253CD8BE4(v5, v24[0]);
  v24[9] = sub_253BDEDD8(&qword_269D7CEB0);
  sub_253C0F830();
  v24[2] = v6;
  MEMORY[0x270FA5388](v7);
  v24[3] = (uint64_t)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253C36350();
  sub_253DEFFE0();
  sub_253C0F830();
  v24[5] = v10;
  v24[6] = v9;
  MEMORY[0x270FA5388](v9);
  sub_253CD8AB8(v11, v24[0]);
  sub_253BDEDD8(&qword_269D7CEB8);
  sub_253C0F830();
  v24[1] = v12;
  MEMORY[0x270FA5388](v13);
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v14);
  sub_253C2F364();
  sub_253BDEDD8(&qword_269D7CEC0);
  sub_253C0F830();
  uint64_t v26 = v15;
  MEMORY[0x270FA5388](v16);
  sub_253C2F37C();
  sub_253BDF5F8(v2, v2[3]);
  sub_253CC37FC();
  sub_253DF5E40();
  sub_253CC3B6C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_253CC3848();
      sub_253CD8C54();
      sub_253DF5BE0();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_253CC38E0();
      sub_253CD8C54();
      sub_253CD96A8();
    }
    sub_253BEFBCC();
    v18();
    sub_253BEFBCC();
    v19();
  }
  else
  {
    sub_253BEFD2C();
    v20();
    sub_253CC3894();
    sub_253CD8C54();
    sub_253CC3794(&qword_269D7CEE0, MEMORY[0x263F4BF98]);
    sub_253DF5C20();
    sub_253BEFD5C();
    v21();
    sub_253C0FDC8();
    v22();
    sub_253BEFBCC();
    v23();
  }
  sub_253C59994();
  sub_253C5993C();
}

uint64_t FeedbackLearning.CandidateParameter.hashValue.getter()
{
  return sub_253DF5DD0();
}

void FeedbackLearning.CandidateParameter.init(from:)()
{
  sub_253C59954();
  uint64_t v3 = v2;
  sub_253BDEDD8(&qword_269D7CEF0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253CD9390(v5, v41);
  sub_253BDEDD8(&qword_269D7CEF8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253CD8BAC(v7, v42);
  sub_253BDEDD8(&qword_269D7CF00);
  sub_253C0F830();
  MEMORY[0x270FA5388](v8);
  sub_253C567E0(v9, v43);
  sub_253BDEDD8(&qword_269D7CF08);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_253C4BC10();
  uint64_t v12 = type metadata accessor for FeedbackLearning.CandidateParameter(v11);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v13);
  sub_253CA0118();
  MEMORY[0x270FA5388](v14);
  sub_253CD8F58();
  MEMORY[0x270FA5388](v15);
  sub_253CD8E6C();
  sub_253CD8E50(v3);
  sub_253CC37FC();
  sub_253DF5E30();
  if (v0) {
    goto LABEL_11;
  }
  uint64_t v44 = v3;
  if (!*(void *)(sub_253DF5BB0() + 16)
    || (sub_253CD95BC(),
        int v17 = *(unsigned __int8 *)(v16 + 32),
        sub_253CD95A0(v18, v19, v20, v16 + 32, v21, v22),
        uint64_t v24 = v23,
        unint64_t v26 = v25,
        swift_bridgeObjectRelease(),
        v24 != v26 >> 1))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v28 = v27;
    sub_253BDEDD8(&qword_269D7CA68);
    uint64_t *v28 = v12;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253C0FD9C();
    v29();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_253BEFD5C();
    v30();
    uint64_t v3 = v44;
LABEL_11:
    uint64_t v31 = (uint64_t)v3;
    goto LABEL_12;
  }
  if (v17)
  {
    if (v17 == 1)
    {
      sub_253CC3894();
      sub_253CD95E4();
      sub_253DEFFE0();
      sub_253CC3794(&qword_269D7CF10, MEMORY[0x263F4BF98]);
      sub_253DF5BA0();
      sub_253BEFBCC();
      v34();
      swift_unknownObjectRelease();
      sub_253C0FFA4();
      v35();
    }
    else
    {
      sub_253CC3848();
      sub_253CD95E4();
      uint64_t v36 = sub_253DF5B60();
      uint64_t v38 = v37;
      sub_253BEFBCC();
      v39();
      swift_unknownObjectRelease();
      sub_253C0FDBC();
      v40();
      *uint64_t v1 = v36;
      v1[1] = v38;
    }
    swift_storeEnumTagMultiPayload();
    sub_253CD9800();
  }
  else
  {
    sub_253CC38E0();
    sub_253DF5B30();
    sub_253BEFBCC();
    v32();
    swift_unknownObjectRelease();
    sub_253CD969C();
    sub_253BEFBCC();
    v33();
    swift_storeEnumTagMultiPayload();
  }
  sub_253CC392C();
  uint64_t v31 = (uint64_t)v44;
LABEL_12:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v31);
  sub_253CD9300();
  sub_253C5993C();
}

void sub_253CB41C4()
{
}

void sub_253CB41DC()
{
}

uint64_t sub_253CB4200()
{
  return sub_253DF5DD0();
}

uint64_t FeedbackLearning.CandidateParameter.description.getter()
{
  sub_253DEFFE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v0);
  sub_253CD8E8C();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v1);
  sub_253C4E9DC();
  sub_253CC3B6C();
  sub_253C10B60();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_253DF52E0();
      swift_bridgeObjectRelease();
      sub_253C8EFFC();
      return 0x74656D617261702ELL;
    }
    else
    {
      return 0x6C6F6F742ELL;
    }
  }
  else
  {
    sub_253C10F58();
    sub_253BEFD2C();
    v4();
    sub_253DEFFD0();
    sub_253DF5C40();
    sub_253DF52E0();
    swift_bridgeObjectRelease();
    uint64_t v3 = 0x2865756C61762ELL;
    sub_253C0FDBC();
    v5();
  }
  return v3;
}

void static FeedbackLearning.CandidateEvaluation.== infix(_:_:)()
{
  sub_253C1CED0();
  uint64_t v3 = sub_253C8F1DC();
  type metadata accessor for FeedbackLearning.CandidateSearchQuery(v3);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v4);
  sub_253C2F37C();
  uint64_t v5 = sub_253BDEDD8(&qword_269D7CF18);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v6);
  sub_253C16AC0();
  uint64_t v7 = sub_253BDEDD8(&qword_269D7CF20);
  uint64_t v8 = sub_253BDF9FC(v7);
  MEMORY[0x270FA5388](v8);
  sub_253C2F354();
  uint64_t v11 = v9 - v10;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v26 - v14;
  MEMORY[0x270FA5388](v13);
  int v17 = (char *)&v26 - v16;
  if ((sub_253DEFFB0() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v18 = (int *)type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  sub_253C8F1F8(v18[5]);
  static FeedbackLearning.CandidateParameter.== infix(_:_:)();
  if ((v19 & 1) == 0) {
    goto LABEL_16;
  }
  sub_253C8F1F8(v18[6]);
  if ((sub_253DF2680() & 1) == 0) {
    goto LABEL_16;
  }
  sub_253C2E770(v1 + v18[7], (uint64_t)v17, &qword_269D7CF20);
  sub_253C2E770(v0 + v18[7], (uint64_t)v15, &qword_269D7CF20);
  uint64_t v20 = v2 + *(int *)(v5 + 48);
  sub_253C2E770((uint64_t)v17, v2, &qword_269D7CF20);
  uint64_t v26 = v20;
  sub_253C2E770((uint64_t)v15, v20, &qword_269D7CF20);
  sub_253CD8D84(v2);
  if (!v21)
  {
    sub_253C2E770(v2, v11, &qword_269D7CF20);
    sub_253CD8D84(v26);
    if (!v21)
    {
      sub_253CC392C();
      char V2eeoiySbAE_AEtFZ_0 = _s23IntelligenceFlowRuntime16FeedbackLearningO20CandidateSearchQueryV2eeoiySbAE_AEtFZ_0();
      sub_253CC39A0();
      sub_253BEFAC0((uint64_t)v15, &qword_269D7CF20);
      sub_253BEFAC0((uint64_t)v17, &qword_269D7CF20);
      sub_253CC39A0();
      uint64_t v23 = sub_253C105C0();
      sub_253BEFAC0(v23, v24);
      if ((V2eeoiySbAE_AEtFZ_0 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    sub_253BEFAC0((uint64_t)v15, &qword_269D7CF20);
    sub_253BEFAC0((uint64_t)v17, &qword_269D7CF20);
    sub_253CC39A0();
LABEL_12:
    sub_253BEFAC0(v2, &qword_269D7CF18);
    goto LABEL_16;
  }
  sub_253BEFAC0((uint64_t)v15, &qword_269D7CF20);
  sub_253BEFAC0((uint64_t)v17, &qword_269D7CF20);
  sub_253CD8D84(v26);
  if (!v21) {
    goto LABEL_12;
  }
  sub_253BEFAC0(v2, &qword_269D7CF20);
LABEL_14:
  if (*(unsigned __int8 *)(v1 + v18[8]) == *(unsigned __int8 *)(v0 + v18[8]))
  {
    uint64_t v25 = v18[9];
    char v28 = *(unsigned char *)(v1 + v25);
    unsigned __int8 v27 = *(unsigned char *)(v0 + v25);
    static FeedbackLearning.CandidateOutcome.== infix(_:_:)(&v28, &v27);
  }
LABEL_16:
  sub_253C1CEE8();
}

uint64_t sub_253CB473C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6574656D61726170 && a2 == 0xE900000000000072;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000253E19620 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x74616469646E6163 && a2 == 0xEE00797265755165;
      if (v7 || (sub_253DF5C90() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x6974756C6F736572 && a2 == 0xEA00000000006E6FLL;
        if (v8 || (sub_253DF5C90() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v10 = sub_253DF5C90();
          swift_bridgeObjectRelease();
          if (v10) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

unint64_t sub_253CB49FC(char a1)
{
  unint64_t result = 0x6E656D6574617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6574656D61726170;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x74616469646E6163;
      break;
    case 4:
      unint64_t result = 0x6974756C6F736572;
      break;
    case 5:
      unint64_t result = 0x656D6F6374756FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_253CB4AE8()
{
  return sub_253CB49FC(*v0);
}

uint64_t sub_253CB4AF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CB473C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CB4B18(uint64_t a1)
{
  unint64_t v2 = sub_253CC39F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB4B54(uint64_t a1)
{
  unint64_t v2 = sub_253CC39F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.CandidateEvaluation.encode(to:)()
{
  sub_253CD92C0();
  sub_253CD8E7C();
  sub_253BDEDD8(&qword_269D7CF28);
  sub_253C0F830();
  MEMORY[0x270FA5388](v1);
  sub_253CD8AD4();
  sub_253CC39F0();
  sub_253C2F458();
  sub_253DEFFE0();
  sub_253CC3794(&qword_269D7CEE0, MEMORY[0x263F4BF98]);
  sub_253CD8AF4();
  if (!v0)
  {
    type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
    sub_253CD97D0();
    sub_253CC3794(&qword_269D7CF38, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
    sub_253CD8D2C();
    sub_253CD9708();
    sub_253CC3794(&qword_269D7CF40, MEMORY[0x263F4D120]);
    sub_253CD8D2C();
    type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
    sub_253CC3794(&qword_269D7CF48, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateSearchQuery);
    sub_253DF5BD0();
    sub_253CC3A3C();
    sub_253CD8D2C();
    sub_253CC3A88();
    sub_253CD8D2C();
  }
  uint64_t v2 = sub_253CD8C00();
  v3(v2);
  sub_253CD9344();
  sub_253CD91DC();
}

void FeedbackLearning.CandidateEvaluation.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13)
{
  sub_253C59954();
  uint64_t v47 = v13;
  uint64_t v15 = v14;
  uint64_t v37 = v16;
  uint64_t v17 = sub_253BDEDD8(&qword_269D7CF20);
  uint64_t v18 = sub_253BDF9FC(v17);
  MEMORY[0x270FA5388](v18);
  uint64_t v38 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253C36350();
  sub_253DF26C0();
  sub_253C0F830();
  uint64_t v39 = v21;
  uint64_t v40 = v20;
  MEMORY[0x270FA5388](v20);
  sub_253CD92D4(v22, v37);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v23);
  sub_253CD93AC();
  sub_253C0F830();
  uint64_t v45 = v24;
  MEMORY[0x270FA5388](v25);
  sub_253C2F394();
  sub_253BDEDD8(&qword_269D7CF60);
  sub_253C0F830();
  uint64_t v41 = v27;
  uint64_t v42 = v26;
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = sub_253C566DC();
  uint64_t v43 = type metadata accessor for FeedbackLearning.CandidateEvaluation(v28);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v29);
  sub_253CD8AB8(v30, v37);
  uint64_t v46 = v15;
  sub_253CD8DE0(v15);
  sub_253CC39F0();
  sub_253CD9B44();
  if (v13)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v46);
  }
  else
  {
    sub_253CC3794(&qword_269D7CF10, MEMORY[0x263F4BF98]);
    sub_253CD9AEC();
    sub_253DF5BA0();
    uint64_t v31 = v44;
    sub_253BEFD2C();
    v32();
    sub_253C2F438();
    sub_253CC3794(&qword_269D7CF68, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
    sub_253DF5BA0();
    unint64_t v33 = (int *)v43;
    sub_253CC392C();
    sub_253CD9A00();
    sub_253CC3794(&qword_269D7CF70, MEMORY[0x263F4D120]);
    sub_253CD99E0();
    sub_253DF5BA0();
    sub_253BEFD2C();
    v34();
    type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
    sub_253CC3794(&qword_269D7CF78, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateSearchQuery);
    uint64_t v35 = (uint64_t)v38;
    sub_253CD99E0();
    sub_253DF5B50();
    sub_253C61B78(v35, v31 + v33[7], &qword_269D7CF20);
    sub_253CC3AD4();
    sub_253DF5BA0();
    *(unsigned char *)(v31 + v33[8]) = a13;
    sub_253CC3B20();
    sub_253DF5BA0();
    sub_253BEFBCC();
    v36();
    *(unsigned char *)(v31 + v33[9]) = a11;
    sub_253CC3B6C();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v46);
    sub_253CC39A0();
  }
  sub_253CD93FC();
  sub_253C5993C();
}

void sub_253CB541C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FeedbackLearning.CandidateEvaluation.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SBYTE1(vars8), SBYTE2(vars8), SHIBYTE(vars8));
}

void sub_253CB5434()
{
}

void static FeedbackLearning.TaskFailureReason.== infix(_:_:)()
{
  sub_253C1CED0();
  sub_253DF2C40();
  sub_253C0F830();
  uint64_t v25 = v2;
  uint64_t v26 = v1;
  MEMORY[0x270FA5388](v1);
  sub_253CD8AB8(v3, v24);
  uint64_t v4 = sub_253DF00F0();
  sub_253C0F830();
  uint64_t v27 = v5;
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253C63598();
  type metadata accessor for FeedbackLearning.TaskFailureReason(v7);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v8);
  sub_253CA0118();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v12 = sub_253BDEDD8(&qword_269D7CF90);
  uint64_t v13 = sub_253BDF9FC(v12);
  MEMORY[0x270FA5388](v13);
  sub_253C8F0B4();
  sub_253CC3B6C();
  sub_253CC3B6C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_253CC3B6C();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v15 = v25;
        sub_253BEFD2C();
        v16();
        sub_253C115AC();
        sub_253DF2C30();
        uint64_t v17 = *(void (**)(void))(v15 + 8);
        sub_253BEFD20();
        v17();
        sub_253BEFD20();
        v17();
LABEL_12:
        sub_253CC39A0();
        goto LABEL_13;
      }
      uint64_t v20 = sub_253CD9674();
      v21(v20);
    }
    else if (swift_getEnumCaseMultiPayload() == 2)
    {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v18 = v27;
    sub_253CC3B6C();
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_253BEFD2C();
      v22();
      sub_253DF00E0();
      uint64_t v23 = *(void (**)(void))(v18 + 8);
      sub_253C0FDBC();
      v23();
      ((void (*)(char *, uint64_t))v23)(v11, v4);
      goto LABEL_12;
    }
    sub_253C0FDBC();
    v19();
  }
  sub_253BEFAC0(v0, &qword_269D7CF90);
LABEL_13:
  sub_253C1CEE8();
}

uint64_t sub_253CB5788(char a1)
{
  if (!a1) {
    return 0x6E776F6E6B6E75;
  }
  if (a1 == 1) {
    return 0xD000000000000010;
  }
  return 0x6C61636974697263;
}

uint64_t sub_253CB57F0()
{
  return sub_253CB5788(*v0);
}

uint64_t sub_253CB57F8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253CBE850();
  *a1 = result;
  return result;
}

uint64_t sub_253CB5820(uint64_t a1)
{
  unint64_t v2 = sub_253CC3BD8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB585C(uint64_t a1)
{
  unint64_t v2 = sub_253CC3BD8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB5898(uint64_t a1)
{
  unint64_t v2 = sub_253CC3C24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB58D4(uint64_t a1)
{
  unint64_t v2 = sub_253CC3C24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB5910(uint64_t a1)
{
  unint64_t v2 = sub_253CC3C70();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB594C(uint64_t a1)
{
  unint64_t v2 = sub_253CC3C70();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB5988(uint64_t a1)
{
  unint64_t v2 = sub_253CC3CBC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB59C4(uint64_t a1)
{
  unint64_t v2 = sub_253CC3CBC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.TaskFailureReason.encode(to:)()
{
  sub_253C59954();
  sub_253CD97C0();
  sub_253BDEDD8(&qword_269D7CF98);
  sub_253C0F830();
  MEMORY[0x270FA5388](v2);
  sub_253CD8D0C(v3, v23);
  sub_253DF2C40();
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253C6B840(v5, v24);
  sub_253BDEDD8(&qword_269D7CFA0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253CD8B20(v7, v25);
  sub_253DF00F0();
  sub_253C0F830();
  uint64_t v26 = v9;
  uint64_t v27 = v8;
  MEMORY[0x270FA5388](v8);
  sub_253C566F8();
  sub_253BDEDD8(&qword_269D7CFA8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_253C3330C();
  type metadata accessor for FeedbackLearning.TaskFailureReason(v11);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  sub_253C2F394();
  sub_253BDEDD8(&qword_269D7CFB0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v13);
  sub_253C2F37C();
  sub_253BDF5F8(v0, v0[3]);
  sub_253CC3BD8();
  sub_253CD972C();
  sub_253CC3B6C();
  sub_253CD9A0C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      sub_253CC3CBC();
      sub_253DF5BC0();
      sub_253BEFBCC();
      v21();
      sub_253C8F564();
      sub_253BEFBCC();
      v22();
      goto LABEL_7;
    }
    sub_253CD94F4();
    sub_253BEFD2C();
    v15();
    sub_253CC3C24();
    sub_253CD8C18();
    sub_253CC3794(&qword_269D7CFC8, MEMORY[0x263F4D5F8]);
    sub_253DF5C20();
    sub_253BEFBCC();
    v16();
    sub_253C0FD90();
    v17();
  }
  else
  {
    sub_253BEFD2C();
    v18();
    sub_253CC3C70();
    sub_253CD8C18();
    sub_253CC3794(&qword_269D7CFD8, MEMORY[0x263F4C070]);
    sub_253DF5C20();
    sub_253C0FD90();
    v19();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v27);
  }
  sub_253BEFBCC();
  v20();
LABEL_7:
  sub_253C59994();
  sub_253C5993C();
}

void FeedbackLearning.TaskFailureReason.init(from:)()
{
  sub_253C59954();
  uint64_t v2 = v1;
  sub_253BDEDD8(&qword_269D7CFE8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253CD8B20(v4, v32);
  sub_253BDEDD8(&qword_269D7CFF0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253CD9390(v6, v33);
  sub_253BDEDD8(&qword_269D7CFF8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253C567E0(v8, v34);
  sub_253BDEDD8(&qword_269D7D000);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_253C598FC();
  uint64_t v11 = type metadata accessor for FeedbackLearning.TaskFailureReason(v10);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  sub_253C9D2E0();
  MEMORY[0x270FA5388](v13);
  sub_253CD8F58();
  MEMORY[0x270FA5388](v14);
  sub_253CD8E6C();
  sub_253BDF5F8(v2, v2[3]);
  sub_253CC3BD8();
  sub_253CD9B44();
  if (v0) {
    goto LABEL_11;
  }
  uint64_t v15 = sub_253DF5BB0();
  uint64_t v16 = *(void *)(v15 + 16);
  if (!v16
    || (int v17 = *(unsigned __int8 *)(v15 + 32),
        sub_253CD01CC(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
        uint64_t v19 = v18,
        unint64_t v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v23 = v22;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v23 = v11;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253C0FD9C();
    v24();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_253BEFD20();
    v25();
LABEL_11:
    uint64_t v26 = (uint64_t)v2;
    goto LABEL_12;
  }
  if (v17)
  {
    if (v17 == 1)
    {
      sub_253CC3C70();
      sub_253CD979C();
      sub_253DF00F0();
      sub_253CC3794(&qword_269D7D010, MEMORY[0x263F4C070]);
      sub_253DF5BA0();
      sub_253BEFBCC();
      v29();
      swift_unknownObjectRelease();
      sub_253C0FFA4();
    }
    else
    {
      sub_253CC3C24();
      sub_253CD979C();
      sub_253DF2C40();
      sub_253CC3794(&qword_269D7D008, MEMORY[0x263F4D5F8]);
      sub_253DF5BA0();
      sub_253BEFBCC();
      v31();
      swift_unknownObjectRelease();
      sub_253C11550();
    }
    v30();
    swift_storeEnumTagMultiPayload();
    sub_253CD9800();
  }
  else
  {
    sub_253CC3CBC();
    sub_253DF5B30();
    sub_253BEFBCC();
    v27();
    swift_unknownObjectRelease();
    sub_253BEFBCC();
    v28();
    swift_storeEnumTagMultiPayload();
  }
  sub_253CC392C();
  uint64_t v26 = (uint64_t)v2;
LABEL_12:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v26);
  sub_253CD9300();
  sub_253C5993C();
}

void sub_253CB64E8()
{
}

void sub_253CB6500()
{
}

void static FeedbackLearning.TaskStatus.== infix(_:_:)()
{
  sub_253C8F550();
  uint64_t v1 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  uint64_t v2 = sub_253BDF9FC(v1);
  MEMORY[0x270FA5388](v2);
  sub_253C4E9DC();
  uint64_t v3 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  uint64_t v4 = sub_253BDF9FC(v3);
  MEMORY[0x270FA5388](v4);
  sub_253C16AC0();
  uint64_t v5 = sub_253BDEDD8(&qword_269D7D018);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  sub_253C8F0B4();
  uint64_t v8 = v0 + v7;
  sub_253CC3B6C();
  sub_253CC3B6C();
  uint64_t v9 = sub_253BDEDD8(&qword_269D7C770);
  switch(_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 4, v9))
  {
    case 1u:
      sub_253C0FD54(v8, 4, v9);
      if (v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 2u:
      if (sub_253CD8FA8() != 2) {
        goto LABEL_12;
      }
      goto LABEL_6;
    case 3u:
      if (sub_253CD8FA8() != 3) {
        goto LABEL_12;
      }
      goto LABEL_6;
    case 4u:
      if (sub_253CD8FA8() != 4) {
        goto LABEL_12;
      }
LABEL_6:
      sub_253CC39A0();
      break;
    default:
      sub_253CC3B6C();
      if (sub_253CD8FA8())
      {
        sub_253CC39A0();
LABEL_12:
        sub_253BEFAC0(v0, &qword_269D7D018);
      }
      else
      {
        sub_253CC392C();
        sub_253C10F58();
        static FeedbackLearning.TaskFailureReason.== infix(_:_:)();
        sub_253CC39A0();
        sub_253C105C0();
        sub_253CC39A0();
        sub_253CC39A0();
      }
      break;
  }
  sub_253C8F44C();
}

uint64_t sub_253CB67B0()
{
  return 5;
}

uint64_t sub_253CB67B8(char a1)
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
    case 2:
      uint64_t result = 0x6465727265666E69;
      break;
    case 3:
      uint64_t result = 0x6E6F646E616261;
      break;
    case 4:
      uint64_t result = 0x6C65636E6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253CB6868()
{
  return 0x6E6F73616572;
}

uint64_t sub_253CB687C(uint64_t a1)
{
  unint64_t v2 = sub_253CC3DC0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB68B8(uint64_t a1)
{
  unint64_t v2 = sub_253CC3DC0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB68F4(uint64_t a1)
{
  unint64_t v2 = sub_253CC3D74();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB6930(uint64_t a1)
{
  unint64_t v2 = sub_253CC3D74();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB696C()
{
  return sub_253CB67B8(*v0);
}

uint64_t sub_253CB6974@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253CBF2D4();
  *a1 = result;
  return result;
}

uint64_t sub_253CB699C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253CB67B0();
  *a1 = result;
  return result;
}

uint64_t sub_253CB69C4(uint64_t a1)
{
  unint64_t v2 = sub_253CC3D28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB6A00(uint64_t a1)
{
  unint64_t v2 = sub_253CC3D28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB6A40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CBF498(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_253CB6A6C(uint64_t a1)
{
  unint64_t v2 = sub_253CC3E0C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB6AA8(uint64_t a1)
{
  unint64_t v2 = sub_253CC3E0C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB6AE4(uint64_t a1)
{
  unint64_t v2 = sub_253CC3E58();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB6B20(uint64_t a1)
{
  unint64_t v2 = sub_253CC3E58();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB6B5C(uint64_t a1)
{
  unint64_t v2 = sub_253CC3EA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB6B98(uint64_t a1)
{
  unint64_t v2 = sub_253CC3EA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.TaskStatus.encode(to:)()
{
  sub_253C59954();
  sub_253CD94C4();
  sub_253BDEDD8(&qword_269D7D020);
  sub_253C0F830();
  MEMORY[0x270FA5388](v2);
  sub_253CD8B20(v3, v23);
  sub_253BDEDD8(&qword_269D7D028);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253C6B840(v5, v24);
  sub_253BDEDD8(&qword_269D7D030);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_253CD8D0C(v7, v25);
  type metadata accessor for FeedbackLearning.TaskFailureReason(v8);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v9);
  sub_253CD8DA4(v10, v26);
  sub_253BDEDD8(&qword_269D7D038);
  sub_253C0F830();
  MEMORY[0x270FA5388](v11);
  sub_253C566F8();
  sub_253BDEDD8(&qword_269D7D040);
  sub_253C0F830();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253C63598();
  uint64_t v14 = type metadata accessor for FeedbackLearning.TaskStatus(v13);
  uint64_t v15 = sub_253BDF9FC(v14);
  MEMORY[0x270FA5388](v15);
  sub_253C363A4();
  sub_253BDEDD8(&qword_269D7D048);
  sub_253C0F830();
  MEMORY[0x270FA5388](v16);
  sub_253CD8DE0(v0);
  sub_253CC3D28();
  sub_253CD972C();
  sub_253CC3B6C();
  uint64_t v17 = sub_253BDEDD8(&qword_269D7C770);
  switch(_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 4, v17))
  {
    case 1u:
      sub_253CC3EA4();
      sub_253CD8CC4();
      uint64_t v20 = sub_253C8F564();
      goto LABEL_8;
    case 2u:
      sub_253CC3E58();
      sub_253CD8CC4();
      uint64_t v20 = sub_253CD96A8();
      goto LABEL_8;
    case 3u:
      sub_253CC3DC0();
      sub_253CD8CC4();
      goto LABEL_7;
    case 4u:
      sub_253CC3D74();
      sub_253CD8CC4();
LABEL_7:
      uint64_t v20 = sub_253CD9338();
LABEL_8:
      v21(v20);
      sub_253C0FDC8();
      v22();
      break;
    default:
      sub_253CC392C();
      sub_253CC3E0C();
      sub_253CD8CC4();
      sub_253CC3794(&qword_269D7D070, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.TaskFailureReason);
      sub_253CD9248();
      sub_253BEFBCC();
      v18();
      sub_253CC39A0();
      sub_253C0FDC8();
      v19();
      break;
  }
  sub_253C59994();
  sub_253C5993C();
}

void FeedbackLearning.TaskStatus.init(from:)()
{
  sub_253C59954();
  uint64_t v53 = v1;
  uint64_t v3 = v2;
  v51[15] = v4;
  v51[18] = sub_253BDEDD8(&qword_269D7D088);
  sub_253C0F830();
  v51[16] = v5;
  MEMORY[0x270FA5388](v6);
  sub_253CD8C8C(v7, v51[0]);
  sub_253BDEDD8(&qword_269D7D090);
  sub_253C0F830();
  v51[7] = v9;
  v51[8] = v8;
  MEMORY[0x270FA5388](v8);
  sub_253CD8BE4(v10, v51[0]);
  sub_253BDEDD8(&qword_269D7D098);
  sub_253C0F830();
  v51[9] = v12;
  v51[10] = v11;
  MEMORY[0x270FA5388](v11);
  sub_253CD8BC8(v13, v51[0]);
  sub_253BDEDD8(&qword_269D7D0A0);
  sub_253C0F830();
  v51[5] = v15;
  v51[6] = v14;
  MEMORY[0x270FA5388](v14);
  sub_253C6B840(v16, v51[0]);
  sub_253BDEDD8(&qword_269D7D0A8);
  sub_253C0F830();
  v51[3] = v18;
  v51[4] = v17;
  MEMORY[0x270FA5388](v17);
  sub_253C2F394();
  uint64_t v19 = sub_253BDEDD8(&qword_269D7D0B0);
  sub_253C0F830();
  v51[17] = v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_253C8F07C();
  type metadata accessor for FeedbackLearning.TaskStatus(v22);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v23);
  sub_253CD8C70();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v51 - v25;
  uint64_t v52 = v3;
  sub_253CD8AD4();
  sub_253CC3D28();
  sub_253CD94A0();
  if (v1) {
    goto LABEL_11;
  }
  sub_253CD9458();
  sub_253CD95D8();
  if (!v28
    || (v51[0] = 0,
        uint64_t v31 = *(unsigned __int8 *)(v0 + 32),
        sub_253CD8F68(v27, v28, v29, v0 + 32, v30, (2 * v28) | 1),
        sub_253CD9998(),
        v26))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    sub_253BDEDD8(&qword_269D7CA68);
    sub_253CD98BC();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253CD8DD0();
    v37();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v38 = sub_253CD969C();
    v43(v38, v19);
LABEL_11:
    uint64_t v44 = v52;
    goto LABEL_12;
  }
  switch(v31)
  {
    case 1:
      sub_253CC3E58();
      sub_253CD8B54();
      sub_253BEFBCC();
      v39();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v40();
      sub_253BDEDD8(&qword_269D7C770);
      uint64_t v34 = sub_253CD9A18();
      goto LABEL_13;
    case 2:
      sub_253CC3E0C();
      sub_253CD8B54();
      type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      sub_253CC3794(&qword_269D7D0B8, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.TaskFailureReason);
      sub_253CD902C();
      sub_253BEFBCC();
      v48();
      swift_unknownObjectRelease();
      sub_253C0FFA4();
      v49();
      uint64_t v50 = sub_253BDEDD8(&qword_269D7C770);
      sub_253CD9A68(v50);
      sub_253CC392C();
      goto LABEL_14;
    case 3:
      sub_253CC3DC0();
      sub_253CD8B54();
      sub_253BEFBCC();
      v41();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v42();
      sub_253BDEDD8(&qword_269D7C770);
      uint64_t v34 = sub_253CD9A54();
      goto LABEL_13;
    case 4:
      sub_253CC3D74();
      sub_253CD8B54();
      sub_253C0FDBC();
      v45();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v46();
      sub_253BDEDD8(&qword_269D7C770);
      uint64_t v34 = sub_253CD9A2C();
      goto LABEL_13;
    default:
      sub_253CC3EA4();
      sub_253CD8B54();
      sub_253BEFBCC();
      v32();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v33();
      sub_253BDEDD8(&qword_269D7C770);
      uint64_t v34 = sub_253CD9A40();
LABEL_13:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v34, v35, 4, v36);
LABEL_14:
      uint64_t v47 = v52;
      sub_253CC392C();
      uint64_t v44 = v47;
      break;
  }
LABEL_12:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v44);
  sub_253C5993C();
}

void sub_253CB76F4()
{
}

void sub_253CB770C()
{
}

uint64_t static FeedbackLearning.TaskPromptStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  int v3 = *a2;
  if (v2 == 3)
  {
    if (v3 == 3) {
      return 1;
    }
    return sub_253BE181C();
  }
  if (v3 == 3) {
    return sub_253BE181C();
  }
  return v2 == v3;
}

uint64_t sub_253CB7760(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D7269666E6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CB7840(char a1)
{
  if (a1) {
    return 0x6D7269666E6F63;
  }
  else {
    return 1701736302;
  }
}

uint64_t sub_253CB7870()
{
  return sub_253CB7840(*v0);
}

uint64_t sub_253CB7878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CB7760(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CB78A0(uint64_t a1)
{
  unint64_t v2 = sub_253CC3EF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB78DC(uint64_t a1)
{
  unint64_t v2 = sub_253CC3EF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB7918(uint64_t a1)
{
  unint64_t v2 = sub_253CC3F3C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB7954(uint64_t a1)
{
  unint64_t v2 = sub_253CC3F3C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB7990(uint64_t a1)
{
  unint64_t v2 = sub_253CC3F88();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB79CC(uint64_t a1)
{
  unint64_t v2 = sub_253CC3F88();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.TaskPromptStatus.encode(to:)()
{
  sub_253C59954();
  int v3 = v2;
  sub_253BDEDD8(&qword_269D7D0C0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253CD8AB8(v5, v15);
  sub_253BDEDD8(&qword_269D7D0C8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253C2F394();
  uint64_t v7 = sub_253BDEDD8(&qword_269D7D0D0);
  sub_253C0F830();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_253C566F8();
  int v11 = *v0;
  sub_253CD8DE0(v3);
  sub_253CC3EF0();
  sub_253DF5E40();
  if (v11 == 3)
  {
    sub_253CC3F88();
    sub_253CD8CA8();
    sub_253BEFBCC();
    v12();
    sub_253C0FD90();
    v13();
  }
  else
  {
    sub_253CC3F3C();
    sub_253CD8CA8();
    sub_253CC34C8();
    sub_253DF5C20();
    sub_253CD9A0C();
    sub_253BEFBCC();
    v14();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  }
  sub_253C59994();
  sub_253C5993C();
}

void FeedbackLearning.TaskPromptStatus.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  sub_253C59954();
  uint64_t v15 = v14;
  uint64_t v41 = v16;
  sub_253BDEDD8(&qword_269D7D0F0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v17);
  sub_253C2F37C();
  uint64_t v18 = sub_253BDEDD8(&qword_269D7D0F8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v19);
  sub_253C16A90();
  uint64_t v20 = sub_253BDEDD8(&qword_269D7D100);
  sub_253C0F830();
  uint64_t v42 = v21;
  MEMORY[0x270FA5388](v22);
  sub_253C566F8();
  sub_253CD8E50(v15);
  sub_253CC3EF0();
  sub_253CD92A0();
  if (v12) {
    goto LABEL_7;
  }
  sub_253DF5BB0();
  sub_253CD95D8();
  if (!v24
    || (char v43 = *(unsigned char *)(v18 + 32),
        sub_253CD8F68(v23, v24, v25, v18 + 32, v26, (2 * v24) | 1),
        uint64_t v28 = v27,
        unint64_t v30 = v29,
        swift_bridgeObjectRelease(),
        v28 != v30 >> 1))
  {
    uint64_t v31 = v13;
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v33 = v32;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v33 = &type metadata for FeedbackLearning.TaskPromptStatus;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253CD8DD0();
    v34();
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v31, v20);
LABEL_7:
    uint64_t v35 = (uint64_t)v15;
    goto LABEL_8;
  }
  if (v43)
  {
    sub_253CC3F3C();
    sub_253CD9650();
    sub_253CC3560();
    sub_253DF5BA0();
    sub_253BEFBCC();
    v38();
    swift_unknownObjectRelease();
    sub_253C11550();
    v39();
  }
  else
  {
    sub_253CC3F88();
    sub_253CD9650();
    sub_253C8F564();
    sub_253BEFBCC();
    v36();
    swift_unknownObjectRelease();
    sub_253BEFBCC();
    v37();
    a12 = 3;
  }
  *uint64_t v41 = a12;
  uint64_t v35 = (uint64_t)v15;
LABEL_8:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v35);
  sub_253CD93FC();
  sub_253C5993C();
}

void sub_253CB8020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FeedbackLearning.TaskPromptStatus.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_253CB8038()
{
}

uint64_t static FeedbackLearning.TaskOutcome.== infix(_:_:)()
{
  sub_253CD9CB4();
  static FeedbackLearning.TaskStatus.== infix(_:_:)();
  if (v2)
  {
    uint64_t v3 = *(int *)(type metadata accessor for FeedbackLearning.TaskOutcome(0) + 20);
    int v4 = *(unsigned __int8 *)(v1 + v3);
    int v5 = *(unsigned __int8 *)(v0 + v3);
    if (v4 == 3)
    {
      if (v5 == 3) {
        return 1;
      }
    }
    else if (v5 != 3 && v4 == v5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_253CB80B8(char a1)
{
  if (a1) {
    return 0x745374706D6F7270;
  }
  else {
    return 0x737574617473;
  }
}

uint64_t sub_253CB80F4()
{
  return sub_253CC010C();
}

uint64_t sub_253CB8110()
{
  return sub_253CB80B8(*v0);
}

uint64_t sub_253CB8118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CC0030(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CB8140(uint64_t a1)
{
  unint64_t v2 = sub_253CC3FF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB817C(uint64_t a1)
{
  unint64_t v2 = sub_253CC3FF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.TaskOutcome.encode(to:)()
{
  sub_253CD92C0();
  sub_253CD8E7C();
  sub_253BDEDD8(&qword_269D7D108);
  sub_253C0F830();
  MEMORY[0x270FA5388](v1);
  sub_253CD8AD4();
  sub_253CC3FF4();
  sub_253C2F458();
  uint64_t v2 = sub_253CD9B2C();
  type metadata accessor for FeedbackLearning.TaskStatus(v2);
  sub_253CC3794(&qword_269D7D118, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.TaskStatus);
  sub_253CD8AF4();
  if (!v0)
  {
    uint64_t v3 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
    sub_253CD9778(v3);
    sub_253CD8D2C();
  }
  uint64_t v4 = sub_253CD8C00();
  v5(v4);
  sub_253CD9344();
  sub_253CD91DC();
}

void FeedbackLearning.TaskOutcome.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  sub_253C59954();
  uint64_t v15 = sub_253CD9C1C(v14);
  type metadata accessor for FeedbackLearning.TaskStatus(v15);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v16);
  sub_253CD9358(v17, v26[0]);
  sub_253BDEDD8(&qword_269D7D128);
  sub_253C0F830();
  v26[1] = v19;
  v26[2] = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = sub_253C566DC();
  uint64_t v21 = type metadata accessor for FeedbackLearning.TaskOutcome(v20);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253CD9818(v12);
  sub_253CC3FF4();
  sub_253CD94D0();
  if (v13)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v12);
  }
  else
  {
    sub_253CC3794(&qword_269D7D130, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.TaskStatus);
    sub_253CD90FC();
    sub_253CC392C();
    sub_253CC408C();
    sub_253CD9408();
    sub_253C0FDC8();
    v25();
    v24[*(int *)(v21 + 20)] = a12;
    sub_253CC3B6C();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v12);
    sub_253CC39A0();
  }
  sub_253CD9B20();
  sub_253C5993C();
}

void sub_253CB8518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FeedbackLearning.TaskOutcome.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_253CB8530()
{
}

uint64_t static FeedbackLearning.TaskAction.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_253DEFE60() & 1) != 0
    && (uint64_t v4 = type metadata accessor for FeedbackLearning.FlowActionEvent(0),
        sub_253C8F1F8(*(int *)(v4 + 20)),
        static FeedbackLearning.ActionValue.== infix(_:_:)(),
        (v5 & 1) != 0)
    && (uint64_t v6 = type metadata accessor for FeedbackLearning.TaskAction(0),
        sub_253C8F1F8(*(int *)(v6 + 20)),
        (sub_253DF46A0() & 1) != 0))
  {
    char v7 = *(unsigned char *)(a1 + *(int *)(v6 + 24)) ^ *(unsigned char *)(a2 + *(int *)(v6 + 24)) ^ 1;
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_253CB85DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xEB00000000746E65;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x696665446C6F6F74 && a2 == 0xEE006E6F6974696ELL;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6465747563657865 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_253DF5C90();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_253CB8768(char a1)
{
  if (!a1) {
    return 0x76456E6F69746361;
  }
  if (a1 == 1) {
    return 0x696665446C6F6F74;
  }
  return 0x6465747563657865;
}

uint64_t sub_253CB87D4()
{
  return sub_253CC0B50();
}

uint64_t sub_253CB87F0()
{
  return sub_253CB8768(*v0);
}

uint64_t sub_253CB87F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CB85DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CB8820(uint64_t a1)
{
  unint64_t v2 = sub_253CC40F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB885C(uint64_t a1)
{
  unint64_t v2 = sub_253CC40F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.TaskAction.encode(to:)()
{
  sub_253CD92C0();
  sub_253CD8E7C();
  sub_253BDEDD8(&qword_269D7D140);
  sub_253C0F830();
  MEMORY[0x270FA5388](v1);
  sub_253CD8AD4();
  sub_253CC40F8();
  sub_253C2F458();
  uint64_t v2 = sub_253CD9B2C();
  type metadata accessor for FeedbackLearning.FlowActionEvent(v2);
  sub_253CC3794(&qword_269D7D150, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.FlowActionEvent);
  sub_253CD8AF4();
  if (!v0)
  {
    type metadata accessor for FeedbackLearning.TaskAction(0);
    sub_253DF46F0();
    sub_253CC3794(&qword_269D7D158, MEMORY[0x263F7FED0]);
    sub_253CD8D2C();
    sub_253CD9A00();
    sub_253DF5BF0();
  }
  uint64_t v3 = sub_253CD8C00();
  v4(v3);
  sub_253CD9344();
  sub_253CD91DC();
}

void FeedbackLearning.TaskAction.init(from:)()
{
  sub_253C59954();
  uint64_t v3 = v2;
  sub_253DF46F0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = sub_253C63598();
  type metadata accessor for FeedbackLearning.FlowActionEvent(v5);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v6);
  sub_253CD8AB8(v7, v15);
  sub_253BDEDD8(&qword_269D7D160);
  sub_253C0F830();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253C3330C();
  uint64_t v10 = type metadata accessor for FeedbackLearning.TaskAction(v9);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v11);
  sub_253C10D38();
  sub_253BDF5F8(v3, v3[3]);
  sub_253CC40F8();
  sub_253CD9B38();
  sub_253DF5E30();
  if (v1)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v3);
  }
  else
  {
    sub_253CC3794(&qword_269D7D168, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.FlowActionEvent);
    sub_253CD9AEC();
    sub_253DF5BA0();
    sub_253CC392C();
    sub_253C2F438();
    sub_253CC3794(&qword_269D7D170, MEMORY[0x263F7FED0]);
    sub_253DF5BA0();
    sub_253CD94F4();
    sub_253BEFD2C();
    v12();
    sub_253CD9A00();
    char v13 = sub_253DF5B70();
    sub_253C0FDC8();
    v14();
    *(unsigned char *)(v0 + *(int *)(v10 + 24)) = v13 & 1;
    sub_253CC3B6C();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v3);
    sub_253CC39A0();
  }
  sub_253CD9300();
  sub_253C5993C();
}

void sub_253CB8DEC()
{
}

void sub_253CB8E04()
{
}

void FeedbackLearning.TaskAction.description.getter()
{
  sub_253C8F550();
  sub_253DEFFE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v0);
  sub_253C2F37C();
  sub_253C8F33C();
  sub_253DF58F0();
  sub_253DF52E0();
  type metadata accessor for FeedbackLearning.TaskAction(0);
  sub_253DF46C0();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253DF52E0();
  type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  sub_253CFA9B8();
  sub_253CC3794((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
  sub_253DF5C40();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253CD8DC0();
  v1();
  sub_253DF52E0();
  sub_253DEFE90();
  sub_253CC3794((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
  sub_253DF5C40();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253DF52E0();
  sub_253DF52E0();
  swift_bridgeObjectRelease();
  sub_253C8EFFC();
  sub_253C8F44C();
}

void static FeedbackLearning.TaskFinalResolutionValue.== infix(_:_:)()
{
  sub_253C1CED0();
  type metadata accessor for FeedbackLearning.TaskAction(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v1);
  sub_253C3330C();
  sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v13 = v2;
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_253C598FC();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(v4);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v5);
  sub_253CD8F58();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253BDEDD8(&qword_269D7D178);
  uint64_t v8 = sub_253BDF9FC(v7);
  MEMORY[0x270FA5388](v8);
  sub_253C8F0B4();
  sub_253CC3B6C();
  sub_253CC3B6C();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_253CC3B6C();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_253BEFD2C();
      v11();
      sub_253DEFFB0();
      uint64_t v12 = *(void (**)(void))(v13 + 8);
      sub_253C115AC();
      sub_253C634D8();
      v12();
      sub_253C634D8();
      v12();
      sub_253CC39A0();
      goto LABEL_12;
    }
    sub_253C634D8();
    v10();
    goto LABEL_10;
  }
  sub_253CC3B6C();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_253CC39A0();
LABEL_10:
    sub_253BEFAC0(v0, &qword_269D7D178);
    goto LABEL_12;
  }
  sub_253CC392C();
  if (sub_253DEFE60())
  {
    type metadata accessor for FeedbackLearning.FlowActionEvent(0);
    static FeedbackLearning.ActionValue.== infix(_:_:)();
    if (v9) {
      sub_253DF46A0();
    }
  }
  sub_253CC39A0();
  sub_253CC39A0();
  sub_253CC39A0();
LABEL_12:
  sub_253C1CEE8();
}

uint64_t sub_253CB9438(uint64_t a1)
{
  unint64_t v2 = sub_253CC41B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB9474(uint64_t a1)
{
  unint64_t v2 = sub_253CC41B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB94B0(uint64_t a1)
{
  unint64_t v2 = sub_253CC4164();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB94EC(uint64_t a1)
{
  unint64_t v2 = sub_253CC4164();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CB9528(uint64_t a1)
{
  unint64_t v2 = sub_253CC41FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CB9564(uint64_t a1)
{
  unint64_t v2 = sub_253CC41FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.TaskFinalResolutionValue.encode(to:)()
{
  sub_253C59954();
  sub_253CD97C0();
  sub_253BDEDD8(&qword_269D7D180);
  sub_253C0F830();
  v20[6] = v2;
  v20[7] = v1;
  MEMORY[0x270FA5388](v1);
  v20[5] = (uint64_t)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253C36350();
  v20[1] = type metadata accessor for FeedbackLearning.TaskAction(v4);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v5);
  sub_253CD8C8C(v6, v20[0]);
  sub_253BDEDD8(&qword_269D7D188);
  sub_253C0F830();
  void v20[2] = v8;
  v20[3] = v7;
  MEMORY[0x270FA5388](v7);
  v20[0] = sub_253CD93D4();
  sub_253C0F830();
  v20[9] = v9;
  MEMORY[0x270FA5388](v10);
  type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v11);
  sub_253C2F394();
  v20[10] = sub_253BDEDD8(&qword_269D7D190);
  sub_253C0F830();
  MEMORY[0x270FA5388](v12);
  sub_253CD90E0(v0);
  sub_253CC4164();
  sub_253CD9B64();
  sub_253CC3B6C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253CC392C();
    sub_253CC41B0();
    sub_253CD9174();
    sub_253CC3794(&qword_269D7D1A8, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.TaskAction);
    sub_253CD921C();
    sub_253BEFBCC();
    v13();
    sub_253CC39A0();
    sub_253C0FDD4();
    v14();
  }
  else
  {
    sub_253BEFD2C();
    v15();
    sub_253CC41FC();
    sub_253C8F0D0();
    sub_253CC3794(&qword_269D7CEE0, MEMORY[0x263F4BF98]);
    sub_253CD91F0();
    sub_253BEFBCC();
    v16();
    sub_253BEFBCC();
    v17();
    uint64_t v18 = sub_253CD9930();
    v19(v18);
  }
  sub_253C5993C();
}

void FeedbackLearning.TaskFinalResolutionValue.init(from:)()
{
  sub_253C59954();
  uint64_t v28 = v0;
  uint64_t v2 = v1;
  v27[4] = v3;
  sub_253BDEDD8(&qword_269D7D1B8);
  sub_253C0F830();
  v27[7] = v4;
  v27[8] = v5;
  MEMORY[0x270FA5388](v4);
  sub_253CD8AB8(v6, v27[0]);
  sub_253BDEDD8(&qword_269D7D1C0);
  sub_253C0F830();
  v27[5] = v8;
  v27[6] = v7;
  MEMORY[0x270FA5388](v7);
  sub_253CD8B20(v9, v27[0]);
  sub_253BDEDD8(&qword_269D7D1C8);
  sub_253C0F830();
  v27[11] = v11;
  v27[12] = v10;
  MEMORY[0x270FA5388](v10);
  type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  sub_253CA0118();
  MEMORY[0x270FA5388](v13);
  sub_253CD9C44();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v27 - v15;
  unint64_t v17 = v2[4];
  sub_253CD8E50(v2);
  sub_253CC4164();
  sub_253CD92A0();
  if (v0) {
    goto LABEL_6;
  }
  sub_253CD912C();
  sub_253CD95D8();
  if (!v19 || (sub_253CD8F68(v18, v19, v20, (uint64_t)(v16 + 32), v21, (2 * v19) | 1), sub_253CD9CE0(), v17 >> 1))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    sub_253BDEDD8(&qword_269D7CA68);
    sub_253CD9524();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253CD8DD0();
    v22();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_253C0FFA4();
    v23();
    uint64_t v2 = v28;
LABEL_6:
    uint64_t v26 = (uint64_t)v2;
    goto LABEL_7;
  }
  sub_253CC41B0();
  sub_253CD8EEC();
  type metadata accessor for FeedbackLearning.TaskAction(0);
  sub_253CC3794(&qword_269D7D1D0, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.TaskAction);
  sub_253CD9060();
  sub_253CD9CD4();
  sub_253BEFBCC();
  v24();
  swift_unknownObjectRelease();
  sub_253C0FFA4();
  v25();
  swift_storeEnumTagMultiPayload();
  sub_253CC392C();
  sub_253CC392C();
  uint64_t v26 = (uint64_t)v28;
LABEL_7:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v26);
  sub_253CD93FC();
  sub_253C5993C();
}

void sub_253CB9DE0()
{
}

void sub_253CB9DF8()
{
}

void FeedbackLearning.TaskFinalResolutionValue.description.getter()
{
  sub_253C8F550();
  uint64_t v1 = type metadata accessor for FeedbackLearning.TaskAction(0);
  uint64_t v2 = sub_253BDF9FC(v1);
  MEMORY[0x270FA5388](v2);
  sub_253C567FC();
  uint64_t v3 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253C8F07C();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(v7);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v8);
  sub_253C2F37C();
  sub_253C10B60();
  sub_253CC3B6C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253CC392C();
    sub_253C8F33C();
    sub_253DF58F0();
    swift_bridgeObjectRelease();
    FeedbackLearning.TaskAction.description.getter();
    sub_253DF52E0();
    swift_bridgeObjectRelease();
    sub_253C8EFFC();
    sub_253CC39A0();
  }
  else
  {
    sub_253BEFD2C();
    v9();
    sub_253C8F33C();
    sub_253DF58F0();
    swift_bridgeObjectRelease();
    sub_253DEFFD0();
    sub_253DF5C40();
    sub_253DF52E0();
    swift_bridgeObjectRelease();
    sub_253C8EFFC();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  }
  sub_253C10B60();
  sub_253C8F44C();
}

void static FeedbackLearning.TaskFinalResolutionState.== infix(_:_:)()
{
  sub_253C1CED0();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v3);
  sub_253CD8BAC(v4, v24);
  uint64_t v5 = sub_253BDEDD8(&qword_269D7D1D8);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v6);
  sub_253C10D38();
  uint64_t v7 = sub_253BDEDD8(&qword_269D7C730);
  uint64_t v8 = sub_253BDF9FC(v7);
  MEMORY[0x270FA5388](v8);
  sub_253C34050();
  uint64_t v25 = v9;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v24 - v11;
  uint64_t v13 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
  uint64_t v14 = sub_253BDF9FC(v13);
  MEMORY[0x270FA5388](v14);
  sub_253C363A4();
  uint64_t v15 = sub_253BDEDD8(&qword_269D7D1E0);
  uint64_t v16 = sub_253BDF9FC(v15);
  MEMORY[0x270FA5388](v16);
  sub_253C4E9DC();
  uint64_t v18 = v1 + *(int *)(v17 + 56);
  sub_253CC3B6C();
  sub_253CC3B6C();
  uint64_t v19 = sub_253BDEDD8(&qword_269D7C728);
  sub_253C0FD54(v1, 1, v19);
  if (v20)
  {
    sub_253C0FD54(v18, 1, v19);
    if (v20) {
      goto LABEL_19;
    }
  }
  else
  {
    sub_253CC3B6C();
    sub_253C0FD54(v18, 1, v19);
    if (!v20)
    {
      sub_253C61B78(v18, (uint64_t)v12, &qword_269D7C730);
      uint64_t v21 = v0 + *(int *)(v5 + 48);
      sub_253C61B78(v2, v0, &qword_269D7C730);
      sub_253C2E770((uint64_t)v12, v21, &qword_269D7C730);
      sub_253CD8D84(v0);
      if (v22)
      {
        sub_253BEFAC0((uint64_t)v12, &qword_269D7C730);
        sub_253CD8D84(v21);
        if (v20)
        {
          sub_253BEFAC0(v0, &qword_269D7C730);
LABEL_19:
          sub_253CC39A0();
          goto LABEL_20;
        }
      }
      else
      {
        sub_253C2E770(v0, v25, &qword_269D7C730);
        sub_253CD8D84(v21);
        if (!v23)
        {
          sub_253CC392C();
          static FeedbackLearning.TaskFinalResolutionValue.== infix(_:_:)();
          sub_253CC39A0();
          sub_253BEFAC0((uint64_t)v12, &qword_269D7C730);
          sub_253CC39A0();
          sub_253BEFAC0(v0, &qword_269D7C730);
          goto LABEL_19;
        }
        sub_253BEFAC0((uint64_t)v12, &qword_269D7C730);
        sub_253CC39A0();
      }
      sub_253BEFAC0(v0, &qword_269D7D1D8);
      goto LABEL_19;
    }
    sub_253BEFAC0(v2, &qword_269D7C730);
  }
  sub_253BEFAC0(v1, &qword_269D7D1E0);
LABEL_20:
  sub_253C1CEE8();
}

uint64_t sub_253CBA438(uint64_t a1)
{
  unint64_t v2 = sub_253CC4268();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CBA474(uint64_t a1)
{
  unint64_t v2 = sub_253CC4268();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CBA4B0(uint64_t a1)
{
  unint64_t v2 = sub_253CC4300();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CBA4EC(uint64_t a1)
{
  unint64_t v2 = sub_253CC4300();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CBA528(uint64_t a1)
{
  unint64_t v2 = sub_253CC42B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CBA564(uint64_t a1)
{
  unint64_t v2 = sub_253CC42B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.TaskFinalResolutionState.encode(to:)()
{
  sub_253C59954();
  sub_253CD94C4();
  sub_253BDEDD8(&qword_269D7D1E8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v2);
  sub_253C567E0(v3, v17);
  sub_253BDEDD8(&qword_269D7D1F0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253C2F37C();
  uint64_t v5 = sub_253BDEDD8(&qword_269D7C730);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253C566DC();
  uint64_t v8 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(v7);
  uint64_t v9 = sub_253BDF9FC(v8);
  MEMORY[0x270FA5388](v9);
  sub_253C10D38();
  sub_253BDEDD8(&qword_269D7D1F8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  sub_253CD8AD4();
  sub_253CC4268();
  sub_253CD98F0();
  sub_253CC3B6C();
  uint64_t v11 = sub_253BDEDD8(&qword_269D7C728);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v11) == 1)
  {
    sub_253CC42B4();
    sub_253CD9158();
    sub_253BEFBCC();
    v12();
    sub_253C0FDC8();
    v13();
  }
  else
  {
    sub_253C61B78(v0, v1, &qword_269D7C730);
    sub_253CC4300();
    sub_253CD9158();
    type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    sub_253CC3794(&qword_269D7D218, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.TaskFinalResolutionValue);
    sub_253CD9274();
    sub_253BEFBCC();
    v14();
    sub_253BEFAC0(v1, &qword_269D7C730);
    uint64_t v15 = sub_253CD9AF8();
    v16(v15);
  }
  sub_253C59994();
  sub_253C5993C();
}

void FeedbackLearning.TaskFinalResolutionState.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_253C59954();
  uint64_t v12 = v11;
  sub_253BDEDD8(&qword_269D7D220);
  sub_253C0F830();
  MEMORY[0x270FA5388](v13);
  sub_253CD8AB8(v14, v34);
  sub_253BDEDD8(&qword_269D7D228);
  sub_253C0F830();
  MEMORY[0x270FA5388](v15);
  sub_253CD8BAC(v16, v35);
  sub_253BDEDD8(&qword_269D7D230);
  sub_253C0F830();
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_253C63598();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionState(v18);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v19);
  sub_253CD8C70();
  MEMORY[0x270FA5388](v20);
  unint64_t v21 = v12[3];
  sub_253CD8E50(v12);
  sub_253CC4268();
  sub_253CD962C();
  if (v10) {
    goto LABEL_8;
  }
  uint64_t v22 = sub_253CD947C();
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23 || (sub_253CD8F24(v22, v23), sub_253CD9C80(), v21 >> 1))
  {
    sub_253CD9548();
    sub_253C0FFC8();
    sub_253BDEDD8(&qword_269D7CA68);
    sub_253CD9500();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253CD8DD0();
    v24();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_253C0FDD4();
    v25();
    uint64_t v12 = v10;
LABEL_8:
    uint64_t v26 = (uint64_t)v12;
    goto LABEL_9;
  }
  if (a10)
  {
    sub_253CC42B4();
    sub_253CD8EB4();
    sub_253BEFBCC();
    v27();
    swift_unknownObjectRelease();
    sub_253BEFBCC();
    v28();
    uint64_t v29 = sub_253BDEDD8(&qword_269D7C728);
    sub_253CD96B4(v29);
  }
  else
  {
    sub_253CC4300();
    sub_253CD8EB4();
    type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    sub_253CC3794(&qword_269D7D238, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.TaskFinalResolutionValue);
    sub_253CD8FF8();
    sub_253BEFBCC();
    v30();
    swift_unknownObjectRelease();
    uint64_t v31 = sub_253CD8DFC();
    v32(v31);
    uint64_t v33 = sub_253BDEDD8(&qword_269D7C728);
    sub_253CD9A88(v33);
    sub_253CC392C();
  }
  sub_253CC392C();
  uint64_t v26 = (uint64_t)v10;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v26);
  sub_253CD9B20();
  sub_253C5993C();
}

void sub_253CBAC94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  FeedbackLearning.TaskFinalResolutionState.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_253CBACAC()
{
}

uint64_t FeedbackLearning.TaskFinalResolutionState.description.getter()
{
  sub_253BDEDD8(&qword_269D7C730);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v2);
  sub_253CD8F58();
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v12 - v4;
  uint64_t v6 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
  uint64_t v7 = sub_253BDF9FC(v6);
  MEMORY[0x270FA5388](v7);
  sub_253C4E9DC();
  sub_253CC3B6C();
  sub_253BDEDD8(&qword_269D7C728);
  uint64_t v8 = sub_253C8F5BC();
  sub_253C0FD54(v8, 1, v9);
  if (!v10)
  {
    sub_253C61B78(v0, (uint64_t)v5, &qword_269D7C730);
    unint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_253DF58F0();
    swift_bridgeObjectRelease();
    unint64_t v12 = 0xD000000000000010;
    unint64_t v13 = 0x8000000253E19560;
    sub_253C2E770((uint64_t)v5, v1, &qword_269D7C730);
    sub_253DF5290();
    sub_253DF52E0();
    swift_bridgeObjectRelease();
    sub_253C8EFFC();
    sub_253BEFAC0((uint64_t)v5, &qword_269D7C730);
  }
  return sub_253C10F58();
}

void static FeedbackLearning.TaskEvaluation.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (sub_253DEFE60())
  {
    uint64_t v4 = (int *)type metadata accessor for FeedbackLearning.TaskEvaluation(0);
    sub_253C8F1F8(v4[5]);
    if (sub_253DEFFB0())
    {
      sub_253C8F1F8(v4[6]);
      if (sub_253DF25D0() & 1) != 0 && (sub_253CBB914(*(void *)(a1 + v4[7]), *(void *)(a2 + v4[7])))
      {
        sub_253C8F1F8(v4[8]);
        static FeedbackLearning.TaskFinalResolutionState.== infix(_:_:)();
        if (v5)
        {
          sub_253C8F1F8(v4[9]);
          if (static FeedbackLearning.TaskOutcome.== infix(_:_:)())
          {
            uint64_t v6 = v4[10];
            uint64_t v7 = (char *)(a1 + v6);
            uint64_t v8 = *(void *)(a1 + v6 + 16);
            uint64_t v9 = *(void *)(a1 + v6 + 24);
            char v10 = (char *)(a2 + v6);
            char v11 = v10[8];
            char v12 = *v10;
            char v13 = v7[8];
            char v14 = *v7;
            sub_253CEAC38(v14, v13, v8, v9, v12, v11);
          }
        }
      }
    }
  }
}

void sub_253CBAF60()
{
}

void sub_253CBAFA8()
{
}

void sub_253CBAFF0()
{
}

void sub_253CBB038()
{
  sub_253C1CED0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = _s24StatementExecutionResultOMa(0);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  sub_253C567E0(v7, v37);
  uint64_t v51 = sub_253BDEDD8(&qword_269D7D670);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = sub_253C8F098();
  uint64_t v48 = _s19EvaluatorVoteSourceOMa(v9);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  sub_253C2F354();
  char v13 = (unsigned __int8 *)(v11 - v12);
  MEMORY[0x270FA5388](v14);
  uint64_t v46 = (char *)&v37 - v15;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v16);
  sub_253CD8F58();
  MEMORY[0x270FA5388](v17);
  sub_253CD8E6C();
  uint64_t v19 = *(void *)(v4 + 16);
  if (v19 == *(void *)(v2 + 16) && v19 && v4 != v2)
  {
    uint64_t v40 = *(void *)(v4 + 16);
    uint64_t v41 = v18;
    uint64_t v20 = 0;
    uint64_t v21 = v4 + 32;
    uint64_t v22 = v2 + 32;
    uint64_t v45 = v13;
    uint64_t v38 = v2 + 32;
    uint64_t v39 = v4 + 32;
    while (1)
    {
      uint64_t v23 = (unsigned __int8 *)(v21 + 32 * v20);
      uint64_t v24 = (unsigned __int8 *)(v22 + 32 * v20);
      if (*v23 != *v24 || v23[8] != v24[8]) {
        break;
      }
      uint64_t v26 = *((void *)v23 + 2);
      uint64_t v27 = *((void *)v24 + 2);
      uint64_t v28 = *(void *)(v26 + 16);
      if (v28 != *(void *)(v27 + 16)) {
        break;
      }
      uint64_t v29 = *((void *)v23 + 3);
      uint64_t v44 = *((void *)v24 + 3);
      uint64_t v42 = v20;
      uint64_t v43 = v29;
      if (v28)
      {
        uint64_t v50 = v28;
        uint64_t v30 = *(unsigned __int8 *)(v41 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v26 != v27)
        {
          uint64_t v31 = (v30 + 32) & ~v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v32 = 0;
          uint64_t v49 = *(void *)(v41 + 72);
          while (1)
          {
            sub_253CC3B6C();
            if (v32 >= *(void *)(v27 + 16)) {
              break;
            }
            sub_253CC3B6C();
            uint64_t v33 = (unsigned __int8 *)(v0 + *(int *)(v51 + 48));
            sub_253CC3B6C();
            sub_253CC3B6C();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v34 = v45;
              sub_253CC3B6C();
              if (swift_getEnumCaseMultiPayload() != 1) {
                goto LABEL_31;
              }
              if (*v34 != *v33)
              {
LABEL_29:
                sub_253CC39A0();
                goto LABEL_32;
              }
            }
            else
            {
              sub_253CC3B6C();
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                sub_253CC39A0();
LABEL_31:
                sub_253BEFAC0(v0, &qword_269D7D670);
LABEL_32:
                sub_253CC39A0();
                sub_253CC39A0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_33;
              }
              sub_253CC392C();
              sub_253CDD840();
              int v47 = v35;
              sub_253CC39A0();
              sub_253CC39A0();
              if ((v47 & 1) == 0) {
                goto LABEL_29;
              }
            }
            ++v32;
            sub_253CC39A0();
            sub_253CC39A0();
            sub_253CC39A0();
            v31 += v49;
            if (v50 == v32) {
              goto LABEL_25;
            }
          }
          __break(1u);
          return;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_25:
      char v36 = sub_253CBB038(v43, v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v36)
      {
        uint64_t v20 = v42 + 1;
        uint64_t v21 = v39;
        uint64_t v22 = v38;
        if (v42 + 1 != v40) {
          continue;
        }
      }
      break;
    }
  }
LABEL_33:
  sub_253C1CEE8();
}

void sub_253CBB568()
{
  sub_253C1CED0();
  uint64_t v3 = sub_253C8F1DC();
  uint64_t v4 = _s24StatementExecutionResultOMa(v3);
  uint64_t v5 = sub_253BDF9FC(v4);
  MEMORY[0x270FA5388](v5);
  sub_253C16AC0();
  uint64_t v23 = sub_253BDEDD8(&qword_269D7D670);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253C8F07C();
  _s19EvaluatorVoteSourceOMa(v7);
  sub_253CD8C38();
  MEMORY[0x270FA5388](v8);
  sub_253CD9C30();
  uint64_t v21 = v9;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = *(void *)(v1 + 16);
  if (v14 != *(void *)(v0 + 16) || !v14 || v1 == v0) {
    goto LABEL_16;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v22 = *(void *)(v13 + 72);
  while (1)
  {
    sub_253CC3B6C();
    sub_253CC3B6C();
    uint64_t v16 = (unsigned __int8 *)(v2 + *(int *)(v23 + 48));
    sub_253CC3B6C();
    sub_253CC3B6C();
    if (swift_getEnumCaseMultiPayload() != 1) {
      break;
    }
    sub_253CC3B6C();
    if (swift_getEnumCaseMultiPayload() != 1) {
      goto LABEL_14;
    }
    int v17 = *v21;
    int v18 = *v16;
    sub_253CC39A0();
    if (v17 != v18) {
      goto LABEL_15;
    }
LABEL_11:
    sub_253CC39A0();
    sub_253CC39A0();
    v15 += v22;
    if (!--v14) {
      goto LABEL_16;
    }
  }
  sub_253CC3B6C();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_253CC392C();
    sub_253CDD840();
    char v20 = v19;
    sub_253CC39A0();
    sub_253CC39A0();
    sub_253CC39A0();
    if ((v20 & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  sub_253CC39A0();
LABEL_14:
  sub_253BEFAC0(v2, &qword_269D7D670);
LABEL_15:
  sub_253CC39A0();
  sub_253CC39A0();
LABEL_16:
  sub_253C1CEE8();
}

uint64_t sub_253CBB914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0) - 8;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7 == *(void *)(a2 + 16))
  {
    if (!v7 || a1 == a2)
    {
      char v12 = 1;
    }
    else
    {
      unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v9 = *(void *)(v6 + 72);
      uint64_t v10 = v7 - 1;
      do
      {
        sub_253CC3B6C();
        sub_253CC3B6C();
        static FeedbackLearning.CandidateEvaluation.== infix(_:_:)();
        char v12 = v11;
        sub_253CC39A0();
        sub_253CC39A0();
        BOOL v14 = v10-- != 0;
        if ((v12 & 1) == 0) {
          break;
        }
        v8 += v9;
      }
      while (v14);
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

void sub_253CBBAB4()
{
  sub_253C1CED0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  sub_253DF4230();
  sub_253C0F830();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_253C34050();
  uint64_t v70 = v10;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v11);
  sub_253CD99B8();
  uint64_t v12 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v14 = v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_253C63598();
  uint64_t v17 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(v16);
  uint64_t v18 = sub_253BDF9FC(v17);
  MEMORY[0x270FA5388](v18);
  sub_253C2F364();
  uint64_t v62 = sub_253BDEDD8(&qword_269D7D650);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = sub_253C3330C();
  uint64_t v63 = type metadata accessor for FeedbackLearning.FlowExpression(v20);
  sub_253CD8C38();
  MEMORY[0x270FA5388](v21);
  sub_253CD9C30();
  uint64_t v65 = v22;
  MEMORY[0x270FA5388](v23);
  BOOL v64 = (char *)v51 - v25;
  uint64_t v26 = *(void *)(v6 + 16);
  if (v26 != *(void *)(v4 + 16) || !v26 || v6 == v4)
  {
LABEL_28:
    sub_253C1CEE8();
    return;
  }
  uint64_t v53 = v12;
  uint64_t v54 = v1;
  v51[2] = v0;
  uint64_t v27 = 0;
  unint64_t v28 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v59 = v4 + v28;
  uint64_t v60 = v6 + v28;
  uint64_t v29 = *(void *)(v24 + 72);
  uint64_t v57 = v2;
  uint64_t v58 = v29;
  v51[1] = v14 + 32;
  uint64_t v52 = (void (**)(void))(v14 + 8);
  uint64_t v55 = v8;
  uint64_t v56 = v26;
  uint64_t v67 = (void (**)(void))(v8 + 8);
  uint64_t v68 = v8 + 16;
  while (1)
  {
    uint64_t v61 = v27;
    sub_253CC3B6C();
    sub_253CC3B6C();
    if ((sub_253DEFFB0() & 1) == 0) {
      goto LABEL_27;
    }
    type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
    uint64_t v30 = v57;
    uint64_t v31 = v57 + *(int *)(v62 + 48);
    sub_253CC3B6C();
    sub_253CC3B6C();
    uint64_t v32 = sub_253BDEDD8(&qword_269D7CC20);
    int v33 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v30, 2, v32);
    if (!v33)
    {
      uint64_t v35 = v54;
      sub_253CC3B6C();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v31, 2, v32))
      {
        ((void (*)(uint64_t, uint64_t))*v52)(v35, v53);
LABEL_26:
        sub_253BEFAC0(v30, &qword_269D7D650);
      }
      else
      {
        sub_253C10134();
        v36();
        char v37 = sub_253DEFFB0();
        uint64_t v38 = *v52;
        sub_253CD8DC0();
        v38();
        sub_253CD8DC0();
        v38();
        if (v37) {
          goto LABEL_14;
        }
        sub_253CC39A0();
      }
LABEL_27:
      sub_253CC39A0();
      sub_253CC39A0();
      goto LABEL_28;
    }
    if (v33 == 1)
    {
      sub_253C0FD54(v31, 2, v32);
      if (!v34) {
        goto LABEL_26;
      }
    }
    else if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v31, 2, v32) != 2)
    {
      goto LABEL_26;
    }
LABEL_14:
    sub_253CC39A0();
    uint64_t v39 = *(int *)(v63 + 20);
    uint64_t v40 = *(void *)(v65 + v39);
    uint64_t v69 = *(void *)&v64[v39];
    uint64_t v41 = *(void *)(v40 + 16);
    uint64_t v71 = *(void *)(v69 + 16);
    if (v71 != v41) {
      goto LABEL_27;
    }
    if (v71 && v69 != v40) {
      break;
    }
LABEL_21:
    sub_253CBC2AC();
    char v50 = v49;
    sub_253CC39A0();
    sub_253CC39A0();
    if (v50)
    {
      uint64_t v27 = v61 + 1;
      if (v61 + 1 != v56) {
        continue;
      }
    }
    goto LABEL_28;
  }
  unint64_t v42 = 0;
  unint64_t v43 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  uint64_t v66 = *(void *)(v55 + 72);
  uint64_t v44 = *(void (**)(uint64_t))(v55 + 16);
  while (1)
  {
    uint64_t v45 = sub_253CD9984();
    v44(v45);
    if (v42 >= *(void *)(v40 + 16)) {
      break;
    }
    uint64_t v46 = sub_253CD9984();
    v44(v46);
    sub_253CC3794(&qword_269D7D658, MEMORY[0x263F4E050]);
    char v47 = sub_253DF5250();
    uint64_t v48 = *v67;
    sub_253C0FDD4();
    v48();
    sub_253C0FDD4();
    v48();
    if ((v47 & 1) == 0) {
      goto LABEL_27;
    }
    ++v42;
    v43 += v66;
    if (v71 == v42) {
      goto LABEL_21;
    }
  }
  __break(1u);
}

void sub_253CBC09C()
{
}

void sub_253CBC0E4()
{
  sub_253C1CED0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9(0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v11);
  sub_253C2F354();
  MEMORY[0x270FA5388](v12);
  sub_253CD8E6C();
  uint64_t v15 = *(void *)(v8 + 16);
  if (v15 == *(void *)(v6 + 16) && v15 && v8 != v6)
  {
    unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v18 = *(void (**)(uint64_t, unint64_t, uint64_t))(v13 + 16);
    uint64_t v17 = v13 + 16;
    unint64_t v28 = v18;
    uint64_t v29 = v14;
    uint64_t v24 = *(void *)(v17 + 56);
    uint64_t v25 = v6;
    uint64_t v26 = v8;
    uint64_t v27 = (void (**)(void))(v17 - 8);
    uint64_t v19 = v15 - 1;
    do
    {
      v28(v0, v8 + v16, v10);
      v28(v29, v6 + v16, v10);
      sub_253CC3794(v4, v2);
      char v20 = sub_253DF5250();
      uint64_t v21 = *v27;
      sub_253C0FDD4();
      v21();
      sub_253C0FDD4();
      v21();
      BOOL v23 = v19-- != 0;
      if ((v20 & 1) == 0) {
        break;
      }
      v16 += v24;
      uint64_t v6 = v25;
      uint64_t v8 = v26;
    }
    while (v23);
  }
  sub_253C1CEE8();
}

void sub_253CBC2AC()
{
  sub_253C1CED0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = sub_253DF2BE0();
  sub_253C0F830();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_253C566DC();
  uint64_t v63 = sub_253DF3C70();
  sub_253C0F830();
  uint64_t v10 = v9;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = sub_253CD8D0C(v12, v55[0]);
  type metadata accessor for FeedbackLearning.ActionValue(v13);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v14);
  sub_253C34050();
  uint64_t v65 = v15;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v16);
  BOOL v64 = (char *)v55 - v17;
  uint64_t v67 = sub_253BDEDD8(&qword_269D7D660);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v18);
  uint64_t v68 = (char *)v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_253C36350();
  uint64_t v66 = type metadata accessor for FeedbackLearning.FlowActionEvent(v20);
  sub_253CD8C38();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v69 = v4;
  uint64_t v70 = v2;
  uint64_t v27 = *(void *)(v4 + 16);
  if (v27 == *(void *)(v2 + 16) && v27 && v69 != v70)
  {
    v55[2] = v0;
    unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v29 = *(void *)(v25 + 72);
    uint64_t v58 = v5;
    uint64_t v59 = v29;
    v55[0] = v7 + 32;
    v55[1] = v10 + 32;
    uint64_t v56 = (void (**)(uint64_t, uint64_t, uint64_t))(v7 + 8);
    uint64_t v57 = (void (**)(uint64_t, uint64_t))(v10 + 8);
    uint64_t v60 = v24;
    uint64_t v62 = (char *)v55 - v26;
    while (1)
    {
      sub_253CC3B6C();
      sub_253CC3B6C();
      if ((sub_253DEFE60() & 1) == 0) {
        break;
      }
      uint64_t v30 = (uint64_t)v68;
      sub_253CC3B6C();
      sub_253CD9A0C();
      sub_253CC3B6C();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_253CC3B6C();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_14;
        }
        sub_253CD9A0C();
        sub_253C10134();
        v34(v31, v32, v33);
        char v35 = sub_253DF2BC0();
        char v36 = *v56;
        sub_253C11550();
        v36(v37, v38, v39);
        sub_253C105C0();
        sub_253C11550();
        v36(v40, v41, v42);
      }
      else
      {
        sub_253CC3B6C();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
LABEL_14:
          sub_253BEFBCC();
          v54(v51, v52, v53);
          sub_253BEFAC0(v30, &qword_269D7D660);
          break;
        }
        uint64_t v43 = v61;
        uint64_t v44 = v63;
        sub_253C10134();
        v48(v45, v46, v47);
        char v49 = v64;
        char v35 = sub_253DF3C30();
        char v50 = *v57;
        (*v57)(v43, v44);
        v50((uint64_t)v49, v44);
      }
      sub_253CC39A0();
      if ((v35 & 1) == 0) {
        break;
      }
      sub_253CC39A0();
      sub_253CC39A0();
      v28 += v59;
      if (!--v27) {
        goto LABEL_16;
      }
    }
    sub_253CC39A0();
    sub_253CC39A0();
  }
LABEL_16:
  sub_253C1CEE8();
}

uint64_t sub_253CBC79C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6574656D61726170 && a2 == 0xE900000000000072;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000253E19620 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x6974756C6F736572 && a2 == 0xEA00000000006E6FLL;
      if (v7 || (sub_253DF5C90() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = sub_253DF5C90();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_253CBC9D8(char a1)
{
  unint64_t result = 0x6E656D6574617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6574656D61726170;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0x6974756C6F736572;
      break;
    case 4:
      unint64_t result = 0x656D6F6374756FLL;
      break;
    default:
      return result;
  }
  return result;
}

void sub_253CBCA9C()
{
  sub_253CD92C0();
  sub_253CD8E7C();
  sub_253BDEDD8(&qword_269D7D928);
  sub_253C0F830();
  MEMORY[0x270FA5388](v1);
  sub_253CD8AD4();
  sub_253CD6F90();
  sub_253C2F458();
  sub_253DEFFE0();
  sub_253CC3794(&qword_269D7CEE0, MEMORY[0x263F4BF98]);
  sub_253CD8AF4();
  if (!v0)
  {
    _s18TaskDefinitionThinO23CandidateEvaluationThinVMa(0);
    sub_253CD97D0();
    sub_253CC3794(&qword_269D7CF38, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
    sub_253CD8D2C();
    sub_253CD9708();
    sub_253CC3794(&qword_269D7CF40, MEMORY[0x263F4D120]);
    sub_253CD8D2C();
    sub_253CC3A3C();
    sub_253CD8D2C();
    sub_253CC3A88();
    sub_253CD8D2C();
  }
  uint64_t v2 = sub_253CD8C00();
  v3(v2);
  sub_253CD9344();
  sub_253CD91DC();
}

void sub_253CBCCCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13)
{
  sub_253C59954();
  uint64_t v16 = v15;
  sub_253DF26C0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v17);
  sub_253CD92D4(v18, v30);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v19);
  sub_253C8F07C();
  sub_253DEFFE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v20);
  sub_253CD8AB8(v21, v31);
  sub_253BDEDD8(&qword_269D7D918);
  sub_253C0F830();
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_253C566DC();
  uint64_t v24 = _s18TaskDefinitionThinO23CandidateEvaluationThinVMa(v23);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v25);
  sub_253C10D38();
  sub_253BDF5F8(v16, v16[3]);
  sub_253CD6F90();
  sub_253CD9B38();
  sub_253DF5E30();
  if (v14)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v16);
  }
  else
  {
    sub_253CC3794(&qword_269D7CF10, MEMORY[0x263F4BF98]);
    sub_253CD9AEC();
    sub_253DF5BA0();
    sub_253BEFD2C();
    v26();
    sub_253C2F438();
    sub_253CC3794(&qword_269D7CF68, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
    sub_253DF5BA0();
    sub_253CC392C();
    sub_253CD9A00();
    sub_253CC3794(&qword_269D7CF70, MEMORY[0x263F4D120]);
    sub_253DF5BA0();
    sub_253CD94F4();
    sub_253BEFD2C();
    v27();
    sub_253CC3AD4();
    sub_253CD9AA8();
    *(unsigned char *)(v13 + *(int *)(v24 + 28)) = a13;
    sub_253CC3B20();
    sub_253CD9AA8();
    uint64_t v28 = sub_253CD8E28();
    v29(v28);
    *(unsigned char *)(v13 + *(int *)(v24 + 32)) = a11;
    sub_253CC3B6C();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v16);
    sub_253CC39A0();
  }
  sub_253C5993C();
}

uint64_t sub_253CBD1C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465747563657865 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CBD2D8(char a1)
{
  if (a1) {
    return 0x6465747563657865;
  }
  else {
    return 0x76456E6F69746361;
  }
}

void sub_253CBD31C()
{
  sub_253CD92C0();
  sub_253CD8E7C();
  sub_253BDEDD8(&qword_269D7D710);
  sub_253C0F830();
  MEMORY[0x270FA5388](v1);
  sub_253CD8AD4();
  sub_253CD69EC();
  sub_253C2F458();
  sub_253CD9B2C();
  sub_253DEFE90();
  sub_253CC3794(&qword_269D7EDD0, MEMORY[0x263F07508]);
  sub_253CD8AF4();
  if (!v0)
  {
    _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    sub_253C2F438();
    sub_253DF5BF0();
  }
  uint64_t v2 = sub_253CD8C00();
  v3(v2);
  sub_253CD9344();
  sub_253CD91DC();
}

void sub_253CBD444()
{
  sub_253C59954();
  uint64_t v3 = v2;
  sub_253DEFE90();
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253C363A4();
  sub_253BDEDD8(&qword_269D7D6F8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_253C4BC10();
  uint64_t v7 = _s18TaskDefinitionThinO14TaskActionThinVMa(v6);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v8);
  sub_253C2F37C();
  sub_253CD8E50(v3);
  sub_253CD69EC();
  sub_253DF5E30();
  if (v0)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v3);
  }
  else
  {
    sub_253CC3794(&qword_269D7D708, MEMORY[0x263F07508]);
    sub_253CD9AEC();
    sub_253DF5BA0();
    sub_253CD94F4();
    sub_253BEFD2C();
    v9();
    sub_253C2F438();
    char v10 = sub_253DF5B70();
    sub_253C634D8();
    v11();
    *(unsigned char *)(v1 + *(int *)(v7 + 20)) = v10 & 1;
    sub_253CC3B6C();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v3);
    sub_253CC39A0();
  }
  sub_253C5993C();
}

uint64_t sub_253CBD6D4()
{
  sub_253CD99CC();
  BOOL v3 = v3 && v2 == 0xE500000000000000;
  if (v3 || (sub_253CD9CB4(), sub_253C8C988(), (sub_253CD8B90() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v1 == 0x6E6F69746361 && v0 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_253CD8B90();
    sub_253CD90C8();
    if (v1) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CBD778(char a1)
{
  if (a1) {
    return 0x6E6F69746361;
  }
  else {
    return 0x65756C6176;
  }
}

void sub_253CBD7A8()
{
  sub_253C59954();
  sub_253CD97C0();
  sub_253BDEDD8(&qword_269D7D750);
  sub_253C0F830();
  v20[6] = v2;
  v20[7] = v1;
  MEMORY[0x270FA5388](v1);
  v20[5] = (uint64_t)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253C36350();
  v20[1] = _s18TaskDefinitionThinO14TaskActionThinVMa(v4);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v5);
  sub_253CD8C8C(v6, v20[0]);
  sub_253BDEDD8(&qword_269D7D758);
  sub_253C0F830();
  void v20[2] = v8;
  v20[3] = v7;
  MEMORY[0x270FA5388](v7);
  v20[0] = sub_253CD93D4();
  sub_253C0F830();
  v20[9] = v9;
  MEMORY[0x270FA5388](v10);
  _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v11);
  sub_253C2F394();
  v20[10] = sub_253BDEDD8(&qword_269D7D760);
  sub_253C0F830();
  MEMORY[0x270FA5388](v12);
  sub_253CD90E0(v0);
  sub_253CD6A38();
  sub_253CD9B64();
  sub_253CC3B6C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253CC392C();
    sub_253CD6A84();
    sub_253CD9174();
    sub_253CC3794(&qword_269D7D768, (void (*)(uint64_t))_s18TaskDefinitionThinO14TaskActionThinVMa);
    sub_253CD921C();
    sub_253BEFBCC();
    v13();
    sub_253CC39A0();
    sub_253C0FDD4();
    v14();
  }
  else
  {
    sub_253BEFD2C();
    v15();
    sub_253CD6AD0();
    sub_253C8F0D0();
    sub_253CC3794(&qword_269D7CEE0, MEMORY[0x263F4BF98]);
    sub_253CD91F0();
    sub_253BEFBCC();
    v16();
    sub_253BEFBCC();
    v17();
    uint64_t v18 = sub_253CD9930();
    v19(v18);
  }
  sub_253C5993C();
}

void sub_253CBDB54()
{
  sub_253C59954();
  uint64_t v28 = v0;
  uint64_t v2 = v1;
  v27[4] = v3;
  sub_253BDEDD8(&qword_269D7D718);
  sub_253C0F830();
  v27[7] = v4;
  v27[8] = v5;
  MEMORY[0x270FA5388](v4);
  sub_253CD8AB8(v6, v27[0]);
  sub_253BDEDD8(&qword_269D7D720);
  sub_253C0F830();
  v27[5] = v8;
  v27[6] = v7;
  MEMORY[0x270FA5388](v7);
  sub_253CD8B20(v9, v27[0]);
  sub_253BDEDD8(&qword_269D7D728);
  sub_253C0F830();
  v27[11] = v11;
  v27[12] = v10;
  MEMORY[0x270FA5388](v10);
  _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  sub_253CA0118();
  MEMORY[0x270FA5388](v13);
  sub_253CD9C44();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v27 - v15;
  unint64_t v17 = v2[4];
  sub_253CD8E50(v2);
  sub_253CD6A38();
  sub_253CD92A0();
  if (v0) {
    goto LABEL_6;
  }
  sub_253CD912C();
  sub_253CD95D8();
  if (!v19 || (sub_253CD8F68(v18, v19, v20, (uint64_t)(v16 + 32), v21, (2 * v19) | 1), sub_253CD9CE0(), v17 >> 1))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    sub_253BDEDD8(&qword_269D7CA68);
    sub_253CD9524();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253CD8DD0();
    v22();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_253C0FFA4();
    v23();
    uint64_t v2 = v28;
LABEL_6:
    uint64_t v26 = (uint64_t)v2;
    goto LABEL_7;
  }
  sub_253CD6A84();
  sub_253CD8EEC();
  _s18TaskDefinitionThinO14TaskActionThinVMa(0);
  sub_253CC3794(&qword_269D7D740, (void (*)(uint64_t))_s18TaskDefinitionThinO14TaskActionThinVMa);
  sub_253CD9060();
  sub_253CD9CD4();
  sub_253BEFBCC();
  v24();
  swift_unknownObjectRelease();
  sub_253C0FFA4();
  v25();
  swift_storeEnumTagMultiPayload();
  sub_253CC392C();
  sub_253CC392C();
  uint64_t v26 = (uint64_t)v28;
LABEL_7:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v26);
  sub_253CD93FC();
  sub_253C5993C();
}

uint64_t sub_253CBDFE8(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 0x6574656C706D6F63 && a2 == 0xE800000000000000;
  if (v4 || (sub_253CD9CB4(), (sub_253CD8B90() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 0x656C706D6F636E69 && v2 == 0xEA00000000006574)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_253CD8B90();
    sub_253CD90C8();
    if (v3) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CBE0C0(char a1)
{
  if (a1) {
    return 0x656C706D6F636E69;
  }
  else {
    return 0x6574656C706D6F63;
  }
}

uint64_t sub_253CBE0FC()
{
  sub_253CD99CC();
  BOOL v2 = v2 && v1 == 0xE500000000000000;
  if (v2)
  {
    swift_bridgeObjectRelease();
    char v3 = 0;
  }
  else
  {
    sub_253C8C988();
    sub_253DF5C90();
    sub_253CD90C8();
    char v3 = v0 ^ 1;
  }
  return v3 & 1;
}

void sub_253CBE15C()
{
  sub_253C59954();
  sub_253CD94C4();
  sub_253BDEDD8(&qword_269D7D830);
  sub_253C0F830();
  MEMORY[0x270FA5388](v2);
  sub_253C567E0(v3, v17);
  sub_253BDEDD8(&qword_269D7D838);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253C2F37C();
  uint64_t v5 = sub_253BDEDD8(&qword_269D7D698);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253C566DC();
  uint64_t v8 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(v7);
  uint64_t v9 = sub_253BDF9FC(v8);
  MEMORY[0x270FA5388](v9);
  sub_253C10D38();
  sub_253BDEDD8(&qword_269D7D840);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  sub_253CD8AD4();
  sub_253CD6C98();
  sub_253CD98F0();
  sub_253CC3B6C();
  uint64_t v11 = sub_253BDEDD8(&qword_269D7D680);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v11) == 1)
  {
    sub_253CD6CE4();
    sub_253CD9158();
    sub_253BEFBCC();
    v12();
    sub_253C0FDC8();
    v13();
  }
  else
  {
    sub_253C61B78(v0, v1, &qword_269D7D698);
    sub_253CD6D30();
    sub_253CD9158();
    _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
    sub_253CC3794(&qword_269D7D848, (void (*)(uint64_t))_s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa);
    sub_253CD9274();
    sub_253BEFBCC();
    v14();
    sub_253BEFAC0(v1, &qword_269D7D698);
    uint64_t v15 = sub_253CD9AF8();
    v16(v15);
  }
  sub_253C59994();
  sub_253C5993C();
}

void sub_253CBE430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  sub_253C59954();
  uint64_t v12 = v11;
  sub_253BDEDD8(&qword_269D7D7F8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v13);
  sub_253CD8AB8(v14, v34);
  sub_253BDEDD8(&qword_269D7D800);
  sub_253C0F830();
  MEMORY[0x270FA5388](v15);
  sub_253CD8BAC(v16, v35);
  sub_253BDEDD8(&qword_269D7D808);
  sub_253C0F830();
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_253C63598();
  _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(v18);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v19);
  sub_253CD8C70();
  MEMORY[0x270FA5388](v20);
  unint64_t v21 = v12[3];
  sub_253CD8E50(v12);
  sub_253CD6C98();
  sub_253CD962C();
  if (v10) {
    goto LABEL_8;
  }
  uint64_t v22 = sub_253CD947C();
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23 || (sub_253CD8F24(v22, v23), sub_253CD9C80(), v21 >> 1))
  {
    sub_253CD9548();
    sub_253C0FFC8();
    sub_253BDEDD8(&qword_269D7CA68);
    sub_253CD9500();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253CD8DD0();
    v24();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_253C0FDD4();
    v25();
    uint64_t v12 = v10;
LABEL_8:
    uint64_t v26 = (uint64_t)v12;
    goto LABEL_9;
  }
  if (a10)
  {
    sub_253CD6CE4();
    sub_253CD8EB4();
    sub_253BEFBCC();
    v27();
    swift_unknownObjectRelease();
    sub_253BEFBCC();
    v28();
    uint64_t v29 = sub_253BDEDD8(&qword_269D7D680);
    sub_253CD96B4(v29);
  }
  else
  {
    sub_253CD6D30();
    sub_253CD8EB4();
    _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
    sub_253CC3794(&qword_269D7D828, (void (*)(uint64_t))_s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa);
    sub_253CD8FF8();
    sub_253BEFBCC();
    v30();
    swift_unknownObjectRelease();
    uint64_t v31 = sub_253CD8DFC();
    v32(v31);
    uint64_t v33 = sub_253BDEDD8(&qword_269D7D680);
    sub_253CD9A88(v33);
    sub_253CC392C();
  }
  sub_253CC392C();
  uint64_t v26 = (uint64_t)v10;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v26);
  sub_253CD9B20();
  sub_253C5993C();
}

uint64_t sub_253CBE850()
{
  sub_253CD9588();
  BOOL v2 = v2 && v1 == 0xE700000000000000;
  if (v2 || (v3 = v1, uint64_t v4 = v0, (sub_253CD8B90() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v4 == 0xD000000000000010 && v3 == 0x8000000253E19640 || (sub_253CD98A8(), (sub_253CD8B90() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_253CD98DC();
    if (v4 == 0x6C61636974697263 && v3 == v6)
    {
      sub_253CD9888();
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      sub_253CD8B90();
      sub_253CD90C8();
      if (v4) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_253CBE960(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_253DF5C90();
    sub_253CD90C8();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

void sub_253CBE9C8()
{
  sub_253C59954();
  sub_253CD94C4();
  sub_253BDEDD8(&qword_269D7D7B0);
  sub_253C0F830();
  v27[4] = v2;
  v27[5] = v1;
  MEMORY[0x270FA5388](v1);
  sub_253CD8BC8(v3, v27[0]);
  v27[7] = sub_253BDEDD8(&qword_269D7D7B8);
  sub_253C0F830();
  void v27[2] = v4;
  MEMORY[0x270FA5388](v5);
  v27[9] = (uint64_t)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253DF00F0();
  sub_253C0F830();
  v27[6] = v8;
  MEMORY[0x270FA5388](v9);
  sub_253CD8AB8(v10, v27[0]);
  sub_253BDEDD8(&qword_269D7D7C0);
  sub_253C0F830();
  v27[0] = v12;
  v27[1] = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = sub_253C63598();
  uint64_t v14 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(v13);
  uint64_t v15 = sub_253BDF9FC(v14);
  MEMORY[0x270FA5388](v15);
  sub_253C10D38();
  sub_253BDEDD8(&qword_269D7D7C8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v16);
  sub_253C16A90();
  sub_253CD8E50(v0);
  sub_253CD6B1C();
  sub_253DF5E40();
  sub_253CC3B6C();
  uint64_t v17 = sub_253CD99F4();
  int v19 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v17, v18, v7);
  if (v19)
  {
    if (v19 == 1)
    {
      sub_253CD6C00();
      sub_253C8F0D0();
      uint64_t v20 = sub_253C8F564();
    }
    else
    {
      sub_253CD6B68();
      sub_253C8F0D0();
      uint64_t v20 = sub_253CD9338();
    }
    v21(v20);
    sub_253C0FDC8();
    v26();
  }
  else
  {
    sub_253BEFD2C();
    v22();
    sub_253CD6BB4();
    sub_253C8F0D0();
    sub_253CC3794(&qword_269D7CFD8, MEMORY[0x263F4C070]);
    sub_253DF5C20();
    sub_253C0FD90();
    v23();
    sub_253C0FDD4();
    v24();
    sub_253C0FDC8();
    v25();
  }
  sub_253C59994();
  sub_253C5993C();
}

void sub_253CBED58()
{
  sub_253C59954();
  uint64_t v4 = v3;
  sub_253BDEDD8(&qword_269D7D770);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253CD8AB8(v6, v42);
  sub_253BDEDD8(&qword_269D7D778);
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253CD8BAC(v8, v43);
  sub_253BDEDD8(&qword_269D7D780);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253CD8B20(v10, v44);
  sub_253BDEDD8(&qword_269D7D788);
  sub_253C0F830();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = sub_253C3330C();
  uint64_t v13 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(v12);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v14);
  sub_253CD8C70();
  MEMORY[0x270FA5388](v15);
  sub_253CD8E6C();
  sub_253CD90E0(v4);
  sub_253CD6B1C();
  sub_253CD9B38();
  sub_253DF5E30();
  if (!v1)
  {
    uint64_t v45 = v0;
    uint64_t v46 = v4;
    if (*(void *)(sub_253DF5BB0() + 16))
    {
      sub_253CD95BC();
      int v17 = *(unsigned __int8 *)(v16 + 32);
      sub_253CD95A0(v18, v19, v20, v16 + 32, v21, v22);
      uint64_t v24 = v23;
      unint64_t v26 = v25;
      swift_bridgeObjectRelease();
      if (v24 == v26 >> 1)
      {
        if (v17)
        {
          if (v17 == 1)
          {
            sub_253CD6BB4();
            sub_253CD8F84();
            uint64_t v27 = sub_253DF00F0();
            sub_253CC3794(&qword_269D7D010, MEMORY[0x263F4C070]);
            sub_253DF5BA0();
            sub_253BEFBCC();
            v40();
            swift_unknownObjectRelease();
            sub_253C11550();
            v41();
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v45, 0, 2, v27);
            sub_253CC392C();
LABEL_13:
            sub_253CC392C();
            uint64_t v37 = (uint64_t)v46;
            goto LABEL_11;
          }
          sub_253CD6B68();
          sub_253CD8F84();
          sub_253BEFBCC();
          v38();
          swift_unknownObjectRelease();
          sub_253BEFBCC();
          v39();
          sub_253DF00F0();
          uint64_t v35 = sub_253CD99F4();
        }
        else
        {
          sub_253CD6C00();
          sub_253CD8F84();
          sub_253BEFBCC();
          v32();
          swift_unknownObjectRelease();
          sub_253BEFBCC();
          v33();
          uint64_t v34 = sub_253DF00F0();
          uint64_t v35 = v2;
          uint64_t v36 = 1;
        }
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v35, v36, 2, v34);
        goto LABEL_13;
      }
    }
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v29 = v28;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v29 = v13;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253C0FD9C();
    v30();
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_253C0FDC8();
    v31();
    uint64_t v4 = v46;
  }
  uint64_t v37 = (uint64_t)v4;
LABEL_11:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v37);
  sub_253C5993C();
}

uint64_t sub_253CBF2D4()
{
  sub_253CD9588();
  BOOL v2 = v2 && v1 == 0xE700000000000000;
  if (v2 || (v3 = v1, uint64_t v4 = v0, (sub_253CD8B90() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  BOOL v6 = v4 == 0x6465727265666E69 && v3 == 0xEF73736563637553;
  if (v6 || (sub_253CD9944(), (sub_253CD8B90() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  sub_253CD98DC();
  if (v4 == 0x6465727265666E69 && v3 == v7)
  {
    sub_253CD9888();
LABEL_20:
    swift_bridgeObjectRelease();
    return 2;
  }
  sub_253CD9944();
  if (sub_253CD8B90()) {
    goto LABEL_20;
  }
  BOOL v9 = v4 == 0x6E6F646E616261 && v3 == 0xE700000000000000;
  if (v9 || (sub_253CD8B90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (v4 == 0x6C65636E6163 && v3 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    sub_253CD8B90();
    sub_253CD90C8();
    if (v4) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_253CBF498(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F73616572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    sub_253DF5C90();
    sub_253CD90C8();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

void sub_253CBF510()
{
  sub_253C59954();
  sub_253CD94C4();
  sub_253BDEDD8(&qword_269D7D8E0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v2);
  sub_253CD8B20(v3, v23);
  sub_253BDEDD8(&qword_269D7D8E8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253C6B840(v5, v24);
  sub_253BDEDD8(&qword_269D7D8F0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = sub_253CD8D0C(v7, v25);
  _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(v8);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v9);
  sub_253CD8DA4(v10, v26);
  sub_253BDEDD8(&qword_269D7D8F8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v11);
  sub_253C566F8();
  sub_253BDEDD8(&qword_269D7D900);
  sub_253C0F830();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = sub_253C63598();
  uint64_t v14 = _s18TaskDefinitionThinO14TaskStatusThinOMa(v13);
  uint64_t v15 = sub_253BDF9FC(v14);
  MEMORY[0x270FA5388](v15);
  sub_253C363A4();
  sub_253BDEDD8(&qword_269D7D908);
  sub_253C0F830();
  MEMORY[0x270FA5388](v16);
  sub_253CD8DE0(v0);
  sub_253CD6DC8();
  sub_253CD972C();
  sub_253CC3B6C();
  uint64_t v17 = sub_253BDEDD8(&qword_269D7D678);
  switch(_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 4, v17))
  {
    case 1u:
      sub_253CD6F44();
      sub_253CD8CC4();
      uint64_t v20 = sub_253C8F564();
      goto LABEL_8;
    case 2u:
      sub_253CD6EF8();
      sub_253CD8CC4();
      uint64_t v20 = sub_253CD96A8();
      goto LABEL_8;
    case 3u:
      sub_253CD6E60();
      sub_253CD8CC4();
      goto LABEL_7;
    case 4u:
      sub_253CD6E14();
      sub_253CD8CC4();
LABEL_7:
      uint64_t v20 = sub_253CD9338();
LABEL_8:
      v21(v20);
      sub_253C0FDC8();
      v22();
      break;
    default:
      sub_253CC392C();
      sub_253CD6EAC();
      sub_253CD8CC4();
      sub_253CC3794(&qword_269D7D910, (void (*)(uint64_t))_s18TaskDefinitionThinO21TaskFailureReasonThinOMa);
      sub_253CD9248();
      sub_253BEFBCC();
      v18();
      sub_253CC39A0();
      sub_253C0FDC8();
      v19();
      break;
  }
  sub_253C59994();
  sub_253C5993C();
}

void sub_253CBF984()
{
  sub_253C59954();
  uint64_t v53 = v1;
  uint64_t v3 = v2;
  v51[15] = v4;
  v51[18] = sub_253BDEDD8(&qword_269D7D878);
  sub_253C0F830();
  v51[16] = v5;
  MEMORY[0x270FA5388](v6);
  sub_253CD8C8C(v7, v51[0]);
  sub_253BDEDD8(&qword_269D7D880);
  sub_253C0F830();
  v51[7] = v9;
  v51[8] = v8;
  MEMORY[0x270FA5388](v8);
  sub_253CD8BE4(v10, v51[0]);
  sub_253BDEDD8(&qword_269D7D888);
  sub_253C0F830();
  v51[9] = v12;
  v51[10] = v11;
  MEMORY[0x270FA5388](v11);
  sub_253CD8BC8(v13, v51[0]);
  sub_253BDEDD8(&qword_269D7D890);
  sub_253C0F830();
  v51[5] = v15;
  v51[6] = v14;
  MEMORY[0x270FA5388](v14);
  sub_253C6B840(v16, v51[0]);
  sub_253BDEDD8(&qword_269D7D898);
  sub_253C0F830();
  void v51[3] = v18;
  v51[4] = v17;
  MEMORY[0x270FA5388](v17);
  sub_253C2F394();
  uint64_t v19 = sub_253BDEDD8(&qword_269D7D8A0);
  sub_253C0F830();
  v51[17] = v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_253C8F07C();
  _s18TaskDefinitionThinO14TaskStatusThinOMa(v22);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v23);
  sub_253CD8C70();
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)v51 - v25;
  uint64_t v52 = v3;
  sub_253CD8AD4();
  sub_253CD6DC8();
  sub_253CD94A0();
  if (v1) {
    goto LABEL_11;
  }
  sub_253CD9458();
  sub_253CD95D8();
  if (!v28
    || (v51[0] = 0,
        uint64_t v31 = *(unsigned __int8 *)(v0 + 32),
        sub_253CD8F68(v27, v28, v29, v0 + 32, v30, (2 * v28) | 1),
        sub_253CD9998(),
        v26))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    sub_253BDEDD8(&qword_269D7CA68);
    sub_253CD98BC();
    sub_253CD8B74();
    sub_253C0FA90();
    sub_253CD8DD0();
    v37();
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v38 = sub_253CD969C();
    v43(v38, v19);
LABEL_11:
    uint64_t v44 = v52;
    goto LABEL_12;
  }
  switch(v31)
  {
    case 1:
      sub_253CD6EF8();
      sub_253CD8B54();
      sub_253BEFBCC();
      v39();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v40();
      sub_253BDEDD8(&qword_269D7D678);
      uint64_t v34 = sub_253CD9A18();
      goto LABEL_13;
    case 2:
      sub_253CD6EAC();
      sub_253CD8B54();
      _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      sub_253CC3794(&qword_269D7D8C8, (void (*)(uint64_t))_s18TaskDefinitionThinO21TaskFailureReasonThinOMa);
      sub_253CD902C();
      sub_253BEFBCC();
      v48();
      swift_unknownObjectRelease();
      sub_253C0FFA4();
      v49();
      uint64_t v50 = sub_253BDEDD8(&qword_269D7D678);
      sub_253CD9A68(v50);
      sub_253CC392C();
      goto LABEL_14;
    case 3:
      sub_253CD6E60();
      sub_253CD8B54();
      sub_253BEFBCC();
      v41();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v42();
      sub_253BDEDD8(&qword_269D7D678);
      uint64_t v34 = sub_253CD9A54();
      goto LABEL_13;
    case 4:
      sub_253CD6E14();
      sub_253CD8B54();
      sub_253C0FDBC();
      v45();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v46();
      sub_253BDEDD8(&qword_269D7D678);
      uint64_t v34 = sub_253CD9A2C();
      goto LABEL_13;
    default:
      sub_253CD6F44();
      sub_253CD8B54();
      sub_253BEFBCC();
      v32();
      swift_unknownObjectRelease();
      sub_253BEFBCC();
      v33();
      sub_253BDEDD8(&qword_269D7D678);
      uint64_t v34 = sub_253CD9A40();
LABEL_13:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v34, v35, 4, v36);
LABEL_14:
      uint64_t v47 = v52;
      sub_253CC392C();
      uint64_t v44 = v47;
      break;
  }
LABEL_12:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v44);
  sub_253C5993C();
}

uint64_t sub_253CC0030(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v4 || (sub_253CD9CB4(), (sub_253CD8B90() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 0x745374706D6F7270 && v2 == 0xEB00000000657461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    sub_253CD8B90();
    sub_253CD90C8();
    if (v3) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CC010C()
{
  return sub_253DF5DD0();
}

void sub_253CC014C()
{
  sub_253CD92C0();
  sub_253CD8E7C();
  sub_253BDEDD8(&qword_269D7D868);
  sub_253C0F830();
  MEMORY[0x270FA5388](v1);
  sub_253CD8AD4();
  sub_253CD6D7C();
  sub_253C2F458();
  uint64_t v2 = sub_253CD9B2C();
  _s18TaskDefinitionThinO14TaskStatusThinOMa(v2);
  sub_253CC3794(&qword_269D7D870, (void (*)(uint64_t))_s18TaskDefinitionThinO14TaskStatusThinOMa);
  sub_253CD8AF4();
  if (!v0)
  {
    uint64_t v3 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
    sub_253CD9778(v3);
    sub_253CD8D2C();
  }
  uint64_t v4 = sub_253CD8C00();
  v5(v4);
  sub_253CD9344();
  sub_253CD91DC();
}

void sub_253CC0274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  sub_253C59954();
  uint64_t v15 = sub_253CD9C1C(v14);
  _s18TaskDefinitionThinO14TaskStatusThinOMa(v15);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v16);
  sub_253CD9358(v17, v26[0]);
  sub_253BDEDD8(&qword_269D7D850);
  sub_253C0F830();
  v26[1] = v19;
  v26[2] = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = sub_253C566DC();
  uint64_t v21 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(v20);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)v26 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253CD9818(v12);
  sub_253CD6D7C();
  sub_253CD94D0();
  if (v13)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v12);
  }
  else
  {
    sub_253CC3794(&qword_269D7D860, (void (*)(uint64_t))_s18TaskDefinitionThinO14TaskStatusThinOMa);
    sub_253CD90FC();
    sub_253CC392C();
    sub_253CC408C();
    sub_253CD9408();
    sub_253C0FDC8();
    v25();
    v24[*(int *)(v21 + 20)] = a12;
    sub_253CC3B6C();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v12);
    sub_253CC39A0();
  }
  sub_253CD9B20();
  sub_253C5993C();
}

uint64_t sub_253CC04AC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6D617473656D6974 && a2 == 0xE900000000000070)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_253CC0540()
{
  return sub_253DF5DD0();
}

uint64_t sub_253CC057C()
{
  return 0x6D617473656D6974;
}

void sub_253CC0598()
{
  sub_253CD92C0();
  sub_253BDEDD8(&qword_269D7D7E8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v0);
  sub_253CD8AD4();
  sub_253CD6C4C();
  sub_253C4BC6C();
  sub_253DEFE20();
  sub_253CC3794(&qword_269D7D7F0, MEMORY[0x263F07490]);
  sub_253C4BBE8();
  sub_253C0FDC8();
  v1();
  sub_253CD91DC();
}

void sub_253CC06A4()
{
  sub_253C59954();
  sub_253C4BCA0(v2);
  sub_253DEFE20();
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253C4BC2C(v4, v11);
  sub_253BDEDD8(&qword_269D7D7D0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_253C4BC10();
  uint64_t v7 = _s18TaskDefinitionThinO15TaskContextThinVMa(v6);
  uint64_t v8 = sub_253BDF9FC(v7);
  MEMORY[0x270FA5388](v8);
  sub_253CD90E0(v0);
  sub_253CD6C4C();
  sub_253C4BC48();
  if (!v1)
  {
    sub_253CC3794(&qword_269D7D7E0, MEMORY[0x263F07490]);
    sub_253C4BB70();
    sub_253BEFBCC();
    v9();
    sub_253C10134();
    v10();
    sub_253CC392C();
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v0);
  sub_253CD9300();
  sub_253C5993C();
}

uint64_t sub_253CC085C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000253E19660 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x6E656D6574617473 && a2 == 0xEB00000000644974;
    if (v5 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x6F43656369766564 && a2 == 0xED0000747865746ELL;
      if (v6 || (sub_253DF5C90() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000253E19680 || (sub_253DF5C90() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000253E196A0 || (sub_253DF5C90() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v7 = a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000;
        if (v7 || (sub_253DF5C90() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else if (a1 == 0xD000000000000011 && a2 == 0x8000000253E196C0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else
        {
          char v8 = sub_253DF5C90();
          swift_bridgeObjectRelease();
          if (v8) {
            return 6;
          }
          else {
            return 7;
          }
        }
      }
    }
  }
}

uint64_t sub_253CC0B48()
{
  return 7;
}

uint64_t sub_253CC0B50()
{
  return sub_253DF5DD0();
}

unint64_t sub_253CC0B90(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6E656D6574617473;
      break;
    case 2:
      unint64_t result = 0x6F43656369766564;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x656D6F6374756FLL;
      break;
    default:
      return result;
  }
  return result;
}

void sub_253CC0C7C()
{
  sub_253CD92C0();
  sub_253BDEDD8(&qword_269D7D6B0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v1);
  sub_253CD8AD4();
  sub_253CD6954();
  sub_253C2F458();
  sub_253DEFE90();
  sub_253CC3794(&qword_269D7EDD0, MEMORY[0x263F07508]);
  sub_253CD9910();
  if (!v0)
  {
    _s18TaskDefinitionThinO18TaskEvaluationThinVMa(0);
    sub_253CD9BE8(1);
    sub_253DEFFE0();
    sub_253CC3794(&qword_269D7CEE0, MEMORY[0x263F4BF98]);
    sub_253CD8CE0();
    uint64_t v2 = sub_253CD9BE8(2);
    _s18TaskDefinitionThinO15TaskContextThinVMa(v2);
    sub_253CC3794(&qword_269D7D6C0, (void (*)(uint64_t))_s18TaskDefinitionThinO15TaskContextThinVMa);
    sub_253CD8CE0();
    sub_253BDEDD8(&qword_269D7D6C8);
    sub_253CD6FDC(&qword_269D7D6D0, &qword_269D7D6D8);
    sub_253CD9910();
    uint64_t v3 = sub_253CD9BE8(4);
    _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(v3);
    sub_253CC3794(&qword_269D7D6E0, (void (*)(uint64_t))_s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa);
    sub_253CD8CE0();
    uint64_t v4 = sub_253CD9BE8(5);
    _s18TaskDefinitionThinO15TaskOutcomeThinVMa(v4);
    sub_253CC3794(&qword_269D7D6E8, (void (*)(uint64_t))_s18TaskDefinitionThinO15TaskOutcomeThinVMa);
    sub_253CD8CE0();
    sub_253CD69A0();
    sub_253DF5C20();
  }
  uint64_t v5 = sub_253CD8C00();
  v6(v5);
  sub_253CD91DC();
}

void sub_253CC0FCC()
{
  sub_253C59954();
  uint64_t v37 = v0;
  uint64_t v3 = v2;
  v30[1] = v4;
  v30[2] = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v5);
  sub_253BDFA94();
  v30[3] = v6;
  uint64_t v7 = sub_253C36350();
  v30[4] = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(v7);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v8);
  v30[5] = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253C36350();
  v30[6] = _s18TaskDefinitionThinO15TaskContextThinVMa(v10);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v11);
  sub_253CD93AC();
  sub_253C0F830();
  uint64_t v32 = v13;
  uint64_t v33 = v12;
  MEMORY[0x270FA5388](v12);
  sub_253C8F07C();
  sub_253DEFE90();
  sub_253C0F830();
  uint64_t v34 = v14;
  MEMORY[0x270FA5388](v15);
  sub_253C2F364();
  sub_253BDEDD8(&qword_269D7D930);
  sub_253C0F830();
  v30[7] = v17;
  v30[8] = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = sub_253C63598();
  uint64_t v35 = _s18TaskDefinitionThinO18TaskEvaluationThinVMa(v18);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v19);
  sub_253BDFA94();
  uint64_t v21 = v20;
  uint64_t v36 = v3;
  sub_253CD8DE0(v3);
  sub_253CD6954();
  uint64_t v31 = v1;
  uint64_t v22 = v37;
  sub_253DF5E30();
  if (v22)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v36);
  }
  else
  {
    LOBYTE(v38) = 0;
    sub_253CC3794(&qword_269D7D708, MEMORY[0x263F07508]);
    sub_253CD96FC();
    sub_253DF5BA0();
    uint64_t v23 = v21;
    sub_253BEFD2C();
    v24();
    LOBYTE(v38) = 1;
    sub_253CC3794(&qword_269D7CF10, MEMORY[0x263F4BF98]);
    sub_253CD96FC();
    sub_253DF5BA0();
    uint64_t v25 = v35;
    sub_253BEFD2C();
    v26();
    LOBYTE(v38) = 2;
    sub_253CC3794(&qword_269D7D938, (void (*)(uint64_t))_s18TaskDefinitionThinO15TaskContextThinVMa);
    sub_253CD96FC();
    sub_253CD9AA8();
    sub_253CC392C();
    sub_253BDEDD8(&qword_269D7D6C8);
    sub_253CD6FDC(&qword_269D7D940, &qword_269D7D948);
    sub_253DF5BA0();
    *(void *)(v23 + *(int *)(v25 + 28)) = v38;
    LOBYTE(v38) = 4;
    sub_253CC3794(&qword_269D7D950, (void (*)(uint64_t))_s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa);
    sub_253CD96FC();
    sub_253DF5BA0();
    sub_253CC392C();
    LOBYTE(v38) = 5;
    sub_253CC3794(&qword_269D7D958, (void (*)(uint64_t))_s18TaskDefinitionThinO15TaskOutcomeThinVMa);
    sub_253CD96FC();
    sub_253DF5BA0();
    sub_253CC392C();
    sub_253CD706C();
    sub_253CD9AA8();
    sub_253CD8DC0();
    v27();
    char v28 = v39;
    uint64_t v29 = v23 + *(int *)(v25 + 40);
    *(unsigned char *)uint64_t v29 = v38;
    *(unsigned char *)(v29 + 8) = v28;
    *(_OWORD *)(v29 + 16) = v40;
    sub_253CC3B6C();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v36);
    sub_253CC39A0();
  }
  sub_253C5993C();
}

unint64_t sub_253CC179C()
{
  return sub_253CBC9D8(*v0);
}

uint64_t sub_253CC17A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CBC79C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CC17CC(uint64_t a1)
{
  unint64_t v2 = sub_253CD6F90();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1808(uint64_t a1)
{
  unint64_t v2 = sub_253CD6F90();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CC1844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_253CBCCCC(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(__int16 *)vars8, vars8[2], vars8[3], vars8[4]);
}

void sub_253CC185C()
{
}

uint64_t sub_253CC1874()
{
  return sub_253CBD2D8(*v0);
}

uint64_t sub_253CC187C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CBD1C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CC18A4(uint64_t a1)
{
  unint64_t v2 = sub_253CD69EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC18E0(uint64_t a1)
{
  unint64_t v2 = sub_253CD69EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CC191C()
{
}

void sub_253CC1934()
{
}

uint64_t sub_253CC194C(uint64_t a1)
{
  unint64_t v2 = sub_253CD6A84();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1988(uint64_t a1)
{
  unint64_t v2 = sub_253CD6A84();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC19C4()
{
  return sub_253CBD778(*v0);
}

uint64_t sub_253CC19CC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253CBD6D4();
  *a1 = result;
  return result;
}

uint64_t sub_253CC19F4(uint64_t a1)
{
  unint64_t v2 = sub_253CD6A38();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1A30(uint64_t a1)
{
  unint64_t v2 = sub_253CD6A38();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC1A6C(uint64_t a1)
{
  unint64_t v2 = sub_253CD6AD0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1AA8(uint64_t a1)
{
  unint64_t v2 = sub_253CD6AD0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CC1AE4()
{
}

void sub_253CC1AFC()
{
}

uint64_t sub_253CC1B14()
{
  return sub_253CBE0C0(*v0);
}

uint64_t sub_253CC1B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CBDFE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CC1B44(uint64_t a1)
{
  unint64_t v2 = sub_253CD6C98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1B80(uint64_t a1)
{
  unint64_t v2 = sub_253CD6C98();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC1BBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253CBE0FC();
  *a1 = result & 1;
  return result;
}

uint64_t sub_253CC1BE8(uint64_t a1)
{
  unint64_t v2 = sub_253CD6D30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1C24(uint64_t a1)
{
  unint64_t v2 = sub_253CD6D30();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC1C60(uint64_t a1)
{
  unint64_t v2 = sub_253CD6CE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1C9C(uint64_t a1)
{
  unint64_t v2 = sub_253CD6CE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CC1CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_253CBE430(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_253CC1CF0()
{
}

uint64_t sub_253CC1D08(uint64_t a1)
{
  unint64_t v2 = sub_253CD6B1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1D44(uint64_t a1)
{
  unint64_t v2 = sub_253CD6B1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC1D80(uint64_t a1)
{
  unint64_t v2 = sub_253CD6B68();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1DBC(uint64_t a1)
{
  unint64_t v2 = sub_253CD6B68();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC1DF8(uint64_t a1)
{
  unint64_t v2 = sub_253CD6BB4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1E34(uint64_t a1)
{
  unint64_t v2 = sub_253CD6BB4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC1E70(uint64_t a1)
{
  unint64_t v2 = sub_253CD6C00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1EAC(uint64_t a1)
{
  unint64_t v2 = sub_253CD6C00();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CC1EE8()
{
}

void sub_253CC1F00()
{
}

uint64_t sub_253CC1F18(uint64_t a1)
{
  unint64_t v2 = sub_253CD6E60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1F54(uint64_t a1)
{
  unint64_t v2 = sub_253CD6E60();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC1F90(uint64_t a1)
{
  unint64_t v2 = sub_253CD6E14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC1FCC(uint64_t a1)
{
  unint64_t v2 = sub_253CD6E14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC2008(uint64_t a1)
{
  unint64_t v2 = sub_253CD6DC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC2044(uint64_t a1)
{
  unint64_t v2 = sub_253CD6DC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC2080(uint64_t a1)
{
  unint64_t v2 = sub_253CD6EAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC20BC(uint64_t a1)
{
  unint64_t v2 = sub_253CD6EAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC20F8(uint64_t a1)
{
  unint64_t v2 = sub_253CD6EF8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC2134(uint64_t a1)
{
  unint64_t v2 = sub_253CD6EF8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CC2170(uint64_t a1)
{
  unint64_t v2 = sub_253CD6F44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC21AC(uint64_t a1)
{
  unint64_t v2 = sub_253CD6F44();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CC21E8()
{
}

void sub_253CC2200()
{
}

uint64_t sub_253CC2218(uint64_t a1)
{
  unint64_t v2 = sub_253CD6D7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC2254(uint64_t a1)
{
  unint64_t v2 = sub_253CD6D7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CC2290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_253CC0274(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_253CC22A8()
{
}

uint64_t sub_253CC22C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CC04AC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_253CC22F0(uint64_t a1)
{
  unint64_t v2 = sub_253CD6C4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC232C(uint64_t a1)
{
  unint64_t v2 = sub_253CD6C4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CC2368()
{
}

void sub_253CC2380()
{
}

unint64_t sub_253CC2398()
{
  return sub_253CC0B90(*v0);
}

uint64_t sub_253CC23A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CC085C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CC23C8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_253CC0B48();
  *a1 = result;
  return result;
}

uint64_t sub_253CC23F0(uint64_t a1)
{
  unint64_t v2 = sub_253CD6954();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CC242C(uint64_t a1)
{
  unint64_t v2 = sub_253CD6954();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CC2468()
{
}

void sub_253CC2480()
{
}

void sub_253CC2498()
{
  sub_253C1CED0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253DEFE90();
  sub_253C0F830();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_253C567FC();
  uint64_t v9 = type metadata accessor for FeedbackLearning.TaskAction(v8);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_253C63598();
  type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(v11);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  sub_253C566F8();
  sub_253CC3B6C();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253CC392C();
    uint64_t v13 = sub_253C105C0();
    v14(v13);
    char v15 = *(unsigned char *)(v1 + *(int *)(v9 + 24));
    sub_253CC39A0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v3, v0, v4);
    *(unsigned char *)(v3 + *(int *)(_s18TaskDefinitionThinO14TaskActionThinVMa(0) + 20)) = v15;
  }
  else
  {
    sub_253DEFFE0();
    sub_253BDF7F0();
    sub_253C10134();
    v16();
  }
  _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
  swift_storeEnumTagMultiPayload();
  sub_253C1CEE8();
}

void sub_253CC2684()
{
  sub_253C8F550();
  uint64_t v3 = v2;
  type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v4);
  sub_253C4E9DC();
  uint64_t v5 = sub_253BDEDD8(&qword_269D7C730);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  sub_253C2F354();
  uint64_t v9 = v7 - v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_253CD99B8();
  uint64_t v12 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(v11);
  uint64_t v13 = sub_253BDF9FC(v12);
  MEMORY[0x270FA5388](v13);
  sub_253C566F8();
  sub_253CC3B6C();
  uint64_t v14 = sub_253BDEDD8(&qword_269D7C728);
  uint64_t v15 = 1;
  sub_253C0FD54(v1, 1, v14);
  if (!v16)
  {
    sub_253C61B78(v1, v0, &qword_269D7C730);
    uint64_t v17 = sub_253C105C0();
    sub_253C2E770(v17, v18, &qword_269D7C730);
    sub_253CD8D84(v9);
    if (v16)
    {
      uint64_t v19 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v3, 1, 1, v19);
    }
    else
    {
      sub_253CC392C();
      sub_253CC2498();
      uint64_t v20 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v3, 0, 1, v20);
      sub_253CC39A0();
    }
    sub_253BEFAC0(v0, &qword_269D7C730);
    uint64_t v15 = 0;
  }
  uint64_t v21 = sub_253BDEDD8(&qword_269D7D680);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v3, v15, 1, v21);
  sub_253C8F44C();
}

uint64_t sub_253CC289C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v2);
  sub_253C4E9DC();
  sub_253C10F58();
  sub_253CC3B6C();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_253DF00F0();
      uint64_t v4 = sub_253CD99F4();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v4, v5, 2, v6);
      return sub_253CC39A0();
    }
    uint64_t v12 = sub_253DF00F0();
    uint64_t v10 = a1;
    uint64_t v11 = 1;
  }
  else
  {
    uint64_t v8 = sub_253DF00F0();
    sub_253BDF7F0();
    sub_253C10134();
    v9();
    uint64_t v10 = a1;
    uint64_t v11 = 0;
    uint64_t v12 = v8;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v10, v11, 2, v12);
}

void sub_253CC29D0()
{
  sub_253C1CED0();
  uint64_t v5 = v1;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  uint64_t v9 = sub_253BDF9FC(v8);
  MEMORY[0x270FA5388](v9);
  unint64_t v95 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253C36350();
  uint64_t v12 = type metadata accessor for FeedbackLearning.CandidateEvaluation(v11);
  sub_253C0F830();
  uint64_t v83 = v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_253C3330C();
  uint64_t v16 = _s18TaskDefinitionThinO23CandidateEvaluationThinVMa(v15);
  sub_253C0F830();
  uint64_t v98 = v17;
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_253C8F07C();
  uint64_t v20 = type metadata accessor for FeedbackLearning.TaskStatus(v19);
  uint64_t v21 = sub_253BDF9FC(v20);
  MEMORY[0x270FA5388](v21);
  sub_253BDFA94();
  uint64_t v89 = v22;
  uint64_t v23 = sub_253C36350();
  uint64_t v24 = _s18TaskDefinitionThinO14TaskStatusThinOMa(v23);
  uint64_t v25 = sub_253BDF9FC(v24);
  MEMORY[0x270FA5388](v25);
  sub_253C34050();
  uint64_t v91 = v26;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v27);
  uint64_t v93 = (char *)&v79 - v28;
  uint64_t v29 = sub_253C36350();
  uint64_t v92 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(v29);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v30);
  sub_253CD8C8C(v31, v79);
  uint64_t v32 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
  uint64_t v33 = sub_253BDF9FC(v32);
  MEMORY[0x270FA5388](v33);
  sub_253CD8BC8(v34, v79);
  uint64_t v35 = _s18TaskDefinitionThinO15TaskContextThinVMa(0);
  uint64_t v36 = sub_253BDF9FC(v35);
  MEMORY[0x270FA5388](v36);
  sub_253C8F098();
  uint64_t v37 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v39 = v38;
  MEMORY[0x270FA5388](v40);
  sub_253C4BC10();
  sub_253DEFE90();
  sub_253C0F830();
  MEMORY[0x270FA5388](v41);
  char v84 = (char *)&v79 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = v43;
  uint64_t v44 = *(void (**)(void))(v43 + 16);
  uint64_t v86 = v45;
  v44();
  uint64_t v46 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  uint64_t v47 = v5 + *(int *)(v46 + 20);
  uint64_t v87 = v3;
  uint64_t v88 = v39;
  uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16);
  uint64_t v49 = v3;
  uint64_t v50 = (int *)v46;
  uint64_t v99 = v37;
  unint64_t v96 = v48;
  uint64_t v97 = v39 + 16;
  v48(v49, v47, v37);
  uint64_t v90 = v0;
  sub_253DF25E0();
  uint64_t v51 = *(void *)(v5 + v50[7]);
  uint64_t v52 = *(void *)(v51 + 16);
  uint64_t v53 = MEMORY[0x263F8EE78];
  if (v52)
  {
    unint64_t v80 = v50;
    uint64_t v81 = v5;
    uint64_t v82 = v7;
    uint64_t v100 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_253DC7428(0, v52, 0);
    unint64_t v54 = (*(unsigned __int8 *)(v83 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    uint64_t v79 = v51;
    unint64_t v55 = v51 + v54;
    uint64_t v56 = *(void *)(v83 + 72);
    do
    {
      sub_253CC3B6C();
      sub_253DF26A0();
      sub_253DF26B0();
      sub_253DF2690();
      v96(v2, v4, v99);
      sub_253CC3B6C();
      char v57 = *(unsigned char *)(v4 + *(int *)(v12 + 36));
      *(unsigned char *)(v2 + *(int *)(v16 + 28)) = *(unsigned char *)(v4 + *(int *)(v12 + 32));
      *(unsigned char *)(v2 + *(int *)(v16 + 32)) = v57;
      sub_253CC39A0();
      uint64_t v53 = v100;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253DC7428(0, *(void *)(v53 + 16) + 1, 1);
        uint64_t v53 = v100;
      }
      unint64_t v59 = *(void *)(v53 + 16);
      unint64_t v58 = *(void *)(v53 + 24);
      if (v59 >= v58 >> 1)
      {
        sub_253DC7428(v58 > 1, v59 + 1, 1);
        uint64_t v53 = v100;
      }
      *(void *)(v53 + 16) = v59 + 1;
      sub_253CC392C();
      v55 += v56;
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease();
    uint64_t v5 = v81;
    uint64_t v7 = v82;
    uint64_t v50 = v80;
  }
  sub_253CC2684();
  uint64_t v60 = v5 + v50[9];
  uint64_t v61 = v89;
  sub_253CC3B6C();
  uint64_t v62 = sub_253BDEDD8(&qword_269D7C770);
  uint64_t v63 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v61, 4, v62);
  uint64_t v64 = v91;
  if (!v63)
  {
    sub_253C115AC();
    sub_253CC392C();
    sub_253CC289C(v64);
    sub_253CC39A0();
  }
  uint64_t v65 = sub_253BDEDD8(&qword_269D7D678);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v64, v63, 4, v65);
  sub_253CC392C();
  char v66 = *(unsigned char *)(v60 + *(int *)(type metadata accessor for FeedbackLearning.TaskOutcome(0) + 20));
  uint64_t v67 = v94;
  sub_253CC392C();
  *(unsigned char *)(v67 + *(int *)(v92 + 20)) = v66;
  uint64_t v68 = (char *)(v5 + v50[10]);
  char v69 = *v68;
  char v70 = v68[8];
  uint64_t v72 = *((void *)v68 + 2);
  uint64_t v71 = *((void *)v68 + 3);
  sub_253C10134();
  v74(v73);
  uint64_t v75 = _s18TaskDefinitionThinO18TaskEvaluationThinVMa(0);
  sub_253C10134();
  v77(v76);
  sub_253CC392C();
  *(void *)(v7 + *(int *)(v75 + 28)) = v53;
  sub_253CC392C();
  sub_253CC392C();
  uint64_t v78 = v7 + *(int *)(v75 + 40);
  *(unsigned char *)uint64_t v78 = v69;
  *(unsigned char *)(v78 + 8) = v70;
  *(void *)(v78 + 16) = v72;
  *(void *)(v78 + 24) = v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_253C1CEE8();
}

unint64_t sub_253CC30EC()
{
  unint64_t result = qword_269D7CCF8;
  if (!qword_269D7CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CCF8);
  }
  return result;
}

unint64_t sub_253CC3138()
{
  unint64_t result = qword_269D7CD00;
  if (!qword_269D7CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CD00);
  }
  return result;
}

unint64_t sub_253CC3184()
{
  unint64_t result = qword_269D7CD08;
  if (!qword_269D7CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CD08);
  }
  return result;
}

unint64_t sub_253CC31D0()
{
  unint64_t result = qword_269D7CD10;
  if (!qword_269D7CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CD10);
  }
  return result;
}

unint64_t sub_253CC321C()
{
  unint64_t result = qword_269D7CD18;
  if (!qword_269D7CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CD18);
  }
  return result;
}

unint64_t sub_253CC3268()
{
  unint64_t result = qword_269D7CD80;
  if (!qword_269D7CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CD80);
  }
  return result;
}

unint64_t sub_253CC32B4()
{
  unint64_t result = qword_269D7CD88;
  if (!qword_269D7CD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CD88);
  }
  return result;
}

unint64_t sub_253CC3300()
{
  unint64_t result = qword_269D7CD90;
  if (!qword_269D7CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CD90);
  }
  return result;
}

unint64_t sub_253CC334C()
{
  unint64_t result = qword_269D7CD98;
  if (!qword_269D7CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CD98);
  }
  return result;
}

unint64_t sub_253CC3398()
{
  unint64_t result = qword_269D7CDA0;
  if (!qword_269D7CDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CDA0);
  }
  return result;
}

unint64_t sub_253CC33E4()
{
  unint64_t result = qword_269D7CDA8;
  if (!qword_269D7CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CDA8);
  }
  return result;
}

unint64_t sub_253CC3430()
{
  unint64_t result = qword_269D7CDB0;
  if (!qword_269D7CDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CDB0);
  }
  return result;
}

unint64_t sub_253CC347C()
{
  unint64_t result = qword_269D7CDB8;
  if (!qword_269D7CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CDB8);
  }
  return result;
}

unint64_t sub_253CC34C8()
{
  unint64_t result = qword_269D7CDC0;
  if (!qword_269D7CDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CDC0);
  }
  return result;
}

unint64_t sub_253CC3514()
{
  unint64_t result = qword_269D7CE00;
  if (!qword_269D7CE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CE00);
  }
  return result;
}

unint64_t sub_253CC3560()
{
  unint64_t result = qword_269D7CE08;
  if (!qword_269D7CE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CE08);
  }
  return result;
}

unint64_t sub_253CC35AC()
{
  unint64_t result = qword_269D7CE38;
  if (!qword_269D7CE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CE38);
  }
  return result;
}

unint64_t sub_253CC35F8()
{
  unint64_t result = qword_269D7CE40;
  if (!qword_269D7CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CE40);
  }
  return result;
}

unint64_t sub_253CC3644()
{
  unint64_t result = qword_269D7CE48;
  if (!qword_269D7CE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CE48);
  }
  return result;
}

unint64_t sub_253CC3690()
{
  unint64_t result = qword_269D7CE50;
  if (!qword_269D7CE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CE50);
  }
  return result;
}

unint64_t sub_253CC36DC()
{
  unint64_t result = qword_269D7CE58;
  if (!qword_269D7CE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CE58);
  }
  return result;
}

unint64_t sub_253CC3728()
{
  unint64_t result = qword_269D7CE90;
  if (!qword_269D7CE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CE90);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.CandidateSearchQuery(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7D258);
}

uint64_t sub_253CC3794(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.CandidateParameter(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255718);
}

unint64_t sub_253CC37FC()
{
  unint64_t result = qword_269D7CEC8;
  if (!qword_269D7CEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CEC8);
  }
  return result;
}

unint64_t sub_253CC3848()
{
  unint64_t result = qword_269D7CED0;
  if (!qword_269D7CED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CED0);
  }
  return result;
}

unint64_t sub_253CC3894()
{
  unint64_t result = qword_269D7CED8;
  if (!qword_269D7CED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CED8);
  }
  return result;
}

unint64_t sub_253CC38E0()
{
  unint64_t result = qword_269D7CEE8;
  if (!qword_269D7CEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CEE8);
  }
  return result;
}

uint64_t sub_253CC392C()
{
  uint64_t v1 = sub_253C8F1DC();
  v2(v1);
  sub_253BDF7F0();
  sub_253C10134();
  v3();
  return v0;
}

uint64_t type metadata accessor for FeedbackLearning.CandidateEvaluation(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7D268);
}

uint64_t sub_253CC39A0()
{
  uint64_t v1 = sub_253CD9958();
  v2(v1);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return v0;
}

unint64_t sub_253CC39F0()
{
  unint64_t result = qword_269D7CF30;
  if (!qword_269D7CF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CF30);
  }
  return result;
}

unint64_t sub_253CC3A3C()
{
  unint64_t result = qword_269D7CF50;
  if (!qword_269D7CF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CF50);
  }
  return result;
}

unint64_t sub_253CC3A88()
{
  unint64_t result = qword_269D7CF58;
  if (!qword_269D7CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CF58);
  }
  return result;
}

unint64_t sub_253CC3AD4()
{
  unint64_t result = qword_269D7CF80;
  if (!qword_269D7CF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CF80);
  }
  return result;
}

unint64_t sub_253CC3B20()
{
  unint64_t result = qword_269D7CF88;
  if (!qword_269D7CF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CF88);
  }
  return result;
}

uint64_t sub_253CC3B6C()
{
  uint64_t v1 = sub_253C8F1DC();
  v2(v1);
  sub_253BDF7F0();
  uint64_t v3 = sub_253C2F578();
  v4(v3);
  return v0;
}

uint64_t type metadata accessor for FeedbackLearning.TaskFailureReason(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255700);
}

unint64_t sub_253CC3BD8()
{
  unint64_t result = qword_269D7CFB8;
  if (!qword_269D7CFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CFB8);
  }
  return result;
}

unint64_t sub_253CC3C24()
{
  unint64_t result = qword_269D7CFC0;
  if (!qword_269D7CFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CFC0);
  }
  return result;
}

unint64_t sub_253CC3C70()
{
  unint64_t result = qword_269D7CFD0;
  if (!qword_269D7CFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CFD0);
  }
  return result;
}

unint64_t sub_253CC3CBC()
{
  unint64_t result = qword_269D7CFE0;
  if (!qword_269D7CFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7CFE0);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskStatus(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255638);
}

unint64_t sub_253CC3D28()
{
  unint64_t result = qword_269D7D050;
  if (!qword_269D7D050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D050);
  }
  return result;
}

unint64_t sub_253CC3D74()
{
  unint64_t result = qword_269D7D058;
  if (!qword_269D7D058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D058);
  }
  return result;
}

unint64_t sub_253CC3DC0()
{
  unint64_t result = qword_269D7D060;
  if (!qword_269D7D060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D060);
  }
  return result;
}

unint64_t sub_253CC3E0C()
{
  unint64_t result = qword_269D7D068;
  if (!qword_269D7D068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D068);
  }
  return result;
}

unint64_t sub_253CC3E58()
{
  unint64_t result = qword_269D7D078;
  if (!qword_269D7D078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D078);
  }
  return result;
}

unint64_t sub_253CC3EA4()
{
  unint64_t result = qword_269D7D080;
  if (!qword_269D7D080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D080);
  }
  return result;
}

unint64_t sub_253CC3EF0()
{
  unint64_t result = qword_269D7D0D8;
  if (!qword_269D7D0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D0D8);
  }
  return result;
}

unint64_t sub_253CC3F3C()
{
  unint64_t result = qword_269D7D0E0;
  if (!qword_269D7D0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D0E0);
  }
  return result;
}

unint64_t sub_253CC3F88()
{
  unint64_t result = qword_269D7D0E8;
  if (!qword_269D7D0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D0E8);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskOutcome(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255658);
}

unint64_t sub_253CC3FF4()
{
  unint64_t result = qword_269D7D110;
  if (!qword_269D7D110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D110);
  }
  return result;
}

unint64_t sub_253CC4040()
{
  unint64_t result = qword_269D7D120;
  if (!qword_269D7D120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D120);
  }
  return result;
}

unint64_t sub_253CC408C()
{
  unint64_t result = qword_269D7D138;
  if (!qword_269D7D138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D138);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskAction(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B251C50);
}

unint64_t sub_253CC40F8()
{
  unint64_t result = qword_269D7D148;
  if (!qword_269D7D148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D148);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255890);
}

unint64_t sub_253CC4164()
{
  unint64_t result = qword_269D7D198;
  if (!qword_269D7D198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D198);
  }
  return result;
}

unint64_t sub_253CC41B0()
{
  unint64_t result = qword_269D7D1A0;
  if (!qword_269D7D1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D1A0);
  }
  return result;
}

unint64_t sub_253CC41FC()
{
  unint64_t result = qword_269D7D1B0;
  if (!qword_269D7D1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D1B0);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskFinalResolutionState(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255880);
}

unint64_t sub_253CC4268()
{
  unint64_t result = qword_269D7D200;
  if (!qword_269D7D200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D200);
  }
  return result;
}

unint64_t sub_253CC42B4()
{
  unint64_t result = qword_269D7D208;
  if (!qword_269D7D208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D208);
  }
  return result;
}

unint64_t sub_253CC4300()
{
  unint64_t result = qword_269D7D210;
  if (!qword_269D7D210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D210);
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.TaskEvaluation(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2556B0);
}

unint64_t sub_253CC4370()
{
  unint64_t result = qword_269D7D240;
  if (!qword_269D7D240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D240);
  }
  return result;
}

unint64_t sub_253CC43C0()
{
  unint64_t result = qword_269D7D248;
  if (!qword_269D7D248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D248);
  }
  return result;
}

unint64_t sub_253CC4410()
{
  unint64_t result = qword_269D7D250;
  if (!qword_269D7D250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D250);
  }
  return result;
}

uint64_t sub_253CC445C()
{
  return sub_253CC3794(&qword_26B255710, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateParameter);
}

void type metadata accessor for FeedbackLearning.ConfirmationPromptResult()
{
}

void type metadata accessor for FeedbackLearning.DisambiguationPromptResult()
{
}

uint64_t _s16CandidateOutcomeOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    unsigned int v5 = -1;
    return v5 + 1;
  }
  if (a2 >= 0x3E)
  {
    if (a2 + 194 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 194) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    unsigned int v5 = (*a1 | (v4 << 8)) - 195;
    return v5 + 1;
  }
LABEL_17:
  unsigned int v5 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v5 >= 0x3D) {
    unsigned int v5 = -1;
  }
  return v5 + 1;
}

unsigned char *_s16CandidateOutcomeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 194 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 194) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3D)
  {
    unsigned int v6 = ((a2 - 62) >> 8) + 1;
    *unint64_t result = a2 - 62;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CC4638);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_253CC4660(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return (v1 & 3u) + 2;
  }
}

unsigned char *sub_253CC467C(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_253CC468C(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    char v2 = *result & 3 | ((_BYTE)a2 << 6);
  }
  else {
    char v2 = (a2 + 2) & 3 | 0x80;
  }
  *unint64_t result = v2;
  return result;
}

void type metadata accessor for FeedbackLearning.CandidateOutcome()
{
}

void type metadata accessor for FeedbackLearning.CandidateParameterResolution()
{
}

uint64_t _s20CandidateSearchQueryVwCP()
{
  return sub_253CD14D8();
}

uint64_t _s20CandidateSearchQueryVwxx()
{
  return sub_253CD1548();
}

uint64_t _s20CandidateSearchQueryVwcp()
{
  return sub_253CD15BC();
}

uint64_t _s20CandidateSearchQueryVwca()
{
  return sub_253CD1620();
}

uint64_t _s20CandidateSearchQueryVwtk()
{
  return sub_253CD1684();
}

uint64_t _s20CandidateSearchQueryVwta()
{
  return sub_253CD16EC();
}

uint64_t _s20CandidateSearchQueryVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CC4774);
}

uint64_t sub_253CC4774(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DF2F10();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v4);
}

uint64_t _s20CandidateSearchQueryVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CC47D0);
}

uint64_t sub_253CC47D0()
{
  sub_253DF2F10();
  uint64_t v0 = sub_253C4BC8C();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v1, v2, v3);
}

uint64_t sub_253CC4810()
{
  return sub_253CD1800();
}

uint64_t *_s18CandidateParameterOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = sub_253DEFFE0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s18CandidateParameterOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_253DEFFE0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *_s18CandidateParameterOwcp(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = sub_253DEFFE0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s18CandidateParameterOwca(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253CC39A0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = sub_253DEFFE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s18CandidateParameterOwtk(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_253DEFFE0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s18CandidateParameterOwta(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_253DEFFE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_253CC4D4C()
{
  uint64_t result = sub_253DEFFE0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *_s19CandidateEvaluationVwCP(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = sub_253DEFFE0();
  uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
  v8(a1, a2, v7);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)((char *)a1 + v9);
  uint64_t v11 = (void *)((char *)a2 + v9);
  uint64_t v12 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v15 = v11[1];
    void *v10 = *v11;
    v10[1] = v15;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_9;
    }
    v8(v10, v11, v7);
  }
  swift_storeEnumTagMultiPayload();
LABEL_9:
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_253DF26C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = sub_253BDEDD8(&qword_269D7CF20);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = sub_253DF2F10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v21, v22, v25);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v26 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v26) = *((unsigned char *)a2 + v26);
  return a1;
}

uint64_t _s19CandidateEvaluationVwxx(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253DEFFE0();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  type metadata accessor for FeedbackLearning.CandidateParameter(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
  }
  else if (!EnumCaseMultiPayload)
  {
    v5(v6, v4);
  }
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[7];
  uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, 1, v11);
  if (!result)
  {
    uint64_t v13 = sub_253DF2F10();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    return v14(v10, v13);
  }
  return result;
}

void *_s19CandidateEvaluationVwcp(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v13;
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  if (!EnumCaseMultiPayload)
  {
    v7(v9, v10, v6);
LABEL_5:
    swift_storeEnumTagMultiPayload();
    goto LABEL_7;
  }
  memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = (uint64_t)a1 + v14;
  uint64_t v16 = (uint64_t)a2 + v14;
  uint64_t v17 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_253BDEDD8(&qword_269D7CF20);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_253DF2F10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v19, v20, v23);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v24 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *((unsigned char *)a1 + v24) = *((unsigned char *)a2 + v24);
  return a1;
}

uint64_t _s19CandidateEvaluationVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_253CC39A0();
    uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      swift_bridgeObjectRetain();
      goto LABEL_6;
    }
    if (!EnumCaseMultiPayload)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      goto LABEL_8;
    }
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
LABEL_8:
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  int v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v20);
  int v22 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20);
  if (!v21)
  {
    if (!v22)
    {
      uint64_t v26 = sub_253DF2F10();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 24))(v18, v19, v26);
      goto LABEL_14;
    }
    sub_253CC39A0();
    goto LABEL_13;
  }
  if (v22)
  {
LABEL_13:
    uint64_t v24 = sub_253BDEDD8(&qword_269D7CF20);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v23 = sub_253DF2F10();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v19, v23);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
LABEL_14:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

char *_s19CandidateEvaluationVwtk(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_253DF26C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19))
  {
    uint64_t v20 = sub_253BDEDD8(&qword_269D7CF20);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v21 = sub_253DF2F10();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v17, v18, v21);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
  }
  uint64_t v22 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v22] = a2[v22];
  return a1;
}

uint64_t _s19CandidateEvaluationVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_253CC39A0();
    uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = type metadata accessor for FeedbackLearning.CandidateSearchQuery(0);
  int v20 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  int v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (!v20)
  {
    if (!v21)
    {
      uint64_t v26 = sub_253DF2F10();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 40))(v17, v18, v26);
      goto LABEL_11;
    }
    sub_253CC39A0();
    goto LABEL_10;
  }
  if (v21)
  {
LABEL_10:
    uint64_t v23 = sub_253BDEDD8(&qword_269D7CF20);
    memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_11;
  }
  uint64_t v22 = sub_253DF2F10();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v17, v18, v22);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
LABEL_11:
  uint64_t v24 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v24) = *(unsigned char *)(a2 + v24);
  return a1;
}

uint64_t _s19CandidateEvaluationVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CC5BDC);
}

uint64_t sub_253CC5BDC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_253C8F0EC();
  sub_253C16A18();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_253C8F5BC();
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_253C16A18();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      sub_253CD9BDC();
    }
    else
    {
      sub_253DF26C0();
      sub_253C16A18();
      if (*(_DWORD *)(v12 + 84) == v3)
      {
        uint64_t v8 = v11;
        uint64_t v10 = a3[6];
      }
      else
      {
        sub_253BDEDD8(&qword_269D7CF20);
        sub_253C16A18();
        if (*(_DWORD *)(v14 + 84) != v3) {
          return sub_253CD9CA0(a3[8]);
        }
        uint64_t v8 = v13;
        uint64_t v10 = a3[7];
      }
    }
    uint64_t v7 = v4 + v10;
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v7, v3, v8);
}

uint64_t _s19CandidateEvaluationVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CC5CCC);
}

void sub_253CC5CCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_253C8F0EC();
  sub_253C16A18();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_253C8F27C();
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_253C16A18();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      sub_253CD9AC0();
    }
    else
    {
      sub_253DF26C0();
      sub_253C16A18();
      if (*(_DWORD *)(v10 + 84) != a3)
      {
        sub_253BDEDD8(&qword_269D7CF20);
        sub_253C16A18();
        if (*(_DWORD *)(v11 + 84) != a3)
        {
          *(unsigned char *)(v5 + *(int *)(a4 + 32)) = v4 + 3;
          return;
        }
      }
    }
  }
  sub_253C8F1EC();

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v12, v13, v14, v15);
}

void sub_253CC5DB0()
{
  sub_253DEFFE0();
  if (v0 <= 0x3F)
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(319);
    if (v1 <= 0x3F)
    {
      sub_253DF26C0();
      if (v2 <= 0x3F)
      {
        sub_253CCADA8(319, &qword_269D7D278, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.CandidateSearchQuery);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t *_s17TaskFailureReasonOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_253DF2C40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = sub_253DF00F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s17TaskFailureReasonOwxx(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_253DF2C40();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = sub_253DF00F0();
  }
  char v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *_s17TaskFailureReasonOwcp(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_253DF2C40();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = sub_253DF00F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s17TaskFailureReasonOwca(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253CC39A0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_253DF2C40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = sub_253DF00F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *_s17TaskFailureReasonOwtk(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = sub_253DF2C40();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = sub_253DF00F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *_s17TaskFailureReasonOwta(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_253CC39A0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = sub_253DF2C40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = sub_253DF00F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CC6560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CC9488(a1, a2, a3, MEMORY[0x263F4C070], MEMORY[0x263F4D5F8]);
}

uint64_t *_s10TaskStatusOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = sub_253BDEDD8(&qword_269D7C770);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v7))
  {
    uint64_t v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v12 = sub_253DF2C40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_11;
      }
      uint64_t v11 = sub_253DF00F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v7);
    return a1;
  }
  memcpy(a1, a2, *(void *)(v6 + 64));
  return a1;
}

void *_s10TaskStatusOwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C770);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    uint64_t v7 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_253DF2C40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_9;
      }
      uint64_t v9 = sub_253DF00F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *_s10TaskStatusOwca(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C770);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v16 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_17;
        }
        uint64_t v11 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_253CC39A0();
      uint64_t v13 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 1)
      {
        uint64_t v17 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      }
      else
      {
        if (v14)
        {
          size_t v12 = *(void *)(*(void *)(v13 - 8) + 64);
          goto LABEL_9;
        }
        uint64_t v15 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C770);
  }
  size_t v12 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_9:
  memcpy(a1, a2, v12);
  return a1;
}

void *_s10TaskStatusOwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C770);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    uint64_t v7 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = sub_253DF2C40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_9;
      }
      uint64_t v9 = sub_253DF00F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *_s10TaskStatusOwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C770);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v16 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_17;
        }
        uint64_t v11 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
      return a1;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_253CC39A0();
      uint64_t v13 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 1)
      {
        uint64_t v17 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      }
      else
      {
        if (v14)
        {
          size_t v12 = *(void *)(*(void *)(v13 - 8) + 64);
          goto LABEL_9;
        }
        uint64_t v15 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      }
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C770);
  }
  size_t v12 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_9:
  memcpy(a1, a2, v12);
  return a1;
}

uint64_t _s10TaskStatusOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CC6F70);
}

uint64_t sub_253CC6F70()
{
  sub_253CD9CB4();
  uint64_t v0 = sub_253BDEDD8(&qword_269D7C770);
  return sub_253CD9BB0(v0);
}

uint64_t _s10TaskStatusOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CC6FB4);
}

uint64_t sub_253CC6FB4()
{
  sub_253CD9748();
  sub_253BDEDD8(&qword_269D7C770);
  uint64_t v0 = sub_253CD8E14();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v1, v2, v3);
}

uint64_t sub_253CC6FFC(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7C770);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 4, v2);
}

uint64_t sub_253CC7044(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_269D7C770);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 4, v4);
}

uint64_t sub_253CC7094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CD3D04(a1, a2, a3, type metadata accessor for FeedbackLearning.TaskFailureReason);
}

uint64_t _s16TaskPromptStatusOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x253CC715CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *_s16TaskPromptStatusOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x253CC7244);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_253CC726C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_253CC7280(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 2;
  }
  return result;
}

void type metadata accessor for FeedbackLearning.TaskPromptStatus()
{
}

uint64_t *_s11TaskOutcomeVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = sub_253BDEDD8(&qword_269D7C770);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v7))
    {
      uint64_t v8 = type metadata accessor for FeedbackLearning.TaskStatus(0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_12:
      *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
      return a1;
    }
    uint64_t v10 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = sub_253DF2C40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_11;
      }
      uint64_t v12 = sub_253DF00F0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    }
    swift_storeEnumTagMultiPayload();
LABEL_11:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v7);
    goto LABEL_12;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t _s10TaskStatusOwxx_0(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7C770);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 4, v2);
  if (!result)
  {
    type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      sub_253DF2C40();
    }
    else
    {
      if (result) {
        return result;
      }
      sub_253DF00F0();
    }
    sub_253BDF7F0();
    int v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
  return result;
}

void *_s11TaskOutcomeVwcp(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C770);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    uint64_t v8 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = sub_253DF2C40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        goto LABEL_9;
      }
      uint64_t v10 = sub_253DF00F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
    goto LABEL_10;
  }
  uint64_t v7 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_10:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *_s11TaskOutcomeVwca(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C770);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v16 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_17;
        }
        uint64_t v11 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
      goto LABEL_20;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_20;
      }
      sub_253CC39A0();
      uint64_t v13 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 1)
      {
        uint64_t v17 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      }
      else
      {
        if (v14)
        {
          size_t v12 = *(void *)(*(void *)(v13 - 8) + 64);
          goto LABEL_9;
        }
        uint64_t v15 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C770);
  }
  size_t v12 = *(void *)(*(void *)(type metadata accessor for FeedbackLearning.TaskStatus(0) - 8) + 64);
LABEL_9:
  memcpy(a1, a2, v12);
LABEL_20:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *_s11TaskOutcomeVwtk(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C770);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    uint64_t v8 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = sub_253DF2C40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        goto LABEL_9;
      }
      uint64_t v10 = sub_253DF00F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
    goto LABEL_10;
  }
  uint64_t v7 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_10:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *_s11TaskOutcomeVwta(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C770);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v16 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_17;
        }
        uint64_t v11 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
LABEL_17:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
      goto LABEL_20;
    }
  }
  else
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_20;
      }
      sub_253CC39A0();
      uint64_t v13 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 1)
      {
        uint64_t v17 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
      }
      else
      {
        if (v14)
        {
          size_t v12 = *(void *)(*(void *)(v13 - 8) + 64);
          goto LABEL_9;
        }
        uint64_t v15 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_20;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C770);
  }
  size_t v12 = *(void *)(*(void *)(type metadata accessor for FeedbackLearning.TaskStatus(0) - 8) + 64);
LABEL_9:
  memcpy(a1, a2, v12);
LABEL_20:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t _s11TaskOutcomeVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CC7DC0);
}

uint64_t sub_253CC7DC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CD3160(a1, a2, a3);
}

uint64_t _s11TaskOutcomeVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CC7DEC);
}

void sub_253CC7DEC()
{
}

uint64_t sub_253CC7E04()
{
  return sub_253CD075C();
}

void *_s10TaskActionVwCP(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFE90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v11 = sub_253DF2BE0();
    }
    else {
      uint64_t v11 = sub_253DF3C70();
    }
    (*(void (**)(char *, char *))(*(void *)(v11 - 8) + 16))(v9, v10);
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(int *)(a3 + 20);
    int v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_253DF46F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t _s10TaskActionVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v6 = sub_253DF2BE0();
  }
  else {
    uint64_t v6 = sub_253DF3C70();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 20);
  uint64_t v8 = sub_253DF46F0();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t _s10TaskActionVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v8 = sub_253DF2BE0();
  }
  else {
    uint64_t v8 = sub_253DF3C70();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1 + v7, a2 + v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_253DF46F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s10TaskActionVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    sub_253CC39A0();
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v11 = sub_253DF2BE0();
    }
    else {
      uint64_t v11 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF46F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s10TaskActionVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v8 = sub_253DF2BE0();
  }
  else {
    uint64_t v8 = sub_253DF3C70();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1 + v7, a2 + v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_253DF46F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s10TaskActionVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(v7 + 20);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    sub_253CC39A0();
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v11 = sub_253DF2BE0();
    }
    else {
      uint64_t v11 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF46F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t _s10TaskActionVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CC870C);
}

uint64_t sub_253CC870C()
{
  uint64_t v3 = sub_253CD9CC0();
  type metadata accessor for FeedbackLearning.FlowActionEvent(v3);
  sub_253C16A18();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = sub_253C8F5BC();
  }
  else
  {
    sub_253DF46F0();
    sub_253C16A18();
    if (*(_DWORD *)(v7 + 84) != v0)
    {
      unsigned int v10 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 24));
      if (v10 >= 2) {
        return sub_253CD9C08(v10);
      }
      else {
        return 0;
      }
    }
    sub_253CD9BDC();
    uint64_t v5 = v1 + v8;
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v5, v0, v6);
}

uint64_t _s10TaskActionVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CC87C4);
}

void sub_253CC87C4()
{
  uint64_t v4 = sub_253CD8F0C();
  type metadata accessor for FeedbackLearning.FlowActionEvent(v4);
  sub_253C16A18();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    sub_253C8F27C();
  }
  else
  {
    sub_253DF46F0();
    sub_253C16A18();
    if (*(_DWORD *)(v6 + 84) != v3)
    {
      *(unsigned char *)(v1 + *(int *)(v2 + 24)) = v0 + 1;
      return;
    }
    sub_253CD9AC0();
  }
  sub_253C8F1EC();

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v7, v8, v9, v10);
}

uint64_t sub_253CC8858()
{
  uint64_t result = type metadata accessor for FeedbackLearning.FlowActionEvent(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_253DF46F0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *_s24TaskFinalResolutionValueOwCP(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (void *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253DEFE90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v10 = sub_253DF2BE0();
      }
      else {
        uint64_t v10 = sub_253DF3C70();
      }
      (*(void (**)(char *, char *))(*(void *)(v10 - 8) + 16))(v8, v9);
      swift_storeEnumTagMultiPayload();
      uint64_t v13 = type metadata accessor for FeedbackLearning.TaskAction(0);
      uint64_t v14 = *(int *)(v13 + 20);
      uint64_t v15 = (char *)a1 + v14;
      uint64_t v16 = (char *)a2 + v14;
      uint64_t v17 = sub_253DF46F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      *((unsigned char *)a1 + *(int *)(v13 + 24)) = *((unsigned char *)a2 + *(int *)(v13 + 24));
    }
    else
    {
      uint64_t v12 = sub_253DEFFE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s24TaskFinalResolutionValueOwxx(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_253DEFE90();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
    uint64_t v3 = a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_253DF2BE0();
    }
    else {
      uint64_t v4 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    a1 += *(int *)(type metadata accessor for FeedbackLearning.TaskAction(0) + 20);
    uint64_t v5 = sub_253DF46F0();
  }
  else
  {
    uint64_t v5 = sub_253DEFFE0();
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(a1, v5);
}

uint64_t _s24TaskFinalResolutionValueOwcp(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_253DEFE90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v8 = sub_253DF2BE0();
    }
    else {
      uint64_t v8 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7);
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = type metadata accessor for FeedbackLearning.TaskAction(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = sub_253DF46F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *(unsigned char *)(a1 + *(int *)(v10 + 24)) = *(unsigned char *)(a2 + *(int *)(v10 + 24));
  }
  else
  {
    uint64_t v9 = sub_253DEFFE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s24TaskFinalResolutionValueOwca(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_253DEFE90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v8 = sub_253DF2BE0();
      }
      else {
        uint64_t v8 = sub_253DF3C70();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7);
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = type metadata accessor for FeedbackLearning.TaskAction(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = sub_253DF46F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *(unsigned char *)(a1 + *(int *)(v10 + 24)) = *(unsigned char *)(a2 + *(int *)(v10 + 24));
    }
    else
    {
      uint64_t v9 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s24TaskFinalResolutionValueOwtk(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_253DEFE90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = a2 + v5;
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v8 = sub_253DF2BE0();
    }
    else {
      uint64_t v8 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7);
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = type metadata accessor for FeedbackLearning.TaskAction(0);
    uint64_t v11 = *(int *)(v10 + 20);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = a2 + v11;
    uint64_t v14 = sub_253DF46F0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    *(unsigned char *)(a1 + *(int *)(v10 + 24)) = *(unsigned char *)(a2 + *(int *)(v10 + 24));
  }
  else
  {
    uint64_t v9 = sub_253DEFFE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s24TaskFinalResolutionValueOwta(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_253DEFE90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v8 = sub_253DF2BE0();
      }
      else {
        uint64_t v8 = sub_253DF3C70();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7);
      swift_storeEnumTagMultiPayload();
      uint64_t v10 = type metadata accessor for FeedbackLearning.TaskAction(0);
      uint64_t v11 = *(int *)(v10 + 20);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      uint64_t v14 = sub_253DF46F0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      *(unsigned char *)(a1 + *(int *)(v10 + 24)) = *(unsigned char *)(a2 + *(int *)(v10 + 24));
    }
    else
    {
      uint64_t v9 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CC945C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CC9488(a1, a2, a3, MEMORY[0x263F4BF98], type metadata accessor for FeedbackLearning.TaskAction);
}

uint64_t sub_253CC9488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = sub_253CD95CC();
  uint64_t result = v7(v6);
  if (v9 <= 0x3F)
  {
    uint64_t result = a5(319);
    if (v10 <= 0x3F)
    {
      sub_253CD9BF4();
      swift_initEnumMetadataMultiPayload();
      return sub_253CD930C();
    }
  }
  return result;
}

uint64_t *_s24TaskFinalResolutionStateOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_253BDEDD8(&qword_269D7C728);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253BDEDD8(&qword_269D7C730);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v11 = sub_253DEFE90();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          uint64_t v12 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
          uint64_t v13 = (char *)a1 + v12;
          uint64_t v14 = (char *)a2 + v12;
          type metadata accessor for FeedbackLearning.ActionValue(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v15 = sub_253DF2BE0();
          }
          else {
            uint64_t v15 = sub_253DF3C70();
          }
          (*(void (**)(char *, char *))(*(void *)(v15 - 8) + 16))(v13, v14);
          swift_storeEnumTagMultiPayload();
          uint64_t v17 = type metadata accessor for FeedbackLearning.TaskAction(0);
          uint64_t v18 = *(int *)(v17 + 20);
          uint64_t v19 = (char *)a1 + v18;
          int v20 = (char *)a2 + v18;
          uint64_t v21 = sub_253DF46F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
          *((unsigned char *)a1 + *(int *)(v17 + 24)) = *((unsigned char *)a2 + *(int *)(v17 + 24));
        }
        else
        {
          uint64_t v16 = sub_253DEFFE0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t _s24TaskFinalResolutionStateOwxx(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7C728);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v4);
    if (!result)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v5 = sub_253DEFE90();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        uint64_t v6 = a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v7 = sub_253DF2BE0();
        }
        else {
          uint64_t v7 = sub_253DF3C70();
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
        a1 += *(int *)(type metadata accessor for FeedbackLearning.TaskAction(0) + 20);
        uint64_t v8 = sub_253DF46F0();
      }
      else
      {
        uint64_t v8 = sub_253DEFFE0();
      }
      uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      return v9(a1, v8);
    }
  }
  return result;
}

char *_s24TaskFinalResolutionStateOwcp(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C728);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253BDEDD8(&qword_269D7C730);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        uint64_t v11 = &a1[v10];
        uint64_t v12 = &a2[v10];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v13 = sub_253DF2BE0();
        }
        else {
          uint64_t v13 = sub_253DF3C70();
        }
        (*(void (**)(char *, char *))(*(void *)(v13 - 8) + 16))(v11, v12);
        swift_storeEnumTagMultiPayload();
        uint64_t v15 = type metadata accessor for FeedbackLearning.TaskAction(0);
        uint64_t v16 = *(int *)(v15 + 20);
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        uint64_t v19 = sub_253DF46F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        a1[*(int *)(v15 + 24)] = a2[*(int *)(v15 + 24)];
      }
      else
      {
        uint64_t v14 = sub_253DEFFE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      }
      swift_storeEnumTagMultiPayload();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *_s24TaskFinalResolutionStateOwca(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C728);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253BDEDD8(&qword_269D7C730);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v19 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
          uint64_t v20 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
          uint64_t v21 = &a1[v20];
          uint64_t v22 = &a2[v20];
          type metadata accessor for FeedbackLearning.ActionValue(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v23 = sub_253DF2BE0();
          }
          else {
            uint64_t v23 = sub_253DF3C70();
          }
          (*(void (**)(char *, char *))(*(void *)(v23 - 8) + 16))(v21, v22);
          swift_storeEnumTagMultiPayload();
          uint64_t v25 = type metadata accessor for FeedbackLearning.TaskAction(0);
          uint64_t v26 = *(int *)(v25 + 20);
          uint64_t v27 = &a1[v26];
          uint64_t v28 = &a2[v26];
          uint64_t v29 = sub_253DF46F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
          a1[*(int *)(v25 + 24)] = a2[*(int *)(v25 + 24)];
        }
        else
        {
          uint64_t v24 = sub_253DEFFE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
LABEL_32:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C728);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  uint64_t v6 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v18 = sub_253DF2BE0();
        }
        else {
          uint64_t v18 = sub_253DF3C70();
        }
        (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 16))(v16, v17);
        swift_storeEnumTagMultiPayload();
        uint64_t v36 = type metadata accessor for FeedbackLearning.TaskAction(0);
        uint64_t v37 = *(int *)(v36 + 20);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = sub_253DF46F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
        a1[*(int *)(v36 + 24)] = a2[*(int *)(v36 + 24)];
      }
      else
      {
        uint64_t v35 = sub_253DEFFE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_32;
    }
    goto LABEL_19;
  }
  if (v13)
  {
    sub_253CC39A0();
LABEL_19:
    size_t v11 = *(void *)(*(void *)(sub_253BDEDD8(&qword_269D7C730) - 8) + 64);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
      uint64_t v31 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v34 = sub_253DF2BE0();
      }
      else {
        uint64_t v34 = sub_253DF3C70();
      }
      (*(void (**)(char *, char *))(*(void *)(v34 - 8) + 16))(v32, v33);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = type metadata accessor for FeedbackLearning.TaskAction(0);
      uint64_t v44 = *(int *)(v43 + 20);
      uint64_t v45 = &a1[v44];
      uint64_t v46 = &a2[v44];
      uint64_t v47 = sub_253DF46F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
      a1[*(int *)(v43 + 24)] = a2[*(int *)(v43 + 24)];
    }
    else
    {
      uint64_t v42 = sub_253DEFFE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *_s24TaskFinalResolutionStateOwtk(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C728);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253BDEDD8(&qword_269D7C730);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t v10 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        size_t v11 = &a1[v10];
        int v12 = &a2[v10];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v13 = sub_253DF2BE0();
        }
        else {
          uint64_t v13 = sub_253DF3C70();
        }
        (*(void (**)(char *, char *))(*(void *)(v13 - 8) + 32))(v11, v12);
        swift_storeEnumTagMultiPayload();
        uint64_t v15 = type metadata accessor for FeedbackLearning.TaskAction(0);
        uint64_t v16 = *(int *)(v15 + 20);
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        uint64_t v19 = sub_253DF46F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        a1[*(int *)(v15 + 24)] = a2[*(int *)(v15 + 24)];
      }
      else
      {
        uint64_t v14 = sub_253DEFFE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      }
      swift_storeEnumTagMultiPayload();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

char *_s24TaskFinalResolutionStateOwta(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7C728);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253BDEDD8(&qword_269D7C730);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v19 = sub_253DEFE90();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
          uint64_t v20 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
          uint64_t v21 = &a1[v20];
          uint64_t v22 = &a2[v20];
          type metadata accessor for FeedbackLearning.ActionValue(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v23 = sub_253DF2BE0();
          }
          else {
            uint64_t v23 = sub_253DF3C70();
          }
          (*(void (**)(char *, char *))(*(void *)(v23 - 8) + 32))(v21, v22);
          swift_storeEnumTagMultiPayload();
          uint64_t v25 = type metadata accessor for FeedbackLearning.TaskAction(0);
          uint64_t v26 = *(int *)(v25 + 20);
          uint64_t v27 = &a1[v26];
          uint64_t v28 = &a2[v26];
          uint64_t v29 = sub_253DF46F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
          a1[*(int *)(v25 + 24)] = a2[*(int *)(v25 + 24)];
        }
        else
        {
          uint64_t v24 = sub_253DEFFE0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(a1, a2, v24);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
LABEL_32:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_253BEFAC0((uint64_t)a1, &qword_269D7C728);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  uint64_t v6 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_253DEFE90();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        uint64_t v15 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        uint64_t v16 = &a1[v15];
        uint64_t v17 = &a2[v15];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v18 = sub_253DF2BE0();
        }
        else {
          uint64_t v18 = sub_253DF3C70();
        }
        (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 32))(v16, v17);
        swift_storeEnumTagMultiPayload();
        uint64_t v36 = type metadata accessor for FeedbackLearning.TaskAction(0);
        uint64_t v37 = *(int *)(v36 + 20);
        uint64_t v38 = &a1[v37];
        uint64_t v39 = &a2[v37];
        uint64_t v40 = sub_253DF46F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        a1[*(int *)(v36 + 24)] = a2[*(int *)(v36 + 24)];
      }
      else
      {
        uint64_t v35 = sub_253DEFFE0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_32;
    }
    goto LABEL_19;
  }
  if (v13)
  {
    sub_253CC39A0();
LABEL_19:
    size_t v11 = *(void *)(*(void *)(sub_253BDEDD8(&qword_269D7C730) - 8) + 64);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = sub_253DEFE90();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(a1, a2, v30);
      uint64_t v31 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v34 = sub_253DF2BE0();
      }
      else {
        uint64_t v34 = sub_253DF3C70();
      }
      (*(void (**)(char *, char *))(*(void *)(v34 - 8) + 32))(v32, v33);
      swift_storeEnumTagMultiPayload();
      uint64_t v43 = type metadata accessor for FeedbackLearning.TaskAction(0);
      uint64_t v44 = *(int *)(v43 + 20);
      uint64_t v45 = &a1[v44];
      uint64_t v46 = &a2[v44];
      uint64_t v47 = sub_253DF46F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v45, v46, v47);
      a1[*(int *)(v43 + 24)] = a2[*(int *)(v43 + 24)];
    }
    else
    {
      uint64_t v42 = sub_253DEFFE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(a1, a2, v42);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s24TaskFinalResolutionStateOwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CCAC64);
}

uint64_t sub_253CCAC64()
{
  sub_253CD9CB4();
  uint64_t v0 = sub_253BDEDD8(&qword_269D7C728);
  return sub_253CD9B84(v0);
}

uint64_t _s24TaskFinalResolutionStateOwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CCACA8);
}

uint64_t sub_253CCACA8()
{
  sub_253CD9C58();
  sub_253BDEDD8(&qword_269D7C728);
  uint64_t v0 = sub_253CD8E14();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v1, v2, v3);
}

uint64_t sub_253CCACF0(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7C728);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
}

uint64_t sub_253CCAD38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_269D7C728);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v4);
}

void sub_253CCAD88()
{
}

void sub_253CCADA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_253DF5810();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

char *_s14TaskEvaluationVwCP(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = sub_253DEFE90();
    int v8 = (void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    unint64_t v58 = *v8;
    (*v8)(a1, a2, v7);
    uint64_t v9 = v6[5];
    uint64_t v10 = &a1[v9];
    size_t v11 = &a2[v9];
    uint64_t v12 = sub_253DEFFE0();
    int v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    uint64_t v14 = v6[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_253DF2600();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v6[8];
    unint64_t v59 = v6;
    uint64_t v60 = a2;
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_253BDEDD8(&qword_269D7C728);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
      uint64_t v23 = v60;
    }
    else
    {
      uint64_t v25 = v7;
      uint64_t v57 = v21;
      uint64_t v26 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v20, 1, v26))
      {
        uint64_t v27 = sub_253BDEDD8(&qword_269D7C730);
        uint64_t v28 = (uint64_t)v19;
        memcpy(v19, v20, *(void *)(*(void *)(v27 - 8) + 64));
        uint64_t v29 = v57;
        uint64_t v6 = v59;
        uint64_t v23 = v60;
      }
      else
      {
        uint64_t v56 = v26;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v28 = (uint64_t)v19;
          v58(v19, v20, v25);
          uint64_t v30 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
          uint64_t v31 = &v19[v30];
          uint64_t v32 = &v20[v30];
          type metadata accessor for FeedbackLearning.ActionValue(0);
          uint64_t v29 = v57;
          uint64_t v33 = v20;
          uint64_t v6 = v59;
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v35 = sub_253DF2BE0();
          }
          else {
            uint64_t v35 = sub_253DF3C70();
          }
          (*(void (**)(char *, char *))(*(void *)(v35 - 8) + 16))(v31, v32);
          swift_storeEnumTagMultiPayload();
          uint64_t v36 = type metadata accessor for FeedbackLearning.TaskAction(0);
          uint64_t v37 = *(int *)(v36 + 20);
          uint64_t v38 = &v19[v37];
          uint64_t v39 = &v20[v37];
          uint64_t v40 = sub_253DF46F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
          v19[*(int *)(v36 + 24)] = v33[*(int *)(v36 + 24)];
          uint64_t v34 = v56;
          uint64_t v23 = v60;
        }
        else
        {
          v13(v19, v20, v12);
          uint64_t v28 = (uint64_t)v19;
          uint64_t v34 = v26;
          uint64_t v29 = v57;
          uint64_t v6 = v59;
          uint64_t v23 = v60;
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v28, 0, 1, v34);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v28, 0, 1, v29);
    }
    uint64_t v41 = v6[9];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = (char *)v23 + v41;
    uint64_t v44 = sub_253BDEDD8(&qword_269D7C770);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v43, 4, v44))
    {
      uint64_t v45 = type metadata accessor for FeedbackLearning.TaskStatus(0);
      memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
LABEL_24:
      uint64_t v50 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
      v42[*(int *)(v50 + 20)] = v43[*(int *)(v50 + 20)];
      uint64_t v51 = v6[10];
      uint64_t v52 = &a1[v51];
      uint64_t v53 = (char *)v23 + v51;
      *uint64_t v52 = *v53;
      v52[8] = v53[8];
      uint64_t v54 = *((void *)v53 + 3);
      *((void *)v52 + 2) = *((void *)v53 + 2);
      *((void *)v52 + 3) = v54;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
    uint64_t v46 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v49 = sub_253DF2C40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v42, v43, v49);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
        goto LABEL_23;
      }
      uint64_t v48 = sub_253DF00F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v42, v43, v48);
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v42, 0, 4, v44);
    goto LABEL_24;
  }
  uint64_t v24 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  a1 = (char *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t _s14TaskEvaluationVwxx(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253DEFE90();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_253DEFFE0();
  int v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_253BDEDD8(&qword_269D7C728);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v11, 1, v12))
  {
    uint64_t v13 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v11, 1, v13))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v5(v11, v4);
        uint64_t v14 = v11 + *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v15 = sub_253DF2BE0();
        }
        else {
          uint64_t v15 = sub_253DF3C70();
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
        uint64_t v16 = v11 + *(int *)(type metadata accessor for FeedbackLearning.TaskAction(0) + 20);
        uint64_t v17 = sub_253DF46F0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
      }
      else
      {
        v8(v11, v7);
      }
    }
  }
  uint64_t v18 = a1 + a2[9];
  uint64_t v19 = sub_253BDEDD8(&qword_269D7C770);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v18, 4, v19))
  {
    type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = sub_253DF2C40();
    }
    else
    {
      if (EnumCaseMultiPayload) {
        goto LABEL_15;
      }
      uint64_t v21 = sub_253DF00F0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v18, v21);
  }
LABEL_15:
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s14TaskEvaluationVwcp(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v56 = *v7;
  (*v7)(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DEFFE0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[8];
  unint64_t v59 = a3;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v58 = a1;
  uint64_t v18 = (char *)(a1 + v17);
  uint64_t v19 = (char *)(a2 + v17);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_253BDEDD8(&qword_269D7C728);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    uint64_t v22 = a2;
    uint64_t v23 = v59;
    uint64_t v24 = a1;
  }
  else
  {
    uint64_t v25 = v6;
    uint64_t v26 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v26))
    {
      uint64_t v27 = sub_253BDEDD8(&qword_269D7C730);
      uint64_t v28 = (uint64_t)v18;
      memcpy(v18, v19, *(void *)(*(void *)(v27 - 8) + 64));
      uint64_t v22 = a2;
      uint64_t v23 = v59;
      uint64_t v29 = v20;
      uint64_t v24 = v58;
    }
    else
    {
      uint64_t v55 = v26;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v56((uint64_t)v18, (uint64_t)v19, v25);
        uint64_t v28 = (uint64_t)v18;
        uint64_t v30 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        uint64_t v31 = &v18[v30];
        uint64_t v32 = &v19[v30];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        uint64_t v57 = v32;
        uint64_t v22 = a2;
        uint64_t v23 = v59;
        uint64_t v29 = v20;
        uint64_t v33 = v55;
        uint64_t v24 = v58;
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v34 = sub_253DF2BE0();
        }
        else {
          uint64_t v34 = sub_253DF3C70();
        }
        (*(void (**)(char *, char *))(*(void *)(v34 - 8) + 16))(v31, v57);
        swift_storeEnumTagMultiPayload();
        uint64_t v35 = type metadata accessor for FeedbackLearning.TaskAction(0);
        uint64_t v36 = *(int *)(v35 + 20);
        uint64_t v37 = v28 + v36;
        uint64_t v38 = &v19[v36];
        uint64_t v39 = sub_253DF46F0();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        *(unsigned char *)(v28 + *(int *)(v35 + 24)) = v19[*(int *)(v35 + 24)];
      }
      else
      {
        uint64_t v28 = (uint64_t)v18;
        v12((uint64_t)v18, (uint64_t)v19, v11);
        uint64_t v22 = a2;
        uint64_t v23 = v59;
        uint64_t v29 = v20;
        uint64_t v33 = v55;
        uint64_t v24 = v58;
      }
      swift_storeEnumTagMultiPayload();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v28, 0, 1, v33);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v28, 0, 1, v29);
  }
  uint64_t v40 = v23[9];
  uint64_t v41 = (void *)(v24 + v40);
  uint64_t v42 = (const void *)(v22 + v40);
  uint64_t v43 = sub_253BDEDD8(&qword_269D7C770);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v42, 4, v43))
  {
    uint64_t v45 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v48 = sub_253DF2C40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v48 - 8) + 16))(v41, v42, v48);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
        goto LABEL_21;
      }
      uint64_t v47 = sub_253DF00F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v47 - 8) + 16))(v41, v42, v47);
    }
    swift_storeEnumTagMultiPayload();
LABEL_21:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v41, 0, 4, v43);
    goto LABEL_22;
  }
  uint64_t v44 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
LABEL_22:
  uint64_t v49 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *((unsigned char *)v41 + *(int *)(v49 + 20)) = *((unsigned char *)v42 + *(int *)(v49 + 20));
  uint64_t v50 = v23[10];
  uint64_t v51 = v24 + v50;
  uint64_t v52 = v22 + v50;
  *(unsigned char *)uint64_t v51 = *(unsigned char *)v52;
  *(unsigned char *)(v51 + 8) = *(unsigned char *)(v52 + 8);
  uint64_t v53 = *(void *)(v52 + 24);
  *(void *)(v51 + 16) = *(void *)(v52 + 16);
  *(void *)(v51 + 24) = v53;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v24;
}

uint64_t _s14TaskEvaluationVwca(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v74 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFFE0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = sub_253BDEDD8(&qword_269D7C728);
  int v20 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  int v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      uint64_t v22 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v22))
      {
        uint64_t v23 = sub_253BDEDD8(&qword_269D7C730);
        memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v17, v18, v6);
          uint64_t v31 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
          uint64_t v32 = &v17[v31];
          uint64_t v33 = &v18[v31];
          type metadata accessor for FeedbackLearning.ActionValue(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v34 = sub_253DF2BE0();
          }
          else {
            uint64_t v34 = sub_253DF3C70();
          }
          (*(void (**)(char *, char *))(*(void *)(v34 - 8) + 16))(v32, v33);
          swift_storeEnumTagMultiPayload();
          uint64_t v35 = type metadata accessor for FeedbackLearning.TaskAction(0);
          uint64_t v36 = *(int *)(v35 + 20);
          uint64_t v37 = &v17[v36];
          uint64_t v38 = &v18[v36];
          uint64_t v39 = sub_253DF46F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
          v17[*(int *)(v35 + 24)] = v18[*(int *)(v35 + 24)];
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v22);
      }
LABEL_32:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_33;
    }
    goto LABEL_7;
  }
  if (v21)
  {
    sub_253BEFAC0((uint64_t)v17, &qword_269D7C728);
LABEL_7:
    uint64_t v24 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
LABEL_8:
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_33;
  }
  uint64_t v19 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
  int v25 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  int v26 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (v25)
  {
    if (!v26)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v17, v18, v6);
        uint64_t v27 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        uint64_t v28 = &v17[v27];
        uint64_t v29 = &v18[v27];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v30 = sub_253DF2BE0();
        }
        else {
          uint64_t v30 = sub_253DF3C70();
        }
        (*(void (**)(char *, char *))(*(void *)(v30 - 8) + 16))(v28, v29);
        swift_storeEnumTagMultiPayload();
        uint64_t v44 = type metadata accessor for FeedbackLearning.TaskAction(0);
        uint64_t v45 = *(int *)(v44 + 20);
        uint64_t v46 = &v17[v45];
        uint64_t v47 = &v18[v45];
        uint64_t v48 = sub_253DF46F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
        v17[*(int *)(v44 + 24)] = v18[*(int *)(v44 + 24)];
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_32;
    }
    goto LABEL_19;
  }
  if (v26)
  {
    sub_253CC39A0();
LABEL_19:
    uint64_t v24 = sub_253BDEDD8(&qword_269D7C730);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v17, v18, v6);
      uint64_t v40 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      uint64_t v41 = &v17[v40];
      uint64_t v42 = &v18[v40];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v43 = sub_253DF2BE0();
      }
      else {
        uint64_t v43 = sub_253DF3C70();
      }
      (*(void (**)(char *, char *))(*(void *)(v43 - 8) + 16))(v41, v42);
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = type metadata accessor for FeedbackLearning.TaskAction(0);
      uint64_t v70 = *(int *)(v69 + 20);
      uint64_t v71 = &v17[v70];
      uint64_t v72 = &v18[v70];
      uint64_t v73 = sub_253DF46F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
      v17[*(int *)(v69 + 24)] = v18[*(int *)(v69 + 24)];
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v17, v18, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_33:
  uint64_t v49 = a3[9];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (const void *)(a2 + v49);
  uint64_t v52 = sub_253BDEDD8(&qword_269D7C770);
  int v53 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v50, 4, v52);
  int v54 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v51, 4, v52);
  if (v53)
  {
    if (!v54)
    {
      uint64_t v55 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v62 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 16))(v50, v51, v62);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
          goto LABEL_49;
        }
        uint64_t v57 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v57 - 8) + 16))(v50, v51, v57);
      }
      swift_storeEnumTagMultiPayload();
LABEL_49:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v50, 0, 4, v52);
      goto LABEL_50;
    }
  }
  else
  {
    if (!v54)
    {
      if (a1 == a2) {
        goto LABEL_50;
      }
      sub_253CC39A0();
      uint64_t v59 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int v60 = swift_getEnumCaseMultiPayload();
      if (v60 == 1)
      {
        uint64_t v68 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v68 - 8) + 16))(v50, v51, v68);
      }
      else
      {
        if (v60)
        {
          size_t v58 = *(void *)(*(void *)(v59 - 8) + 64);
          goto LABEL_41;
        }
        uint64_t v61 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v61 - 8) + 16))(v50, v51, v61);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    }
    sub_253BEFAC0((uint64_t)v50, &qword_269D7C770);
  }
  size_t v58 = *(void *)(*(void *)(type metadata accessor for FeedbackLearning.TaskStatus(0) - 8) + 64);
LABEL_41:
  memcpy(v50, v51, v58);
LABEL_50:
  uint64_t v63 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *((unsigned char *)v50 + *(int *)(v63 + 20)) = *((unsigned char *)v51 + *(int *)(v63 + 20));
  uint64_t v64 = a3[10];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  *(unsigned char *)uint64_t v65 = *(unsigned char *)(a2 + v64);
  *(unsigned char *)(v65 + 8) = *(unsigned char *)(a2 + v64 + 8);
  *(void *)(v65 + 16) = *(void *)(a2 + v64 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v65 + 24) = *(void *)(v66 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14TaskEvaluationVwtk(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  uint64_t v56 = *v7;
  (*v7)(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DEFFE0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v59 = a3;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v58 = a1;
  uint64_t v18 = (char *)(a1 + v17);
  uint64_t v19 = (char *)(a2 + v17);
  uint64_t v20 = sub_253BDEDD8(&qword_269D7C728);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    uint64_t v22 = a2;
    uint64_t v23 = v59;
    uint64_t v24 = a1;
  }
  else
  {
    uint64_t v25 = v6;
    uint64_t v26 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v26))
    {
      uint64_t v27 = sub_253BDEDD8(&qword_269D7C730);
      uint64_t v28 = (uint64_t)v18;
      memcpy(v18, v19, *(void *)(*(void *)(v27 - 8) + 64));
      uint64_t v22 = a2;
      uint64_t v23 = v59;
      uint64_t v29 = v20;
      uint64_t v24 = v58;
    }
    else
    {
      uint64_t v55 = v26;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v56((uint64_t)v18, (uint64_t)v19, v25);
        uint64_t v28 = (uint64_t)v18;
        uint64_t v30 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        uint64_t v31 = &v18[v30];
        uint64_t v32 = &v19[v30];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        uint64_t v57 = v32;
        uint64_t v22 = a2;
        uint64_t v23 = v59;
        uint64_t v29 = v20;
        uint64_t v33 = v55;
        uint64_t v24 = v58;
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v34 = sub_253DF2BE0();
        }
        else {
          uint64_t v34 = sub_253DF3C70();
        }
        (*(void (**)(char *, char *))(*(void *)(v34 - 8) + 32))(v31, v57);
        swift_storeEnumTagMultiPayload();
        uint64_t v35 = type metadata accessor for FeedbackLearning.TaskAction(0);
        uint64_t v36 = *(int *)(v35 + 20);
        uint64_t v37 = v28 + v36;
        uint64_t v38 = &v19[v36];
        uint64_t v39 = sub_253DF46F0();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
        *(unsigned char *)(v28 + *(int *)(v35 + 24)) = v19[*(int *)(v35 + 24)];
      }
      else
      {
        uint64_t v28 = (uint64_t)v18;
        v12((uint64_t)v18, (uint64_t)v19, v11);
        uint64_t v22 = a2;
        uint64_t v23 = v59;
        uint64_t v29 = v20;
        uint64_t v33 = v55;
        uint64_t v24 = v58;
      }
      swift_storeEnumTagMultiPayload();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v28, 0, 1, v33);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v28, 0, 1, v29);
  }
  uint64_t v40 = v23[9];
  uint64_t v41 = (void *)(v24 + v40);
  uint64_t v42 = (const void *)(v22 + v40);
  uint64_t v43 = sub_253BDEDD8(&qword_269D7C770);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v42, 4, v43))
  {
    uint64_t v45 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v48 = sub_253DF2C40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v48 - 8) + 32))(v41, v42, v48);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
        goto LABEL_21;
      }
      uint64_t v47 = sub_253DF00F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v47 - 8) + 32))(v41, v42, v47);
    }
    swift_storeEnumTagMultiPayload();
LABEL_21:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v41, 0, 4, v43);
    goto LABEL_22;
  }
  uint64_t v44 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
LABEL_22:
  uint64_t v49 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *((unsigned char *)v41 + *(int *)(v49 + 20)) = *((unsigned char *)v42 + *(int *)(v49 + 20));
  uint64_t v50 = v23[10];
  uint64_t v51 = (_OWORD *)(v24 + v50);
  uint64_t v52 = (_OWORD *)(v22 + v50);
  long long v53 = v52[1];
  _OWORD *v51 = *v52;
  v51[1] = v53;
  return v24;
}

uint64_t _s14TaskEvaluationVwta(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v74 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFFE0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = sub_253BDEDD8(&qword_269D7C728);
  int v20 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  int v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      uint64_t v22 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v22))
      {
        uint64_t v23 = sub_253BDEDD8(&qword_269D7C730);
        memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v17, v18, v6);
          uint64_t v31 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
          uint64_t v32 = &v17[v31];
          uint64_t v33 = &v18[v31];
          type metadata accessor for FeedbackLearning.ActionValue(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v34 = sub_253DF2BE0();
          }
          else {
            uint64_t v34 = sub_253DF3C70();
          }
          (*(void (**)(char *, char *))(*(void *)(v34 - 8) + 32))(v32, v33);
          swift_storeEnumTagMultiPayload();
          uint64_t v35 = type metadata accessor for FeedbackLearning.TaskAction(0);
          uint64_t v36 = *(int *)(v35 + 20);
          uint64_t v37 = &v17[v36];
          uint64_t v38 = &v18[v36];
          uint64_t v39 = sub_253DF46F0();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
          v17[*(int *)(v35 + 24)] = v18[*(int *)(v35 + 24)];
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v22);
      }
LABEL_32:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_33;
    }
    goto LABEL_7;
  }
  if (v21)
  {
    sub_253BEFAC0((uint64_t)v17, &qword_269D7C728);
LABEL_7:
    uint64_t v24 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
LABEL_8:
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_33;
  }
  uint64_t v19 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
  int v25 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  int v26 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (v25)
  {
    if (!v26)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v17, v18, v6);
        uint64_t v27 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
        uint64_t v28 = &v17[v27];
        uint64_t v29 = &v18[v27];
        type metadata accessor for FeedbackLearning.ActionValue(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v30 = sub_253DF2BE0();
        }
        else {
          uint64_t v30 = sub_253DF3C70();
        }
        (*(void (**)(char *, char *))(*(void *)(v30 - 8) + 32))(v28, v29);
        swift_storeEnumTagMultiPayload();
        uint64_t v44 = type metadata accessor for FeedbackLearning.TaskAction(0);
        uint64_t v45 = *(int *)(v44 + 20);
        uint64_t v46 = &v17[v45];
        uint64_t v47 = &v18[v45];
        uint64_t v48 = sub_253DF46F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
        v17[*(int *)(v44 + 24)] = v18[*(int *)(v44 + 24)];
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_32;
    }
    goto LABEL_19;
  }
  if (v26)
  {
    sub_253CC39A0();
LABEL_19:
    uint64_t v24 = sub_253BDEDD8(&qword_269D7C730);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v17, v18, v6);
      uint64_t v40 = *(int *)(type metadata accessor for FeedbackLearning.FlowActionEvent(0) + 20);
      uint64_t v41 = &v17[v40];
      uint64_t v42 = &v18[v40];
      type metadata accessor for FeedbackLearning.ActionValue(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v43 = sub_253DF2BE0();
      }
      else {
        uint64_t v43 = sub_253DF3C70();
      }
      (*(void (**)(char *, char *))(*(void *)(v43 - 8) + 32))(v41, v42);
      swift_storeEnumTagMultiPayload();
      uint64_t v69 = type metadata accessor for FeedbackLearning.TaskAction(0);
      uint64_t v70 = *(int *)(v69 + 20);
      uint64_t v71 = &v17[v70];
      uint64_t v72 = &v18[v70];
      uint64_t v73 = sub_253DF46F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
      v17[*(int *)(v69 + 24)] = v18[*(int *)(v69 + 24)];
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v18, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_33:
  uint64_t v49 = a3[9];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (const void *)(a2 + v49);
  uint64_t v52 = sub_253BDEDD8(&qword_269D7C770);
  int v53 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v50, 4, v52);
  int v54 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v51, 4, v52);
  if (v53)
  {
    if (!v54)
    {
      uint64_t v55 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v62 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(v50, v51, v62);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
          goto LABEL_49;
        }
        uint64_t v57 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v57 - 8) + 32))(v50, v51, v57);
      }
      swift_storeEnumTagMultiPayload();
LABEL_49:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v50, 0, 4, v52);
      goto LABEL_50;
    }
  }
  else
  {
    if (!v54)
    {
      if (a1 == a2) {
        goto LABEL_50;
      }
      sub_253CC39A0();
      uint64_t v59 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
      int v60 = swift_getEnumCaseMultiPayload();
      if (v60 == 1)
      {
        uint64_t v68 = sub_253DF2C40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v68 - 8) + 32))(v50, v51, v68);
      }
      else
      {
        if (v60)
        {
          size_t v58 = *(void *)(*(void *)(v59 - 8) + 64);
          goto LABEL_41;
        }
        uint64_t v61 = sub_253DF00F0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v61 - 8) + 32))(v50, v51, v61);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_50;
    }
    sub_253BEFAC0((uint64_t)v50, &qword_269D7C770);
  }
  size_t v58 = *(void *)(*(void *)(type metadata accessor for FeedbackLearning.TaskStatus(0) - 8) + 64);
LABEL_41:
  memcpy(v50, v51, v58);
LABEL_50:
  uint64_t v63 = type metadata accessor for FeedbackLearning.TaskOutcome(0);
  *((unsigned char *)v50 + *(int *)(v63 + 20)) = *((unsigned char *)v51 + *(int *)(v63 + 20));
  uint64_t v64 = a3[10];
  uint64_t v65 = a1 + v64;
  uint64_t v66 = a2 + v64;
  *(unsigned char *)uint64_t v65 = *(unsigned char *)v66;
  *(unsigned char *)(v65 + 8) = *(unsigned char *)(v66 + 8);
  *(void *)(v65 + 16) = *(void *)(v66 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v65 + 24) = *(void *)(v66 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14TaskEvaluationVwet(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CCD538);
}

uint64_t sub_253CCD538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CD64E0(a1, a2, a3, MEMORY[0x263F4D0C8], (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionState, type metadata accessor for FeedbackLearning.TaskOutcome);
}

uint64_t _s14TaskEvaluationVwst(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CCD58C);
}

void sub_253CCD58C()
{
}

uint64_t sub_253CCD5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CD67D0(a1, a2, a3, MEMORY[0x263F4D0C8], type metadata accessor for FeedbackLearning.TaskFinalResolutionState, type metadata accessor for FeedbackLearning.TaskOutcome);
}

ValueMetadata *_s24TaskFinalResolutionStateO10CodingKeysOMa()
{
  return &_s24TaskFinalResolutionStateO10CodingKeysON;
}

ValueMetadata *_s24TaskFinalResolutionStateO18CompleteCodingKeysOMa()
{
  return &_s24TaskFinalResolutionStateO18CompleteCodingKeysON;
}

ValueMetadata *_s24TaskFinalResolutionStateO20IncompleteCodingKeysOMa()
{
  return &_s24TaskFinalResolutionStateO20IncompleteCodingKeysON;
}

ValueMetadata *_s24TaskFinalResolutionValueO10CodingKeysOMa()
{
  return &_s24TaskFinalResolutionValueO10CodingKeysON;
}

ValueMetadata *_s24TaskFinalResolutionValueO15ValueCodingKeysOMa()
{
  return &_s24TaskFinalResolutionValueO15ValueCodingKeysON;
}

ValueMetadata *_s24TaskFinalResolutionValueO16ActionCodingKeysOMa()
{
  return &_s24TaskFinalResolutionValueO16ActionCodingKeysON;
}

ValueMetadata *_s10TaskActionV10CodingKeysOMa()
{
  return &_s10TaskActionV10CodingKeysON;
}

ValueMetadata *_s11TaskOutcomeV10CodingKeysOMa()
{
  return &_s11TaskOutcomeV10CodingKeysON;
}

ValueMetadata *_s16TaskPromptStatusO10CodingKeysOMa()
{
  return &_s16TaskPromptStatusO10CodingKeysON;
}

ValueMetadata *_s16TaskPromptStatusO14NoneCodingKeysOMa()
{
  return &_s16TaskPromptStatusO14NoneCodingKeysON;
}

ValueMetadata *_s16TaskPromptStatusO17ConfirmCodingKeysOMa()
{
  return &_s16TaskPromptStatusO17ConfirmCodingKeysON;
}

ValueMetadata *_s10TaskStatusO10CodingKeysOMa()
{
  return &_s10TaskStatusO10CodingKeysON;
}

ValueMetadata *_s10TaskStatusO17UnknownCodingKeysOMa()
{
  return &_s10TaskStatusO17UnknownCodingKeysON;
}

ValueMetadata *_s10TaskStatusO25InferredSuccessCodingKeysOMa()
{
  return &_s10TaskStatusO25InferredSuccessCodingKeysON;
}

ValueMetadata *_s10TaskStatusO25InferredFailureCodingKeysOMa()
{
  return &_s10TaskStatusO25InferredFailureCodingKeysON;
}

ValueMetadata *_s10TaskStatusO17AbandonCodingKeysOMa()
{
  return &_s10TaskStatusO17AbandonCodingKeysON;
}

ValueMetadata *_s10TaskStatusO16CancelCodingKeysOMa()
{
  return &_s10TaskStatusO16CancelCodingKeysON;
}

ValueMetadata *_s17TaskFailureReasonO10CodingKeysOMa()
{
  return &_s17TaskFailureReasonO10CodingKeysON;
}

ValueMetadata *_s17TaskFailureReasonO17UnknownCodingKeysOMa()
{
  return &_s17TaskFailureReasonO17UnknownCodingKeysON;
}

ValueMetadata *_s17TaskFailureReasonO26ExecutionFailureCodingKeysOMa()
{
  return &_s17TaskFailureReasonO26ExecutionFailureCodingKeysON;
}

ValueMetadata *_s17TaskFailureReasonO25CriticalFailureCodingKeysOMa()
{
  return &_s17TaskFailureReasonO25CriticalFailureCodingKeysON;
}

ValueMetadata *_s19CandidateEvaluationV10CodingKeysOMa()
{
  return &_s19CandidateEvaluationV10CodingKeysON;
}

ValueMetadata *_s18CandidateParameterO10CodingKeysOMa()
{
  return &_s18CandidateParameterO10CodingKeysON;
}

ValueMetadata *_s18CandidateParameterO14ToolCodingKeysOMa()
{
  return &_s18CandidateParameterO14ToolCodingKeysON;
}

ValueMetadata *_s18CandidateParameterO15ValueCodingKeysOMa()
{
  return &_s18CandidateParameterO15ValueCodingKeysON;
}

ValueMetadata *_s18CandidateParameterO19ParameterCodingKeysOMa()
{
  return &_s18CandidateParameterO19ParameterCodingKeysON;
}

ValueMetadata *_s20CandidateSearchQueryV10CodingKeysOMa()
{
  return &_s20CandidateSearchQueryV10CodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO10CodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO10CodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO20UnresolvedCodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO20UnresolvedCodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO29ResolvedNotSelectedCodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO29ResolvedNotSelectedCodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO26ResolvedSelectedCodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO26ResolvedSelectedCodingKeysON;
}

ValueMetadata *_s28CandidateParameterResolutionO18ExecutedCodingKeysOMa()
{
  return &_s28CandidateParameterResolutionO18ExecutedCodingKeysON;
}

uint64_t _s19CandidateEvaluationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_253CD9350(-1);
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 6);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_253CD9350((*a1 | (v4 << 8)) - 6);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 6);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return sub_253CD9350(v8);
}

unsigned char *_s19CandidateEvaluationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_253CD9330((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_253CD9318((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CCD96CLL);
      case 4:
        uint64_t result = (unsigned char *)sub_253CD9320((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_253CD9328(result, a2 + 5);
        break;
    }
  }
  return result;
}

ValueMetadata *_s16CandidateOutcomeO10CodingKeysOMa()
{
  return &_s16CandidateOutcomeO10CodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO22ConfirmationCodingKeysOMa()
{
  return &_s16CandidateOutcomeO22ConfirmationCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO24DisambiguationCodingKeysOMa()
{
  return &_s16CandidateOutcomeO24DisambiguationCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO25InferredSuccessCodingKeysOMa()
{
  return &_s16CandidateOutcomeO25InferredSuccessCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO25InferredFailureCodingKeysOMa()
{
  return &_s16CandidateOutcomeO25InferredFailureCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO26InferredFromTaskCodingKeysOMa()
{
  return &_s16CandidateOutcomeO26InferredFromTaskCodingKeysON;
}

ValueMetadata *_s16CandidateOutcomeO17UnknownCodingKeysOMa()
{
  return &_s16CandidateOutcomeO17UnknownCodingKeysON;
}

uint64_t _s26DisambiguationPromptResultOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_253CD9350(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_253CD9350((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return sub_253CD9350(v8);
}

unsigned char *_s26DisambiguationPromptResultOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        uint64_t result = (unsigned char *)sub_253CD9330((uint64_t)result, v6);
        break;
      case 2:
        uint64_t result = (unsigned char *)sub_253CD9318((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CCDB44);
      case 4:
        uint64_t result = (unsigned char *)sub_253CD9320((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          uint64_t result = sub_253CD9328(result, a2 + 3);
        break;
    }
  }
  return result;
}

ValueMetadata *_s26DisambiguationPromptResultO10CodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO10CodingKeysON;
}

ValueMetadata *_s26DisambiguationPromptResultO27CandidateSelectedCodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO27CandidateSelectedCodingKeysON;
}

ValueMetadata *_s26DisambiguationPromptResultO30OtherCandidateChosenCodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO30OtherCandidateChosenCodingKeysON;
}

ValueMetadata *_s26DisambiguationPromptResultO19AbandonedCodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO19AbandonedCodingKeysON;
}

ValueMetadata *_s26DisambiguationPromptResultO18RejectedCodingKeysOMa()
{
  return &_s26DisambiguationPromptResultO18RejectedCodingKeysON;
}

ValueMetadata *_s24ConfirmationPromptResultO10CodingKeysOMa()
{
  return &_s24ConfirmationPromptResultO10CodingKeysON;
}

ValueMetadata *_s24ConfirmationPromptResultO19ConfirmedCodingKeysOMa()
{
  return &_s24ConfirmationPromptResultO19ConfirmedCodingKeysON;
}

ValueMetadata *_s24ConfirmationPromptResultO18RejectedCodingKeysOMa()
{
  return &_s24ConfirmationPromptResultO18RejectedCodingKeysON;
}

ValueMetadata *_s24ConfirmationPromptResultO19AbandonedCodingKeysOMa()
{
  return &_s24ConfirmationPromptResultO19AbandonedCodingKeysON;
}

unint64_t sub_253CCDC00()
{
  unint64_t result = qword_269D7D280;
  if (!qword_269D7D280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D280);
  }
  return result;
}

unint64_t sub_253CCDC50()
{
  unint64_t result = qword_269D7D288;
  if (!qword_269D7D288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D288);
  }
  return result;
}

unint64_t sub_253CCDCA0()
{
  unint64_t result = qword_269D7D290;
  if (!qword_269D7D290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D290);
  }
  return result;
}

unint64_t sub_253CCDCF0()
{
  unint64_t result = qword_269D7D298;
  if (!qword_269D7D298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D298);
  }
  return result;
}

unint64_t sub_253CCDD40()
{
  unint64_t result = qword_269D7D2A0;
  if (!qword_269D7D2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2A0);
  }
  return result;
}

unint64_t sub_253CCDD90()
{
  unint64_t result = qword_269D7D2A8;
  if (!qword_269D7D2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2A8);
  }
  return result;
}

unint64_t sub_253CCDDE0()
{
  unint64_t result = qword_269D7D2B0;
  if (!qword_269D7D2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2B0);
  }
  return result;
}

unint64_t sub_253CCDE30()
{
  unint64_t result = qword_269D7D2B8;
  if (!qword_269D7D2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2B8);
  }
  return result;
}

unint64_t sub_253CCDE80()
{
  unint64_t result = qword_269D7D2C0;
  if (!qword_269D7D2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2C0);
  }
  return result;
}

unint64_t sub_253CCDED0()
{
  unint64_t result = qword_269D7D2C8;
  if (!qword_269D7D2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2C8);
  }
  return result;
}

unint64_t sub_253CCDF20()
{
  unint64_t result = qword_269D7D2D0;
  if (!qword_269D7D2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2D0);
  }
  return result;
}

unint64_t sub_253CCDF70()
{
  unint64_t result = qword_269D7D2D8;
  if (!qword_269D7D2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2D8);
  }
  return result;
}

unint64_t sub_253CCDFC0()
{
  unint64_t result = qword_269D7D2E0;
  if (!qword_269D7D2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2E0);
  }
  return result;
}

unint64_t sub_253CCE010()
{
  unint64_t result = qword_269D7D2E8;
  if (!qword_269D7D2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2E8);
  }
  return result;
}

unint64_t sub_253CCE060()
{
  unint64_t result = qword_269D7D2F0;
  if (!qword_269D7D2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2F0);
  }
  return result;
}

unint64_t sub_253CCE0B0()
{
  unint64_t result = qword_269D7D2F8;
  if (!qword_269D7D2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D2F8);
  }
  return result;
}

unint64_t sub_253CCE100()
{
  unint64_t result = qword_269D7D300;
  if (!qword_269D7D300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D300);
  }
  return result;
}

unint64_t sub_253CCE150()
{
  unint64_t result = qword_269D7D308;
  if (!qword_269D7D308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D308);
  }
  return result;
}

unint64_t sub_253CCE1A0()
{
  unint64_t result = qword_269D7D310;
  if (!qword_269D7D310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D310);
  }
  return result;
}

unint64_t sub_253CCE1F0()
{
  unint64_t result = qword_269D7D318;
  if (!qword_269D7D318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D318);
  }
  return result;
}

unint64_t sub_253CCE240()
{
  unint64_t result = qword_269D7D320;
  if (!qword_269D7D320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D320);
  }
  return result;
}

unint64_t sub_253CCE290()
{
  unint64_t result = qword_269D7D328;
  if (!qword_269D7D328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D328);
  }
  return result;
}

unint64_t sub_253CCE2E0()
{
  unint64_t result = qword_269D7D330;
  if (!qword_269D7D330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D330);
  }
  return result;
}

unint64_t sub_253CCE330()
{
  unint64_t result = qword_269D7D338;
  if (!qword_269D7D338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D338);
  }
  return result;
}

unint64_t sub_253CCE380()
{
  unint64_t result = qword_269D7D340;
  if (!qword_269D7D340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D340);
  }
  return result;
}

unint64_t sub_253CCE3D0()
{
  unint64_t result = qword_269D7D348;
  if (!qword_269D7D348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D348);
  }
  return result;
}

unint64_t sub_253CCE420()
{
  unint64_t result = qword_269D7D350;
  if (!qword_269D7D350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D350);
  }
  return result;
}

unint64_t sub_253CCE470()
{
  unint64_t result = qword_269D7D358;
  if (!qword_269D7D358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D358);
  }
  return result;
}

unint64_t sub_253CCE4C0()
{
  unint64_t result = qword_269D7D360;
  if (!qword_269D7D360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D360);
  }
  return result;
}

unint64_t sub_253CCE510()
{
  unint64_t result = qword_269D7D368;
  if (!qword_269D7D368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D368);
  }
  return result;
}

unint64_t sub_253CCE560()
{
  unint64_t result = qword_269D7D370;
  if (!qword_269D7D370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D370);
  }
  return result;
}

unint64_t sub_253CCE5B0()
{
  unint64_t result = qword_269D7D378;
  if (!qword_269D7D378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D378);
  }
  return result;
}

unint64_t sub_253CCE600()
{
  unint64_t result = qword_269D7D380;
  if (!qword_269D7D380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D380);
  }
  return result;
}

unint64_t sub_253CCE650()
{
  unint64_t result = qword_269D7D388;
  if (!qword_269D7D388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D388);
  }
  return result;
}

unint64_t sub_253CCE6A0()
{
  unint64_t result = qword_269D7D390;
  if (!qword_269D7D390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D390);
  }
  return result;
}

unint64_t sub_253CCE6F0()
{
  unint64_t result = qword_269D7D398;
  if (!qword_269D7D398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D398);
  }
  return result;
}

unint64_t sub_253CCE740()
{
  unint64_t result = qword_269D7D3A0;
  if (!qword_269D7D3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3A0);
  }
  return result;
}

unint64_t sub_253CCE790()
{
  unint64_t result = qword_269D7D3A8;
  if (!qword_269D7D3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3A8);
  }
  return result;
}

unint64_t sub_253CCE7E0()
{
  unint64_t result = qword_269D7D3B0;
  if (!qword_269D7D3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3B0);
  }
  return result;
}

unint64_t sub_253CCE830()
{
  unint64_t result = qword_269D7D3B8;
  if (!qword_269D7D3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3B8);
  }
  return result;
}

unint64_t sub_253CCE880()
{
  unint64_t result = qword_269D7D3C0;
  if (!qword_269D7D3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3C0);
  }
  return result;
}

unint64_t sub_253CCE8D0()
{
  unint64_t result = qword_269D7D3C8;
  if (!qword_269D7D3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3C8);
  }
  return result;
}

unint64_t sub_253CCE920()
{
  unint64_t result = qword_269D7D3D0;
  if (!qword_269D7D3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3D0);
  }
  return result;
}

unint64_t sub_253CCE970()
{
  unint64_t result = qword_269D7D3D8;
  if (!qword_269D7D3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3D8);
  }
  return result;
}

unint64_t sub_253CCE9C0()
{
  unint64_t result = qword_269D7D3E0;
  if (!qword_269D7D3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3E0);
  }
  return result;
}

unint64_t sub_253CCEA10()
{
  unint64_t result = qword_269D7D3E8;
  if (!qword_269D7D3E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3E8);
  }
  return result;
}

unint64_t sub_253CCEA60()
{
  unint64_t result = qword_269D7D3F0;
  if (!qword_269D7D3F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3F0);
  }
  return result;
}

unint64_t sub_253CCEAB0()
{
  unint64_t result = qword_269D7D3F8;
  if (!qword_269D7D3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D3F8);
  }
  return result;
}

unint64_t sub_253CCEB00()
{
  unint64_t result = qword_269D7D400;
  if (!qword_269D7D400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D400);
  }
  return result;
}

unint64_t sub_253CCEB50()
{
  unint64_t result = qword_269D7D408;
  if (!qword_269D7D408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D408);
  }
  return result;
}

unint64_t sub_253CCEBA0()
{
  unint64_t result = qword_269D7D410;
  if (!qword_269D7D410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D410);
  }
  return result;
}

unint64_t sub_253CCEBF0()
{
  unint64_t result = qword_269D7D418;
  if (!qword_269D7D418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D418);
  }
  return result;
}

unint64_t sub_253CCEC40()
{
  unint64_t result = qword_269D7D420;
  if (!qword_269D7D420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D420);
  }
  return result;
}

unint64_t sub_253CCEC90()
{
  unint64_t result = qword_269D7D428;
  if (!qword_269D7D428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D428);
  }
  return result;
}

unint64_t sub_253CCECE0()
{
  unint64_t result = qword_269D7D430;
  if (!qword_269D7D430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D430);
  }
  return result;
}

unint64_t sub_253CCED30()
{
  unint64_t result = qword_269D7D438;
  if (!qword_269D7D438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D438);
  }
  return result;
}

unint64_t sub_253CCED80()
{
  unint64_t result = qword_269D7D440;
  if (!qword_269D7D440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D440);
  }
  return result;
}

unint64_t sub_253CCEDD0()
{
  unint64_t result = qword_269D7D448;
  if (!qword_269D7D448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D448);
  }
  return result;
}

unint64_t sub_253CCEE20()
{
  unint64_t result = qword_269D7D450;
  if (!qword_269D7D450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D450);
  }
  return result;
}

unint64_t sub_253CCEE70()
{
  unint64_t result = qword_269D7D458;
  if (!qword_269D7D458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D458);
  }
  return result;
}

unint64_t sub_253CCEEC0()
{
  unint64_t result = qword_269D7D460;
  if (!qword_269D7D460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D460);
  }
  return result;
}

unint64_t sub_253CCEF10()
{
  unint64_t result = qword_269D7D468;
  if (!qword_269D7D468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D468);
  }
  return result;
}

unint64_t sub_253CCEF60()
{
  unint64_t result = qword_269D7D470;
  if (!qword_269D7D470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D470);
  }
  return result;
}

unint64_t sub_253CCEFB0()
{
  unint64_t result = qword_269D7D478;
  if (!qword_269D7D478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D478);
  }
  return result;
}

unint64_t sub_253CCF000()
{
  unint64_t result = qword_269D7D480;
  if (!qword_269D7D480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D480);
  }
  return result;
}

unint64_t sub_253CCF050()
{
  unint64_t result = qword_269D7D488;
  if (!qword_269D7D488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D488);
  }
  return result;
}

unint64_t sub_253CCF0A0()
{
  unint64_t result = qword_269D7D490;
  if (!qword_269D7D490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D490);
  }
  return result;
}

unint64_t sub_253CCF0F0()
{
  unint64_t result = qword_269D7D498;
  if (!qword_269D7D498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D498);
  }
  return result;
}

unint64_t sub_253CCF140()
{
  unint64_t result = qword_269D7D4A0;
  if (!qword_269D7D4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4A0);
  }
  return result;
}

unint64_t sub_253CCF190()
{
  unint64_t result = qword_269D7D4A8;
  if (!qword_269D7D4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4A8);
  }
  return result;
}

unint64_t sub_253CCF1E0()
{
  unint64_t result = qword_269D7D4B0;
  if (!qword_269D7D4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4B0);
  }
  return result;
}

unint64_t sub_253CCF230()
{
  unint64_t result = qword_269D7D4B8;
  if (!qword_269D7D4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4B8);
  }
  return result;
}

unint64_t sub_253CCF280()
{
  unint64_t result = qword_269D7D4C0;
  if (!qword_269D7D4C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4C0);
  }
  return result;
}

unint64_t sub_253CCF2D0()
{
  unint64_t result = qword_269D7D4C8;
  if (!qword_269D7D4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4C8);
  }
  return result;
}

unint64_t sub_253CCF320()
{
  unint64_t result = qword_269D7D4D0;
  if (!qword_269D7D4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4D0);
  }
  return result;
}

unint64_t sub_253CCF370()
{
  unint64_t result = qword_269D7D4D8;
  if (!qword_269D7D4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4D8);
  }
  return result;
}

unint64_t sub_253CCF3C0()
{
  unint64_t result = qword_269D7D4E0;
  if (!qword_269D7D4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4E0);
  }
  return result;
}

unint64_t sub_253CCF410()
{
  unint64_t result = qword_269D7D4E8;
  if (!qword_269D7D4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4E8);
  }
  return result;
}

unint64_t sub_253CCF460()
{
  unint64_t result = qword_269D7D4F0;
  if (!qword_269D7D4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4F0);
  }
  return result;
}

unint64_t sub_253CCF4B0()
{
  unint64_t result = qword_269D7D4F8;
  if (!qword_269D7D4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D4F8);
  }
  return result;
}

unint64_t sub_253CCF500()
{
  unint64_t result = qword_269D7D500;
  if (!qword_269D7D500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D500);
  }
  return result;
}

unint64_t sub_253CCF550()
{
  unint64_t result = qword_269D7D508;
  if (!qword_269D7D508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D508);
  }
  return result;
}

unint64_t sub_253CCF5A0()
{
  unint64_t result = qword_269D7D510;
  if (!qword_269D7D510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D510);
  }
  return result;
}

unint64_t sub_253CCF5F0()
{
  unint64_t result = qword_269D7D518;
  if (!qword_269D7D518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D518);
  }
  return result;
}

unint64_t sub_253CCF640()
{
  unint64_t result = qword_269D7D520;
  if (!qword_269D7D520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D520);
  }
  return result;
}

unint64_t sub_253CCF690()
{
  unint64_t result = qword_269D7D528;
  if (!qword_269D7D528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D528);
  }
  return result;
}

unint64_t sub_253CCF6E0()
{
  unint64_t result = qword_269D7D530;
  if (!qword_269D7D530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D530);
  }
  return result;
}

unint64_t sub_253CCF730()
{
  unint64_t result = qword_269D7D538;
  if (!qword_269D7D538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D538);
  }
  return result;
}

unint64_t sub_253CCF780()
{
  unint64_t result = qword_269D7D540;
  if (!qword_269D7D540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D540);
  }
  return result;
}

unint64_t sub_253CCF7D0()
{
  unint64_t result = qword_269D7D548;
  if (!qword_269D7D548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D548);
  }
  return result;
}

unint64_t sub_253CCF820()
{
  unint64_t result = qword_269D7D550;
  if (!qword_269D7D550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D550);
  }
  return result;
}

unint64_t sub_253CCF870()
{
  unint64_t result = qword_269D7D558;
  if (!qword_269D7D558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D558);
  }
  return result;
}

unint64_t sub_253CCF8C0()
{
  unint64_t result = qword_269D7D560;
  if (!qword_269D7D560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D560);
  }
  return result;
}

unint64_t sub_253CCF910()
{
  unint64_t result = qword_269D7D568;
  if (!qword_269D7D568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D568);
  }
  return result;
}

unint64_t sub_253CCF960()
{
  unint64_t result = qword_269D7D570;
  if (!qword_269D7D570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D570);
  }
  return result;
}

unint64_t sub_253CCF9B0()
{
  unint64_t result = qword_269D7D578;
  if (!qword_269D7D578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D578);
  }
  return result;
}

unint64_t sub_253CCFA00()
{
  unint64_t result = qword_269D7D580;
  if (!qword_269D7D580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D580);
  }
  return result;
}

unint64_t sub_253CCFA50()
{
  unint64_t result = qword_269D7D588;
  if (!qword_269D7D588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D588);
  }
  return result;
}

unint64_t sub_253CCFAA0()
{
  unint64_t result = qword_269D7D590;
  if (!qword_269D7D590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D590);
  }
  return result;
}

unint64_t sub_253CCFAF0()
{
  unint64_t result = qword_269D7D598;
  if (!qword_269D7D598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D598);
  }
  return result;
}

unint64_t sub_253CCFB40()
{
  unint64_t result = qword_269D7D5A0;
  if (!qword_269D7D5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5A0);
  }
  return result;
}

unint64_t sub_253CCFB90()
{
  unint64_t result = qword_269D7D5A8;
  if (!qword_269D7D5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5A8);
  }
  return result;
}

unint64_t sub_253CCFBE0()
{
  unint64_t result = qword_269D7D5B0;
  if (!qword_269D7D5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5B0);
  }
  return result;
}

unint64_t sub_253CCFC30()
{
  unint64_t result = qword_269D7D5B8;
  if (!qword_269D7D5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5B8);
  }
  return result;
}

unint64_t sub_253CCFC80()
{
  unint64_t result = qword_269D7D5C0;
  if (!qword_269D7D5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5C0);
  }
  return result;
}

unint64_t sub_253CCFCD0()
{
  unint64_t result = qword_269D7D5C8;
  if (!qword_269D7D5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5C8);
  }
  return result;
}

unint64_t sub_253CCFD20()
{
  unint64_t result = qword_269D7D5D0;
  if (!qword_269D7D5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5D0);
  }
  return result;
}

unint64_t sub_253CCFD70()
{
  unint64_t result = qword_269D7D5D8;
  if (!qword_269D7D5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5D8);
  }
  return result;
}

unint64_t sub_253CCFDC0()
{
  unint64_t result = qword_269D7D5E0;
  if (!qword_269D7D5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5E0);
  }
  return result;
}

unint64_t sub_253CCFE10()
{
  unint64_t result = qword_269D7D5E8;
  if (!qword_269D7D5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5E8);
  }
  return result;
}

unint64_t sub_253CCFE60()
{
  unint64_t result = qword_269D7D5F0;
  if (!qword_269D7D5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5F0);
  }
  return result;
}

unint64_t sub_253CCFEB0()
{
  unint64_t result = qword_269D7D5F8;
  if (!qword_269D7D5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D5F8);
  }
  return result;
}

unint64_t sub_253CCFF00()
{
  unint64_t result = qword_269D7D600;
  if (!qword_269D7D600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D600);
  }
  return result;
}

unint64_t sub_253CCFF50()
{
  unint64_t result = qword_269D7D608;
  if (!qword_269D7D608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D608);
  }
  return result;
}

unint64_t sub_253CCFFA0()
{
  unint64_t result = qword_269D7D610;
  if (!qword_269D7D610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D610);
  }
  return result;
}

unint64_t sub_253CCFFF0()
{
  unint64_t result = qword_269D7D618;
  if (!qword_269D7D618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D618);
  }
  return result;
}

unint64_t sub_253CD0040()
{
  unint64_t result = qword_269D7D620;
  if (!qword_269D7D620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D620);
  }
  return result;
}

unint64_t sub_253CD0090()
{
  unint64_t result = qword_269D7D628;
  if (!qword_269D7D628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D628);
  }
  return result;
}

unint64_t sub_253CD00E0()
{
  unint64_t result = qword_269D7D630;
  if (!qword_269D7D630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D630);
  }
  return result;
}

unint64_t sub_253CD0130()
{
  unint64_t result = qword_269D7D638;
  if (!qword_269D7D638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D638);
  }
  return result;
}

unint64_t sub_253CD0180()
{
  unint64_t result = qword_269D7D640;
  if (!qword_269D7D640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D640);
  }
  return result;
}

uint64_t sub_253CD01CC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2) {
    goto LABEL_10;
  }
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0) {
    return swift_unknownObjectRetain();
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t _s18TaskDefinitionThinO23CandidateEvaluationThinVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7D6A0);
}

uint64_t _s18TaskDefinitionThinO14TaskStatusThinOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255790);
}

uint64_t _s18TaskDefinitionThinO15TaskOutcomeThinVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2557A0);
}

uint64_t _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255758);
}

uint64_t _s18TaskDefinitionThinO15TaskContextThinVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7D688);
}

uint64_t _s18TaskDefinitionThinO18TaskEvaluationThinVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255738);
}

uint64_t _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255768);
}

uint64_t _s18TaskDefinitionThinO14TaskActionThinVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255780);
}

void *sub_253CD0348(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFE90();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_253CD0414()
{
  return sub_253CD1548();
}

uint64_t sub_253CD042C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_253CD04A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_253CD0524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_253CD05A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_253CD061C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CD0630);
}

uint64_t sub_253CD0630(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253CD9958();
  sub_253DEFE90();
  sub_253C16A18();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v3, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(v3 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return sub_253CD9C08(v9);
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_253CD06BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CD06D0);
}

void sub_253CD06D0()
{
  sub_253CD8F0C();
  sub_253DEFE90();
  sub_253C16A18();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_253C4BC8C();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 1;
  }
}

uint64_t sub_253CD073C()
{
  return sub_253CD075C();
}

uint64_t sub_253CD075C()
{
  uint64_t v0 = sub_253CD95CC();
  uint64_t result = v1(v0);
  if (v3 <= 0x3F)
  {
    sub_253CD8ED4(result);
    sub_253CD9BF4();
    swift_initStructMetadata();
    return sub_253CD930C();
  }
  return result;
}

void *sub_253CD07B8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_253DEFE90();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      *((unsigned char *)a1 + *(int *)(v7 + 20)) = *((unsigned char *)a2 + *(int *)(v7 + 20));
    }
    else
    {
      uint64_t v9 = sub_253DEFFE0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CD08FC(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v2 = sub_253DEFE90();
  }
  else {
    uint64_t v2 = sub_253DEFFE0();
  }
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_253CD0978(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_253DEFE90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    *(unsigned char *)(a1 + *(int *)(v5 + 20)) = *(unsigned char *)(a2 + *(int *)(v5 + 20));
  }
  else
  {
    uint64_t v6 = sub_253DEFFE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253CD0A64(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_253DEFE90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      *(unsigned char *)(a1 + *(int *)(v5 + 20)) = *(unsigned char *)(a2 + *(int *)(v5 + 20));
    }
    else
    {
      uint64_t v6 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CD0B74(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_253DEFE90();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    uint64_t v5 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
    *(unsigned char *)(a1 + *(int *)(v5 + 20)) = *(unsigned char *)(a2 + *(int *)(v5 + 20));
  }
  else
  {
    uint64_t v6 = sub_253DEFFE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253CD0C60(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = sub_253DEFE90();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      *(unsigned char *)(a1 + *(int *)(v5 + 20)) = *(unsigned char *)(a2 + *(int *)(v5 + 20));
    }
    else
    {
      uint64_t v6 = sub_253DEFFE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CD0D70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CC9488(a1, a2, a3, MEMORY[0x263F4BF98], _s18TaskDefinitionThinO14TaskActionThinVMa);
}

uint64_t *sub_253CD0D9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_253DF00F0();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t sub_253CD0E98(uint64_t a1)
{
  uint64_t v2 = sub_253DF00F0();
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_253CD0F20(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF00F0();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *sub_253CD0FE0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF00F0();
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *sub_253CD1128(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF00F0();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *sub_253CD11E8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF00F0();
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t sub_253CD1330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CD1344);
}

uint64_t sub_253CD1344(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DF00F0();
  unsigned int v5 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_253CD138C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CD13A0);
}

uint64_t sub_253CD13A0()
{
  sub_253DF00F0();
  uint64_t v0 = sub_253CD8E14();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v1, v2, v3);
}

uint64_t sub_253CD13F4(uint64_t a1)
{
  uint64_t v2 = sub_253DF00F0();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 2, v2);
}

uint64_t sub_253CD1438(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DF00F0();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 2, v4);
}

uint64_t _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255748);
}

uint64_t sub_253CD14A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CD3D04(a1, a2, a3, MEMORY[0x263F4C070]);
}

uint64_t sub_253CD14C0()
{
  return sub_253CD14D8();
}

uint64_t sub_253CD14D8()
{
  uint64_t v1 = sub_253CD8E3C();
  v2(v1);
  sub_253BDF7F0();
  uint64_t v3 = sub_253C8F5BC();

  return v4(v3, v0);
}

uint64_t sub_253CD1530()
{
  return sub_253CD1548();
}

uint64_t sub_253CD1548()
{
  uint64_t v1 = sub_253CD9958();
  v2(v1);
  sub_253BDF7F0();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);

  return v5(v0, v3);
}

uint64_t sub_253CD15A4()
{
  return sub_253CD15BC();
}

uint64_t sub_253CD15BC()
{
  uint64_t v1 = sub_253CD8E3C();
  v2(v1);
  sub_253BDF7F0();
  uint64_t v3 = sub_253C4BBBC();
  v4(v3);
  return v0;
}

uint64_t sub_253CD1608()
{
  return sub_253CD1620();
}

uint64_t sub_253CD1620()
{
  uint64_t v1 = sub_253CD8E3C();
  v2(v1);
  sub_253BDF7F0();
  uint64_t v3 = sub_253C4BBBC();
  v4(v3);
  return v0;
}

uint64_t sub_253CD166C()
{
  return sub_253CD1684();
}

uint64_t sub_253CD1684()
{
  uint64_t v1 = sub_253CD8E3C();
  v2(v1);
  sub_253BDF7F0();
  sub_253C10134();
  v3();
  return v0;
}

uint64_t sub_253CD16D4()
{
  return sub_253CD16EC();
}

uint64_t sub_253CD16EC()
{
  uint64_t v1 = sub_253CD8E3C();
  v2(v1);
  sub_253BDF7F0();
  uint64_t v3 = sub_253C4BBBC();
  v4(v3);
  return v0;
}

uint64_t sub_253CD1738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CD174C);
}

uint64_t sub_253CD174C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFE20();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v4);
}

uint64_t sub_253CD1794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CD17A8);
}

uint64_t sub_253CD17A8()
{
  sub_253DEFE20();
  uint64_t v0 = sub_253C4BC8C();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v1, v2, v3);
}

uint64_t sub_253CD17E8()
{
  return sub_253CD1800();
}

uint64_t sub_253CD1800()
{
  uint64_t v0 = sub_253CD95CC();
  uint64_t result = v1(v0);
  if (v3 <= 0x3F)
  {
    swift_initStructMetadata();
    return sub_253CD930C();
  }
  return result;
}

uint64_t *sub_253CD1888(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_253BDEDD8(&qword_269D7D680);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253BDEDD8(&qword_269D7D698);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v11 = sub_253DEFE90();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
          uint64_t v12 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
          *((unsigned char *)a1 + *(int *)(v12 + 20)) = *((unsigned char *)a2 + *(int *)(v12 + 20));
        }
        else
        {
          uint64_t v13 = sub_253DEFFE0();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_253CD1A70(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7D680);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
    uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v4);
    if (!result)
    {
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v5 = sub_253DEFE90();
      }
      else {
        uint64_t v5 = sub_253DEFFE0();
      }
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v6(a1, v5);
    }
  }
  return result;
}

void *sub_253CD1B40(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D680);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253BDEDD8(&qword_269D7D698);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = sub_253DEFE90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
        *((unsigned char *)a1 + *(int *)(v10 + 20)) = *((unsigned char *)a2 + *(int *)(v10 + 20));
      }
      else
      {
        uint64_t v11 = sub_253DEFFE0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_253CD1CEC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D680);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253BDEDD8(&qword_269D7D698);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v16 = sub_253DEFE90();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          uint64_t v17 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
          *((unsigned char *)a1 + *(int *)(v17 + 20)) = *((unsigned char *)a2 + *(int *)(v17 + 20));
        }
        else
        {
          uint64_t v18 = sub_253DEFFE0();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
LABEL_25:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_253BEFAC0((uint64_t)a1, &qword_269D7D680);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  uint64_t v6 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_253DEFE90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
        *((unsigned char *)a1 + *(int *)(v15 + 20)) = *((unsigned char *)a2 + *(int *)(v15 + 20));
      }
      else
      {
        uint64_t v21 = sub_253DEFFE0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v13)
  {
    sub_253CC39A0();
LABEL_17:
    size_t v11 = *(void *)(*(void *)(sub_253BDEDD8(&qword_269D7D698) - 8) + 64);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_253DEFE90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      uint64_t v20 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
    }
    else
    {
      uint64_t v23 = sub_253DEFFE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_253CD20EC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D680);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_253BDEDD8(&qword_269D7D698);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = sub_253DEFE90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t v10 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
        *((unsigned char *)a1 + *(int *)(v10 + 20)) = *((unsigned char *)a2 + *(int *)(v10 + 20));
      }
      else
      {
        uint64_t v11 = sub_253DEFFE0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      }
      swift_storeEnumTagMultiPayload();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_253CD2298(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D680);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
      {
        uint64_t v10 = sub_253BDEDD8(&qword_269D7D698);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v16 = sub_253DEFE90();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
          uint64_t v17 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
          *((unsigned char *)a1 + *(int *)(v17 + 20)) = *((unsigned char *)a2 + *(int *)(v17 + 20));
        }
        else
        {
          uint64_t v18 = sub_253DEFFE0();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
      }
LABEL_25:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_253BEFAC0((uint64_t)a1, &qword_269D7D680);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v11);
    return a1;
  }
  uint64_t v6 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 1, v6);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v14 = sub_253DEFE90();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        uint64_t v15 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
        *((unsigned char *)a1 + *(int *)(v15 + 20)) = *((unsigned char *)a2 + *(int *)(v15 + 20));
      }
      else
      {
        uint64_t v21 = sub_253DEFFE0();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v13)
  {
    sub_253CC39A0();
LABEL_17:
    size_t v11 = *(void *)(*(void *)(sub_253BDEDD8(&qword_269D7D698) - 8) + 64);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = sub_253DEFE90();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      uint64_t v20 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
    }
    else
    {
      uint64_t v23 = sub_253DEFFE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CD2698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CD26AC);
}

uint64_t sub_253CD26AC()
{
  sub_253CD9CB4();
  uint64_t v0 = sub_253BDEDD8(&qword_269D7D680);
  return sub_253CD9B84(v0);
}

uint64_t sub_253CD26DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CD26F0);
}

uint64_t sub_253CD26F0()
{
  sub_253CD9C58();
  sub_253BDEDD8(&qword_269D7D680);
  uint64_t v0 = sub_253CD8E14();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v1, v2, v3);
}

uint64_t sub_253CD2738(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7D680);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v2);
}

uint64_t sub_253CD2780(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_269D7D680);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 1, v4);
}

void sub_253CD27D0()
{
}

void sub_253CD27F0()
{
  uint64_t v0 = sub_253CD95CC();
  sub_253CCADA8(v0, v1, v2);
  if (v3 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    sub_253CD930C();
  }
}

uint64_t *sub_253CD2868(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253BDEDD8(&qword_269D7D678);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v7))
    {
      uint64_t v8 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = sub_253DF00F0();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v10))
      {
        uint64_t v11 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v10);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

void *sub_253CD29FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D678);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    uint64_t v7 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_253DF00F0();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v8))
    {
      uint64_t v9 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v8);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_253CD2B3C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D678);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = sub_253DF00F0();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        uint64_t v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = 4;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_253BEFAC0((uint64_t)a1, &qword_269D7D678);
LABEL_7:
    uint64_t v11 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    goto LABEL_8;
  }
  uint64_t v6 = sub_253DF00F0();
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = 2;
LABEL_14:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 0, v15, v6);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(a1, a2, v6);
      goto LABEL_15;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(a1, v6);
  }
  uint64_t v11 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
LABEL_8:
  memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_15:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_253CD2D98(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D678);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    uint64_t v7 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_253DF00F0();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v8))
    {
      uint64_t v9 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v8);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_253CD2ED8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D678);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = sub_253DF00F0();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        uint64_t v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = 4;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_253BEFAC0((uint64_t)a1, &qword_269D7D678);
LABEL_7:
    uint64_t v11 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    goto LABEL_8;
  }
  uint64_t v6 = sub_253DF00F0();
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = 2;
LABEL_14:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 0, v15, v6);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(a1, a2, v6);
      goto LABEL_15;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(a1, v6);
  }
  uint64_t v11 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
LABEL_8:
  memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_15:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_253CD3134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CD3148);
}

uint64_t sub_253CD3148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CD3160(a1, a2, a3);
}

uint64_t sub_253CD3160(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253CD9958();
  v7(v6);
  sub_253C16A18();
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v3, a2, v8);
  }
  else
  {
    if (*(unsigned __int8 *)(v3 + *(int *)(a3 + 20)) <= 3u) {
      int v11 = 3;
    }
    else {
      int v11 = *(unsigned __int8 *)(v3 + *(int *)(a3 + 20));
    }
    unsigned int v12 = v11 - 3;
    if (*(unsigned __int8 *)(v3 + *(int *)(a3 + 20)) >= 3u) {
      return v12;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_253CD31F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CD3208);
}

void sub_253CD3208()
{
}

void sub_253CD3220()
{
  uint64_t v4 = sub_253CD8F0C();
  v5(v4);
  sub_253C16A18();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_253C4BC8C();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v7, v8, v9, v10);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 3;
  }
}

uint64_t sub_253CD3290()
{
  return sub_253CD075C();
}

uint64_t *sub_253CD32B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_253BDEDD8(&qword_269D7D678);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_253DF00F0();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        uint64_t v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_253CD3410(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7D678);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 4, v2);
  if (!result)
  {
    uint64_t v4 = sub_253DF00F0();
    uint64_t v5 = sub_253CD99F4();
    uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v5, v6, v4);
    if (!result)
    {
      sub_253C0FA90();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
      return v8(a1, v4);
    }
  }
  return result;
}

void *sub_253CD34B0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D678);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_253DF00F0();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v7))
    {
      uint64_t v8 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
  }
  return a1;
}

void *sub_253CD35D4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D678);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = sub_253DF00F0();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        uint64_t v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = 4;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_253BEFAC0((uint64_t)a1, &qword_269D7D678);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v6 = sub_253DF00F0();
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = 2;
LABEL_14:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 0, v15, v6);
      return a1;
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(a1, v6);
  }
  size_t v11 = *(void *)(*(void *)(_s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0) - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v11);
  return a1;
}

void *sub_253CD3830(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D678);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_253DF00F0();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v7))
    {
      uint64_t v8 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v7);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 4, v6);
  }
  return a1;
}

void *sub_253CD3954(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7D678);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 4, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 4, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = sub_253DF00F0();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v9))
      {
        uint64_t v10 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v9);
      }
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = 4;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_253BEFAC0((uint64_t)a1, &qword_269D7D678);
LABEL_7:
    size_t v11 = *(void *)(*(void *)(a3 - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v6 = sub_253DF00F0();
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = 2;
LABEL_14:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v14, 0, v15, v6);
      return a1;
    }
  }
  else
  {
    uint64_t v17 = *(void *)(v6 - 8);
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(a1, v6);
  }
  size_t v11 = *(void *)(*(void *)(_s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0) - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v11);
  return a1;
}

uint64_t sub_253CD3BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CD3BC4);
}

uint64_t sub_253CD3BC4()
{
  sub_253CD9CB4();
  uint64_t v0 = sub_253BDEDD8(&qword_269D7D678);
  return sub_253CD9BB0(v0);
}

uint64_t sub_253CD3BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CD3C08);
}

uint64_t sub_253CD3C08()
{
  sub_253CD9748();
  sub_253BDEDD8(&qword_269D7D678);
  uint64_t v0 = sub_253CD8E14();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v0, v1, v2, v3);
}

uint64_t sub_253CD3C50(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7D678);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 4, v2);
}

uint64_t sub_253CD3C98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_269D7D678);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 4, v4);
}

uint64_t sub_253CD3CE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CD3D04(a1, a2, a3, _s18TaskDefinitionThinO21TaskFailureReasonThinOMa);
}

uint64_t sub_253CD3D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return sub_253CD930C();
  }
  return result;
}

void *sub_253CD3D80(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = sub_253DEFFE0();
    int v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    size_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = v11[1];
      void *v10 = *v11;
      v10[1] = v15;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
        goto LABEL_9;
      }
      v8(v10, v11, v7);
    }
    swift_storeEnumTagMultiPayload();
LABEL_9:
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_253DF26C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
    uint64_t v20 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
    return a1;
  }
  uint64_t v14 = *a2;
  *a1 = *a2;
  a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void *sub_253CD3F50(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v13;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      goto LABEL_7;
    }
    v7(v9, v10, v6);
  }
  swift_storeEnumTagMultiPayload();
LABEL_7:
  uint64_t v14 = a3[6];
  uint64_t v15 = (uint64_t)a1 + v14;
  uint64_t v16 = (uint64_t)a2 + v14;
  uint64_t v17 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  return a1;
}

uint64_t sub_253CD40D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (void *)(a2 + v8);
    sub_253CC39A0();
    uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v9 = *v10;
      v9[1] = v10[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_8;
      }
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(v9, v10, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_8:
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

char *sub_253CD42A8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_253DF26C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  a1[v16] = a2[v16];
  return a1;
}

uint64_t sub_253CD4404(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_253CC39A0();
    uint64_t v11 = type metadata accessor for FeedbackLearning.CandidateParameter(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DF26C0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  return a1;
}

uint64_t sub_253CD45AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CD45C0);
}

uint64_t sub_253CD45C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253C8F0EC();
  sub_253C16A18();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = sub_253C8F5BC();
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_253C16A18();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      sub_253CD9BDC();
    }
    else
    {
      sub_253DF26C0();
      sub_253C16A18();
      if (*(_DWORD *)(v12 + 84) != v3) {
        return sub_253CD9CA0(*(int *)(a3 + 28));
      }
      uint64_t v8 = v11;
      uint64_t v10 = *(int *)(a3 + 24);
    }
    uint64_t v7 = v4 + v10;
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v7, v3, v8);
}

uint64_t sub_253CD4674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CD4688);
}

void sub_253CD4688(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_253C8F0EC();
  sub_253C16A18();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    sub_253C8F27C();
  }
  else
  {
    type metadata accessor for FeedbackLearning.CandidateParameter(0);
    sub_253C16A18();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      sub_253CD9AC0();
    }
    else
    {
      sub_253DF26C0();
      sub_253C16A18();
      if (*(_DWORD *)(v10 + 84) != a3)
      {
        *(unsigned char *)(v5 + *(int *)(a4 + 28)) = v4 + 3;
        return;
      }
    }
  }
  sub_253C8F1EC();

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v11, v12, v13, v14);
}

uint64_t sub_253CD4744()
{
  uint64_t result = sub_253DEFFE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FeedbackLearning.CandidateParameter(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_253DF26C0();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void _s18TaskDefinitionThinOMa()
{
}

uint64_t *sub_253CD4868(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFE90();
    uint64_t v39 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v39(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253DEFFE0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_253DEFE20();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_253BDEDD8(&qword_269D7D680);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      uint64_t v23 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v23))
      {
        uint64_t v24 = sub_253BDEDD8(&qword_269D7D698);
        memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v39((uint64_t *)v18, (uint64_t *)v19, v7);
          uint64_t v25 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
          v18[*(int *)(v25 + 20)] = v19[*(int *)(v25 + 20)];
        }
        else
        {
          v12(v18, v19, v11);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v23);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
    }
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = sub_253BDEDD8(&qword_269D7D678);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v28, 4, v29))
    {
      uint64_t v30 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = sub_253DF00F0();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v28, 2, v31))
      {
        uint64_t v32 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v27, v28, v31);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v27, 0, 2, v31);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v27, 0, 4, v29);
    }
    uint64_t v33 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
    v27[*(int *)(v33 + 20)] = v28[*(int *)(v33 + 20)];
    uint64_t v34 = a3[10];
    uint64_t v35 = (char *)a1 + v34;
    uint64_t v36 = (char *)a2 + v34;
    *uint64_t v35 = *v36;
    v35[8] = v36[8];
    uint64_t v37 = *((void *)v36 + 3);
    *((void *)v35 + 2) = *((void *)v36 + 2);
    *((void *)v35 + 3) = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_253CD4C90(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253DEFE90();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = sub_253DEFFE0();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = sub_253DEFE20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = a1 + a2[8];
  uint64_t v12 = sub_253BDEDD8(&qword_269D7D680);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v11, 1, v12))
  {
    uint64_t v13 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
    if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v11, 1, v13))
    {
      if (swift_getEnumCaseMultiPayload() == 1) {
        v5(v11, v4);
      }
      else {
        v8(v11, v7);
      }
    }
  }
  uint64_t v14 = a1 + a2[9];
  uint64_t v15 = sub_253BDEDD8(&qword_269D7D678);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v14, 4, v15))
  {
    uint64_t v16 = sub_253DF00F0();
    if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v14, 2, v16)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_253CD4EC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  uint64_t v40 = *v7;
  (*v7)(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DEFFE0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_253DEFE20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_253BDEDD8(&qword_269D7D680);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    uint64_t v22 = v42;
  }
  else
  {
    uint64_t v23 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v23))
    {
      uint64_t v24 = sub_253BDEDD8(&qword_269D7D698);
      memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
      a2 = v41;
      uint64_t v22 = v42;
    }
    else
    {
      uint64_t v39 = v23;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v40((uint64_t)v18, (uint64_t)v19, v6);
        uint64_t v25 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
        *((unsigned char *)v18 + *(int *)(v25 + 20)) = *((unsigned char *)v19 + *(int *)(v25 + 20));
      }
      else
      {
        v12((uint64_t)v18, (uint64_t)v19, v11);
      }
      a2 = v41;
      uint64_t v22 = v42;
      swift_storeEnumTagMultiPayload();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v39);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v26 = v22[9];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = sub_253BDEDD8(&qword_269D7D678);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v28, 4, v29))
  {
    uint64_t v30 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    uint64_t v31 = sub_253DF00F0();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v28, 2, v31))
    {
      uint64_t v32 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(v27, v28, v31);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v27, 0, 2, v31);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v27, 0, 4, v29);
  }
  uint64_t v33 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
  *((unsigned char *)v27 + *(int *)(v33 + 20)) = *((unsigned char *)v28 + *(int *)(v33 + 20));
  uint64_t v34 = v22[10];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  *(unsigned char *)uint64_t v35 = *(unsigned char *)v36;
  *(unsigned char *)(v35 + 8) = *(unsigned char *)(v36 + 8);
  uint64_t v37 = *(void *)(v36 + 24);
  *(void *)(v35 + 16) = *(void *)(v36 + 16);
  *(void *)(v35 + 24) = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_253CD52AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v49 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFFE0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24))(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DEFE20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_253BDEDD8(&qword_269D7D680);
  int v20 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  int v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      uint64_t v22 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v22))
      {
        uint64_t v23 = sub_253BDEDD8(&qword_269D7D698);
        memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v17, v18, v6);
          uint64_t v28 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
          *((unsigned char *)v17 + *(int *)(v28 + 20)) = *((unsigned char *)v18 + *(int *)(v28 + 20));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v17, v18, v10);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v22);
      }
LABEL_25:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_26;
    }
    goto LABEL_7;
  }
  if (v21)
  {
    sub_253BEFAC0((uint64_t)v17, &qword_269D7D680);
LABEL_7:
    uint64_t v24 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
LABEL_8:
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_26;
  }
  uint64_t v19 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
  int v25 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  int v26 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (v25)
  {
    if (!v26)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v17, v18, v6);
        uint64_t v27 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
        *((unsigned char *)v17 + *(int *)(v27 + 20)) = *((unsigned char *)v18 + *(int *)(v27 + 20));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v17, v18, v10);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v26)
  {
    sub_253CC39A0();
LABEL_17:
    uint64_t v24 = sub_253BDEDD8(&qword_269D7D698);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void *, const void *, uint64_t))(v49 + 16))(v17, v18, v6);
      uint64_t v29 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      *((unsigned char *)v17 + *(int *)(v29 + 20)) = *((unsigned char *)v18 + *(int *)(v29 + 20));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v17, v18, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_26:
  uint64_t v30 = a3[9];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (const void *)(a2 + v30);
  uint64_t v33 = sub_253BDEDD8(&qword_269D7D678);
  int v34 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v31, 4, v33);
  int v35 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v32, 4, v33);
  if (v34)
  {
    if (!v35)
    {
      uint64_t v36 = sub_253DF00F0();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v32, 2, v36))
      {
        uint64_t v37 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v31, 0, 2, v36);
      }
      uint64_t v41 = (uint64_t)v31;
      uint64_t v42 = 4;
      goto LABEL_39;
    }
    goto LABEL_32;
  }
  if (v35)
  {
    sub_253BEFAC0((uint64_t)v31, &qword_269D7D678);
LABEL_32:
    uint64_t v38 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    goto LABEL_33;
  }
  uint64_t v33 = sub_253DF00F0();
  int v39 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v31, 2, v33);
  int v40 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v32, 2, v33);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      uint64_t v41 = (uint64_t)v31;
      uint64_t v42 = 2;
LABEL_39:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v41, 0, v42, v33);
      goto LABEL_40;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(v33 - 8);
    if (!v40)
    {
      (*(void (**)(void *, const void *, uint64_t))(v48 + 24))(v31, v32, v33);
      goto LABEL_40;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v31, v33);
  }
  uint64_t v38 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
LABEL_33:
  memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_40:
  uint64_t v43 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
  *((unsigned char *)v31 + *(int *)(v43 + 20)) = *((unsigned char *)v32 + *(int *)(v43 + 20));
  uint64_t v44 = a3[10];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(unsigned char *)uint64_t v45 = *(unsigned char *)(a2 + v44);
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(a2 + v44 + 8);
  *(void *)(v45 + 16) = *(void *)(a2 + v44 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v45 + 24) = *(void *)(v46 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_253CD59C4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v7 = (void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  int v40 = *v7;
  (*v7)(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_253DEFFE0();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  uint64_t v13 = a3[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_253DEFE20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = sub_253BDEDD8(&qword_269D7D680);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    uint64_t v22 = a2;
    uint64_t v23 = v42;
  }
  else
  {
    uint64_t v24 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v19, 1, v24))
    {
      uint64_t v25 = sub_253BDEDD8(&qword_269D7D698);
      memcpy(v18, v19, *(void *)(*(void *)(v25 - 8) + 64));
      uint64_t v22 = v41;
      uint64_t v23 = v42;
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v40((uint64_t)v18, (uint64_t)v19, v6);
        uint64_t v26 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
        *((unsigned char *)v18 + *(int *)(v26 + 20)) = *((unsigned char *)v19 + *(int *)(v26 + 20));
      }
      else
      {
        v12((uint64_t)v18, (uint64_t)v19, v11);
      }
      uint64_t v22 = v41;
      uint64_t v23 = v42;
      swift_storeEnumTagMultiPayload();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v24);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v20);
  }
  uint64_t v27 = v23[9];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (const void *)(v22 + v27);
  uint64_t v30 = sub_253BDEDD8(&qword_269D7D678);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v29, 4, v30))
  {
    uint64_t v31 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v32 = sub_253DF00F0();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v29, 2, v32))
    {
      uint64_t v33 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
      memcpy(v28, v29, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v28, v29, v32);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v28, 0, 2, v32);
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v28, 0, 4, v30);
  }
  uint64_t v34 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
  *((unsigned char *)v28 + *(int *)(v34 + 20)) = *((unsigned char *)v29 + *(int *)(v34 + 20));
  uint64_t v35 = v23[10];
  uint64_t v36 = (_OWORD *)(a1 + v35);
  uint64_t v37 = (_OWORD *)(v22 + v35);
  long long v38 = v37[1];
  _OWORD *v36 = *v37;
  v36[1] = v38;
  return a1;
}

uint64_t sub_253CD5D8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  uint64_t v49 = *(void *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFFE0();
  uint64_t v11 = *(void *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40))(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_253DEFE20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = sub_253BDEDD8(&qword_269D7D680);
  int v20 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  int v21 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (v20)
  {
    if (!v21)
    {
      uint64_t v22 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v22))
      {
        uint64_t v23 = sub_253BDEDD8(&qword_269D7D698);
        memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v17, v18, v6);
          uint64_t v28 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
          *((unsigned char *)v17 + *(int *)(v28 + 20)) = *((unsigned char *)v18 + *(int *)(v28 + 20));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v17, v18, v10);
        }
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v22);
      }
LABEL_25:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v17, 0, 1, v19);
      goto LABEL_26;
    }
    goto LABEL_7;
  }
  if (v21)
  {
    sub_253BEFAC0((uint64_t)v17, &qword_269D7D680);
LABEL_7:
    uint64_t v24 = _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa(0);
LABEL_8:
    memcpy(v17, v18, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_26;
  }
  uint64_t v19 = _s18TaskDefinitionThinO28TaskFinalResolutionValueThinOMa(0);
  int v25 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v17, 1, v19);
  int v26 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v18, 1, v19);
  if (v25)
  {
    if (!v26)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v17, v18, v6);
        uint64_t v27 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
        *((unsigned char *)v17 + *(int *)(v27 + 20)) = *((unsigned char *)v18 + *(int *)(v27 + 20));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v17, v18, v10);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_25;
    }
    goto LABEL_17;
  }
  if (v26)
  {
    sub_253CC39A0();
LABEL_17:
    uint64_t v24 = sub_253BDEDD8(&qword_269D7D698);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_253CC39A0();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      (*(void (**)(void *, const void *, uint64_t))(v49 + 32))(v17, v18, v6);
      uint64_t v29 = _s18TaskDefinitionThinO14TaskActionThinVMa(0);
      *((unsigned char *)v17 + *(int *)(v29 + 20)) = *((unsigned char *)v18 + *(int *)(v29 + 20));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v17, v18, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_26:
  uint64_t v30 = a3[9];
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (const void *)(a2 + v30);
  uint64_t v33 = sub_253BDEDD8(&qword_269D7D678);
  int v34 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v31, 4, v33);
  int v35 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v32, 4, v33);
  if (v34)
  {
    if (!v35)
    {
      uint64_t v36 = sub_253DF00F0();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v32, 2, v36))
      {
        uint64_t v37 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
        memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v31, v32, v36);
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v31, 0, 2, v36);
      }
      uint64_t v41 = (uint64_t)v31;
      uint64_t v42 = 4;
      goto LABEL_39;
    }
    goto LABEL_32;
  }
  if (v35)
  {
    sub_253BEFAC0((uint64_t)v31, &qword_269D7D678);
LABEL_32:
    uint64_t v38 = _s18TaskDefinitionThinO14TaskStatusThinOMa(0);
    goto LABEL_33;
  }
  uint64_t v33 = sub_253DF00F0();
  int v39 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v31, 2, v33);
  int v40 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v32, 2, v33);
  if (v39)
  {
    if (!v40)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      uint64_t v41 = (uint64_t)v31;
      uint64_t v42 = 2;
LABEL_39:
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v41, 0, v42, v33);
      goto LABEL_40;
    }
  }
  else
  {
    uint64_t v48 = *(void *)(v33 - 8);
    if (!v40)
    {
      (*(void (**)(void *, const void *, uint64_t))(v48 + 40))(v31, v32, v33);
      goto LABEL_40;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v31, v33);
  }
  uint64_t v38 = _s18TaskDefinitionThinO21TaskFailureReasonThinOMa(0);
LABEL_33:
  memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
LABEL_40:
  uint64_t v43 = _s18TaskDefinitionThinO15TaskOutcomeThinVMa(0);
  *((unsigned char *)v31 + *(int *)(v43 + 20)) = *((unsigned char *)v32 + *(int *)(v43 + 20));
  uint64_t v44 = a3[10];
  uint64_t v45 = a1 + v44;
  uint64_t v46 = a2 + v44;
  *(unsigned char *)uint64_t v45 = *(unsigned char *)v46;
  *(unsigned char *)(v45 + 8) = *(unsigned char *)(v46 + 8);
  *(void *)(v45 + 16) = *(void *)(v46 + 16);
  swift_bridgeObjectRelease();
  *(void *)(v45 + 24) = *(void *)(v46 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_253CD648C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CD64A0);
}

uint64_t sub_253CD64A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CD64E0(a1, a2, a3, (void (*)(void))_s18TaskDefinitionThinO15TaskContextThinVMa, (void (*)(void))_s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa, _s18TaskDefinitionThinO15TaskOutcomeThinVMa);
}

uint64_t sub_253CD64E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(void), uint64_t (*a6)(void))
{
  sub_253CD9CC0();
  sub_253DEFE90();
  sub_253C16A18();
  if (*(_DWORD *)(v12 + 84) == v6)
  {
    uint64_t v13 = sub_253C8F5BC();
LABEL_15:
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v13, v6, v14);
  }
  sub_253DEFFE0();
  sub_253C16A18();
  if (*(_DWORD *)(v15 + 84) == v6)
  {
    sub_253CD9BDC();
LABEL_14:
    uint64_t v13 = v7 + v16;
    goto LABEL_15;
  }
  a4(0);
  sub_253C16A18();
  if (*(_DWORD *)(v18 + 84) == v6)
  {
    uint64_t v14 = v17;
    uint64_t v16 = v8[6];
    goto LABEL_14;
  }
  if (v6 != 0x7FFFFFFF)
  {
    a5(0);
    sub_253C16A18();
    if (*(_DWORD *)(v22 + 84) == v6)
    {
      uint64_t v14 = v21;
      uint64_t v16 = v8[8];
    }
    else
    {
      uint64_t v14 = a6(0);
      uint64_t v16 = v8[9];
    }
    goto LABEL_14;
  }
  unint64_t v19 = *(void *)(v7 + v8[7]);
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

uint64_t sub_253CD660C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CD6620);
}

void sub_253CD6620()
{
}

void sub_253CD6660()
{
  sub_253C8F550();
  unint64_t v1 = v0;
  unint64_t v3 = v2;
  int v5 = v4;
  uint64_t v7 = v6;
  int v9 = v8;
  int v11 = v10;
  uint64_t v13 = v12;
  sub_253DEFE90();
  sub_253C16A18();
  if (*(_DWORD *)(v14 + 84) == v9)
  {
    sub_253C8F27C();
  }
  else
  {
    sub_253DEFFE0();
    sub_253C16A18();
    if (*(_DWORD *)(v15 + 84) == v9)
    {
      sub_253CD9AC0();
    }
    else
    {
      v5(0);
      sub_253C16A18();
      if (*(_DWORD *)(v16 + 84) != v9)
      {
        if (v9 == 0x7FFFFFFF)
        {
          *(void *)(v13 + *(int *)(v7 + 28)) = (v11 - 1);
          sub_253C8F44C();
          return;
        }
        v3(0);
        sub_253C16A18();
        if (*(_DWORD *)(v17 + 84) != v9) {
          v1(0);
        }
      }
    }
  }
  sub_253C8F1EC();
  sub_253C8F44C();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v18, v19, v20, v21);
}

uint64_t sub_253CD6790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CD67D0(a1, a2, a3, MEMORY[0x263F07490], _s18TaskDefinitionThinO28TaskFinalResolutionStateThinOMa, _s18TaskDefinitionThinO15TaskOutcomeThinVMa);
}

uint64_t sub_253CD67D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t), uint64_t (*a6)(uint64_t))
{
  sub_253CD95CC();
  uint64_t result = sub_253DEFE90();
  if (v10 <= 0x3F)
  {
    uint64_t result = sub_253DEFFE0();
    if (v11 <= 0x3F)
    {
      uint64_t result = a4(319);
      if (v12 <= 0x3F)
      {
        uint64_t result = a5(319);
        if (v13 <= 0x3F)
        {
          uint64_t result = a6(319);
          if (v14 <= 0x3F)
          {
            sub_253CD8ED4(result);
            swift_initStructMetadata();
            return sub_253CD930C();
          }
        }
      }
    }
  }
  return result;
}

unint64_t sub_253CD6954()
{
  unint64_t result = qword_269D7D6B8;
  if (!qword_269D7D6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D6B8);
  }
  return result;
}

unint64_t sub_253CD69A0()
{
  unint64_t result = qword_269D7D6F0;
  if (!qword_269D7D6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D6F0);
  }
  return result;
}

unint64_t sub_253CD69EC()
{
  unint64_t result = qword_269D7D700;
  if (!qword_269D7D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D700);
  }
  return result;
}

unint64_t sub_253CD6A38()
{
  unint64_t result = qword_269D7D730;
  if (!qword_269D7D730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D730);
  }
  return result;
}

unint64_t sub_253CD6A84()
{
  unint64_t result = qword_269D7D738;
  if (!qword_269D7D738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D738);
  }
  return result;
}

unint64_t sub_253CD6AD0()
{
  unint64_t result = qword_269D7D748;
  if (!qword_269D7D748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D748);
  }
  return result;
}

unint64_t sub_253CD6B1C()
{
  unint64_t result = qword_269D7D790;
  if (!qword_269D7D790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D790);
  }
  return result;
}

unint64_t sub_253CD6B68()
{
  unint64_t result = qword_269D7D798;
  if (!qword_269D7D798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D798);
  }
  return result;
}

unint64_t sub_253CD6BB4()
{
  unint64_t result = qword_269D7D7A0;
  if (!qword_269D7D7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D7A0);
  }
  return result;
}

unint64_t sub_253CD6C00()
{
  unint64_t result = qword_269D7D7A8;
  if (!qword_269D7D7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D7A8);
  }
  return result;
}

unint64_t sub_253CD6C4C()
{
  unint64_t result = qword_269D7D7D8;
  if (!qword_269D7D7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D7D8);
  }
  return result;
}

unint64_t sub_253CD6C98()
{
  unint64_t result = qword_269D7D810;
  if (!qword_269D7D810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D810);
  }
  return result;
}

unint64_t sub_253CD6CE4()
{
  unint64_t result = qword_269D7D818;
  if (!qword_269D7D818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D818);
  }
  return result;
}

unint64_t sub_253CD6D30()
{
  unint64_t result = qword_269D7D820;
  if (!qword_269D7D820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D820);
  }
  return result;
}

unint64_t sub_253CD6D7C()
{
  unint64_t result = qword_269D7D858;
  if (!qword_269D7D858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D858);
  }
  return result;
}

unint64_t sub_253CD6DC8()
{
  unint64_t result = qword_269D7D8A8;
  if (!qword_269D7D8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D8A8);
  }
  return result;
}

unint64_t sub_253CD6E14()
{
  unint64_t result = qword_269D7D8B0;
  if (!qword_269D7D8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D8B0);
  }
  return result;
}

unint64_t sub_253CD6E60()
{
  unint64_t result = qword_269D7D8B8;
  if (!qword_269D7D8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D8B8);
  }
  return result;
}

unint64_t sub_253CD6EAC()
{
  unint64_t result = qword_269D7D8C0;
  if (!qword_269D7D8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D8C0);
  }
  return result;
}

unint64_t sub_253CD6EF8()
{
  unint64_t result = qword_269D7D8D0;
  if (!qword_269D7D8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D8D0);
  }
  return result;
}

unint64_t sub_253CD6F44()
{
  unint64_t result = qword_269D7D8D8;
  if (!qword_269D7D8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D8D8);
  }
  return result;
}

unint64_t sub_253CD6F90()
{
  unint64_t result = qword_269D7D920;
  if (!qword_269D7D920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D920);
  }
  return result;
}

uint64_t sub_253CD6FDC(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_253C0BFF8(&qword_269D7D6C8);
    sub_253CC3794(a2, (void (*)(uint64_t))_s18TaskDefinitionThinO23CandidateEvaluationThinVMa);
    sub_253C10B60();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_253CD706C()
{
  unint64_t result = qword_269D7D960;
  if (!qword_269D7D960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D960);
  }
  return result;
}

ValueMetadata *_s18TaskDefinitionThinO23CandidateEvaluationThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO23CandidateEvaluationThinV10CodingKeysON;
}

uint64_t _s10TaskStatusO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_253CD9350(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 5);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_253CD9350((*a1 | (v4 << 8)) - 5);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 5);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return sub_253CD9350(v8);
}

unsigned char *_s10TaskStatusO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_253CD9330((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_253CD9318((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CD7208);
      case 4:
        unint64_t result = (unsigned char *)sub_253CD9320((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_253CD9328(result, a2 + 4);
        break;
    }
  }
  return result;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO17UnknownCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO17UnknownCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO25InferredSuccessCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO25InferredSuccessCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO25InferredFailureCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO25InferredFailureCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO17AbandonCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO17AbandonCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskStatusThinO16CancelCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskStatusThinO16CancelCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO15TaskOutcomeThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO15TaskOutcomeThinV10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO18CompleteCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO18CompleteCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO20IncompleteCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO28TaskFinalResolutionStateThinO20IncompleteCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO15TaskContextThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO15TaskContextThinV10CodingKeysON;
}

uint64_t _s24ConfirmationPromptResultOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_253CD9350(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_253CD9350((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return sub_253CD9350(v8);
}

unsigned char *_s24ConfirmationPromptResultOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_253CD9330((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_253CD9318((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CD7420);
      case 4:
        unint64_t result = (unsigned char *)sub_253CD9320((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_253CD9328(result, a2 + 2);
        break;
    }
  }
  return result;
}

ValueMetadata *_s18TaskDefinitionThinO21TaskFailureReasonThinO10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO21TaskFailureReasonThinO10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO21TaskFailureReasonThinO17UnknownCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO21TaskFailureReasonThinO17UnknownCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO21TaskFailureReasonThinO26ExecutionFailureCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO21TaskFailureReasonThinO26ExecutionFailureCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO21TaskFailureReasonThinO25CriticalFailureCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO21TaskFailureReasonThinO25CriticalFailureCodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO28TaskFinalResolutionValueThinO10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO28TaskFinalResolutionValueThinO10CodingKeysON;
}

ValueMetadata *_s18TaskDefinitionThinO28TaskFinalResolutionValueThinO15ValueCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO28TaskFinalResolutionValueThinO15ValueCodingKeysON;
}

uint64_t _s24TaskFinalResolutionStateO18CompleteCodingKeysOwet_0(unsigned int *a1, int a2)
{
  if (!a2) {
    return sub_253BE181C();
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s24TaskFinalResolutionStateO18CompleteCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x253CD7590);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s18TaskDefinitionThinO28TaskFinalResolutionValueThinO16ActionCodingKeysOMa()
{
  return &_s18TaskDefinitionThinO28TaskFinalResolutionValueThinO16ActionCodingKeysON;
}

uint64_t _s24TaskFinalResolutionStateO10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_253CD9350(-1);
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 2);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_253CD9350((*a1 | (v4 << 8)) - 2);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_253CD9350((*a1 | (v4 << 8)) - 2);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return sub_253CD9350(v8);
}

unsigned char *_s24TaskFinalResolutionStateO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_253CD9330((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_253CD9318((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CD7708);
      case 4:
        unint64_t result = (unsigned char *)sub_253CD9320((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_253CD9328(result, a2 + 1);
        break;
    }
  }
  return result;
}

ValueMetadata *_s18TaskDefinitionThinO14TaskActionThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO14TaskActionThinV10CodingKeysON;
}

uint64_t _s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 6) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v5 = v6 - 7;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *_s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CD7894);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysOMa()
{
  return &_s18TaskDefinitionThinO18TaskEvaluationThinV10CodingKeysON;
}

unint64_t sub_253CD78D0()
{
  unint64_t result = qword_269D7D968;
  if (!qword_269D7D968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D968);
  }
  return result;
}

unint64_t sub_253CD7920()
{
  unint64_t result = qword_269D7D970;
  if (!qword_269D7D970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D970);
  }
  return result;
}

unint64_t sub_253CD7970()
{
  unint64_t result = qword_269D7D978;
  if (!qword_269D7D978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D978);
  }
  return result;
}

unint64_t sub_253CD79C0()
{
  unint64_t result = qword_269D7D980;
  if (!qword_269D7D980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D980);
  }
  return result;
}

unint64_t sub_253CD7A10()
{
  unint64_t result = qword_269D7D988;
  if (!qword_269D7D988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D988);
  }
  return result;
}

unint64_t sub_253CD7A60()
{
  unint64_t result = qword_269D7D990;
  if (!qword_269D7D990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D990);
  }
  return result;
}

unint64_t sub_253CD7AB0()
{
  unint64_t result = qword_269D7D998;
  if (!qword_269D7D998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D998);
  }
  return result;
}

unint64_t sub_253CD7B00()
{
  unint64_t result = qword_269D7D9A0;
  if (!qword_269D7D9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9A0);
  }
  return result;
}

unint64_t sub_253CD7B50()
{
  unint64_t result = qword_269D7D9A8;
  if (!qword_269D7D9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9A8);
  }
  return result;
}

unint64_t sub_253CD7BA0()
{
  unint64_t result = qword_269D7D9B0;
  if (!qword_269D7D9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9B0);
  }
  return result;
}

unint64_t sub_253CD7BF0()
{
  unint64_t result = qword_269D7D9B8;
  if (!qword_269D7D9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9B8);
  }
  return result;
}

unint64_t sub_253CD7C40()
{
  unint64_t result = qword_269D7D9C0;
  if (!qword_269D7D9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9C0);
  }
  return result;
}

unint64_t sub_253CD7C90()
{
  unint64_t result = qword_269D7D9C8;
  if (!qword_269D7D9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9C8);
  }
  return result;
}

unint64_t sub_253CD7CE0()
{
  unint64_t result = qword_269D7D9D0;
  if (!qword_269D7D9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9D0);
  }
  return result;
}

unint64_t sub_253CD7D30()
{
  unint64_t result = qword_269D7D9D8;
  if (!qword_269D7D9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9D8);
  }
  return result;
}

unint64_t sub_253CD7D80()
{
  unint64_t result = qword_269D7D9E0;
  if (!qword_269D7D9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9E0);
  }
  return result;
}

unint64_t sub_253CD7DD0()
{
  unint64_t result = qword_269D7D9E8;
  if (!qword_269D7D9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9E8);
  }
  return result;
}

unint64_t sub_253CD7E20()
{
  unint64_t result = qword_269D7D9F0;
  if (!qword_269D7D9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9F0);
  }
  return result;
}

unint64_t sub_253CD7E70()
{
  unint64_t result = qword_269D7D9F8;
  if (!qword_269D7D9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7D9F8);
  }
  return result;
}

unint64_t sub_253CD7EC0()
{
  unint64_t result = qword_269D7DA00;
  if (!qword_269D7DA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA00);
  }
  return result;
}

unint64_t sub_253CD7F10()
{
  unint64_t result = qword_269D7DA08;
  if (!qword_269D7DA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA08);
  }
  return result;
}

unint64_t sub_253CD7F60()
{
  unint64_t result = qword_269D7DA10;
  if (!qword_269D7DA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA10);
  }
  return result;
}

unint64_t sub_253CD7FB0()
{
  unint64_t result = qword_269D7DA18;
  if (!qword_269D7DA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA18);
  }
  return result;
}

unint64_t sub_253CD8000()
{
  unint64_t result = qword_269D7DA20;
  if (!qword_269D7DA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA20);
  }
  return result;
}

unint64_t sub_253CD8050()
{
  unint64_t result = qword_269D7DA28;
  if (!qword_269D7DA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA28);
  }
  return result;
}

unint64_t sub_253CD80A0()
{
  unint64_t result = qword_269D7DA30;
  if (!qword_269D7DA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA30);
  }
  return result;
}

unint64_t sub_253CD80F0()
{
  unint64_t result = qword_269D7DA38;
  if (!qword_269D7DA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA38);
  }
  return result;
}

unint64_t sub_253CD8140()
{
  unint64_t result = qword_269D7DA40;
  if (!qword_269D7DA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA40);
  }
  return result;
}

unint64_t sub_253CD8190()
{
  unint64_t result = qword_269D7DA48;
  if (!qword_269D7DA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA48);
  }
  return result;
}

unint64_t sub_253CD81E0()
{
  unint64_t result = qword_269D7DA50;
  if (!qword_269D7DA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA50);
  }
  return result;
}

unint64_t sub_253CD8230()
{
  unint64_t result = qword_269D7DA58;
  if (!qword_269D7DA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA58);
  }
  return result;
}

unint64_t sub_253CD8280()
{
  unint64_t result = qword_269D7DA60;
  if (!qword_269D7DA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA60);
  }
  return result;
}

unint64_t sub_253CD82D0()
{
  unint64_t result = qword_269D7DA68;
  if (!qword_269D7DA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA68);
  }
  return result;
}

unint64_t sub_253CD8320()
{
  unint64_t result = qword_269D7DA70;
  if (!qword_269D7DA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA70);
  }
  return result;
}

unint64_t sub_253CD8370()
{
  unint64_t result = qword_269D7DA78;
  if (!qword_269D7DA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA78);
  }
  return result;
}

unint64_t sub_253CD83C0()
{
  unint64_t result = qword_269D7DA80;
  if (!qword_269D7DA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA80);
  }
  return result;
}

unint64_t sub_253CD8410()
{
  unint64_t result = qword_269D7DA88;
  if (!qword_269D7DA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA88);
  }
  return result;
}

unint64_t sub_253CD8460()
{
  unint64_t result = qword_269D7DA90;
  if (!qword_269D7DA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA90);
  }
  return result;
}

unint64_t sub_253CD84B0()
{
  unint64_t result = qword_269D7DA98;
  if (!qword_269D7DA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DA98);
  }
  return result;
}

unint64_t sub_253CD8500()
{
  unint64_t result = qword_269D7DAA0;
  if (!qword_269D7DAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAA0);
  }
  return result;
}

unint64_t sub_253CD8550()
{
  unint64_t result = qword_269D7DAA8;
  if (!qword_269D7DAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAA8);
  }
  return result;
}

unint64_t sub_253CD85A0()
{
  unint64_t result = qword_269D7DAB0;
  if (!qword_269D7DAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAB0);
  }
  return result;
}

unint64_t sub_253CD85F0()
{
  unint64_t result = qword_269D7DAB8;
  if (!qword_269D7DAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAB8);
  }
  return result;
}

unint64_t sub_253CD8640()
{
  unint64_t result = qword_269D7DAC0;
  if (!qword_269D7DAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAC0);
  }
  return result;
}

unint64_t sub_253CD8690()
{
  unint64_t result = qword_269D7DAC8;
  if (!qword_269D7DAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAC8);
  }
  return result;
}

unint64_t sub_253CD86E0()
{
  unint64_t result = qword_269D7DAD0;
  if (!qword_269D7DAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAD0);
  }
  return result;
}

unint64_t sub_253CD8730()
{
  unint64_t result = qword_269D7DAD8;
  if (!qword_269D7DAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAD8);
  }
  return result;
}

unint64_t sub_253CD8780()
{
  unint64_t result = qword_269D7DAE0;
  if (!qword_269D7DAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAE0);
  }
  return result;
}

unint64_t sub_253CD87D0()
{
  unint64_t result = qword_269D7DAE8;
  if (!qword_269D7DAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAE8);
  }
  return result;
}

unint64_t sub_253CD8820()
{
  unint64_t result = qword_269D7DAF0;
  if (!qword_269D7DAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAF0);
  }
  return result;
}

unint64_t sub_253CD8870()
{
  unint64_t result = qword_269D7DAF8;
  if (!qword_269D7DAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DAF8);
  }
  return result;
}

unint64_t sub_253CD88C0()
{
  unint64_t result = qword_269D7DB00;
  if (!qword_269D7DB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DB00);
  }
  return result;
}

unint64_t sub_253CD8910()
{
  unint64_t result = qword_269D7DB08;
  if (!qword_269D7DB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DB08);
  }
  return result;
}

unint64_t sub_253CD8960()
{
  unint64_t result = qword_269D7DB10;
  if (!qword_269D7DB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DB10);
  }
  return result;
}

unint64_t sub_253CD89B0()
{
  unint64_t result = qword_269D7DB18;
  if (!qword_269D7DB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DB18);
  }
  return result;
}

unint64_t sub_253CD8A00()
{
  unint64_t result = qword_269D7DB20;
  if (!qword_269D7DB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DB20);
  }
  return result;
}

void sub_253CD8AB8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void *sub_253CD8AD4()
{
  return sub_253BDF5F8(v0, v1);
}

uint64_t sub_253CD8AF4()
{
  return sub_253DF5C20();
}

void sub_253CD8B20(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_253CD8B3C()
{
  return v0;
}

uint64_t sub_253CD8B54()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD8B74()
{
  return sub_253DF5950();
}

uint64_t sub_253CD8B90()
{
  return sub_253DF5C90();
}

void sub_253CD8BAC(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_253CD8BC8(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_253CD8BE4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_253CD8C00()
{
  return v0;
}

uint64_t sub_253CD8C18()
{
  return sub_253DF5BC0();
}

uint64_t sub_253CD8C54()
{
  return sub_253DF5BC0();
}

void sub_253CD8C8C(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_253CD8CA8()
{
  return sub_253DF5BC0();
}

uint64_t sub_253CD8CC4()
{
  return sub_253DF5BC0();
}

uint64_t sub_253CD8CE0()
{
  return sub_253DF5C20();
}

uint64_t sub_253CD8D0C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_253CD8D2C()
{
  return sub_253DF5C20();
}

uint64_t sub_253CD8D44()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD8D64()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD8D84(uint64_t a1)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

void sub_253CD8DA4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void *sub_253CD8DE0(void *a1)
{
  return sub_253BDF5F8(a1, v1);
}

uint64_t sub_253CD8DFC()
{
  return v0;
}

uint64_t sub_253CD8E14()
{
  return v0;
}

uint64_t sub_253CD8E28()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_253CD8E3C()
{
  return 0;
}

void *sub_253CD8E50(void *a1)
{
  return sub_253BDF5F8(a1, v1);
}

uint64_t sub_253CD8E8C()
{
  return type metadata accessor for FeedbackLearning.CandidateParameter(0);
}

uint64_t sub_253CD8EB4()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD8ED4(uint64_t a1)
{
  return a1 - 8;
}

uint64_t sub_253CD8EEC()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD8F0C()
{
  return 0;
}

uint64_t sub_253CD8F24(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(v3 - 72) = *(unsigned __int8 *)(v2 + 32);
  return sub_253CD01CC(1, a2, v2, v2 + 32, 0, (2 * a2) | 1);
}

uint64_t sub_253CD8F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  return sub_253CD01CC(1, a2, v6, a4, 0, a6);
}

uint64_t sub_253CD8F84()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD8FA8()
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 4, v0);
}

uint64_t sub_253CD8FC4()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CD8FF8()
{
  return sub_253DF5B50();
}

uint64_t sub_253CD902C()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CD9060()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CD9094(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 - 200) = *(unsigned __int8 *)(v2 + 32);
  return sub_253CD01CC(1, a2, v2, v2 + 32, 0, (2 * a2) | 1);
}

uint64_t sub_253CD90C8()
{
  return swift_bridgeObjectRelease();
}

void *sub_253CD90E0(void *a1)
{
  return sub_253BDF5F8(a1, v1);
}

uint64_t sub_253CD90FC()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CD912C()
{
  *(void *)(v5 - 184) = v2;
  *(void *)(v5 - 176) = v4;
  *(void *)(v5 - 192) = v0;
  *(void *)(v5 - 168) = v3;
  *(void *)(v5 - 88) = v1;
  return sub_253DF5BB0();
}

uint64_t sub_253CD9158()
{
  return sub_253DF5BC0();
}

uint64_t sub_253CD9174()
{
  return sub_253DF5BC0();
}

uint64_t sub_253CD91A0()
{
  return v0;
}

uint64_t sub_253CD91B4()
{
  return v0;
}

uint64_t sub_253CD91C8()
{
  return v0;
}

uint64_t sub_253CD91F0()
{
  return sub_253DF5C20();
}

uint64_t sub_253CD921C()
{
  return sub_253DF5C20();
}

uint64_t sub_253CD9248()
{
  return sub_253DF5C20();
}

uint64_t sub_253CD9274()
{
  return sub_253DF5BD0();
}

uint64_t sub_253CD92A0()
{
  return sub_253DF5E30();
}

uint64_t sub_253CD92D4@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for FeedbackLearning.CandidateParameter(0);
}

uint64_t sub_253CD930C()
{
  return 0;
}

uint64_t sub_253CD9318@<X0>(uint64_t result@<X0>, __int16 a2@<W8>)
{
  *(_WORD *)(result + 1) = a2;
  return result;
}

uint64_t sub_253CD9320@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 1) = a2;
  return result;
}

unsigned char *sub_253CD9328@<X0>(unsigned char *result@<X0>, char a2@<W8>)
{
  *unint64_t result = a2;
  return result;
}

uint64_t sub_253CD9330@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  *(unsigned char *)(result + 1) = a2;
  return result;
}

uint64_t sub_253CD9338()
{
  return v0;
}

uint64_t sub_253CD9350@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

void sub_253CD9358(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 88) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_253CD9374(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_253CD9390(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_253CD93AC()
{
  return sub_253DEFFE0();
}

uint64_t sub_253CD93D4()
{
  return sub_253DEFFE0();
}

uint64_t sub_253CD9408()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CD9430()
{
  *(void *)(v4 - 192) = v2;
  *(void *)(v4 - 184) = v1;
  *(void *)(v4 - 208) = v3;
  *(void *)(v4 - 88) = v0;
  return sub_253DF5BB0();
}

uint64_t sub_253CD9458()
{
  *(void *)(v3 - 248) = v0;
  *(void *)(v3 - 240) = v2;
  *(void *)(v3 - 96) = v1;
  return sub_253DF5BB0();
}

uint64_t sub_253CD947C()
{
  *(void *)(v3 - 168) = v0;
  *(void *)(v3 - 160) = v1;
  *(void *)(v3 - 88) = v2;
  return sub_253DF5BB0();
}

uint64_t sub_253CD94A0()
{
  return sub_253DF5E30();
}

void sub_253CD94C4()
{
  *(void *)(v2 - 96) = v0;
  *(void *)(v2 - 88) = v1;
}

uint64_t sub_253CD94D0()
{
  return sub_253DF5E30();
}

uint64_t sub_253CD9500()
{
  *uint64_t v0 = v1;
  return sub_253DF5B40();
}

uint64_t sub_253CD9524()
{
  *uint64_t v1 = v0;
  return sub_253DF5B40();
}

uint64_t sub_253CD9548()
{
  return sub_253DF5960();
}

uint64_t sub_253CD956C()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD95A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  return sub_253CD01CC(1, a2, v6, a4, 0, a6);
}

uint64_t sub_253CD95CC()
{
  return 319;
}

uint64_t sub_253CD95E4()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD9608()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD962C()
{
  return sub_253DF5E30();
}

uint64_t sub_253CD9650()
{
  return sub_253DF5B30();
}

uint64_t sub_253CD9674()
{
  return v0;
}

uint64_t sub_253CD9680()
{
  return v0;
}

uint64_t sub_253CD9690()
{
  return v0;
}

uint64_t sub_253CD969C()
{
  return v0;
}

uint64_t sub_253CD96A8()
{
  return v0;
}

uint64_t sub_253CD96B4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 - 160);
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v4, 1, 1, a1);
}

uint64_t sub_253CD96D8()
{
  return sub_253DF5E30();
}

uint64_t sub_253CD9708()
{
  *(unsigned char *)(v0 - 67) = 2;
  return sub_253DF26C0();
}

uint64_t sub_253CD972C()
{
  return sub_253DF5E40();
}

uint64_t sub_253CD9760()
{
  return sub_253DF5DB0();
}

unint64_t sub_253CD9778(uint64_t a1)
{
  *(unsigned char *)(v2 - 66) = *(unsigned char *)(v1 + *(int *)(a1 + 20));
  *(unsigned char *)(v2 - 67) = 1;
  return sub_253CC4040();
}

uint64_t sub_253CD979C()
{
  return sub_253DF5B30();
}

void sub_253CD97C0()
{
  *(void *)(v2 - 88) = v1;
  *(void *)(v2 - 112) = v0;
}

uint64_t sub_253CD97D0()
{
  *(unsigned char *)(v0 - 66) = 1;
  return type metadata accessor for FeedbackLearning.CandidateParameter(0);
}

uint64_t sub_253CD9800()
{
  return sub_253CC392C();
}

void *sub_253CD9818(void *a1)
{
  return sub_253BDF5F8(a1, v1);
}

uint64_t sub_253CD9834()
{
  return sub_253DF58F0();
}

uint64_t sub_253CD9854()
{
  return v0;
}

uint64_t sub_253CD9868()
{
  return sub_253DF5E40();
}

unint64_t sub_253CD9888()
{
  return 0xEF6572756C696146;
}

unint64_t sub_253CD98A8()
{
  return 0xD000000000000010;
}

uint64_t sub_253CD98BC()
{
  *uint64_t v0 = v1;
  return sub_253DF5B40();
}

uint64_t sub_253CD98F0()
{
  return sub_253DF5E40();
}

uint64_t sub_253CD9910()
{
  return sub_253DF5C20();
}

uint64_t sub_253CD9930()
{
  return v0;
}

uint64_t sub_253CD9944()
{
  return 0x6465727265666E69;
}

uint64_t sub_253CD9958()
{
  return 0;
}

uint64_t sub_253CD9964()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253CD9984()
{
  return v0;
}

uint64_t sub_253CD9998()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253CD99B8()
{
  return 0;
}

uint64_t sub_253CD99E0()
{
  return v0;
}

uint64_t sub_253CD99F4()
{
  return v0;
}

void sub_253CD9A00()
{
  *(unsigned char *)(v0 - 67) = 2;
}

uint64_t sub_253CD9A0C()
{
  return v0;
}

uint64_t sub_253CD9A18()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_253CD9A2C()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_253CD9A40()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_253CD9A54()
{
  return *(void *)(v0 - 96);
}

uint64_t sub_253CD9A68(uint64_t a1)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 4, a1);
}

uint64_t sub_253CD9A88(uint64_t a1)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v1, 0, 1, a1);
}

uint64_t sub_253CD9AA8()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CD9ACC()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CD9AF8()
{
  return v0;
}

uint64_t sub_253CD9B0C()
{
  return v0;
}

uint64_t sub_253CD9B2C()
{
  *(unsigned char *)(v0 - 65) = 0;
  return 0;
}

uint64_t sub_253CD9B44()
{
  return sub_253DF5E30();
}

uint64_t sub_253CD9B64()
{
  return sub_253DF5E40();
}

uint64_t sub_253CD9B84(uint64_t a1)
{
  unsigned int v3 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, v1, a1);
  if (v3 >= 2) {
    return v3 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_253CD9BB0(uint64_t a1)
{
  unsigned int v3 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, v1, a1);
  if (v3 >= 5) {
    return v3 - 4;
  }
  else {
    return 0;
  }
}

uint64_t sub_253CD9BE8@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 104) = a1;
  return 0;
}

uint64_t sub_253CD9BF4()
{
  return v0;
}

uint64_t sub_253CD9C08@<X0>(int a1@<W8>)
{
  return ((a1 + 2147483646) & 0x7FFFFFFFu) + 1;
}

uint64_t sub_253CD9C1C@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 112) = a1;
  return 0;
}

uint64_t sub_253CD9C6C()
{
  return v0;
}

uint64_t sub_253CD9C80()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253CD9CA0@<X0>(uint64_t a1@<X8>)
{
  unsigned int v2 = *(unsigned __int8 *)(v1 + a1);
  if (v2 >= 4) {
    return v2 - 3;
  }
  else {
    return 0;
  }
}

uint64_t sub_253CD9CC0()
{
  return 0;
}

uint64_t sub_253CD9CE0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_253CD9D00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = _s23StatementFailureOutcomeVMa(0);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253C5673C();
  uint64_t v8 = _s23StatementSuccessOutcomeVMa(v7);
  uint64_t v9 = sub_253BDF9FC(v8);
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _s23StatementCreatedOutcomeVMa(0);
  uint64_t v13 = sub_253BDF9FC(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_253C63598();
  _s20TaskStatementOutcomeOMa(v14);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v15);
  sub_253C16A90();
  sub_253CDE66C(v1, v3, (void (*)(void))_s20TaskStatementOutcomeOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_253CDE5F0(v3, (uint64_t)v11, (void (*)(void))_s23StatementSuccessOutcomeVMa);
      sub_253CDE66C((uint64_t)v11, a1, (void (*)(void))_s28StatementResolutionReferenceOMa);
      uint64_t v17 = _s23StatementSuccessOutcomeVMa;
      uint64_t v18 = (uint64_t)v11;
    }
    else
    {
      sub_253CDE5F0(v3, v1, (void (*)(void))_s23StatementFailureOutcomeVMa);
      sub_253CDE66C(v1, a1, (void (*)(void))_s28StatementResolutionReferenceOMa);
      uint64_t v17 = _s23StatementFailureOutcomeVMa;
      uint64_t v18 = v1;
    }
    return sub_253CDE59C(v18, (void (*)(void))v17);
  }
  else
  {
    sub_253CDE5F0(v3, v2, (void (*)(void))_s23StatementCreatedOutcomeVMa);
    return sub_253CDE5F0(v2, a1, (void (*)(void))_s28StatementResolutionReferenceOMa);
  }
}

void sub_253CD9F40()
{
  sub_253C1CED0();
  uint64_t v30 = v3;
  uint64_t v31 = v4;
  sub_253DEFE90();
  sub_253C0F830();
  uint64_t v28 = v6;
  uint64_t v29 = v5;
  MEMORY[0x270FA5388](v5);
  sub_253C8F07C();
  uint64_t v7 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_253C63598();
  _s28StatementResolutionReferenceOMa(v11);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  sub_253CA0118();
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = sub_253BDEDD8(&qword_269D7DB40);
  uint64_t v17 = sub_253BDF9FC(v16);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (uint64_t)&v20[*(int *)(v18 + 56)];
  sub_253CDE66C(v30, (uint64_t)v20, (void (*)(void))_s28StatementResolutionReferenceOMa);
  sub_253CDE66C(v31, v21, (void (*)(void))_s28StatementResolutionReferenceOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253CDE66C((uint64_t)v20, v2, (void (*)(void))_s28StatementResolutionReferenceOMa);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = v28;
      uint64_t v22 = v29;
      sub_253BEFD2C();
      v24();
      sub_253DEFE60();
      int v25 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v25(v0, v22);
      v25(v2, v22);
LABEL_9:
      sub_253CDE59C((uint64_t)v20, (void (*)(void))_s28StatementResolutionReferenceOMa);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v2, v29);
  }
  else
  {
    sub_253CDE66C((uint64_t)v20, (uint64_t)v15, (void (*)(void))_s28StatementResolutionReferenceOMa);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_253BEFD2C();
      v26();
      sub_253DEFFB0();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v27(v1, v7);
      v27((uint64_t)v15, v7);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v7);
  }
  sub_253BEFAC0((uint64_t)v20, &qword_269D7DB40);
LABEL_10:
  sub_253C1CEE8();
}

uint64_t sub_253CDA25C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x76456E6F69746361 && a2 == 0xED00006449746E65)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CDA368(char a1)
{
  if (a1) {
    return 0x76456E6F69746361;
  }
  else {
    return 0x65756C6176;
  }
}

void sub_253CDA3A8()
{
  sub_253C59954();
  uint64_t v43 = v0;
  uint64_t v44 = v1;
  uint64_t v4 = v3;
  sub_253BDEDD8(&qword_269D7DC60);
  sub_253C0F830();
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v37 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253C36350();
  sub_253DEFE90();
  sub_253C0F830();
  uint64_t v38 = v9;
  uint64_t v39 = v8;
  MEMORY[0x270FA5388](v8);
  sub_253CD8BC8(v10, v31);
  sub_253BDEDD8(&qword_269D7DC68);
  sub_253C0F830();
  uint64_t v34 = v12;
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  sub_253C598FC();
  sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v32 = v14;
  uint64_t v33 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = sub_253C3330C();
  _s28StatementResolutionReferenceOMa(v15);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253BDEDD8(&qword_269D7DC70);
  sub_253C0F830();
  uint64_t v42 = v19;
  MEMORY[0x270FA5388](v20);
  sub_253C2F37C();
  sub_253BDF5F8(v4, v4[3]);
  sub_253CE7E00();
  sub_253DF5E40();
  sub_253CDE66C(v43, (uint64_t)v18, (void (*)(void))_s28StatementResolutionReferenceOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = v38;
    uint64_t v21 = v39;
    uint64_t v23 = v36;
    sub_253BEFD2C();
    v24();
    sub_253CE7E4C();
    sub_253CE9BCC();
    sub_253CE7BB8(&qword_269D7EDD0, MEMORY[0x263F07508]);
    sub_253DF5C20();
    sub_253BEFBCC();
    v25();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
  }
  else
  {
    uint64_t v26 = v32;
    uint64_t v27 = v33;
    sub_253BEFD2C();
    v28();
    sub_253CE7E98();
    sub_253CE9BCC();
    sub_253CE7BB8(&qword_269D7CEE0, MEMORY[0x263F4BF98]);
    sub_253CE9E68();
    sub_253BEFBCC();
    v29();
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v2, v27);
  }
  sub_253BEFBCC();
  v30();
  sub_253C5993C();
}

void sub_253CDA784()
{
  sub_253C59954();
  uint64_t v4 = v3;
  uint64_t v36 = v5;
  sub_253BDEDD8(&qword_269D7DC30);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253BDFA94();
  sub_253BDEDD8(&qword_269D7DC38);
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253CD8B20(v8, v32);
  sub_253BDEDD8(&qword_269D7DC40);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = _s28StatementResolutionReferenceOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v11);
  sub_253CA0118();
  MEMORY[0x270FA5388](v12);
  sub_253CD9C44();
  MEMORY[0x270FA5388](v13);
  sub_253CE9D30();
  sub_253BDF5F8(v4, v4[3]);
  sub_253CE7E00();
  sub_253DF5E30();
  if (v1) {
    goto LABEL_8;
  }
  unint64_t v34 = v2;
  uint64_t v33 = v0;
  uint64_t v35 = v10;
  uint64_t v14 = sub_253DF5BB0();
  if (!*(void *)(v14 + 16)
    || (sub_253CE9F8C(),
        char v15 = *(unsigned char *)(v14 + 32),
        sub_253CC30E8(1, v16, v14, v14 + 32, 0, v17),
        uint64_t v19 = v18,
        unint64_t v21 = v20,
        swift_bridgeObjectRelease(),
        v19 != v21 >> 1))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v23 = v22;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v23 = v35;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    uint64_t v24 = sub_253CE9E54();
    v25(v24);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_253C0FFA4();
    v26();
LABEL_8:
    uint64_t v27 = (uint64_t)v4;
    goto LABEL_9;
  }
  if (v15)
  {
    sub_253CE7E4C();
    sub_253CD8EEC();
    sub_253DEFE90();
    sub_253CE7BB8(&qword_269D7D708, MEMORY[0x263F07508]);
    sub_253DF5BA0();
    sub_253CE9F48();
    sub_253BEFBCC();
    v28();
    swift_unknownObjectRelease();
    sub_253C0FFA4();
    v29();
    swift_storeEnumTagMultiPayload();
    unint64_t v21 = v34;
  }
  else
  {
    sub_253CE7E98();
    sub_253CD8EEC();
    sub_253DEFFE0();
    sub_253CE7BB8(&qword_269D7CF10, MEMORY[0x263F4BF98]);
    sub_253CE9EE0();
    sub_253DF5BA0();
    sub_253CD9854();
    sub_253BEFBCC();
    v30();
    swift_unknownObjectRelease();
    sub_253C0FFA4();
    v31();
    swift_storeEnumTagMultiPayload();
  }
  sub_253CDE5F0(v21, v33, (void (*)(void))_s28StatementResolutionReferenceOMa);
  sub_253CDE5F0(v33, v36, (void (*)(void))_s28StatementResolutionReferenceOMa);
  uint64_t v27 = (uint64_t)v4;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v27);
  sub_253C5993C();
}

uint64_t sub_253CDACB4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x636E657265666572 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_253CDAD48()
{
  return 0x636E657265666572;
}

uint64_t sub_253CDAD64()
{
  sub_253BDEDD8(&qword_269D7DCC0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v0);
  sub_253C16A90();
  sub_253CE9CF4();
  sub_253CE7F30();
  sub_253CE9DA0();
  _s28StatementResolutionReferenceOMa(0);
  sub_253CE7BB8(&qword_269D7DCA0, (void (*)(uint64_t))_s28StatementResolutionReferenceOMa);
  sub_253DF5C20();
  sub_253C0FDC8();
  return v1();
}

void sub_253CDAE80()
{
  sub_253C59954();
  char v3 = v2;
  uint64_t v12 = v4;
  _s28StatementResolutionReferenceOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v5);
  sub_253BDFA94();
  uint64_t v13 = v6;
  sub_253BDEDD8(&qword_269D7DCB0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_253C4BC10();
  uint64_t v9 = _s23StatementCreatedOutcomeVMa(v8);
  uint64_t v10 = sub_253BDF9FC(v9);
  MEMORY[0x270FA5388](v10);
  sub_253C2F364();
  sub_253CD90E0(v3);
  sub_253CE7F30();
  sub_253DF5E30();
  if (!v0)
  {
    sub_253CE7BB8(&qword_269D7DC88, (void (*)(uint64_t))_s28StatementResolutionReferenceOMa);
    sub_253DF5BA0();
    sub_253BEFBCC();
    v11();
    sub_253CDE5F0(v13, v1, (void (*)(void))_s28StatementResolutionReferenceOMa);
    sub_253CDE5F0(v1, v12, (void (*)(void))_s23StatementCreatedOutcomeVMa);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v3);
  sub_253C5993C();
}

uint64_t sub_253CDB068()
{
  sub_253BDEDD8(&qword_269D7DC98);
  sub_253C0F830();
  MEMORY[0x270FA5388](v1);
  sub_253CE9CF4();
  sub_253CE7EE4();
  sub_253CE9DA0();
  _s28StatementResolutionReferenceOMa(0);
  sub_253CE7BB8(&qword_269D7DCA0, (void (*)(uint64_t))_s28StatementResolutionReferenceOMa);
  sub_253CD8AF4();
  if (!v0)
  {
    _s23StatementSuccessOutcomeVMa(0);
    sub_253CE9D18();
    sub_253DF01F0();
    sub_253CE7BB8(&qword_269D7DCA8, MEMORY[0x263F4C158]);
    sub_253CE9C68();
  }
  sub_253C0FDC8();
  return v2();
}

void sub_253CDB1D8()
{
  sub_253C59954();
  sub_253CE9E40(v2);
  sub_253DF01F0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  _s28StatementResolutionReferenceOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v4);
  sub_253CD8BAC(v5, v14);
  sub_253BDEDD8(&qword_269D7DC78);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253C3330C();
  _s23StatementSuccessOutcomeVMa(v7);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = v1[3];
  sub_253CD90E0(v1);
  sub_253CE7EE4();
  sub_253CE9E1C();
  if (v0)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v1);
  }
  else
  {
    sub_253CE9F78();
    sub_253CE7BB8(&qword_269D7DC88, (void (*)(uint64_t))_s28StatementResolutionReferenceOMa);
    sub_253CE9C14();
    sub_253CDE5F0((uint64_t)v1, v9, (void (*)(void))_s28StatementResolutionReferenceOMa);
    sub_253CE7BB8(&qword_269D7DC90, MEMORY[0x263F4C158]);
    sub_253CE9B44();
    uint64_t v10 = sub_253CE9CD8();
    v11(v10);
    uint64_t v12 = sub_253CE9C44();
    v13(v12);
    sub_253CDE66C(v9, v16, (void (*)(void))_s23StatementSuccessOutcomeVMa);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v15);
    sub_253CDE59C(v9, (void (*)(void))_s23StatementSuccessOutcomeVMa);
  }
  sub_253C5993C();
}

uint64_t sub_253CDB47C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_253CD9F40();
  if ((v7 & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(int *)(a3(0) + 20);

  return a4(a1 + v8, a2 + v8);
}

uint64_t sub_253CDB508(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x636E657265666572 && a2 == 0xE900000000000065;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746C75736572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CDB5FC(char a1)
{
  if (a1) {
    return 0x746C75736572;
  }
  else {
    return 0x636E657265666572;
  }
}

uint64_t sub_253CDB634()
{
  sub_253BDEDD8(&qword_269D7DCE0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v1);
  sub_253CE9CF4();
  sub_253CE7F7C();
  sub_253CE9DA0();
  _s28StatementResolutionReferenceOMa(0);
  sub_253CE7BB8(&qword_269D7DCA0, (void (*)(uint64_t))_s28StatementResolutionReferenceOMa);
  sub_253CD8AF4();
  if (!v0)
  {
    _s23StatementFailureOutcomeVMa(0);
    sub_253CE9D18();
    sub_253DF0140();
    sub_253CE7BB8(&qword_269D7DCE8, MEMORY[0x263F4C098]);
    sub_253CE9C68();
  }
  sub_253C0FDC8();
  return v2();
}

void sub_253CDB7A4()
{
  sub_253C59954();
  sub_253CE9E40(v2);
  sub_253DF0140();
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  _s28StatementResolutionReferenceOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v4);
  sub_253CD8BAC(v5, v14);
  sub_253BDEDD8(&qword_269D7DCC8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253C3330C();
  _s23StatementFailureOutcomeVMa(v7);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v8);
  uint64_t v9 = v1[3];
  sub_253CD90E0(v1);
  sub_253CE7F7C();
  sub_253CE9E1C();
  if (v0)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v1);
  }
  else
  {
    sub_253CE9F78();
    sub_253CE7BB8(&qword_269D7DC88, (void (*)(uint64_t))_s28StatementResolutionReferenceOMa);
    sub_253CE9C14();
    sub_253CDE5F0((uint64_t)v1, v9, (void (*)(void))_s28StatementResolutionReferenceOMa);
    sub_253CE7BB8(&qword_269D7DCD8, MEMORY[0x263F4C098]);
    sub_253CE9B44();
    uint64_t v10 = sub_253CE9CD8();
    v11(v10);
    uint64_t v12 = sub_253CE9C44();
    v13(v12);
    sub_253CDE66C(v9, v16, (void (*)(void))_s23StatementFailureOutcomeVMa);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v15);
    sub_253CDE59C(v9, (void (*)(void))_s23StatementFailureOutcomeVMa);
  }
  sub_253C5993C();
}

void sub_253CDBA48()
{
  sub_253C1CED0();
  uint64_t v34 = v5;
  uint64_t v7 = v6;
  v32[0] = _s23StatementFailureOutcomeVMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v8);
  sub_253CD8BAC(v9, v32[0]);
  v32[1] = _s23StatementSuccessOutcomeVMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_253C8F07C();
  uint64_t v12 = _s23StatementCreatedOutcomeVMa(v11);
  uint64_t v13 = sub_253BDF9FC(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_253C4BC10();
  _s20TaskStatementOutcomeOMa(v14);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v15);
  sub_253CA0118();
  MEMORY[0x270FA5388](v16);
  sub_253CE9CC4();
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v32 - v18;
  uint64_t v20 = sub_253BDEDD8(&qword_269D7DB48);
  uint64_t v21 = sub_253BDF9FC(v20);
  MEMORY[0x270FA5388](v21);
  sub_253C8F0B4();
  uint64_t v23 = v0 + v22;
  sub_253CDE66C(v7, v0, (void (*)(void))_s20TaskStatementOutcomeOMa);
  sub_253CDE66C(v34, v23, (void (*)(void))_s20TaskStatementOutcomeOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_253CDE66C(v0, v3, (void (*)(void))_s20TaskStatementOutcomeOMa);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_253CDE5F0(v23, v1, (void (*)(void))_s23StatementSuccessOutcomeVMa);
        sub_253CD9F40();
        if (v25) {
          sub_253DF01E0();
        }
        uint64_t v26 = _s23StatementSuccessOutcomeVMa;
        sub_253CDE59C(v1, (void (*)(void))_s23StatementSuccessOutcomeVMa);
        uint64_t v27 = v3;
LABEL_18:
        sub_253CDE59C(v27, (void (*)(void))v26);
        sub_253CDE59C(v0, (void (*)(void))_s20TaskStatementOutcomeOMa);
        goto LABEL_19;
      }
      uint64_t v28 = _s23StatementSuccessOutcomeVMa;
      uint64_t v29 = v3;
    }
    else
    {
      sub_253CDE66C(v0, v2, (void (*)(void))_s20TaskStatementOutcomeOMa);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v30 = v33;
        sub_253CDE5F0(v23, v33, (void (*)(void))_s23StatementFailureOutcomeVMa);
        sub_253CD9F40();
        if (v31) {
          sub_253DF0110();
        }
        uint64_t v26 = _s23StatementFailureOutcomeVMa;
        sub_253CDE59C(v30, (void (*)(void))_s23StatementFailureOutcomeVMa);
        uint64_t v27 = v2;
        goto LABEL_18;
      }
      uint64_t v28 = _s23StatementFailureOutcomeVMa;
      uint64_t v29 = v2;
    }
  }
  else
  {
    sub_253CDE66C(v0, (uint64_t)v19, (void (*)(void))_s20TaskStatementOutcomeOMa);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_253CDE5F0(v23, v4, (void (*)(void))_s23StatementCreatedOutcomeVMa);
      sub_253CD9F40();
      sub_253CDE59C(v4, (void (*)(void))_s23StatementCreatedOutcomeVMa);
      sub_253CDE59C((uint64_t)v19, (void (*)(void))_s23StatementCreatedOutcomeVMa);
      sub_253CDE59C(v0, (void (*)(void))_s20TaskStatementOutcomeOMa);
      goto LABEL_19;
    }
    uint64_t v28 = _s23StatementCreatedOutcomeVMa;
    uint64_t v29 = (uint64_t)v19;
  }
  sub_253CDE59C(v29, (void (*)(void))v28);
  sub_253BEFAC0(v0, &qword_269D7DB48);
LABEL_19:
  sub_253C1CEE8();
}

uint64_t sub_253CDBEFC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64657461657263 && a2 == 0xE700000000000000;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x73736563637573 && a2 == 0xE700000000000000;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6572756C696166 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_253DF5C90();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_253CDC050(char a1)
{
  return *(void *)&aCreated_0[8 * a1];
}

void sub_253CDC068()
{
  sub_253C59954();
  uint64_t v29 = v0;
  uint64_t v4 = v3;
  sub_253BDEDD8(&qword_269D7DD30);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253C567E0(v6, v25);
  _s23StatementFailureOutcomeVMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v7);
  sub_253CD8C8C(v8, v26);
  sub_253BDEDD8(&qword_269D7DD38);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253BDFA94();
  uint64_t v10 = sub_253C36350();
  _s23StatementSuccessOutcomeVMa(v10);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v11);
  sub_253BDFA94();
  uint64_t v27 = v12;
  sub_253BDEDD8(&qword_269D7DD40);
  sub_253C0F830();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_253C598FC();
  _s23StatementCreatedOutcomeVMa(v14);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_253C56720();
  _s20TaskStatementOutcomeOMa(v16);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v17);
  sub_253C16AA8();
  sub_253BDEDD8(&qword_269D7DD48);
  sub_253C0F830();
  MEMORY[0x270FA5388](v18);
  sub_253C2F37C();
  sub_253BDF5F8(v4, v4[3]);
  sub_253CE7FC8();
  sub_253DF5E40();
  sub_253CDE66C(v29, v1, (void (*)(void))_s20TaskStatementOutcomeOMa);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v2 = v27;
      sub_253CDE5F0(v1, v27, (void (*)(void))_s23StatementSuccessOutcomeVMa);
      sub_253CE8060();
      sub_253CE9BCC();
      sub_253CE7BB8(&qword_269D7DC20, (void (*)(uint64_t))_s23StatementSuccessOutcomeVMa);
      sub_253CE9EF4();
      sub_253CE9E68();
      sub_253BEFBCC();
      v20();
      uint64_t v21 = _s23StatementSuccessOutcomeVMa;
    }
    else
    {
      uint64_t v2 = v28;
      sub_253CDE5F0(v1, v28, (void (*)(void))_s23StatementFailureOutcomeVMa);
      sub_253CE8014();
      sub_253CE9BCC();
      sub_253CE7BB8(&qword_269D7DBF0, (void (*)(uint64_t))_s23StatementFailureOutcomeVMa);
      sub_253CE9EF4();
      sub_253CE9E68();
      sub_253CE9DE4();
      sub_253BEFBCC();
      v23();
      uint64_t v21 = _s23StatementFailureOutcomeVMa;
    }
  }
  else
  {
    sub_253CDE5F0(v1, v2, (void (*)(void))_s23StatementCreatedOutcomeVMa);
    sub_253CE80AC();
    sub_253CE9BCC();
    sub_253CE7BB8(&qword_269D7DC08, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
    sub_253CE9EF4();
    sub_253CE9E68();
    sub_253BEFBCC();
    v22();
    uint64_t v21 = _s23StatementCreatedOutcomeVMa;
  }
  sub_253CDE59C(v2, (void (*)(void))v21);
  sub_253BEFBCC();
  v24();
  sub_253C5993C();
}

void sub_253CDC554()
{
  sub_253C59954();
  uint64_t v6 = v5;
  uint64_t v52 = v7;
  sub_253BDEDD8(&qword_269D7DCF0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v8);
  sub_253CD9374(v9, v48);
  sub_253BDEDD8(&qword_269D7DCF8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v10);
  sub_253BDFA94();
  sub_253BDEDD8(&qword_269D7DD00);
  sub_253C0F830();
  MEMORY[0x270FA5388](v11);
  sub_253C567E0(v12, v49);
  sub_253BDEDD8(&qword_269D7DD08);
  sub_253C0F830();
  uint64_t v53 = v14;
  uint64_t v54 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = sub_253C3330C();
  uint64_t v16 = _s20TaskStatementOutcomeOMa(v15);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v17);
  sub_253C2F354();
  uint64_t v20 = v18 - v19;
  MEMORY[0x270FA5388](v21);
  sub_253CE9CC4();
  MEMORY[0x270FA5388](v22);
  sub_253CE9DF4();
  MEMORY[0x270FA5388](v23);
  sub_253CE9D30();
  sub_253BDF5F8(v6, v6[3]);
  sub_253CE7FC8();
  sub_253DF5E30();
  if (!v1)
  {
    uint64_t v50 = v0;
    uint64_t v51 = v2;
    uint64_t v25 = v54;
    uint64_t v55 = v4;
    uint64_t v26 = sub_253DF5BB0();
    if (*(void *)(v26 + 16))
    {
      sub_253CE9F8C();
      int v27 = *(unsigned __int8 *)(v26 + 32);
      sub_253CC30E8(1, v28, v26, v26 + 32, 0, v29);
      uint64_t v31 = v30;
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      if (v31 == v33 >> 1)
      {
        if (v27)
        {
          if (v27 == 1)
          {
            sub_253CE8060();
            sub_253CE9B80();
            _s23StatementSuccessOutcomeVMa(0);
            sub_253CE7BB8(&qword_269D7DC18, (void (*)(uint64_t))_s23StatementSuccessOutcomeVMa);
            sub_253DF5BA0();
            uint64_t v24 = (uint64_t)v6;
            sub_253BEFBCC();
            v39();
            swift_unknownObjectRelease();
            uint64_t v40 = sub_253CE9D88();
            v41(v40);
            swift_storeEnumTagMultiPayload();
            uint64_t v42 = v3;
LABEL_15:
            sub_253CDE5F0(v42, v50, (void (*)(void))_s20TaskStatementOutcomeOMa);
            sub_253CDE5F0(v50, v52, (void (*)(void))_s20TaskStatementOutcomeOMa);
            goto LABEL_11;
          }
          sub_253CE8014();
          sub_253CE9B80();
          _s23StatementFailureOutcomeVMa(0);
          sub_253CE7BB8(&qword_269D7DBE8, (void (*)(uint64_t))_s23StatementFailureOutcomeVMa);
          sub_253CE9EA0();
          uint64_t v24 = (uint64_t)v6;
          sub_253BEFBCC();
          v46();
          swift_unknownObjectRelease();
          sub_253C0FFA4();
          v47();
          uint64_t v45 = v20;
        }
        else
        {
          sub_253CE80AC();
          sub_253CE9B80();
          sub_253CE9F5C();
          sub_253CE7BB8(&qword_269D7DC00, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
          sub_253CE9EA0();
          uint64_t v24 = (uint64_t)v6;
          sub_253BEFBCC();
          v43();
          swift_unknownObjectRelease();
          sub_253BEFBCC();
          v44();
          uint64_t v45 = v51;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v42 = v45;
        goto LABEL_15;
      }
      uint64_t v24 = (uint64_t)v6;
      uint64_t v34 = v53;
      uint64_t v25 = v54;
    }
    else
    {
      uint64_t v24 = (uint64_t)v6;
      uint64_t v34 = v53;
    }
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v36 = v35;
    sub_253BDEDD8(&qword_269D7CA68);
    uint64_t *v36 = v16;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    uint64_t v37 = sub_253CE9F00();
    v38(v37);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v55, v25);
    goto LABEL_11;
  }
  uint64_t v24 = (uint64_t)v6;
LABEL_11:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v24);
  sub_253C5993C();
}

void sub_253CDCC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_253C1CED0();
  a19 = v23;
  a20 = v24;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v29 = _s24StatementExecutionResultOMa(0);
  uint64_t v30 = sub_253BDF9FC(v29);
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = sub_253C5673C();
  _s19EvaluatorVoteSourceOMa(v31);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v32);
  sub_253CA0118();
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&a9 - v34;
  uint64_t v36 = sub_253BDEDD8(&qword_269D7D670);
  uint64_t v37 = sub_253BDF9FC(v36);
  MEMORY[0x270FA5388](v37);
  sub_253C8F0B4();
  uint64_t v39 = v20 + v38;
  sub_253CDE66C(v28, v20, (void (*)(void))_s19EvaluatorVoteSourceOMa);
  sub_253CDE66C(v26, v39, (void (*)(void))_s19EvaluatorVoteSourceOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253CDE66C(v20, v22, (void (*)(void))_s19EvaluatorVoteSourceOMa);
    if (swift_getEnumCaseMultiPayload() == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_253CDE66C(v20, (uint64_t)v35, (void (*)(void))_s19EvaluatorVoteSourceOMa);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_253CDE5F0(v39, v21, (void (*)(void))_s24StatementExecutionResultOMa);
      sub_253CDD840();
      sub_253CDE59C(v21, (void (*)(void))_s24StatementExecutionResultOMa);
      sub_253CDE59C((uint64_t)v35, (void (*)(void))_s24StatementExecutionResultOMa);
LABEL_8:
      sub_253CDE59C(v20, (void (*)(void))_s19EvaluatorVoteSourceOMa);
      goto LABEL_9;
    }
    sub_253CDE59C((uint64_t)v35, (void (*)(void))_s24StatementExecutionResultOMa);
  }
  sub_253BEFAC0(v20, &qword_269D7D670);
LABEL_9:
  sub_253C1CEE8();
}

uint64_t sub_253CDCEBC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000253E196E0 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000253E19700)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_253CDCFA8()
{
  return 0xD000000000000012;
}

void sub_253CDCFDC()
{
  sub_253C59954();
  uint64_t v21 = v1;
  uint64_t v22 = v0;
  char v5 = v4;
  sub_253BDEDD8(&qword_269D7DD90);
  sub_253C0F830();
  v20[6] = v7;
  v20[7] = v6;
  MEMORY[0x270FA5388](v6);
  sub_253C567E0(v8, v20[0]);
  sub_253BDEDD8(&qword_269D7DD98);
  sub_253C0F830();
  v20[4] = v10;
  v20[5] = v9;
  MEMORY[0x270FA5388](v9);
  void v20[2] = (uint64_t)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253C36350();
  v20[1] = _s24StatementExecutionResultOMa(v12);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = sub_253C3330C();
  _s19EvaluatorVoteSourceOMa(v14);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v15);
  sub_253C2F37C();
  sub_253BDEDD8(&qword_269D7DDA0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v16);
  sub_253C2F364();
  sub_253BDF5F8(v5, v5[3]);
  sub_253CE80F8();
  sub_253DF5E40();
  sub_253CDE66C(v22, v2, (void (*)(void))_s19EvaluatorVoteSourceOMa);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253CE8144();
    sub_253CE9E80();
    sub_253CE8228();
    sub_253DF5C20();
    sub_253BEFBCC();
    v17();
  }
  else
  {
    sub_253CDE5F0(v2, v3, (void (*)(void))_s24StatementExecutionResultOMa);
    sub_253CE81DC();
    sub_253CE9E80();
    sub_253CE7BB8(&qword_269D7DDB0, (void (*)(uint64_t))_s24StatementExecutionResultOMa);
    sub_253DF5C20();
    sub_253CE9DE4();
    sub_253BEFBCC();
    v18();
    sub_253CDE59C(v3, (void (*)(void))_s24StatementExecutionResultOMa);
  }
  sub_253C0FDC8();
  v19();
  sub_253C5993C();
}

void sub_253CDD308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12)
{
  sub_253C59954();
  uint64_t v16 = v15;
  uint64_t v51 = v17;
  sub_253BDEDD8(&qword_269D7DD50);
  sub_253C0F830();
  MEMORY[0x270FA5388](v18);
  sub_253CD8B20(v19, v47);
  sub_253BDEDD8(&qword_269D7DD58);
  sub_253C0F830();
  MEMORY[0x270FA5388](v20);
  sub_253CD9374(v21, v48);
  sub_253BDEDD8(&qword_269D7DD60);
  sub_253C0F830();
  MEMORY[0x270FA5388](v22);
  uint64_t v23 = sub_253C598FC();
  uint64_t v24 = _s19EvaluatorVoteSourceOMa(v23);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v25);
  sub_253C2F354();
  sub_253CE9DF4();
  MEMORY[0x270FA5388](v26);
  sub_253CE9CC4();
  MEMORY[0x270FA5388](v27);
  sub_253CE9D30();
  sub_253BDF5F8(v16, v16[3]);
  sub_253CE80F8();
  sub_253DF5E30();
  if (v13) {
    goto LABEL_8;
  }
  uint64_t v49 = v14;
  uint64_t v50 = v24;
  uint64_t v28 = sub_253DF5BB0();
  if (!*(void *)(v28 + 16)
    || (sub_253CE9F8C(),
        char v29 = *(unsigned char *)(v28 + 32),
        sub_253CC30E8(1, v30, v28, v28 + 32, 0, v31),
        uint64_t v33 = v32,
        unint64_t v35 = v34,
        swift_bridgeObjectRelease(),
        v33 != v35 >> 1))
  {
    sub_253DF5960();
    sub_253C0FFC8();
    uint64_t v37 = v36;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v37 = v50;
    sub_253DF5B40();
    sub_253CD8B74();
    sub_253C0FA90();
    uint64_t v38 = sub_253CE9E54();
    v39(v38);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_253C0FFA4();
    v40();
LABEL_8:
    uint64_t v41 = (uint64_t)v16;
    goto LABEL_9;
  }
  if (v29)
  {
    sub_253CE8144();
    sub_253CE9D40();
    sub_253CE8190();
    sub_253DF5BA0();
    sub_253BEFBCC();
    v42();
    swift_unknownObjectRelease();
    sub_253C0FFA4();
    v43();
    *uint64_t v49 = a12;
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = (uint64_t)v49;
  }
  else
  {
    sub_253CE81DC();
    sub_253CE9D40();
    _s24StatementExecutionResultOMa(0);
    sub_253CE7BB8(&qword_269D7DD88, (void (*)(uint64_t))_s24StatementExecutionResultOMa);
    sub_253CE9EE0();
    sub_253DF5BA0();
    sub_253BEFBCC();
    v45();
    swift_unknownObjectRelease();
    sub_253C0FFA4();
    v46();
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = v35;
  }
  sub_253CDE5F0(v44, v12, (void (*)(void))_s19EvaluatorVoteSourceOMa);
  sub_253CDE5F0(v12, v51, (void (*)(void))_s19EvaluatorVoteSourceOMa);
  uint64_t v41 = (uint64_t)v16;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v41);
  sub_253C5993C();
}

void sub_253CDD840()
{
  sub_253C1CED0();
  uint64_t v128 = v3;
  uint64_t v129 = v4;
  uint64_t v119 = _s20TaskStatementOutcomeOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v5);
  sub_253CE9CA4(v6, v105);
  uint64_t v117 = sub_253BDEDD8(&qword_269D7DB28);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v7);
  sub_253CD8BE4(v8, v105);
  uint64_t v9 = sub_253BDEDD8(&qword_269D7CC08);
  uint64_t v10 = sub_253BDF9FC(v9);
  MEMORY[0x270FA5388](v10);
  sub_253C34050();
  uint64_t v112 = v11;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v12);
  sub_253C36430();
  uint64_t v118 = v13;
  sub_253C36350();
  sub_253DF2C40();
  sub_253C0F830();
  uint64_t v126 = v15;
  uint64_t v127 = v14;
  MEMORY[0x270FA5388](v14);
  sub_253C34050();
  uint64_t v125 = v16;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v17);
  sub_253C36430();
  uint64_t v120 = v18;
  uint64_t v19 = sub_253C36350();
  uint64_t v111 = _s23StatementFailureOutcomeVMa(v19);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v20);
  sub_253BDFA94();
  uint64_t v114 = v21;
  uint64_t v22 = sub_253C36350();
  uint64_t v124 = _s23StatementCreatedOutcomeVMa(v22);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v23);
  sub_253C34050();
  uint64_t v106 = v24;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v25);
  sub_253C36430();
  uint64_t v105 = v26;
  uint64_t v122 = sub_253BDEDD8(&qword_269D7DB30);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v27);
  sub_253C34050();
  uint64_t v116 = v28;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v29);
  sub_253C36430();
  uint64_t v115 = v30;
  uint64_t v31 = sub_253BDEDD8(&qword_269D7C750);
  uint64_t v32 = sub_253BDF9FC(v31);
  MEMORY[0x270FA5388](v32);
  sub_253C34050();
  uint64_t v110 = v33;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v34);
  uint64_t v123 = (uint64_t)&v105 - v35;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v36);
  uint64_t v109 = (uint64_t)&v105 - v37;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v38);
  sub_253C36430();
  uint64_t v113 = v39;
  uint64_t v108 = _s23StatementSuccessOutcomeVMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v40);
  uint64_t v41 = sub_253C598FC();
  _s24StatementExecutionResultOMa(v41);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v42);
  sub_253C2F354();
  uint64_t v45 = v43 - v44;
  uint64_t v47 = MEMORY[0x270FA5388](v46);
  uint64_t v49 = (char *)&v105 - v48;
  uint64_t v50 = MEMORY[0x270FA5388](v47);
  uint64_t v52 = (char *)&v105 - v51;
  MEMORY[0x270FA5388](v50);
  sub_253CE9F34();
  MEMORY[0x270FA5388](v53);
  uint64_t v55 = (char *)&v105 - v54;
  uint64_t v56 = sub_253BDEDD8(&qword_269D7DB38);
  uint64_t v57 = sub_253BDF9FC(v56);
  MEMORY[0x270FA5388](v57);
  sub_253C16AA8();
  uint64_t v59 = v1 + *(int *)(v58 + 56);
  sub_253CDE66C(v128, v1, (void (*)(void))_s24StatementExecutionResultOMa);
  sub_253CDE66C(v129, v59, (void (*)(void))_s24StatementExecutionResultOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_253CDE66C(v1, v0, (void (*)(void))_s24StatementExecutionResultOMa);
      if (sub_253C4A0D4() != 1)
      {
        uint64_t v83 = &qword_269D7C750;
        uint64_t v84 = v0;
        goto LABEL_28;
      }
      uint64_t v62 = v113;
      sub_253C61B78(v59, v113, &qword_269D7C750);
      uint64_t v63 = v115;
      uint64_t v64 = v115 + *(int *)(v122 + 48);
      sub_253C61B78(v0, v115, &qword_269D7C750);
      sub_253C2E770(v62, v64, &qword_269D7C750);
      uint64_t v65 = v124;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v63, 1, v124) == 1)
      {
        sub_253BEFAC0(v62, &qword_269D7C750);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v64, 1, v65) == 1)
        {
          uint64_t v66 = &qword_269D7C750;
          goto LABEL_22;
        }
        goto LABEL_39;
      }
      uint64_t v89 = v109;
      sub_253C2E770(v63, v109, &qword_269D7C750);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v64, 1, v65) == 1)
      {
        sub_253BEFAC0(v62, &qword_269D7C750);
        sub_253CDE59C(v89, (void (*)(void))_s23StatementCreatedOutcomeVMa);
LABEL_39:
        uint64_t v90 = &qword_269D7DB30;
        goto LABEL_49;
      }
      uint64_t v94 = v105;
      sub_253CDE5F0(v64, v105, (void (*)(void))_s23StatementCreatedOutcomeVMa);
      sub_253CD9F40();
      char v102 = v95;
      uint64_t v103 = _s23StatementCreatedOutcomeVMa;
      sub_253CDE59C(v94, (void (*)(void))_s23StatementCreatedOutcomeVMa);
      char v104 = &qword_269D7C750;
LABEL_56:
      sub_253BEFAC0(v62, v104);
      sub_253CDE59C(v89, (void (*)(void))v103);
      sub_253BEFAC0(v63, v104);
      if (v102)
      {
LABEL_57:
        sub_253CDE59C(v1, (void (*)(void))_s24StatementExecutionResultOMa);
      }
      else
      {
LABEL_50:
        uint64_t v93 = v1;
LABEL_51:
        sub_253CDE59C(v93, (void (*)(void))_s24StatementExecutionResultOMa);
      }
      goto LABEL_52;
    case 2u:
      sub_253CDE66C(v1, (uint64_t)v52, (void (*)(void))_s24StatementExecutionResultOMa);
      if (sub_253C4A0D4() != 2)
      {
        int v60 = _s23StatementFailureOutcomeVMa;
        uint64_t v61 = (uint64_t)v52;
        goto LABEL_25;
      }
      uint64_t v67 = v114;
      sub_253CDE5F0(v59, v114, (void (*)(void))_s23StatementFailureOutcomeVMa);
      sub_253CD9F40();
      if (v68 & 1) != 0 && (sub_253DF0110())
      {
        uint64_t v69 = _s23StatementFailureOutcomeVMa;
        sub_253CDE59C(v67, (void (*)(void))_s23StatementFailureOutcomeVMa);
        uint64_t v70 = (uint64_t)v52;
        goto LABEL_34;
      }
      uint64_t v86 = _s23StatementFailureOutcomeVMa;
      sub_253CDE59C(v67, (void (*)(void))_s23StatementFailureOutcomeVMa);
      uint64_t v87 = (uint64_t)v52;
      goto LABEL_36;
    case 3u:
      sub_253CDE66C(v1, (uint64_t)v49, (void (*)(void))_s24StatementExecutionResultOMa);
      uint64_t v71 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v72 = &v49[v71];
      if (sub_253C4A0D4() != 3)
      {
        sub_253BEFBCC();
        v85();
        uint64_t v83 = &qword_269D7C750;
        uint64_t v84 = (uint64_t)v49;
        goto LABEL_28;
      }
      uint64_t v129 = v1;
      uint64_t v73 = (char *)(v59 + v71);
      uint64_t v74 = v123;
      sub_253C61B78(v59, v123, &qword_269D7C750);
      uint64_t v76 = v126;
      uint64_t v75 = v127;
      uint64_t v77 = *(void (**)(uint64_t, char *, uint64_t))(v126 + 32);
      v77(v120, v72, v127);
      v77(v125, v73, v75);
      uint64_t v78 = v116;
      uint64_t v79 = v116 + *(int *)(v122 + 48);
      sub_253C61B78((uint64_t)v49, v116, &qword_269D7C750);
      sub_253C2E770(v74, v79, &qword_269D7C750);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v78, 1, v124) == 1)
      {
        sub_253CE9BA8();
        if (!v80) {
          goto LABEL_43;
        }
        sub_253BEFAC0(v78, &qword_269D7C750);
        uint64_t v81 = v129;
      }
      else
      {
        uint64_t v91 = v110;
        sub_253C2E770(v78, v110, &qword_269D7C750);
        sub_253CE9BA8();
        if (v80)
        {
          sub_253CDE59C(v91, (void (*)(void))_s23StatementCreatedOutcomeVMa);
LABEL_43:
          sub_253BEFAC0(v78, &qword_269D7DB30);
          uint64_t v81 = v129;
LABEL_44:
          uint64_t v92 = *(void (**)(void))(v76 + 8);
          sub_253C0FDC8();
          v92();
          sub_253C0FDC8();
          v92();
          sub_253BEFAC0(v123, &qword_269D7C750);
          uint64_t v93 = v81;
          goto LABEL_51;
        }
        uint64_t v96 = v106;
        sub_253CDE5F0(v79, v106, (void (*)(void))_s23StatementCreatedOutcomeVMa);
        sub_253CD9F40();
        char v98 = v97;
        sub_253CDE59C(v96, (void (*)(void))_s23StatementCreatedOutcomeVMa);
        sub_253CDE59C(v91, (void (*)(void))_s23StatementCreatedOutcomeVMa);
        sub_253BEFAC0(v78, &qword_269D7C750);
        uint64_t v81 = v129;
        if ((v98 & 1) == 0) {
          goto LABEL_44;
        }
      }
      sub_253DF2C30();
      uint64_t v99 = *(void (**)(void))(v76 + 8);
      sub_253C0FDC8();
      v99();
      sub_253C0FDC8();
      v99();
      sub_253BEFAC0(v123, &qword_269D7C750);
      sub_253CDE59C(v81, (void (*)(void))_s24StatementExecutionResultOMa);
LABEL_52:
      sub_253C1CEE8();
      return;
    case 4u:
      sub_253CDE66C(v1, v45, (void (*)(void))_s24StatementExecutionResultOMa);
      if (sub_253C4A0D4() != 4)
      {
        uint64_t v83 = &qword_269D7CC08;
        uint64_t v84 = v45;
LABEL_28:
        sub_253BEFAC0(v84, v83);
        goto LABEL_29;
      }
      uint64_t v62 = v118;
      sub_253C61B78(v59, v118, &qword_269D7CC08);
      uint64_t v63 = v121;
      uint64_t v82 = v121 + *(int *)(v117 + 48);
      sub_253C61B78(v45, v121, &qword_269D7CC08);
      sub_253C2E770(v62, v82, &qword_269D7CC08);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v63, 1, v119) == 1)
      {
        sub_253BEFAC0(v62, &qword_269D7CC08);
        sub_253CE9BA8();
        if (v80)
        {
          uint64_t v66 = &qword_269D7CC08;
LABEL_22:
          sub_253BEFAC0(v63, v66);
          goto LABEL_57;
        }
      }
      else
      {
        uint64_t v89 = v112;
        sub_253C2E770(v63, v112, &qword_269D7CC08);
        sub_253CE9BA8();
        if (!v80)
        {
          uint64_t v100 = v107;
          sub_253CDE5F0(v82, v107, (void (*)(void))_s20TaskStatementOutcomeOMa);
          sub_253CDBA48();
          char v102 = v101;
          uint64_t v103 = _s20TaskStatementOutcomeOMa;
          sub_253CDE59C(v100, (void (*)(void))_s20TaskStatementOutcomeOMa);
          char v104 = &qword_269D7CC08;
          goto LABEL_56;
        }
        sub_253BEFAC0(v62, &qword_269D7CC08);
        sub_253CDE59C(v89, (void (*)(void))_s20TaskStatementOutcomeOMa);
      }
      uint64_t v90 = &qword_269D7DB28;
LABEL_49:
      sub_253BEFAC0(v63, v90);
      goto LABEL_50;
    default:
      sub_253CDE66C(v1, (uint64_t)v55, (void (*)(void))_s24StatementExecutionResultOMa);
      if (sub_253C4A0D4())
      {
        int v60 = _s23StatementSuccessOutcomeVMa;
        uint64_t v61 = (uint64_t)v55;
LABEL_25:
        sub_253CDE59C(v61, (void (*)(void))v60);
LABEL_29:
        sub_253BEFAC0(v1, &qword_269D7DB38);
        goto LABEL_52;
      }
      sub_253CDE5F0(v59, v2, (void (*)(void))_s23StatementSuccessOutcomeVMa);
      sub_253CD9F40();
      if (v88 & 1) != 0 && (sub_253DF01E0())
      {
        uint64_t v69 = _s23StatementSuccessOutcomeVMa;
        sub_253CDE59C(v2, (void (*)(void))_s23StatementSuccessOutcomeVMa);
        uint64_t v70 = (uint64_t)v55;
LABEL_34:
        sub_253CDE59C(v70, (void (*)(void))v69);
        goto LABEL_57;
      }
      uint64_t v86 = _s23StatementSuccessOutcomeVMa;
      sub_253CDE59C(v2, (void (*)(void))_s23StatementSuccessOutcomeVMa);
      uint64_t v87 = (uint64_t)v55;
LABEL_36:
      sub_253CDE59C(v87, (void (*)(void))v86);
      goto LABEL_50;
  }
}

uint64_t _s20TaskStatementOutcomeOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7DB90);
}

uint64_t _s23StatementFailureOutcomeVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7DB80);
}

uint64_t _s23StatementCreatedOutcomeVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7DB70);
}

uint64_t _s23StatementSuccessOutcomeVMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7DB60);
}

uint64_t _s24StatementExecutionResultOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7DBB0);
}

uint64_t sub_253CDE59C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return a1;
}

uint64_t sub_253CDE5F0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  sub_253C10134();
  v4();
  return a2;
}

uint64_t _s28StatementResolutionReferenceOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7DB50);
}

uint64_t sub_253CDE66C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  uint64_t v4 = sub_253C2F578();
  v5(v4);
  return a2;
}

uint64_t sub_253CDE6C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x8000000253E19720 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x7845746F4E646964 && a2 == 0xED00006574756365;
    if (v5 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v6 = a1 == 0x6F69747563657865 && a2 == 0xEF64656C6961466ELL;
      if (v6 || (sub_253DF5C90() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v7 = a1 == 0x6C61636974697263 && a2 == 0xEF6572756C696146;
        if (v7 || (sub_253DF5C90() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x64656C65636E6163 && a2 == 0xE800000000000000)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v9 = sub_253DF5C90();
          swift_bridgeObjectRelease();
          if (v9) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

unint64_t sub_253CDE938(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7845746F4E646964;
      break;
    case 2:
      unint64_t result = 0x6F69747563657865;
      break;
    case 3:
      unint64_t result = 0x6C61636974697263;
      break;
    case 4:
      unint64_t result = 0x64656C65636E6163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253CDEA10(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CDEAD8(char a1)
{
  if (a1) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_253CDEAF0(uint64_t a1, uint64_t a2)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_253CDEB60()
{
  sub_253C59954();
  uint64_t v85 = v1;
  uint64_t v86 = v0;
  char v4 = v3;
  uint64_t v76 = sub_253BDEDD8(&qword_269D7DE18);
  sub_253C0F830();
  v64[0] = v5;
  MEMORY[0x270FA5388](v6);
  sub_253BDFA94();
  uint64_t v74 = v7;
  uint64_t v8 = sub_253BDEDD8(&qword_269D7CC08);
  uint64_t v9 = sub_253BDF9FC(v8);
  MEMORY[0x270FA5388](v9);
  sub_253BDFA94();
  uint64_t v73 = v10;
  sub_253BDEDD8(&qword_269D7DE20);
  sub_253C0F830();
  uint64_t v78 = v12;
  uint64_t v79 = v11;
  MEMORY[0x270FA5388](v11);
  sub_253BDFA94();
  uint64_t v75 = v13;
  sub_253C36350();
  uint64_t v81 = sub_253DF2C40();
  sub_253C0F830();
  uint64_t v77 = v14;
  MEMORY[0x270FA5388](v15);
  sub_253CD8C8C(v16, v64[0]);
  sub_253BDEDD8(&qword_269D7DE28);
  sub_253C0F830();
  uint64_t v71 = v18;
  uint64_t v72 = v17;
  MEMORY[0x270FA5388](v17);
  sub_253BDFA94();
  uint64_t v70 = v19;
  uint64_t v68 = _s23StatementFailureOutcomeVMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v20);
  sub_253BDFA94();
  uint64_t v69 = v21;
  uint64_t v67 = sub_253BDEDD8(&qword_269D7DE30);
  sub_253C0F830();
  uint64_t v66 = v22;
  MEMORY[0x270FA5388](v23);
  sub_253CE9CA4(v24, v64[0]);
  uint64_t v25 = sub_253BDEDD8(&qword_269D7C750);
  uint64_t v26 = sub_253BDF9FC(v25);
  MEMORY[0x270FA5388](v26);
  sub_253C34050();
  uint64_t v80 = v27;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v28);
  sub_253C36430();
  uint64_t v65 = v29;
  v64[2] = sub_253BDEDD8(&qword_269D7DE38);
  sub_253C0F830();
  v64[1] = v30;
  MEMORY[0x270FA5388](v31);
  uint64_t v32 = sub_253C63598();
  _s23StatementSuccessOutcomeVMa(v32);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)v64 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s24StatementExecutionResultOMa(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v36);
  sub_253C2F364();
  uint64_t v84 = sub_253BDEDD8(&qword_269D7DE40);
  sub_253C0F830();
  uint64_t v82 = v37;
  MEMORY[0x270FA5388](v38);
  sub_253C16A90();
  uint64_t v39 = v4[3];
  sub_253CD90E0(v4);
  sub_253CE8274();
  sub_253DF5E40();
  sub_253CDE66C(v86, v2, (void (*)(void))_s24StatementExecutionResultOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v43 = v2;
      uint64_t v44 = v65;
      sub_253C61B78(v43, v65, &qword_269D7C750);
      sub_253CE83A4();
      sub_253CE9D64();
      _s23StatementCreatedOutcomeVMa(0);
      sub_253CE7BB8(&qword_269D7DC08, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
      sub_253DF5BD0();
      sub_253BEFBCC();
      v45();
      uint64_t v46 = v44;
      uint64_t v47 = &qword_269D7C750;
      goto LABEL_8;
    case 2u:
      uint64_t v48 = v69;
      sub_253CDE5F0(v2, v69, (void (*)(void))_s23StatementFailureOutcomeVMa);
      sub_253CE8358();
      uint64_t v50 = v83;
      uint64_t v49 = v84;
      sub_253DF5BC0();
      sub_253CE7BB8(&qword_269D7DBF0, (void (*)(uint64_t))_s23StatementFailureOutcomeVMa);
      sub_253CE9EF4();
      sub_253DF5C20();
      sub_253BEFBCC();
      v51();
      sub_253CDE59C(v48, (void (*)(void))_s23StatementFailureOutcomeVMa);
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v82 + 8);
      uint64_t v41 = v50;
      goto LABEL_11;
    case 3u:
      sub_253BDEDD8(&qword_269D7C748);
      uint64_t v52 = v80;
      sub_253C61B78(v2, v80, &qword_269D7C750);
      sub_253BEFD2C();
      v53();
      sub_253CE830C();
      uint64_t v54 = v84;
      sub_253DF5BC0();
      sub_253CE9F5C();
      sub_253CE7BB8(&qword_269D7DC08, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
      uint64_t v55 = v85;
      sub_253DF5BD0();
      if (v55)
      {
        sub_253BEFBCC();
        v56();
        sub_253C0FD90();
        v57();
        sub_253BEFAC0(v52, &qword_269D7C750);
        uint64_t v41 = sub_253CE9DD4();
        uint64_t v58 = v54;
      }
      else
      {
        uint64_t v49 = v54;
        sub_253CE7BB8(&qword_269D7CFC8, MEMORY[0x263F4D5F8]);
        sub_253DF5C20();
        sub_253BEFBCC();
        v62();
        sub_253C0FD90();
        v63();
        sub_253BEFAC0(v80, &qword_269D7C750);
        uint64_t v41 = sub_253CE9DD4();
LABEL_11:
        uint64_t v58 = v49;
      }
      break;
    case 4u:
      uint64_t v59 = v2;
      uint64_t v60 = v73;
      sub_253C61B78(v59, v73, &qword_269D7CC08);
      sub_253CE82C0();
      sub_253CE9D64();
      _s20TaskStatementOutcomeOMa(0);
      sub_253CE7BB8(&qword_269D7DBD8, (void (*)(uint64_t))_s20TaskStatementOutcomeOMa);
      sub_253DF5BD0();
      sub_253BEFBCC();
      v61();
      uint64_t v47 = &qword_269D7CC08;
      uint64_t v46 = v60;
LABEL_8:
      sub_253BEFAC0(v46, v47);
      uint64_t v41 = sub_253CE9DD4();
      goto LABEL_9;
    default:
      sub_253CDE5F0(v2, (uint64_t)v35, (void (*)(void))_s23StatementSuccessOutcomeVMa);
      sub_253CE83F0();
      uint64_t v39 = v84;
      sub_253DF5BC0();
      sub_253CE7BB8(&qword_269D7DC20, (void (*)(uint64_t))_s23StatementSuccessOutcomeVMa);
      sub_253DF5C20();
      sub_253BEFBCC();
      v40();
      sub_253CDE59C((uint64_t)v35, (void (*)(void))_s23StatementSuccessOutcomeVMa);
      uint64_t v41 = sub_253CE9DE4();
LABEL_9:
      uint64_t v58 = v39;
      break;
  }
  v42(v41, v58);
  sub_253C5993C();
}

void sub_253CDF4E4()
{
  sub_253C59954();
  uint64_t v90 = (char *)v1;
  uint64_t v6 = v5;
  uint64_t v84 = v7;
  sub_253BDEDD8(&qword_269D7DDB8);
  sub_253C0F830();
  uint64_t v79 = v9;
  uint64_t v80 = v8;
  MEMORY[0x270FA5388](v8);
  sub_253CD8C8C(v10, v68);
  sub_253BDEDD8(&qword_269D7DDC0);
  sub_253C0F830();
  uint64_t v81 = v11;
  uint64_t v82 = v12;
  MEMORY[0x270FA5388](v11);
  sub_253CD8B20(v13, v68);
  sub_253BDEDD8(&qword_269D7DDC8);
  sub_253C0F830();
  uint64_t v77 = v15;
  uint64_t v78 = v14;
  MEMORY[0x270FA5388](v14);
  sub_253CD8BC8(v16, v68);
  sub_253BDEDD8(&qword_269D7DDD0);
  sub_253C0F830();
  uint64_t v75 = v18;
  uint64_t v76 = v17;
  MEMORY[0x270FA5388](v17);
  sub_253CD8BE4(v19, v68);
  uint64_t v74 = sub_253BDEDD8(&qword_269D7DDD8);
  sub_253C0F830();
  uint64_t v73 = v20;
  MEMORY[0x270FA5388](v21);
  sub_253BDFA94();
  uint64_t v85 = v22;
  sub_253BDEDD8(&qword_269D7DDE0);
  sub_253C0F830();
  uint64_t v86 = v24;
  uint64_t v87 = v23;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = sub_253C56720();
  uint64_t v88 = _s24StatementExecutionResultOMa(v25);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v26);
  sub_253C34050();
  uint64_t v83 = v27;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v28);
  sub_253CE9DF4();
  MEMORY[0x270FA5388](v29);
  sub_253CE9F34();
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v68 - v32;
  MEMORY[0x270FA5388](v31);
  sub_253CD9C44();
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v68 - v35;
  uint64_t v37 = v6[3];
  uint64_t v89 = v6;
  sub_253BDF5F8(v6, v37);
  sub_253CE8274();
  uint64_t v38 = (uint64_t)v90;
  sub_253DF5E30();
  if (!v38)
  {
    uint64_t v71 = v33;
    uint64_t v72 = v0;
    uint64_t v69 = v4;
    uint64_t v70 = v2;
    uint64_t v39 = v87;
    uint64_t v90 = v36;
    uint64_t v40 = sub_253DF5BB0();
    if (*(void *)(v40 + 16)
      && (uint64_t v68 = 0,
          sub_253CE9F8C(),
          uint64_t v41 = *(unsigned __int8 *)(v40 + 32),
          sub_253CC30E8(1, v42, v40, v40 + 32, 0, v43),
          uint64_t v45 = v44,
          unint64_t v47 = v46,
          swift_bridgeObjectRelease(),
          v45 == v47 >> 1))
    {
      switch(v41)
      {
        case 1:
          sub_253CE83A4();
          sub_253CD9650();
          sub_253CE9F5C();
          sub_253CE7BB8(&qword_269D7DC00, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
          sub_253CE9EC0();
          sub_253BEFBCC();
          v57();
          swift_unknownObjectRelease();
          sub_253BEFBCC();
          v58();
          uint64_t v59 = (uint64_t)v71;
          goto LABEL_12;
        case 2:
          sub_253CE8358();
          sub_253CD9650();
          _s23StatementFailureOutcomeVMa(0);
          sub_253CE7BB8(&qword_269D7DBE8, (void (*)(uint64_t))_s23StatementFailureOutcomeVMa);
          sub_253DF5BA0();
          sub_253BEFBCC();
          v60();
          swift_unknownObjectRelease();
          sub_253BEFBCC();
          v61();
          uint64_t v59 = v72;
          goto LABEL_12;
        case 3:
          sub_253CE830C();
          sub_253CD9650();
          sub_253CE9F5C();
          sub_253CE7BB8(&qword_269D7DC00, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
          uint64_t v53 = v70;
          sub_253DF5B50();
          sub_253BDEDD8(&qword_269D7C748);
          sub_253DF2C40();
          sub_253CE7BB8(&qword_269D7D008, MEMORY[0x263F4D5F8]);
          sub_253DF5BA0();
          sub_253BEFBCC();
          v66();
          swift_unknownObjectRelease();
          sub_253C0FFA4();
          v67();
          swift_storeEnumTagMultiPayload();
          uint64_t v56 = v53;
          break;
        case 4:
          sub_253CE82C0();
          sub_253CD9650();
          _s20TaskStatementOutcomeOMa(0);
          sub_253CE7BB8(&qword_269D7DBD0, (void (*)(uint64_t))_s20TaskStatementOutcomeOMa);
          sub_253CE9EC0();
          sub_253BEFBCC();
          v62();
          swift_unknownObjectRelease();
          sub_253BEFBCC();
          v63();
          uint64_t v59 = v83;
LABEL_12:
          swift_storeEnumTagMultiPayload();
          uint64_t v56 = v59;
          break;
        default:
          sub_253CE83F0();
          sub_253CD9650();
          _s23StatementSuccessOutcomeVMa(0);
          sub_253CE7BB8(&qword_269D7DC18, (void (*)(uint64_t))_s23StatementSuccessOutcomeVMa);
          uint64_t v48 = v69;
          sub_253DF5BA0();
          sub_253CE9F20();
          sub_253BEFBCC();
          v54();
          swift_unknownObjectRelease();
          sub_253BEFBCC();
          v55();
          swift_storeEnumTagMultiPayload();
          uint64_t v56 = v48;
          break;
      }
      uint64_t v64 = v84;
      uint64_t v65 = (uint64_t)v90;
      sub_253CDE5F0(v56, (uint64_t)v90, (void (*)(void))_s24StatementExecutionResultOMa);
      sub_253CDE5F0(v65, v64, (void (*)(void))_s24StatementExecutionResultOMa);
    }
    else
    {
      sub_253DF5960();
      sub_253C0FFC8();
      uint64_t v50 = v49;
      sub_253BDEDD8(&qword_269D7CA68);
      *uint64_t v50 = v88;
      sub_253DF5B40();
      sub_253CD8B74();
      sub_253C0FA90();
      uint64_t v51 = sub_253CE9F00();
      v52(v51);
      swift_willThrow();
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v3, v39);
    }
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v89);
  sub_253C5993C();
}

uint64_t sub_253CDFEF4(uint64_t a1)
{
  unint64_t v2 = sub_253CE7E4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CDFF30(uint64_t a1)
{
  unint64_t v2 = sub_253CE7E4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CDFF6C()
{
  return sub_253CDA368(*v0);
}

uint64_t sub_253CDFF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CDA25C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CDFF9C(uint64_t a1)
{
  unint64_t v2 = sub_253CE7E00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CDFFD8(uint64_t a1)
{
  unint64_t v2 = sub_253CE7E00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE0014(uint64_t a1)
{
  unint64_t v2 = sub_253CE7E98();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE0050(uint64_t a1)
{
  unint64_t v2 = sub_253CE7E98();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CE008C()
{
}

void sub_253CE00A4()
{
}

uint64_t sub_253CE00C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CDACB4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_253CE00EC(uint64_t a1)
{
  unint64_t v2 = sub_253CE7F30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE0128(uint64_t a1)
{
  unint64_t v2 = sub_253CE7F30();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CE0164()
{
}

uint64_t sub_253CE017C()
{
  return sub_253CDAD64();
}

uint64_t sub_253CE0198(uint64_t a1)
{
  unint64_t v2 = sub_253CE7EE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE01D4(uint64_t a1)
{
  unint64_t v2 = sub_253CE7EE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CE0210()
{
}

uint64_t sub_253CE0228()
{
  return sub_253CDB068();
}

uint64_t sub_253CE0240(uint64_t a1, uint64_t a2)
{
  return sub_253CDB47C(a1, a2, _s23StatementSuccessOutcomeVMa, MEMORY[0x263F4C150]) & 1;
}

uint64_t sub_253CE0284()
{
  return sub_253CDB5FC(*v0);
}

uint64_t sub_253CE028C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CDB508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CE02B4(uint64_t a1)
{
  unint64_t v2 = sub_253CE7F7C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE02F0(uint64_t a1)
{
  unint64_t v2 = sub_253CE7F7C();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CE032C()
{
}

uint64_t sub_253CE0344()
{
  return sub_253CDB634();
}

uint64_t sub_253CE035C(uint64_t a1, uint64_t a2)
{
  return sub_253CDB47C(a1, a2, _s23StatementFailureOutcomeVMa, MEMORY[0x263F4C090]) & 1;
}

uint64_t sub_253CE03A0()
{
  return sub_253CDC050(*v0);
}

uint64_t sub_253CE03A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CDBEFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CE03D0(uint64_t a1)
{
  unint64_t v2 = sub_253CE7FC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE040C(uint64_t a1)
{
  unint64_t v2 = sub_253CE7FC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE0448(uint64_t a1)
{
  unint64_t v2 = sub_253CE80AC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE0484(uint64_t a1)
{
  unint64_t v2 = sub_253CE80AC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE04C0(uint64_t a1)
{
  unint64_t v2 = sub_253CE8014();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE04FC(uint64_t a1)
{
  unint64_t v2 = sub_253CE8014();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE0538(uint64_t a1)
{
  unint64_t v2 = sub_253CE8060();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE0574(uint64_t a1)
{
  unint64_t v2 = sub_253CE8060();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CE05B0()
{
}

void sub_253CE05C8()
{
}

uint64_t sub_253CE05E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CDEAF0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_253CE0610(uint64_t a1)
{
  unint64_t v2 = sub_253CE8144();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE064C(uint64_t a1)
{
  unint64_t v2 = sub_253CE8144();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE0688()
{
  return sub_253C11DC0();
}

unint64_t sub_253CE06A4()
{
  return sub_253CDCFA8();
}

uint64_t sub_253CE06AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CDCEBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CE06D4(uint64_t a1)
{
  unint64_t v2 = sub_253CE80F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE0710(uint64_t a1)
{
  unint64_t v2 = sub_253CE80F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE074C(uint64_t a1)
{
  unint64_t v2 = sub_253CE81DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE0788(uint64_t a1)
{
  unint64_t v2 = sub_253CE81DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CE07C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_253CDD308(a1, a2, a3, a4, a5, a6, a7, a8, vars0, *(int *)vars8, *(__int16 *)&vars8[4], vars8[6]);
}

void sub_253CE07DC()
{
}

uint64_t _s19EvaluatorVoteSourceOMa(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_269D7DBA0);
}

uint64_t *sub_253CE0818(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v6 = sub_253DEFE90();
    }
    else {
      uint64_t v6 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CE0948(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = sub_253DEFE90();
  }
  else {
    uint64_t v4 = sub_253DEFFE0();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253CE09F4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CDE59C(a1, (void (*)(void))_s28StatementResolutionReferenceOMa);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_253DEFE90();
    }
    else {
      uint64_t v4 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CE0AC4(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = sub_253DEFE90();
  }
  else {
    uint64_t v4 = sub_253DEFFE0();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253CE0B70(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CDE59C(a1, (void (*)(void))_s28StatementResolutionReferenceOMa);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_253DEFE90();
    }
    else {
      uint64_t v4 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CE0C40()
{
  uint64_t result = sub_253DEFFE0();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_253DEFE90();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_253CE0D04(uint64_t *a1, uint64_t *a2)
{
  return sub_253CE1440(a1, a2);
}

uint64_t sub_253CE0D1C(uint64_t a1, uint64_t a2)
{
  return sub_253CE1544(a1, a2, MEMORY[0x263F4C158]);
}

uint64_t sub_253CE0D34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CE1620(a1, a2, a3, MEMORY[0x263F4C158]);
}

uint64_t sub_253CE0D4C()
{
  return sub_253CE16F4();
}

uint64_t sub_253CE0D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CE17DC(a1, a2, a3, MEMORY[0x263F4C158]);
}

uint64_t sub_253CE0D7C()
{
  return sub_253CE18B4();
}

uint64_t sub_253CE0D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CE0DA8);
}

uint64_t sub_253CE0DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CE19B4(a1, a2, a3, MEMORY[0x263F4C158]);
}

uint64_t sub_253CE0DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CE0DD4);
}

uint64_t sub_253CE0DD4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_253CE1A68(a1, a2, a3, a4, MEMORY[0x263F4C158]);
}

uint64_t sub_253CE0DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CE1B18(a1, a2, a3, MEMORY[0x263F4C158]);
}

uint64_t *sub_253CE0E04(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(_s28StatementResolutionReferenceOMa(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v5 = sub_253DEFE90();
    }
    else {
      uint64_t v5 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CE0F3C(uint64_t a1)
{
  _s28StatementResolutionReferenceOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v2 = sub_253DEFE90();
  }
  else {
    uint64_t v2 = sub_253DEFFE0();
  }
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_253CE0FC8(uint64_t a1, uint64_t a2)
{
  _s28StatementResolutionReferenceOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = sub_253DEFE90();
  }
  else {
    uint64_t v4 = sub_253DEFFE0();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253CE107C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CDE59C(a1, (void (*)(void))_s28StatementResolutionReferenceOMa);
    _s28StatementResolutionReferenceOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_253DEFE90();
    }
    else {
      uint64_t v4 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CE1154(uint64_t a1, uint64_t a2)
{
  _s28StatementResolutionReferenceOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = sub_253DEFE90();
  }
  else {
    uint64_t v4 = sub_253DEFFE0();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253CE1208(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CDE59C(a1, (void (*)(void))_s28StatementResolutionReferenceOMa);
    _s28StatementResolutionReferenceOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_253DEFE90();
    }
    else {
      uint64_t v4 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CE12E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CE12F4);
}

uint64_t sub_253CE12F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s28StatementResolutionReferenceOMa(0);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v4);
}

uint64_t sub_253CE133C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CE1350);
}

uint64_t sub_253CE1350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s28StatementResolutionReferenceOMa(0);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, a2, v4);
}

uint64_t sub_253CE139C()
{
  uint64_t result = _s28StatementResolutionReferenceOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_253CE1428(uint64_t *a1, uint64_t *a2)
{
  return sub_253CE1440(a1, a2);
}

uint64_t *sub_253CE1440(uint64_t *a1, uint64_t *a2)
{
  sub_253C6FFEC();
  int v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    uint64_t v7 = v4;
    if (sub_253CE9B10() == 1)
    {
      sub_253DEFE90();
      sub_253CE9DC8();
    }
    else
    {
      sub_253DEFFE0();
      sub_253CE9DBC();
    }
    sub_253C0FA90();
    sub_253CE9C94();
    v9();
    sub_253CE9BF8();
    uint64_t v10 = sub_253CE9AF8();
    v7(v10);
    sub_253BDF7F0();
    uint64_t v11 = sub_253CE9BE8();
    v12(v11);
  }
  return a1;
}

uint64_t sub_253CE152C(uint64_t a1, uint64_t a2)
{
  return sub_253CE1544(a1, a2, MEMORY[0x263F4C098]);
}

uint64_t sub_253CE1544(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  _s28StatementResolutionReferenceOMa(0);
  sub_253CE9F14();
  if (swift_getEnumCaseMultiPayload() == 1) {
    sub_253DEFE90();
  }
  else {
    sub_253DEFFE0();
  }
  sub_253BDF7F0();
  sub_253BEFBCC();
  v4();
  a3(0);
  sub_253BDF7F0();
  uint64_t v5 = sub_253CE9F14();

  return v6(v5);
}

uint64_t sub_253CE1608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CE1620(a1, a2, a3, MEMORY[0x263F4C098]);
}

uint64_t sub_253CE1620(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (sub_253CE9B10() == 1)
  {
    sub_253DEFE90();
    sub_253CE9DC8();
  }
  else
  {
    sub_253DEFFE0();
    sub_253CE9DBC();
  }
  sub_253C0FA90();
  sub_253CE9C94();
  v6();
  sub_253CE9BF8();
  uint64_t v7 = sub_253CE9AF8();
  a4(v7);
  sub_253BDF7F0();
  uint64_t v8 = sub_253CE9BE8();
  v9(v8);
  return a1;
}

uint64_t sub_253CE16DC()
{
  return sub_253CE16F4();
}

uint64_t sub_253CE16F4()
{
  sub_253CE9E04();
  if (!v2)
  {
    sub_253CDE59C(v0, (void (*)(void))_s28StatementResolutionReferenceOMa);
    if (sub_253CE9B10() == 1)
    {
      sub_253DEFE90();
      sub_253CE9DC8();
    }
    else
    {
      sub_253DEFFE0();
      sub_253CE9DBC();
    }
    sub_253C0FA90();
    sub_253CE9C94();
    v3();
    sub_253CE9BF8();
  }
  uint64_t v4 = sub_253CE9AF8();
  v1(v4);
  sub_253BDF7F0();
  uint64_t v5 = sub_253CE9BE8();
  v6(v5);
  return v0;
}

uint64_t sub_253CE17C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CE17DC(a1, a2, a3, MEMORY[0x263F4C098]);
}

uint64_t sub_253CE17DC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  if (sub_253CE9B10() == 1)
  {
    sub_253DEFE90();
    sub_253CE9DC8();
  }
  else
  {
    sub_253DEFFE0();
    sub_253CE9DBC();
  }
  sub_253C0FA90();
  sub_253C10134();
  v6();
  sub_253CE9BF8();
  uint64_t v7 = sub_253CE9AF8();
  a4(v7);
  sub_253BDF7F0();
  uint64_t v8 = sub_253CE9BE8();
  v9(v8);
  return a1;
}

uint64_t sub_253CE189C()
{
  return sub_253CE18B4();
}

uint64_t sub_253CE18B4()
{
  sub_253CE9E04();
  if (!v2)
  {
    sub_253CDE59C(v0, (void (*)(void))_s28StatementResolutionReferenceOMa);
    if (sub_253CE9B10() == 1)
    {
      sub_253DEFE90();
      sub_253CE9DC8();
    }
    else
    {
      sub_253DEFFE0();
      sub_253CE9DBC();
    }
    sub_253C0FA90();
    sub_253C10134();
    v3();
    sub_253CE9BF8();
  }
  uint64_t v4 = sub_253CE9AF8();
  v1(v4);
  sub_253BDF7F0();
  uint64_t v5 = sub_253CE9BE8();
  v6(v5);
  return v0;
}

uint64_t sub_253CE1988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CE199C);
}

uint64_t sub_253CE199C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CE19B4(a1, a2, a3, MEMORY[0x263F4C098]);
}

uint64_t sub_253CE19B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  _s28StatementResolutionReferenceOMa(0);
  sub_253C6FFEC();
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = a4(0);
    uint64_t v11 = a1 + *(int *)(a3 + 20);
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v11, a2, v10);
}

uint64_t sub_253CE1A3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CE1A50);
}

uint64_t sub_253CE1A50(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_253CE1A68(a1, a2, a3, a4, MEMORY[0x263F4C098]);
}

uint64_t sub_253CE1A68(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(void))
{
  _s28StatementResolutionReferenceOMa(0);
  sub_253C6FFEC();
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = v10;
    uint64_t v13 = a1;
  }
  else
  {
    uint64_t v12 = a5(0);
    uint64_t v13 = a1 + *(int *)(a4 + 20);
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v13, a2, a2, v12);
}

uint64_t sub_253CE1B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253CE1B18(a1, a2, a3, MEMORY[0x263F4C098]);
}

uint64_t sub_253CE1B18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = _s28StatementResolutionReferenceOMa(319);
  if (v6 <= 0x3F)
  {
    uint64_t result = a4(319);
    if (v7 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_253CE1BE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v9 = sub_253DEFE90();
      }
      else {
        uint64_t v9 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v9 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v15 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253DF0140();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v7 = sub_253DEFE90();
      }
      else {
        uint64_t v7 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v7 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_253DF01F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v10 = sub_253DEFE90();
      }
      else {
        uint64_t v10 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v10 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CE1EEC(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    _s28StatementResolutionReferenceOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_253DEFE90();
    }
    else {
      uint64_t v4 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    a1 += *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
    uint64_t v3 = sub_253DF0140();
  }
  else if (result == 1)
  {
    _s28StatementResolutionReferenceOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v5 = sub_253DEFE90();
    }
    else {
      uint64_t v5 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    a1 += *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
    uint64_t v3 = sub_253DF01F0();
  }
  else
  {
    if (result) {
      return result;
    }
    _s28StatementResolutionReferenceOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v3 = sub_253DEFE90();
    }
    else {
      uint64_t v3 = sub_253DEFFE0();
    }
  }
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v6(a1, v3);
}

uint64_t sub_253CE2094(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    _s28StatementResolutionReferenceOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v6 = sub_253DEFE90();
    }
    else {
      uint64_t v6 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
    uint64_t v9 = a1 + v12;
    uint64_t v10 = a2 + v12;
    uint64_t v11 = sub_253DF0140();
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    _s28StatementResolutionReferenceOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v5 = sub_253DEFE90();
    }
    else {
      uint64_t v5 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    uint64_t v11 = sub_253DF01F0();
LABEL_13:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    goto LABEL_16;
  }
  _s28StatementResolutionReferenceOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v7 = sub_253DEFE90();
  }
  else {
    uint64_t v7 = sub_253DEFFE0();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
LABEL_16:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253CE2300(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CDE59C(a1, (void (*)(void))_s20TaskStatementOutcomeOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v6 = sub_253DEFE90();
      }
      else {
        uint64_t v6 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v12 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v9 = a1 + v12;
      uint64_t v10 = a2 + v12;
      uint64_t v11 = sub_253DF0140();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v7 = sub_253DEFE90();
        }
        else {
          uint64_t v7 = sub_253DEFFE0();
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v5 = sub_253DEFE90();
      }
      else {
        uint64_t v5 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v8 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      uint64_t v11 = sub_253DF01F0();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
LABEL_17:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CE2590(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    _s28StatementResolutionReferenceOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v6 = sub_253DEFE90();
    }
    else {
      uint64_t v6 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
    uint64_t v9 = a1 + v12;
    uint64_t v10 = a2 + v12;
    uint64_t v11 = sub_253DF0140();
    goto LABEL_13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    _s28StatementResolutionReferenceOMa(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v5 = sub_253DEFE90();
    }
    else {
      uint64_t v5 = sub_253DEFFE0();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    uint64_t v11 = sub_253DF01F0();
LABEL_13:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    goto LABEL_16;
  }
  _s28StatementResolutionReferenceOMa(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v7 = sub_253DEFE90();
  }
  else {
    uint64_t v7 = sub_253DEFFE0();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
LABEL_16:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_253CE27FC(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253CDE59C(a1, (void (*)(void))_s20TaskStatementOutcomeOMa);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v6 = sub_253DEFE90();
      }
      else {
        uint64_t v6 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v12 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v9 = a1 + v12;
      uint64_t v10 = a2 + v12;
      uint64_t v11 = sub_253DF0140();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v7 = sub_253DEFE90();
        }
        else {
          uint64_t v7 = sub_253DEFFE0();
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2);
        swift_storeEnumTagMultiPayload();
        goto LABEL_17;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v5 = sub_253DEFE90();
      }
      else {
        uint64_t v5 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v8 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      uint64_t v11 = sub_253DF01F0();
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
LABEL_17:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253CE2A8C()
{
  uint64_t result = _s28StatementResolutionReferenceOMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = _s23StatementSuccessOutcomeVMa(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = _s23StatementFailureOutcomeVMa(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_253CE2B8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(v6 + 64));
    return a1;
  }
  _s24StatementExecutionResultOMa(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v12 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v12))
      {
        uint64_t v13 = &qword_269D7C750;
        goto LABEL_16;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v23 = sub_253DEFE90();
      }
      else {
        uint64_t v23 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v23 - 8) + 16))(a1, a2);
      goto LABEL_46;
    case 2u:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v9 = sub_253DEFE90();
      }
      else {
        uint64_t v9 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v9 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v15 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_253DF0140();
      goto LABEL_32;
    case 3u:
      uint64_t v10 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = sub_253BDEDD8(&qword_269D7C750);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v20 = sub_253DEFE90();
        }
        else {
          uint64_t v20 = sub_253DEFFE0();
        }
        (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v20 - 8) + 16))(a1, a2);
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v10);
      }
      uint64_t v24 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v16 = (char *)a1 + v24;
      uint64_t v17 = (char *)a2 + v24;
      uint64_t v18 = sub_253DF2C40();
      goto LABEL_32;
    case 4u:
      uint64_t v12 = _s20TaskStatementOutcomeOMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v12))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v25 = sub_253DEFE90();
          }
          else {
            uint64_t v25 = sub_253DEFFE0();
          }
          (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v25 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v31 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v28 = (char *)a1 + v31;
          uint64_t v29 = (char *)a2 + v31;
          uint64_t v30 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v26 = sub_253DEFE90();
            }
            else {
              uint64_t v26 = sub_253DEFFE0();
            }
            (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v26 - 8) + 16))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_46;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v22 = sub_253DEFE90();
          }
          else {
            uint64_t v22 = sub_253DEFFE0();
          }
          (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v22 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v27 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v28 = (char *)a1 + v27;
          uint64_t v29 = (char *)a2 + v27;
          uint64_t v30 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
LABEL_46:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v12);
        goto LABEL_47;
      }
      uint64_t v13 = &qword_269D7CC08;
LABEL_16:
      uint64_t v14 = sub_253BDEDD8(v13);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_47:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v8 = sub_253DEFE90();
      }
      else {
        uint64_t v8 = sub_253DEFFE0();
      }
      (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v8 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v19 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v16 = (char *)a1 + v19;
      uint64_t v17 = (char *)a2 + v19;
      uint64_t v18 = sub_253DF01F0();
LABEL_32:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      goto LABEL_47;
  }
}

uint64_t sub_253CE3290(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    _s24StatementExecutionResultOMa(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        goto LABEL_4;
      case 1:
        uint64_t v4 = _s23StatementCreatedOutcomeVMa(0);
        uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v4);
        if (!result) {
          goto LABEL_15;
        }
        return result;
      case 2:
        goto LABEL_17;
      case 3:
        uint64_t v5 = _s23StatementCreatedOutcomeVMa(0);
        if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v5))
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v6 = sub_253DEFE90();
          }
          else {
            uint64_t v6 = sub_253DEFFE0();
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
        }
        a1 += *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
        uint64_t v8 = sub_253DF2C40();
        goto LABEL_27;
      case 4:
        uint64_t v7 = _s20TaskStatementOutcomeOMa(0);
        uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v7);
        if (result) {
          return result;
        }
        uint64_t result = swift_getEnumCaseMultiPayload();
        if (result == 2)
        {
LABEL_17:
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v9 = sub_253DEFE90();
          }
          else {
            uint64_t v9 = sub_253DEFFE0();
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
          a1 += *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v8 = sub_253DF0140();
        }
        else if (result == 1)
        {
LABEL_4:
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v3 = sub_253DEFE90();
          }
          else {
            uint64_t v3 = sub_253DEFFE0();
          }
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
          a1 += *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v8 = sub_253DF01F0();
        }
        else
        {
          if (result) {
            return result;
          }
LABEL_15:
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v8 = sub_253DEFE90();
          }
          else {
            uint64_t v8 = sub_253DEFFE0();
          }
        }
LABEL_27:
        uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
        uint64_t result = v10(a1, v8);
        break;
      default:
        return result;
    }
  }
  return result;
}

char *sub_253CE3578(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  _s24StatementExecutionResultOMa(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = &qword_269D7C750;
        goto LABEL_14;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v21 = sub_253DEFE90();
      }
      else {
        uint64_t v21 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v21 - 8) + 16))(a1, a2);
      goto LABEL_44;
    case 2u:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v7 = sub_253DEFE90();
      }
      else {
        uint64_t v7 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v7 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v13 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_253DF0140();
      goto LABEL_30;
    case 3u:
      uint64_t v8 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_253BDEDD8(&qword_269D7C750);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v18 = sub_253DEFE90();
        }
        else {
          uint64_t v18 = sub_253DEFFE0();
        }
        (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 16))(a1, a2);
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v8);
      }
      uint64_t v22 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v14 = &a1[v22];
      uint64_t v15 = &a2[v22];
      uint64_t v16 = sub_253DF2C40();
      goto LABEL_30;
    case 4u:
      uint64_t v10 = _s20TaskStatementOutcomeOMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v10))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v23 = sub_253DEFE90();
          }
          else {
            uint64_t v23 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v23 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v29 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v26 = &a1[v29];
          uint64_t v27 = &a2[v29];
          uint64_t v28 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v24 = sub_253DEFE90();
            }
            else {
              uint64_t v24 = sub_253DEFFE0();
            }
            (*(void (**)(char *, char *))(*(void *)(v24 - 8) + 16))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_44;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v20 = sub_253DEFE90();
          }
          else {
            uint64_t v20 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v20 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v25 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v26 = &a1[v25];
          uint64_t v27 = &a2[v25];
          uint64_t v28 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
LABEL_44:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v10);
        goto LABEL_45;
      }
      uint64_t v11 = &qword_269D7CC08;
LABEL_14:
      uint64_t v12 = sub_253BDEDD8(v11);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_45:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v6 = sub_253DEFE90();
      }
      else {
        uint64_t v6 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v14 = &a1[v17];
      uint64_t v15 = &a2[v17];
      uint64_t v16 = sub_253DF01F0();
LABEL_30:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      goto LABEL_45;
  }
}

char *sub_253CE3C38(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_253CDE59C((uint64_t)a1, (void (*)(void))_s19EvaluatorVoteSourceOMa);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  _s24StatementExecutionResultOMa(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = &qword_269D7C750;
        goto LABEL_15;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v21 = sub_253DEFE90();
      }
      else {
        uint64_t v21 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v21 - 8) + 16))(a1, a2);
      goto LABEL_45;
    case 2u:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v7 = sub_253DEFE90();
      }
      else {
        uint64_t v7 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v7 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v13 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_253DF0140();
      goto LABEL_31;
    case 3u:
      uint64_t v8 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_253BDEDD8(&qword_269D7C750);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v18 = sub_253DEFE90();
        }
        else {
          uint64_t v18 = sub_253DEFFE0();
        }
        (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 16))(a1, a2);
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v8);
      }
      uint64_t v22 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v14 = &a1[v22];
      uint64_t v15 = &a2[v22];
      uint64_t v16 = sub_253DF2C40();
      goto LABEL_31;
    case 4u:
      uint64_t v10 = _s20TaskStatementOutcomeOMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v10))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v23 = sub_253DEFE90();
          }
          else {
            uint64_t v23 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v23 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v29 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v26 = &a1[v29];
          uint64_t v27 = &a2[v29];
          uint64_t v28 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v24 = sub_253DEFE90();
            }
            else {
              uint64_t v24 = sub_253DEFFE0();
            }
            (*(void (**)(char *, char *))(*(void *)(v24 - 8) + 16))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_45;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v20 = sub_253DEFE90();
          }
          else {
            uint64_t v20 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v20 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v25 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v26 = &a1[v25];
          uint64_t v27 = &a2[v25];
          uint64_t v28 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
LABEL_45:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v10);
        goto LABEL_46;
      }
      uint64_t v11 = &qword_269D7CC08;
LABEL_15:
      uint64_t v12 = sub_253BDEDD8(v11);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_46:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v6 = sub_253DEFE90();
      }
      else {
        uint64_t v6 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v14 = &a1[v17];
      uint64_t v15 = &a2[v17];
      uint64_t v16 = sub_253DF01F0();
LABEL_31:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      goto LABEL_46;
  }
}

char *sub_253CE431C(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  _s24StatementExecutionResultOMa(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = &qword_269D7C750;
        goto LABEL_14;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v21 = sub_253DEFE90();
      }
      else {
        uint64_t v21 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v21 - 8) + 32))(a1, a2);
      goto LABEL_44;
    case 2u:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v7 = sub_253DEFE90();
      }
      else {
        uint64_t v7 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v7 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v13 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_253DF0140();
      goto LABEL_30;
    case 3u:
      uint64_t v8 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_253BDEDD8(&qword_269D7C750);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v18 = sub_253DEFE90();
        }
        else {
          uint64_t v18 = sub_253DEFFE0();
        }
        (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 32))(a1, a2);
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v8);
      }
      uint64_t v22 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v14 = &a1[v22];
      uint64_t v15 = &a2[v22];
      uint64_t v16 = sub_253DF2C40();
      goto LABEL_30;
    case 4u:
      uint64_t v10 = _s20TaskStatementOutcomeOMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v10))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v23 = sub_253DEFE90();
          }
          else {
            uint64_t v23 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v23 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v29 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v26 = &a1[v29];
          uint64_t v27 = &a2[v29];
          uint64_t v28 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v24 = sub_253DEFE90();
            }
            else {
              uint64_t v24 = sub_253DEFFE0();
            }
            (*(void (**)(char *, char *))(*(void *)(v24 - 8) + 32))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_44;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v20 = sub_253DEFE90();
          }
          else {
            uint64_t v20 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v20 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v25 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v26 = &a1[v25];
          uint64_t v27 = &a2[v25];
          uint64_t v28 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
LABEL_44:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v10);
        goto LABEL_45;
      }
      uint64_t v11 = &qword_269D7CC08;
LABEL_14:
      uint64_t v12 = sub_253BDEDD8(v11);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_45:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v6 = sub_253DEFE90();
      }
      else {
        uint64_t v6 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v14 = &a1[v17];
      uint64_t v15 = &a2[v17];
      uint64_t v16 = sub_253DF01F0();
LABEL_30:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      goto LABEL_45;
  }
}

char *sub_253CE49DC(char *a1, char *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_253CDE59C((uint64_t)a1, (void (*)(void))_s19EvaluatorVoteSourceOMa);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  _s24StatementExecutionResultOMa(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v10))
      {
        uint64_t v11 = &qword_269D7C750;
        goto LABEL_15;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v21 = sub_253DEFE90();
      }
      else {
        uint64_t v21 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v21 - 8) + 32))(a1, a2);
      goto LABEL_45;
    case 2u:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v7 = sub_253DEFE90();
      }
      else {
        uint64_t v7 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v7 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v13 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_253DF0140();
      goto LABEL_31;
    case 3u:
      uint64_t v8 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_253BDEDD8(&qword_269D7C750);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v18 = sub_253DEFE90();
        }
        else {
          uint64_t v18 = sub_253DEFFE0();
        }
        (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 32))(a1, a2);
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v8);
      }
      uint64_t v22 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v14 = &a1[v22];
      uint64_t v15 = &a2[v22];
      uint64_t v16 = sub_253DF2C40();
      goto LABEL_31;
    case 4u:
      uint64_t v10 = _s20TaskStatementOutcomeOMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v10))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v23 = sub_253DEFE90();
          }
          else {
            uint64_t v23 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v23 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v29 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v26 = &a1[v29];
          uint64_t v27 = &a2[v29];
          uint64_t v28 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v24 = sub_253DEFE90();
            }
            else {
              uint64_t v24 = sub_253DEFFE0();
            }
            (*(void (**)(char *, char *))(*(void *)(v24 - 8) + 32))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_45;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v20 = sub_253DEFE90();
          }
          else {
            uint64_t v20 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v20 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v25 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v26 = &a1[v25];
          uint64_t v27 = &a2[v25];
          uint64_t v28 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
LABEL_45:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v10);
        goto LABEL_46;
      }
      uint64_t v11 = &qword_269D7CC08;
LABEL_15:
      uint64_t v12 = sub_253BDEDD8(v11);
      memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_46:
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v6 = sub_253DEFE90();
      }
      else {
        uint64_t v6 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v6 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v14 = &a1[v17];
      uint64_t v15 = &a2[v17];
      uint64_t v16 = sub_253DF01F0();
LABEL_31:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      goto LABEL_46;
  }
}

uint64_t sub_253CE50C0()
{
  uint64_t result = _s24StatementExecutionResultOMa(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_253CE5150(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v13 = _s23StatementCreatedOutcomeVMa(0);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v13))
        {
          uint64_t v14 = sub_253BDEDD8(&qword_269D7C750);
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v26 = sub_253DEFE90();
          }
          else {
            uint64_t v26 = sub_253DEFFE0();
          }
          (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v26 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v13);
        }
        goto LABEL_44;
      case 2u:
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v8 = sub_253DEFE90();
        }
        else {
          uint64_t v8 = sub_253DEFFE0();
        }
        (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v8 - 8) + 16))(a1, a2);
        swift_storeEnumTagMultiPayload();
        uint64_t v15 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_253DF0140();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        goto LABEL_44;
      case 3u:
        uint64_t v9 = _s23StatementCreatedOutcomeVMa(0);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v9))
        {
          uint64_t v10 = sub_253BDEDD8(&qword_269D7C750);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v23 = sub_253DEFE90();
          }
          else {
            uint64_t v23 = sub_253DEFFE0();
          }
          (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v23 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v9);
        }
        uint64_t v27 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_253DF2C40();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        goto LABEL_44;
      case 4u:
        uint64_t v11 = _s20TaskStatementOutcomeOMa(0);
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v11))
        {
          uint64_t v12 = sub_253BDEDD8(&qword_269D7CC08);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_44:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v31 = sub_253DEFE90();
          }
          else {
            uint64_t v31 = sub_253DEFFE0();
          }
          (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v31 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v37 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v34 = (char *)a1 + v37;
          uint64_t v35 = (char *)a2 + v37;
          uint64_t v36 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v32 = sub_253DEFE90();
            }
            else {
              uint64_t v32 = sub_253DEFFE0();
            }
            (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v32 - 8) + 16))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_43;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v25 = sub_253DEFE90();
          }
          else {
            uint64_t v25 = sub_253DEFFE0();
          }
          (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v25 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v33 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v34 = (char *)a1 + v33;
          uint64_t v35 = (char *)a2 + v33;
          uint64_t v36 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
LABEL_43:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v11);
        goto LABEL_44;
      default:
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v6 = sub_253DEFE90();
        }
        else {
          uint64_t v6 = sub_253DEFFE0();
        }
        (*(void (**)(uint64_t *, uint64_t *))(*(void *)(v6 - 8) + 16))(a1, a2);
        swift_storeEnumTagMultiPayload();
        uint64_t v19 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_253DF01F0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        goto LABEL_44;
    }
  }
  uint64_t v7 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_253CE58D8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      goto LABEL_2;
    case 1:
      uint64_t v4 = _s23StatementCreatedOutcomeVMa(0);
      uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v4);
      if (!result) {
        goto LABEL_16;
      }
      return result;
    case 2:
      goto LABEL_18;
    case 3:
      uint64_t v5 = _s23StatementCreatedOutcomeVMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v5))
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v6 = sub_253DEFE90();
        }
        else {
          uint64_t v6 = sub_253DEFFE0();
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      }
      a1 += *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v8 = sub_253DF2C40();
      goto LABEL_26;
    case 4:
      uint64_t v7 = _s20TaskStatementOutcomeOMa(0);
      uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v7);
      if (result) {
        return result;
      }
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
LABEL_18:
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v9 = sub_253DEFE90();
        }
        else {
          uint64_t v9 = sub_253DEFFE0();
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
        a1 += *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
        uint64_t v8 = sub_253DF0140();
      }
      else if (result == 1)
      {
LABEL_2:
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v3 = sub_253DEFE90();
        }
        else {
          uint64_t v3 = sub_253DEFFE0();
        }
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
        a1 += *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
        uint64_t v8 = sub_253DF01F0();
      }
      else
      {
        if (result) {
          return result;
        }
LABEL_16:
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v8 = sub_253DEFE90();
        }
        else {
          uint64_t v8 = sub_253DEFFE0();
        }
      }
LABEL_26:
      uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      return v10(a1, v8);
    default:
      return result;
  }
}

char *sub_253CE5BA8(char *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = &qword_269D7C750;
        goto LABEL_12;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v19 = sub_253DEFE90();
      }
      else {
        uint64_t v19 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v19 - 8) + 16))(a1, a2);
      goto LABEL_42;
    case 2u:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v5 = sub_253DEFE90();
      }
      else {
        uint64_t v5 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_253DF0140();
      goto LABEL_28;
    case 3u:
      uint64_t v6 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_253BDEDD8(&qword_269D7C750);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v16 = sub_253DEFE90();
        }
        else {
          uint64_t v16 = sub_253DEFFE0();
        }
        (*(void (**)(char *, char *))(*(void *)(v16 - 8) + 16))(a1, a2);
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v20 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v12 = &a1[v20];
      uint64_t v13 = &a2[v20];
      uint64_t v14 = sub_253DF2C40();
      goto LABEL_28;
    case 4u:
      uint64_t v8 = _s20TaskStatementOutcomeOMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v21 = sub_253DEFE90();
          }
          else {
            uint64_t v21 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v21 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v27 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v24 = &a1[v27];
          uint64_t v25 = &a2[v27];
          uint64_t v26 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v22 = sub_253DEFE90();
            }
            else {
              uint64_t v22 = sub_253DEFFE0();
            }
            (*(void (**)(char *, char *))(*(void *)(v22 - 8) + 16))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_42;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v18 = sub_253DEFE90();
          }
          else {
            uint64_t v18 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v23 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v24 = &a1[v23];
          uint64_t v25 = &a2[v23];
          uint64_t v26 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
LABEL_42:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v8);
        goto LABEL_43;
      }
      uint64_t v9 = &qword_269D7CC08;
LABEL_12:
      uint64_t v10 = sub_253BDEDD8(v9);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_43:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v4 = sub_253DEFE90();
      }
      else {
        uint64_t v4 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v15 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v12 = &a1[v15];
      uint64_t v13 = &a2[v15];
      uint64_t v14 = sub_253DF01F0();
LABEL_28:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      goto LABEL_43;
  }
}

char *sub_253CE6210(char *a1, char *a2)
{
  if (a1 == a2) {
    return a1;
  }
  sub_253CDE59C((uint64_t)a1, (void (*)(void))_s24StatementExecutionResultOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = &qword_269D7C750;
        goto LABEL_13;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v19 = sub_253DEFE90();
      }
      else {
        uint64_t v19 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v19 - 8) + 16))(a1, a2);
      goto LABEL_43;
    case 2u:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v5 = sub_253DEFE90();
      }
      else {
        uint64_t v5 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_253DF0140();
      goto LABEL_29;
    case 3u:
      uint64_t v6 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_253BDEDD8(&qword_269D7C750);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v16 = sub_253DEFE90();
        }
        else {
          uint64_t v16 = sub_253DEFFE0();
        }
        (*(void (**)(char *, char *))(*(void *)(v16 - 8) + 16))(a1, a2);
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v20 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v12 = &a1[v20];
      uint64_t v13 = &a2[v20];
      uint64_t v14 = sub_253DF2C40();
      goto LABEL_29;
    case 4u:
      uint64_t v8 = _s20TaskStatementOutcomeOMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v21 = sub_253DEFE90();
          }
          else {
            uint64_t v21 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v21 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v27 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v24 = &a1[v27];
          uint64_t v25 = &a2[v27];
          uint64_t v26 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v22 = sub_253DEFE90();
            }
            else {
              uint64_t v22 = sub_253DEFFE0();
            }
            (*(void (**)(char *, char *))(*(void *)(v22 - 8) + 16))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_43;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v18 = sub_253DEFE90();
          }
          else {
            uint64_t v18 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 16))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v23 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v24 = &a1[v23];
          uint64_t v25 = &a2[v23];
          uint64_t v26 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
LABEL_43:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v8);
        goto LABEL_44;
      }
      uint64_t v9 = &qword_269D7CC08;
LABEL_13:
      uint64_t v10 = sub_253BDEDD8(v9);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_44:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v4 = sub_253DEFE90();
      }
      else {
        uint64_t v4 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 16))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v15 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v12 = &a1[v15];
      uint64_t v13 = &a2[v15];
      uint64_t v14 = sub_253DF01F0();
LABEL_29:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      goto LABEL_44;
  }
}

char *sub_253CE689C(char *a1, char *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = &qword_269D7C750;
        goto LABEL_12;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v19 = sub_253DEFE90();
      }
      else {
        uint64_t v19 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v19 - 8) + 32))(a1, a2);
      goto LABEL_42;
    case 2u:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v5 = sub_253DEFE90();
      }
      else {
        uint64_t v5 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_253DF0140();
      goto LABEL_28;
    case 3u:
      uint64_t v6 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_253BDEDD8(&qword_269D7C750);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v16 = sub_253DEFE90();
        }
        else {
          uint64_t v16 = sub_253DEFFE0();
        }
        (*(void (**)(char *, char *))(*(void *)(v16 - 8) + 32))(a1, a2);
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v20 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v12 = &a1[v20];
      uint64_t v13 = &a2[v20];
      uint64_t v14 = sub_253DF2C40();
      goto LABEL_28;
    case 4u:
      uint64_t v8 = _s20TaskStatementOutcomeOMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v21 = sub_253DEFE90();
          }
          else {
            uint64_t v21 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v21 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v27 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v24 = &a1[v27];
          uint64_t v25 = &a2[v27];
          uint64_t v26 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v22 = sub_253DEFE90();
            }
            else {
              uint64_t v22 = sub_253DEFFE0();
            }
            (*(void (**)(char *, char *))(*(void *)(v22 - 8) + 32))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_42;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v18 = sub_253DEFE90();
          }
          else {
            uint64_t v18 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v23 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v24 = &a1[v23];
          uint64_t v25 = &a2[v23];
          uint64_t v26 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
LABEL_42:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v8);
        goto LABEL_43;
      }
      uint64_t v9 = &qword_269D7CC08;
LABEL_12:
      uint64_t v10 = sub_253BDEDD8(v9);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_43:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v4 = sub_253DEFE90();
      }
      else {
        uint64_t v4 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v15 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v12 = &a1[v15];
      uint64_t v13 = &a2[v15];
      uint64_t v14 = sub_253DF01F0();
LABEL_28:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      goto LABEL_43;
  }
}

char *sub_253CE6F04(char *a1, char *a2)
{
  if (a1 == a2) {
    return a1;
  }
  sub_253CDE59C((uint64_t)a1, (void (*)(void))_s24StatementExecutionResultOMa);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = &qword_269D7C750;
        goto LABEL_13;
      }
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v19 = sub_253DEFE90();
      }
      else {
        uint64_t v19 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v19 - 8) + 32))(a1, a2);
      goto LABEL_43;
    case 2u:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v5 = sub_253DEFE90();
      }
      else {
        uint64_t v5 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v5 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v11 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = sub_253DF0140();
      goto LABEL_29;
    case 3u:
      uint64_t v6 = _s23StatementCreatedOutcomeVMa(0);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_253BDEDD8(&qword_269D7C750);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        _s28StatementResolutionReferenceOMa(0);
        if (swift_getEnumCaseMultiPayload() == 1) {
          uint64_t v16 = sub_253DEFE90();
        }
        else {
          uint64_t v16 = sub_253DEFFE0();
        }
        (*(void (**)(char *, char *))(*(void *)(v16 - 8) + 32))(a1, a2);
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v6);
      }
      uint64_t v20 = *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
      uint64_t v12 = &a1[v20];
      uint64_t v13 = &a2[v20];
      uint64_t v14 = sub_253DF2C40();
      goto LABEL_29;
    case 4u:
      uint64_t v8 = _s20TaskStatementOutcomeOMa(0);
      if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 1, v8))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2)
        {
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v21 = sub_253DEFE90();
          }
          else {
            uint64_t v21 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v21 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v27 = *(int *)(_s23StatementFailureOutcomeVMa(0) + 20);
          uint64_t v24 = &a1[v27];
          uint64_t v25 = &a2[v27];
          uint64_t v26 = sub_253DF0140();
        }
        else
        {
          if (EnumCaseMultiPayload != 1)
          {
            _s28StatementResolutionReferenceOMa(0);
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v22 = sub_253DEFE90();
            }
            else {
              uint64_t v22 = sub_253DEFFE0();
            }
            (*(void (**)(char *, char *))(*(void *)(v22 - 8) + 32))(a1, a2);
            swift_storeEnumTagMultiPayload();
            goto LABEL_43;
          }
          _s28StatementResolutionReferenceOMa(0);
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v18 = sub_253DEFE90();
          }
          else {
            uint64_t v18 = sub_253DEFFE0();
          }
          (*(void (**)(char *, char *))(*(void *)(v18 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          uint64_t v23 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
          uint64_t v24 = &a1[v23];
          uint64_t v25 = &a2[v23];
          uint64_t v26 = sub_253DF01F0();
        }
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
LABEL_43:
        swift_storeEnumTagMultiPayload();
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 1, v8);
        goto LABEL_44;
      }
      uint64_t v9 = &qword_269D7CC08;
LABEL_13:
      uint64_t v10 = sub_253BDEDD8(v9);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_44:
      swift_storeEnumTagMultiPayload();
      return a1;
    default:
      _s28StatementResolutionReferenceOMa(0);
      if (swift_getEnumCaseMultiPayload() == 1) {
        uint64_t v4 = sub_253DEFE90();
      }
      else {
        uint64_t v4 = sub_253DEFFE0();
      }
      (*(void (**)(char *, char *))(*(void *)(v4 - 8) + 32))(a1, a2);
      swift_storeEnumTagMultiPayload();
      uint64_t v15 = *(int *)(_s23StatementSuccessOutcomeVMa(0) + 20);
      uint64_t v12 = &a1[v15];
      uint64_t v13 = &a2[v15];
      uint64_t v14 = sub_253DF01F0();
LABEL_29:
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      goto LABEL_44;
  }
}

void sub_253CE7590()
{
  uint64_t v0 = _s23StatementSuccessOutcomeVMa(319);
  if (v1 <= 0x3F)
  {
    uint64_t v10 = *(void *)(v0 - 8) + 64;
    sub_253CE7758(319, &qword_269D7DBC0, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
    if (v3 <= 0x3F)
    {
      uint64_t v11 = *(void *)(v2 - 8) + 64;
      uint64_t v4 = _s23StatementFailureOutcomeVMa(319);
      if (v5 <= 0x3F)
      {
        uint64_t v12 = *(void *)(v4 - 8) + 64;
        sub_253DF2C40();
        if (v6 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          uint64_t v13 = &v9;
          sub_253CE7758(319, &qword_269D7DBC8, (void (*)(uint64_t))_s20TaskStatementOutcomeOMa);
          if (v8 <= 0x3F)
          {
            uint64_t v14 = *(void *)(v7 - 8) + 64;
            swift_initEnumMetadataMultiPayload();
          }
        }
      }
    }
  }
}

void sub_253CE7758(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_253CE9F14();
    unint64_t v4 = sub_253DF5810();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_253CE77A8(uint64_t a1)
{
  unint64_t v2 = sub_253CE82C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE77E4(uint64_t a1)
{
  unint64_t v2 = sub_253CE82C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_253CE7820()
{
  return sub_253CDE938(*v0);
}

uint64_t sub_253CE7828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CDE6C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CE7850(uint64_t a1)
{
  unint64_t v2 = sub_253CE8274();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE788C(uint64_t a1)
{
  unint64_t v2 = sub_253CE8274();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE78C8(uint64_t a1)
{
  unint64_t v2 = sub_253CE83F0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE7904(uint64_t a1)
{
  unint64_t v2 = sub_253CE83F0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE7940()
{
  return sub_253CDEAD8(*v0);
}

uint64_t sub_253CE7948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CDEA10(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CE7970(uint64_t a1)
{
  unint64_t v2 = sub_253CE830C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE79AC(uint64_t a1)
{
  unint64_t v2 = sub_253CE830C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE79E8(uint64_t a1)
{
  unint64_t v2 = sub_253CE83A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE7A24(uint64_t a1)
{
  unint64_t v2 = sub_253CE83A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CE7A60(uint64_t a1)
{
  unint64_t v2 = sub_253CE8358();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CE7A9C(uint64_t a1)
{
  unint64_t v2 = sub_253CE8358();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CE7AD8()
{
}

void sub_253CE7AF0()
{
}

uint64_t sub_253CE7B0C(void *a1)
{
  a1[1] = sub_253CE7BB8(&qword_269D7DBD0, (void (*)(uint64_t))_s20TaskStatementOutcomeOMa);
  a1[2] = sub_253CE7BB8(&qword_269D7DBD8, (void (*)(uint64_t))_s20TaskStatementOutcomeOMa);
  uint64_t result = sub_253CE7BB8(&qword_269D7DBE0, (void (*)(uint64_t))_s20TaskStatementOutcomeOMa);
  a1[3] = result;
  return result;
}

uint64_t sub_253CE7BB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    sub_253CE9F14();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253CE7BFC(void *a1)
{
  a1[1] = sub_253CE7BB8(&qword_269D7DBE8, (void (*)(uint64_t))_s23StatementFailureOutcomeVMa);
  a1[2] = sub_253CE7BB8(&qword_269D7DBF0, (void (*)(uint64_t))_s23StatementFailureOutcomeVMa);
  uint64_t result = sub_253CE7BB8(&qword_269D7DBF8, (void (*)(uint64_t))_s23StatementFailureOutcomeVMa);
  a1[3] = result;
  return result;
}

uint64_t sub_253CE7CA8(void *a1)
{
  a1[1] = sub_253CE7BB8(&qword_269D7DC00, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
  a1[2] = sub_253CE7BB8(&qword_269D7DC08, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
  uint64_t result = sub_253CE7BB8(&qword_269D7DC10, (void (*)(uint64_t))_s23StatementCreatedOutcomeVMa);
  a1[3] = result;
  return result;
}

uint64_t sub_253CE7D54(void *a1)
{
  a1[1] = sub_253CE7BB8(&qword_269D7DC18, (void (*)(uint64_t))_s23StatementSuccessOutcomeVMa);
  a1[2] = sub_253CE7BB8(&qword_269D7DC20, (void (*)(uint64_t))_s23StatementSuccessOutcomeVMa);
  uint64_t result = sub_253CE7BB8(&qword_269D7DC28, (void (*)(uint64_t))_s23StatementSuccessOutcomeVMa);
  a1[3] = result;
  return result;
}

unint64_t sub_253CE7E00()
{
  unint64_t result = qword_269D7DC48;
  if (!qword_269D7DC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DC48);
  }
  return result;
}

unint64_t sub_253CE7E4C()
{
  unint64_t result = qword_269D7DC50;
  if (!qword_269D7DC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DC50);
  }
  return result;
}

unint64_t sub_253CE7E98()
{
  unint64_t result = qword_269D7DC58;
  if (!qword_269D7DC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DC58);
  }
  return result;
}

unint64_t sub_253CE7EE4()
{
  unint64_t result = qword_269D7DC80;
  if (!qword_269D7DC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DC80);
  }
  return result;
}

unint64_t sub_253CE7F30()
{
  unint64_t result = qword_269D7DCB8;
  if (!qword_269D7DCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DCB8);
  }
  return result;
}

unint64_t sub_253CE7F7C()
{
  unint64_t result = qword_269D7DCD0;
  if (!qword_269D7DCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DCD0);
  }
  return result;
}

unint64_t sub_253CE7FC8()
{
  unint64_t result = qword_269D7DD10;
  if (!qword_269D7DD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DD10);
  }
  return result;
}

unint64_t sub_253CE8014()
{
  unint64_t result = qword_269D7DD18;
  if (!qword_269D7DD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DD18);
  }
  return result;
}

unint64_t sub_253CE8060()
{
  unint64_t result = qword_269D7DD20;
  if (!qword_269D7DD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DD20);
  }
  return result;
}

unint64_t sub_253CE80AC()
{
  unint64_t result = qword_269D7DD28;
  if (!qword_269D7DD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DD28);
  }
  return result;
}

unint64_t sub_253CE80F8()
{
  unint64_t result = qword_269D7DD68;
  if (!qword_269D7DD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DD68);
  }
  return result;
}

unint64_t sub_253CE8144()
{
  unint64_t result = qword_269D7DD70;
  if (!qword_269D7DD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DD70);
  }
  return result;
}

unint64_t sub_253CE8190()
{
  unint64_t result = qword_269D7DD78;
  if (!qword_269D7DD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DD78);
  }
  return result;
}

unint64_t sub_253CE81DC()
{
  unint64_t result = qword_269D7DD80;
  if (!qword_269D7DD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DD80);
  }
  return result;
}

unint64_t sub_253CE8228()
{
  unint64_t result = qword_269D7DDA8;
  if (!qword_269D7DDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DDA8);
  }
  return result;
}

unint64_t sub_253CE8274()
{
  unint64_t result = qword_269D7DDE8;
  if (!qword_269D7DDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DDE8);
  }
  return result;
}

unint64_t sub_253CE82C0()
{
  unint64_t result = qword_269D7DDF0;
  if (!qword_269D7DDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DDF0);
  }
  return result;
}

unint64_t sub_253CE830C()
{
  unint64_t result = qword_269D7DDF8;
  if (!qword_269D7DDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DDF8);
  }
  return result;
}

unint64_t sub_253CE8358()
{
  unint64_t result = qword_269D7DE00;
  if (!qword_269D7DE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE00);
  }
  return result;
}

unint64_t sub_253CE83A4()
{
  unint64_t result = qword_269D7DE08;
  if (!qword_269D7DE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE08);
  }
  return result;
}

unint64_t sub_253CE83F0()
{
  unint64_t result = qword_269D7DE10;
  if (!qword_269D7DE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE10);
  }
  return result;
}

unsigned char *_s24StatementExecutionResultO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CE8508);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s24StatementExecutionResultO10CodingKeysOMa()
{
  return &_s24StatementExecutionResultO10CodingKeysON;
}

ValueMetadata *_s24StatementExecutionResultO31CompletedSuccessfullyCodingKeysOMa()
{
  return &_s24StatementExecutionResultO31CompletedSuccessfullyCodingKeysON;
}

ValueMetadata *_s24StatementExecutionResultO23DidNotExecuteCodingKeysOMa()
{
  return &_s24StatementExecutionResultO23DidNotExecuteCodingKeysON;
}

ValueMetadata *_s24StatementExecutionResultO25ExecutionFailedCodingKeysOMa()
{
  return &_s24StatementExecutionResultO25ExecutionFailedCodingKeysON;
}

ValueMetadata *_s24StatementExecutionResultO25CriticalFailureCodingKeysOMa()
{
  return &_s24StatementExecutionResultO25CriticalFailureCodingKeysON;
}

ValueMetadata *_s24StatementExecutionResultO18CanceledCodingKeysOMa()
{
  return &_s24StatementExecutionResultO18CanceledCodingKeysON;
}

ValueMetadata *_s19EvaluatorVoteSourceO10CodingKeysOMa()
{
  return &_s19EvaluatorVoteSourceO10CodingKeysON;
}

ValueMetadata *_s19EvaluatorVoteSourceO28StatementExecutionCodingKeysOMa()
{
  return &_s19EvaluatorVoteSourceO28StatementExecutionCodingKeysON;
}

ValueMetadata *_s19EvaluatorVoteSourceO28ActionConfirmationCodingKeysOMa()
{
  return &_s19EvaluatorVoteSourceO28ActionConfirmationCodingKeysON;
}

unsigned char *_s20TaskStatementOutcomeO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CE8698);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s20TaskStatementOutcomeO10CodingKeysOMa()
{
  return &_s20TaskStatementOutcomeO10CodingKeysON;
}

ValueMetadata *_s20TaskStatementOutcomeO17CreatedCodingKeysOMa()
{
  return &_s20TaskStatementOutcomeO17CreatedCodingKeysON;
}

ValueMetadata *_s20TaskStatementOutcomeO17SuccessCodingKeysOMa()
{
  return &_s20TaskStatementOutcomeO17SuccessCodingKeysON;
}

ValueMetadata *_s20TaskStatementOutcomeO17FailureCodingKeysOMa()
{
  return &_s20TaskStatementOutcomeO17FailureCodingKeysON;
}

ValueMetadata *_s23StatementFailureOutcomeV10CodingKeysOMa()
{
  return &_s23StatementFailureOutcomeV10CodingKeysON;
}

ValueMetadata *_s23StatementCreatedOutcomeV10CodingKeysOMa()
{
  return &_s23StatementCreatedOutcomeV10CodingKeysON;
}

ValueMetadata *_s23StatementSuccessOutcomeV10CodingKeysOMa()
{
  return &_s23StatementSuccessOutcomeV10CodingKeysON;
}

unsigned char *_s24StatementExecutionResultO25CriticalFailureCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CE87FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s28StatementResolutionReferenceO10CodingKeysOMa()
{
  return &_s28StatementResolutionReferenceO10CodingKeysON;
}

ValueMetadata *_s28StatementResolutionReferenceO15ValueCodingKeysOMa()
{
  return &_s28StatementResolutionReferenceO15ValueCodingKeysON;
}

unsigned char *_s24StatementExecutionResultO31CompletedSuccessfullyCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x253CE88E0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s28StatementResolutionReferenceO23ActionEventIdCodingKeysOMa()
{
  return &_s28StatementResolutionReferenceO23ActionEventIdCodingKeysON;
}

unint64_t sub_253CE891C()
{
  unint64_t result = qword_269D7DE48;
  if (!qword_269D7DE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE48);
  }
  return result;
}

unint64_t sub_253CE896C()
{
  unint64_t result = qword_269D7DE50;
  if (!qword_269D7DE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE50);
  }
  return result;
}

unint64_t sub_253CE89BC()
{
  unint64_t result = qword_269D7DE58;
  if (!qword_269D7DE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE58);
  }
  return result;
}

unint64_t sub_253CE8A0C()
{
  unint64_t result = qword_269D7DE60;
  if (!qword_269D7DE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE60);
  }
  return result;
}

unint64_t sub_253CE8A5C()
{
  unint64_t result = qword_269D7DE68;
  if (!qword_269D7DE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE68);
  }
  return result;
}

unint64_t sub_253CE8AAC()
{
  unint64_t result = qword_269D7DE70;
  if (!qword_269D7DE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE70);
  }
  return result;
}

unint64_t sub_253CE8AFC()
{
  unint64_t result = qword_269D7DE78;
  if (!qword_269D7DE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE78);
  }
  return result;
}

unint64_t sub_253CE8B4C()
{
  unint64_t result = qword_269D7DE80;
  if (!qword_269D7DE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE80);
  }
  return result;
}

unint64_t sub_253CE8B9C()
{
  unint64_t result = qword_269D7DE88;
  if (!qword_269D7DE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE88);
  }
  return result;
}

unint64_t sub_253CE8BEC()
{
  unint64_t result = qword_269D7DE90;
  if (!qword_269D7DE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE90);
  }
  return result;
}

unint64_t sub_253CE8C3C()
{
  unint64_t result = qword_269D7DE98;
  if (!qword_269D7DE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DE98);
  }
  return result;
}

unint64_t sub_253CE8C8C()
{
  unint64_t result = qword_269D7DEA0;
  if (!qword_269D7DEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEA0);
  }
  return result;
}

unint64_t sub_253CE8CDC()
{
  unint64_t result = qword_269D7DEA8;
  if (!qword_269D7DEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEA8);
  }
  return result;
}

unint64_t sub_253CE8D2C()
{
  unint64_t result = qword_269D7DEB0;
  if (!qword_269D7DEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEB0);
  }
  return result;
}

unint64_t sub_253CE8D7C()
{
  unint64_t result = qword_269D7DEB8;
  if (!qword_269D7DEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEB8);
  }
  return result;
}

unint64_t sub_253CE8DCC()
{
  unint64_t result = qword_269D7DEC0;
  if (!qword_269D7DEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEC0);
  }
  return result;
}

unint64_t sub_253CE8E1C()
{
  unint64_t result = qword_269D7DEC8;
  if (!qword_269D7DEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEC8);
  }
  return result;
}

unint64_t sub_253CE8E6C()
{
  unint64_t result = qword_269D7DED0;
  if (!qword_269D7DED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DED0);
  }
  return result;
}

unint64_t sub_253CE8EBC()
{
  unint64_t result = qword_269D7DED8;
  if (!qword_269D7DED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DED8);
  }
  return result;
}

unint64_t sub_253CE8F0C()
{
  unint64_t result = qword_269D7DEE0;
  if (!qword_269D7DEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEE0);
  }
  return result;
}

unint64_t sub_253CE8F5C()
{
  unint64_t result = qword_269D7DEE8;
  if (!qword_269D7DEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEE8);
  }
  return result;
}

unint64_t sub_253CE8FAC()
{
  unint64_t result = qword_269D7DEF0;
  if (!qword_269D7DEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEF0);
  }
  return result;
}

unint64_t sub_253CE8FFC()
{
  unint64_t result = qword_269D7DEF8;
  if (!qword_269D7DEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DEF8);
  }
  return result;
}

unint64_t sub_253CE904C()
{
  unint64_t result = qword_269D7DF00;
  if (!qword_269D7DF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF00);
  }
  return result;
}

unint64_t sub_253CE909C()
{
  unint64_t result = qword_269D7DF08;
  if (!qword_269D7DF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF08);
  }
  return result;
}

unint64_t sub_253CE90EC()
{
  unint64_t result = qword_269D7DF10;
  if (!qword_269D7DF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF10);
  }
  return result;
}

unint64_t sub_253CE913C()
{
  unint64_t result = qword_269D7DF18;
  if (!qword_269D7DF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF18);
  }
  return result;
}

unint64_t sub_253CE918C()
{
  unint64_t result = qword_269D7DF20;
  if (!qword_269D7DF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF20);
  }
  return result;
}

unint64_t sub_253CE91DC()
{
  unint64_t result = qword_269D7DF28;
  if (!qword_269D7DF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF28);
  }
  return result;
}

unint64_t sub_253CE922C()
{
  unint64_t result = qword_269D7DF30;
  if (!qword_269D7DF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF30);
  }
  return result;
}

unint64_t sub_253CE927C()
{
  unint64_t result = qword_269D7DF38;
  if (!qword_269D7DF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF38);
  }
  return result;
}

unint64_t sub_253CE92CC()
{
  unint64_t result = qword_269D7DF40;
  if (!qword_269D7DF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF40);
  }
  return result;
}

unint64_t sub_253CE931C()
{
  unint64_t result = qword_269D7DF48;
  if (!qword_269D7DF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF48);
  }
  return result;
}

unint64_t sub_253CE936C()
{
  unint64_t result = qword_269D7DF50;
  if (!qword_269D7DF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF50);
  }
  return result;
}

unint64_t sub_253CE93BC()
{
  unint64_t result = qword_269D7DF58;
  if (!qword_269D7DF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF58);
  }
  return result;
}

unint64_t sub_253CE940C()
{
  unint64_t result = qword_269D7DF60;
  if (!qword_269D7DF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF60);
  }
  return result;
}

unint64_t sub_253CE945C()
{
  unint64_t result = qword_269D7DF68;
  if (!qword_269D7DF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF68);
  }
  return result;
}

unint64_t sub_253CE94AC()
{
  unint64_t result = qword_269D7DF70;
  if (!qword_269D7DF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF70);
  }
  return result;
}

unint64_t sub_253CE94FC()
{
  unint64_t result = qword_269D7DF78;
  if (!qword_269D7DF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF78);
  }
  return result;
}

unint64_t sub_253CE954C()
{
  unint64_t result = qword_269D7DF80;
  if (!qword_269D7DF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF80);
  }
  return result;
}

unint64_t sub_253CE959C()
{
  unint64_t result = qword_269D7DF88;
  if (!qword_269D7DF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF88);
  }
  return result;
}

unint64_t sub_253CE95EC()
{
  unint64_t result = qword_269D7DF90;
  if (!qword_269D7DF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF90);
  }
  return result;
}

unint64_t sub_253CE963C()
{
  unint64_t result = qword_269D7DF98;
  if (!qword_269D7DF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DF98);
  }
  return result;
}

unint64_t sub_253CE968C()
{
  unint64_t result = qword_269D7DFA0;
  if (!qword_269D7DFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFA0);
  }
  return result;
}

unint64_t sub_253CE96DC()
{
  unint64_t result = qword_269D7DFA8;
  if (!qword_269D7DFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFA8);
  }
  return result;
}

unint64_t sub_253CE972C()
{
  unint64_t result = qword_269D7DFB0;
  if (!qword_269D7DFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFB0);
  }
  return result;
}

unint64_t sub_253CE977C()
{
  unint64_t result = qword_269D7DFB8;
  if (!qword_269D7DFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFB8);
  }
  return result;
}

unint64_t sub_253CE97CC()
{
  unint64_t result = qword_269D7DFC0;
  if (!qword_269D7DFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFC0);
  }
  return result;
}

unint64_t sub_253CE981C()
{
  unint64_t result = qword_269D7DFC8;
  if (!qword_269D7DFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFC8);
  }
  return result;
}

unint64_t sub_253CE986C()
{
  unint64_t result = qword_269D7DFD0;
  if (!qword_269D7DFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFD0);
  }
  return result;
}

unint64_t sub_253CE98BC()
{
  unint64_t result = qword_269D7DFD8;
  if (!qword_269D7DFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFD8);
  }
  return result;
}

unint64_t sub_253CE990C()
{
  unint64_t result = qword_269D7DFE0;
  if (!qword_269D7DFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFE0);
  }
  return result;
}

unint64_t sub_253CE995C()
{
  unint64_t result = qword_269D7DFE8;
  if (!qword_269D7DFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFE8);
  }
  return result;
}

unint64_t sub_253CE99AC()
{
  unint64_t result = qword_269D7DFF0;
  if (!qword_269D7DFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFF0);
  }
  return result;
}

unint64_t sub_253CE99FC()
{
  unint64_t result = qword_269D7DFF8;
  if (!qword_269D7DFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7DFF8);
  }
  return result;
}

unint64_t sub_253CE9A4C()
{
  unint64_t result = qword_269D7E000;
  if (!qword_269D7E000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E000);
  }
  return result;
}

unint64_t sub_253CE9A9C()
{
  unint64_t result = qword_269D7E008;
  if (!qword_269D7E008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E008);
  }
  return result;
}

uint64_t sub_253CE9AF8()
{
  return 0;
}

uint64_t sub_253CE9B10()
{
  _s28StatementResolutionReferenceOMa(0);
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_253CE9B44()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CE9B80()
{
  return sub_253DF5B30();
}

uint64_t sub_253CE9BA8()
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v1);
}

uint64_t sub_253CE9BCC()
{
  return sub_253DF5BC0();
}

uint64_t sub_253CE9BE8()
{
  return v0;
}

uint64_t sub_253CE9BF8()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_253CE9C14()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CE9C44()
{
  return v1 + *(int *)(v0 + 20);
}

uint64_t sub_253CE9C68()
{
  return sub_253DF5C20();
}

void sub_253CE9CA4(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 272) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_253CE9CD8()
{
  return v0;
}

void *sub_253CE9CF4()
{
  return sub_253BDF5F8(v0, v0[3]);
}

uint64_t sub_253CE9D18()
{
  *(unsigned char *)(v0 - 66) = 1;
  return 0;
}

uint64_t sub_253CE9D40()
{
  return sub_253DF5B30();
}

uint64_t sub_253CE9D64()
{
  return sub_253DF5BC0();
}

uint64_t sub_253CE9D88()
{
  return v0;
}

uint64_t sub_253CE9DA0()
{
  return sub_253DF5E40();
}

uint64_t sub_253CE9DD4()
{
  return v0;
}

uint64_t sub_253CE9DE4()
{
  return v0;
}

uint64_t sub_253CE9E1C()
{
  return sub_253DF5E30();
}

uint64_t sub_253CE9E40@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 128) = a1;
  return 0;
}

uint64_t sub_253CE9E54()
{
  return v0;
}

uint64_t sub_253CE9E68()
{
  return sub_253DF5C20();
}

uint64_t sub_253CE9E80()
{
  return sub_253DF5BC0();
}

uint64_t sub_253CE9EA0()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CE9EC0()
{
  return sub_253DF5B50();
}

uint64_t sub_253CE9EE0()
{
  return v0;
}

uint64_t sub_253CE9EF4()
{
  return v0;
}

uint64_t sub_253CE9F00()
{
  return v0;
}

uint64_t sub_253CE9F14()
{
  return v0;
}

uint64_t sub_253CE9F20()
{
  return v0;
}

uint64_t sub_253CE9F48()
{
  return v0;
}

uint64_t sub_253CE9F5C()
{
  return _s23StatementCreatedOutcomeVMa(0);
}

void sub_253CE9F78()
{
  *(void *)(v1 - 144) = v0;
  *(unsigned char *)(v1 - 65) = 0;
}

uint64_t sub_253CE9F98()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_253CE9FD4(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_253CEA01C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 sub_253CEA08C(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_253CEA098(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_253CEA0E8(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_253CEA128(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void _s16EvaluationResultVMa()
{
}

uint64_t *sub_253CEA174(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DF3E70();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    long long v9 = *(_OWORD *)((char *)a2 + v8 + 24);
    *(_OWORD *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
    uint64_t v10 = a3[6];
    long long v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    uint64_t v12 = a3[7];
    long long v13 = *(_OWORD *)((char *)a2 + v12 + 24);
    *(_OWORD *)((char *)a1 + v12 + 24) = v13;
    (**(void (***)(void))(v13 - 8))();
  }
  return a1;
}

uint64_t sub_253CEA330(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_253DF3E70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + a2[5]);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + a2[6]);
  uint64_t v5 = a1 + a2[7];

  return _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v5);
}

uint64_t sub_253CEA3BC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DF3E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  long long v8 = *(_OWORD *)(a2 + v7 + 24);
  *(_OWORD *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  uint64_t v9 = a3[6];
  long long v10 = *(_OWORD *)(a2 + v9 + 24);
  *(_OWORD *)(a1 + v9 + 24) = v10;
  (**(void (***)(void))(v10 - 8))();
  uint64_t v11 = a3[7];
  long long v12 = *(_OWORD *)(a2 + v11 + 24);
  *(_OWORD *)(a1 + v11 + 24) = v12;
  (**(void (***)(void))(v12 - 8))();
  return a1;
}

uint64_t sub_253CEA528(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DF3E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  sub_253C22614((uint64_t *)(a1 + a3[5]), (uint64_t *)(a2 + a3[5]));
  sub_253C22614((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  sub_253C22614((uint64_t *)(a1 + a3[7]), (uint64_t *)(a2 + a3[7]));
  return a1;
}

uint64_t sub_253CEA5C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DF3E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)(v9 + 32) = *(void *)(v10 + 32);
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  uint64_t v12 = a1 + v8;
  uint64_t v13 = a2 + v8;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  return a1;
}

uint64_t sub_253CEA688(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DF3E70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v7);
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v11);
  long long v14 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(_OWORD *)(v12 + 16) = v14;
  *(void *)(v12 + 32) = *(void *)(v13 + 32);
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + v15);
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  return a1;
}

uint64_t sub_253CEA76C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CEA780);
}

uint64_t sub_253CEA780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253DF3E70();
  sub_253C6FFEC();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_253CEA814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CEA828);
}

void sub_253CEA828(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_253CF1C3C();
  sub_253DF3E70();
  sub_253C6FFEC();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v4, a2, a2, v8);
  }
  else
  {
    *(void *)(v4 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
}

uint64_t _s19TranscriptRetrieverVMa()
{
  uint64_t result = qword_26B251C60;
  if (!qword_26B251C60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_253CEA8FC()
{
  uint64_t result = sub_253DF3E70();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_253CEA994(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_253CEA9C4(a1, a2, a3, a4, (void (*)(uint64_t, void *, uint64_t))sub_253CEE664);
}

uint64_t sub_253CEA9AC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  return sub_253CEA9C4(a1, a2, a3, a4, (void (*)(uint64_t, void *, uint64_t))sub_253CEF470);
}

uint64_t sub_253CEA9C4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, void *, uint64_t))
{
  uint64_t v8 = *v5;
  uint64_t v9 = sub_253BDF5F8(a2, a2[3]);
  return sub_253CF0CE4(a1, (uint64_t)v9, v8, a5);
}

uint64_t sub_253CEAA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v20 = sub_253DF42A0();
  sub_253C0F830();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_253C566F8();
  uint64_t v21 = sub_253DF3E70();
  sub_253C6FFEC();
  uint64_t v11 = v10;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(a3, a1);
  sub_253DF3E40();
  sub_253DF3E40();
  sub_253C5B9F8();
  swift_bridgeObjectRelease();
  uint64_t v12 = _s19TranscriptRetrieverVMa();
  sub_253C96A2C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_253DF3E40();
  sub_253CF1C3C();
  uint64_t v13 = _s23PromptResponseRetrieverCMa();
  swift_allocObject();
  long long v14 = sub_253C6BAA8(a1);
  uint64_t v15 = (void *)(a3 + *(int *)(v12 + 24));
  v15[3] = v13;
  v15[4] = &off_27035DF18;
  void *v15 = v14;
  uint64_t v16 = sub_253DF3E40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v3, a2, v20);
  uint64_t v17 = sub_253C746A0(v16, v3);
  swift_bridgeObjectRelease();
  long long v18 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v18(v3, v20);
  uint64_t v23 = &_s28StatementParameterResolutionVN;
  uint64_t v24 = &off_27035DFC0;
  *(void *)&long long v22 = v17;
  v18(a2, v20);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v21);
  return sub_253BDB0E4(&v22, a3 + *(int *)(v12 + 28));
}

void sub_253CEAC38(char a1, char a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  if (a1 == a5 && a2 == a6)
  {
    sub_253CBB568();
    if (v6)
    {
      sub_253CBB038();
    }
  }
}

void sub_253CEACAC(char a1, uint64_t a2, char a3)
{
  if (a1 == a3) {
    sub_253CBB568();
  }
}

uint64_t sub_253CEACCC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702129526 && a2 == 0xE400000000000000;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73656372756F73 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CEADAC(char a1)
{
  if (a1) {
    return 0x73656372756F73;
  }
  else {
    return 1702129526;
  }
}

void sub_253CEADDC()
{
  sub_253C59954();
  uint64_t v3 = v2;
  uint64_t v4 = sub_253BDEDD8(&qword_269D7E140);
  sub_253C0F830();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_253C16AA8();
  sub_253BDF5F8(v3, v3[3]);
  sub_253CEDAF4();
  sub_253DF5E40();
  sub_253CEDC20();
  sub_253DF5C20();
  if (!v0)
  {
    sub_253BDEDD8(&qword_269D7E0F8);
    sub_253CEDB8C(&qword_269D7E150, &qword_269D7E158);
    sub_253CF1C5C();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_253C5993C();
}

uint64_t sub_253CEAF5C(void *a1)
{
  sub_253BDEDD8(&qword_269D7E0E0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v2);
  sub_253BDF5F8(a1, a1[3]);
  sub_253CEDAF4();
  sub_253DF5E30();
  sub_253CEDB40();
  sub_253DF5BA0();
  sub_253BDEDD8(&qword_269D7E0F8);
  sub_253CEDB8C(&qword_269D7E100, &qword_269D7E108);
  sub_253DF5BA0();
  uint64_t v3 = sub_253CF1C24();
  v4(v3);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)a1);
  return v6;
}

uint64_t sub_253CEB12C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E696174736261 && a2 == 0xE700000000000000;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6572756C696166 && a2 == 0xE700000000000000;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x73736563637573 && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_253DF5C90();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_253CEB280(char a1)
{
  return *(void *)&aAbstain_0[8 * a1];
}

void sub_253CEB298()
{
  sub_253C59954();
  char v28 = v1;
  uint64_t v3 = v2;
  sub_253BDEDD8(&qword_269D7E238);
  sub_253C0F830();
  uint64_t v26 = v5;
  uint64_t v27 = v4;
  MEMORY[0x270FA5388](v4);
  sub_253BDFA94();
  uint64_t v25 = v6;
  sub_253BDEDD8(&qword_269D7E240);
  sub_253C0F830();
  uint64_t v23 = v8;
  uint64_t v24 = v7;
  MEMORY[0x270FA5388](v7);
  sub_253C10D28();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_253BDEDD8(&qword_269D7E248);
  sub_253C0F830();
  uint64_t v22 = v13;
  MEMORY[0x270FA5388](v14);
  sub_253C10D28();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_253BDEDD8(&qword_269D7E250);
  sub_253C0F830();
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v21);
  sub_253C16A90();
  sub_253BDF5F8(v3, v3[3]);
  sub_253CF1648();
  sub_253DF5E40();
  if (v28)
  {
    if (v28 == 1)
    {
      sub_253CF16E0();
      sub_253C8F0D0();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v11, v24);
    }
    else
    {
      sub_253CF1694();
      sub_253C8F0D0();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
    }
  }
  else
  {
    sub_253CF172C();
    sub_253C8F0D0();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v17, v12);
  }
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v0, v18);
  sub_253C5993C();
}

void sub_253CEB504()
{
  sub_253C59954();
  uint64_t v3 = v2;
  sub_253BDEDD8(&qword_269D7E1F8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253BDFA94();
  sub_253BDEDD8(&qword_269D7E200);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253C16AA8();
  sub_253BDEDD8(&qword_269D7E208);
  sub_253C0F830();
  MEMORY[0x270FA5388](v6);
  sub_253C16A90();
  uint64_t v7 = sub_253BDEDD8(&qword_269D7E210);
  sub_253C0F830();
  uint64_t v28 = v8;
  MEMORY[0x270FA5388](v9);
  sub_253C2F364();
  sub_253BDF5F8(v3, v3[3]);
  sub_253CF1648();
  sub_253DF5E30();
  if (v0) {
    goto LABEL_9;
  }
  uint64_t v29 = (uint64_t)v3;
  uint64_t v10 = v1;
  uint64_t v11 = sub_253DF5BB0();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12)
  {
LABEL_8:
    uint64_t v19 = sub_253DF5960();
    swift_allocError();
    uint64_t v21 = v20;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v21 = &unk_270361618;
    sub_253DF5B40();
    sub_253DF5950();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x263F8DCB0], v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v10, v7);
    uint64_t v3 = (void *)v29;
LABEL_9:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v3);
    goto LABEL_10;
  }
  uint64_t v13 = v1;
  int v14 = *(unsigned __int8 *)(v11 + 32);
  sub_253CC30E8(1, v12, v11, v11 + 32, 0, (2 * v12) | 1);
  uint64_t v16 = v15;
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
    uint64_t v10 = v13;
    goto LABEL_8;
  }
  if (v14)
  {
    sub_253CF16E0();
    sub_253C8F410();
    sub_253BEFBCC();
    v23(v22);
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v13, v7);
  }
  else
  {
    sub_253CF172C();
    sub_253C8F410();
    sub_253BEFBCC();
    v25(v24);
    swift_unknownObjectRelease();
    sub_253BEFBCC();
    v27(v26);
  }
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v29);
LABEL_10:
  sub_253C5993C();
}

uint64_t sub_253CEB9A0()
{
  return sub_253CEADAC(*v0);
}

uint64_t sub_253CEB9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CEACCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CEB9D0(uint64_t a1)
{
  unint64_t v2 = sub_253CEDAF4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CEBA0C(uint64_t a1)
{
  unint64_t v2 = sub_253CEDAF4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CEBA48@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_253CEAF5C(a1);
  if (!v2)
  {
    *(unsigned char *)a2 = result;
    *(void *)(a2 + 8) = v5;
  }
  return result;
}

void sub_253CEBA78()
{
}

void sub_253CEBA98(uint64_t a1, char *a2)
{
}

uint64_t sub_253CEBAB0(uint64_t a1)
{
  unint64_t v2 = sub_253CF172C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CEBAEC(uint64_t a1)
{
  unint64_t v2 = sub_253CF172C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CEBB28()
{
  return sub_253CEB280(*v0);
}

uint64_t sub_253CEBB30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CEB12C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CEBB58(uint64_t a1)
{
  unint64_t v2 = sub_253CF1648();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CEBB94(uint64_t a1)
{
  unint64_t v2 = sub_253CF1648();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CEBBD0(uint64_t a1)
{
  unint64_t v2 = sub_253CF16E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CEBC0C(uint64_t a1)
{
  unint64_t v2 = sub_253CF16E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CEBC48(uint64_t a1)
{
  unint64_t v2 = sub_253CF1694();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CEBC84(uint64_t a1)
{
  unint64_t v2 = sub_253CF1694();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CEBCC0(unsigned char *a1@<X8>)
{
  sub_253CEB504();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_253CEBCEC()
{
}

unint64_t sub_253CEBD08(char a1)
{
  unint64_t result = 0x72506E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6465786966;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x706D6F436B736174;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_253CEBDD4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72506E6F69746361 && a2 == 0xEC00000074706D6FLL;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6465786966 && a2 == 0xE500000000000000;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000253E19760 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x706D6F436B736174 && a2 == 0xEE006E6F6974656CLL;
      if (v7 || (sub_253DF5C90() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000011 && a2 == 0x8000000253E19740)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v8 = sub_253DF5C90();
        swift_bridgeObjectRelease();
        if (v8) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_253CEC014(char a1)
{
  unint64_t result = 0x72506E6F69746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6465786966;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x706D6F436B736174;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

void sub_253CEC0E0()
{
  sub_253C59954();
  char v42 = v2;
  uint64_t v4 = v3;
  sub_253BDEDD8(&qword_269D7E110);
  sub_253C0F830();
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  sub_253CD8B20(v7, v29);
  sub_253BDEDD8(&qword_269D7E118);
  sub_253C0F830();
  uint64_t v37 = v9;
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v8);
  sub_253BDFA94();
  uint64_t v36 = v10;
  sub_253BDEDD8(&qword_269D7E120);
  sub_253C0F830();
  uint64_t v34 = v12;
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  sub_253BDFA94();
  uint64_t v33 = v13;
  sub_253BDEDD8(&qword_269D7E128);
  sub_253C0F830();
  uint64_t v31 = v15;
  uint64_t v32 = v14;
  MEMORY[0x270FA5388](v14);
  sub_253C10D28();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = sub_253BDEDD8(&qword_269D7E130);
  sub_253C0F830();
  uint64_t v30 = v20;
  MEMORY[0x270FA5388](v21);
  sub_253C10D38();
  uint64_t v22 = sub_253BDEDD8(&qword_269D7E138);
  sub_253C0F830();
  uint64_t v24 = v23;
  MEMORY[0x270FA5388](v25);
  sub_253C566F8();
  sub_253BDF5F8(v4, v4[3]);
  sub_253CED92C();
  sub_253DF5E40();
  switch(v42)
  {
    case 1:
      sub_253CEDA5C();
      sub_253DF5BC0();
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v18, v32);
      break;
    case 2:
      sub_253CEDA10();
      uint64_t v26 = v33;
      sub_253CF1BA0();
      uint64_t v28 = v34;
      uint64_t v27 = v35;
      goto LABEL_7;
    case 3:
      sub_253CED9C4();
      uint64_t v26 = v36;
      sub_253CF1BA0();
      uint64_t v28 = v37;
      uint64_t v27 = v38;
      goto LABEL_7;
    case 4:
      sub_253CED978();
      uint64_t v26 = v39;
      sub_253CF1BA0();
      uint64_t v28 = v40;
      uint64_t v27 = v41;
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v26, v27);
      break;
    default:
      sub_253CEDAA8();
      sub_253CF1BA0();
      (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v0, v19);
      break;
  }
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v1, v22);
  sub_253C5993C();
}

void sub_253CEC450()
{
  sub_253C59954();
  char v3 = v2;
  sub_253BDEDD8(&qword_269D7E080);
  sub_253C0F830();
  MEMORY[0x270FA5388](v4);
  sub_253BDFA94();
  sub_253BDEDD8(&qword_269D7E088);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253CD8B20(v6, v29);
  sub_253BDEDD8(&qword_269D7E090);
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253BDFA94();
  sub_253BDEDD8(&qword_269D7E098);
  sub_253C0F830();
  MEMORY[0x270FA5388](v8);
  sub_253C2F364();
  sub_253BDEDD8(&qword_269D7E0A0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253C566F8();
  uint64_t v10 = sub_253BDEDD8(&qword_269D7E0A8);
  sub_253C0F830();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  sub_253C10D38();
  uint64_t v31 = (uint64_t)v3;
  sub_253BDF5F8(v3, v3[3]);
  sub_253CED92C();
  sub_253DF5E30();
  if (v1) {
    goto LABEL_9;
  }
  uint64_t v14 = sub_253DF5BB0();
  uint64_t v15 = *(void *)(v14 + 16);
  if (!v15)
  {
    uint64_t v22 = v0;
LABEL_8:
    uint64_t v23 = sub_253DF5960();
    swift_allocError();
    uint64_t v25 = v24;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v25 = &unk_270361398;
    sub_253DF5B40();
    sub_253DF5950();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v22, v10);
LABEL_9:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v31);
    goto LABEL_10;
  }
  uint64_t v30 = v10;
  uint64_t v16 = v0;
  uint64_t v17 = *(unsigned __int8 *)(v14 + 32);
  sub_253CC30E8(1, v15, v14, v14 + 32, 0, (2 * v15) | 1);
  uint64_t v19 = v18;
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  if (v19 != v21 >> 1)
  {
    uint64_t v22 = v16;
    uint64_t v10 = v30;
    goto LABEL_8;
  }
  switch(v17)
  {
    case 1:
      sub_253CEDA5C();
      sub_253CF1B80();
      break;
    case 2:
      sub_253CEDA10();
      sub_253CF1B80();
      break;
    case 3:
      sub_253CED9C4();
      sub_253CF1B80();
      break;
    case 4:
      sub_253CED978();
      sub_253CF1B80();
      break;
    default:
      sub_253CEDAA8();
      sub_253CF1B80();
      break;
  }
  sub_253BEFBCC();
  v26();
  swift_unknownObjectRelease();
  uint64_t v27 = sub_253CF1C0C();
  v28(v27);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v3);
LABEL_10:
  sub_253C5993C();
}

uint64_t sub_253CEC9B8(uint64_t a1)
{
  unint64_t v2 = sub_253CEDAA8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CEC9F4(uint64_t a1)
{
  unint64_t v2 = sub_253CEDAA8();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_253CECA30()
{
  return sub_253CEC014(*v0);
}

uint64_t sub_253CECA38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CEBDD4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CECA60(uint64_t a1)
{
  unint64_t v2 = sub_253CED92C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CECA9C(uint64_t a1)
{
  unint64_t v2 = sub_253CED92C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CECAD8(uint64_t a1)
{
  unint64_t v2 = sub_253CEDA5C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CECB14(uint64_t a1)
{
  unint64_t v2 = sub_253CEDA5C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CECB50(uint64_t a1)
{
  unint64_t v2 = sub_253CEDA10();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CECB8C(uint64_t a1)
{
  unint64_t v2 = sub_253CEDA10();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CECBC8(uint64_t a1)
{
  unint64_t v2 = sub_253CED9C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CECC04(uint64_t a1)
{
  unint64_t v2 = sub_253CED9C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CECC40(uint64_t a1)
{
  unint64_t v2 = sub_253CED978();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CECC7C(uint64_t a1)
{
  unint64_t v2 = sub_253CED978();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CECCB8(unsigned char *a1@<X8>)
{
  sub_253CEC450();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_253CECCE4()
{
}

unint64_t sub_253CECD00()
{
  return sub_253CEBD08(*v0);
}

uint64_t sub_253CECD08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F7461756C617665 && a2 == 0xED00006570795472;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x656D6F6374756FLL && a2 == 0xE700000000000000;
    if (v6 || (sub_253DF5C90() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x75626972746E6F63 && a2 == 0xEC00000073726F74)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = sub_253DF5C90();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_253CECE94(char a1)
{
  if (!a1) {
    return 0x6F7461756C617665;
  }
  if (a1 == 1) {
    return 0x656D6F6374756FLL;
  }
  return 0x75626972746E6F63;
}

void sub_253CECF00()
{
  sub_253C59954();
  char v3 = v2;
  uint64_t v4 = sub_253BDEDD8(&qword_269D7E040);
  sub_253C0F830();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_253C16AA8();
  sub_253BDF5F8(v3, v3[3]);
  sub_253CED3E0();
  sub_253DF5E40();
  sub_253CED4C4();
  sub_253CF1BE8();
  if (!v0)
  {
    sub_253CED510();
    sub_253CF1BE8();
    sub_253BDEDD8(&qword_269D7E030);
    sub_253CED55C(&qword_269D7E058, (void (*)(void))sub_253CD69A0);
    sub_253CF1C5C();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_253C5993C();
}

void sub_253CED0A0()
{
  sub_253C59954();
  BOOL v2 = v1;
  sub_253BDEDD8(&qword_269D7E010);
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253BDF5F8(v2, v2[3]);
  sub_253CED3E0();
  sub_253DF5E30();
  if (v0)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v2);
  }
  else
  {
    sub_253CED42C();
    sub_253CF1BC0();
    sub_253CED478();
    sub_253CF1BC0();
    sub_253BDEDD8(&qword_269D7E030);
    sub_253CED55C(&qword_269D7E038, (void (*)(void))sub_253CD706C);
    swift_bridgeObjectRetain();
    sub_253DF5BA0();
    uint64_t v4 = sub_253CF1C48();
    v5(v4);
    swift_bridgeObjectRetain();
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_253C5993C();
}

uint64_t sub_253CED2C4()
{
  return sub_253CECE94(*v0);
}

uint64_t sub_253CED2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CECD08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CED2F4(uint64_t a1)
{
  unint64_t v2 = sub_253CED3E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CED330(uint64_t a1)
{
  unint64_t v2 = sub_253CED3E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_253CED36C(uint64_t a1@<X8>)
{
  sub_253CED0A0();
  if (!v1)
  {
    *(unsigned char *)a1 = v3;
    *(unsigned char *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
  }
}

void sub_253CED3A0()
{
}

void sub_253CED3C4(uint64_t a1, char *a2)
{
}

unint64_t sub_253CED3E0()
{
  unint64_t result = qword_269D7E018;
  if (!qword_269D7E018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E018);
  }
  return result;
}

unint64_t sub_253CED42C()
{
  unint64_t result = qword_269D7E020;
  if (!qword_269D7E020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E020);
  }
  return result;
}

unint64_t sub_253CED478()
{
  unint64_t result = qword_269D7E028;
  if (!qword_269D7E028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E028);
  }
  return result;
}

unint64_t sub_253CED4C4()
{
  unint64_t result = qword_269D7E048;
  if (!qword_269D7E048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E048);
  }
  return result;
}

unint64_t sub_253CED510()
{
  unint64_t result = qword_269D7E050;
  if (!qword_269D7E050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E050);
  }
  return result;
}

uint64_t sub_253CED55C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_253C0BFF8(&qword_269D7E030);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253CED5D0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_253CED610(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for RuntimeNumericError(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t sub_253CED67C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t sub_253CED6C4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_253CED704(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void _s10FixedVoterVMa()
{
}

ValueMetadata *_s16EvaluationResultV10CodingKeysOMa()
{
  return &_s16EvaluationResultV10CodingKeysON;
}

void _s13VotingOutcomeVMa()
{
}

void _s13EvaluatorTypeOMa()
{
}

unint64_t sub_253CED788()
{
  unint64_t result = qword_269D7E060;
  if (!qword_269D7E060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E060);
  }
  return result;
}

unint64_t sub_253CED7D8()
{
  unint64_t result = qword_269D7E068;
  if (!qword_269D7E068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E068);
  }
  return result;
}

uint64_t sub_253CED824(uint64_t a1, void *a2)
{
  uint64_t v4 = *((void *)v2 + 1);
  uint64_t v5 = v2[16];
  uint64_t v6 = *v2;
  uint64_t v7 = sub_253BDF5F8(a2, a2[3]);

  return sub_253CF0C4C(a1, (uint64_t)v7, v6, v4, v5);
}

unint64_t sub_253CED890()
{
  unint64_t result = qword_269D7E070;
  if (!qword_269D7E070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E070);
  }
  return result;
}

unint64_t sub_253CED8E0()
{
  unint64_t result = qword_269D7E078;
  if (!qword_269D7E078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E078);
  }
  return result;
}

unint64_t sub_253CED92C()
{
  unint64_t result = qword_269D7E0B0;
  if (!qword_269D7E0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E0B0);
  }
  return result;
}

unint64_t sub_253CED978()
{
  unint64_t result = qword_269D7E0B8;
  if (!qword_269D7E0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E0B8);
  }
  return result;
}

unint64_t sub_253CED9C4()
{
  unint64_t result = qword_269D7E0C0;
  if (!qword_269D7E0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E0C0);
  }
  return result;
}

unint64_t sub_253CEDA10()
{
  unint64_t result = qword_269D7E0C8;
  if (!qword_269D7E0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E0C8);
  }
  return result;
}

unint64_t sub_253CEDA5C()
{
  unint64_t result = qword_269D7E0D0;
  if (!qword_269D7E0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E0D0);
  }
  return result;
}

unint64_t sub_253CEDAA8()
{
  unint64_t result = qword_269D7E0D8;
  if (!qword_269D7E0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E0D8);
  }
  return result;
}

unint64_t sub_253CEDAF4()
{
  unint64_t result = qword_269D7E0E8;
  if (!qword_269D7E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E0E8);
  }
  return result;
}

unint64_t sub_253CEDB40()
{
  unint64_t result = qword_269D7E0F0;
  if (!qword_269D7E0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E0F0);
  }
  return result;
}

uint64_t sub_253CEDB8C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_253C0BFF8(&qword_269D7E0F8);
    sub_253CF0C9C(a2, (void (*)(uint64_t))_s19EvaluatorVoteSourceOMa);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_253CEDC20()
{
  unint64_t result = qword_269D7E148;
  if (!qword_269D7E148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E148);
  }
  return result;
}

uint64_t sub_253CEDC6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = a1;
  uint64_t v5 = sub_253DEFFE0();
  uint64_t v64 = *(void *)(v5 - 8);
  uint64_t v65 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v63 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_253DEFE90();
  uint64_t v73 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v72 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253DF24A0();
  uint64_t v70 = *(void *)(v8 - 8);
  uint64_t v71 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v66 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v68 = (char *)&v62 - v11;
  uint64_t v12 = _s20ActionStepEvaluationVMa(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v67 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253BDEDD8(&qword_26B255868);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v62 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = _s23StatementStepEvaluationOMa(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  unint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v62 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v62 - v24;
  uint64_t v26 = _s19TranscriptRetrieverVMa();
  uint64_t v77 = v26;
  uint64_t v78 = &off_270361158;
  uint64_t v27 = sub_253BDEE6C(v76);
  sub_253CF0DF0(a2, (uint64_t)v27);
  uint64_t v28 = sub_253BDF5F8(v76, v77);
  sub_253BDF5F8((void *)((char *)v28 + *(int *)(v26 + 24)), *(void *)((char *)v28 + *(int *)(v26 + 24) + 24));
  uint64_t v29 = a3;
  sub_253C6C590(a3, (uint64_t)v16);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v16, 1, v17) == 1)
  {
    sub_253BEFAC0((uint64_t)v16, &qword_26B255868);
    uint64_t v30 = v68;
    sub_253DF1790();
    uint64_t v31 = v69;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v29, v69);
    uint64_t v32 = sub_253DF2490();
    os_log_type_t v33 = sub_253DF56E0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      v74[0] = v35;
      *(_DWORD *)uint64_t v34 = 136315138;
      sub_253CF0C9C((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
      uint64_t v36 = v72;
      uint64_t v37 = sub_253DF5C40();
      uint64_t v75 = sub_253D8E5FC(v37, v38, v74);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v73 + 8))(v36, v31);
      _os_log_impl(&dword_253BD8000, v32, v33, "Cannot make an action prompt vote outcome, a statement step for systemResponseEventId=%s is not found", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v35, -1, -1);
      MEMORY[0x25A2709B0](v34, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v73 + 8))(v72, v31);
    }

    (*(void (**)(char *, uint64_t))(v70 + 8))(v30, v71);
LABEL_15:
    uint64_t v46 = 0;
    goto LABEL_18;
  }
  sub_253CF0DA0((uint64_t)v16, (uint64_t)v25);
  sub_253CF0DF0((uint64_t)v25, (uint64_t)v23);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_253CF0E40((uint64_t)v23, (void (*)(void))_s23StatementStepEvaluationOMa);
    uint64_t v51 = v66;
    sub_253DF1790();
    sub_253CF0DF0((uint64_t)v25, (uint64_t)v20);
    uint64_t v52 = sub_253DF2490();
    os_log_type_t v53 = sub_253DF56E0();
    if (os_log_type_enabled(v52, v53))
    {
      uint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      v74[0] = v55;
      *(_DWORD *)uint64_t v54 = 136315138;
      sub_253C88C74();
      uint64_t v75 = sub_253D8E5FC(v56, v57, v74);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253CF0E40((uint64_t)v20, (void (*)(void))_s23StatementStepEvaluationOMa);
      _os_log_impl(&dword_253BD8000, v52, v53, "Cannot make an action prompt vote outcome, %s is not for an action", v54, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v55, -1, -1);
      MEMORY[0x25A2709B0](v54, -1, -1);
    }
    else
    {

      sub_253CF0E40((uint64_t)v20, (void (*)(void))_s23StatementStepEvaluationOMa);
    }
    (*(void (**)(char *, uint64_t))(v70 + 8))(v51, v71);
    sub_253CF0E40((uint64_t)v25, (void (*)(void))_s23StatementStepEvaluationOMa);
    goto LABEL_15;
  }
  uint64_t v39 = v67;
  sub_253CF0DA0((uint64_t)v23, v67);
  if (*(unsigned char *)(v39 + *(int *)(v12 + 20)))
  {
    if (*(unsigned char *)(v39 + *(int *)(v12 + 20)) == 1) {
      goto LABEL_8;
    }
    uint64_t v40 = sub_253BDF5F8(v76, v77);
    sub_253C1601C((uint64_t)v40 + *(int *)(v26 + 20), (uint64_t)v74);
    sub_253BDF5F8(v74, v74[3]);
    uint64_t v42 = v64;
    uint64_t v41 = v65;
    uint64_t v43 = v63;
    (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v63, v62, v65);
    _s14ActionExecutedVMa(0);
    sub_253D7F720();
    char v45 = v44;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v43, v41);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v74);
    uint64_t v46 = 0;
    if (v45)
    {
LABEL_8:
      sub_253BDEDD8(&qword_269D7E168);
      uint64_t v47 = *(void *)(_s19EvaluatorVoteSourceOMa(0) - 8);
      unint64_t v48 = (*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      uint64_t v49 = swift_allocObject();
      *(_OWORD *)(v49 + 16) = xmmword_253DF6EC0;
      uint64_t v50 = (unsigned char *)(v49 + v48);
      uint64_t v46 = 1;
      *uint64_t v50 = 1;
      swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    sub_253BDEDD8(&qword_269D7E168);
    uint64_t v58 = *(void *)(_s19EvaluatorVoteSourceOMa(0) - 8);
    unint64_t v59 = (*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80);
    uint64_t v60 = swift_allocObject();
    *(_OWORD *)(v60 + 16) = xmmword_253DF6EC0;
    *(unsigned char *)(v60 + v59) = 0;
    swift_storeEnumTagMultiPayload();
    uint64_t v46 = 2;
  }
  sub_253CF0E40(v39, (void (*)(void))_s20ActionStepEvaluationVMa);
  sub_253CF0E40((uint64_t)v25, (void (*)(void))_s23StatementStepEvaluationOMa);
LABEL_18:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v76);
  return v46;
}

uint64_t sub_253CEE664(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v109 = a2;
  uint64_t v5 = sub_253DEFE90();
  uint64_t v101 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v73 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253DF0A20();
  uint64_t v97 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v83 = (char *)&v69 - v10;
  uint64_t v11 = sub_253BDEDD8(&qword_26B255420);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v87 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_253DF10D0();
  uint64_t v93 = *(void (***)(char *, uint64_t))(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v84 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253BDEDD8(&qword_269D7E160);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v86 = (char *)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v103 = (uint64_t)&v69 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v100 = (char *)&v69 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v99 = (char *)&v69 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v110 = (uint64_t)&v69 - v23;
  uint64_t v24 = sub_253DF0880();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  char v104 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_253DF41F0();
  uint64_t v27 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v29 = (char *)&v69 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_253DF4230();
  uint64_t v30 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v32 = (char *)&v69 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = _s19TranscriptRetrieverVMa();
  uint64_t v115 = &off_270361158;
  os_log_type_t v33 = sub_253BDEE6C(&v113);
  sub_253CF0DF0(v109, (uint64_t)v33);
  uint64_t v34 = *(void *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowExpression(0) + 20));
  uint64_t v35 = *(void *)(v34 + 16);
  if (!v35)
  {
LABEL_38:
    uint64_t v64 = 0;
    goto LABEL_39;
  }
  uint64_t v70 = v5;
  uint64_t v71 = a1;
  int v72 = a3;
  uint64_t v36 = v35;
  unint64_t v108 = v34 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
  uint64_t v107 = v30 + 16;
  uint64_t v37 = (uint64_t (**)(char *, uint64_t))(v27 + 88);
  int v106 = *MEMORY[0x263F4DEC0];
  int v102 = *MEMORY[0x263F4DFE0];
  int v96 = *MEMORY[0x263F4E018];
  int v95 = *MEMORY[0x263F4E020];
  uint64_t v105 = (void (**)(char *, uint64_t))(v30 + 8);
  char v98 = (void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v94 = (void (**)(char *, uint64_t))(v27 + 96);
  uint64_t v92 = (void (**)(char *, char *, uint64_t))(v25 + 32);
  uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v93 + 4);
  uint64_t v81 = v93 + 1;
  uint64_t v80 = (void (**)(char *, uint64_t, uint64_t))(v97 + 32);
  uint64_t v79 = (void (**)(char *, char *, uint64_t))(v97 + 16);
  uint64_t v90 = (uint64_t (**)(char *, uint64_t))(v97 + 88);
  int v78 = *MEMORY[0x263F4C7D8];
  int v77 = *MEMORY[0x263F4C7D0];
  uint64_t v91 = (void (**)(char *, uint64_t))(v97 + 8);
  uint64_t v93 = (void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v69 = (void (**)(uint64_t, uint64_t))(v101 + 8);
  int v76 = *MEMORY[0x263F4C790];
  uint64_t v109 = v34;
  swift_bridgeObjectRetain();
  uint64_t v38 = v109;
  LODWORD(v75) = 0;
  unint64_t v39 = 0;
  uint64_t v101 = v36;
  uint64_t v74 = v36 - 1;
  uint64_t v40 = (uint64_t)v87;
  uint64_t v41 = v88;
  uint64_t v97 = v24;
  uint64_t v89 = v30;
  while (v39 < *(void *)(v38 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v30 + 16))(v32, v108 + *(void *)(v30 + 72) * v39, v112);
    sub_253DF4200();
    int v42 = (*v37)(v29, v111);
    if (v42 == v106)
    {
      (*v98)(v29, v111);
LABEL_29:
      if (v75)
      {
        swift_bridgeObjectRelease();
        sub_253BDEDD8(&qword_269D7E168);
        uint64_t v66 = *(void *)(_s19EvaluatorVoteSourceOMa(0) - 8);
        unint64_t v67 = (*(unsigned __int8 *)(v66 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
        uint64_t v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = xmmword_253DF6EC0;
        *(unsigned char *)(v68 + v67) = 2;
        uint64_t v64 = 1;
        swift_storeEnumTagMultiPayload();
        (*v105)(v32, v112);
        goto LABEL_39;
      }
      (*v105)(v32, v112);
      if (v74 == v39) {
        goto LABEL_37;
      }
      LODWORD(v75) = 0;
      uint64_t v38 = v109;
      goto LABEL_32;
    }
    if (v42 == v102)
    {
      (*v94)(v29, v111);
      (*v92)(v104, v29, v24);
      sub_253C60DAC();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v40, 1, v41) == 1)
      {
        sub_253BEFAC0(v40, &qword_26B255420);
        uint64_t v43 = 1;
        uint64_t v45 = (uint64_t)v99;
        uint64_t v44 = (uint64_t)v100;
      }
      else
      {
        uint64_t v47 = v84;
        (*v82)(v84, v40, v41);
        uint64_t v45 = (uint64_t)v99;
        sub_253DF10C0();
        (*v81)(v47, v41);
        uint64_t v43 = 0;
        uint64_t v44 = (uint64_t)v100;
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v45, v43, 1, v7);
      uint64_t v48 = v45;
      uint64_t v49 = v110;
      sub_253C2CF58(v48, v110, &qword_269D7E160);
      sub_253C2E770(v49, v44, &qword_269D7E160);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v44, 1, v7) == 1)
      {
        sub_253BEFAC0(v44, &qword_269D7E160);
      }
      else
      {
        uint64_t v50 = v83;
        (*v80)(v83, v44, v7);
        uint64_t v51 = v85;
        (*v79)(v85, v50, v7);
        int v52 = (*v90)(v51, v7);
        os_log_type_t v53 = *v91;
        (*v91)(v51, v7);
        if (v52 == v78 || v52 == v77)
        {
          swift_bridgeObjectRelease();
          v53(v50, v7);
          sub_253BEFAC0(v110, &qword_269D7E160);
          (*v93)(v104, v97);
          (*v105)(v32, v112);
          goto LABEL_38;
        }
        v53(v50, v7);
        uint64_t v40 = (uint64_t)v87;
        uint64_t v41 = v88;
      }
      uint64_t v55 = v110;
      uint64_t v56 = v103;
      sub_253C2E770(v110, v103, &qword_269D7E160);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v56, 1, v7) == 1)
      {
        sub_253BEFAC0(v55, &qword_269D7E160);
        uint64_t v24 = v97;
        (*v93)(v104, v97);
        (*v105)(v32, v112);
LABEL_25:
        sub_253BEFAC0(v103, &qword_269D7E160);
        uint64_t v30 = v89;
        goto LABEL_26;
      }
      uint64_t v57 = v56;
      uint64_t v58 = (uint64_t)v86;
      sub_253C2E770(v57, (uint64_t)v86, &qword_269D7E160);
      int v59 = (*v90)((char *)v58, v7);
      if (v59 != v76)
      {
        sub_253BEFAC0(v110, &qword_269D7E160);
        uint64_t v24 = v97;
        (*v93)(v104, v97);
        (*v105)(v32, v112);
        (*v91)((char *)v58, v7);
        goto LABEL_25;
      }
      uint64_t v60 = (uint64_t)v73;
      sub_253DF4180();
      uint64_t v61 = sub_253BDF5F8(&v113, v114);
      uint64_t v75 = sub_253CEDC6C(v71, (uint64_t)v61, v60);
      uint64_t v63 = v62;
      (*v69)(v60, v70);
      sub_253BEFAC0(v110, &qword_269D7E160);
      uint64_t v24 = v97;
      (*v93)(v104, v97);
      (*v105)(v32, v112);
      if (v63) {
        goto LABEL_42;
      }
      (*v91)(v86, v7);
      sub_253BEFAC0(v103, &qword_269D7E160);
      if (v74 == v39)
      {
LABEL_37:
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
      LODWORD(v75) = 1;
      uint64_t v41 = v88;
      uint64_t v38 = v109;
      uint64_t v30 = v89;
LABEL_32:
      ++v39;
    }
    else
    {
      if (v42 == v96 || v42 == v95) {
        goto LABEL_29;
      }
      (*v105)(v32, v112);
      (*v98)(v29, v111);
LABEL_26:
      ++v39;
      uint64_t v38 = v109;
      if (v101 == v39) {
        goto LABEL_37;
      }
    }
  }
  __break(1u);
LABEL_42:
  swift_bridgeObjectRelease();
  (*v91)(v86, v7);
  sub_253BEFAC0(v103, &qword_269D7E160);
  uint64_t v64 = v75;
LABEL_39:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v113);
  return v64;
}

uint64_t sub_253CEF470(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), int a3)
{
  int v134 = a3;
  uint64_t v164 = a2;
  uint64_t v149 = sub_253DEFE90();
  uint64_t v159 = *(void *)(v149 - 8);
  MEMORY[0x270FA5388](v149);
  os_log_type_t v131 = (char *)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253BDEDD8(&qword_26B2519D0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v148 = (uint64_t)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v158 = (uint64_t)&v100 - v8;
  uint64_t v122 = _s23StatementFailureOutcomeVMa(0);
  MEMORY[0x270FA5388](v122);
  uint64_t v121 = (uint64_t)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_253DF0140();
  int v144 = *(void (***)(char *, uint64_t))(v133 - 8);
  MEMORY[0x270FA5388](v133);
  uint64_t v132 = (char *)&v100 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = _s23StatementSuccessOutcomeVMa(0);
  MEMORY[0x270FA5388](v130);
  uint64_t v129 = (uint64_t)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_253DF01F0();
  uint64_t v139 = *(char **)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v127 = (char *)&v100 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_253DF0A20();
  *(void *)&long long v124 = *(void *)(v153 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v153);
  uint64_t v142 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v156 = (char *)&v100 - v15;
  uint64_t v141 = sub_253DF38F0();
  uint64_t v126 = *(void (***)(char *, uint64_t))(v141 - 8);
  MEMORY[0x270FA5388](v141);
  uint64_t v140 = (char *)&v100 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_253DF2C40();
  uint64_t v115 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v114 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v157 = (uint64_t)&v100 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_253BDEDD8(&qword_269D7CC10);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v155 = (uint64_t)&v100 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v100 - v23;
  uint64_t v154 = _s28StatementResolutionReferenceOMa(0);
  MEMORY[0x270FA5388](v154);
  uint64_t v152 = (char *)&v100 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_253DF3170();
  uint64_t v123 = *(void *)(v165 - 8);
  MEMORY[0x270FA5388](v165);
  uint64_t v168 = (char *)&v100 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_253DF41F0();
  uint64_t v150 = *(void (***)(char *, uint64_t))(v166 - 8);
  MEMORY[0x270FA5388](v166);
  uint64_t v28 = (char *)&v100 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_253DF4230();
  uint64_t v167 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  uint64_t v30 = (char *)&v100 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = _s24StatementExecutionResultOMa(0);
  MEMORY[0x270FA5388](v31);
  os_log_type_t v33 = (char *)&v100 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_253DEFFE0();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v37 = (char *)&v100 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = _s19TranscriptRetrieverVMa();
  uint64_t v171 = v38;
  uint64_t v172 = &off_270361158;
  unint64_t v39 = sub_253BDEE6C(&v170);
  sub_253CF0DF0((uint64_t)v164, (uint64_t)v39);
  uint64_t v40 = sub_253BDF5F8(&v170, v171);
  sub_253C1601C((uint64_t)v40 + *(int *)(v38 + 20), (uint64_t)v169);
  sub_253BDF5F8(v169, v169[3]);
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v37, a1, v34);
  _s14ActionExecutedVMa(0);
  sub_253D7F720();
  LOBYTE(v38) = v41;
  int v42 = *(void (**)(uint64_t, uint64_t))(v35 + 8);
  uint64_t v137 = v34;
  uint64_t v136 = v35 + 8;
  unint64_t v135 = v42;
  v42((uint64_t)v37, v34);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v169);
  if (v38)
  {
    sub_253C9F158(a1, v134, (uint64_t)v33);
    swift_storeEnumTagMultiPayload();
    sub_253BDEDD8(&qword_269D7E168);
    uint64_t v43 = *(void *)(_s19EvaluatorVoteSourceOMa(0) - 8);
    unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_253DF6EC0;
    sub_253CF0DF0((uint64_t)v33, v45 + v44);
    swift_storeEnumTagMultiPayload();
    sub_253CF0E40((uint64_t)v33, (void (*)(void))_s24StatementExecutionResultOMa);
LABEL_3:
    uint64_t v46 = 1;
  }
  else
  {
    uint64_t v125 = v31;
    uint64_t v47 = *(void *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowExpression(0) + 20));
    uint64_t v48 = *(void *)(v47 + 16);
    if (v48)
    {
      uint64_t v151 = a1;
      uint64_t v164 = *(void (**)(char *, uint64_t, uint64_t))(v167 + 16);
      uint64_t v49 = v47 + ((*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80));
      uint64_t v163 = (uint64_t (**)(char *, uint64_t))(v150 + 11);
      int v162 = *MEMORY[0x263F4DEC0];
      int v160 = *MEMORY[0x263F4DF48];
      int v147 = *MEMORY[0x263F4E018];
      int v146 = *MEMORY[0x263F4E020];
      uint64_t v161 = (void (**)(char *, uint64_t))(v167 + 8);
      uint64_t v143 = v150 + 1;
      v150 += 12;
      uint64_t v145 = (void (**)(char *, char *, uint64_t))(v123 + 32);
      uint64_t v112 = (void (**)(char *, uint64_t, uint64_t))(v159 + 32);
      uint64_t v111 = (void (**)(uint64_t, char *, uint64_t))(v159 + 16);
      uint64_t v110 = (void (**)(char *, uint64_t))(v159 + 8);
      uint64_t v120 = v126 + 1;
      uint64_t v119 = (void (**)(char *, char *, uint64_t))(v124 + 16);
      uint64_t v118 = (uint64_t (**)(char *, uint64_t))(v124 + 88);
      int v117 = *MEMORY[0x263F4C7D8];
      int v108 = *MEMORY[0x263F4C7D0];
      uint64_t v126 = (void (**)(char *, uint64_t))(v124 + 8);
      uint64_t v113 = (void (**)(char *, uint64_t))(v124 + 96);
      char v104 = (void (**)(char *, char *, uint64_t))(v144 + 4);
      uint64_t v103 = (void (**)(uint64_t, char *, uint64_t))(v144 + 2);
      int v102 = v144 + 1;
      uint64_t v107 = (void (**)(char *, char *, uint64_t))(v139 + 32);
      int v106 = (void (**)(uint64_t, char *, uint64_t))(v139 + 16);
      uint64_t v105 = (void (**)(char *, uint64_t))(v139 + 8);
      int v144 = (void (**)(char *, uint64_t))(v123 + 8);
      v167 += 16;
      uint64_t v159 = *(void *)(v167 + 56);
      uint64_t v123 = v47;
      swift_bridgeObjectRetain();
      long long v124 = xmmword_253DF6EC0;
      uint64_t v50 = v149;
      uint64_t v51 = v138;
      uint64_t v139 = v24;
      uint64_t v52 = (uint64_t)v152;
      uint64_t v109 = v30;
      while (1)
      {
        v164(v30, v49, v51);
        sub_253DF4200();
        uint64_t v53 = v166;
        int v54 = (*v163)(v28, v166);
        if (v54 == v162)
        {
          swift_bridgeObjectRelease();
          (*v150)(v28, v53);
          uint64_t v88 = v51;
          uint64_t v89 = v115;
          uint64_t v90 = v114;
          uint64_t v91 = v116;
          (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v114, v28, v116);
          sub_253BDEDD8(&qword_269D7E168);
          uint64_t v92 = *(void *)(_s19EvaluatorVoteSourceOMa(0) - 8);
          unint64_t v93 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
          uint64_t v94 = swift_allocObject();
          *(_OWORD *)(v94 + 16) = v124;
          uint64_t v95 = v94 + v93;
          unint64_t v96 = v94 + v93 + *(int *)(sub_253BDEDD8(&qword_269D7C748) + 48);
          sub_253C9F6D0(v151, v95);
          (*(void (**)(unint64_t, char *, uint64_t))(v89 + 16))(v96, v90, v91);
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, uint64_t))(v89 + 8))(v90, v91);
          (*v161)(v30, v88);
          goto LABEL_3;
        }
        if (v54 == v160)
        {
          (*v150)(v28, v53);
          (*v145)(v168, v28, v165);
          uint64_t v55 = type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
          uint64_t v56 = v157;
          sub_253CF0DF0(v151 + *(int *)(v55 + 20), v157);
          uint64_t v57 = sub_253BDEDD8(&qword_269D7CC20);
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v56, 2, v57))
          {
            uint64_t v58 = v158;
            sub_253DF3140();
            uint64_t v59 = v58;
            uint64_t v60 = v148;
            sub_253C2E770(v59, v148, &qword_26B2519D0);
            if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v60, 1, v50) == 1)
            {
              uint64_t v61 = v155;
              uint64_t v62 = v154;
              _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v155, 1, 1, v154);
            }
            else
            {
              uint64_t v66 = v131;
              (*v112)(v131, v60, v50);
              uint64_t v61 = v155;
              (*v111)(v155, v66, v50);
              uint64_t v62 = v154;
              swift_storeEnumTagMultiPayload();
              _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v61, 0, 1, v62);
              unint64_t v67 = v66;
              uint64_t v52 = (uint64_t)v152;
              (*v110)(v67, v50);
            }
            sub_253BEFAC0(v158, &qword_26B2519D0);
          }
          else
          {
            uint64_t v64 = v155;
            sub_253DF3120();
            uint64_t v62 = v154;
            swift_storeEnumTagMultiPayload();
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v64, 0, 1, v62);
            uint64_t v65 = v56;
            uint64_t v61 = v64;
            uint64_t v24 = v139;
            v135(v65, v137);
          }
          sub_253C2CF58(v61, (uint64_t)v24, &qword_269D7CC10);
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v24, 1, v62) == 1)
          {
            (*v144)(v168, v165);
            (*v161)(v30, v51);
            sub_253BEFAC0((uint64_t)v24, &qword_269D7CC10);
          }
          else
          {
            sub_253CF0DA0((uint64_t)v24, v52);
            uint64_t v68 = v140;
            sub_253DF3160();
            uint64_t v69 = v156;
            sub_253DF38D0();
            (*v120)(v68, v141);
            uint64_t v70 = v142;
            uint64_t v71 = v153;
            (*v119)(v142, v69, v153);
            int v72 = (*v118)(v70, v71);
            if (v72 == v117)
            {
              (*v113)(v70, v71);
              uint64_t v73 = v127;
              uint64_t v74 = v128;
              (*v107)(v127, v70, v128);
              sub_253BDEDD8(&qword_269D7E168);
              uint64_t v75 = *(void *)(_s19EvaluatorVoteSourceOMa(0) - 8);
              unint64_t v76 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
              uint64_t v77 = swift_allocObject();
              *(_OWORD *)(v77 + 16) = v124;
              uint64_t v78 = v52;
              uint64_t v79 = v129;
              sub_253CF0DF0(v78, v129);
              (*v106)(v79 + *(int *)(v130 + 20), v73, v74);
              sub_253CF0DF0(v79, v77 + v76);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              uint64_t v80 = v79;
              uint64_t v52 = (uint64_t)v152;
              uint64_t v71 = v153;
              sub_253CF0E40(v80, (void (*)(void))_s23StatementSuccessOutcomeVMa);
              uint64_t v81 = v73;
              uint64_t v82 = v74;
              uint64_t v30 = v109;
              uint64_t v51 = v138;
              (*v105)(v81, v82);
              uint64_t v46 = 2;
            }
            else if (v72 == v108)
            {
              (*v113)(v70, v71);
              (*v104)(v132, v70, v133);
              sub_253BDEDD8(&qword_269D7E168);
              uint64_t v101 = _s19EvaluatorVoteSourceOMa(0);
              unint64_t v83 = (*(unsigned __int8 *)(*(void *)(v101 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v101 - 8) + 80);
              uint64_t v77 = swift_allocObject();
              *(_OWORD *)(v77 + 16) = v124;
              uint64_t v84 = v77 + v83;
              uint64_t v85 = v121;
              sub_253CF0DF0(v52, v121);
              (*v103)(v85 + *(int *)(v122 + 20), v132, v133);
              sub_253CF0DF0(v85, v84);
              swift_storeEnumTagMultiPayload();
              swift_storeEnumTagMultiPayload();
              sub_253CF0E40(v85, (void (*)(void))_s23StatementFailureOutcomeVMa);
              (*v102)(v132, v133);
              uint64_t v46 = 1;
            }
            else
            {
              (*v126)(v70, v71);
              uint64_t v46 = 0;
              uint64_t v77 = 0;
            }
            uint64_t v86 = v139;
            (*v126)(v156, v71);
            sub_253CF0E40(v52, (void (*)(void))_s28StatementResolutionReferenceOMa);
            (*v144)(v168, v165);
            (*v161)(v30, v51);
            uint64_t v24 = v86;
            uint64_t v50 = v149;
            if (v77)
            {
              swift_bridgeObjectRelease();
              goto LABEL_30;
            }
          }
        }
        else
        {
          if (v54 == v147 || v54 == v146)
          {
            swift_bridgeObjectRelease();
            sub_253BDEDD8(&qword_269D7E168);
            uint64_t v97 = *(void *)(_s19EvaluatorVoteSourceOMa(0) - 8);
            unint64_t v98 = (*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
            uint64_t v99 = swift_allocObject();
            *(_OWORD *)(v99 + 16) = v124;
            sub_253C9F6D0(v151, v99 + v98);
            uint64_t v46 = 1;
            swift_storeEnumTagMultiPayload();
            swift_storeEnumTagMultiPayload();
            (*v161)(v30, v51);
            goto LABEL_30;
          }
          (*v161)(v30, v51);
          (*v143)(v28, v53);
        }
        v49 += v159;
        if (!--v48)
        {
          swift_bridgeObjectRelease();
          break;
        }
      }
    }
    uint64_t v46 = 0;
  }
LABEL_30:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v170);
  return v46;
}

uint64_t sub_253CF0C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return a5;
}

uint64_t sub_253CF0C9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253CF0CE4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void *, uint64_t))
{
  uint64_t v12 = _s19TranscriptRetrieverVMa();
  uint64_t v13 = &off_270361158;
  uint64_t v8 = sub_253BDEE6C(v11);
  sub_253CF0DF0(a2, (uint64_t)v8);
  uint64_t v9 = sub_253BDF5F8(v11, v12);
  a4(a1, v9, a3);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v11);
  return a3;
}

uint64_t sub_253CF0DA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_253CF1C3C();
  v4(v3);
  sub_253BDF7F0();
  uint64_t v5 = sub_253C2F58C();
  v6(v5);
  return a2;
}

uint64_t sub_253CF0DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_253CF1C3C();
  v4(v3);
  sub_253BDF7F0();
  uint64_t v5 = sub_253C2F578();
  v6(v5);
  return a2;
}

uint64_t sub_253CF0E40(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return a1;
}

unsigned char *_s13VotingOutcomeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CF0F60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13VotingOutcomeV10CodingKeysOMa()
{
  return &_s13VotingOutcomeV10CodingKeysON;
}

unsigned char *_s13EvaluatorTypeO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CF1064);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13EvaluatorTypeO10CodingKeysOMa()
{
  return &_s13EvaluatorTypeO10CodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO22ActionPromptCodingKeysOMa()
{
  return &_s13EvaluatorTypeO22ActionPromptCodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO15FixedCodingKeysOMa()
{
  return &_s13EvaluatorTypeO15FixedCodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO26MajorityMediatorCodingKeysOMa()
{
  return &_s13EvaluatorTypeO26MajorityMediatorCodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO24TaskCompletionCodingKeysOMa()
{
  return &_s13EvaluatorTypeO24TaskCompletionCodingKeysON;
}

ValueMetadata *_s13EvaluatorTypeO27WaterfallMediatorCodingKeysOMa()
{
  return &_s13EvaluatorTypeO27WaterfallMediatorCodingKeysON;
}

void _s17EvaluatorVoteTypeOMa()
{
}

unint64_t sub_253CF10FC()
{
  unint64_t result = qword_269D7E170;
  if (!qword_269D7E170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E170);
  }
  return result;
}

unint64_t sub_253CF114C()
{
  unint64_t result = qword_269D7E178;
  if (!qword_269D7E178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E178);
  }
  return result;
}

unint64_t sub_253CF119C()
{
  unint64_t result = qword_269D7E180;
  if (!qword_269D7E180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E180);
  }
  return result;
}

unint64_t sub_253CF11EC()
{
  unint64_t result = qword_269D7E188;
  if (!qword_269D7E188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E188);
  }
  return result;
}

unint64_t sub_253CF123C()
{
  unint64_t result = qword_269D7E190;
  if (!qword_269D7E190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E190);
  }
  return result;
}

unint64_t sub_253CF128C()
{
  unint64_t result = qword_269D7E198;
  if (!qword_269D7E198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E198);
  }
  return result;
}

unint64_t sub_253CF12DC()
{
  unint64_t result = qword_269D7E1A0;
  if (!qword_269D7E1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1A0);
  }
  return result;
}

unint64_t sub_253CF132C()
{
  unint64_t result = qword_269D7E1A8;
  if (!qword_269D7E1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1A8);
  }
  return result;
}

unint64_t sub_253CF137C()
{
  unint64_t result = qword_269D7E1B0;
  if (!qword_269D7E1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1B0);
  }
  return result;
}

unint64_t sub_253CF13CC()
{
  unint64_t result = qword_269D7E1B8;
  if (!qword_269D7E1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1B8);
  }
  return result;
}

unint64_t sub_253CF141C()
{
  unint64_t result = qword_269D7E1C0;
  if (!qword_269D7E1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1C0);
  }
  return result;
}

unint64_t sub_253CF146C()
{
  unint64_t result = qword_269D7E1C8;
  if (!qword_269D7E1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1C8);
  }
  return result;
}

unint64_t sub_253CF14BC()
{
  unint64_t result = qword_269D7E1D0;
  if (!qword_269D7E1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1D0);
  }
  return result;
}

unint64_t sub_253CF150C()
{
  unint64_t result = qword_269D7E1D8;
  if (!qword_269D7E1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1D8);
  }
  return result;
}

unint64_t sub_253CF155C()
{
  unint64_t result = qword_269D7E1E0;
  if (!qword_269D7E1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1E0);
  }
  return result;
}

unint64_t sub_253CF15AC()
{
  unint64_t result = qword_269D7E1E8;
  if (!qword_269D7E1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1E8);
  }
  return result;
}

unint64_t sub_253CF15FC()
{
  unint64_t result = qword_269D7E1F0;
  if (!qword_269D7E1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E1F0);
  }
  return result;
}

unint64_t sub_253CF1648()
{
  unint64_t result = qword_269D7E218;
  if (!qword_269D7E218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E218);
  }
  return result;
}

unint64_t sub_253CF1694()
{
  unint64_t result = qword_269D7E220;
  if (!qword_269D7E220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E220);
  }
  return result;
}

unint64_t sub_253CF16E0()
{
  unint64_t result = qword_269D7E228;
  if (!qword_269D7E228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E228);
  }
  return result;
}

unint64_t sub_253CF172C()
{
  unint64_t result = qword_269D7E230;
  if (!qword_269D7E230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E230);
  }
  return result;
}

unsigned char *_s16EvaluationResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CF1844);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s17EvaluatorVoteTypeO10CodingKeysOMa()
{
  return &_s17EvaluatorVoteTypeO10CodingKeysON;
}

ValueMetadata *_s17EvaluatorVoteTypeO17AbstainCodingKeysOMa()
{
  return &_s17EvaluatorVoteTypeO17AbstainCodingKeysON;
}

ValueMetadata *_s17EvaluatorVoteTypeO17FailureCodingKeysOMa()
{
  return &_s17EvaluatorVoteTypeO17FailureCodingKeysON;
}

ValueMetadata *_s17EvaluatorVoteTypeO17SuccessCodingKeysOMa()
{
  return &_s17EvaluatorVoteTypeO17SuccessCodingKeysON;
}

unint64_t sub_253CF18B0()
{
  unint64_t result = qword_269D7E258;
  if (!qword_269D7E258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E258);
  }
  return result;
}

unint64_t sub_253CF1900()
{
  unint64_t result = qword_269D7E260;
  if (!qword_269D7E260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E260);
  }
  return result;
}

unint64_t sub_253CF1950()
{
  unint64_t result = qword_269D7E268;
  if (!qword_269D7E268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E268);
  }
  return result;
}

unint64_t sub_253CF19A0()
{
  unint64_t result = qword_269D7E270;
  if (!qword_269D7E270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E270);
  }
  return result;
}

unint64_t sub_253CF19F0()
{
  unint64_t result = qword_269D7E278;
  if (!qword_269D7E278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E278);
  }
  return result;
}

unint64_t sub_253CF1A40()
{
  unint64_t result = qword_269D7E280;
  if (!qword_269D7E280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E280);
  }
  return result;
}

unint64_t sub_253CF1A90()
{
  unint64_t result = qword_269D7E288;
  if (!qword_269D7E288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E288);
  }
  return result;
}

unint64_t sub_253CF1AE0()
{
  unint64_t result = qword_269D7E290;
  if (!qword_269D7E290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E290);
  }
  return result;
}

unint64_t sub_253CF1B30()
{
  unint64_t result = qword_269D7E298;
  if (!qword_269D7E298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E298);
  }
  return result;
}

uint64_t sub_253CF1B80()
{
  return sub_253DF5B30();
}

uint64_t sub_253CF1BA0()
{
  return sub_253DF5BC0();
}

uint64_t sub_253CF1BC0()
{
  return sub_253DF5BA0();
}

uint64_t sub_253CF1BE8()
{
  return sub_253DF5C20();
}

uint64_t sub_253CF1C0C()
{
  return v0;
}

uint64_t sub_253CF1C24()
{
  return v0;
}

uint64_t sub_253CF1C3C()
{
  return 0;
}

uint64_t sub_253CF1C48()
{
  return v0;
}

uint64_t sub_253CF1C5C()
{
  return sub_253DF5C20();
}

uint64_t sub_253CF1C7C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_253CF216C(a1, a2, a3, a4, MEMORY[0x263F4E108], (uint64_t)sub_253DC6A30, type metadata accessor for RetrievedValue);
}

uint64_t sub_253CF1CD0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_253CF216C(a1, a2, a3, a4, MEMORY[0x263F4EB98], (uint64_t)sub_253DC6C00, type metadata accessor for FeedbackLearning.CandidateEvaluation);
}

uint64_t sub_253CF1D24(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_253CF216C(a1, a2, a3, a4, MEMORY[0x263F4D150], (uint64_t)sub_253DC6D2C, type metadata accessor for FeedbackLearning.CandidateEvaluation);
}

uint64_t sub_253CF1D78(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_253CF1F80(a1, a2, a3, a4, _s16CandidateSummaryVMa, (uint64_t)sub_253DC6DF4, (uint64_t (*)(void))_s15CandidateResultVMa, (void (*)(void))_s16CandidateSummaryVMa);
}

uint64_t sub_253CF1DE0(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_253DC71A4();
    uint64_t v6 = v18;
    uint64_t v8 = sub_253DF0880();
    sub_253BDF7B0(v8);
    uint64_t v10 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v12 = *(void *)(v11 + 72);
    while (1)
    {
      a1(&v17, v10);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v13 = v17;
      uint64_t v18 = v6;
      unint64_t v14 = *(void *)(v6 + 16);
      if (v14 >= *(void *)(v6 + 24) >> 1)
      {
        sub_253DC71A4();
        uint64_t v6 = v18;
      }
      *(void *)(v6 + 16) = v14 + 1;
      *(void *)(v6 + 8 * v14 + 32) = v13;
      v10 += v12;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_253CF1F18(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_253CF1F80(a1, a2, a3, a4, type metadata accessor for FeedbackLearning.CandidateEvaluation, (uint64_t)sub_253DC73C4, _s16CandidateSummaryVMa, (void (*)(void))type metadata accessor for FeedbackLearning.CandidateEvaluation);
}

uint64_t sub_253CF1F80(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t (*a7)(void), void (*a8)(void))
{
  uint64_t v32 = a8;
  os_log_type_t v33 = a1;
  uint64_t v34 = a2;
  uint64_t v12 = a5(0);
  uint64_t v13 = sub_253BDF7B0(v12);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = *(uint64_t (**)(void))(a3 + 16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (v16)
  {
    uint64_t v18 = sub_253CF5650();
    uint64_t v30 = v19;
    v19(v18, v16, 0);
    uint64_t v17 = v35;
    uint64_t v20 = a7(0);
    sub_253BDF7B0(v20);
    uint64_t v22 = a3 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v31 = *(void *)(v23 + 72);
    while (1)
    {
      v33(v22);
      if (v8) {
        break;
      }
      sub_253CF55AC();
      if (v25)
      {
        v30(v24 > 1, a7, 1);
        uint64_t v17 = v35;
      }
      sub_253CF5568();
      sub_253CF54AC((uint64_t)v15, v26 + v27 * v9, v32);
      v22 += v31;
      uint64_t v16 = (uint64_t (*)(void))((char *)v16 - 1);
      if (!v16) {
        return v17;
      }
    }
    swift_release();
  }
  return v17;
}

uint64_t sub_253CF2118(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_253CF216C(a1, a2, a3, a4, MEMORY[0x263F4E050], (uint64_t)sub_253DC74F0, type metadata accessor for EventPayloadWithPreassignedID);
}

uint64_t sub_253CF216C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, uint64_t (*a7)(void))
{
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v31 = a5(0);
  sub_253C0F830();
  uint64_t v12 = v11;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v29 - v14;
  uint64_t v16 = *(void *)(a3 + 16);
  uint64_t v17 = MEMORY[0x263F8EE78];
  if (v16)
  {
    uint64_t v18 = sub_253CF5650();
    v29[0] = v19;
    v19(v18, v16, 0);
    uint64_t v17 = v34;
    uint64_t v20 = a7(0);
    sub_253BDF7B0(v20);
    uint64_t v22 = a3 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v30 = *(void *)(v23 + 72);
    v29[1] = v12 + 32;
    while (1)
    {
      v32(v22);
      if (v7) {
        break;
      }
      sub_253CF55AC();
      if (v25)
      {
        ((void (*)(BOOL, uint64_t (*)(void), uint64_t))v29[0])(v24 > 1, a7, 1);
        uint64_t v17 = v34;
      }
      sub_253CF5568();
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v26 + v27 * v8, v15, v31);
      v22 += v30;
      if (!--v16) {
        return v17;
      }
    }
    swift_release();
  }
  return v17;
}

uint64_t FeedbackLearning.StandardTupleGenerator.generateInteractionRecordFromEvaluation(evaluation:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_253BDEDD8(&qword_26B251C98);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  sub_253C16AA8();
  sub_253CF2498(a1, v2);
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.TaskEvaluation(0) + 28));
  uint64_t v13 = a1;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_253CF216C((void (*)(uint64_t))sub_253C59880, (uint64_t)v12, v7, (uint64_t)v14, MEMORY[0x263F4D150], (uint64_t)sub_253DC6D2C, type metadata accessor for FeedbackLearning.CandidateEvaluation);
  swift_bridgeObjectRelease();
  sub_253DF2600();
  sub_253BDF7F0();
  sub_253C0FF48();
  v9();
  uint64_t v10 = type metadata accessor for FeedbackLearningInteractionRecord();
  uint64_t result = sub_253C2CF58(v2, a2 + *(int *)(v10 + 20), &qword_26B251C98);
  *(void *)(a2 + *(int *)(v10 + 24)) = v8;
  return result;
}

uint64_t sub_253CF2498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v163 = a1;
  uint64_t v159 = a2;
  uint64_t v4 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v5);
  sub_253C34050();
  uint64_t v157 = v6;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v7);
  sub_253C33FFC();
  uint64_t v153 = v8;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v9);
  uint64_t v148 = (uint64_t)&v140 - v10;
  sub_253C36350();
  uint64_t v160 = sub_253DF24A0();
  sub_253C0F830();
  uint64_t v158 = v11;
  MEMORY[0x270FA5388](v12);
  sub_253C34050();
  uint64_t v155 = v13;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v14);
  sub_253C33FFC();
  uint64_t v154 = v15;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v16);
  sub_253C33FFC();
  uint64_t v149 = v17;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v18);
  int v144 = (char *)&v140 - v19;
  sub_253C36350();
  uint64_t v162 = sub_253DF2740();
  sub_253C0F830();
  uint64_t v166 = v20;
  MEMORY[0x270FA5388](v21);
  sub_253BDFA94();
  uint64_t v165 = v22;
  sub_253C36350();
  uint64_t v23 = sub_253DF2610();
  uint64_t v24 = sub_253BDF9FC(v23);
  MEMORY[0x270FA5388](v24);
  sub_253BDFA94();
  uint64_t v164 = v25;
  sub_253C36350();
  uint64_t v147 = sub_253DF2600();
  sub_253C0F830();
  uint64_t v146 = v26;
  MEMORY[0x270FA5388](v27);
  sub_253BDFA94();
  uint64_t v152 = v28;
  sub_253C36350();
  uint64_t v167 = sub_253DF26C0();
  sub_253C0F830();
  uint64_t v150 = v29;
  MEMORY[0x270FA5388](v30);
  sub_253C34050();
  unint64_t v145 = v31;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v32);
  sub_253C33FFC();
  unint64_t v161 = v33;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v34);
  uint64_t v151 = (char *)&v140 - v35;
  uint64_t v36 = sub_253C36350();
  uint64_t v37 = type metadata accessor for FeedbackLearning.ActionValue(v36);
  uint64_t v38 = sub_253BDF9FC(v37);
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = sub_253C598FC();
  type metadata accessor for FeedbackLearning.TaskAction(v39);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v40);
  sub_253C10D28();
  uint64_t v43 = v42 - v41;
  uint64_t v44 = type metadata accessor for FeedbackLearning.TaskFinalResolutionValue(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v45);
  sub_253C2F354();
  uint64_t v48 = v46 - v47;
  MEMORY[0x270FA5388](v49);
  uint64_t v51 = (char *)&v140 - v50;
  uint64_t v52 = type metadata accessor for FeedbackLearning.TaskFinalResolutionState(0);
  uint64_t v53 = sub_253BDF9FC(v52);
  MEMORY[0x270FA5388](v53);
  sub_253C2F37C();
  uint64_t v54 = sub_253BDEDD8(&qword_269D7C730);
  uint64_t v55 = sub_253BDF9FC(v54);
  MEMORY[0x270FA5388](v55);
  sub_253C2F354();
  uint64_t v58 = v56 - v57;
  MEMORY[0x270FA5388](v59);
  uint64_t v61 = (char *)&v140 - v60;
  uint64_t v156 = v4;
  uint64_t v62 = *(int *)(v4 + 32);
  uint64_t v63 = v163;
  sub_253CF5450(v163 + v62, v2, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
  uint64_t v64 = sub_253BDEDD8(&qword_269D7C728);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 1, v64) == 1)
  {
    uint64_t v65 = v160;
    sub_253CF5500(v2, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionState);
    uint64_t v66 = v155;
    sub_253DF1790();
    uint64_t v67 = v157;
    sub_253CF5450(v63, v157, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
    uint64_t v68 = sub_253DF2490();
    os_log_type_t v69 = sub_253DF56D0();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)sub_253CAEF84();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v72 = v158;
      v169[0] = v71;
      *(_DWORD *)uint64_t v70 = 136315138;
      uint64_t v73 = sub_253DEFFE0();
      sub_253CF5408((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v74 = sub_253CF55C4();
      uint64_t v168 = sub_253D8E5FC(v74, v75, v169);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      sub_253CF5500(v157, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
      _os_log_impl(&dword_253BD8000, v68, v69, "The final resolution state for statement id %s is incomplete, skipping generating a tuple interaction", v70, 0xCu);
      uint64_t v76 = 1;
      swift_arrayDestroy();
      sub_253BDF910();
      sub_253BDF910();

      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v66, v160);
      goto LABEL_24;
    }
    sub_253CF5500(v67, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);

    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v66, v65);
LABEL_23:
    uint64_t v76 = 1;
    uint64_t v73 = v159;
    goto LABEL_24;
  }
  uint64_t v77 = v3;
  uint64_t v141 = v43;
  uint64_t v142 = v51;
  sub_253C2CF58(v2, (uint64_t)v61, &qword_269D7C730);
  sub_253C56520((uint64_t)v61, v58, &qword_269D7C730);
  int v78 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v58, 1, v44);
  uint64_t v143 = v61;
  if (v78 == 1)
  {
    sub_253BDF664(v58, &qword_269D7C730);
    sub_253DF1790();
    uint64_t v79 = v153;
    sub_253CF5450(v163, v153, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
    uint64_t v80 = sub_253DF2490();
    os_log_type_t v81 = sub_253DF56D0();
    if (os_log_type_enabled(v80, v81))
    {
      sub_253CAEF84();
      v169[0] = swift_slowAlloc();
      sub_253CF55F8(4.8149e-34);
      uint64_t v73 = sub_253DEFFE0();
      sub_253CF5408((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v82 = sub_253CF55C4();
      uint64_t v76 = v83;
      uint64_t v84 = sub_253D8E5FC(v82, v83, v169);
      sub_253CF5584(v84);
      swift_bridgeObjectRelease();
      sub_253CF5500(v79, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
      sub_253C7019C(&dword_253BD8000, v85, v86, "Statement id %s is not associated with a resolved statement, skipping generating a tuple interaction");
      sub_253CF5630();
      sub_253BDF910();
      sub_253BDF910();

      sub_253CF5558();
      uint64_t v88 = v87();
      sub_253CF55E0(v88, &qword_269D7C730);
      goto LABEL_24;
    }

    sub_253CF5500(v79, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
    sub_253CF5558();
    uint64_t v117 = v116();
    goto LABEL_22;
  }
  uint64_t v89 = (uint64_t)v142;
  sub_253CF54AC(v58, (uint64_t)v142, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionValue);
  sub_253CF5450(v89, v48, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionValue);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v91 = v163;
  if (EnumCaseMultiPayload != 1)
  {
    sub_253CF5500(v48, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionValue);
    sub_253DF1790();
    uint64_t v118 = v148;
    sub_253CF5450(v91, v148, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
    uint64_t v119 = sub_253DF2490();
    os_log_type_t v120 = sub_253DF56D0();
    if (os_log_type_enabled(v119, v120))
    {
      sub_253CAEF84();
      v169[0] = swift_slowAlloc();
      sub_253CF55F8(4.8149e-34);
      uint64_t v73 = sub_253DEFFE0();
      sub_253CF5408((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v121 = sub_253CF55C4();
      uint64_t v76 = v122;
      uint64_t v123 = sub_253D8E5FC(v121, v122, v169);
      sub_253CF5584(v123);
      swift_bridgeObjectRelease();
      sub_253CF5500(v118, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
      sub_253C7019C(&dword_253BD8000, v124, v125, "Statement id %s is not associated with an action statement, skipping generating a tuple interaction");
      sub_253CF5630();
      sub_253BDF910();
      sub_253BDF910();

      sub_253CF5558();
      v126();
      uint64_t v127 = sub_253CF5500((uint64_t)v142, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionValue);
      sub_253CF55E0(v127, &qword_269D7C730);
      goto LABEL_24;
    }

    sub_253CF5500(v118, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
    sub_253CF5558();
    v128();
    uint64_t v117 = sub_253CF5500(v89, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionValue);
LABEL_22:
    sub_253CF55E0(v117, &qword_269D7C730);
    goto LABEL_23;
  }
  uint64_t v92 = v141;
  sub_253CF54AC(v48, v141, (void (*)(void))type metadata accessor for FeedbackLearning.TaskAction);
  uint64_t v93 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  sub_253CF5450(v92 + *(int *)(v93 + 20), v77, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  _s13ActionCreatedCMa(0);
  uint64_t v94 = swift_allocObject();
  *(void *)(v94
            + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated____lazy_storage___parameters) = 0;
  sub_253CF54AC(v77, v94 + OBJC_IVAR____TtCO23IntelligenceFlowRuntime16FeedbackLearning13ActionCreated_action, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  uint64_t v95 = sub_253C5DB18();
  swift_setDeallocating();
  sub_253C5FD9C();
  uint64_t v96 = sub_253C60834(v95);
  if (v96)
  {
    uint64_t v97 = v96;
    unint64_t v98 = v151;
    sub_253DF46E0();
    sub_253BDEDD8(&qword_269D7BDB0);
    uint64_t v99 = v150;
    unint64_t v100 = (*(unsigned __int8 *)(v150 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v150 + 80);
    uint64_t v160 = *(void *)(v150 + 72);
    uint64_t v101 = swift_allocObject();
    *(_OWORD *)(v101 + 16) = xmmword_253DF6EC0;
    int v102 = *(void (**)(unint64_t, char *, uint64_t))(v99 + 16);
    v102(v101 + v100, v98, v167);
    sub_253C0E558(v97);
    swift_bridgeObjectRelease();
    v169[0] = v101;
    sub_253DBEFEC();
    uint64_t v103 = v169[0];
    sub_253C0FF48();
    v104();
    uint64_t v105 = *(void *)(v103 + 16);
    uint64_t v73 = v159;
    if (v105)
    {
      uint64_t v158 = v95;
      v169[0] = MEMORY[0x263F8EE78];
      sub_253DC6CC8(0, v105, 0);
      uint64_t v157 = v103;
      unint64_t v106 = v103 + v100;
      uint64_t v107 = (void (**)(uint64_t, uint64_t))(v99 + 8);
      unint64_t v108 = v145;
      do
      {
        uint64_t v109 = (char *)v161;
        uint64_t v110 = v167;
        v102(v161, (char *)v106, v167);
        v102(v108, v109, v110);
        sub_253DF2710();
        (*v107)((uint64_t)v109, v110);
        uint64_t v111 = v169[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_253DC6CC8(0, *(void *)(v111 + 16) + 1, 1);
          uint64_t v111 = v169[0];
        }
        uint64_t v112 = v166;
        unint64_t v114 = *(void *)(v111 + 16);
        unint64_t v113 = *(void *)(v111 + 24);
        if (v114 >= v113 >> 1)
        {
          sub_253DC6CC8(v113 > 1, v114 + 1, 1);
          uint64_t v112 = v166;
          uint64_t v111 = v169[0];
        }
        *(void *)(v111 + 16) = v114 + 1;
        (*(void (**)(unint64_t, uint64_t))(v112 + 32))(v111+ ((*(unsigned __int8 *)(v112 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v112 + 80))+ *(void *)(v112 + 72) * v114, v165);
        v169[0] = v111;
        v106 += v160;
        --v105;
        uint64_t v115 = v164;
      }
      while (v105);
      swift_bridgeObjectRelease();
      uint64_t v73 = v159;
      uint64_t v131 = v141;
      uint64_t v99 = v150;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v115 = v164;
      uint64_t v131 = v141;
    }
    sub_253CF33F8(v163 + *(int *)(v156 + 36), v115);
    sub_253DF2630();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v151, v167);
    sub_253CF5500(v131, (void (*)(void))type metadata accessor for FeedbackLearning.TaskAction);
    uint64_t v139 = sub_253CF5500((uint64_t)v142, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionValue);
    sub_253CF55E0(v139, &qword_269D7C730);
    uint64_t v76 = 0;
  }
  else
  {
    uint64_t v132 = v92;
    sub_253DF1790();
    uint64_t v133 = sub_253DF2490();
    os_log_type_t v134 = sub_253DF56E0();
    BOOL v135 = os_log_type_enabled(v133, v134);
    uint64_t v73 = v159;
    if (v135)
    {
      uint64_t v136 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v136 = 0;
      _os_log_impl(&dword_253BD8000, v133, v134, "The final action parameters are not all candidate id extractable, skipping generating a tuple interaction", v136, 2u);
      sub_253BDF910();
    }

    swift_bridgeObjectRelease();
    sub_253CF5558();
    v137();
    sub_253CF5500(v132, (void (*)(void))type metadata accessor for FeedbackLearning.TaskAction);
    uint64_t v138 = sub_253CF5500(v89, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFinalResolutionValue);
    sub_253CF55E0(v138, &qword_269D7C730);
    uint64_t v76 = 1;
  }
LABEL_24:
  uint64_t v129 = sub_253DF2650();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v73, v76, 1, v129);
}

uint64_t sub_253CF33F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v41 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FeedbackLearning.TaskStatus(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_253DF2610();
  uint64_t v8 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253DF24A0();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253BDEDD8(&qword_269D7E2B8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v18 = *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for FeedbackLearning.TaskOutcome(0) + 20));
  if (v18 != 3)
  {
    uint64_t v40 = v12;
    uint64_t v19 = (uint64_t)&v17[*(int *)(v15 + 48)];
    *uint64_t v17 = v18;
    sub_253CF5450(a1, v19, (void (*)(void))type metadata accessor for FeedbackLearning.TaskStatus);
    if (v18)
    {
      uint64_t v20 = v11;
      if (v18 == 1)
      {
        uint64_t v21 = sub_253BDEDD8(&qword_269D7C770);
        switch(_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v19, 4, v21))
        {
          case 1u:
          case 3u:
          case 4u:
            break;
          case 2u:
            goto LABEL_10;
          default:
            sub_253CF5500(v19, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFailureReason);
            break;
        }
        uint64_t v22 = (unsigned int *)MEMORY[0x263F4D0E0];
        return (*(uint64_t (**)(uint64_t, void, uint64_t))(v8 + 104))(v43, *v22, v42);
      }
    }
    else
    {
      uint64_t v23 = sub_253BDEDD8(&qword_269D7C770);
      uint64_t v20 = v11;
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v19, 4, v23) - 1 <= 1)
      {
        uint64_t v22 = (unsigned int *)MEMORY[0x263F4D0D8];
        return (*(uint64_t (**)(uint64_t, void, uint64_t))(v8 + 104))(v43, *v22, v42);
      }
    }
LABEL_10:
    sub_253DF1790();
    uint64_t v25 = sub_253DF2490();
    int v26 = sub_253DF5700();
    if (os_log_type_enabled(v25, (os_log_type_t)v26))
    {
      uint64_t v37 = v20;
      int v39 = v26;
      unint64_t v27 = 0xEA00000000006465;
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v45 = v38;
      *(_DWORD *)uint64_t v28 = 136315138;
      if (v18)
      {
        if (v18 == 1) {
          uint64_t v29 = 0x657463656A65722ELL;
        }
        else {
          uint64_t v29 = 0x6E6F646E6162612ELL;
        }
        if (v18 == 1) {
          unint64_t v27 = 0xE900000000000064;
        }
      }
      else
      {
        uint64_t v29 = 0x6D7269666E6F632ELL;
      }
      uint64_t v44 = sub_253D8E5FC(v29, v27, &v45);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_253BD8000, v25, (os_log_type_t)v39, "Generating a score based on task outcome, ignoring task confirmation %s", v28, 0xCu);
      uint64_t v30 = v38;
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v30, -1, -1);
      MEMORY[0x25A2709B0](v28, -1, -1);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v37);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v20);
    }
    sub_253BDF664((uint64_t)v17, &qword_269D7E2B8);
  }
  sub_253CF5450(a1, (uint64_t)v7, (void (*)(void))type metadata accessor for FeedbackLearning.TaskStatus);
  uint64_t v31 = sub_253BDEDD8(&qword_269D7C770);
  switch(_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v7, 4, v31))
  {
    case 1u:
      uint64_t v35 = (unsigned int *)MEMORY[0x263F4D100];
      goto LABEL_28;
    case 2u:
      uint64_t v35 = (unsigned int *)MEMORY[0x263F4D108];
      goto LABEL_28;
    case 3u:
      uint64_t v35 = (unsigned int *)MEMORY[0x263F4D0F0];
      goto LABEL_28;
    case 4u:
      uint64_t v35 = (unsigned int *)MEMORY[0x263F4D0E0];
LABEL_28:
      uint64_t v34 = v42;
      (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *v35, v42);
      uint64_t v33 = v43;
      break;
    default:
      uint64_t v32 = v41;
      sub_253CF54AC((uint64_t)v7, v41, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFailureReason);
      sub_253CF3D68(v32, (uint64_t)v10);
      sub_253CF5500(v32, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFailureReason);
      uint64_t v34 = v42;
      uint64_t v33 = v43;
      break;
  }
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(v33, v10, v34);
}

uint64_t sub_253CF39FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DF2610();
  uint64_t v5 = sub_253BDF9FC(v4);
  MEMORY[0x270FA5388](v5);
  sub_253C598FC();
  uint64_t v24 = sub_253DF26C0();
  sub_253C0F830();
  uint64_t v7 = v6;
  MEMORY[0x270FA5388](v8);
  sub_253C10D28();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_253DF2740();
  uint64_t v13 = sub_253BDF9FC(v12);
  MEMORY[0x270FA5388](v13);
  sub_253C10D28();
  uint64_t v14 = sub_253DF2600();
  sub_253C0F830();
  uint64_t v16 = v15;
  MEMORY[0x270FA5388](v17);
  sub_253C10D28();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v20, a2 + *(int *)(v21 + 24), v14);
  uint64_t v22 = type metadata accessor for FeedbackLearning.CandidateEvaluation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, a1 + *(int *)(v22 + 24), v24);
  sub_253DF2710();
  char v26 = *(unsigned char *)(a1 + *(int *)(v22 + 36));
  sub_253CF3C24(&v26, a2 + *(int *)(v21 + 36), v2);
  return sub_253DF26D0();
}

uint64_t type metadata accessor for FeedbackLearningInteractionRecord()
{
  uint64_t result = qword_26B255DD0;
  if (!qword_26B255DD0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_253CF3C24@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned int v4 = *a1;
  if (!(v4 >> 6))
  {
    if (*a1)
    {
      if (v4 == 1) {
LABEL_7:
      }
        uint64_t v5 = (unsigned int *)MEMORY[0x263F4D0E0];
      else {
LABEL_10:
      }
        uint64_t v5 = (unsigned int *)MEMORY[0x263F4D0F0];
    }
    else
    {
LABEL_11:
      uint64_t v5 = (unsigned int *)MEMORY[0x263F4D0D8];
    }
    goto LABEL_12;
  }
  if (v4 >> 6 == 1)
  {
    switch(v4 & 0x3F)
    {
      case 1u:
        uint64_t v5 = (unsigned int *)MEMORY[0x263F4D0D0];
        break;
      case 2u:
        goto LABEL_10;
      case 3u:
        goto LABEL_7;
      default:
        goto LABEL_11;
    }
LABEL_12:
    uint64_t v6 = *v5;
    uint64_t v7 = sub_253DF2610();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104);
    return v8(a3, v6, v7);
  }
  switch(*a1)
  {
    case 0x81:
      goto LABEL_10;
    case 0x82:
      uint64_t result = sub_253CF33F8(a2, a3);
      break;
    default:
      uint64_t v5 = (unsigned int *)MEMORY[0x263F4D108];
      goto LABEL_12;
  }
  return result;
}

uint64_t sub_253CF3D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v3 = sub_253DF2610();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FeedbackLearning.TaskFailureReason(0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253DF00F0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v34 - v15;
  sub_253CF5450(a1, (uint64_t)v9, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFailureReason);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_253CF5500((uint64_t)v9, (void (*)(void))type metadata accessor for FeedbackLearning.TaskFailureReason);
    return (*(uint64_t (**)(uint64_t, void, uint64_t))(v4 + 104))(v35, *MEMORY[0x263F4D0F0], v3);
  }
  uint64_t v34 = v3;
  uint64_t v18 = v35;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v16, v9, v10);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  int v19 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v14, v10);
  if (v19 != *MEMORY[0x263F4C050])
  {
    uint64_t v21 = v4;
    if (v19 == *MEMORY[0x263F4BFE8])
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      uint64_t v26 = *MEMORY[0x263F4D0F0];
      uint64_t v27 = v4;
LABEL_7:
      uint64_t v23 = v6;
      uint64_t v28 = v6;
      uint64_t v25 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v27 + 104))(v28, v26, v34);
      goto LABEL_8;
    }
    uint64_t v29 = v18;
    if (v19 == *MEMORY[0x263F4C058]
      || v19 == *MEMORY[0x263F4C038]
      || v19 == *MEMORY[0x263F4C008]
      || v19 == *MEMORY[0x263F4C040]
      || v19 == *MEMORY[0x263F4BFF0])
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      uint64_t v30 = (unsigned int *)MEMORY[0x263F4D0F8];
LABEL_15:
      uint64_t v31 = *(void (**)(char *, void, uint64_t))(v4 + 104);
      uint64_t v23 = v6;
      uint64_t v32 = v6;
      uint64_t v25 = v34;
      v31(v32, *v30, v34);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v29, v23, v25);
    }
    if (v19 == *MEMORY[0x263F4BFF8]
      || v19 == *MEMORY[0x263F4C048]
      || v19 == *MEMORY[0x263F4C060]
      || v19 == *MEMORY[0x263F4C018]
      || v19 == *MEMORY[0x263F4C030]
      || v19 == *MEMORY[0x263F4C068])
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      uint64_t v30 = (unsigned int *)MEMORY[0x263F4D0F0];
      goto LABEL_15;
    }
    if (v19 != *MEMORY[0x263F4C020] && v19 != *MEMORY[0x263F4C000])
    {
      if (v19 == *MEMORY[0x263F4C010])
      {
        (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
        uint64_t v33 = (unsigned int *)MEMORY[0x263F4D0E0];
LABEL_31:
        uint64_t v26 = *v33;
        uint64_t v21 = v4;
        uint64_t v27 = v4;
        goto LABEL_7;
      }
      if (v19 != *MEMORY[0x263F4C028])
      {
        uint64_t result = sub_253DF5C80();
        __break(1u);
        return result;
      }
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    uint64_t v33 = (unsigned int *)MEMORY[0x263F4D0F0];
    goto LABEL_31;
  }
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v16, v10);
  uint64_t v21 = v4;
  uint64_t v22 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  uint64_t v23 = v6;
  uint64_t v24 = v6;
  uint64_t v25 = v34;
  v22(v24, *MEMORY[0x263F4D0F0], v34);
  v20(v14, v10);
LABEL_8:
  uint64_t v29 = v18;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v29, v23, v25);
}

BOOL static FeedbackLearning.EvaluationTrigger.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedbackLearning.EvaluationTrigger.hash(into:)()
{
  return sub_253DF5DC0();
}

uint64_t FeedbackLearning.EvaluationTrigger.hashValue.getter()
{
  return sub_253DF5DD0();
}

uint64_t FeedbackLearningInteractionRecord.deviceContext.getter@<X0>(uint64_t a1@<X8>)
{
  sub_253DF2600();
  sub_253BDF7F0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);

  return v5(a1, v1, v3);
}

uint64_t FeedbackLearningInteractionRecord.tupleInteraction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeedbackLearningInteractionRecord();
  return sub_253C56520(v1 + *(int *)(v3 + 20), a1, &qword_26B251C98);
}

uint64_t FeedbackLearningInteractionRecord.candidateInteractions.getter()
{
  type metadata accessor for FeedbackLearningInteractionRecord();

  return swift_bridgeObjectRetain();
}

uint64_t static FeedbackLearningInteractionRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = sub_253DF2650();
  sub_253C0F830();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  sub_253C2F37C();
  uint64_t v10 = sub_253BDEDD8(&qword_269D7E2A0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v11);
  sub_253C16AA8();
  uint64_t v12 = sub_253BDEDD8(&qword_26B251C98);
  uint64_t v13 = sub_253BDF9FC(v12);
  MEMORY[0x270FA5388](v13);
  sub_253C2F354();
  uint64_t v16 = v14 - v15;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v35 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v35 - v21;
  if ((sub_253DF25D0() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v36 = v8;
  uint64_t v23 = type metadata accessor for FeedbackLearningInteractionRecord();
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v26 = v23;
  uint64_t v27 = *(int *)(v23 + 20);
  v35[1] = v24;
  sub_253C56520(v24 + v27, (uint64_t)v22, &qword_26B251C98);
  v35[2] = v26;
  sub_253C56520(v25 + *(int *)(v26 + 20), (uint64_t)v20, &qword_26B251C98);
  uint64_t v28 = v2 + *(int *)(v10 + 48);
  sub_253C56520((uint64_t)v22, v2, &qword_26B251C98);
  sub_253C56520((uint64_t)v20, v28, &qword_26B251C98);
  sub_253CF5610(v2);
  if (!v29)
  {
    sub_253C56520(v2, v16, &qword_26B251C98);
    sub_253CF5610(v28);
    if (!v29)
    {
      uint64_t v30 = v36;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 32))(v3, v28, v6);
      sub_253CF5408(&qword_269D7E2A8, MEMORY[0x263F4D110]);
      char v31 = sub_253DF5250();
      uint64_t v32 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v32(v3, v6);
      sub_253BDF664((uint64_t)v20, &qword_26B251C98);
      sub_253BDF664((uint64_t)v22, &qword_26B251C98);
      v32(v16, v6);
      sub_253BDF664(v2, &qword_26B251C98);
      if (v31) {
        goto LABEL_12;
      }
LABEL_13:
      char v33 = 0;
      return v33 & 1;
    }
    sub_253BDF664((uint64_t)v20, &qword_26B251C98);
    sub_253BDF664((uint64_t)v22, &qword_26B251C98);
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v16, v6);
LABEL_10:
    sub_253BDF664(v2, &qword_269D7E2A0);
    goto LABEL_13;
  }
  sub_253BDF664((uint64_t)v20, &qword_26B251C98);
  sub_253BDF664((uint64_t)v22, &qword_26B251C98);
  sub_253CF5610(v28);
  if (!v29) {
    goto LABEL_10;
  }
  sub_253BDF664(v2, &qword_26B251C98);
LABEL_12:
  sub_253CBAF60();
  return v33 & 1;
}

unint64_t sub_253CF47C8()
{
  unint64_t result = qword_269D7E2B0;
  if (!qword_269D7E2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E2B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearning.StandardTupleGenerator()
{
  return &type metadata for FeedbackLearning.StandardTupleGenerator;
}

unsigned char *_s17EvaluationTriggerOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253CF48F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearning.EvaluationTrigger()
{
  return &type metadata for FeedbackLearning.EvaluationTrigger;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedbackLearningInteractionRecord(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DF2600();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253DF2650();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_253BDEDD8(&qword_26B251C98);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 1, v11);
    }
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_253DF2650();
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_253DF2650();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253BDEDD8(&qword_26B251C98);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_253DF2650();
  int v11 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_253BDEDD8(&qword_26B251C98);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_253DF2650();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_253BDEDD8(&qword_26B251C98);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t assignWithTake for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF2600();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_253DF2650();
  int v11 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_253BDEDD8(&qword_26B251C98);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253CF515C);
}

uint64_t sub_253CF515C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253DF2600();
  sub_253C16A18();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v9, a2, v8);
  }
  sub_253BDEDD8(&qword_26B251C98);
  sub_253C16A18();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedbackLearningInteractionRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253CF5228);
}

void sub_253CF5228(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_253DF2600();
  sub_253C16A18();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_253BDEDD8(&qword_26B251C98);
    sub_253C16A18();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v11, a2, a2, v10);
}

void sub_253CF52DC()
{
  sub_253DF2600();
  if (v0 <= 0x3F)
  {
    sub_253CF53B0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_253CF53B0()
{
  if (!qword_26B255E90)
  {
    sub_253DF2650();
    unint64_t v0 = sub_253DF5810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B255E90);
    }
  }
}

uint64_t sub_253CF5408(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253CF5450(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  sub_253C0FF48();
  v4();
  return a2;
}

uint64_t sub_253CF54AC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  uint64_t v4 = sub_253C2F58C();
  v5(v4);
  return a2;
}

uint64_t sub_253CF5500(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_253CF5568()
{
  *(void *)(v1 + 16) = v0;
}

uint64_t sub_253CF5584(uint64_t a1)
{
  *(void *)(v1 - 104) = a1;
  return sub_253DF5820();
}

void sub_253CF55AC()
{
  *(void *)(v1 - 72) = v0;
}

uint64_t sub_253CF55C4()
{
  return sub_253DF5C40();
}

uint64_t sub_253CF55E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(v2 - 312);
  return sub_253BDF664(v4, a2);
}

void sub_253CF55F8(float a1)
{
  *uint64_t v1 = a1;
}

uint64_t sub_253CF5610(uint64_t a1)
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 1, v1);
}

uint64_t sub_253CF5630()
{
  return swift_arrayDestroy();
}

uint64_t sub_253CF5650()
{
  *(void *)(v1 - 72) = v0;
  return 0;
}

uint64_t sub_253CF5664(uint64_t a1)
{
  uint64_t v3 = sub_253DF0A20();
  sub_253C0F830();
  uint64_t v215 = v4;
  MEMORY[0x270FA5388](v5);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v6);
  sub_253C36430();
  sub_253C34018(v7);
  uint64_t v199 = sub_253DF10D0();
  sub_253C0F830();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_253BDFA94();
  uint64_t v195 = v11;
  uint64_t v12 = sub_253BDEDD8(&qword_26B255420);
  MEMORY[0x270FA5388](v12 - 8);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v13);
  sub_253C36430();
  sub_253C34018(v14);
  v198[2] = sub_253DF0880();
  sub_253C0F830();
  uint64_t v210 = v15;
  MEMORY[0x270FA5388](v16);
  sub_253C34050();
  sub_253C63378();
  MEMORY[0x270FA5388](v17);
  sub_253C36430();
  sub_253C34018(v18);
  uint64_t v190 = sub_253DF3170();
  sub_253C0F830();
  uint64_t v204 = v19;
  MEMORY[0x270FA5388](v20);
  sub_253BDFA94();
  sub_253C34018(v21);
  uint64_t v192 = sub_253DF0240();
  sub_253C0F830();
  uint64_t v202 = v22;
  MEMORY[0x270FA5388](v23);
  sub_253BDFA94();
  sub_253C34018(v24);
  uint64_t v194 = sub_253DF32A0();
  sub_253C0F830();
  uint64_t v201 = v25;
  MEMORY[0x270FA5388](v26);
  sub_253BDFA94();
  sub_253C34018(v27);
  uint64_t v214 = sub_253DF41F0();
  sub_253C0F830();
  uint64_t v200 = v28;
  MEMORY[0x270FA5388](v29);
  sub_253C34050();
  uint64_t v216 = v30;
  MEMORY[0x270FA5388](v31);
  sub_253C63378();
  MEMORY[0x270FA5388](v32);
  sub_253C36430();
  uint64_t v213 = v33;
  uint64_t v34 = sub_253BDEDD8(&qword_26B2519D0);
  MEMORY[0x270FA5388](v34 - 8);
  sub_253BDFA94();
  sub_253C34018(v35);
  uint64_t v36 = sub_253DF4230();
  sub_253C0F830();
  uint64_t v38 = v37;
  MEMORY[0x270FA5388](v39);
  sub_253C34050();
  uint64_t v219 = v40;
  MEMORY[0x270FA5388](v41);
  sub_253C63378();
  MEMORY[0x270FA5388](v42);
  uint64_t v44 = (char *)v167 - v43;
  uint64_t v197 = v1;
  uint64_t v45 = sub_253BDF5F8(v1 + 3, v1[6]);
  uint64_t v46 = _s17FastTaskEvaluatorVMa();
  uint64_t v225 = v46;
  uint64_t v226 = &off_27035E778;
  uint64_t v47 = sub_253BDEE6C((uint64_t *)&v224);
  sub_253CFA04C((uint64_t)v45, (uint64_t)v47, (void (*)(void))_s17FastTaskEvaluatorVMa);
  sub_253BDB0E4(&v224, (uint64_t)v223);
  uint64_t v208 = *(void *)(a1 + 16);
  if (!v208)
  {
    v198[0] = a1;
    swift_bridgeObjectRetain();
    goto LABEL_49;
  }
  uint64_t v185 = v9;
  uint64_t v186 = v3;
  uint64_t v48 = a1;
  unint64_t v49 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v50 = v38 + 16;
  uint64_t v51 = *(void (**)(void))(v38 + 16);
  sub_253C102E4();
  v51();
  uint64_t v52 = (uint64_t)sub_253BDF5F8(v223, v223[3]);
  uint64_t v221 = v46;
  uint64_t v222 = &off_27035E778;
  uint64_t v53 = sub_253BDEE6C(&v220);
  sub_253CFA04C(v52, (uint64_t)v53, (void (*)(void))_s17FastTaskEvaluatorVMa);
  sub_253BDF5F8(&v220, v221);
  uint64_t v54 = v48;
  uint64_t v55 = v38;
  swift_bridgeObjectRetain();
  sub_253CA0154();
  LOBYTE(v52) = v56;
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)&v220);
  uint64_t v57 = v38 + 8;
  uint64_t v58 = *(void (**)(char *, uint64_t))(v38 + 8);
  v58(v44, v36);
  if (v52)
  {
LABEL_52:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v223);
    swift_bridgeObjectRelease();
    uint64_t v161 = *v197;
    swift_bridgeObjectRetain();
    return v161;
  }
  uint64_t v218 = v51;
  v198[0] = v54;
  uint64_t v59 = v214;
  if (v208 == 1)
  {
LABEL_49:
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v223);
    swift_bridgeObjectRelease();
    return 0;
  }
  unint64_t v60 = v49;
  uint64_t v61 = v50;
  uint64_t v62 = *(void (***)(void, void))(v55 + 72);
  uint64_t v217 = (char **)(v200 + 11);
  int v203 = *MEMORY[0x263F4DEB8];
  int v188 = *MEMORY[0x263F4DF50];
  int v182 = *MEMORY[0x263F4DED8];
  int v180 = *MEMORY[0x263F4DFD0];
  int v191 = *MEMORY[0x263F4DFE0];
  uint64_t v211 = v200 + 1;
  uint64_t v187 = v200 + 12;
  v167[1] = v204 + 32;
  v167[0] = v204 + 8;
  uint64_t v184 = v210 + 32;
  uint64_t v183 = v210 + 8;
  int v168 = *MEMORY[0x263F4DF48];
  uint64_t v181 = (void (**)(uint64_t, uint64_t))(v185 + 8);
  uint64_t v170 = v202 + 32;
  uint64_t v169 = v202 + 8;
  uint64_t v179 = v201 + 32;
  uint64_t v178 = v201 + 8;
  uint64_t v177 = v185 + 32;
  uint64_t v176 = v215 + 16;
  uint64_t v175 = v215 + 88;
  int v174 = *MEMORY[0x263F4C7D8];
  int v173 = *MEMORY[0x263F4C7D0];
  uint64_t v172 = (void (**)(uint64_t, uint64_t))(v215 + 8);
  int v63 = *MEMORY[0x263F4DEC0];
  uint64_t v200 = v62;
  unint64_t v64 = (unint64_t)v62 + v198[0] + v60;
  LODWORD(v202) = *MEMORY[0x263F4E018];
  uint64_t v65 = 1;
  LODWORD(v201) = *MEMORY[0x263F4E020];
  uint64_t v204 = v57;
  uint64_t v206 = v61;
  uint64_t v212 = (void (*)(uint64_t, uint64_t))v58;
  int v171 = v63;
  while (1)
  {
    uint64_t result = ((uint64_t (*)(char *, unint64_t, uint64_t))v218)(v44, v64, v36);
    if (__OFADD__(v65, 1)) {
      break;
    }
    uint64_t v210 = v65 + 1;
    uint64_t v67 = v213;
    uint64_t v68 = v44;
    sub_253DF4200();
    uint64_t v215 = *v217;
    ((void (*)(uint64_t, uint64_t))v215)(v67, v59);
    sub_253C63544();
    if (v73)
    {
      uint64_t v69 = v207;
      sub_253DF4180();
      uint64_t v70 = sub_253DEFE90();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v69, 0, 1, v70);
      sub_253C633D4();
      uint64_t v72 = v67;
      uint64_t v67 = v69;
LABEL_19:
      v71(v72, v59);
      goto LABEL_20;
    }
    sub_253C63544();
    if (v73)
    {
      sub_253CFA0D4();
      sub_253DF4180();
      uint64_t v74 = sub_253DEFE90();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v67, 0, 1, v74);
      sub_253C633D4();
      uint64_t v72 = v213;
      goto LABEL_19;
    }
    sub_253C63544();
    if (v75)
    {
      uint64_t v76 = sub_253CFA0B0();
      v77(v76);
      sub_253C633D4();
      sub_253CFA120();
      uint64_t v59 = v194;
      sub_253C10134();
      v80(v78, v79);
      sub_253CFA0D4();
      sub_253DF3140();
      os_log_type_t v81 = &v204;
LABEL_18:
      uint64_t v71 = *(void (**)(uint64_t, uint64_t))*(v81 - 32);
      uint64_t v72 = (uint64_t)v68;
      goto LABEL_19;
    }
    sub_253C63544();
    if (v82)
    {
      uint64_t v83 = sub_253CFA0B0();
      v84(v83);
      sub_253C633D4();
      sub_253CFA120();
      uint64_t v59 = v192;
      sub_253C10134();
      v87(v85, v86);
      sub_253CFA0D4();
      sub_253DF0230();
      os_log_type_t v81 = v198;
      goto LABEL_18;
    }
    sub_253C63544();
    uint64_t v143 = v193;
    if (v141)
    {
      uint64_t v67 = v142;
      (*v187)(v142, v214);
      sub_253CFA120();
      sub_253C10134();
      v146(v144, v145);
      sub_253C60DAC();
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v143, 1, v199) == 1)
      {
        sub_253CFA0E4();
        sub_253BEFBCC();
        v149(v147, v148);
        sub_253BEFAC0(v143, &qword_26B255420);
        uint64_t v150 = sub_253DEFE90();
        uint64_t v67 = v207;
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v207, 1, 1, v150);
      }
      else
      {
        sub_253CFA0D4();
        sub_253DF0230();
        sub_253CFA0E4();
        sub_253BEFBCC();
        v158(v156, v157);
        (*v181)(v143, v199);
      }
    }
    else
    {
      sub_253C63544();
      uint64_t v67 = v207;
      if (v151)
      {
        (*v187)(v152, v214);
        sub_253C633D4();
        uint64_t v68 = v189;
        uint64_t v59 = v190;
        sub_253C10134();
        v155(v153, v154);
        sub_253DF3140();
        os_log_type_t v81 = v196;
        goto LABEL_18;
      }
      uint64_t v159 = v152;
      uint64_t v160 = sub_253DEFE90();
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v67, 1, 1, v160);
      (*v211)(v159, v214);
    }
LABEL_20:
    uint64_t v88 = sub_253DEFE90();
    int v89 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v67, 1, v88);
    sub_253BEFAC0(v67, &qword_26B2519D0);
    uint64_t v90 = v218;
    ((void (*)(uint64_t, char *, uint64_t))v218)(v209, v44, v36);
    BOOL v73 = v89 == 1;
    uint64_t v59 = v214;
    if (v73) {
      goto LABEL_26;
    }
    sub_253DF4200();
    uint64_t v91 = sub_253CFA0F4();
    v92(v91);
    sub_253C63544();
    if (!v73)
    {
      uint64_t v102 = sub_253C33FA4();
      v103(v102);
LABEL_25:
      uint64_t v90 = v218;
LABEL_26:
      sub_253BEFD20();
      v106(v104, v105);
      ((void (*)(uint64_t, char *, uint64_t))v90)(v219, v44, v36);
      goto LABEL_27;
    }
    uint64_t v93 = sub_253C33FA4();
    v94(v93);
    sub_253C10134();
    v97(v95, v96);
    uint64_t v98 = v205;
    sub_253C60DAC();
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v98, 1, v199) == 1)
    {
      sub_253CFA0E4();
      sub_253BEFBCC();
      v101(v99, v100);
      sub_253BEFAC0(v205, &qword_26B255420);
      uint64_t v59 = v214;
      goto LABEL_25;
    }
    sub_253C633D4();
    sub_253C10134();
    v121(v119, v120);
    uint64_t v122 = v196[0];
    sub_253DF10C0();
    sub_253C633D4();
    v123(v196[1], v122, v186);
    uint64_t v124 = sub_253C33FA4();
    LODWORD(v185) = v125(v124);
    uint64_t v126 = *v172;
    sub_253CFA110();
    v126(v127, v128);
    sub_253CFA110();
    v126(v129, v130);
    int v63 = v171;
    sub_253C633D4();
    sub_253BEFBCC();
    v133(v131, v132);
    sub_253CFA0E4();
    sub_253BEFBCC();
    v136(v134, v135);
    sub_253C634D8();
    v139(v137, v138);
    ((void (*)(uint64_t, char *, uint64_t))v218)(v219, v44, v36);
    BOOL v140 = v185 == v174 || v185 == v173;
    uint64_t v59 = v214;
    if (v140) {
      goto LABEL_51;
    }
LABEL_27:
    sub_253DF4200();
    uint64_t v107 = sub_253CFA0F4();
    if (v108(v107) == v63)
    {
      (*v211)(v216, v59);
LABEL_51:
      uint64_t v162 = v212;
      sub_253C634D8();
      v162(v163, v164);
      sub_253C634D8();
      v162(v165, v166);
      goto LABEL_52;
    }
    sub_253C63544();
    if (v73 || v109 == v201) {
      goto LABEL_51;
    }
    sub_253BEFBCC();
    v113(v111, v112);
    unint64_t v114 = v212;
    sub_253C634D8();
    v114(v115, v116);
    sub_253C634D8();
    v114(v117, v118);
    ++v65;
    v64 += (unint64_t)v200;
    if (v210 == v208) {
      goto LABEL_49;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_253CF6564@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_253DF24A0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF1790();
  uint64_t v8 = sub_253DF2490();
  os_log_type_t v9 = sub_253DF56C0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_253BD8000, v8, v9, "Received a signal for termination, setting a flag to cancel task evaluations", v10, 2u);
    MEMORY[0x25A2709B0](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  *(unsigned char *)(*(void *)(a1 + 104) + 16) = 1;
  uint64_t v11 = *MEMORY[0x263F61850];
  uint64_t v12 = sub_253DF1830();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(a2, v11, v12);
}

uint64_t sub_253CF66FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[7] = a2;
  v3[8] = a3;
  v3[6] = a1;
  v3[9] = *(void *)(type metadata accessor for FeedbackLearning.TaskEvaluation(0) - 8);
  v3[10] = swift_task_alloc();
  v3[11] = *(void *)(_s18TaskDefinitionThinO18TaskEvaluationThinVMa(0) - 8);
  v3[12] = swift_task_alloc();
  uint64_t v4 = sub_253DF3E70();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  uint64_t v5 = sub_253DF2400();
  v3[16] = v5;
  v3[17] = *(void *)(v5 - 8);
  v3[18] = swift_task_alloc();
  v3[19] = swift_task_alloc();
  uint64_t v6 = sub_253DF2420();
  v3[20] = v6;
  v3[21] = *(void *)(v6 - 8);
  v3[22] = swift_task_alloc();
  v3[23] = swift_task_alloc();
  uint64_t v7 = sub_253DEFE90();
  v3[24] = v7;
  v3[25] = *(void *)(v7 - 8);
  v3[26] = swift_task_alloc();
  v3[27] = swift_task_alloc();
  uint64_t v8 = sub_253DF4230();
  v3[28] = v8;
  v3[29] = *(void *)(v8 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  uint64_t v9 = sub_253DF24A0();
  v3[32] = v9;
  v3[33] = *(void *)(v9 - 8);
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_253CF6A98, 0, 0);
}

uint64_t sub_253CF6A98()
{
  uint64_t v85 = v0;
  if (*(unsigned char *)(*(void *)(v0[6] + 104) + 16))
  {
    sub_253DF1790();
    sub_253C102E4();
    v14();
    uint64_t v15 = sub_253DF2490();
    os_log_type_t v16 = sub_253DF56C0();
    BOOL v17 = os_log_type_enabled(v15, v16);
    uint64_t v18 = v0[33];
    uint64_t v19 = v0[34];
    uint64_t v20 = v0[32];
    uint64_t v21 = v0[29];
    if (v17)
    {
      uint64_t v67 = v0[30];
      sub_253CFA130();
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = sub_253C0FF74();
      *(_DWORD *)uint64_t v22 = 136315138;
      sub_253DF4180();
      sub_253CF9F48((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
      uint64_t v23 = sub_253DF5C40();
      sub_253CFA144();
      sub_253BEFD20();
      v24();
      v0[5] = sub_253D8E5FC(v23, (unint64_t)(v0 + 5), &v82);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(v21 + 8))(v67);
      _os_log_impl(&dword_253BD8000, log, v16, "Cancelling evaluation of eventId=%s, a termination signal was received", v22, 0xCu);
      swift_arrayDestroy();
      sub_253BDF910();
      sub_253BDF910();

      sub_253BEFBCC();
      v25();
    }
    else
    {
      (*(void (**)(void, void))(v21 + 8))(v0[30], v0[28]);

      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    }
  }
  else
  {
    sub_253DF1790();
    sub_253C102E4();
    v1();
    uint64_t v2 = sub_253DF2490();
    os_log_type_t v3 = sub_253DF56C0();
    BOOL v4 = os_log_type_enabled(v2, v3);
    uint64_t v5 = v0[36];
    uint64_t v7 = v0[32];
    uint64_t v6 = v0[33];
    uint64_t v8 = v0[31];
    uint64_t v9 = v0[29];
    if (v4)
    {
      sub_253CFA130();
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v82 = sub_253C0FF74();
      buf = v10;
      *(_DWORD *)uint64_t v10 = 136315138;
      sub_253DF4180();
      sub_253CF9F48((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
      uint64_t v11 = sub_253DF5C40();
      sub_253CFA144();
      sub_253BEFD20();
      v12();
      v0[4] = sub_253D8E5FC(v11, (unint64_t)(v0 + 5), &v82);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t))(v9 + 8))(v8);
      _os_log_impl(&dword_253BD8000, log, v3, "Starting evaluation of eventId=%s", buf, 0xCu);
      swift_arrayDestroy();
      sub_253BDF910();
      sub_253BDF910();

      os_log_type_t v81 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      sub_253BEFBCC();
      v13();
    }
    else
    {
      (*(void (**)(void, void))(v9 + 8))(v0[31], v0[28]);

      os_log_type_t v81 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
      v81(v5, v7);
    }
    uint64_t v26 = v0[22];
    uint64_t v27 = v0[20];
    uint64_t v28 = v0[21];
    sub_253DF1630();
    sub_253DF1630();
    sub_253DF2410();
    sub_253DF23D0();
    uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
    v79(v26, v27);
    uint64_t v29 = sub_253DF2410();
    os_signpost_type_t v30 = sub_253DF5790();
    if (sub_253DF5800())
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      os_signpost_id_t v32 = sub_253DF23E0();
      _os_signpost_emit_with_name_impl(&dword_253BD8000, v29, v30, v32, "FeedbackLearning", "", v31, 2u);
      sub_253BDF910();
    }
    uint64_t v70 = v0[23];
    uint64_t v33 = v0[19];
    uint64_t v68 = v0[20];
    uint64_t v35 = v0[17];
    uint64_t v34 = v0[18];
    uint64_t v37 = v0[15];
    uint64_t v36 = v0[16];
    uint64_t v38 = v0[14];
    uint64_t v75 = v0[13];
    uint64_t v39 = v0[6];

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16))(v34, v33, v36);
    sub_253DF2470();
    swift_allocObject();
    uint64_t v40 = sub_253DF2460();
    sub_253BEFD20();
    v41();
    v79(v70, v68);
    sub_253DEFE80();
    sub_253BDF5F8((void *)(v39 + 24), *(void *)(v39 + 48));
    sub_253DF3DA0();
    sub_253CA0BC0();
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v75);
    char v42 = v82;
    uint64_t v43 = v83;
    sub_253DF1790();
    swift_bridgeObjectRetain_n();
    uint64_t v44 = sub_253DF2490();
    os_log_type_t v45 = sub_253DF56C0();
    if (os_log_type_enabled(v44, v45))
    {
      os_log_type_t v74 = v45;
      loga = v44;
      uint64_t v80 = v40;
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v84 = sub_253C0FF74();
      uint64_t v76 = v46;
      *(_DWORD *)uint64_t v46 = 136315138;
      uint64_t v47 = *(void *)(v43 + 16);
      uint64_t v48 = MEMORY[0x263F8EE78];
      if (v47)
      {
        char v71 = v42;
        uint64_t v49 = v0[11];
        uint64_t v50 = v0[9];
        uint64_t v82 = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_253DC748C(0, v47, 0);
        uint64_t v51 = v43 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
        uint64_t v52 = *(void *)(v50 + 72);
        uint64_t v48 = v82;
        do
        {
          uint64_t v53 = v0[10];
          sub_253CFA04C(v51, v53, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
          sub_253CC29D0();
          sub_253CF9FF8(v53, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_253DC748C(0, *(void *)(v48 + 16) + 1, 1);
            uint64_t v48 = v82;
          }
          unint64_t v55 = *(void *)(v48 + 16);
          unint64_t v54 = *(void *)(v48 + 24);
          if (v55 >= v54 >> 1)
          {
            sub_253DC748C(v54 > 1, v55 + 1, 1);
            uint64_t v48 = v82;
          }
          uint64_t v56 = v0[12];
          *(void *)(v48 + 16) = v55 + 1;
          sub_253CF9E40(v56, v48+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v55);
          v51 += v52;
          --v47;
        }
        while (v47);
        swift_bridgeObjectRelease();
        char v42 = v71;
      }
      uint64_t v69 = v0[32];
      uint64_t v72 = v0[35];
      v0[2] = v48;
      sub_253BDEDD8(&qword_26B256010);
      sub_253CF9EA4();
      uint64_t v59 = sub_253DF51F0();
      unint64_t v61 = v60;
      swift_bridgeObjectRelease();
      v0[3] = sub_253D8E5FC(v59, v61, &v84);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_253BD8000, loga, v74, "Evaluation Results: %s", v76, 0xCu);
      swift_arrayDestroy();
      sub_253BDF910();
      sub_253BDF910();

      v81(v72, v69);
      uint64_t v40 = v80;
    }
    else
    {
      uint64_t v57 = v0[35];
      uint64_t v58 = v0[32];
      swift_bridgeObjectRelease_n();

      v81(v57, v58);
    }
    uint64_t v62 = v0[26];
    uint64_t v63 = v0[7];
    LOBYTE(v82) = v42;
    uint64_t v83 = v43;
    sub_253CF74F4((unsigned __int8 *)&v82, v63, v62);
    sub_253BEFD20();
    v64();
    swift_bridgeObjectRelease();
    sub_253CF7E94(v40, "FeedbackLearning");
    swift_release();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v65 = (uint64_t (*)(void))v0[1];
  return v65();
}

uint64_t sub_253CF74F4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v80 = a2;
  uint64_t v81 = a3;
  uint64_t v4 = sub_253DF24A0();
  uint64_t v70 = *(void *)(v4 - 8);
  uint64_t v71 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_253DEFE20();
  uint64_t v63 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  BOOL v73 = ((char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_253BDEDD8(&qword_26B251C98);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v78 = (uint64_t)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for FeedbackLearningInteractionRecord();
  MEMORY[0x270FA5388](v77);
  uint64_t v65 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_253DEFE90();
  uint64_t v62 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v82 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for FeedbackLearning.TaskEvaluation(0);
  uint64_t v61 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = (void (**)(void, void))sub_253DF2400();
  uint64_t v67 = (uint64_t)*(v69 - 1);
  uint64_t v14 = MEMORY[0x270FA5388](v69);
  uint64_t v66 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v72 = (char *)&v61 - v16;
  uint64_t v17 = sub_253DF2420();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v61 - v22;
  uint64_t v24 = sub_253DF15B0();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v74 = *a1;
  uint64_t v68 = *((void *)a1 + 1);
  (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, *MEMORY[0x263F4E368], v24);
  LOBYTE(a1) = sub_253DF15A0();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  if (a1)
  {
    sub_253DF1630();
    sub_253DF1630();
    sub_253DF2410();
    sub_253DF23D0();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v18 + 8);
    uint64_t v71 = v18 + 8;
    v28(v21, v17);
    uint64_t v29 = sub_253DF2410();
    os_signpost_type_t v30 = sub_253DF5790();
    uint64_t v31 = v17;
    if (sub_253DF5800())
    {
      os_signpost_id_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_signpost_id_t v32 = 0;
      os_signpost_id_t v33 = sub_253DF23E0();
      _os_signpost_emit_with_name_impl(&dword_253BD8000, v29, v30, v33, "FeedbackLearning.donate", "", v32, 2u);
      uint64_t v34 = v32;
      uint64_t v31 = v17;
      MEMORY[0x25A2709B0](v34, -1, -1);
    }

    uint64_t v35 = v67;
    uint64_t v36 = v72;
    uint64_t v37 = v69;
    (*(void (**)(char *, char *, void (**)(void, void)))(v67 + 16))(v66, v72, v69);
    sub_253DF2470();
    swift_allocObject();
    uint64_t v38 = sub_253DF2460();
    (*(void (**)(char *, void))(v35 + 8))(v36, v37);
    v28(v23, v31);
    uint64_t v39 = *(void *)(v68 + 16);
    if (v39)
    {
      uint64_t v67 = v38;
      uint64_t v72 = (char *)(v64 + 64);
      uint64_t v40 = v68 + ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80));
      uint64_t v71 = *(void *)(v61 + 72);
      uint64_t v70 = v63 + 8;
      uint64_t v69 = (void (**)(void, void))(v62 + 8);
      swift_bridgeObjectRetain();
      uint64_t v41 = (uint64_t)v65;
      uint64_t v42 = v82;
      uint64_t v43 = (int *)v75;
      do
      {
        sub_253CFA04C(v40, (uint64_t)v13, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
        sub_253DEFE80();
        sub_253CF8718(v80, v42, v81);
        uint64_t v44 = v78;
        uint64_t v45 = sub_253CF2498((uint64_t)v13, v78);
        uint64_t v46 = *(void *)&v13[v43[7]];
        MEMORY[0x270FA5388](v45);
        *(&v61 - 2) = (uint64_t)v13;
        swift_bridgeObjectRetain();
        uint64_t v47 = sub_253CF1D24((void (*)(uint64_t))sub_253C59880, (uint64_t)(&v61 - 4), v46, (uint64_t)v84);
        swift_bridgeObjectRelease();
        uint64_t v48 = &v13[v43[6]];
        uint64_t v49 = sub_253DF2600();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v41, v48, v49);
        uint64_t v50 = v77;
        uint64_t v51 = v41 + *(int *)(v77 + 20);
        sub_253CF9F90(v44, v51);
        *(void *)(v41 + *(int *)(v50 + 24)) = v47;
        uint64_t v52 = (uint64_t)v13;
        uint64_t v53 = v73;
        sub_253DF25E0();
        uint64_t v54 = v52 + v43[5];
        unsigned __int8 v83 = v74;
        swift_bridgeObjectRetain();
        id v55 = FeedbackLearningBiomeDonator.donateInteractionTuples(tuple:candidates:sessionId:absoluteTimestamp:statementId:trigger:)(v51, v47, v52, v53, v54, &v83);
        swift_bridgeObjectRelease();
        sub_253CF88F0(v80, v82, (uint64_t)v55, v81);

        uint64_t v42 = v82;
        uint64_t v56 = v53;
        uint64_t v13 = (char *)v52;
        (*(void (**)(NSObject *, uint64_t))v70)(v56, v79);
        sub_253CF9FF8(v41, (void (*)(void))type metadata accessor for FeedbackLearningInteractionRecord);
        (*v69)(v42, v76);
        sub_253CF9FF8(v52, (void (*)(void))type metadata accessor for FeedbackLearning.TaskEvaluation);
        v40 += v71;
        --v39;
      }
      while (v39);
      swift_bridgeObjectRelease();
      uint64_t v38 = v67;
    }
    sub_253CF7E94(v38, "FeedbackLearning.donate");
    return swift_release();
  }
  else
  {
    sub_253DF1790();
    uint64_t v58 = sub_253DF2490();
    os_log_type_t v59 = sub_253DF56C0();
    if (os_log_type_enabled(v58, v59))
    {
      unint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v60 = 0;
      _os_log_impl(&dword_253BD8000, v58, v59, "Feedback Learning is not enabled, skipping evaluation donation.", v60, 2u);
      MEMORY[0x25A2709B0](v60, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v6, v71);
  }
}

uint64_t sub_253CF7E64()
{
  return MEMORY[0x270FA2498](sub_253CF7E80, 0, 0);
}

uint64_t sub_253CF7E80()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_253CF7E94(uint64_t a1, const char *a2)
{
  uint64_t v47 = a2;
  sub_253DF2430();
  sub_253C0F830();
  uint64_t v45 = v3;
  uint64_t v46 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF2400();
  sub_253C0F830();
  uint64_t v48 = v7;
  uint64_t v49 = v6;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v13 = sub_253DF2420();
  sub_253C0F830();
  uint64_t v15 = v14;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF1630();
  uint64_t v19 = sub_253DF2410();
  sub_253DF2440();
  int v20 = sub_253DF5780();
  if (sub_253DF5800())
  {
    int v41 = v20;
    uint64_t v42 = v18;
    uint64_t v43 = v15;
    os_log_t v40 = v19;
    uint64_t v44 = v13;
    swift_retain();
    sub_253DF2480();
    swift_release();
    uint64_t v22 = v45;
    uint64_t v21 = v46;
    int v23 = (*(uint64_t (**)(char *, uint64_t))(v45 + 88))(v5, v46);
    uint64_t v24 = v48;
    uint64_t v25 = v49;
    uint64_t v26 = v10;
    if (v23 == *MEMORY[0x263F90238])
    {
      char v27 = 0;
      char v28 = 0;
      uint64_t v29 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v21);
      uint64_t v29 = "%s";
      char v28 = 2;
      char v27 = 1;
    }
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v26, v12, v25);
    uint64_t v33 = swift_slowAlloc();
    uint64_t v51 = sub_253C0FF74();
    *(unsigned char *)uint64_t v33 = v28;
    *(unsigned char *)(v33 + 1) = v27;
    *(_WORD *)(v33 + 2) = 2080;
    sub_253DF15D0();
    uint64_t v34 = sub_253DF5910();
    uint64_t v50 = sub_253D8E5FC(v34, v35, &v51);
    sub_253DF5820();
    swift_bridgeObjectRelease();
    os_signpost_id_t v36 = sub_253DF23E0();
    os_log_t v37 = v40;
    _os_signpost_emit_with_name_impl(&dword_253BD8000, v40, (os_signpost_type_t)v41, v36, v47, v29, (uint8_t *)v33, 0xCu);
    swift_arrayDestroy();
    sub_253BDF910();
    sub_253BDF910();

    uint64_t v38 = *(void (**)(void))(v24 + 8);
    sub_253C634D8();
    v38();
    sub_253BEFBCC();
    v39();
    return ((uint64_t (*)(char *, uint64_t))v38)(v26, v25);
  }
  else
  {

    sub_253BEFBCC();
    v30();
    sub_253C634D8();
    return v31();
  }
}

uint64_t sub_253CF8218()
{
  uint64_t v1 = sub_253BDEDD8(&qword_26B255300);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0 + 16, v1);

  return MEMORY[0x270FA0228](v0, 17, 7);
}

uint64_t type metadata accessor for ActionEvaluationParticipant.ActionEvaluationCancellationStatus()
{
  return self;
}

uint64_t sub_253CF82B4()
{
  if (MEMORY[0x263F8EEE0]) {
    return sub_253BDEDD8(&qword_26B255300);
  }
  else {
    return MEMORY[0x263F8EE60] + 8;
  }
}

uint64_t destroy for ActionEvaluationParticipant(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 24);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 64);

  return swift_release();
}

uint64_t initializeWithCopy for ActionEvaluationParticipant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v5 = a2 + 24;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  v8(a1 + 24, v5, v7);
  long long v9 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 88) = v9;
  (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1 + 64, a2 + 64);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  return a1;
}

void *assignWithCopy for ActionEvaluationParticipant(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  sub_253C22614(a1 + 3, a2 + 3);
  sub_253C22614(a1 + 8, a2 + 8);
  a1[13] = a2[13];
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for ActionEvaluationParticipant(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x70uLL);
}

uint64_t assignWithTake for ActionEvaluationParticipant(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(a1 + 64);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionEvaluationParticipant(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionEvaluationParticipant(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionEvaluationParticipant()
{
  return &type metadata for ActionEvaluationParticipant;
}

uint64_t sub_253CF8604()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_253CF8638(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = *sub_253BDF5F8(a4, a4[3]);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_269D7E2C8 + dword_269D7E2C8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v10;
  void *v10 = v5;
  v10[1] = sub_253CFA0AC;
  return v12(a1, a2, a3, v9, v4);
}

uint64_t sub_253CF8718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DF1F80();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_253DF1F70();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF1D50();
  sub_253DF1D40();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v9, v13, v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F4EC38], v6);
  sub_253CF8B74((uint64_t)v9, a1, a2, a3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_253CF88F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a2;
  uint64_t v21 = a4;
  uint64_t v18 = a3;
  uint64_t v19 = sub_253DF1F80();
  uint64_t v5 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_253DF0D20();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_253DF1F40();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF4080();
  sub_253DF0D10();
  swift_bridgeObjectRelease();
  sub_253C53060();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v7, v15, v12);
  uint64_t v16 = v19;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F4EC30], v19);
  sub_253CF8B74((uint64_t)v7, a1, v20, v21);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_253CF8B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v46 = a2;
  uint64_t v37 = a1;
  uint64_t v45 = sub_253DF19B0();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  int v41 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253BDEDD8(&qword_269D7C678);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_253DF1A60();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v38 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253DF1D90();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253DF2050();
  uint64_t v35 = *(void *)(v13 - 8);
  uint64_t v36 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_253BDEDD8(&qword_269D7C680);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_253DF1FB0();
  uint64_t v34 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF1FA0();
  uint64_t v23 = sub_253DF1F80();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v18, v37, v23);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v18, 0, 1, v23);
  sub_253DF1F90();
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v12, v22, v19);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F4EC08], v9);
  sub_253C52C78();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v24 = v35;
  uint64_t v25 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v7, v15, v36);
  uint64_t v26 = *MEMORY[0x263F4EA60];
  uint64_t v27 = sub_253DF1A30();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v7, v26, v27);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v7, 0, 1, v27);
  uint64_t v28 = v43;
  uint64_t v29 = v41;
  uint64_t v30 = v45;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v41, *MEMORY[0x263F4E9A8], v45);
  uint64_t v31 = v38;
  sub_253C52E8C();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v30);
  sub_253BEFAC0((uint64_t)v7, &qword_269D7C678);
  sub_253DF3190();
  sub_253DF3180();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v31, v44);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v15, v25);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v34);
}

uint64_t sub_253CF90EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[37] = a3;
  v5[38] = a5;
  v5[35] = a1;
  v5[36] = a2;
  uint64_t v7 = sub_253DF3DE0();
  v5[39] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v5[40] = v8;
  v5[41] = *(void *)(v8 + 64);
  v5[42] = swift_task_alloc();
  uint64_t v9 = sub_253DEFE90();
  v5[43] = v9;
  v5[44] = *(void *)(v9 - 8);
  v5[45] = swift_task_alloc();
  uint64_t v10 = sub_253DF24A0();
  v5[46] = v10;
  v5[47] = *(void *)(v10 - 8);
  v5[48] = swift_task_alloc();
  uint64_t v11 = sub_253DF4230();
  v5[49] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v5[50] = v12;
  v5[51] = *(void *)(v12 + 64);
  v5[52] = swift_task_alloc();
  v5[53] = swift_task_alloc();
  v5[54] = swift_task_alloc();
  uint64_t v13 = sub_253DF3E70();
  v5[55] = v13;
  v5[56] = *(void *)(v13 - 8);
  v5[57] = swift_task_alloc();
  v5[33] = type metadata accessor for SessionCoordinatorResponseCallback(0);
  v5[34] = &off_270366550;
  v5[30] = a4;
  swift_retain();
  return MEMORY[0x270FA2498](sub_253CF9374, 0, 0);
}

uint64_t sub_253CF9374()
{
  uint64_t v46 = v0;
  uint64_t v2 = v0[56];
  uint64_t v1 = v0[57];
  uint64_t v3 = v0[55];
  uint64_t v4 = v0[36];
  sub_253CF99C8(v0[38], (uint64_t)(v0 + 2));
  uint64_t v5 = swift_allocObject();
  memcpy((void *)(v5 + 16), v0 + 2, 0x70uLL);
  sub_253DF1840();
  swift_allocObject();
  sub_253DF1850();
  sub_253DF3DA0();
  uint64_t v6 = sub_253DF3E40();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  if (v4 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v9 = v0[36];
  unint64_t v8 = v0[37];
  unint64_t v10 = *(void *)(v6 + 16);
  if (v10 < v9 || (uint64_t)v10 < (uint64_t)v8) {
    goto LABEL_18;
  }
  if ((v8 & 0x8000000000000000) != 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v9 != v8)
  {
    if (v9 < v8)
    {
      uint64_t v38 = v0 + 16;
      uint64_t v12 = v0[50];
      uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
      uint64_t v15 = *(void (**)(void))(v12 + 16);
      v12 += 16;
      uint64_t v14 = v15;
      uint64_t v16 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v36 = *(void *)(v12 + 56);
      uint64_t v37 = v0[40];
      uint64_t v17 = v6 + ((v13 + 32) & ~v13) + v36 * v0[36];
      uint64_t v18 = v0[36];
      uint64_t v39 = (void (**)(uint64_t, uint64_t))(v12 - 8);
      uint64_t v40 = v15;
      do
      {
        uint64_t v44 = v17;
        sub_253C102E4();
        v14();
        sub_253DF1790();
        sub_253C102E4();
        v14();
        uint64_t v19 = sub_253DF2490();
        os_log_type_t v20 = sub_253DF56D0();
        if (os_log_type_enabled(v19, v20))
        {
          uint64_t v21 = swift_slowAlloc();
          uint64_t v45 = sub_253C0FF74();
          *(_DWORD *)uint64_t v21 = 136315138;
          sub_253DF4180();
          sub_253CF9F48((unint64_t *)&qword_26B2552E8, MEMORY[0x263F07508]);
          uint64_t v22 = sub_253DF5C40();
          unint64_t v24 = v23;
          uint64_t v14 = v40;
          sub_253BEFBCC();
          v25();
          *(void *)(v21 + 4) = sub_253D8E5FC(v22, v24, &v45);
          swift_bridgeObjectRelease();
          uint64_t v43 = *v39;
          sub_253BEFBCC();
          v26();
          _os_log_impl(&dword_253BD8000, v19, v20, "Received event %s for evaluation. Queuing for processing.", (uint8_t *)v21, 0xCu);
          swift_arrayDestroy();
          sub_253BDF910();
          sub_253BDF910();
        }
        else
        {
          uint64_t v43 = *v16;
          (*v16)(v0[53], v0[49]);
        }

        sub_253BEFBCC();
        v27();
        uint64_t v41 = v0[54];
        uint64_t v28 = v0[49];
        uint64_t v29 = v0[42];
        uint64_t v30 = v0[39];
        uint64_t v42 = v0[37];
        uint64_t v31 = v0[35];
        sub_253CF99C8(v0[38], (uint64_t)v38);
        sub_253C102E4();
        v14();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v29, v31, v30);
        uint64_t v32 = swift_allocObject();
        memcpy((void *)(v32 + 16), v38, 0x70uLL);
        sub_253C10134();
        v33();
        ++v18;
        uint64_t v14 = v40;
        sub_253C10134();
        v34();
        sub_253DF14D0();
        swift_release();
        v43(v41, v28);
        uint64_t v17 = v44 + v36;
        uint64_t v16 = v39;
      }
      while (v18 != v42);
      goto LABEL_14;
    }
LABEL_20:
    __break(1u);
    return result;
  }
LABEL_14:
  swift_bridgeObjectRelease();
  swift_retain();
  sub_253DF14D0();
  swift_release();
  sub_253BDF5F8(v0 + 30, v0[33]);
  sub_253D96EE0(MEMORY[0x263F8EE78], (uint64_t)sub_253C4A980, 0, 0);
  swift_release();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)(v0 + 30));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_253CF99C8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_253CF9A00()
{
  swift_bridgeObjectRelease();
  swift_release();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 40);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 80);
  swift_release();

  return MEMORY[0x270FA0238](v0, 128, 7);
}

uint64_t sub_253CF9A58@<X0>(uint64_t a1@<X8>)
{
  return sub_253CF6564(v1 + 16, a1);
}

uint64_t sub_253CF9A60()
{
  sub_253DF4230();
  sub_253C0F830();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = sub_253DF3DE0();
  sub_253C0F830();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (((v2 + 128) & ~v2) + v4 + v10) & ~v10;
  uint64_t v12 = v11 + *(void *)(v9 + 64);
  uint64_t v13 = v2 | v10 | 7;
  swift_bridgeObjectRelease();
  swift_release();
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 40);
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v0 + 80);
  swift_release();
  sub_253CFA110();
  v14();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v11, v5);

  return MEMORY[0x270FA0238](v0, v12, v13);
}

uint64_t sub_253CF9B80()
{
  uint64_t v2 = *(void *)(sub_253DF4230() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 128) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(unsigned __int8 *)(*(void *)(sub_253DF3DE0() - 8) + 80);
  unint64_t v6 = v3 + v4 + v5;
  uint64_t v7 = v0 + 16;
  uint64_t v8 = v0 + v3;
  uint64_t v9 = v0 + (v6 & ~v5);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v10;
  void *v10 = v1;
  v10[1] = sub_253CF9CBC;
  return sub_253CF66FC(v7, v8, v9);
}

uint64_t sub_253CF9CBC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_253CF9DB0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253CFA0AC;
  return sub_253CF7E64();
}

uint64_t sub_253CF9E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s18TaskDefinitionThinO18TaskEvaluationThinVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_253CF9EA4()
{
  unint64_t result = qword_26B256018;
  if (!qword_26B256018)
  {
    sub_253C0BFF8(&qword_26B256010);
    sub_253CF9F48(&qword_26B255730, (void (*)(uint64_t))_s18TaskDefinitionThinO18TaskEvaluationThinVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B256018);
  }
  return result;
}

uint64_t sub_253CF9F48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253CF9F90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_26B251C98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_253CF9FF8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return a1;
}

uint64_t sub_253CFA04C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_253CFA0B0()
{
  return v0;
}

uint64_t sub_253CFA0F4()
{
  return v0;
}

uint64_t sub_253CFA120()
{
  return *(void *)(v0 - 256);
}

uint64_t sub_253CFA130()
{
  return 12;
}

uint64_t sub_253CFA144()
{
  return v0;
}

void sub_253CFA158()
{
  sub_253C59954();
  uint64_t v2 = v1;
  uint64_t v3 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  sub_253C16A90();
  uint64_t v7 = *(void *)(v2 + 16);
  if (v7)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_253DC6F4C(0, v7, 0);
    uint64_t v8 = *(void *)(type metadata accessor for FeedbackLearning.FlowExpression(0) - 8);
    uint64_t v9 = v2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v13 = *(void *)(v8 + 72);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    do
    {
      v12(v0, v9, v3);
      unint64_t v11 = *(void *)(v14 + 16);
      unint64_t v10 = *(void *)(v14 + 24);
      if (v11 >= v10 >> 1) {
        sub_253DC6F4C(v10 > 1, v11 + 1, 1);
      }
      *(void *)(v14 + 16) = v11 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v14+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v11, v0, v3);
      v9 += v13;
      --v7;
    }
    while (v7);
  }
  sub_253C5993C();
}

uint64_t sub_253CFA318(uint64_t a1)
{
  uint64_t v9 = sub_253DF5690();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_253D03740(&v8, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    sub_253CD90C8();
  }
  return v1;
}

void *sub_253CFA3C4(uint64_t a1)
{
  uint64_t v18 = sub_253DF5690();
  uint64_t result = sub_253DB2EC8(v19, a1);
  uint64_t v3 = v19[0];
  uint64_t v4 = v19[1];
  int64_t v5 = v19[3];
  unint64_t v6 = v20;
  int64_t v7 = (unint64_t)(v19[2] + 64) >> 6;
  if (!v20) {
    goto LABEL_3;
  }
LABEL_2:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v5 << 6);
  while (1)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_253D03740(&v17, v15, v16);
    uint64_t result = (void *)swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_2;
    }
LABEL_3:
    int64_t v10 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      break;
    }
    if (v10 >= v7) {
      goto LABEL_21;
    }
    unint64_t v11 = *(void *)(v4 + 8 * v10);
    int64_t v12 = v5 + 1;
    if (!v11)
    {
      int64_t v12 = v5 + 2;
      if (v5 + 2 >= v7) {
        goto LABEL_21;
      }
      unint64_t v11 = *(void *)(v4 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v5 + 3;
        if (v5 + 3 >= v7) {
          goto LABEL_21;
        }
        unint64_t v11 = *(void *)(v4 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v5 + 4;
          if (v5 + 4 >= v7) {
            goto LABEL_21;
          }
          unint64_t v11 = *(void *)(v4 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v5 + 5;
            if (v5 + 5 >= v7) {
              goto LABEL_21;
            }
            unint64_t v11 = *(void *)(v4 + 8 * v12);
            if (!v11)
            {
              int64_t v13 = v5 + 6;
              while (v13 < v7)
              {
                unint64_t v11 = *(void *)(v4 + 8 * v13++);
                if (v11)
                {
                  int64_t v12 = v13 - 1;
                  goto LABEL_18;
                }
              }
LABEL_21:
              swift_release();
              return (void *)v18;
            }
          }
        }
      }
    }
LABEL_18:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    int64_t v5 = v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_253CFA544(uint64_t a1)
{
  uint64_t v8 = sub_253DF5690();
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void *)(a1 + 8 * i + 32);
      sub_253D038F0(&v7, v5);
    }
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    sub_253CD90C8();
  }
  return v1;
}

void sub_253CFA5D4()
{
  sub_253C1CED0();
  uint64_t v4 = v3;
  sub_253DEFFE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253C101F4();
  MEMORY[0x270FA5388](v6);
  sub_253D0C95C();
  sub_253CFBD88(&qword_26B255340, MEMORY[0x263F4BF98]);
  sub_253DF5690();
  uint64_t v7 = *(void *)(v4 + 16);
  if (v7)
  {
    sub_253D0C778();
    do
    {
      uint64_t v8 = sub_253D0C874();
      v1(v8);
      sub_253D039EC();
      uint64_t v9 = sub_253D0C88C();
      v10(v9);
      v0 += v2;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253CD90C8();
  }
  sub_253C1CEE8();
}

void sub_253CFA6F8()
{
  sub_253C1CED0();
  uint64_t v6 = v5;
  sub_253DF5010();
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253C101F4();
  MEMORY[0x270FA5388](v8);
  sub_253D0C95C();
  sub_253CFBD88(&qword_269D7E3D8, MEMORY[0x263F80C28]);
  sub_253DF5690();
  uint64_t v9 = *(void *)(v6 + 16);
  if (v9)
  {
    sub_253D0C778();
    do
    {
      uint64_t v10 = sub_253D0C874();
      v3(v10);
      sub_253D03E9C(v1, v0);
      uint64_t v11 = sub_253D0C88C();
      v12(v11);
      v2 += v4;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_253CD90C8();
  }
  sub_253C1CEE8();
}

void sub_253CFA81C()
{
  sub_253C1CED0();
  uint64_t v3 = sub_253DF2BE0();
  sub_253C0F830();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253D0C824();
  sub_253C0F830();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_253D0C84C();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v11);
  sub_253C16A90();
  sub_253CFB584(v0, v2, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253BEFD2C();
    v12();
    sub_253DF2BD0();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  }
  else
  {
    sub_253BEFD2C();
    v13();
    sub_253DF3C50();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  }
  sub_253C1CEE8();
}

void sub_253CFA9B8()
{
  sub_253C1CED0();
  sub_253D0C9B8();
  uint64_t v3 = sub_253DF2BE0();
  sub_253C0F830();
  uint64_t v5 = v4;
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_253D0C824();
  sub_253C0F830();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_253C598FC();
  type metadata accessor for FeedbackLearning.ActionValue(v11);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  sub_253C566F8();
  sub_253CFB584(v0, v2, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253BEFD2C();
    v13();
    sub_253DF2B50();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
  }
  else
  {
    sub_253BEFD2C();
    v14();
    sub_253DF3BB0();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
  }
  sub_253C1CEE8();
}

uint64_t FeedbackLearning.FlowExpression.statementId.getter()
{
  return sub_253CFCCE4();
}

void sub_253CFAB60()
{
  sub_253C1CED0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_253DF24A0();
  sub_253C0F830();
  uint64_t v50 = v6;
  uint64_t v51 = v5;
  MEMORY[0x270FA5388](v5);
  sub_253BDFA94();
  uint64_t v52 = v7;
  sub_253C36350();
  uint64_t v8 = sub_253DEFE90();
  uint64_t v9 = sub_253BDF9FC(v8);
  MEMORY[0x270FA5388](v9);
  sub_253C3330C();
  uint64_t v10 = sub_253DF14C0();
  uint64_t v11 = sub_253BDF9FC(v10);
  MEMORY[0x270FA5388](v11);
  int64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_253BDEDD8(&qword_26B255618);
  uint64_t v15 = sub_253BDF9FC(v14);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v20 = v19;
  MEMORY[0x270FA5388](v21);
  sub_253C34050();
  uint64_t v48 = v22;
  sub_253C33FF0();
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v47 - v25;
  uint64_t v49 = (uint8_t *)v2;
  sub_253CFD2A8(v2, (uint64_t)v17);
  type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
  uint64_t v27 = sub_253C8F5BC();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v27, 1, v28) == 1)
  {
    sub_253BEFAC0((uint64_t)v17, &qword_26B255618);
    uint64_t v29 = type metadata accessor for FeedbackLearning.FlowTask(0);
    uint64_t v30 = v4;
LABEL_11:
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v30, 1, 1, v29);
    goto LABEL_12;
  }
  uint64_t v47 = v4;
  FeedbackLearning.FlowExpressionValue.originTaskStatementId.getter();
  sub_253D08D9C((uint64_t)v17, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue);
  sub_253BEFD2C();
  v31();
  if (!sub_253CFDA90((uint64_t)v26))
  {
    sub_253C634D8();
    v35();
    uint64_t v29 = type metadata accessor for FeedbackLearning.FlowTask(0);
    uint64_t v30 = v47;
    goto LABEL_11;
  }
  sub_253DF3E60();
  MEMORY[0x25A26B7F0](v0);
  sub_253CFDB54();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  sub_253D08D9C((uint64_t)v13, MEMORY[0x263F4CE38]);
  if (*(void *)(v33 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    sub_253DF1790();
    (*(void (**)(uint64_t, uint8_t *, uint64_t))(v20 + 16))(v48, v49, v18);
    uint64_t v36 = sub_253DF2490();
    os_log_type_t v37 = sub_253DF56E0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v54 = v39;
      *(_DWORD *)uint64_t v38 = 136315138;
      uint64_t v49 = v38 + 4;
      sub_253CFBD88((unint64_t *)&qword_269D7BC28, MEMORY[0x263F4BF98]);
      uint64_t v40 = sub_253DF5C40();
      uint64_t v53 = sub_253D8E5FC(v40, v41, &v54);
      sub_253DF5820();
      swift_bridgeObjectRelease();
      uint64_t v42 = *(void (**)(void))(v20 + 8);
      sub_253C634D8();
      v42();
      _os_log_impl(&dword_253BD8000, v36, v37, "Retrieved multiple tasks for %s, cannot determine the last task", v38, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25A2709B0](v39, -1, -1);
      MEMORY[0x25A2709B0](v38, -1, -1);

      sub_253BEFBCC();
      v43();
      sub_253C634D8();
      v42();
    }
    else
    {

      uint64_t v44 = *(void (**)(void))(v20 + 8);
      sub_253C634D8();
      v44();
      sub_253BEFBCC();
      v45();
      ((void (*)(char *, uint64_t))v44)(v26, v18);
    }
    uint64_t v46 = v47;
    uint64_t v29 = type metadata accessor for FeedbackLearning.FlowTask(0);
    uint64_t v30 = v46;
    goto LABEL_11;
  }
  sub_253D22808(v33);
  swift_bridgeObjectRelease();
  sub_253C634D8();
  v34();
LABEL_12:
  sub_253C1CEE8();
}

uint64_t FeedbackLearning.FlowExpressionValue.isFinal.getter()
{
  uint64_t v2 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
  uint64_t v3 = sub_253BDF9FC(v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v4 = sub_253C8F098();
  uint64_t v5 = type metadata accessor for FeedbackLearning.FlowExpressionValue(v4);
  sub_253CFB584(v1 + *(int *)(v5 + 20), v0, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
  uint64_t v6 = sub_253BDEDD8(&qword_269D7CC20);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 2, v6);
  if (result)
  {
    if (result != 1) {
      return 0;
    }
  }
  else
  {
    sub_253DEFFE0();
    sub_253BDF7F0();
    sub_253BEFBCC();
    v8();
    return 1;
  }
  return result;
}

uint64_t type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2555F0);
}

uint64_t type metadata accessor for FeedbackLearning.FlowExpressionValue(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255608);
}

void FeedbackLearning.FlowTask.originProgramStatementIds.getter()
{
}

uint64_t type metadata accessor for FeedbackLearning.FlowTask(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255620);
}

uint64_t static FeedbackLearning.FlowActionEvent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_253CFCF08(a1, a2, MEMORY[0x263F074F0], type metadata accessor for FeedbackLearning.FlowActionEvent, (uint64_t (*)(uint64_t))static FeedbackLearning.ActionValue.== infix(_:_:));
}

uint64_t type metadata accessor for FeedbackLearning.FlowActionEvent(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2555E0);
}

void static FeedbackLearning.ActionValue.== infix(_:_:)()
{
  sub_253C1CED0();
  uint64_t v26 = v3;
  uint64_t v27 = v4;
  sub_253DF2BE0();
  sub_253C0F830();
  uint64_t v24 = v6;
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v5);
  sub_253C8F07C();
  uint64_t v7 = sub_253DF3C70();
  sub_253C0F830();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  sub_253D0C84C();
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v11);
  sub_253CA0118();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = sub_253BDEDD8(&qword_269D7D660);
  uint64_t v16 = sub_253BDF9FC(v15);
  MEMORY[0x270FA5388](v16);
  sub_253D0C808();
  uint64_t v18 = v0 + v17;
  sub_253CFB584(v26, v0, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  sub_253CFB584(v27, v18, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253CFB584(v0, v2, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = v24;
      sub_253BEFD2C();
      v20();
      sub_253DF2BC0();
      uint64_t v21 = *(void (**)(void))(v19 + 8);
      sub_253BEFD20();
      v21();
      sub_253BEFD20();
      v21();
LABEL_9:
      sub_253D08D9C(v0, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
      goto LABEL_10;
    }
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v2, v25);
  }
  else
  {
    sub_253CFB584(v0, (uint64_t)v14, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_253BEFD2C();
      v22();
      sub_253DF3C30();
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v23(v1, v7);
      v23((uint64_t)v14, v7);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v7);
  }
  sub_253BEFAC0(v0, &qword_269D7D660);
LABEL_10:
  sub_253C1CEE8();
}

uint64_t type metadata accessor for FeedbackLearning.ActionValue(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B255648);
}

uint64_t sub_253CFB584(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  uint64_t v4 = sub_253C2F578();
  v5(v4);
  return a2;
}

uint64_t sub_253CFB5D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F69746361 && a2 == 0xE600000000000000;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6341746E65696C63 && a2 == 0xEC0000006E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CFB6D8(char a1)
{
  if (a1) {
    return 0x6341746E65696C63;
  }
  else {
    return 0x6E6F69746361;
  }
}

uint64_t sub_253CFB714(uint64_t a1)
{
  unint64_t v2 = sub_253CFBD3C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CFB750(uint64_t a1)
{
  unint64_t v2 = sub_253CFBD3C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CFB78C(uint64_t a1)
{
  unint64_t v2 = sub_253CFBCF0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CFB7C8(uint64_t a1)
{
  unint64_t v2 = sub_253CFBCF0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_253CFB804()
{
  return sub_253CFB6D8(*v0);
}

uint64_t sub_253CFB80C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CFB5D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CFB834(uint64_t a1)
{
  unint64_t v2 = sub_253CFBCA4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CFB870(uint64_t a1)
{
  unint64_t v2 = sub_253CFBCA4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void FeedbackLearning.ActionValue.encode(to:)()
{
  sub_253C59954();
  uint64_t v25 = v0;
  uint64_t v4 = v3;
  sub_253BDEDD8(&qword_269D7E2F0);
  sub_253C0F830();
  MEMORY[0x270FA5388](v5);
  sub_253BDFA94();
  sub_253C36350();
  sub_253DF2BE0();
  sub_253C0F830();
  uint64_t v23 = v7;
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v6);
  sub_253BDFA94();
  uint64_t v22 = v8;
  sub_253BDEDD8(&qword_269D7E2F8);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  sub_253C598FC();
  sub_253DF3C70();
  sub_253C0F830();
  uint64_t v20 = v11;
  uint64_t v21 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = sub_253C3330C();
  type metadata accessor for FeedbackLearning.ActionValue(v12);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v13);
  sub_253C566F8();
  sub_253BDEDD8(&qword_269D7E300);
  sub_253C0F830();
  MEMORY[0x270FA5388](v14);
  sub_253BDF5F8(v4, v4[3]);
  sub_253CFBCA4();
  sub_253DF5E40();
  sub_253CFB584(v25, v1, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_253BEFD2C();
    v15();
    sub_253CFBCF0();
    sub_253DF5BC0();
    sub_253CFBD88(&qword_269D7E318, MEMORY[0x263F4D588]);
    sub_253DF5C20();
    sub_253BEFBCC();
    v16();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
  }
  else
  {
    sub_253BEFD2C();
    v17();
    sub_253CFBD3C();
    sub_253DF5BC0();
    sub_253CFBD88(&qword_269D7BED8, MEMORY[0x263F4DDB0]);
    sub_253DF5C20();
    sub_253BEFBCC();
    v18();
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, v21);
  }
  sub_253BEFBCC();
  v19();
  sub_253C5993C();
}

unint64_t sub_253CFBCA4()
{
  unint64_t result = qword_269D7E308;
  if (!qword_269D7E308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E308);
  }
  return result;
}

unint64_t sub_253CFBCF0()
{
  unint64_t result = qword_269D7E310;
  if (!qword_269D7E310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E310);
  }
  return result;
}

unint64_t sub_253CFBD3C()
{
  unint64_t result = qword_269D7E320;
  if (!qword_269D7E320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E320);
  }
  return result;
}

uint64_t sub_253CFBD88(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void FeedbackLearning.ActionValue.init(from:)()
{
  sub_253C59954();
  uint64_t v57 = v0;
  uint64_t v3 = v2;
  uint64_t v49 = v4;
  sub_253BDEDD8(&qword_269D7E328);
  sub_253C0F830();
  uint64_t v52 = v5;
  uint64_t v53 = v6;
  MEMORY[0x270FA5388](v5);
  sub_253CD8AB8(v7, (uint64_t)v45);
  sub_253BDEDD8(&qword_269D7E330);
  sub_253C0F830();
  uint64_t v50 = v9;
  uint64_t v51 = v8;
  MEMORY[0x270FA5388](v8);
  sub_253BDFA94();
  uint64_t v54 = v10;
  sub_253BDEDD8(&qword_269D7E338);
  sub_253C0F830();
  uint64_t v55 = v12;
  uint64_t v56 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = type metadata accessor for FeedbackLearning.ActionValue(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v14);
  sub_253CA0118();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v45 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v45 - v19;
  sub_253BDF5F8(v3, v3[3]);
  sub_253CFBCA4();
  uint64_t v21 = v57;
  sub_253DF5E30();
  if (v21) {
    goto LABEL_8;
  }
  uint64_t v46 = v1;
  uint64_t v47 = v18;
  uint64_t v45 = v20;
  uint64_t v48 = v13;
  uint64_t v57 = v3;
  uint64_t v22 = sub_253DF5BB0();
  uint64_t v23 = *(void *)(v22 + 16);
  if (!v23
    || (char v24 = *(unsigned char *)(v22 + 32),
        sub_253CC30E8(1, v23, v22, v22 + 32, 0, (2 * v23) | 1),
        uint64_t v26 = v25,
        unint64_t v28 = v27,
        swift_bridgeObjectRelease(),
        v26 != v28 >> 1))
  {
    uint64_t v30 = v48;
    uint64_t v31 = sub_253DF5960();
    swift_allocError();
    uint64_t v33 = v32;
    sub_253BDEDD8(&qword_269D7CA68);
    *uint64_t v33 = v30;
    sub_253DF5B40();
    sub_253DF5950();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, *MEMORY[0x263F8DCB0], v31);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v34 = sub_253D0C700();
    v35(v34);
    uint64_t v3 = v57;
LABEL_8:
    uint64_t v36 = (uint64_t)v3;
    goto LABEL_9;
  }
  if (v24)
  {
    sub_253CFBCF0();
    sub_253CD8EEC();
    sub_253DF2BE0();
    sub_253CFBD88(&qword_269D7E340, MEMORY[0x263F4D588]);
    uint64_t v29 = v46;
    sub_253DF5BA0();
    sub_253CE9F48();
    sub_253BEFBCC();
    v37();
    swift_unknownObjectRelease();
    uint64_t v38 = sub_253D0C700();
    v39(v38);
    swift_storeEnumTagMultiPayload();
    uint64_t v40 = v29;
  }
  else
  {
    sub_253CFBD3C();
    sub_253CD8EEC();
    sub_253DF3C70();
    sub_253CFBD88(&qword_269D7BED0, MEMORY[0x263F4DDB0]);
    uint64_t v40 = (uint64_t)v47;
    sub_253DF5BA0();
    sub_253CD9854();
    sub_253BEFBCC();
    v41();
    swift_unknownObjectRelease();
    uint64_t v42 = sub_253D0C700();
    v43(v42);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v44 = (uint64_t)v45;
  sub_253D0C474(v40, (uint64_t)v45, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  sub_253D0C474(v44, v49, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
  uint64_t v36 = (uint64_t)v57;
LABEL_9:
  _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0(v36);
  sub_253C5993C();
}

void sub_253CFC320()
{
}

void sub_253CFC338()
{
}

uint64_t FeedbackLearning.FlowActionEvent.eventId.getter()
{
  return sub_253CFCCE4();
}

uint64_t FeedbackLearning.FlowActionEvent.action.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_253CFCD74(type metadata accessor for FeedbackLearning.FlowActionEvent, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue, a1);
}

uint64_t sub_253CFC398(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449746E657665 && a2 == 0xE700000000000000;
  if (v2 || (sub_253DF5C90() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F69746361 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = sub_253DF5C90();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_253CFC480(char a1)
{
  if (a1) {
    return 0x6E6F69746361;
  }
  else {
    return 0x6449746E657665;
  }
}

uint64_t sub_253CFC4B4()
{
  return sub_253CFC480(*v0);
}

uint64_t sub_253CFC4BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_253CFC398(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_253CFC4E4(uint64_t a1)
{
  unint64_t v2 = sub_253D08D50();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_253CFC520(uint64_t a1)
{
  unint64_t v2 = sub_253D08D50();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t FeedbackLearning.FlowActionEvent.encode(to:)(void *a1)
{
  sub_253BDEDD8(&qword_269D7E348);
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253C16AA8();
  sub_253BDF5F8(a1, a1[3]);
  sub_253D08D50();
  sub_253DF5E40();
  sub_253DEFE90();
  sub_253CFBD88(&qword_269D7EDD0, MEMORY[0x263F07508]);
  sub_253DF5C20();
  if (!v1)
  {
    type metadata accessor for FeedbackLearning.FlowActionEvent(0);
    type metadata accessor for FeedbackLearning.ActionValue(0);
    sub_253CFBD88(&qword_269D7E358, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.ActionValue);
    sub_253DF5C20();
  }
  uint64_t v4 = sub_253D0C79C();
  return v5(v4);
}

void FeedbackLearning.FlowActionEvent.init(from:)()
{
  sub_253C59954();
  uint64_t v4 = v3;
  uint64_t v16 = v5;
  type metadata accessor for FeedbackLearning.ActionValue(0);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v6);
  sub_253C598FC();
  sub_253DEFE90();
  sub_253C0F830();
  MEMORY[0x270FA5388](v7);
  sub_253CD8AB8(v8, v15);
  sub_253BDEDD8(&qword_269D7E360);
  sub_253C0F830();
  MEMORY[0x270FA5388](v9);
  uint64_t v10 = sub_253C8F07C();
  uint64_t v11 = type metadata accessor for FeedbackLearning.FlowActionEvent(v10);
  sub_253BDF7F0();
  MEMORY[0x270FA5388](v12);
  sub_253C566F8();
  sub_253BDF5F8(v4, v4[3]);
  sub_253D08D50();
  sub_253DF5E30();
  if (v0)
  {
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
  }
  else
  {
    sub_253CFBD88(&qword_269D7D708, MEMORY[0x263F07508]);
    sub_253DF5BA0();
    sub_253BEFD2C();
    v13();
    sub_253CFBD88(&qword_269D7E368, (void (*)(uint64_t))type metadata accessor for FeedbackLearning.ActionValue);
    sub_253DF5BA0();
    sub_253BEFBCC();
    v14();
    sub_253D0C474(v1, v2 + *(int *)(v11 + 20), (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
    sub_253CFB584(v2, v16, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
    _s23IntelligenceFlowRuntime28FeedbackLearningBiomeDonatorVwxx_0((uint64_t)v4);
    sub_253D08D9C(v2, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
  }
  sub_253C5993C();
}

void sub_253CFCA5C()
{
}

uint64_t sub_253CFCA74(void *a1)
{
  return FeedbackLearning.FlowActionEvent.encode(to:)(a1);
}

void static FeedbackLearning.FlowExpressionValue.FlowExpressionType.== infix(_:_:)()
{
  sub_253C1CED0();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v9 = v8;
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = sub_253C567FC();
  uint64_t v12 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(v11);
  uint64_t v13 = sub_253BDF9FC(v12);
  MEMORY[0x270FA5388](v13);
  sub_253C16AA8();
  uint64_t v14 = sub_253BDEDD8(&qword_269D7D650);
  uint64_t v15 = sub_253BDF9FC(v14);
  MEMORY[0x270FA5388](v15);
  sub_253D0C808();
  uint64_t v17 = v0 + v16;
  sub_253CFB584(v6, v0, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
  sub_253CFB584(v4, v17, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
  uint64_t v18 = sub_253BDEDD8(&qword_269D7CC20);
  int v19 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 2, v18);
  if (!v19)
  {
    sub_253CFB584(v0, v2, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
    if (!sub_253D0C8D0())
    {
      sub_253BEFD2C();
      v22();
      sub_253DEFFB0();
      uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v23(v1, v7);
      uint64_t v24 = sub_253D0C79C();
      ((void (*)(uint64_t))v23)(v24);
      sub_253D08D9C(v0, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
      goto LABEL_11;
    }
    uint64_t v20 = sub_253D0C79C();
    v21(v20);
    goto LABEL_9;
  }
  if (v19 == 1)
  {
    if (sub_253D0C8D0() != 1) {
      goto LABEL_9;
    }
  }
  else if (sub_253D0C8D0() != 2)
  {
LABEL_9:
    sub_253BEFAC0(v0, &qword_269D7D650);
    goto LABEL_11;
  }
  sub_253D08D9C(v0, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
LABEL_11:
  sub_253C1CEE8();
}

uint64_t FeedbackLearning.FlowExpressionValue.statementId.getter()
{
  return sub_253CFCCE4();
}

uint64_t sub_253CFCCE4()
{
  uint64_t v2 = sub_253D0C9B8();
  v3(v2);
  sub_253BDF7F0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(v0, v1, v4);
}

uint64_t FeedbackLearning.FlowExpressionValue.expressionType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_253CFCD74(type metadata accessor for FeedbackLearning.FlowExpressionValue, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType, a1);
}

uint64_t sub_253CFCD74@<X0>(uint64_t (*a1)(void)@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1(0);
  return sub_253CFB584(v3 + *(int *)(v6 + 20), a3, a2);
}

uint64_t FeedbackLearning.FlowExpressionValue.originTaskStatementId.getter()
{
  uint64_t v3 = sub_253D0C9B8();
  uint64_t v4 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(v3);
  uint64_t v5 = sub_253BDF9FC(v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v6 = sub_253C567FC();
  uint64_t v7 = type metadata accessor for FeedbackLearning.FlowExpressionValue(v6);
  sub_253CFB584(v1 + *(int *)(v7 + 20), v2, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
  uint64_t v8 = sub_253BDEDD8(&qword_269D7CC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v2, 2, v8))
  {
    sub_253DEFFE0();
    sub_253BDF7F0();
    uint64_t v9 = sub_253C2F578();
    return v10(v9);
  }
  else
  {
    sub_253DEFFE0();
    sub_253BDF7F0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(v0, v2);
  }
}

uint64_t static FeedbackLearning.FlowExpressionValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_253CFCF08(a1, a2, MEMORY[0x263F4BF90], type metadata accessor for FeedbackLearning.FlowExpressionValue, (uint64_t (*)(uint64_t))static FeedbackLearning.FlowExpressionValue.FlowExpressionType.== infix(_:_:));
}

uint64_t sub_253CFCF08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(uint64_t))
{
  sub_253CD9CB4();
  if ((v6() & 1) == 0) {
    return 0;
  }
  uint64_t v7 = a4(0);
  uint64_t v8 = sub_253D0C904(v7);

  return a5(v8);
}

uint64_t FeedbackLearning.FlowExpression.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_253CFB584(v1, a1, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue);
}

uint64_t FeedbackLearning.FlowExpression.events.getter()
{
  type metadata accessor for FeedbackLearning.FlowExpression(0);

  return swift_bridgeObjectRetain();
}

uint64_t FeedbackLearning.FlowExpression.actionEvents.getter()
{
  return sub_253CFD160((void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
}

void static FeedbackLearning.FlowExpression.== infix(_:_:)()
{
  sub_253CD9CB4();
  if (sub_253DEFFB0())
  {
    uint64_t v0 = type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
    sub_253D0C904(v0);
    static FeedbackLearning.FlowExpressionValue.FlowExpressionType.== infix(_:_:)();
    if (v1)
    {
      type metadata accessor for FeedbackLearning.FlowExpression(0);
      sub_253CBC09C();
      if (v2)
      {
        sub_253CBC2AC();
      }
    }
  }
}

uint64_t FeedbackLearning.FlowTask.sessionId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_253CFB584(v1, a1, MEMORY[0x263F4CE38]);
}

uint64_t FeedbackLearning.FlowTask.statementId.getter()
{
  uint64_t v2 = sub_253D0C9B8();
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FeedbackLearning.FlowTask(v2) + 20);
  sub_253DEFFE0();
  sub_253BDF7F0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);

  return v6(v0, v3, v4);
}

uint64_t FeedbackLearning.FlowTask.expressions.getter()
{
  return sub_253CFD160((void (*)(void))type metadata accessor for FeedbackLearning.FlowTask);
}

uint64_t sub_253CFD160(void (*a1)(void))
{
  a1(0);

  return swift_bridgeObjectRetain();
}

uint64_t FeedbackLearning.FlowTask.taskEvents.getter()
{
  type metadata accessor for FeedbackLearning.FlowTask(0);

  return swift_bridgeObjectRetain();
}

uint64_t FeedbackLearning.FlowTask.actionEvents.getter()
{
  type metadata accessor for FeedbackLearning.FlowTask(0);

  return swift_bridgeObjectRetain();
}

void static FeedbackLearning.FlowTask.== infix(_:_:)()
{
  sub_253CD9CB4();
  if (sub_253DEFE60())
  {
    uint64_t v0 = type metadata accessor for FeedbackLearning.FlowTask(0);
    sub_253D0C904(v0);
    if (sub_253DEFFB0())
    {
      sub_253CBBAB4();
      if (v1)
      {
        sub_253CBC09C();
        if (v2)
        {
          sub_253CBC2AC();
        }
      }
    }
  }
}

uint64_t sub_253CFD2A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v53 = a2;
  uint64_t v2 = sub_253DF2AB0();
  uint64_t v52 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_253DEFFE0();
  uint64_t v75 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253BDEDD8(&qword_269D7BC88);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v60 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253DF32F0();
  uint64_t v55 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v51 = (char *)&v48 - v13;
  uint64_t v63 = sub_253DF4040();
  uint64_t v14 = *(void *)(v63 - 8);
  MEMORY[0x270FA5388](v63);
  BOOL v73 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_253DF41F0();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  int v74 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_253DF4230();
  uint64_t v19 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v61 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_253DF3E40();
  uint64_t v22 = *(void *)(result + 16);
  if (v22)
  {
    uint64_t v71 = v16;
    uint64_t v49 = v4;
    uint64_t v50 = v2;
    unint64_t v70 = result + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v68 = (uint64_t (**)(char *, uint64_t))(v17 + 88);
    uint64_t v69 = v19 + 16;
    int v67 = *MEMORY[0x263F4DE90];
    uint64_t v66 = (uint64_t (**)(char *, uint64_t))(v19 + 8);
    uint64_t v58 = (void (**)(char *, uint64_t))(v17 + 96);
    os_log_type_t v59 = (void (**)(char *, uint64_t))(v17 + 8);
    uint64_t v57 = (void (**)(char *, char *, uint64_t))(v14 + 32);
    uint64_t v76 = v55 + 16;
    uint64_t v23 = (void (**)(char *, uint64_t))(v75 + 8);
    uint64_t v24 = (void (**)(char *, uint64_t))(v55 + 8);
    uint64_t v54 = (void (**)(char *, char *, uint64_t))(v55 + 32);
    uint64_t v56 = (void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v25 = v61;
    uint64_t v26 = v62;
    uint64_t v65 = v19;
    uint64_t v72 = result;
    while (v22 <= *(void *)(result + 16))
    {
      uint64_t v27 = *(void *)(v19 + 72);
      uint64_t v75 = v22 - 1;
      (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v25, v70 + v27 * (v22 - 1), v26);
      unint64_t v28 = v74;
      uint64_t v29 = v25;
      uint64_t v30 = v26;
      sub_253DF4200();
      uint64_t v31 = v71;
      int v32 = (*v68)(v28, v71);
      if (v32 == v67)
      {
        (*v58)(v28, v31);
        uint64_t v33 = v63;
        (*v57)(v73, v28, v63);
        uint64_t v34 = sub_253DF4000();
        uint64_t v35 = *(void *)(v34 + 16);
        uint64_t v64 = v34;
        if (v35)
        {
          unint64_t v36 = v34 + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
          uint64_t v37 = *(void *)(v55 + 72);
          uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v55 + 16);
          while (1)
          {
            v38(v12, v36, v9);
            sub_253DF32E0();
            char v39 = sub_253DEFFB0();
            (*v23)(v6, v77);
            if (v39) {
              break;
            }
            (*v24)(v12, v9);
            v36 += v37;
            if (!--v35)
            {
              uint64_t v40 = 1;
              uint64_t v41 = (uint64_t)v60;
              goto LABEL_13;
            }
          }
          uint64_t v41 = (uint64_t)v60;
          (*v54)(v60, v12, v9);
          uint64_t v40 = 0;
LABEL_13:
          uint64_t v26 = v62;
          uint64_t v33 = v63;
          uint64_t v25 = v61;
        }
        else
        {
          uint64_t v40 = 1;
          uint64_t v25 = v61;
          uint64_t v26 = v62;
          uint64_t v41 = (uint64_t)v60;
        }
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v41, v40, 1, v9);
        swift_bridgeObjectRelease();
        if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v41, 1, v9) != 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v44 = v41;
          uint64_t v45 = v51;
          (*v54)(v51, (char *)v44, v9);
          uint64_t v46 = v33;
          uint64_t v47 = (uint64_t)v49;
          sub_253DF32D0();
          sub_253D02DE8(v78, v47, v53);
          (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v47, v50);
          (*v24)(v45, v9);
          (*v56)(v73, v46);
          return (*v66)(v25, v26);
        }
        (*v56)(v73, v33);
        (*v66)(v25, v26);
        sub_253BEFAC0(v41, &qword_269D7BC88);
      }
      else
      {
        (*v66)(v29, v30);
        (*v59)(v28, v31);
        uint64_t v26 = v30;
        uint64_t v25 = v29;
      }
      uint64_t v19 = v65;
      uint64_t result = v72;
      uint64_t v22 = v75;
      if (!v75) {
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v42 = v53;
    uint64_t v43 = type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v42, 1, 1, v43);
  }
  return result;
}

uint64_t sub_253CFDA90(uint64_t a1)
{
  uint64_t v2 = sub_253DF3E40();
  v16[2] = a1;
  uint64_t v3 = sub_253D9E3F8((uint64_t (*)(uint64_t))sub_253D0C59C, (uint64_t)v16, v2);
  char v5 = v4;
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if ((v5 & 1) == 0)
  {
    uint64_t v7 = sub_253DF3E40();
    sub_253D23A10(v3, v7);
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    return sub_253DC9EE0(v9, v11, v13, v15);
  }
  return result;
}

void sub_253CFDB54()
{
  sub_253C1CED0();
  uint64_t v3 = v2;
  uint64_t v99 = v4;
  uint64_t v124 = *MEMORY[0x263EF8340];
  uint64_t v5 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
  uint64_t v6 = sub_253BDF9FC(v5);
  MEMORY[0x270FA5388](v6);
  sub_253C34050();
  uint64_t v114 = v7;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v8);
  sub_253C36430();
  uint64_t v113 = v9;
  sub_253C36350();
  uint64_t v10 = sub_253DEFFE0();
  sub_253C0F830();
  uint64_t v102 = v11;
  MEMORY[0x270FA5388](v12);
  sub_253C34050();
  int v109 = v13;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v14);
  sub_253C33FFC();
  uint64_t v108 = v15;
  sub_253C33FF0();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v97 - v18;
  MEMORY[0x270FA5388](v17);
  sub_253C36430();
  uint64_t v116 = v20;
  uint64_t v21 = sub_253C36350();
  uint64_t v22 = type metadata accessor for FeedbackLearning.FlowExpressionValue(v21);
  sub_253C0F830();
  uint64_t v118 = v23;
  MEMORY[0x270FA5388](v24);
  sub_253C566F8();
  uint64_t v25 = sub_253BDEDD8(&qword_26B2555D8);
  uint64_t v26 = sub_253BDF9FC(v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_253C8F098();
  uint64_t v28 = type metadata accessor for FeedbackLearning.FlowExpression(v27);
  sub_253C0F830();
  uint64_t v30 = v29;
  MEMORY[0x270FA5388](v31);
  sub_253C34050();
  uint64_t v119 = v32;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v33);
  sub_253C33FFC();
  uint64_t v120 = v34;
  sub_253C33FF0();
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v97 - v37;
  MEMORY[0x270FA5388](v36);
  sub_253C36430();
  uint64_t v100 = v39;
  uint64_t v40 = sub_253CFE564(v3);
  uint64_t v122 = sub_253CFF4A4(v3);
  uint64_t v121 = sub_253CFFBB0(v3);
  uint64_t v41 = v40;
  uint64_t v42 = *(void *)(v40 + 16);
  uint64_t v117 = v10;
  uint64_t v112 = v19;
  if (v42)
  {
    uint64_t v111 = v28;
    uint64_t v115 = v0;
    uint64_t v123 = (__n128 *)MEMORY[0x263F8EE78];
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))v41;
    sub_253DC7360(0, v42, 0);
    uint64_t v44 = *((unsigned __int8 *)v118 + 80);
    uint64_t v110 = v43;
    uint64_t v45 = (uint64_t)v43 + ((v44 + 32) & ~v44);
    uint64_t v46 = v118[9];
    uint64_t v47 = (uint64_t)v123;
    do
    {
      sub_253CFB584(v45, v1, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue);
      sub_253BDCE08(v122);
      uint64_t v49 = v48;
      uint64_t v50 = sub_253C3105C(v121);
      sub_253D00004(v1, v49, v50, (uint64_t)v38);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_253D08D9C(v1, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253DC7360(0, *(void *)(v47 + 16) + 1, 1);
        uint64_t v47 = (uint64_t)v123;
      }
      unint64_t v52 = *(void *)(v47 + 16);
      unint64_t v51 = *(void *)(v47 + 24);
      if (v52 >= v51 >> 1)
      {
        sub_253DC7360(v51 > 1, v52 + 1, 1);
        uint64_t v47 = (uint64_t)v123;
      }
      *(void *)(v47 + 16) = v52 + 1;
      sub_253D0C474((uint64_t)v38, v47+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v52, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
      v45 += (uint64_t)v46;
      --v42;
    }
    while (v42);
    swift_bridgeObjectRelease();
    uint64_t v10 = v117;
    uint64_t v28 = v111;
    uint64_t v19 = v112;
    uint64_t v0 = v115;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = MEMORY[0x263F8EE78];
  }
  sub_253D227DC(v47);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v0, 1, v28) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_253BEFAC0(v0, &qword_26B2555D8);
    goto LABEL_34;
  }
  uint64_t v53 = v100;
  sub_253D0C474(v0, v100, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  uint64_t v98 = sub_253D00DC4(1, v47);
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  unint64_t v59 = v58;
  sub_253BDEDD8(&qword_269D7E408);
  uint64_t inited = swift_initStackObject();
  long long v107 = xmmword_253DF6EC0;
  *(_OWORD *)(inited + 16) = xmmword_253DF6EC0;
  uint64_t v61 = sub_253BDEDD8(&qword_269D7E410);
  uint64_t v62 = *(unsigned __int8 *)(v30 + 80);
  uint64_t v63 = (v62 + 32) & ~v62;
  uint64_t v106 = *(void *)(v30 + 72);
  uint64_t v105 = v61;
  uint64_t v104 = v63 + v106;
  uint64_t v103 = v62 | 7;
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = v107;
  uint64_t v115 = v63;
  sub_253CFB584(v53, v64 + v63, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  *(void *)(inited + 32) = v64;
  unint64_t v65 = (v59 >> 1) - v57;
  if (v59 >> 1 == v57) {
    goto LABEL_33;
  }
  if ((uint64_t)(v59 >> 1) <= v57) {
LABEL_36:
  }
    __break(1u);
  uint64_t v110 = (void (**)(char *, uint64_t, uint64_t))(v102 + 2);
  uint64_t v118 = (void (**)(void))(v102 + 4);
  ++v102;
  swift_unknownObjectRetain();
  uint64_t v66 = v106;
  uint64_t v67 = v55 + v57 * v106;
  uint64_t v101 = v22;
  uint64_t v68 = v120;
  do
  {
    sub_253CFB584(v67, v68, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
    uint64_t v69 = *(void *)(inited + 16);
    if (!v69) {
      goto LABEL_31;
    }
    unint64_t v70 = *(__n128 **)(inited + 32 + 8 * v69 - 8);
    uint64_t v71 = v70[1].n128_i64[0];
    if (!v71)
    {
      uint64_t v68 = v120;
      goto LABEL_31;
    }
    uint64_t v72 = (uint64_t)v70 + v115 + (v71 - 1) * v66;
    uint64_t v73 = v119;
    sub_253CFB584(v72, v119, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
    uint64_t v74 = v73 + *(int *)(v22 + 20);
    uint64_t v75 = v113;
    sub_253CFB584(v74, v113, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
    uint64_t v76 = sub_253BDEDD8(&qword_269D7CC20);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v75, 2, v76)) {
      (*v110)(v19, v119, v10);
    }
    else {
      ((void (*)(char *, uint64_t, uint64_t))*v118)(v19, v113, v10);
    }
    uint64_t v77 = *v118;
    sub_253BEFD2C();
    v77();
    uint64_t v78 = v114;
    sub_253CFB584(v120 + *(int *)(v22 + 20), v114, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
    int v79 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v78, 2, v76);
    uint64_t v111 = inited + 32;
    if (v79)
    {
      (*v110)(v109, v120, v117);
    }
    else
    {
      sub_253BEFD2C();
      v77();
    }
    sub_253BEFD2C();
    v77();
    swift_bridgeObjectRetain();
    char v80 = sub_253DEFFB0();
    uint64_t v81 = (void (*)(void))*v102;
    sub_253BEFD20();
    v81();
    sub_253BEFD20();
    v81();
    if ((v80 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v85 = (__n128 *)sub_253D0C7E0();
      sub_253D0C8EC(v85);
      uint64_t v68 = v120;
      sub_253CFB584(v120, v86, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
      goto LABEL_28;
    }
    uint64_t v82 = *(void *)(inited + 16);
    if (!v82)
    {
      __break(1u);
      goto LABEL_36;
    }
    *(void *)(inited + 16) = v82 - 1;
    swift_bridgeObjectRelease();
    unsigned __int8 v83 = (__n128 *)sub_253D0C7E0();
    sub_253D0C8EC(v83);
    uint64_t v68 = v120;
    sub_253CFB584(v120, v84, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
    uint64_t v123 = v70;
    sub_253DBF324();
    uint64_t v85 = v123;
LABEL_28:
    unint64_t v87 = *(void *)(inited + 16);
    uint64_t v10 = v117;
    uint64_t v19 = v112;
    uint64_t v22 = v101;
    if (v87 >= *(void *)(inited + 24) >> 1)
    {
      sub_253DC4784();
      uint64_t inited = v88;
    }
    *(void *)(inited + 16) = v87 + 1;
    *(void *)(inited + 8 * v87 + 32) = v85;
    sub_253D08D9C(v119, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
    uint64_t v66 = v106;
LABEL_31:
    sub_253D08D9C(v68, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
    v67 += v66;
    --v65;
  }
  while (v65);
  swift_unknownObjectRelease();
LABEL_33:
  uint64_t v89 = swift_unknownObjectRelease();
  MEMORY[0x270FA5388](v89);
  uint64_t v91 = v121;
  uint64_t v90 = v122;
  *(&v97 - 4) = v99;
  *(&v97 - 3) = v90;
  *(&v97 - 2) = v91;
  sub_253C57434((uint64_t)sub_253D0C4C8, (uint64_t)(&v97 - 6), inited, v92, v93, v94, v95, v96, v97, v98, v99, v100, v101, (uint64_t)v102, v103, v104, v105, v106, v107,
    *((uint64_t *)&v107 + 1));
  sub_253D08D9C(v100, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpression);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_34:
  sub_253C1CEE8();
}

uint64_t sub_253CFE564(uint64_t a1)
{
  uint64_t v124 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
  MEMORY[0x270FA5388](v124);
  uint64_t v122 = (uint64_t)v89 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_253DF3440();
  uint64_t v136 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v111 = (char *)v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253BDEDD8(&qword_26B255600);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v145 = (uint64_t)v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v138 = (uint64_t)v89 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v133 = (char *)v89 - v9;
  uint64_t v10 = sub_253DF2AB0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v144 = (char *)v89 - v15;
  uint64_t v140 = sub_253DEFFE0();
  uint64_t v16 = *(void *)(v140 - 8);
  MEMORY[0x270FA5388](v140);
  uint64_t v134 = (char *)v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_253BDEDD8(&qword_26B255618);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v132 = (char *)v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
  uint64_t v123 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  uint64_t v131 = (uint64_t)v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v121 = (uint64_t)v89 - v23;
  uint64_t v143 = sub_253DF32F0();
  uint64_t v24 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143);
  uint64_t v142 = (char *)v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_253DF4040();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v106 = (char *)v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_253DF41F0();
  uint64_t v29 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  long long v107 = (char *)v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_253DF4230();
  MEMORY[0x270FA5388](v115);
  uint64_t v114 = (char *)v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = *(void *)(a1 + 16);
  if (!v104) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v139 = v14;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  uint64_t v33 = v31 + 16;
  uint64_t v102 = v34;
  uint64_t v101 = a1 + ((*(unsigned __int8 *)(v33 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 64));
  uint64_t v100 = (uint64_t (**)(char *, uint64_t))(v29 + 88);
  int v99 = *MEMORY[0x263F4DE90];
  uint64_t v94 = (void (**)(char *, uint64_t))(v29 + 8);
  uint64_t v93 = (void (**)(char *, uint64_t))(v29 + 96);
  uint64_t v92 = (void (**)(char *, char *, uint64_t))(v27 + 32);
  uint64_t v129 = (void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v130 = v24 + 16;
  uint64_t v128 = (uint64_t (**)(char *, uint64_t))(v11 + 88);
  int v127 = *MEMORY[0x263F4D4C8];
  int v120 = *MEMORY[0x263F4D518];
  int v119 = *MEMORY[0x263F4D4A8];
  int v116 = *MEMORY[0x263F4D528];
  char v141 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v110 = (void (**)(char *, uint64_t))(v11 + 96);
  int v109 = (uint64_t (**)(char *, char *, uint64_t))(v136 + 32);
  uint64_t v108 = (void (**)(char *, uint64_t))(v136 + 8);
  uint64_t v118 = (void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v126 = (void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v90 = v24;
  uint64_t v125 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v91 = (void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v98 = (void (**)(char *, uint64_t))(v33 - 8);
  uint64_t v103 = v33;
  uint64_t v97 = *(void *)(v33 + 56);
  v89[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v35 = 0;
  uint64_t v117 = MEMORY[0x263F8EE78];
  uint64_t v36 = v124;
  uint64_t v37 = v107;
  uint64_t v137 = v20;
  uint64_t v95 = v26;
  while (1)
  {
    uint64_t v113 = v35;
    v102(v114, v101 + v97 * v35, v115);
    sub_253DF4200();
    uint64_t v38 = v105;
    int v39 = (*v100)(v37, v105);
    if (v39 == v99)
    {
      (*v93)(v37, v38);
      (*v92)(v106, v37, v26);
      uint64_t v40 = sub_253DF4000();
      uint64_t v41 = *(void *)(v40 + 16);
      if (v41)
      {
        unint64_t v42 = (*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80);
        uint64_t v96 = v40;
        unint64_t v43 = v40 + v42;
        uint64_t v44 = *(void *)(v90 + 72);
        uint64_t v135 = *(void (**)(char *, unint64_t, uint64_t))(v90 + 16);
        uint64_t v136 = v44;
        uint64_t v45 = MEMORY[0x263F8EE78];
        while (1)
        {
          v135(v142, v43, v143);
          sub_253DF32E0();
          uint64_t v46 = v10;
          uint64_t v47 = v144;
          sub_253DF32D0();
          uint64_t v48 = v139;
          uint64_t v49 = v47;
          uint64_t v10 = v46;
          (*v129)(v139, v49, v46);
          int v50 = (*v128)(v48, v46);
          if (v50 == v127)
          {
            uint64_t v51 = sub_253BDEDD8(&qword_269D7CC20);
            uint64_t v52 = v138;
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v138, 1, 2, v51);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v52, 0, 1, v36);
            (*v141)(v48, v46);
          }
          else
          {
            BOOL v53 = v50 == v120 || v50 == v119;
            uint64_t v54 = v138;
            if (v53)
            {
              (*v141)(v139, v46);
              uint64_t v55 = sub_253BDEDD8(&qword_269D7CC20);
              uint64_t v56 = v54;
              uint64_t v57 = 2;
            }
            else
            {
              if (v50 != v116)
              {
                _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v138, 1, 1, v36);
                (*v141)(v139, v46);
                goto LABEL_17;
              }
              unint64_t v58 = v139;
              (*v110)(v139, v46);
              unint64_t v59 = v111;
              unint64_t v60 = v58;
              uint64_t v61 = v112;
              uint64_t v62 = (*v109)(v111, v60, v112);
              MEMORY[0x25A26D780](v62);
              uint64_t v63 = v59;
              uint64_t v54 = v138;
              (*v108)(v63, v61);
              uint64_t v55 = sub_253BDEDD8(&qword_269D7CC20);
              uint64_t v56 = v54;
              uint64_t v57 = 0;
            }
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v56, v57, 2, v55);
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v54, 0, 1, v36);
          }
LABEL_17:
          sub_253D0C550();
          uint64_t v64 = v145;
          sub_253D0C550();
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v64, 1, v36) == 1)
          {
            sub_253BEFAC0(v145, &qword_26B255600);
            uint64_t v65 = 1;
            uint64_t v66 = v134;
            uint64_t v67 = (uint64_t)v132;
            uint64_t v68 = v137;
          }
          else
          {
            uint64_t v69 = v122;
            sub_253D0C474(v145, v122, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
            uint64_t v67 = (uint64_t)v132;
            uint64_t v66 = v134;
            (*v118)(v132, v134, v140);
            uint64_t v68 = v137;
            sub_253D0C474(v69, v67 + *(int *)(v137 + 20), (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
            uint64_t v65 = 0;
          }
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v67, v65, 1, v68);
          (*v141)(v144, v10);
          (*v126)(v66, v140);
          (*v125)(v142, v143);
          if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v67, 1, v68) == 1)
          {
            sub_253BEFAC0(v67, &qword_26B255618);
          }
          else
          {
            uint64_t v70 = v121;
            sub_253D0C474(v67, v121, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue);
            sub_253D0C474(v70, v131, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v45 = sub_253DC46E0(0, *(void *)(v45 + 16) + 1, 1, v45);
            }
            unint64_t v72 = *(void *)(v45 + 16);
            unint64_t v71 = *(void *)(v45 + 24);
            if (v72 >= v71 >> 1) {
              uint64_t v45 = sub_253DC46E0(v71 > 1, v72 + 1, 1, v45);
            }
            *(void *)(v45 + 16) = v72 + 1;
            sub_253D0C474(v131, v45+ ((*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80))+ *(void *)(v123 + 72) * v72, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue);
            uint64_t v36 = v124;
          }
          v43 += v136;
          if (!--v41)
          {
            swift_bridgeObjectRelease();
            goto LABEL_32;
          }
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v45 = MEMORY[0x263F8EE78];
LABEL_32:
      uint64_t v26 = v95;
      (*v91)(v106, v95);
    }
    else
    {
      (*v94)(v37, v38);
      uint64_t v45 = MEMORY[0x263F8EE78];
    }
    (*v98)(v114, v115);
    uint64_t v73 = *(void *)(v45 + 16);
    uint64_t v74 = *(void *)(v117 + 16);
    uint64_t v75 = v74 + v73;
    if (__OFADD__(v74, v73)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v77 = v117;
    if (!isUniquelyReferenced_nonNull_native || v75 > *(void *)(v117 + 24) >> 1)
    {
      if (v74 <= v75) {
        uint64_t v78 = v74 + v73;
      }
      else {
        uint64_t v78 = v74;
      }
      uint64_t v77 = sub_253DC46E0(isUniquelyReferenced_nonNull_native, v78, 1, v117);
    }
    uint64_t v36 = v124;
    uint64_t v37 = v107;
    uint64_t v79 = *(void *)(v45 + 16);
    uint64_t v117 = v77;
    if (v79)
    {
      uint64_t v80 = *(void *)(v77 + 16);
      if ((*(void *)(v77 + 24) >> 1) - v80 < v73) {
        goto LABEL_56;
      }
      unint64_t v81 = (*(unsigned __int8 *)(v123 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v123 + 80);
      uint64_t v82 = *(void *)(v123 + 72);
      unint64_t v83 = v77 + v81 + v82 * v80;
      if (v45 + v81 < v83 + v82 * v73 && v83 < v45 + v81 + v82 * v73) {
        goto LABEL_58;
      }
      swift_arrayInitWithCopy();
      if (v73)
      {
        uint64_t v85 = *(void *)(v117 + 16);
        BOOL v86 = __OFADD__(v85, v73);
        uint64_t v87 = v85 + v73;
        if (v86) {
          goto LABEL_57;
        }
        *(void *)(v117 + 16) = v87;
      }
    }
    else if (v73)
    {
      goto LABEL_55;
    }
    uint64_t v35 = v113 + 1;
    swift_bridgeObjectRelease();
    if (v35 == v104)
    {
      swift_bridgeObjectRelease();
      return v117;
    }
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  uint64_t result = sub_253DF5B10();
  __break(1u);
  return result;
}

uint64_t sub_253CFF4A4(uint64_t a1)
{
  uint64_t v65 = sub_253BDEDD8((uint64_t *)&unk_26B256170);
  uint64_t v63 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v76 = (uint64_t *)((char *)&v57 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_253BDEDD8(&qword_26B255348);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v79 = (uint64_t)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253DEFFE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v82 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v57 - v9;
  uint64_t v11 = sub_253BDEDD8(&qword_26B256160);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v64 = (uint64_t *)((char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v66 = (char *)&v57 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v78 = (char *)&v57 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v57 - v18);
  uint64_t v20 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v77 = v20;
  uint64_t v57 = a1;
  if (!v20)
  {
    uint64_t v80 = (void *)MEMORY[0x263F8EE80];
LABEL_21:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v80;
  }
  uint64_t v70 = v10;
  uint64_t v21 = 0;
  uint64_t v75 = sub_253DF4230();
  uint64_t v22 = *(void *)(v75 - 8);
  uint64_t v23 = *(void (**)(void))(v22 + 16);
  uint64_t v24 = a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  uint64_t v71 = *(void *)(v22 + 72);
  uint64_t v74 = (void (**)(char *, char *, uint64_t))(v22 + 32);
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v69 = (void (**)(char *, char *, uint64_t))(v6 + 16);
  uint64_t v80 = (void *)MEMORY[0x263F8EE80];
  uint64_t v58 = v6;
  unint64_t v59 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v25 = (uint64_t *)v66;
  uint64_t v72 = v22 + 16;
  uint64_t v73 = v23;
  uint64_t v61 = v11;
  uint64_t v68 = v5;
  unint64_t v60 = v19;
  while (1)
  {
    uint64_t v26 = &v78[*(int *)(v11 + 48)];
    uint64_t v84 = v24;
    uint64_t v27 = v75;
    v23(v26);
    uint64_t v28 = (char *)v19 + *(int *)(v11 + 48);
    uint64_t v83 = v21;
    void *v19 = v21;
    unint64_t v81 = *v74;
    v81(v28, v26, v27);
    sub_253D0C550();
    uint64_t v29 = (char *)v25 + *(int *)(v11 + 48);
    uint64_t v30 = v79;
    sub_253D01EB4(v79);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v30, 1, v5) == 1)
    {
      sub_253BEFAC0(v30, &qword_26B255348);
      goto LABEL_18;
    }
    uint64_t v31 = v70;
    (*v62)(v70, v30, v5);
    uint64_t v67 = *v69;
    v67(v82, v31, v5);
    uint64_t v32 = *(int *)(v11 + 48);
    uint64_t v33 = v64;
    uint64_t v34 = (char *)v64 + v32;
    uint64_t v35 = *v25;
    *uint64_t v64 = *v25;
    ((void (*)(char *, char *, uint64_t))v23)((char *)v33 + v32, v29, v27);
    uint64_t v36 = (char *)v76 + *(int *)(v65 + 48);
    *uint64_t v76 = v35;
    v81(v36, v34, v27);
    uint64_t v37 = v80;
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v85 = v37;
    sub_253D87ADC();
    if (__OFADD__(v37[2], (v39 & 1) == 0)) {
      break;
    }
    unint64_t v40 = v38;
    char v41 = v39;
    sub_253BDEDD8(&qword_269D7E418);
    char v42 = sub_253DF5A70();
    unint64_t v43 = v85;
    uint64_t v25 = (uint64_t *)v66;
    if (v42)
    {
      sub_253D87ADC();
      if ((v41 & 1) != (v45 & 1)) {
        goto LABEL_24;
      }
      unint64_t v40 = v44;
    }
    swift_bridgeObjectRelease();
    if (v41)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v43[(v40 >> 6) + 8] |= 1 << v40;
      uint64_t v46 = v43[6] + *(void *)(v58 + 72) * v40;
      swift_bridgeObjectRetain();
      v67((char *)v46, v82, v68);
      *(void *)(v43[7] + 8 * v40) = MEMORY[0x263F8EE78];
      uint64_t v47 = v43[2];
      BOOL v48 = __OFADD__(v47, 1);
      uint64_t v49 = v47 + 1;
      if (v48) {
        goto LABEL_23;
      }
      v43[2] = v49;
    }
    uint64_t v50 = v43[7];
    swift_bridgeObjectRelease();
    uint64_t v51 = *(void *)(v50 + 8 * v40);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v50 + 8 * v40) = v51;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v51 = sub_253DC4728();
      *(void *)(v50 + 8 * v40) = v51;
    }
    unint64_t v54 = *(void *)(v51 + 16);
    unint64_t v53 = *(void *)(v51 + 24);
    uint64_t v80 = v43;
    if (v54 >= v53 >> 1)
    {
      uint64_t v51 = sub_253DC4728();
      *(void *)(v50 + 8 * v40) = v51;
    }
    uint64_t v11 = v61;
    uint64_t v19 = v60;
    *(void *)(v51 + 16) = v54 + 1;
    sub_253D0C550();
    uint64_t v55 = *v59;
    uint64_t v5 = v68;
    (*v59)(v82, v68);
    v55(v70, v5);
LABEL_18:
    uint64_t v21 = v83 + 1;
    sub_253BEFAC0((uint64_t)v25, &qword_26B256160);
    uint64_t v24 = v84 + v71;
    uint64_t v23 = v73;
    if (v77 == v21) {
      goto LABEL_21;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_253DF5CF0();
  __break(1u);
  return result;
}

uint64_t sub_253CFFBB0(uint64_t a1)
{
  uint64_t v2 = sub_253DF41F0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v41 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_253BDEDD8(&qword_26B256160);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v51 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v50 = (char *)&v35 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (uint64_t *)((char *)&v35 - v11);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = MEMORY[0x263F8EE78];
  uint64_t v52 = MEMORY[0x263F8EE78];
  uint64_t v16 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v49 = v16;
  if (v16)
  {
    uint64_t v17 = 0;
    uint64_t v48 = sub_253DF4230();
    uint64_t v18 = *(void *)(v48 - 8);
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v46 = v18 + 16;
    uint64_t v47 = v19;
    unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    uint64_t v35 = a1;
    uint64_t v21 = a1 + v20;
    uint64_t v22 = *(void *)(v18 + 72);
    unint64_t v44 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    uint64_t v45 = v22;
    uint64_t v23 = (uint64_t (**)(char *, uint64_t))(v3 + 88);
    int v43 = *MEMORY[0x263F4DE90];
    int v42 = *MEMORY[0x263F4DEC0];
    int v37 = *MEMORY[0x263F4E018];
    int v36 = *MEMORY[0x263F4E020];
    uint64_t v38 = v2;
    char v39 = (void (**)(char *, uint64_t))(v3 + 8);
    uint64_t v24 = v41;
    while (1)
    {
      uint64_t v25 = &v50[*(int *)(v5 + 48)];
      uint64_t v26 = v48;
      v47(v25, v21, v48);
      uint64_t v27 = (char *)v12 + *(int *)(v5 + 48);
      *uint64_t v12 = v17;
      (*v44)(v27, v25, v26);
      sub_253D0C550();
      sub_253DF4200();
      int v28 = (*v23)(v24, v2);
      if (v28 == v43 || v28 == v42) {
        break;
      }
      if (v28 == v37 || v28 == v36) {
        goto LABEL_14;
      }
      (*v39)(v24, v2);
      sub_253BEFAC0((uint64_t)v14, &qword_26B256160);
LABEL_19:
      ++v17;
      v21 += v45;
      if (v49 == v17)
      {
        uint64_t v15 = v52;
        goto LABEL_21;
      }
    }
    (*v39)(v24, v2);
LABEL_14:
    sub_253D0C550();
    uint64_t v31 = v52;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_253DC7330();
      uint64_t v31 = v52;
    }
    unint64_t v32 = *(void *)(v31 + 16);
    if (v32 >= *(void *)(v31 + 24) >> 1)
    {
      sub_253DC7330();
      uint64_t v31 = v52;
    }
    *(void *)(v31 + 16) = v32 + 1;
    sub_253D0C550();
    uint64_t v2 = v38;
    uint64_t v24 = v41;
    goto LABEL_19;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_253C31034(v15);
  swift_release();
  return v33;
}

uint64_t sub_253D00004@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v91 = a3;
  uint64_t v93 = a4;
  uint64_t v6 = sub_253DF2BE0();
  uint64_t v7 = *(char **)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v98 = (char *)&v89 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_253DEFE90();
  uint64_t v118 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v111 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_253DF3C70();
  uint64_t v113 = *(void (***)(char *, uint64_t))(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v106 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253DF41F0();
  uint64_t v110 = *(void (***)(char *, uint64_t))(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v122 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253BDEDD8(&qword_269D7CC18);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v89 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  uint64_t v105 = *(void *)(v124 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v124);
  uint64_t v119 = (uint64_t)&v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v104 = (uint64_t)&v89 - v18;
  uint64_t v129 = sub_253BDEDD8(&qword_26B256160);
  uint64_t v19 = *(void *)(v129 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v129);
  uint64_t v128 = (char *)&v89 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v127 = (uint64_t)&v89 - v22;
  uint64_t v23 = sub_253DF4230();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v121 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v123 = (char *)&v89 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v89 - v29;
  uint64_t v92 = a1;
  uint64_t v31 = sub_253D7F0D4(a1, a2);
  if (v31) {
    uint64_t v32 = v31;
  }
  else {
    uint64_t v32 = MEMORY[0x263F8EE78];
  }
  uint64_t v33 = *(void *)(v32 + 16);
  uint64_t v126 = v23;
  uint64_t v130 = v24;
  uint64_t v131 = v15;
  uint64_t v120 = v32;
  uint64_t v99 = v6;
  uint64_t v90 = v19;
  uint64_t v108 = v11;
  if (v33)
  {
    uint64_t v117 = v7;
    uint64_t v132 = MEMORY[0x263F8EE78];
    sub_253DC74F0(0, v33, 0);
    uint64_t v34 = v32 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v125 = *(void *)(v19 + 72);
    uint64_t v35 = (void (**)(char *, uint64_t, uint64_t))(v24 + 16);
    int v36 = (void (**)(char *, char *, uint64_t))(v24 + 32);
    do
    {
      uint64_t v37 = v127;
      sub_253D0C4E8(v34, v127);
      uint64_t v38 = *(int *)(v129 + 48);
      char v39 = &v128[v38];
      (*v35)(&v128[v38], v37 + v38, v23);
      uint64_t v40 = *v36;
      (*v36)(v30, v39, v23);
      sub_253BEFAC0(v37, &qword_26B256160);
      uint64_t v41 = v132;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253DC74F0(0, *(void *)(v41 + 16) + 1, 1);
        uint64_t v41 = v132;
      }
      unint64_t v43 = *(void *)(v41 + 16);
      unint64_t v42 = *(void *)(v41 + 24);
      if (v43 >= v42 >> 1)
      {
        sub_253DC74F0(v42 > 1, v43 + 1, 1);
        uint64_t v41 = v132;
      }
      *(void *)(v41 + 16) = v43 + 1;
      unint64_t v44 = v41
          + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))
          + *(void *)(v130 + 72) * v43;
      uint64_t v23 = v126;
      v40((char *)v44, v30, v126);
      uint64_t v132 = v41;
      v34 += v125;
      --v33;
    }
    while (v33);
    uint64_t v45 = v130;
    uint64_t v15 = v131;
    uint64_t v11 = v108;
    uint64_t v46 = v120;
    uint64_t v7 = v117;
  }
  else
  {
    uint64_t v41 = MEMORY[0x263F8EE78];
    uint64_t v45 = v24;
    uint64_t v46 = v32;
  }
  uint64_t v47 = *(void *)(v41 + 16);
  uint64_t v49 = v122;
  uint64_t v48 = v123;
  uint64_t v50 = v124;
  if (v47)
  {
    uint64_t v51 = *(char **)(v45 + 16);
    unint64_t v52 = v41 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
    uint64_t v116 = *(void *)(v45 + 72);
    uint64_t v117 = v51;
    uint64_t v115 = (uint64_t (**)(char *, uint64_t))(v110 + 11);
    int v114 = *MEMORY[0x263F4DEB8];
    uint64_t v97 = v110 + 1;
    v110 += 12;
    uint64_t v96 = (void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v95 = (void (**)(char *, char *, uint64_t))(v7 + 16);
    int v109 = (void (**)(char *, char *, uint64_t))(v118 + 32);
    uint64_t v94 = (void (**)(char *, uint64_t))(v7 + 8);
    int v103 = *MEMORY[0x263F4DF50];
    uint64_t v102 = (void (**)(char *, char *, uint64_t))(v113 + 4);
    uint64_t v101 = (void (**)(char *, char *, uint64_t))(v113 + 2);
    uint64_t v100 = v113 + 1;
    uint64_t v118 = v45 + 16;
    uint64_t v113 = (void (**)(char *, uint64_t))(v45 + 8);
    swift_bridgeObjectRetain();
    uint64_t v125 = MEMORY[0x263F8EE78];
    while (1)
    {
      ((void (*)(char *, unint64_t, uint64_t))v117)(v48, v52, v23);
      sub_253DF4200();
      int v53 = (*v115)(v49, v11);
      if (v53 == v114)
      {
        (*v110)(v49, v11);
        unint64_t v54 = v106;
        uint64_t v55 = v107;
        (*v102)(v106, v122, v107);
        uint64_t v56 = v111;
        sub_253DF4180();
        (*v101)(&v131[*(int *)(v124 + 20)], v54, v55);
        type metadata accessor for FeedbackLearning.ActionValue(0);
        uint64_t v48 = v123;
        swift_storeEnumTagMultiPayload();
        uint64_t v57 = v56;
        uint64_t v50 = v124;
        (*v109)(v131, v57, v112);
        uint64_t v49 = v122;
        uint64_t v58 = v55;
        uint64_t v15 = v131;
        (*v100)(v54, v58);
      }
      else
      {
        if (v53 != v103)
        {
          _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v15, 1, 1, v50);
          (*v97)(v49, v11);
          goto LABEL_21;
        }
        (*v110)(v49, v11);
        unint64_t v59 = v98;
        uint64_t v60 = v99;
        (*v96)(v98, v49, v99);
        uint64_t v61 = v111;
        sub_253DF4180();
        (*v95)(&v131[*(int *)(v124 + 20)], v59, v60);
        type metadata accessor for FeedbackLearning.ActionValue(0);
        uint64_t v48 = v123;
        swift_storeEnumTagMultiPayload();
        uint64_t v62 = v61;
        uint64_t v15 = v131;
        (*v109)(v131, v62, v112);
        uint64_t v63 = v59;
        uint64_t v50 = v124;
        (*v94)(v63, v60);
      }
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v15, 0, 1, v50);
LABEL_21:
      (*v113)(v48, v23);
      if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v15, 1, v50) == 1)
      {
        sub_253BEFAC0((uint64_t)v15, &qword_269D7CC18);
        uint64_t v64 = v120;
      }
      else
      {
        uint64_t v65 = v104;
        sub_253D0C474((uint64_t)v15, v104, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
        sub_253D0C474(v65, v119, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v64 = v120;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          uint64_t v125 = sub_253DC4884(0, *(void *)(v125 + 16) + 1, 1, v125);
        }
        unint64_t v68 = *(void *)(v125 + 16);
        unint64_t v67 = *(void *)(v125 + 24);
        if (v68 >= v67 >> 1) {
          uint64_t v125 = sub_253DC4884(v67 > 1, v68 + 1, 1, v125);
        }
        uint64_t v69 = v125;
        *(void *)(v125 + 16) = v68 + 1;
        sub_253D0C474(v119, v69+ ((*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80))+ *(void *)(v105 + 72) * v68, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
        uint64_t v48 = v123;
        uint64_t v11 = v108;
      }
      v52 += v116;
      if (!--v47)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v46 = v64;
        goto LABEL_31;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v125 = MEMORY[0x263F8EE78];
LABEL_31:
  uint64_t v132 = v46;
  swift_bridgeObjectRetain();
  sub_253DBF3A4();
  swift_bridgeObjectRetain();
  sub_253D07DCC(&v132);
  swift_bridgeObjectRelease();
  uint64_t v70 = v132;
  uint64_t v71 = *(void *)(v132 + 16);
  if (v71)
  {
    uint64_t v132 = MEMORY[0x263F8EE78];
    sub_253DC74F0(0, v71, 0);
    uint64_t v72 = *(unsigned __int8 *)(v90 + 80);
    uint64_t v131 = (char *)v70;
    uint64_t v73 = v70 + ((v72 + 32) & ~v72);
    uint64_t v74 = *(void *)(v90 + 72);
    uint64_t v75 = (void (**)(char *, uint64_t, uint64_t))(v130 + 16);
    uint64_t v76 = (void (**)(char *, char *, uint64_t))(v130 + 32);
    uint64_t v77 = v121;
    do
    {
      uint64_t v78 = v23;
      uint64_t v79 = v127;
      sub_253D0C4E8(v73, v127);
      uint64_t v80 = *(int *)(v129 + 48);
      unint64_t v81 = &v128[v80];
      (*v75)(&v128[v80], v79 + v80, v78);
      uint64_t v82 = *v76;
      (*v76)(v77, v81, v78);
      sub_253BEFAC0(v79, &qword_26B256160);
      uint64_t v83 = v132;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_253DC74F0(0, *(void *)(v83 + 16) + 1, 1);
        uint64_t v83 = v132;
      }
      unint64_t v85 = *(void *)(v83 + 16);
      unint64_t v84 = *(void *)(v83 + 24);
      uint64_t v77 = v121;
      if (v85 >= v84 >> 1)
      {
        sub_253DC74F0(v84 > 1, v85 + 1, 1);
        uint64_t v77 = v121;
        uint64_t v83 = v132;
      }
      *(void *)(v83 + 16) = v85 + 1;
      unint64_t v86 = v83
          + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80))
          + *(void *)(v130 + 72) * v85;
      uint64_t v23 = v126;
      v82((char *)v86, v77, v126);
      uint64_t v132 = v83;
      v73 += v74;
      --v71;
    }
    while (v71);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v83 = MEMORY[0x263F8EE78];
  }
  uint64_t v87 = v93;
  sub_253CFB584(v92, v93, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue);
  uint64_t result = type metadata accessor for FeedbackLearning.FlowExpression(0);
  *(void *)(v87 + *(int *)(result + 20)) = v83;
  *(void *)(v87 + *(int *)(result + 24)) = v125;
  return result;
}

uint64_t sub_253D00DC4(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_253DCB770(0, result, *(void *)(a2 + 16), a2);
  if (v4) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result;
  }
  if (v3 < v5) {
    goto LABEL_9;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    type metadata accessor for FeedbackLearning.FlowExpression(0);
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_253D00E74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a1;
  sub_253BDCE08(a3);
  uint64_t v10 = v9;
  uint64_t v11 = (void (**)(uint64_t, char *, uint64_t))sub_253C3105C(a4);
  sub_253D00EF8(a2, v8, v10, v11, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_253D00EF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (**a4)(uint64_t, char *, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v130 = a4;
  uint64_t v151 = a3;
  uint64_t v8 = sub_253DF2BE0();
  uint64_t v9 = *(void (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v128 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = sub_253DEFE90();
  uint64_t v129 = *(void (***)(char *, uint64_t))(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v135 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_253DF3C70();
  uint64_t v120 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  uint64_t v133 = (char *)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_253DF41F0();
  uint64_t v124 = *(void (***)(char *, char *, uint64_t))(v143 - 8);
  MEMORY[0x270FA5388](v143);
  uint64_t v14 = (char *)&v114 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253BDEDD8(&qword_269D7CC18);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v142 = (uint64_t)&v114 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = type metadata accessor for FeedbackLearning.FlowActionEvent(0);
  uint64_t v132 = *(void *)(v141 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v141);
  uint64_t v140 = (uint64_t)&v114 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v131 = (uint64_t)&v114 - v19;
  uint64_t v153 = sub_253BDEDD8(&qword_26B256160);
  uint64_t v145 = *(void (***)(uint64_t, char *, uint64_t))(v153 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v153);
  uint64_t v139 = (char *)&v114 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v138 = (char *)&v114 - v22;
  uint64_t v23 = sub_253DF4230();
  uint64_t v154 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v137 = (char *)&v114 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v146 = (char *)&v114 - v26;
  uint64_t v27 = sub_253DEFFE0();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v150 = (char *)&v114 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = *(void *)(a2 + 16);
  if (v34)
  {
    uint64_t v122 = v9;
    uint64_t v147 = v23;
    uint64_t v144 = v14;
    uint64_t v127 = v8;
    uint64_t v118 = a1;
    uint64_t v119 = a5;
    uint64_t v35 = (char *)&v114 - v32;
    int v36 = v33;
    uint64_t v37 = *(void *)(type metadata accessor for FeedbackLearning.FlowExpression(0) - 8);
    uint64_t v38 = a2;
    uint64_t v39 = a2 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
    FeedbackLearning.FlowExpressionValue.originTaskStatementId.getter();
    uint64_t v40 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
    uint64_t v117 = v35;
    uint64_t v116 = v28 + 32;
    uint64_t v115 = v40;
    v40((uint64_t)v35, v36, v27);
    uint64_t v148 = *(void (***)(char *, uint64_t))(v37 + 72);
    unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
    uint64_t v41 = v28 + 16;
    uint64_t v149 = v42;
    unint64_t v43 = (void (**)(char *, uint64_t))(v41 - 8);
    uint64_t v121 = v38;
    swift_bridgeObjectRetain();
    uint64_t v44 = MEMORY[0x263F8EE78];
    uint64_t v45 = v27;
    uint64_t v152 = v27;
    uint64_t v46 = v151;
    do
    {
      uint64_t v47 = v150;
      uint64_t v48 = v41;
      v149(v150, v39, v45);
      if (*(void *)(v46 + 16))
      {
        sub_253D87ADC();
        uint64_t v50 = MEMORY[0x263F8EE78];
        if (v51)
        {
          uint64_t v50 = *(void *)(*(void *)(v46 + 56) + 8 * v49);
          swift_bridgeObjectRetain();
        }
      }
      else
      {
        uint64_t v50 = MEMORY[0x263F8EE78];
      }
      (*v43)(v47, v45);
      uint64_t v52 = *(void *)(v50 + 16);
      uint64_t v53 = *(void *)(v44 + 16);
      if (__OFADD__(v53, v52))
      {
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        sub_253DF5B10();
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      if (!swift_isUniquelyReferenced_nonNull_native() || v53 + v52 > *(void *)(v44 + 24) >> 1) {
        uint64_t v44 = sub_253DC4870();
      }
      uint64_t v45 = v152;
      if (*(void *)(v50 + 16))
      {
        uint64_t v54 = *(void *)(v44 + 16);
        if ((*(void *)(v44 + 24) >> 1) - v54 < v52) {
          goto LABEL_56;
        }
        unint64_t v55 = (*((unsigned __int8 *)v145 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v145 + 80);
        uint64_t v56 = v145[9];
        unint64_t v57 = v44 + v55 + (void)v56 * v54;
        if (v50 + v55 < v57 + (void)v56 * v52 && v57 < v50 + v55 + (void)v56 * v52) {
          goto LABEL_58;
        }
        swift_arrayInitWithCopy();
        if (v52)
        {
          uint64_t v59 = *(void *)(v44 + 16);
          BOOL v60 = __OFADD__(v59, v52);
          uint64_t v61 = v59 + v52;
          if (v60) {
            goto LABEL_57;
          }
          *(void *)(v44 + 16) = v61;
        }
      }
      else if (v52)
      {
        goto LABEL_55;
      }
      swift_bridgeObjectRelease();
      v39 += (uint64_t)v148;
      --v34;
      uint64_t v41 = v48;
    }
    while (v34);
    swift_bridgeObjectRelease();
    uint64_t v155 = v44;
    swift_bridgeObjectRetain();
    sub_253DBF3A4();
    swift_bridgeObjectRetain();
    sub_253D07DCC(&v155);
    swift_bridgeObjectRelease();
    uint64_t v62 = v155;
    uint64_t v63 = *(void *)(v155 + 16);
    uint64_t v64 = v146;
    uint64_t v65 = v147;
    if (v63)
    {
      uint64_t v155 = MEMORY[0x263F8EE78];
      sub_253DC74F0(0, v63, 0);
      uint64_t v66 = *((unsigned __int8 *)v145 + 80);
      uint64_t v151 = v62;
      uint64_t v67 = v62 + ((v66 + 32) & ~v66);
      unint64_t v68 = v145[9];
      uint64_t v69 = (void (**)(char *, char *, uint64_t))(v154 + 16);
      uint64_t v70 = (void (**)(char *, char *, uint64_t))(v154 + 32);
      do
      {
        uint64_t v71 = v138;
        sub_253D0C4E8(v67, (uint64_t)v138);
        uint64_t v72 = *(int *)(v153 + 48);
        uint64_t v73 = &v139[v72];
        (*v69)(&v139[v72], &v71[v72], v65);
        uint64_t v74 = *v70;
        (*v70)(v64, v73, v65);
        sub_253BEFAC0((uint64_t)v71, &qword_26B256160);
        uint64_t v75 = v155;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_253DC74F0(0, *(void *)(v75 + 16) + 1, 1);
          uint64_t v75 = v155;
        }
        unint64_t v77 = *(void *)(v75 + 16);
        unint64_t v76 = *(void *)(v75 + 24);
        if (v77 >= v76 >> 1)
        {
          sub_253DC74F0(v76 > 1, v77 + 1, 1);
          uint64_t v75 = v155;
        }
        *(void *)(v75 + 16) = v77 + 1;
        unint64_t v78 = v75
            + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))
            + *(void *)(v154 + 72) * v77;
        uint64_t v64 = v146;
        uint64_t v65 = v147;
        v74((char *)v78, v146, v147);
        uint64_t v155 = v75;
        v67 += (uint64_t)v68;
        --v63;
      }
      while (v63);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v75 = MEMORY[0x263F8EE78];
    }
    uint64_t v81 = *(void *)(v75 + 16);
    uint64_t v82 = v144;
    uint64_t v83 = v137;
    if (v81)
    {
      unint64_t v84 = *(void (**)(void, void, void))(v154 + 16);
      unint64_t v85 = v75 + ((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80));
      uint64_t v151 = *(void *)(v154 + 72);
      uint64_t v150 = (char *)(v124 + 11);
      LODWORD(v149) = *MEMORY[0x263F4DEB8];
      uint64_t v125 = (void (**)(char *, uint64_t))(v124 + 1);
      uint64_t v146 = (char *)(v124 + 12);
      uint64_t v124 = (void (**)(char *, char *, uint64_t))(v122 + 4);
      uint64_t v123 = (void (**)(uint64_t, char *, uint64_t))(v122 + 2);
      uint64_t v145 = (void (**)(uint64_t, char *, uint64_t))(v129 + 4);
      ++v122;
      LODWORD(v139) = *MEMORY[0x263F4DF50];
      uint64_t v138 = (char *)(v120 + 32);
      uint64_t v130 = (void (**)(uint64_t, char *, uint64_t))(v120 + 16);
      uint64_t v129 = (void (**)(char *, uint64_t))(v120 + 8);
      v154 += 16;
      uint64_t v148 = (void (**)(char *, uint64_t))(v154 - 8);
      swift_bridgeObjectRetain();
      uint64_t v86 = MEMORY[0x263F8EE78];
      uint64_t v126 = v84;
      while (1)
      {
        v84(v83, v85, v65);
        sub_253DF4200();
        uint64_t v87 = v143;
        int v88 = (*(uint64_t (**)(char *, uint64_t))v150)(v82, v143);
        uint64_t v153 = v86;
        if (v88 == v149)
        {
          (*(void (**)(char *, uint64_t))v146)(v82, v87);
          uint64_t v89 = v133;
          uint64_t v90 = v82;
          uint64_t v91 = v134;
          (*(void (**)(char *, char *, uint64_t))v138)(v133, v90, v134);
          uint64_t v92 = v135;
          sub_253DF4180();
          uint64_t v94 = v141;
          uint64_t v93 = v142;
          (*v130)(v142 + *(int *)(v141 + 20), v89, v91);
          type metadata accessor for FeedbackLearning.ActionValue(0);
          swift_storeEnumTagMultiPayload();
          (*v145)(v93, v92, v136);
          uint64_t v95 = v89;
          uint64_t v65 = v147;
          uint64_t v96 = v91;
          uint64_t v97 = v94;
          uint64_t v83 = v137;
          (*v129)(v95, v96);
        }
        else
        {
          if (v88 != v139)
          {
            uint64_t v104 = v141;
            uint64_t v93 = v142;
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v142, 1, 1, v141);
            uint64_t v105 = v82;
            uint64_t v97 = v104;
            (*v125)(v105, v87);
            goto LABEL_43;
          }
          (*(void (**)(char *, uint64_t))v146)(v82, v87);
          uint64_t v98 = v128;
          uint64_t v99 = v127;
          (*v124)(v128, v82, v127);
          uint64_t v100 = v135;
          sub_253DF4180();
          uint64_t v101 = v141;
          uint64_t v93 = v142;
          (*v123)(v142 + *(int *)(v141 + 20), v98, v99);
          type metadata accessor for FeedbackLearning.ActionValue(0);
          swift_storeEnumTagMultiPayload();
          uint64_t v102 = v100;
          uint64_t v97 = v101;
          uint64_t v83 = v137;
          (*v145)(v93, v102, v136);
          uint64_t v103 = v99;
          unint64_t v84 = v126;
          (*v122)(v98, v103);
        }
        _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v93, 0, 1, v97);
LABEL_43:
        (*v148)(v83, v65);
        int v106 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v93, 1, v97);
        uint64_t v86 = v153;
        if (v106 == 1)
        {
          sub_253BEFAC0(v93, &qword_269D7CC18);
          uint64_t v82 = v144;
        }
        else
        {
          uint64_t v107 = v93;
          uint64_t v108 = v131;
          sub_253D0C474(v107, v131, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
          sub_253D0C474(v108, v140, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v82 = v144;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v86 = sub_253DC4884(0, *(void *)(v86 + 16) + 1, 1, v86);
          }
          unint64_t v111 = *(void *)(v86 + 16);
          unint64_t v110 = *(void *)(v86 + 24);
          if (v111 >= v110 >> 1) {
            uint64_t v86 = sub_253DC4884(v110 > 1, v111 + 1, 1, v86);
          }
          *(void *)(v86 + 16) = v111 + 1;
          sub_253D0C474(v140, v86+ ((*(unsigned __int8 *)(v132 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80))+ *(void *)(v132 + 72) * v111, (void (*)(void))type metadata accessor for FeedbackLearning.FlowActionEvent);
        }
        v85 += v151;
        if (!--v81)
        {
          swift_bridgeObjectRelease();
          goto LABEL_53;
        }
      }
    }
    uint64_t v86 = MEMORY[0x263F8EE78];
LABEL_53:
    uint64_t v112 = v119;
    sub_253CFB584(v118, v119, MEMORY[0x263F4CE38]);
    uint64_t v113 = (int *)type metadata accessor for FeedbackLearning.FlowTask(0);
    v115(v112 + v113[5], v117, v152);
    *(void *)(v112 + v113[6]) = v121;
    *(void *)(v112 + v113[7]) = v75;
    *(void *)(v112 + v113[8]) = v86;
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v112, 0, 1, (uint64_t)v113);
    return swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v79 = type metadata accessor for FeedbackLearning.FlowTask(0);
    return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a5, 1, 1, v79);
  }
}

uint64_t sub_253D01EB4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v91 = a1;
  uint64_t v55 = sub_253DF3720();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v53 = (char *)&v53 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_253DF3820();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v56 = (char *)&v53 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_253DF37B0();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v59 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_253DF3280();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_253DF3080();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v65 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_253DF3170();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  unint64_t v68 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_253DF0880();
  uint64_t v72 = *(void *)(v7 - 8);
  uint64_t v73 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v71 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253DF3770();
  uint64_t v75 = *(void *)(v9 - 8);
  uint64_t v76 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v74 = (char *)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_253DF2BE0();
  uint64_t v79 = *(void *)(v11 - 8);
  uint64_t v80 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v78 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253DF3490();
  uint64_t v82 = *(void *)(v13 - 8);
  uint64_t v83 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v81 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_253DF3C70();
  uint64_t v85 = *(void *)(v15 - 8);
  uint64_t v86 = v15;
  MEMORY[0x270FA5388](v15);
  unint64_t v84 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_253DF3040();
  uint64_t v89 = *(void *)(v17 - 8);
  uint64_t v90 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_253DF3030();
  uint64_t v87 = *(void *)(v20 - 8);
  uint64_t v88 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v20);
  unint64_t v77 = (char *)&v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v53 - v23;
  uint64_t v25 = sub_253BDEDD8(&qword_26B255348);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v27 = (char *)&v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_253DF3D20();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_253DF41F0();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v53 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF4200();
  int v36 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v35, v32);
  if (v36 != *MEMORY[0x263F4E010])
  {
    if (v36 == *MEMORY[0x263F4DEB8])
    {
      (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
      unint64_t v42 = v84;
      uint64_t v43 = v85;
      uint64_t v44 = v86;
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v35, v86);
      uint64_t v45 = v91;
      sub_253DF3BB0();
LABEL_31:
      (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
      uint64_t v51 = sub_253DEFFE0();
      return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v45, 0, 1, v51);
    }
    if (v36 == *MEMORY[0x263F4DED0])
    {
      (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
      uint64_t v48 = v81;
      uint64_t v49 = v82;
      uint64_t v50 = v83;
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v81, v35, v83);
      sub_253DF3480();
    }
    else
    {
      if (v36 == *MEMORY[0x263F4DF50])
      {
        (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
        unint64_t v42 = v78;
        uint64_t v43 = v79;
        uint64_t v44 = v80;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v78, v35, v80);
        uint64_t v45 = v91;
        sub_253DF2B50();
        goto LABEL_31;
      }
      if (v36 == *MEMORY[0x263F4DF70])
      {
        (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
        uint64_t v43 = v87;
        uint64_t v44 = v88;
        unint64_t v42 = v77;
        (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v77, v35, v88);
        uint64_t v45 = v91;
        sub_253DF3010();
        goto LABEL_31;
      }
      if (v36 == *MEMORY[0x263F4DFF8])
      {
        (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
        unint64_t v42 = v74;
        uint64_t v43 = v75;
        uint64_t v44 = v76;
        (*(void (**)(char *, char *, uint64_t))(v75 + 32))(v74, v35, v76);
        uint64_t v45 = v91;
        sub_253DF3730();
        goto LABEL_31;
      }
      if (v36 != *MEMORY[0x263F4DFE0])
      {
        if (v36 == *MEMORY[0x263F4DF48])
        {
          (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
          uint64_t v43 = v69;
          unint64_t v42 = v68;
          uint64_t v44 = v70;
          (*(void (**)(char *, char *, uint64_t))(v69 + 32))(v68, v35, v70);
          uint64_t v45 = v91;
          sub_253DF3110();
        }
        else if (v36 == *MEMORY[0x263F4DEE8])
        {
          (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
          uint64_t v43 = v66;
          unint64_t v42 = v65;
          uint64_t v44 = v67;
          (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v65, v35, v67);
          uint64_t v45 = v91;
          sub_253DF3060();
        }
        else if (v36 == *MEMORY[0x263F4DF00])
        {
          (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
          uint64_t v43 = v63;
          unint64_t v42 = v62;
          uint64_t v44 = v64;
          (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v62, v35, v64);
          uint64_t v45 = v91;
          sub_253DF3240();
        }
        else if (v36 == *MEMORY[0x263F4DFA0])
        {
          (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
          uint64_t v43 = v60;
          unint64_t v42 = v59;
          uint64_t v44 = v61;
          (*(void (**)(char *, char *, uint64_t))(v60 + 32))(v59, v35, v61);
          uint64_t v45 = v91;
          sub_253DF3780();
        }
        else if (v36 == *MEMORY[0x263F4DFC0])
        {
          (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
          uint64_t v43 = v57;
          unint64_t v42 = v56;
          uint64_t v44 = v58;
          (*(void (**)(char *, char *, uint64_t))(v57 + 32))(v56, v35, v58);
          uint64_t v45 = v91;
          sub_253DF37F0();
        }
        else
        {
          if (v36 != *MEMORY[0x263F4DF78])
          {
            uint64_t v52 = sub_253DEFFE0();
            _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v91, 1, 1, v52);
            return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v35, v32);
          }
          (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
          uint64_t v43 = v54;
          unint64_t v42 = v53;
          uint64_t v44 = v55;
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v35, v55);
          uint64_t v45 = v91;
          sub_253DF3700();
        }
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
      uint64_t v48 = v71;
      uint64_t v49 = v72;
      uint64_t v50 = v73;
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v71, v35, v73);
      sub_253D0360C(v91);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v48, v50);
  }
  (*(void (**)(char *, uint64_t))(v33 + 96))(v35, v32);
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v35, v28);
  sub_253DF3620();
  uint64_t v38 = v89;
  uint64_t v37 = v90;
  if ((*(unsigned int (**)(char *, uint64_t))(v89 + 88))(v19, v90) == *MEMORY[0x263F4D750])
  {
    (*(void (**)(char *, uint64_t))(v38 + 96))(v19, v37);
    uint64_t v40 = v87;
    uint64_t v39 = v88;
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v24, v19, v88);
    sub_253DF3010();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v39);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    uint64_t v41 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v37);
    uint64_t v41 = 1;
  }
  uint64_t v46 = sub_253DEFFE0();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v27, v41, 1, v46);
  return sub_253D0C550();
}

uint64_t sub_253D02DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v41 = a3;
  uint64_t v4 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v39 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253DF3440();
  uint64_t v38 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_253DF2AB0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_253BDEDD8(&qword_26B255600);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v38 - v18;
  MEMORY[0x270FA5388](v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  int v20 = (*(uint64_t (**)(char *, uint64_t))(v10 + 88))(v12, v9);
  if (v20 != *MEMORY[0x263F4D4C8])
  {
    if (v20 == *MEMORY[0x263F4D518] || v20 == *MEMORY[0x263F4D4A8])
    {
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v25 = sub_253BDEDD8(&qword_269D7CC20);
      uint64_t v26 = (uint64_t)v19;
      uint64_t v27 = 2;
    }
    else
    {
      if (v20 != *MEMORY[0x263F4D528])
      {
        uint64_t v22 = (uint64_t)v19;
        uint64_t v23 = 1;
        goto LABEL_13;
      }
      (*(void (**)(char *, uint64_t))(v10 + 96))(v12, v9);
      uint64_t v28 = v38;
      uint64_t v29 = (*(uint64_t (**)(char *, char *, uint64_t))(v38 + 32))(v8, v12, v6);
      MEMORY[0x25A26D780](v29);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
      uint64_t v25 = sub_253BDEDD8(&qword_269D7CC20);
      uint64_t v26 = (uint64_t)v19;
      uint64_t v27 = 0;
    }
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v26, v27, 2, v25);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v19, 0, 1, v4);
    goto LABEL_14;
  }
  uint64_t v21 = sub_253BDEDD8(&qword_269D7CC20);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v19, 1, 2, v21);
  uint64_t v22 = (uint64_t)v19;
  uint64_t v23 = 0;
LABEL_13:
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v22, v23, 1, v4);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
LABEL_14:
  sub_253D0C550();
  sub_253D0C550();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v16, 1, v4) == 1)
  {
    sub_253BEFAC0((uint64_t)v16, &qword_26B255600);
    uint64_t v30 = type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
    uint64_t v31 = v41;
    uint64_t v32 = 1;
  }
  else
  {
    uint64_t v33 = v39;
    sub_253D0C474((uint64_t)v16, v39, (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
    uint64_t v34 = sub_253DEFFE0();
    uint64_t v35 = v41;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v41, v40, v34);
    uint64_t v36 = type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
    sub_253D0C474(v33, v35 + *(int *)(v36 + 20), (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
    uint64_t v31 = v35;
    uint64_t v32 = 0;
    uint64_t v30 = v36;
  }
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v31, v32, 1, v30);
}

uint64_t sub_253D032AC()
{
  uint64_t v0 = sub_253DEFFE0();
  uint64_t v22 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v20 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_253DF4040();
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_253DF41F0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253DF4200();
  if ((*(unsigned int (**)(char *, uint64_t))(v7 + 88))(v9, v6) == *MEMORY[0x263F4DE90])
  {
    (*(void (**)(char *, uint64_t))(v7 + 96))(v9, v6);
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v5, v9, v3);
    uint64_t v10 = sub_253DF4000();
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      int v20 = v5;
      uint64_t v21 = v3;
      uint64_t v12 = *(void *)(sub_253DF32F0() - 8);
      unint64_t v13 = v10 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      uint64_t v14 = (void (**)(char *, uint64_t))(v22 + 8);
      uint64_t v15 = *(void *)(v12 + 72);
      while (1)
      {
        sub_253DF32E0();
        char v16 = sub_253DEFFB0();
        (*v14)(v2, v0);
        if (v16) {
          break;
        }
        v13 += v15;
        if (!--v11)
        {
          swift_bridgeObjectRelease();
          uint64_t v17 = 0;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v17 = 1;
LABEL_10:
      uint64_t v5 = v20;
      uint64_t v3 = v21;
      uint64_t v18 = v23;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v17 = 0;
      uint64_t v18 = v23;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v5, v3);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  return v17;
}

uint64_t sub_253D0360C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_253BDEDD8(&qword_26B255420);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_253C60DAC();
  uint64_t v5 = sub_253DF10D0();
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_253BEFAC0((uint64_t)v4, &qword_26B255420);
    uint64_t v6 = 1;
  }
  else
  {
    sub_253DF10A0();
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    uint64_t v6 = 0;
  }
  uint64_t v7 = sub_253DEFFE0();
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, v6, 1, v7);
}

uint64_t sub_253D03724(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_253D03740(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_253DF5DB0();
  swift_bridgeObjectRetain();
  sub_253DF52C0();
  uint64_t v8 = sub_253DF5DD0();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_253DF5C90() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_253DF5C90() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_253D05700(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_253D038F0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_253DF5DA0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_253D0589C(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

void sub_253D039EC()
{
  sub_253C1CED0();
  sub_253D0C7B0();
  sub_253DEFFE0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253D0C6B4();
  sub_253CFBD88(&qword_26B255340, MEMORY[0x263F4BF98]);
  swift_bridgeObjectRetain();
  sub_253D0C718();
  sub_253D0C644();
  if (v5)
  {
    sub_253D0C5BC(v4);
    while (1)
    {
      uint64_t v6 = sub_253D0C618();
      ((void (*)(uint64_t))v1)(v6);
      sub_253CFBD88(&qword_269D7CC00, MEMORY[0x263F4BF98]);
      uint64_t v1 = sub_253D0C754();
      uint64_t v7 = *v2;
      sub_253D0C6D4();
      v7();
      if (v1) {
        break;
      }
      sub_253D0C5EC();
      if ((v8 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_253D0C6D4();
    v7();
    uint64_t v15 = sub_253D0C694();
    v0(v15);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_253D0C8C0();
LABEL_7:
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = sub_253D0C73C();
    ((void (*)(uint64_t))v1)(v9);
    uint64_t v10 = sub_253D0C670();
    sub_253D059C0(v10, v11, v12);
    sub_253D0C8A4();
    uint64_t v13 = sub_253D0C6E4();
    v14(v13);
  }
  sub_253C1CEE8();
}

void sub_253D03B7C()
{
  sub_253C1CED0();
  sub_253D0C7B0();
  sub_253DEFE90();
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253D0C6B4();
  sub_253CFBD88(&qword_26B2552E0, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  sub_253D0C718();
  sub_253D0C644();
  if (v5)
  {
    sub_253D0C5BC(v4);
    while (1)
    {
      uint64_t v6 = sub_253D0C618();
      ((void (*)(uint64_t))v1)(v6);
      sub_253CFBD88(&qword_269D7CBE8, MEMORY[0x263F07508]);
      uint64_t v1 = sub_253D0C754();
      uint64_t v7 = *v2;
      sub_253D0C6D4();
      v7();
      if (v1) {
        break;
      }
      sub_253D0C5EC();
      if ((v8 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_253D0C6D4();
    v7();
    uint64_t v15 = sub_253D0C694();
    v0(v15);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_253D0C8C0();
LABEL_7:
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = sub_253D0C73C();
    ((void (*)(uint64_t))v1)(v9);
    uint64_t v10 = sub_253D0C670();
    sub_253D05C7C(v10, v11, v12);
    sub_253D0C8A4();
    uint64_t v13 = sub_253D0C6E4();
    v14(v13);
  }
  sub_253C1CEE8();
}

void sub_253D03D0C()
{
  sub_253C1CED0();
  sub_253D0C7B0();
  sub_253DF26C0();
  sub_253C0F830();
  MEMORY[0x270FA5388](v3);
  sub_253D0C6B4();
  sub_253CFBD88(&qword_269D7E3F8, MEMORY[0x263F4D120]);
  swift_bridgeObjectRetain();
  sub_253D0C718();
  sub_253D0C644();
  if (v5)
  {
    sub_253D0C5BC(v4);
    while (1)
    {
      uint64_t v6 = sub_253D0C618();
      ((void (*)(uint64_t))v1)(v6);
      sub_253CFBD88((unint64_t *)&qword_269D7C7A0, MEMORY[0x263F4D120]);
      uint64_t v1 = sub_253D0C754();
      uint64_t v7 = *v2;
      sub_253D0C6D4();
      v7();
      if (v1) {
        break;
      }
      sub_253D0C5EC();
      if ((v8 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_253D0C6D4();
    v7();
    uint64_t v15 = sub_253D0C694();
    v0(v15);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_253D0C8C0();
LABEL_7:
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = sub_253D0C73C();
    ((void (*)(uint64_t))v1)(v9);
    uint64_t v10 = sub_253D0C670();
    sub_253D05F38(v10, v11, v12);
    sub_253D0C8A4();
    uint64_t v13 = sub_253D0C6E4();
    v14(v13);
  }
  sub_253C1CEE8();
}

uint64_t sub_253D03E9C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_253DF5010();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_253CFBD88(&qword_269D7E3D8, MEMORY[0x263F80C28]);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = sub_253DF5220();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    char v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      int v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_253CFBD88(&qword_269D7E3E0, MEMORY[0x263F80C28]);
      char v21 = sub_253DF5250();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_253D061F4((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_253D041C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_253BDEDD8(&qword_269D7C468);
  uint64_t v3 = sub_253DF58D0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      sub_253DF5DB0();
      sub_253DF52C0();
      uint64_t result = sub_253DF5DD0();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      uint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      void *v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_253D03724(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                *uint64_t v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_253D0449C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_253BDEDD8(&qword_269D7E3D0);
  uint64_t result = sub_253DF58D0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    unint64_t v7 = (uint64_t *)(v2 + 56);
    uint64_t v6 = *(void *)(v2 + 56);
    uint64_t v8 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v27 = -1 << v8;
    uint64_t v28 = v1;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v6;
    uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v11 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = result + 56;
    if ((v9 & v6) == 0) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    for (unint64_t i = v13 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v5 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      uint64_t result = sub_253DF5DA0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v11) {
        goto LABEL_32;
      }
      unint64_t v16 = v7[v15];
      ++v5;
      if (!v16)
      {
        int64_t v5 = v15 + 1;
        if (v15 + 1 >= v11) {
          goto LABEL_32;
        }
        unint64_t v16 = v7[v5];
        if (!v16)
        {
          int64_t v5 = v15 + 2;
          if (v15 + 2 >= v11) {
            goto LABEL_32;
          }
          unint64_t v16 = v7[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v11)
            {
LABEL_32:
              if (v29 > 63) {
                sub_253D03724(0, v11, (void *)(v2 + 56));
              }
              else {
                *unint64_t v7 = v27;
              }
              uint64_t v1 = v28;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v7[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v5 >= v11) {
                  goto LABEL_32;
                }
                unint64_t v16 = v7[v5];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_253D04720()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_253DEFFE0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_253BDEDD8(&qword_269D7E3F0);
  uint64_t v5 = sub_253DF58D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_253CFBD88(&qword_26B255340, MEMORY[0x263F4BF98]);
      uint64_t result = sub_253DF5220();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_253D03724(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_253D04B18()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_253DEFE90();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_253BDEDD8(&qword_269D7E420);
  uint64_t v5 = sub_253DF58D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_253CFBD88(&qword_26B2552E0, MEMORY[0x263F07508]);
      uint64_t result = sub_253DF5220();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_253D03724(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_253D04F10()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_253DF26C0();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_253BDEDD8(&qword_269D7E400);
  uint64_t v5 = sub_253DF58D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_253CFBD88(&qword_269D7E3F8, MEMORY[0x263F4D120]);
      uint64_t result = sub_253DF5220();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_253D03724(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_253D05308()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_253DF5010();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_253BDEDD8(&qword_269D7E3E8);
  uint64_t v5 = sub_253DF58D0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      BOOL v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_253CFBD88(&qword_269D7E3D8, MEMORY[0x263F80C28]);
      uint64_t result = sub_253DF5220();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_253D03724(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *uint64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

void sub_253D05700(uint64_t a1, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_253D041C0();
  }
  else
  {
    if (v10 > v9)
    {
      sub_253D064B0();
      goto LABEL_22;
    }
    sub_253D06A10();
  }
  uint64_t v11 = *v4;
  sub_253DF5DB0();
  sub_253DF52C0();
  uint64_t v12 = sub_253DF5DD0();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  a3 = v12 & ~v13;
  uint64_t v14 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v15 = *(void *)(v11 + 48);
    unint64_t v16 = (void *)(v15 + 16 * a3);
    BOOL v17 = *v16 == a1 && v16[1] == a2;
    if (v17 || (sub_253DF5C90() & 1) != 0)
    {
LABEL_21:
      sub_253DF5CE0();
      __break(1u);
    }
    else
    {
      uint64_t v18 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v18;
        if (((*(void *)(v14 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v19 = (void *)(v15 + 16 * a3);
        BOOL v20 = *v19 == a1 && v19[1] == a2;
        if (v20 || (sub_253DF5C90() & 1) != 0) {
          goto LABEL_21;
        }
      }
    }
  }
LABEL_22:
  uint64_t v21 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v22 = (void *)(*(void *)(v21 + 48) + 16 * a3);
  *uint64_t v22 = a1;
  v22[1] = a2;
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v21 + 16) = v25;
  }
}

uint64_t sub_253D0589C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_253D0449C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_253D06630();
      goto LABEL_14;
    }
    sub_253D06CBC();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_253DF5DA0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_253DF5CE0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_253D059C0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_253D04720();
  }
  else
  {
    if (v11 > v10)
    {
      sub_253D067C8();
      goto LABEL_12;
    }
    sub_253D06F1C();
  }
  uint64_t v12 = *v3;
  sub_253CFBD88(&qword_26B255340, MEMORY[0x263F4BF98]);
  uint64_t v13 = sub_253DF5220();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_253CFBD88(&qword_269D7CC00, MEMORY[0x263F4BF98]);
      char v21 = sub_253DF5250();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_253DF5CE0();
  __break(1u);
  return result;
}

uint64_t sub_253D05C7C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_253DEFE90();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_253D04B18();
  }
  else
  {
    if (v11 > v10)
    {
      sub_253D067C8();
      goto LABEL_12;
    }
    sub_253D072C8();
  }
  uint64_t v12 = *v3;
  sub_253CFBD88(&qword_26B2552E0, MEMORY[0x263F07508]);
  uint64_t v13 = sub_253DF5220();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_253CFBD88(&qword_269D7CBE8, MEMORY[0x263F07508]);
      char v21 = sub_253DF5250();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_253DF5CE0();
  __break(1u);
  return result;
}

uint64_t sub_253D05F38(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_253DF26C0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_253D04F10();
  }
  else
  {
    if (v11 > v10)
    {
      sub_253D067C8();
      goto LABEL_12;
    }
    sub_253D07674();
  }
  uint64_t v12 = *v3;
  sub_253CFBD88(&qword_269D7E3F8, MEMORY[0x263F4D120]);
  uint64_t v13 = sub_253DF5220();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_253CFBD88((unint64_t *)&qword_269D7C7A0, MEMORY[0x263F4D120]);
      char v21 = sub_253DF5250();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_253DF5CE0();
  __break(1u);
  return result;
}

uint64_t sub_253D061F4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_253DF5010();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  unint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_253D05308();
  }
  else
  {
    if (v11 > v10)
    {
      sub_253D067C8();
      goto LABEL_12;
    }
    sub_253D07A20();
  }
  uint64_t v12 = *v3;
  sub_253CFBD88(&qword_269D7E3D8, MEMORY[0x263F80C28]);
  uint64_t v13 = sub_253DF5220();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    unint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    BOOL v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_253CFBD88(&qword_269D7E3E0, MEMORY[0x263F80C28]);
      char v21 = sub_253DF5250();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_253DF5CE0();
  __break(1u);
  return result;
}

void sub_253D064B0()
{
  uint64_t v2 = v0;
  sub_253BDEDD8(&qword_269D7C468);
  uint64_t v3 = (void *)*v0;
  uint64_t v4 = sub_253DF58C0();
  if (!v3[2])
  {
LABEL_26:
    swift_release();
    *uint64_t v2 = v4;
    return;
  }
  sub_253D0C914();
  uint64_t v6 = v3 + 7;
  unint64_t v8 = (unint64_t)(v7 + 63) >> 6;
  if ((void *)v4 != v3 || v5 >= &v3[v8 + 7]) {
    memmove(v5, v3 + 7, 8 * v8);
  }
  uint64_t v10 = 0;
  *(void *)(v4 + 16) = v3[2];
  sub_253D0C914();
  sub_253D0C7C4();
  int64_t v12 = v11 >> 6;
  if (!v1) {
    goto LABEL_10;
  }
LABEL_9:
  sub_253D0C9D8();
  for (uint64_t i = v13 | (v10 << 6); ; uint64_t i = v17 + (v10 << 6))
  {
    uint64_t v18 = (void *)(v3[6] + 16 * i);
    uint64_t v19 = v18[1];
    uint64_t v20 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *uint64_t v20 = *v18;
    v20[1] = v19;
    swift_bridgeObjectRetain();
    if (v1) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v15 >= v12) {
      goto LABEL_26;
    }
    ++v10;
    if (!v6[v15])
    {
      uint64_t v10 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_26;
      }
      if (!v6[v10])
      {
        uint64_t v10 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_26;
        }
        if (!v6[v10]) {
          break;
        }
      }
    }
LABEL_23:
    sub_253D0C9C4();
  }
  uint64_t v16 = v15 + 3;
  if (v16 >= v12) {
    goto LABEL_26;
  }
  if (v6[v16])
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v12) {
      goto LABEL_26;
    }
    ++v16;
    if (v6[v10]) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

void *sub_253D06630()
{
  uint64_t v1 = v0;
  sub_253BDEDD8(&qword_269D7E3D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_253DF58C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v14 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    *(void *)(*(void *)(v4 + 48) + 8 * i) = *(void *)(*(void *)(v2 + 48) + 8 * i);
    if (v12) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_253D067C8()
{
  sub_253C1CED0();
  uint64_t v3 = v2;
  uint64_t v4 = v0;
  uint64_t v6 = v5(0);
  sub_253C0F830();
  uint64_t v8 = v7;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - v10;
  sub_253BDEDD8(v3);
  unint64_t v12 = (void *)*v0;
  uint64_t v13 = sub_253DF58C0();
  if (!v12[2])
  {
    swift_release();
LABEL_28:
    *uint64_t v4 = v13;
    sub_253C1CEE8();
    return;
  }
  sub_253D0C914();
  unint64_t v16 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v27 = v4;
  unint64_t v28 = v12 + 7;
  if ((void *)v13 != v12 || v14 >= &v12[v16 + 7]) {
    memmove(v14, v28, 8 * v16);
  }
  uint64_t v18 = 0;
  *(void *)(v13 + 16) = v12[2];
  sub_253D0C914();
  sub_253D0C7C4();
  int64_t v29 = v19 >> 6;
  if (!v1) {
    goto LABEL_10;
  }
LABEL_9:
  sub_253D0C9D8();
  for (uint64_t i = v20 | (v18 << 6); ; uint64_t i = v24 + (v18 << 6))
  {
    uint64_t v25 = *(void *)(v8 + 72) * i;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v12[6] + v25, v6);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(*(void *)(v13 + 48) + v25, v11, v6);
    if (v1) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v22 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v29) {
      goto LABEL_26;
    }
    ++v18;
    if (!*((void *)v28 + v22))
    {
      uint64_t v18 = v22 + 1;
      if (v22 + 1 >= v29) {
        goto LABEL_26;
      }
      if (!*((void *)v28 + v18))
      {
        uint64_t v18 = v22 + 2;
        if (v22 + 2 >= v29) {
          goto LABEL_26;
        }
        if (!*((void *)v28 + v18)) {
          break;
        }
      }
    }
LABEL_23:
    sub_253D0C9C4();
  }
  uint64_t v23 = v22 + 3;
  if (v23 >= v29)
  {
LABEL_26:
    swift_release();
    uint64_t v4 = v27;
    goto LABEL_28;
  }
  if (*((void *)v28 + v23))
  {
    uint64_t v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v29) {
      goto LABEL_26;
    }
    ++v23;
    if (*((void *)v28 + v18)) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
}

uint64_t sub_253D06A10()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_253BDEDD8(&qword_269D7C468);
  uint64_t v3 = sub_253DF58D0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_253DF5DB0();
    swift_bridgeObjectRetain();
    sub_253DF52C0();
    uint64_t result = sub_253DF5DD0();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    void *v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_253D06CBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_253BDEDD8(&qword_269D7E3D0);
  uint64_t result = sub_253DF58D0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * i);
    uint64_t result = sub_253DF5DA0();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(*(void *)(v4 + 48) + 8 * v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_253D06F1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253DEFFE0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_253BDEDD8(&qword_269D7E3F0);
  uint64_t v7 = sub_253DF58D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_253CFBD88(&qword_26B255340, MEMORY[0x263F4BF98]);
    uint64_t result = sub_253DF5220();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_253D072C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253DEFE90();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_253BDEDD8(&qword_269D7E420);
  uint64_t v7 = sub_253DF58D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_253CFBD88(&qword_26B2552E0, MEMORY[0x263F07508]);
    uint64_t result = sub_253DF5220();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_253D07674()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253DF26C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_253BDEDD8(&qword_269D7E400);
  uint64_t v7 = sub_253DF58D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_253CFBD88(&qword_269D7E3F8, MEMORY[0x263F4D120]);
    uint64_t result = sub_253DF5220();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_253D07A20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_253DF5010();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_253BDEDD8(&qword_269D7E3E8);
  uint64_t v7 = sub_253DF58D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_253CFBD88(&qword_269D7E3D8, MEMORY[0x263F80C28]);
    uint64_t result = sub_253DF5220();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_253D07DCC(uint64_t *a1)
{
  sub_253BDEDD8(&qword_26B256160);
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_253DEB9C0();
    uint64_t v2 = v3;
  }
  sub_253D07E78();
  *a1 = v2;
}

void sub_253D07E78()
{
  sub_253C59954();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  sub_253BDEDD8(&qword_26B256160);
  sub_253C0F830();
  uint64_t v111 = v4;
  MEMORY[0x270FA5388](v5);
  sub_253C34050();
  sub_253C33FF0();
  MEMORY[0x270FA5388](v6);
  sub_253C33FFC();
  sub_253C33FF0();
  MEMORY[0x270FA5388](v7);
  sub_253C33FFC();
  uint64_t v115 = v8;
  sub_253C33FF0();
  MEMORY[0x270FA5388](v9);
  sub_253C36430();
  uint64_t v114 = v10;
  uint64_t v11 = v3[1];
  uint64_t v12 = sub_253DF5C30();
  if (v12 >= v11)
  {
    if ((v11 & 0x8000000000000000) == 0)
    {
      if (v11) {
        sub_253D08764();
      }
LABEL_120:
      sub_253C5993C();
      return;
    }
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  uint64_t v13 = v12;
  uint64_t v103 = sub_253DCADFC(v11 / 2);
  uint64_t v104 = v11;
  if (v11 <= 0)
  {
    unint64_t v15 = (char *)MEMORY[0x263F8EE78];
    unint64_t v46 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_104:
    if (v46 < 2) {
      goto LABEL_118;
    }
    uint64_t v95 = *v3;
    while (1)
    {
      unint64_t v96 = v46 - 2;
      if (v46 < 2) {
        break;
      }
      if (!v95) {
        goto LABEL_150;
      }
      uint64_t v97 = v15;
      uint64_t v98 = *(void *)&v15[16 * v96 + 32];
      uint64_t v99 = *(void *)&v15[16 * v46 + 24];
      sub_253D089E0();
      if (v1) {
        goto LABEL_116;
      }
      if (v99 < v98) {
        goto LABEL_137;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v97 = sub_253DEB3A8((uint64_t)v97);
      }
      if (v96 >= *((void *)v97 + 2)) {
        goto LABEL_138;
      }
      uint64_t v100 = &v97[16 * v96 + 32];
      *(void *)uint64_t v100 = v98;
      *((void *)v100 + 1) = v99;
      unint64_t v101 = *((void *)v97 + 2);
      if (v46 > v101) {
        goto LABEL_139;
      }
      unint64_t v15 = v97;
      memmove(&v97[16 * v46 + 16], &v97[16 * v46 + 32], 16 * (v101 - v46));
      *((void *)v97 + 2) = v101 - 1;
      unint64_t v46 = v101 - 1;
      if (v101 <= 2) {
        goto LABEL_118;
      }
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  uint64_t v102 = v13;
  uint64_t v14 = 0;
  unint64_t v15 = (char *)MEMORY[0x263F8EE78];
  uint64_t v119 = v3;
  while (1)
  {
    uint64_t v16 = v14;
    uint64_t v17 = v14 + 1;
    uint64_t v110 = v14;
    if (v14 + 1 >= v11)
    {
      uint64_t v27 = v14 + 1;
    }
    else
    {
      uint64_t v108 = v1;
      uint64_t v18 = *v3;
      uint64_t v19 = *(void *)(v111 + 72);
      sub_253D0C4E8(*v3 + v19 * v17, (uint64_t)v114);
      sub_253D0C4E8(v18 + v19 * v16, (uint64_t)v115);
      uint64_t v116 = *v114;
      uint64_t v20 = *v115;
      uint64_t v120 = v11;
      sub_253BEFAC0((uint64_t)v115, &qword_26B256160);
      sub_253BEFAC0((uint64_t)v114, &qword_26B256160);
      uint64_t v112 = v18;
      uint64_t v122 = v19;
      if (v16 + 2 >= v11)
      {
        uint64_t v24 = v16 + 2;
      }
      else
      {
        uint64_t v105 = v15;
        uint64_t v21 = v19 * v17;
        uint64_t v22 = v18;
        uint64_t v23 = v19;
        uint64_t v24 = v16 + 2;
        uint64_t v25 = v23 * (v16 + 2);
        while (1)
        {
          sub_253D0C4E8(v22 + v25, (uint64_t)v114);
          sub_253D0C4E8(v22 + v21, (uint64_t)v115);
          BOOL v26 = *v114 >= *v115;
          sub_253BEFAC0((uint64_t)v115, &qword_26B256160);
          sub_253BEFAC0((uint64_t)v114, &qword_26B256160);
          if (v116 < v20 == v26) {
            break;
          }
          v22 += v122;
          ++v24;
          uint64_t v11 = v120;
          if (v24 >= v120)
          {
            uint64_t v24 = v120;
            unint64_t v15 = v105;
            uint64_t v16 = v110;
            goto LABEL_13;
          }
        }
        unint64_t v15 = v105;
        uint64_t v16 = v110;
        uint64_t v11 = v120;
      }
LABEL_13:
      if (v116 >= v20)
      {
        uint64_t v27 = v24;
      }
      else
      {
        uint64_t v28 = v122;
        if (v24 < v16) {
          goto LABEL_143;
        }
        uint64_t v27 = v24;
        if (v16 < v24)
        {
          int v106 = v15;
          uint64_t v29 = v16;
          uint64_t v30 = 0;
          uint64_t v31 = v122 * (v24 - 1);
          uint64_t v32 = v24 * v122;
          uint64_t v33 = v29;
          uint64_t v34 = v29 * v122;
          do
          {
            if (v33 != v27 + v30 - 1)
            {
              if (!v18) {
                goto LABEL_149;
              }
              sub_253D0C550();
              if (v34 < v31 || v18 + v34 >= (unint64_t)(v18 + v32))
              {
                sub_253D0C948();
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v34 != v31)
              {
                sub_253D0C948();
                swift_arrayInitWithTakeBackToFront();
              }
              sub_253D0C550();
              uint64_t v27 = v24;
              uint64_t v18 = v112;
              uint64_t v28 = v122;
            }
            ++v33;
            --v30;
            v31 -= v28;
            v32 -= v28;
            v34 += v28;
          }
          while (v33 < v27 + v30);
          unint64_t v15 = v106;
          uint64_t v1 = v108;
          uint64_t v16 = v110;
          uint64_t v11 = v120;
          goto LABEL_32;
        }
      }
      uint64_t v1 = v108;
    }
LABEL_32:
    if (v27 < v11)
    {
      if (__OFSUB__(v27, v16)) {
        goto LABEL_141;
      }
      if (v27 - v16 < v102)
      {
        if (__OFADD__(v16, v102)) {
          goto LABEL_144;
        }
        if (v16 + v102 >= v11) {
          uint64_t v36 = v11;
        }
        else {
          uint64_t v36 = v16 + v102;
        }
        if (v36 < v16) {
          goto LABEL_145;
        }
        if (v27 != v36)
        {
          uint64_t v107 = v15;
          uint64_t v37 = *(void *)(v111 + 72);
          uint64_t v123 = v37 * (v27 - 1);
          uint64_t v113 = v37;
          uint64_t v121 = v27 * v37;
          uint64_t v109 = v36;
          do
          {
            uint64_t v38 = 0;
            uint64_t v39 = v16;
            uint64_t v117 = v27;
            while (1)
            {
              uint64_t v40 = *v119;
              sub_253D0C4E8(v121 + v38 + *v119, (uint64_t)v114);
              sub_253D0C4E8(v123 + v38 + v40, (uint64_t)v115);
              uint64_t v41 = *v114;
              uint64_t v42 = *v115;
              sub_253BEFAC0((uint64_t)v115, &qword_26B256160);
              sub_253BEFAC0((uint64_t)v114, &qword_26B256160);
              if (v41 >= v42) {
                break;
              }
              if (!*v119) {
                goto LABEL_147;
              }
              sub_253D0C550();
              swift_arrayInitWithTakeFrontToBack();
              sub_253D0C550();
              v38 -= v113;
              ++v39;
              uint64_t v43 = v117;
              if (v117 == v39) {
                goto LABEL_48;
              }
            }
            uint64_t v43 = v117;
LABEL_48:
            uint64_t v27 = v43 + 1;
            v123 += v113;
            v121 += v113;
            uint64_t v16 = v110;
          }
          while (v27 != v109);
          uint64_t v27 = v109;
          unint64_t v15 = v107;
        }
      }
    }
    if (v27 < v16) {
      goto LABEL_140;
    }
    uint64_t v118 = v27;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v15 = sub_253DEB2B0(0, *((void *)v15 + 2) + 1, 1, v15);
    }
    unint64_t v45 = *((void *)v15 + 2);
    unint64_t v44 = *((void *)v15 + 3);
    unint64_t v46 = v45 + 1;
    if (v45 >= v44 >> 1) {
      unint64_t v15 = sub_253DEB2B0((char *)(v44 > 1), v45 + 1, 1, v15);
    }
    *((void *)v15 + 2) = v46;
    uint64_t v47 = v15 + 32;
    uint64_t v48 = &v15[16 * v45 + 32];
    *(void *)uint64_t v48 = v16;
    *((void *)v48 + 1) = v118;
    if (v45) {
      break;
    }
    unint64_t v46 = 1;
LABEL_98:
    uint64_t v14 = v118;
    uint64_t v3 = v119;
    uint64_t v11 = v119[1];
    if (v118 >= v11) {
      goto LABEL_104;
    }
  }
  while (1)
  {
    unint64_t v49 = v46 - 1;
    if (v46 >= 4)
    {
      uint64_t v54 = &v47[16 * v46];
      uint64_t v55 = *((void *)v54 - 8);
      uint64_t v56 = *((void *)v54 - 7);
      BOOL v60 = __OFSUB__(v56, v55);
      uint64_t v57 = v56 - v55;
      if (v60) {
        goto LABEL_125;
      }
      uint64_t v59 = *((void *)v54 - 6);
      uint64_t v58 = *((void *)v54 - 5);
      BOOL v60 = __OFSUB__(v58, v59);
      uint64_t v52 = v58 - v59;
      char v53 = v60;
      if (v60) {
        goto LABEL_126;
      }
      unint64_t v61 = v46 - 2;
      uint64_t v62 = &v47[16 * v46 - 32];
      uint64_t v64 = *(void *)v62;
      uint64_t v63 = *((void *)v62 + 1);
      BOOL v60 = __OFSUB__(v63, v64);
      uint64_t v65 = v63 - v64;
      if (v60) {
        goto LABEL_127;
      }
      BOOL v60 = __OFADD__(v52, v65);
      uint64_t v66 = v52 + v65;
      if (v60) {
        goto LABEL_129;
      }
      if (v66 >= v57)
      {
        unint64_t v84 = &v47[16 * v49];
        uint64_t v86 = *(void *)v84;
        uint64_t v85 = *((void *)v84 + 1);
        BOOL v60 = __OFSUB__(v85, v86);
        uint64_t v87 = v85 - v86;
        if (v60) {
          goto LABEL_135;
        }
        BOOL v77 = v52 < v87;
        goto LABEL_87;
      }
    }
    else
    {
      if (v46 != 3)
      {
        uint64_t v78 = *((void *)v15 + 4);
        uint64_t v79 = *((void *)v15 + 5);
        BOOL v60 = __OFSUB__(v79, v78);
        uint64_t v71 = v79 - v78;
        char v72 = v60;
        goto LABEL_81;
      }
      uint64_t v51 = *((void *)v15 + 4);
      uint64_t v50 = *((void *)v15 + 5);
      BOOL v60 = __OFSUB__(v50, v51);
      uint64_t v52 = v50 - v51;
      char v53 = v60;
    }
    if (v53) {
      goto LABEL_128;
    }
    unint64_t v61 = v46 - 2;
    uint64_t v67 = &v47[16 * v46 - 32];
    uint64_t v69 = *(void *)v67;
    uint64_t v68 = *((void *)v67 + 1);
    BOOL v70 = __OFSUB__(v68, v69);
    uint64_t v71 = v68 - v69;
    char v72 = v70;
    if (v70) {
      goto LABEL_130;
    }
    uint64_t v73 = &v47[16 * v49];
    uint64_t v75 = *(void *)v73;
    uint64_t v74 = *((void *)v73 + 1);
    BOOL v60 = __OFSUB__(v74, v75);
    uint64_t v76 = v74 - v75;
    if (v60) {
      goto LABEL_132;
    }
    if (__OFADD__(v71, v76)) {
      goto LABEL_134;
    }
    if (v71 + v76 >= v52)
    {
      BOOL v77 = v52 < v76;
LABEL_87:
      if (v77) {
        unint64_t v49 = v61;
      }
      goto LABEL_89;
    }
LABEL_81:
    if (v72) {
      goto LABEL_131;
    }
    uint64_t v80 = &v47[16 * v49];
    uint64_t v82 = *(void *)v80;
    uint64_t v81 = *((void *)v80 + 1);
    BOOL v60 = __OFSUB__(v81, v82);
    uint64_t v83 = v81 - v82;
    if (v60) {
      goto LABEL_133;
    }
    if (v83 < v71) {
      goto LABEL_98;
    }
LABEL_89:
    unint64_t v88 = v49 - 1;
    if (v49 - 1 >= v46)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    if (!*v119) {
      goto LABEL_148;
    }
    uint64_t v89 = v15;
    uint64_t v90 = &v47[16 * v88];
    uint64_t v91 = *(void *)v90;
    uint64_t v92 = &v47[16 * v49];
    uint64_t v93 = *((void *)v92 + 1);
    sub_253D089E0();
    if (v1) {
      break;
    }
    if (v93 < v91) {
      goto LABEL_122;
    }
    if (v49 > *((void *)v89 + 2)) {
      goto LABEL_123;
    }
    *(void *)uint64_t v90 = v91;
    *(void *)&v47[16 * v88 + 8] = v93;
    unint64_t v94 = *((void *)v89 + 2);
    if (v49 >= v94) {
      goto LABEL_124;
    }
    unint64_t v15 = v89;
    unint64_t v46 = v94 - 1;
    memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
    *((void *)v89 + 2) = v94 - 1;
    if (v94 <= 2) {
      goto LABEL_98;
    }
  }
LABEL_116:
  swift_bridgeObjectRelease();
  if (v104 >= -1) {
    goto LABEL_119;
  }
  __break(1u);
LABEL_118:
  swift_bridgeObjectRelease();
  if (v104 >= -1)
  {
LABEL_119:
    *(void *)(v103 + 16) = 0;
    swift_bridgeObjectRelease();
    goto LABEL_120;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
}

void sub_253D08764()
{
  sub_253C59954();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v24 = v6;
  uint64_t v25 = sub_253BDEDD8(&qword_26B256160);
  uint64_t v7 = MEMORY[0x270FA5388](v25);
  uint64_t v30 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v27 = (uint64_t *)&v22[-v10];
  MEMORY[0x270FA5388](v9);
  BOOL v26 = (uint64_t *)&v22[-v12];
  uint64_t v29 = v3;
  uint64_t v23 = v5;
  if (v3 != v5)
  {
    uint64_t v13 = *(void *)(v11 + 72);
    uint64_t v33 = v13 * (v29 - 1);
    uint64_t v28 = v13;
    uint64_t v32 = v13 * v29;
    uint64_t v14 = v27;
    while (2)
    {
      uint64_t v15 = 0;
      uint64_t v16 = v24;
      do
      {
        uint64_t v17 = v1;
        uint64_t v18 = *v1;
        uint64_t v19 = v26;
        sub_253D0C4E8(v32 + v15 + v18, (uint64_t)v26);
        sub_253D0C4E8(v33 + v15 + v18, (uint64_t)v14);
        uint64_t v31 = *v19;
        uint64_t v20 = *v14;
        sub_253BEFAC0((uint64_t)v14, &qword_26B256160);
        sub_253BEFAC0((uint64_t)v19, &qword_26B256160);
        BOOL v21 = v31 < v20;
        uint64_t v1 = v17;
        if (!v21) {
          break;
        }
        if (!*v17)
        {
          __break(1u);
          return;
        }
        sub_253D0C550();
        swift_arrayInitWithTakeFrontToBack();
        sub_253D0C550();
        v15 -= v28;
        ++v16;
        uint64_t v1 = v17;
      }
      while (v29 != v16);
      v33 += v28;
      v32 += v28;
      if (++v29 != v23) {
        continue;
      }
      break;
    }
  }
  sub_253C5993C();
}

void sub_253D089E0()
{
  sub_253C59954();
  unint64_t v2 = v1;
  unint64_t v4 = v3;
  unint64_t v6 = v5;
  unint64_t v8 = v7;
  uint64_t v49 = sub_253BDEDD8(&qword_26B256160);
  uint64_t v9 = MEMORY[0x270FA5388](v49);
  uint64_t v51 = (uint64_t *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v9);
  uint64_t v50 = (uint64_t *)((char *)&v43 - v11);
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  int64_t v14 = v6 - v8;
  if (v6 - v8 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_76;
  }
  int64_t v16 = v4 - v6;
  if (v4 - v6 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_77;
  }
  uint64_t v18 = v14 / v13;
  uint64_t v19 = v16 / v13;
  if (v14 / v13 >= v16 / v13)
  {
    sub_253DC5A60(v6, v16 / v13);
    uint64_t v22 = v19 * v13;
    unint64_t v20 = v2 + v19 * v13;
    if (v22 < 1 || v8 >= v6) {
      goto LABEL_70;
    }
    uint64_t v43 = v0;
    uint64_t v44 = v13;
    unint64_t v46 = v2;
    uint64_t v47 = -v13;
    unint64_t v45 = v8;
    while (1)
    {
      unint64_t v24 = v4;
      uint64_t v25 = v47;
      v4 += v47;
      unint64_t v48 = v20 + v47;
      BOOL v26 = v50;
      sub_253D0C4E8(v20 + v47, (uint64_t)v50);
      uint64_t v27 = v6 + v25;
      sub_253D0C4E8(v27, (uint64_t)v51);
      uint64_t v28 = *v26;
      uint64_t v29 = *v51;
      sub_253BEFAC0((uint64_t)v51, &qword_26B256160);
      sub_253BEFAC0((uint64_t)v26, &qword_26B256160);
      if (v28 < v29) {
        break;
      }
      if (v24 < v20 || v4 >= v20)
      {
        sub_253D0C934();
        swift_arrayInitWithTakeFrontToBack();
LABEL_35:
        unint64_t v32 = v45;
        unint64_t v2 = v46;
        goto LABEL_42;
      }
      unint64_t v32 = v45;
      unint64_t v2 = v46;
      if (v24 == v20)
      {
        unint64_t v20 = v48;
      }
      else
      {
        sub_253D0C934();
        swift_arrayInitWithTakeBackToFront();
      }
LABEL_42:
      uint64_t v13 = v44;
      if (v20 <= v2 || v6 <= v32) {
        goto LABEL_70;
      }
    }
    if (v24 >= v6 && v4 < v6)
    {
      unint64_t v32 = v45;
      unint64_t v2 = v46;
      if (v24 != v6)
      {
        sub_253D0C920();
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v6 = v27;
      goto LABEL_42;
    }
    sub_253D0C920();
    swift_arrayInitWithTakeFrontToBack();
    unint64_t v6 = v27;
    goto LABEL_35;
  }
  sub_253DC5A60(v8, v14 / v13);
  unint64_t v20 = v2 + v18 * v13;
  unint64_t v48 = v4;
  if (v18 * v13 >= 1 && v6 < v4)
  {
    uint64_t v43 = v0;
    uint64_t v34 = v50;
    do
    {
      sub_253D0C4E8(v6, (uint64_t)v34);
      sub_253D0C4E8(v2, (uint64_t)v51);
      uint64_t v35 = *v34;
      uint64_t v36 = *v51;
      sub_253BEFAC0((uint64_t)v51, &qword_26B256160);
      sub_253BEFAC0((uint64_t)v34, &qword_26B256160);
      if (v35 >= v36)
      {
        if (v8 < v2 || v8 >= v2 + v13)
        {
          sub_253D0C990();
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v8 != v2)
        {
          sub_253D0C990();
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v37 = v6;
        v2 += v13;
      }
      else
      {
        unint64_t v37 = v6 + v13;
        if (v8 < v6 || v8 >= v37)
        {
          sub_253D0C9A4();
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v8 != v6)
        {
          sub_253D0C9A4();
          swift_arrayInitWithTakeBackToFront();
        }
      }
      v8 += v13;
      BOOL v40 = v2 >= v20 || v37 >= v48;
      unint64_t v6 = v37;
    }
    while (!v40);
  }
LABEL_70:
  int64_t v41 = v20 - v2;
  if (v13 != -1 || v41 != 0x8000000000000000)
  {
    sub_253DC5A60(v2, v41 / v13);
    sub_253C5993C();
    return;
  }
LABEL_78:
  __break(1u);
}

unint64_t sub_253D08D50()
{
  unint64_t result = qword_269D7E350;
  if (!qword_269D7E350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E350);
  }
  return result;
}

uint64_t sub_253D08D9C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_253BDF7F0();
  sub_253BEFBCC();
  v3();
  return a1;
}

uint64_t type metadata accessor for FeedbackLearning.FlowExpression(uint64_t a1)
{
  return sub_253C15D30(a1, (uint64_t *)&unk_26B2555C8);
}

ValueMetadata *type metadata accessor for FeedbackLearning()
{
  return &type metadata for FeedbackLearning;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedbackLearning.ActionValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v6 = sub_253DF2BE0();
    }
    else {
      uint64_t v6 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FeedbackLearning.ActionValue(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v2 = sub_253DF2BE0();
  }
  else {
    uint64_t v2 = sub_253DF3C70();
  }
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for FeedbackLearning.ActionValue(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = sub_253DF2BE0();
  }
  else {
    uint64_t v4 = sub_253DF3C70();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FeedbackLearning.ActionValue(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253D08D9C(a1, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_253DF2BE0();
    }
    else {
      uint64_t v4 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for FeedbackLearning.ActionValue(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v4 = sub_253DF2BE0();
  }
  else {
    uint64_t v4 = sub_253DF3C70();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FeedbackLearning.ActionValue(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_253D08D9C(a1, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v4 = sub_253DF2BE0();
    }
    else {
      uint64_t v4 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_253D092C4()
{
  uint64_t result = sub_253DF3C70();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_253DF2BE0();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedbackLearning.FlowActionEvent(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFE90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v11 = sub_253DF2BE0();
    }
    else {
      uint64_t v11 = sub_253DF3C70();
    }
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v6 = sub_253DF2BE0();
  }
  else {
    uint64_t v6 = sub_253DF3C70();
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v8 = sub_253DF2BE0();
  }
  else {
    uint64_t v8 = sub_253DF3C70();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1 + v7, a2 + v7);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    sub_253D08D9C(a1 + v7, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v10 = sub_253DF2BE0();
    }
    else {
      uint64_t v10 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  type metadata accessor for FeedbackLearning.ActionValue(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v8 = sub_253DF2BE0();
  }
  else {
    uint64_t v8 = sub_253DF3C70();
  }
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1 + v7, a2 + v7);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = a2 + v7;
    sub_253D08D9C(a1 + v7, (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
    type metadata accessor for FeedbackLearning.ActionValue(0);
    if (swift_getEnumCaseMultiPayload() == 1) {
      uint64_t v10 = sub_253DF2BE0();
    }
    else {
      uint64_t v10 = sub_253DF3C70();
    }
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253D09A58);
}

uint64_t sub_253D09A58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253D0A290(a1, a2, a3, MEMORY[0x263F07508], (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
}

uint64_t storeEnumTagSinglePayload for FeedbackLearning.FlowActionEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253D09A98);
}

uint64_t sub_253D09A98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_253D0A344(a1, a2, a3, a4, MEMORY[0x263F07508], (void (*)(void))type metadata accessor for FeedbackLearning.ActionValue);
}

uint64_t sub_253D09AC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253D0A3F4(a1, a2, a3, MEMORY[0x263F07508], type metadata accessor for FeedbackLearning.ActionValue);
}

char *initializeBufferWithCopyOfBuffer for FeedbackLearning.FlowExpressionValue(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFFE0();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253BDEDD8(&qword_269D7CC20);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v11, 2, v12))
    {
      uint64_t v13 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v10, 0, 2, v12);
    }
  }
  return a1;
}

uint64_t destroy for FeedbackLearning.FlowExpressionValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFFE0();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v8(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_253BDEDD8(&qword_269D7CC20);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v5, 2, v6);
  if (!result)
  {
    return v8(v5, v4);
  }
  return result;
}

char *initializeWithCopy for FeedbackLearning.FlowExpressionValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253BDEDD8(&qword_269D7CC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 2, v11))
  {
    uint64_t v12 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 2, v11);
  }
  return a1;
}

char *assignWithCopy for FeedbackLearning.FlowExpressionValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_253BDEDD8(&qword_269D7CC20);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 2, v12);
  int v14 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v11, 2, v12);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    sub_253BEFAC0((uint64_t)v10, &qword_269D7CC20);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v10, 0, 2, v12);
  return a1;
}

char *initializeWithTake for FeedbackLearning.FlowExpressionValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253BDEDD8(&qword_269D7CC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 2, v11))
  {
    uint64_t v12 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 2, v11);
  }
  return a1;
}

char *assignWithTake for FeedbackLearning.FlowExpressionValue(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = sub_253BDEDD8(&qword_269D7CC20);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 2, v12);
  int v14 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v11, 2, v12);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    sub_253BEFAC0((uint64_t)v10, &qword_269D7CC20);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v10, 0, 2, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearning.FlowExpressionValue(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253D0A264);
}

uint64_t sub_253D0A264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253D0A290(a1, a2, a3, MEMORY[0x263F4BF98], (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
}

uint64_t sub_253D0A290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  uint64_t v7 = sub_253D0C97C();
  v8(v7);
  sub_253C16A18();
  if (*(_DWORD *)(v9 + 84) == v5)
  {
    uint64_t v10 = sub_253C8F5BC();
  }
  else
  {
    a5(0);
    uint64_t v10 = sub_253D0C970();
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v10, v5, v11);
}

uint64_t storeEnumTagSinglePayload for FeedbackLearning.FlowExpressionValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253D0A318);
}

uint64_t sub_253D0A318(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_253D0A344(a1, a2, a3, a4, MEMORY[0x263F4BF98], (void (*)(void))type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
}

uint64_t sub_253D0A344(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void (*a6)(void))
{
  uint64_t v9 = sub_253D0C97C();
  v10(v9);
  sub_253C16A18();
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    uint64_t v12 = sub_253C8F27C();
  }
  else
  {
    a6(0);
    uint64_t v12 = sub_253D0C970();
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v12, v6, v6, v13);
}

uint64_t sub_253D0A3C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_253D0A3F4(a1, a2, a3, MEMORY[0x263F4BF98], type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType);
}

uint64_t sub_253D0A3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  uint64_t result = a4(319);
  if (v7 <= 0x3F)
  {
    uint64_t result = a5(319);
    if (v8 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedbackLearning.FlowExpressionValue.FlowExpressionType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_253BDEDD8(&qword_269D7CC20);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = sub_253DEFFE0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for FeedbackLearning.FlowExpressionValue.FlowExpressionType(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7CC20);
  uint64_t result = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_253DEFFE0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *initializeWithCopy for FeedbackLearning.FlowExpressionValue.FlowExpressionType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7CC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_253DEFFE0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for FeedbackLearning.FlowExpressionValue.FlowExpressionType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7CC20);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = sub_253DEFFE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 24))(a1, a2, v11);
      return a1;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7CC20);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_253DEFFE0();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for FeedbackLearning.FlowExpressionValue.FlowExpressionType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7CC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_253DEFFE0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for FeedbackLearning.FlowExpressionValue.FlowExpressionType(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_253BDEDD8(&qword_269D7CC20);
  int v7 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a1, 2, v6);
  int v8 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)a2, 2, v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v11 = sub_253DEFFE0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 40))(a1, a2, v11);
      return a1;
    }
    sub_253BEFAC0((uint64_t)a1, &qword_269D7CC20);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v9 = sub_253DEFFE0();
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearning.FlowExpressionValue.FlowExpressionType(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253D0AA8C);
}

uint64_t sub_253D0AA8C(uint64_t a1, uint64_t a2)
{
  sub_253BDEDD8(&qword_269D7CC20);
  uint64_t v3 = sub_253C8F5BC();
  unsigned int v5 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v3, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedbackLearning.FlowExpressionValue.FlowExpressionType(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253D0AAE8);
}

uint64_t sub_253D0AAE8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v4 = (a2 + 2);
  }
  else {
    uint64_t v4 = 0;
  }
  sub_253BDEDD8(&qword_269D7CC20);
  uint64_t v5 = sub_253C8F27C();

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v4, a3, v6);
}

uint64_t sub_253D0AB48(uint64_t a1)
{
  uint64_t v2 = sub_253BDEDD8(&qword_269D7CC20);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, 2, v2);
}

uint64_t sub_253D0AB90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_269D7CC20);

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(a1, a2, 2, v4);
}

uint64_t sub_253D0ABE0()
{
  uint64_t result = sub_253DEFFE0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for FeedbackLearning.FlowExpression(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFFE0();
    int v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(type metadata accessor for FeedbackLearning.FlowExpressionValue(0) + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_253BDEDD8(&qword_269D7CC20);
    if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v11, 2, v12))
    {
      uint64_t v13 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
      memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v10, 0, 2, v12);
    }
    uint64_t v15 = *(int *)(a3 + 24);
    *(void *)&a1[*(int *)(a3 + 20)] = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(void *)&a1[v15] = *(uint64_t *)((char *)a2 + v15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedbackLearning.FlowExpression(uint64_t a1)
{
  uint64_t v2 = sub_253DEFFE0();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(a1, v2);
  uint64_t v4 = a1 + *(int *)(type metadata accessor for FeedbackLearning.FlowExpressionValue(0) + 20);
  uint64_t v5 = sub_253BDEDD8(&qword_269D7CC20);
  if (!_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v4, 2, v5)) {
    v3(v4, v2);
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for FeedbackLearning.FlowExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(type metadata accessor for FeedbackLearning.FlowExpressionValue(0) + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253BDEDD8(&qword_269D7CC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 2, v11))
  {
    uint64_t v12 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 2, v11);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for FeedbackLearning.FlowExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_253DEFFE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(int *)(type metadata accessor for FeedbackLearning.FlowExpressionValue(0) + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253BDEDD8(&qword_269D7CC20);
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 2, v11);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 2, v11);
  if (!v12)
  {
    if (!v13)
    {
      v7(v9, v10, v5);
      goto LABEL_7;
    }
    sub_253BEFAC0((uint64_t)v9, &qword_269D7CC20);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v10, v5);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 2, v11);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for FeedbackLearning.FlowExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_253DEFFE0();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(type metadata accessor for FeedbackLearning.FlowExpressionValue(0) + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253BDEDD8(&qword_269D7CC20);
  if (_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 2, v11))
  {
    uint64_t v12 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 2, v11);
  }
  uint64_t v13 = *(int *)(a3 + 24);
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  *(void *)&a1[v13] = *(void *)&a2[v13];
  return a1;
}

char *assignWithTake for FeedbackLearning.FlowExpression(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = sub_253DEFFE0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(int *)(type metadata accessor for FeedbackLearning.FlowExpressionValue(0) + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_253BDEDD8(&qword_269D7CC20);
  int v12 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v9, 2, v11);
  int v13 = _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0((uint64_t)v10, 2, v11);
  if (!v12)
  {
    if (!v13)
    {
      v7(v9, v10, v5);
      goto LABEL_7;
    }
    sub_253BEFAC0((uint64_t)v9, &qword_269D7CC20);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = type metadata accessor for FeedbackLearning.FlowExpressionValue.FlowExpressionType(0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v9, v10, v5);
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v9, 0, 2, v11);
LABEL_7:
  *(void *)&a1[*(int *)(a3 + 20)] = *(void *)&a2[*(int *)(a3 + 20)];
  swift_bridgeObjectRelease();
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearning.FlowExpression(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253D0B4DC);
}

uint64_t sub_253D0B4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for FeedbackLearning.FlowExpressionValue(0);
  sub_253C16A18();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_253C2F140(*(void *)(a1 + *(int *)(a3 + 20)));
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(a1, a2, v6);
}

uint64_t storeEnumTagSinglePayload for FeedbackLearning.FlowExpression(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253D0B570);
}

void sub_253D0B570()
{
  uint64_t v4 = sub_253CD8F0C();
  type metadata accessor for FeedbackLearning.FlowExpressionValue(v4);
  sub_253C16A18();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = sub_253C8F27C();
    _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v6, v0, v0, v7);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t sub_253D0B5E4()
{
  uint64_t result = type metadata accessor for FeedbackLearning.FlowExpressionValue(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedbackLearning.FlowTask(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_253DEFE90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_253DEFFE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedbackLearning.FlowTask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedbackLearning.FlowTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedbackLearning.FlowTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeedbackLearning.FlowTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  return a1;
}

uint64_t assignWithTake for FeedbackLearning.FlowTask(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_253DEFE90();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_253DEFFE0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedbackLearning.FlowTask(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_253D0BC90);
}

uint64_t sub_253D0BC90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_253DF14C0();
  sub_253C16A18();
  if (*(_DWORD *)(v6 + 84) == a2)
  {
    uint64_t v7 = sub_253C8F5BC();
  }
  else
  {
    sub_253DEFFE0();
    sub_253C16A18();
    if (*(_DWORD *)(v9 + 84) != a2) {
      return sub_253C2F140(*(void *)(a1 + *(int *)(a3 + 24)));
    }
    uint64_t v7 = sub_253D0C970();
  }

  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v7, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FeedbackLearning.FlowTask(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_253D0BD44);
}

void sub_253D0BD44()
{
  sub_253CD8F0C();
  sub_253DF14C0();
  sub_253C16A18();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_253C8F27C();
  }
  else
  {
    sub_253DEFFE0();
    sub_253C16A18();
    if (*(_DWORD *)(v7 + 84) != v3)
    {
      *(void *)(v1 + *(int *)(v2 + 24)) = (v0 - 1);
      return;
    }
    uint64_t v5 = sub_253D0C970();
  }

  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0(v5, v0, v0, v6);
}

uint64_t sub_253D0BDDC()
{
  uint64_t result = sub_253DEFE90();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_253DEFFE0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearning.FlowActionEvent.CodingKeys()
{
  return &type metadata for FeedbackLearning.FlowActionEvent.CodingKeys;
}

unsigned char *_s23IntelligenceFlowRuntime16FeedbackLearningO15FlowActionEventV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x253D0BF94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearning.ActionValue.CodingKeys()
{
  return &type metadata for FeedbackLearning.ActionValue.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedbackLearning.ActionValue.ActionCodingKeys()
{
  return &type metadata for FeedbackLearning.ActionValue.ActionCodingKeys;
}

unsigned char *_s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueO16ActionCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x253D0C07CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedbackLearning.ActionValue.ClientActionCodingKeys()
{
  return &type metadata for FeedbackLearning.ActionValue.ClientActionCodingKeys;
}

unint64_t sub_253D0C0B8()
{
  unint64_t result = qword_269D7E370;
  if (!qword_269D7E370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E370);
  }
  return result;
}

unint64_t sub_253D0C108()
{
  unint64_t result = qword_269D7E378;
  if (!qword_269D7E378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E378);
  }
  return result;
}

unint64_t sub_253D0C158()
{
  unint64_t result = qword_269D7E380;
  if (!qword_269D7E380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E380);
  }
  return result;
}

unint64_t sub_253D0C1A8()
{
  unint64_t result = qword_269D7E388;
  if (!qword_269D7E388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E388);
  }
  return result;
}

unint64_t sub_253D0C1F8()
{
  unint64_t result = qword_269D7E390;
  if (!qword_269D7E390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E390);
  }
  return result;
}

unint64_t sub_253D0C248()
{
  unint64_t result = qword_269D7E398;
  if (!qword_269D7E398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E398);
  }
  return result;
}

unint64_t sub_253D0C298()
{
  unint64_t result = qword_269D7E3A0;
  if (!qword_269D7E3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E3A0);
  }
  return result;
}

unint64_t sub_253D0C2E8()
{
  unint64_t result = qword_269D7E3A8;
  if (!qword_269D7E3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E3A8);
  }
  return result;
}

unint64_t sub_253D0C338()
{
  unint64_t result = qword_269D7E3B0;
  if (!qword_269D7E3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E3B0);
  }
  return result;
}

unint64_t sub_253D0C388()
{
  unint64_t result = qword_269D7E3B8;
  if (!qword_269D7E3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E3B8);
  }
  return result;
}

unint64_t sub_253D0C3D8()
{
  unint64_t result = qword_269D7E3C0;
  if (!qword_269D7E3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E3C0);
  }
  return result;
}

unint64_t sub_253D0C428()
{
  unint64_t result = qword_269D7E3C8;
  if (!qword_269D7E3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269D7E3C8);
  }
  return result;
}

uint64_t sub_253D0C474(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_253BDF7F0();
  uint64_t v4 = sub_253C2F58C();
  v5(v4);
  return a2;
}

uint64_t sub_253D0C4C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_253D00E74(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_253D0C4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_253BDEDD8(&qword_26B256160);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_253D0C550()
{
  sub_253CD9CB4();
  sub_253BDEDD8(v1);
  sub_253BDF7F0();
  uint64_t v2 = sub_253C2F58C();
  v3(v2);
  return v0;
}

uint64_t sub_253D0C59C()
{
  return sub_253D032AC() & 1;
}

void sub_253D0C5BC(uint64_t a1@<X8>)
{
  *(void *)(v4 - 136) = v2;
  *(void *)(v4 - 128) = v1;
  *(void *)(v4 - 120) = ~a1;
  *(void *)(v4 - 144) = v3;
  uint64_t v5 = v3 + 16;
  *(void *)(v4 - 112) = *(void *)(v5 + 56);
  *(void *)(v4 - 152) = v5 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
}

uint64_t sub_253D0C618()
{
  return v0;
}

void sub_253D0C644()
{
  *(void *)(v1 - 104) = v0 + 56;
}

uint64_t sub_253D0C670()
{
  *(void *)(v2 - 88) = *v1;
  *uint64_t v1 = 0x8000000000000000;
  return v0;
}

uint64_t sub_253D0C694()
{
  return *(void *)(v0 - 128);
}

uint64_t sub_253D0C6E4()
{
  return v0;
}

uint64_t sub_253D0C700()
{
  return v0;
}

uint64_t sub_253D0C718()
{
  *(void *)(v1 - 96) = v0;
  return sub_253DF5220();
}

uint64_t sub_253D0C73C()
{
  return v0;
}

uint64_t sub_253D0C754()
{
  return sub_253DF5250();
}

void sub_253D0C778()
{
  *(void *)(v1 - 96) = v0;
}

uint64_t sub_253D0C79C()
{
  return v0;
}

uint64_t sub_253D0C7B0()
{
  return 0;
}

uint64_t sub_253D0C7E0()
{
  return swift_allocObject();
}

uint64_t sub_253D0C824()
{
  return sub_253DF3C70();
}

uint64_t sub_253D0C84C()
{
  return type metadata accessor for FeedbackLearning.ActionValue(0);
}

uint64_t sub_253D0C874()
{
  return v0;
}

uint64_t sub_253D0C88C()
{
  return v0;
}

uint64_t sub_253D0C8A4()
{
  *uint64_t v0 = *(void *)(v1 - 88);
  return swift_bridgeObjectRelease();
}

uint64_t sub_253D0C8D0()
{
  return _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwet_0(v1, 2, v0);
}

__n128 sub_253D0C8EC(__n128 *a1)
{
  __n128 result = *(__n128 *)(v1 - 288);
  a1[1] = result;
  return result;
}

uint64_t sub_253D0C904(uint64_t a1)
{
  return v1 + *(int *)(a1 + 20);
}

uint64_t sub_253D0C920()
{
  return v0;
}

uint64_t sub_253D0C934()
{
  return v0;
}

uint64_t sub_253D0C948()
{
  return v0;
}

uint64_t sub_253D0C970()
{
  return v0 + *(int *)(v1 + 20);
}

uint64_t sub_253D0C97C()
{
  return 0;
}

uint64_t sub_253D0C990()
{
  return v0;
}

uint64_t sub_253D0C9A4()
{
  return v0;
}

uint64_t sub_253D0C9B8()
{
  return 0;
}

uint64_t static PSELearningUtil.triggerPSEDataCollection(after:)()
{
  sub_253BDF928();
  *(unsigned char *)(v0 + 88) = v1;
  *(void *)(v0 + 16) = v2;
  uint64_t v3 = sub_253DF5A20();
  *(void *)(v0 + 24) = v3;
  *(void *)(v0 + 32) = *(void *)(v3 - 8);
  *(void *)(v0 + 40) = swift_task_alloc();
  sub_253BEFBAC();
  return MEMORY[0x270FA2498](v4, v5, v6);
}

uint64_t sub_253D0CAA8()
{
  if (*(unsigned char *)(v0 + 88))
  {
    sub_253DF14F0();
    swift_allocObject();
    *(void *)(v0 + 64) = sub_253D0D554((uint64_t)"PostSiriEngagementMetricsCollector");
    uint64_t v6 = (void *)sub_253D0D534();
    *(void *)(v0 + 72) = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_253D0CE6C;
    return v7();
  }
  else
  {
    uint64_t v1 = sub_253DF5E50();
    uint64_t v3 = v2;
    sub_253DF5A10();
    uint64_t v4 = (void *)sub_253D0D534();
    *(void *)(v0 + 48) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_253D0CC14;
    return ((uint64_t (*)(uint64_t, uint64_t, void, void, uint64_t))v7)(v1, v3, 0, 0, 1);
  }
}

uint64_t sub_253D0CC14()
{
  sub_253BDF7C8();
  sub_253C0FA84();
  *uint64_t v3 = v2;
  uint64_t v5 = v4[5];
  uint64_t v6 = v4[4];
  uint64_t v7 = v4[3];
  uint64_t v8 = *v1;
  sub_253C0FA84();
  *uint64_t v9 = v8;
  *(void *)(v10 + 56) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  sub_253BEFBAC();
  return MEMORY[0x270FA2498](v11, v12, v13);
}

uint64_t sub_253D0CD54()
{
  sub_253BDF928();
  sub_253DF14F0();
  swift_allocObject();
  *(void *)(v0 + 64) = sub_253D0D554((uint64_t)"PostSiriEngagementMetricsCollector");
  uint64_t v1 = (void *)sub_253D0D534();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_253D0CE6C;
  return v3();
}

uint64_t sub_253D0CE0C()
{
  sub_253BDF928();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_253D0CE6C()
{
  sub_253BDF928();
  sub_253BDF7C8();
  sub_253C0FA84();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253C0FA84();
  *uint64_t v5 = v4;
  *(void *)(v6 + 80) = v0;
  swift_task_dealloc();
  sub_253BEFBAC();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

uint64_t sub_253D0CF4C()
{
  sub_253BDF928();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_253D0CFB8()
{
  sub_253BDF928();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_253D0D020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(void *)(v6 + 56) = v5;
  uint64_t v12 = sub_253DF5A00();
  *(void *)(v6 + 64) = v12;
  *(void *)(v6 + 72) = *(void *)(v12 - 8);
  *(void *)(v6 + 80) = swift_task_alloc();
  *(void *)(v6 + 88) = swift_task_alloc();
  *(void *)(v6 + 40) = a1;
  *(void *)(v6 + 48) = a2;
  *(void *)(v6 + 16) = a3;
  *(void *)(v6 + 24) = a4;
  *(unsigned char *)(v6 + 32) = a5 & 1;
  return MEMORY[0x270FA2498](sub_253D0D124, 0, 0);
}

uint64_t sub_253D0D124()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_253DF5A20();
  uint64_t v5 = sub_253D0D4EC(&qword_269D7E438, MEMORY[0x263F8F710]);
  sub_253DF5D00();
  sub_253D0D4EC(&qword_269D7E440, MEMORY[0x263F8F6D8]);
  sub_253DF5A30();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[12] = v6;
  v0[13] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v1, v2);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[14] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_253D0D2C4;
  uint64_t v8 = v0[11];
  return MEMORY[0x270FA2380](v8, v0 + 2, v4, v5);
}

uint64_t sub_253D0D2C4()
{
  sub_253BDF7C8();
  uint64_t v3 = v2;
  sub_253C0FA84();
  *uint64_t v4 = v3;
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v5[12];
  uint64_t v7 = v5[11];
  uint64_t v8 = v5[8];
  uint64_t v9 = *v1;
  sub_253C0FA84();
  void *v10 = v9;
  *(void *)(v3 + 120) = v0;
  swift_task_dealloc();
  v6(v7, v8);
  if (v0)
  {
    sub_253BEFBAC();
    return MEMORY[0x270FA2498](v11, v12, v13);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v14 = *(uint64_t (**)(void))(v9 + 8);
    return v14();
  }
}

uint64_t sub_253D0D450()
{
  sub_253BDF928();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

ValueMetadata *type metadata accessor for PSELearningUtil()
{
  return &type metadata for PSELearningUtil;
}

uint64_t type metadata accessor for PSEUserEngagementCollector()
{
  return self;
}

uint64_t sub_253D0D4EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_253D0D534()
{
  return swift_task_alloc();
}

uint64_t sub_253D0D554@<X0>(uint64_t a1@<X8>)
{
  return MEMORY[0x270F550C0](0xD000000000000022, (a1 - 32) | 0x8000000000000000);
}

uint64_t sub_253D0D574()
{
  uint64_t v1 = sub_253BDEDD8((uint64_t *)&unk_26B2519E0);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_253DF24A0();
  sub_253C0F830();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v7);
  sub_253C4E9DC();
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  uint64_t v8 = sub_253DF2490();
  os_log_type_t v9 = sub_253DF56C0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)sub_253C0FDE0();
    *(_WORD *)uint64_t v10 = 0;
    _os_log_impl(&dword_253BD8000, v8, v9, "Registering ToolKitMonitor", v10, 2u);
    sub_253BDF910();
  }

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v4);
  uint64_t v11 = sub_253DF5500();
  _s23IntelligenceFlowRuntime16FeedbackLearningO11ActionValueOwst_0((uint64_t)v3, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = 0;
  *(void *)(v12 + 24) = 0;
  sub_253C4F880((uint64_t)v3, (uint64_t)&unk_269D7E450, v12);
  return swift_release();
}

uint64_t sub_253D0D708()
{
  sub_253BDF928();
  uint64_t v1 = sub_253DF24A0();
  v0[13] = v1;
  sub_253BDF7B0(v1);
  v0[14] = v2;
  v0[15] = sub_253C2EDA8();
  v0[16] = swift_task_alloc();
  v0[17] = swift_task_alloc();
  v0[18] = swift_task_alloc();
  uint64_t v3 = sub_253DF0DB0();
  v0[19] = v3;
  sub_253BDF7B0(v3);
  v0[20] = v4;
  v0[21] = sub_253C2EDA8();
  v0[22] = swift_task_alloc();
  v0[23] = swift_task_alloc();
  sub_253BDEDD8(&qword_26B251CB8);
  v0[24] = sub_253C2EDA8();
  v0[25] = swift_task_alloc();
  uint64_t v5 = sub_253DF15B0();
  v0[26] = v5;
  sub_253BDF7B0(v5);
  v0[27] = v6;
  v0[28] = swift_task_alloc();
  sub_253BEFBAC();
  return MEMORY[0x270FA2498](v7, v8, v9);
}

#error "253D0DFD0: call analysis failed (funcsize=479)"

uint64_t sub_253D0E010()
{
  sub_253BDF928();
  sub_253BDF7C8();
  uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_253BDF858();
  *uint64_t v5 = v4;
  *(void *)(v3 + 288) = v0;
  swift_task_dealloc();
  if (!v0) {
    swift_release();
  }
  sub_253BEFBAC();
  return MEMORY[0x270FA2498](v6, v7, v8);
}

#error "253D0E6F4: call analysis failed (funcsize=425)"

#error "253D0E9CC: call analysis failed (funcsize=401)"

uint64_t sub_253D0EDFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_253DF24A0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s23IntelligenceFlowRuntime0aB6DaemonV6logger2os6LoggerVvgZ_0();
  uint64_t v6 = sub_253DF2490();
  os_log_type_t v7 = sub_253DF5700();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_253BD8000, v6, v7, "ToolKitMonitor received SIGTERM. Cancelling toolbox update.", v8, 2u);
    MEMORY[0x25A2709B0](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_253DF3A30();
  uint64_t v9 = *MEMORY[0x263F61850];
  uint64_t v10 = sub_253DF1830();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(a1, v9, v10);
}

uint64_t sub_253D0EF90()
{
  sub_253BDEDD8((uint64_t *)&unk_26B2519E0);
  v0[7] = swift_task_alloc();
  v0[8] = swift_task_alloc();
  uint64_t v1 = sub_253DF24A0();
  v0[9] = v1;
  v0[10] = *(void *)(v1 - 8);
  v0[11] = swift_task_alloc();
  v0[12] = swift_task_alloc();
  v0[13] = swift_task_alloc();
  sub_253BDEDD8(qword_26B256338);
  v0[14] = swift_task_alloc();
  uint64_t v2 = sub_253BDEDD8(&qword_26B251CF0);
  v0[15] = v2;
  v0[16] = *(void *)(v2 - 8);
  v0[17] = swift_task_alloc();
  uint64_t v3 = sub_253BDEDD8(&qword_26B251CE8);
  v0[18] = v3;
  v0[19] = *(void *)(v3 - 8);
  v0[20] = swift_task_alloc();
  uint64_t v4 = sub_253BDEDD8(&qword_26B2564B0);
  v0[21] = v4;
  v0[22] = *(void *)(v4 - 8);
  v0[23] = swift_task_alloc();
  uint64_t v5 = sub_253BDEDD8(&qword_26B256490);
  v0[24] = v5;
  v0[25] = *(void *)(v5 - 8);
  v0[26] = swift_task_alloc();
  uint64_t v6 = sub_253BDEDD8(&qword_26B256498);
  v0[27] = v6;
  v0[28] = *(void *)(v6 - 8);
  v0[29] = swift_task_alloc();
  uint64_t v7 = sub_253BDEDD8(&qword_26B251CC8);
  v0[30] = v7;
  v0[31] = *(void *)(v7 - 8);
  v0[32] = swift_task_alloc();
  uint64_t v8 = sub_253BDEDD8(&qword_26B251CD0);
  v0[33] = v8;
  v0[34] = *(void *)(v8 - 8);
  v0[35] = swift_task_alloc();
  uint64_t v9 = sub_253BDEDD8(&qword_26B2564A0);
  v0[36] = v9;
  v0[37] = *(void *)(v9 - 8);
  v0[38] = swift_task_alloc();
  uint64_t v10 = sub_253DF57A0();
  v0[39] = v10;
  v0[40] = *(void *)(v10 - 8);
  v0[41] = swift_task_alloc();
  uint64_t v11 = sub_253BDEDD8(&qword_26B256488);
  v0[42] = v11;
  v0[43] = *(void *)(v11 - 8);
  v0[44] = swift_task_alloc();
  v0[45] = swift_task_alloc();
  v0[46] = swift_task_alloc();
  v0[47] = swift_task_alloc();
  v0[48] = type metadata accessor for ToolboxRebuildTrigger();
  v0[49] = swift_task_alloc();
  v0[50] = swift_task_alloc();
  v0[51] = swift_task_alloc();
  uint64_t v12 = sub_253BDEDD8(&qword_26B2564A8);
  v0[52] = v12;
  v0[53] = *(void *)(v12 - 8);
  v0[54] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_253D0F568, 0, 0);
}

uint64_t sub_253D0F568()
{
  uint64_t v1 = (uint64_t *)v0[51];
  uint64_t v3 = v0[40];
  uint64_t v2 = v0[41];
  uint64_t v4 = v0[39];
  uint64_t v5 = (void *)sub_253DF5260();
  sub_253DF54E0();
  *uint64_t v1 = sub_253DF5270();
  v1[1] = v6;
  uint64_t v7 = sub_253D10A3C();
  uint64_t v9 = v8;

  v1[2] = v7;
  v1[3] = v9;
  sub_253DF45A0();
  id v10 = objc_msgSend(self, sel_defaultCenter);
  uint64_t v11 = (void *)sub_253DF5770();
  sub_253DF57B0();

  sub_253D10DD8();
  sub_253DF45D0();
  uint64_t v12 = *(void (**)(void))(v3 + 8);
  ((void (*)(uint64_t, uint64_t))v12)(v2, v4);
  uint64_t v13 = self;
  id v14 = objc_msgSend(v13, sel_defaultCenter);
  if (qword_26B2564B8 != -1) {
    swift_once();
  }
  uint64_t v31 = v0[36];
  sub_253DF57B0();

  sub_253DF45D0();
  sub_253C0FDD4();
  v12();
  id v15 = objc_msgSend(v13, sel_defaultCenter);
  uint64_t v16 = (void *)sub_253DF5260();
  sub_253DF57B0();

  sub_253D118E4();
  sub_253C0FDD4();
  v12();
  id v17 = objc_msgSend(v13, sel_defaultCenter);
  uint64_t v18 = (void *)sub_253DF5260();
  sub_253DF57B0();

  sub_253D118E4();
  sub_253C0FDD4();
  v12();
  sub_253DF45B0();
  sub_253C2DC88(&qword_26B251D00, &qword_26B2564B0);
  sub_253C2DC88(&qword_26B251CF8, &qword_26B2564A8);
  sub_253DF45E0();
  sub_253BEFBCC();
  v19();
  sub_253C2DC88(&qword_26B251CC0, &qword_26B256488);
  sub_253DF4490();
  sub_253BEFBCC();
  v20();
  sub_253DF44A0();
  sub_253BEFBCC();
  v21();
  sub_253DF44B0();
  sub_253BEFBCC();
  v22();
  sub_253DF44C0();
  sub_253BEFBCC();
  v23();
  uint64_t v24 = sub_253C2DC88(&qword_26B251CD8, &qword_26B2564A0);
  MEMORY[0x25A26E950](v31, v24);
  sub_253DF4500();
  sub_253BEFBCC();
  v25();
  sub_253C2DC88(&qword_26B251CE0, &qword_26B251CE8);
  uint64_t v26 = swift_task_alloc();
  uint64_t v27 = (void *)sub_253D1196C(v26);
  void *v27 = v28;
  v27[1] = sub_253D0FBF4;
  uint64_t v29 = sub_253D11798();
  return MEMORY[0x270FA1E80](v29);
}

uint64_t sub_253D0FBF4()
{
  sub_253BDF928();
  sub_253BDF7C8();
  uint64_t v2 = *v1;
  sub_253BDF858();
  *uint64_t v3 = v2;
  *(void *)(v4 + 448) = v0;
  swift_task_dealloc();
  sub_253BEFBAC();
  return MEMORY[0x270FA2498](v5, v6, v7);
}