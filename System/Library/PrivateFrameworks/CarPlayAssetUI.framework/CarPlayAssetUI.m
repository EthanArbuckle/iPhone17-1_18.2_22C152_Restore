BOOL static ArcPackageExporter.ScriptVersion.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ArcPackageExporter.ScriptVersion.hash(into:)()
{
  return sub_249AEE348();
}

uint64_t ArcPackageExporter.ScriptVersion.hashValue.getter()
{
  return sub_249AEE388();
}

BOOL sub_249879D9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_249879DB4()
{
  return sub_249AEE388();
}

uint64_t sub_249879DFC()
{
  return sub_249AEE348();
}

uint64_t sub_249879E28()
{
  return sub_249AEE388();
}

uint64_t ArcPackageExporter.Destination.hash(into:)()
{
  return sub_249AEE348();
}

BOOL static ArcPackageExporter.Destination.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ArcPackageExporter.Destination.hashValue.getter()
{
  return sub_249AEE388();
}

BOOL sub_249879EF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

id ArcPackageExporter.fileWrapper.getter()
{
  return *v0;
}

void ArcPackageExporter.destination.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

CarPlayAssetUI::ArcPackageExporter __swiftcall ArcPackageExporter.init(fileWrapper:destination:)(NSFileWrapper fileWrapper, CarPlayAssetUI::ArcPackageExporter::Destination destination)
{
  uint64_t v3 = v2;
  int v4 = *(unsigned __int8 *)destination;
  v5 = fileWrapper.super.isa;
  v8 = v5;
  unint64_t v9 = (unint64_t)v5;
  if (v4 == 2)
  {
    v10._countAndFlagsBits = 114;
    v10._object = (void *)0xE100000000000000;
    unint64_t v11 = (unint64_t)NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v10, 1);
    if (!v11)
    {
      v5 = (objc_class *)sub_249AEDC58();
      __break(1u);
      goto LABEL_6;
    }
    unint64_t v9 = v11;
  }
  *(void *)uint64_t v3 = v8;
  *(unsigned char *)(v3 + 8) = v4;
  *(void *)(v3 + 16) = v9;
LABEL_6:
  result.resourcesFileWrapper.super.isa = v7;
  result.fileWrapper.super.isa = v5;
  result.destination = v6;
  return result;
}

void ArcPackageExporter.update(document:oldDocument:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v81 = *(void *)a1;
  uint64_t v83 = *(void *)(a1 + 8);
  uint64_t v133 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v85 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 48);
  uint64_t v67 = *(void *)(a1 + 72);
  uint64_t v68 = *(void *)(a1 + 56);
  uint64_t v64 = *(void *)(a1 + 88);
  uint64_t v66 = *(void *)(a1 + 80);
  uint64_t v77 = *(void *)(a1 + 64);
  uint64_t v78 = *(void *)(a1 + 96);
  char v63 = *(unsigned char *)(a1 + 104);
  uint64_t v6 = *(void *)(a1 + 112);
  long long v44 = *(_OWORD *)(a1 + 120);
  v43 = *(void **)(a1 + 192);
  sub_249882788(a2, (uint64_t)v122, &qword_2696DD8A8);
  id v55 = *(id *)v2;
  int v54 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v7 = *(void *)(v2 + 16);
  sub_249882788((uint64_t)v122, (uint64_t)v123, &qword_2696DD8A8);
  uint64_t v53 = v7;
  if (sub_24987BDBC((uint64_t)v123) == 1)
  {
    uint64_t v57 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v73 = 0;
    uint64_t v75 = 0;
    uint64_t v10 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    uint64_t v48 = 0;
  }
  else
  {
    uint64_t v57 = v123[0];
    uint64_t v8 = v123[1];
    uint64_t v79 = v123[2];
    uint64_t v11 = v123[3];
    uint64_t v46 = v123[4];
    uint64_t v70 = v123[5];
    uint64_t v73 = v124;
    uint64_t v75 = v125;
    uint64_t v10 = v126;
    uint64_t v51 = v128;
    uint64_t v52 = v127;
    uint64_t v50 = v129;
    uint64_t v12 = v3;
    char v13 = v5;
    uint64_t v14 = v4;
    uint64_t v15 = v130;
    uint64_t v48 = v131;
    uint64_t v16 = v132;
    swift_bridgeObjectRetain();
    uint64_t v71 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v49 = v15;
    uint64_t v4 = v14;
    char v5 = v13;
    uint64_t v3 = v12;
    swift_bridgeObjectRetain();
    uint64_t v47 = v16;
    swift_bridgeObjectRetain();
    uint64_t v9 = v79;
  }
  uint64_t v58 = v8;
  uint64_t v59 = v3;
  uint64_t v61 = v4;
  uint64_t v56 = v10;
  uint64_t v80 = v9;
  uint64_t v87 = v81;
  uint64_t v88 = v83;
  uint64_t v89 = v3;
  uint64_t v90 = v133;
  uint64_t v91 = v85;
  uint64_t v92 = v4;
  char v93 = v5;
  uint64_t v17 = v67;
  uint64_t v18 = v78;
  uint64_t v94 = v68;
  uint64_t v95 = v77;
  uint64_t v19 = v66;
  uint64_t v96 = v67;
  uint64_t v97 = v66;
  uint64_t v98 = v64;
  uint64_t v99 = v78;
  char v20 = v63;
  char v100 = v63;
  uint64_t v101 = v6;
  swift_bridgeObjectRetain();
  uint64_t v21 = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = v83;
  uint64_t v23 = v59;
  uint64_t v24 = v85;
  uint64_t v25 = v81;
  uint64_t v26 = v64;
  uint64_t v27 = v68;
  char v28 = v5;
  uint64_t v29 = v61;
  uint64_t v30 = v71;
  uint64_t v32 = v73;
  uint64_t v31 = v75;
  if (v54 == 1)
  {
    ArcPackage.removeLocalNotifications()();
    uint64_t v30 = v71;
    uint64_t v32 = v73;
    uint64_t v31 = v75;
    uint64_t v25 = v87;
    uint64_t v22 = v88;
    uint64_t v23 = v89;
    uint64_t v133 = v90;
    uint64_t v24 = v91;
    uint64_t v29 = v92;
    char v28 = v93;
    uint64_t v27 = v94;
    uint64_t v21 = v95;
    uint64_t v17 = v96;
    uint64_t v19 = v97;
    uint64_t v26 = v98;
    uint64_t v18 = v99;
    char v20 = v100;
    uint64_t v6 = v101;
  }
  uint64_t v82 = v25;
  uint64_t v84 = v22;
  uint64_t v86 = v24;
  uint64_t v87 = v25;
  uint64_t v69 = v27;
  uint64_t v65 = v26;
  uint64_t v60 = v23;
  uint64_t v72 = v30;
  uint64_t v74 = v32;
  uint64_t v76 = v31;
  id v119 = v55;
  char v120 = v54;
  uint64_t v121 = v53;
  uint64_t v88 = v22;
  uint64_t v89 = v23;
  uint64_t v90 = v133;
  uint64_t v91 = v24;
  uint64_t v62 = v29;
  uint64_t v92 = v29;
  char v93 = v28;
  uint64_t v94 = v27;
  uint64_t v95 = v21;
  uint64_t v96 = v17;
  uint64_t v97 = v19;
  uint64_t v98 = v26;
  uint64_t v99 = v18;
  char v100 = v20;
  uint64_t v101 = v6;
  uint64_t v104 = v57;
  uint64_t v105 = v58;
  uint64_t v106 = v80;
  uint64_t v107 = v30;
  uint64_t v108 = v46;
  uint64_t v109 = v70;
  uint64_t v110 = v32;
  uint64_t v111 = v31;
  uint64_t v112 = v56;
  uint64_t v113 = v52;
  uint64_t v114 = v51;
  uint64_t v115 = v50;
  uint64_t v116 = v49;
  uint64_t v117 = v48;
  uint64_t v118 = v47;
  sub_24987A928((uint64_t)&v87, &v104);
  if (v45)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24987BDD4(v57, v58);
    return;
  }
  id v119 = v55;
  char v120 = v54;
  uint64_t v121 = v53;
  uint64_t v87 = v82;
  uint64_t v88 = v84;
  uint64_t v89 = v60;
  uint64_t v90 = v133;
  uint64_t v91 = v86;
  uint64_t v92 = v62;
  char v93 = v28;
  uint64_t v94 = v69;
  uint64_t v95 = v21;
  uint64_t v96 = v17;
  uint64_t v97 = v19;
  uint64_t v98 = v65;
  uint64_t v99 = v18;
  char v100 = v20;
  uint64_t v101 = v6;
  uint64_t v104 = v57;
  uint64_t v105 = v58;
  uint64_t v106 = v80;
  uint64_t v107 = v72;
  uint64_t v108 = v46;
  uint64_t v109 = v70;
  uint64_t v110 = v74;
  uint64_t v111 = v76;
  uint64_t v112 = v56;
  uint64_t v113 = v52;
  uint64_t v114 = v51;
  uint64_t v115 = v50;
  uint64_t v116 = v49;
  uint64_t v117 = v48;
  uint64_t v118 = v47;
  sub_24987AD00((uint64_t)&v87, (uint64_t)&v104);
  id v119 = v55;
  char v120 = v54;
  uint64_t v121 = v53;
  uint64_t v87 = v82;
  uint64_t v88 = v84;
  uint64_t v89 = v60;
  uint64_t v90 = v133;
  uint64_t v91 = v86;
  uint64_t v92 = v62;
  char v93 = v28;
  uint64_t v94 = v69;
  uint64_t v95 = v21;
  uint64_t v96 = v17;
  uint64_t v97 = v19;
  uint64_t v98 = v65;
  uint64_t v99 = v18;
  char v100 = v20;
  uint64_t v101 = v6;
  uint64_t v104 = v57;
  uint64_t v105 = v58;
  uint64_t v106 = v80;
  uint64_t v107 = v72;
  uint64_t v108 = v46;
  uint64_t v109 = v70;
  uint64_t v110 = v74;
  uint64_t v111 = v76;
  uint64_t v112 = v56;
  uint64_t v113 = v52;
  uint64_t v114 = v51;
  uint64_t v115 = v50;
  uint64_t v116 = v49;
  uint64_t v117 = v48;
  uint64_t v118 = v47;
  sub_24987B338((uint64_t)&v87, (uint64_t)&v104);
  id v119 = v55;
  char v120 = v54;
  uint64_t v121 = v53;
  uint64_t v87 = v82;
  uint64_t v88 = v84;
  uint64_t v89 = v60;
  uint64_t v90 = v133;
  uint64_t v91 = v86;
  uint64_t v92 = v62;
  char v93 = v28;
  uint64_t v94 = v69;
  uint64_t v95 = v21;
  uint64_t v96 = v17;
  uint64_t v97 = v19;
  uint64_t v98 = v65;
  uint64_t v99 = v18;
  char v100 = v20;
  uint64_t v101 = v6;
  sub_24987B64C((uint64_t)&v87);
  sub_24987BDD4(v57, v58);
  id v119 = v55;
  char v120 = v54;
  uint64_t v121 = v53;
  uint64_t v104 = v82;
  uint64_t v105 = v84;
  uint64_t v106 = v60;
  uint64_t v107 = v133;
  uint64_t v108 = v86;
  uint64_t v109 = v62;
  LOBYTE(v110) = v28;
  uint64_t v111 = v69;
  uint64_t v112 = v21;
  uint64_t v113 = v17;
  uint64_t v114 = v19;
  uint64_t v115 = v65;
  uint64_t v116 = v18;
  LOBYTE(v117) = v20;
  uint64_t v118 = v6;
  long long v103 = v44;
  sub_24987BAB8((uint64_t)&v104, (uint64_t *)&v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249882788((uint64_t)v122, (uint64_t)&v87, &qword_2696DD8A8);
  if (sub_24987BDBC((uint64_t)&v87) == 1 || !v102)
  {
    id v33 = v43;
    if (!v43) {
      return;
    }
  }
  else
  {
    id v33 = v102;
  }
  v34 = v33;
  if (v54 != 2)
  {
    v35 = v55;
    id v36 = objc_msgSend(v55, sel_fileWrappers, v56, v52, v51, v50, v49, v48, v47);
    if (v36)
    {
      v37 = v36;
      sub_24987BE44();
      uint64_t v38 = sub_249AECE98();

      if (*(void *)(v38 + 16) && (uint64_t v39 = sub_2498EF01C(0x736172747845, 0xE600000000000000), (v40 & 1) != 0))
      {
        id v41 = *(id *)(*(void *)(v38 + 56) + 8 * v39);
        swift_bridgeObjectRelease();
        v35 = v55;
        objc_msgSend(v55, sel_removeFileWrapper_, v41);
      }
      else
      {
        swift_bridgeObjectRelease();
        v35 = v55;
      }
    }
    id v42 = objc_msgSend(v35, sel_addFileWrapper_, v34);

    v34 = v42;
  }
}

uint64_t sub_24987A928(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[1];
  int v5 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v6 = *(void **)(v2 + 16);
  if (v4)
  {
    id v42 = *(void **)(v2 + 16);
    uint64_t v7 = a2[8];
    uint64_t v8 = a2[11];
    uint64_t v10 = a2[12];
    uint64_t v9 = a2[13];
    uint64_t v11 = a2[14];
    uint64_t v45 = *a2;
    uint64_t v43 = a2[10];
    uint64_t v44 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v41 = v5;
    uint64_t v12 = sub_2499B2050(v5);
    if (v3) {
      return sub_24987BDD4(v45, v4);
    }
    uint64_t v17 = v12;
    uint64_t v39 = v9;
    uint64_t v40 = v11;
    uint64_t v37 = v8;
    uint64_t v38 = v10;
    uint64_t v35 = v44;
    uint64_t v36 = v43;
    uint64_t v34 = v7;
    unint64_t v16 = v13;
    sub_24987BDD4(v45, v4);
    uint64_t v6 = v42;
    uint64_t v15 = v17;
    int v5 = v41;
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v16 = 0xF000000000000000;
  }
  uint64_t v18 = sub_2499B2050(v5);
  if (v3) {
    return sub_249882F14(v15, v16);
  }
  uint64_t v20 = v18;
  unint64_t v21 = v19;
  if (v5 == 2) {
    uint64_t v22 = 0x446567616B636150;
  }
  else {
    uint64_t v22 = 0x2E6567616B636170;
  }
  if (v5 == 2) {
    uint64_t v23 = (void *)0xEF61756C2E617461;
  }
  else {
    uint64_t v23 = (void *)0xEC0000006E6F736ALL;
  }
  sub_249882F28(v18, v19);
  uint64_t v46 = v15;
  if (v16 >> 60 == 15)
  {
    sub_249882F14(v15, v16);
    sub_249882F14(v20, v21);
  }
  else
  {
    sub_249882F80(v15, v16);
    uint64_t v24 = v15;
    char v25 = sub_24988065C(v15, v16, v20, v21);
    sub_249882104(v20, v21);
    sub_249882F14(v24, v16);
    if (v25)
    {
      v26._countAndFlagsBits = v22;
      v26._object = v23;
      uint64_t v27 = NSFileWrapper.child(at:)(v26);

      if (v27) {
        goto LABEL_25;
      }
    }
  }
  id v28 = objc_msgSend(v6, sel_fileWrappers, v34, v35, v36, v37, v38, v39, v40);
  if (v28)
  {
    uint64_t v29 = v28;
    sub_24987BE44();
    uint64_t v30 = sub_249AECE98();

    if (*(void *)(v30 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_2498EF01C(v22, (uint64_t)v23);
      if (v32)
      {
        id v33 = *(id *)(*(void *)(v30 + 56) + 8 * v31);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v6, sel_removeFileWrapper_, v33);

        goto LABEL_24;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_24:
  NSFileWrapper.addRegularFile(withContents:fileName:)(v20, v21, v22, (uint64_t)v23);
  swift_bridgeObjectRelease();
LABEL_25:
  sub_249882104(v20, v21);
  sub_249882F14(v46, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24987AD00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  long long v6 = *(_OWORD *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 48);
  unint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  long long v10 = *(_OWORD *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  char v13 = *(unsigned char *)(a1 + 104);
  uint64_t v14 = *(void *)(a1 + 112);
  uint64_t v15 = *(void *)(a2 + 8);
  if (v15)
  {
    uint64_t v16 = *(void *)(a2 + 112);
    uint64_t v78 = v3;
    uint64_t v80 = v2;
    char v17 = *(unsigned char *)(a2 + 104);
    uint64_t v76 = v4;
    uint64_t v19 = *(void *)(a2 + 88);
    uint64_t v18 = *(void *)(a2 + 96);
    uint64_t v20 = v5;
    char v21 = v7;
    unint64_t v23 = *(void *)(a2 + 56);
    uint64_t v22 = *(void *)(a2 + 64);
    unint64_t v24 = v8;
    char v25 = *(unsigned char *)(a2 + 48);
    uint64_t v26 = v9;
    uint64_t v27 = v12;
    uint64_t v29 = *(void *)(a2 + 16);
    uint64_t v28 = *(void *)(a2 + 24);
    uint64_t v87 = *(void *)a2;
    uint64_t v88 = v15;
    uint64_t v89 = v29;
    uint64_t v90 = v28;
    long long v82 = v10;
    long long v84 = v6;
    long long v91 = *(_OWORD *)(a2 + 32);
    LOBYTE(v92) = v25 & 1;
    unint64_t v93 = v23;
    uint64_t v94 = v22;
    long long v95 = *(_OWORD *)(a2 + 72);
    uint64_t v96 = v19;
    uint64_t v97 = v18;
    LOBYTE(v98) = v17 & 1;
    uint64_t v99 = v16;
    uint64_t v30 = v11;
    char v31 = v13;
    uint64_t v32 = v14;
    ArcPackage.infoPlistContent.getter((uint64_t)&v109);
    uint64_t v14 = v32;
    char v13 = v31;
    uint64_t v11 = v30;
    uint64_t v12 = v27;
    uint64_t v9 = v26;
    unint64_t v8 = v24;
    char v7 = v21;
    uint64_t v5 = v20;
    uint64_t v4 = v76;
    uint64_t v3 = v78;
    long long v10 = v82;
    long long v6 = v84;
    uint64_t v33 = v109;
    uint64_t v73 = v110;
    uint64_t v35 = v111;
    uint64_t v34 = v112;
    uint64_t v36 = v113;
    uint64_t v86 = v114;
    uint64_t v122 = v115;
    uint64_t v38 = v118;
    uint64_t v37 = v119;
    uint64_t v72 = v120;
    uint64_t v2 = v80;
    unint64_t v39 = v116 | ((unint64_t)v117 << 8);
    char v40 = v121;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v73 = 0;
    uint64_t v35 = 0;
    uint64_t v34 = 0;
    uint64_t v36 = 0;
    uint64_t v86 = 0;
    uint64_t v122 = 0;
    unint64_t v39 = 0;
    uint64_t v38 = 0;
    uint64_t v37 = 0;
    uint64_t v72 = 0;
    char v40 = 0;
  }
  uint64_t v87 = v2;
  uint64_t v88 = v3;
  uint64_t v89 = v4;
  uint64_t v90 = v5;
  long long v91 = v6;
  LOBYTE(v92) = v7;
  unint64_t v93 = v8;
  uint64_t v94 = v9;
  long long v95 = v10;
  uint64_t v96 = v12;
  uint64_t v97 = v11;
  LOBYTE(v98) = v13;
  uint64_t v99 = v14;
  ArcPackage.infoPlistContent.getter((uint64_t)&v109);
  uint64_t v81 = v110;
  uint64_t v83 = v115;
  uint64_t v77 = v113;
  unsigned __int8 v79 = v116;
  uint64_t v85 = v119;
  uint64_t v70 = v111;
  uint64_t v71 = v109;
  uint64_t v68 = v114;
  uint64_t v69 = v112;
  uint64_t v66 = v118;
  unsigned __int8 v67 = v117;
  uint64_t v65 = v120;
  char v64 = v121;
  if (v36)
  {
    uint64_t v87 = v33;
    uint64_t v88 = v73;
    uint64_t v89 = v35;
    uint64_t v90 = v34;
    *(void *)&long long v91 = v36;
    *((void *)&v91 + 1) = v86;
    uint64_t v92 = v122;
    unint64_t v93 = v39;
    uint64_t v94 = v38;
    *(void *)&long long v95 = v37;
    *((void *)&v95 + 1) = v72;
    LOBYTE(v96) = v40;
    sub_249882EB0(v33, v73, v35, v34, v36);
    char v63 = _s14CarPlayAssetUI9InfoPlistV2eeoiySbAC_ACtFZ_0((uint64_t)&v87, (uint64_t)&v109);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    LOBYTE(v62) = v40;
    uint64_t v60 = v37;
    uint64_t v61 = v72;
    uint64_t v59 = v38;
    sub_249882DF8(v33, v73, v35, v34, v36);
    uint64_t v41 = v74;
    id v42 = v75;
    uint64_t v43 = (SEL *)&unk_265276000;
    if (v63)
    {
      id v44 = objc_msgSend(v75, sel_fileWrappers, v59, v37, v72, v62);
      if (v44)
      {
        uint64_t v45 = v44;
        sub_24987BE44();
        uint64_t v46 = sub_249AECE98();

        if (*(void *)(v46 + 16))
        {
          sub_2498EF01C(0x696C702E6F666E49, 0xEA00000000007473);
          if (v47)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    uint64_t v87 = v33;
    uint64_t v88 = v73;
    uint64_t v89 = v35;
    uint64_t v90 = v34;
    *(void *)&long long v91 = 0;
    *((void *)&v91 + 1) = v86;
    uint64_t v92 = v122;
    unint64_t v93 = v39;
    uint64_t v94 = v38;
    *(void *)&long long v95 = v37;
    *((void *)&v95 + 1) = v72;
    LOBYTE(v96) = v40;
    uint64_t v97 = v109;
    uint64_t v98 = v110;
    uint64_t v99 = v111;
    uint64_t v100 = v112;
    uint64_t v101 = v113;
    uint64_t v102 = v114;
    uint64_t v103 = v115;
    unint64_t v104 = v116 | ((unint64_t)v117 << 8);
    uint64_t v105 = v118;
    uint64_t v106 = v119;
    uint64_t v107 = v120;
    char v108 = v121;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249882D24(&v87);
    uint64_t v41 = v74;
    id v42 = v75;
    uint64_t v43 = (SEL *)&unk_265276000;
  }
  id v49 = objc_msgSend(v42, v43[229], v59, v60, v61, v62);
  if (v49)
  {
    uint64_t v50 = v49;
    sub_24987BE44();
    uint64_t v51 = sub_249AECE98();

    if (*(void *)(v51 + 16) && (uint64_t v52 = sub_2498EF01C(0x696C702E6F666E49, 0xEA00000000007473), (v53 & 1) != 0))
    {
      id v54 = *(id *)(*(void *)(v51 + 56) + 8 * v52);
      swift_bridgeObjectRelease();
      objc_msgSend(v42, sel_removeFileWrapper_, v54);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  sub_249AEB6F8();
  swift_allocObject();
  sub_249AEB6E8();
  sub_249AEB6C8();
  uint64_t v87 = v71;
  uint64_t v88 = v81;
  uint64_t v89 = v70;
  uint64_t v90 = v69;
  *(void *)&long long v91 = v77;
  *((void *)&v91 + 1) = v68;
  uint64_t v92 = v83;
  LOBYTE(v93) = v79;
  BYTE1(v93) = v67;
  uint64_t v94 = v66;
  *(void *)&long long v95 = v85;
  *((void *)&v95 + 1) = v65;
  LOBYTE(v96) = v64;
  sub_249882E5C();
  uint64_t v55 = v41;
  uint64_t v56 = sub_249AEB6D8();
  unint64_t v58 = v57;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v55)
  {
    NSFileWrapper.addRegularFile(withContents:fileName:)(v56, v58, 0x696C702E6F666E49, 0xEA00000000007473);
    swift_bridgeObjectRelease();
    return sub_249882104(v56, v58);
  }
  return result;
}

unint64_t sub_24987B338(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 112);
  uint64_t v34 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 112);
  long long v6 = (void *)v2[2];
  uint64_t v7 = v4[2];
  uint64_t v23 = v7;
  if (!v7)
  {
LABEL_14:
    if (v34)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = *(void *)(v5 + 16);
      if (!v14) {
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v5 = MEMORY[0x263F8EE78];
      uint64_t v14 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (!v14) {
        return swift_bridgeObjectRelease();
      }
    }
    unint64_t v15 = 0;
    uint64_t v34 = v4 + 5;
    char v25 = v6;
    uint64_t v16 = v23;
    while (1)
    {
      memcpy(__dst, (const void *)(v5 + 32 + 480 * v15), 0x1E0uLL);
      uint64_t v17 = __dst[0];
      uint64_t v18 = __dst[1];
      if (v16)
      {
        uint64_t v19 = v34;
        while (1)
        {
          BOOL v20 = *(v19 - 1) == v17 && *v19 == v18;
          if (v20 || (sub_249AEE0D8() & 1) != 0) {
            break;
          }
          v19 += 60;
          if (!--v16) {
            goto LABEL_27;
          }
        }
      }
      else
      {
LABEL_27:
        v32[0] = v17;
        v32[1] = v18;
        sub_249882274((uint64_t)__dst);
        swift_bridgeObjectRetain();
        id v21 = sub_2499EB370(v32);
        if (v3)
        {
          sub_2498824DC((uint64_t)__dst);
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
        uint64_t v22 = v21;
        objc_msgSend(v25, sel_removeFileWrapper_, v21);

        sub_2498824DC((uint64_t)__dst);
        swift_bridgeObjectRelease();
      }
      uint64_t v16 = v23;
      if (++v15 == v14) {
        return swift_bridgeObjectRelease();
      }
      if (v15 >= *(void *)(v5 + 16))
      {
        __break(1u);
        return swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v24 = *v2;
  char v8 = *((unsigned char *)v2 + 8);
  swift_bridgeObjectRetain();
  memcpy(__dst, v4 + 4, 0x1E0uLL);
  uint64_t v9 = v7 - 1;
  for (uint64_t i = 64; ; i += 60)
  {
    uint64_t v29 = v24;
    char v30 = v8;
    char v31 = v6;
    memcpy(v28, __dst, sizeof(v28));
    if (!v34 || (unint64_t result = sub_249A225F4(v5, __dst[0], __dst[1]), (v12 & 1) != 0))
    {
      sub_249882744(v27);
      goto LABEL_9;
    }
    if ((result & 0x8000000000000000) != 0) {
      break;
    }
    if (result >= *(void *)(v5 + 16)) {
      goto LABEL_36;
    }
    char v13 = (const void *)(v5 + 32 + 480 * result);
    memcpy(v26, v13, sizeof(v26));
    memmove(v27, v13, 0x1E0uLL);
    nullsub_1(v27);
    sub_249882274((uint64_t)v26);
LABEL_9:
    sub_249882788((uint64_t)v27, (uint64_t)v32, &qword_2696DDA40);
    sub_249882788((uint64_t)v32, (uint64_t)v27, &qword_2696DDA40);
    sub_249882274((uint64_t)__dst);
    sub_24987C088(v28, (uint64_t)v27);
    sub_2498827EC((uint64_t)v32);
    if (v3)
    {
      swift_bridgeObjectRelease();
      return sub_2498824DC((uint64_t)__dst);
    }
    sub_2498824DC((uint64_t)__dst);
    if (!v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    memcpy(__dst, &v4[i], 0x1E0uLL);
    --v9;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_24987B64C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 112);
  uint64_t v37 = *(void *)(v3 + 16);
  if (!v37) {
    return;
  }
  uint64_t v36 = v3 + 32;
  swift_bridgeObjectRetain();
  unint64_t v4 = 0;
  uint64_t v5 = MEMORY[0x263F8EE78];
  long long v6 = (SEL *)&unk_265276000;
  uint64_t v35 = v3;
  while (2)
  {
    memcpy(__dst, (const void *)(v36 + 480 * v4), 0x1E0uLL);
    v40[0] = __dst[0];
    v40[1] = __dst[1];
    sub_249882274((uint64_t)__dst);
    swift_bridgeObjectRetain();
    id v7 = sub_2499EB370(v40);
    if (v2)
    {
      sub_2498824DC((uint64_t)__dst);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    char v8 = v7;
    swift_bridgeObjectRelease();
    v40[0] = v5;
    id v9 = [v8 v6[229]];
    id v39 = v8;
    if (v9)
    {
      long long v10 = v9;
      sub_24987BE44();
      unint64_t v11 = sub_249AECE98();
    }
    else
    {
      unint64_t v11 = sub_2498ED39C(v5);
    }
    int64_t v12 = 0;
    unint64_t v38 = v4 + 1;
    unint64_t v13 = v11 + 64;
    uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & *(void *)(v11 + 64);
    int64_t v42 = (unint64_t)(v14 + 63) >> 6;
    while (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v12 << 6);
LABEL_29:
      uint64_t v22 = *(void **)(*(void *)(v11 + 56) + 8 * v18);
      swift_bridgeObjectRetain();
      id v23 = v22;
      if (objc_msgSend(v23, sel_isDirectory))
      {
        id v24 = [v23 v6[229]];
        if (v24)
        {
          char v25 = v24;
          sub_24987BE44();
          uint64_t v26 = sub_249AECE98();
        }
        else
        {
          uint64_t v26 = MEMORY[0x263F8EE80];
        }
        uint64_t v27 = *(void *)(v26 + 16);
        swift_bridgeObjectRelease();
        if (!v27)
        {
          id v28 = v23;
          MEMORY[0x24C5AE570]();
          if (*(void *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_249AED458();
          }
          sub_249AED498();
          sub_249AED448();
          long long v6 = (SEL *)&unk_265276000;
        }
      }

      swift_bridgeObjectRelease();
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
      break;
    }
    if (v19 >= v42) {
      goto LABEL_36;
    }
    unint64_t v20 = *(void *)(v13 + 8 * v19);
    ++v12;
    if (v20) {
      goto LABEL_28;
    }
    int64_t v12 = v19 + 1;
    if (v19 + 1 >= v42) {
      goto LABEL_36;
    }
    unint64_t v20 = *(void *)(v13 + 8 * v12);
    if (v20) {
      goto LABEL_28;
    }
    int64_t v12 = v19 + 2;
    if (v19 + 2 >= v42) {
      goto LABEL_36;
    }
    unint64_t v20 = *(void *)(v13 + 8 * v12);
    if (v20)
    {
LABEL_28:
      unint64_t v16 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
      goto LABEL_29;
    }
    int64_t v21 = v19 + 3;
    if (v21 < v42)
    {
      unint64_t v20 = *(void *)(v13 + 8 * v21);
      if (!v20)
      {
        while (1)
        {
          int64_t v12 = v21 + 1;
          if (__OFADD__(v21, 1)) {
            goto LABEL_53;
          }
          if (v12 >= v42) {
            goto LABEL_36;
          }
          unint64_t v20 = *(void *)(v13 + 8 * v12);
          ++v21;
          if (v20) {
            goto LABEL_28;
          }
        }
      }
      int64_t v12 = v21;
      goto LABEL_28;
    }
LABEL_36:
    swift_release();
    uint64_t v29 = v40[0];
    if (v40[0] >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_249AEDC78();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v31 = v35;
    unint64_t v4 = v38;
    uint64_t v5 = MEMORY[0x263F8EE78];
    if (v30)
    {
      if (v30 < 1) {
        goto LABEL_55;
      }
      for (uint64_t i = 0; i != v30; ++i)
      {
        if ((v29 & 0xC000000000000001) != 0) {
          id v33 = (id)MEMORY[0x24C5AEC50](i, v29);
        }
        else {
          id v33 = *(id *)(v29 + 8 * i + 32);
        }
        uint64_t v34 = v33;
        objc_msgSend(v39, sel_removeFileWrapper_, v33, v35);
      }
    }

    swift_bridgeObjectRelease();
    sub_2498824DC((uint64_t)__dst);
    if (v38 == v37)
    {
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v2 = 0;
    long long v6 = (SEL *)&unk_265276000;
    if (v38 < *(void *)(v31 + 16)) {
      continue;
    }
    break;
  }
  __break(1u);
LABEL_55:
  __break(1u);
}

uint64_t sub_24987BAB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  int v6 = *(unsigned __int8 *)(v2 + 8);
  id v7 = *(void **)(v2 + 16);
  uint64_t v32 = &type metadata for EditableTheme;
  unint64_t v33 = sub_24988205C();
  unint64_t v34 = sub_2498820B0();
  *(void *)&long long v31 = v5;
  *((void *)&v31 + 1) = v4;
  if ((v6 - 1) >= 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v25 = v5;
    uint64_t v26 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t v9 = sub_24987BE84(v8);
    swift_bridgeObjectRelease();
    id v28 = &type metadata for ResolvedTheme;
    unint64_t v29 = sub_24988215C();
    unint64_t v30 = sub_2498821B0();
    *(void *)&long long v27 = swift_allocObject();
    EditableTheme.optimize(for:)(v9, (void *)(v27 + 16));
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v31);
    sub_24988225C(&v27, &v31);
  }
  if (v6 == 2) {
    uint64_t v10 = 0x746144656D656854;
  }
  else {
    uint64_t v10 = 0x736A2E656D656874;
  }
  if (v6 == 2) {
    uint64_t v11 = 0xED000061756C2E61;
  }
  else {
    uint64_t v11 = 0xEA00000000006E6FLL;
  }
  id v12 = objc_msgSend(v7, sel_fileWrappers, v25, v26, (void)v27);
  if (v12)
  {
    unint64_t v13 = v12;
    sub_24987BE44();
    uint64_t v14 = sub_249AECE98();

    if (*(void *)(v14 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_2498EF01C(v10, v11);
      if (v16)
      {
        id v17 = *(id *)(*(void *)(v14 + 56) + 8 * v15);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v7, sel_removeFileWrapper_, v17);

        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
LABEL_16:
  unint64_t v18 = v32;
  uint64_t v19 = v34;
  __swift_project_boxed_opaque_existential_2Tm(&v31, (uint64_t)v32);
  LOBYTE(v27) = v6;
  uint64_t v20 = sub_2499EAEE0((unsigned __int8 *)&v27, (uint64_t)v18, v19);
  if (!v3)
  {
    uint64_t v22 = v20;
    unint64_t v23 = v21;
    NSFileWrapper.addRegularFile(withContents:fileName:)(v20, v21, v10, v11);
    swift_bridgeObjectRelease();
    sub_249882104(v22, v23);
  }
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v31);
}

void *static ArcPackageExporter.getScripts(from:for:)(uint64_t a1, unsigned __int8 *a2)
{
  return sub_249880F10(a1, a2);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_24987BDBC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

uint64_t sub_24987BDD4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24987BE44()
{
  unint64_t result = qword_2696DD8B0;
  if (!qword_2696DD8B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2696DD8B0);
  }
  return result;
}

uint64_t sub_24987BE84(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  unint64_t v3 = MEMORY[0x263F8EE78];
  for (uint64_t i = 56; ; i += 480)
  {
    uint64_t v5 = *(void *)(a1 + i);
    uint64_t v6 = *(void *)(v5 + 16);
    int64_t v7 = *(void *)(v3 + 16);
    int64_t v8 = v7 + v6;
    if (__OFADD__(v7, v6)) {
      break;
    }
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= *(void *)(v3 + 24) >> 1)
    {
      if (*(void *)(v5 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v7 <= v8) {
        int64_t v10 = v7 + v6;
      }
      else {
        int64_t v10 = v7;
      }
      unint64_t v3 = sub_2498AB3DC(isUniquelyReferenced_nonNull_native, v10, 1, v3);
      if (*(void *)(v5 + 16))
      {
LABEL_14:
        uint64_t v11 = *(void *)(v3 + 16);
        uint64_t v12 = (*(void *)(v3 + 24) >> 1) - v11;
        uint64_t v13 = *(void *)(type metadata accessor for Layout() - 8);
        uint64_t v14 = *(void *)(v13 + 72);
        if (v12 < v6) {
          goto LABEL_28;
        }
        unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        unint64_t v16 = v3 + v15 + v14 * v11;
        unint64_t v17 = v5 + v15;
        uint64_t v18 = v14 * v6;
        unint64_t v19 = v16 + v18;
        unint64_t v20 = v17 + v18;
        if (v17 < v19 && v16 < v20) {
          goto LABEL_30;
        }
        swift_arrayInitWithCopy();
        if (v6)
        {
          uint64_t v22 = *(void *)(v3 + 16);
          BOOL v23 = __OFADD__(v22, v6);
          uint64_t v24 = v22 + v6;
          if (v23) {
            goto LABEL_29;
          }
          *(void *)(v3 + 16) = v24;
        }
        goto LABEL_4;
      }
    }
    if (v6) {
      goto LABEL_27;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v3;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

void sub_24987C088(const void *a1, uint64_t a2)
{
  uint64_t v6 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v6 - 8);
  int64_t v8 = (char *)v184 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_249AEB4E8();
  uint64_t v189 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v222, a1, sizeof(v222));
  sub_249882788(a2, (uint64_t)v223, &qword_2696DDA40);
  uint64_t v12 = *(void **)v2;
  unsigned int v13 = *(unsigned __int8 *)(v2 + 8);
  uint64_t v14 = *(void **)(v2 + 16);
  v219[0] = v222[0];
  v219[1] = v222[1];
  swift_bridgeObjectRetain();
  id v15 = sub_2499EB370(v219);
  if (v3)
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v186 = v9;
  id v208 = v15;
  v224 = v11;
  int64_t v198 = (int64_t)v8;
  unsigned int v194 = v13;
  swift_bridgeObjectRelease();
  memcpy(v219, v222, sizeof(v219));
  sub_249882274((uint64_t)v222);
  sub_249A06F80(v219, &v220);
  int64_t v16 = 0;
  sub_249882788((uint64_t)v223, (uint64_t)v218, &qword_2696DDA40);
  if (sub_24987BDBC((uint64_t)v218) == 1)
  {
    uint64_t v199 = 0;
    v200 = 0;
  }
  else
  {
    sub_249882788((uint64_t)v223, (uint64_t)v210, &qword_2696DDA40);
    memcpy(v209, v210, sizeof(v209));
    sub_249882274((uint64_t)v210);
    sub_249A06F80(v209, &v211);
    uint64_t v199 = v211;
    v200 = v212;
  }
  uint64_t v193 = v220;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v12;
  uint64_t v18 = v194;
  *(unsigned char *)(v17 + 24) = v194;
  *(void *)(v17 + 32) = v14;
  uint64_t v19 = v221;
  id v20 = v12;
  id v21 = v14;
  id v22 = v20;
  id v23 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v24 = sub_2498808F4(v19, v22, v18, v23);
  v184[1] = v17;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_2498D67DC(v24);
  id v190 = v22;
  uint64_t v185 = v25;
  if (v199)
  {
    id v26 = v22;
    id v27 = v23;
    uint64_t v29 = v199;
    id v28 = v200;
    sub_249882C98(v199);
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = v18;
    uint64_t v32 = v28;
    uint64_t v33 = sub_2498808F4(v30, v26, v31, v27);
    swift_bridgeObjectRelease();

    uint64_t v34 = sub_2498D67DC(v33);
    sub_249882B2C(v29);
    uint64_t v35 = v185;
  }
  else
  {
    uint64_t v35 = v25;
    uint64_t v34 = MEMORY[0x263F8EE88];
    uint64_t v32 = v200;
  }
  if (*(void *)(v34 + 16) <= *(void *)(v35 + 16) >> 3)
  {
    v210[0] = v35;
    swift_bridgeObjectRetain();
    uint64_t v36 = v35;
    sub_24987EF94(v34);
    uint64_t v188 = v210[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = v35;
    uint64_t v188 = sub_24987F13C(v34, v35);
  }
  if (*(void *)(v36 + 16) <= *(void *)(v34 + 16) >> 3)
  {
    v210[0] = v34;
    swift_bridgeObjectRetain();
    sub_24987EF94(v36);
    uint64_t v37 = v210[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = sub_24987F13C(v36, v34);
  }
  swift_bridgeObjectRetain();
  uint64_t v187 = sub_24987F5AC(v34, v36);
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v37 + 56);
  uint64_t v191 = v37 + 56;
  uint64_t v39 = 1 << *(unsigned char *)(v37 + 32);
  uint64_t v40 = -1;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  unint64_t v41 = v40 & v38;
  int64_t v192 = (unint64_t)(v39 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v42 = 0;
  id v201 = v23;
  uint64_t v196 = v37;
  uint64_t v43 = v224;
  if (!v41) {
    goto LABEL_19;
  }
LABEL_18:
  unint64_t v44 = __clz(__rbit64(v41));
  uint64_t v45 = (v41 - 1) & v41;
  for (unint64_t i = v44 | (v42 << 6); ; unint64_t i = __clz(__rbit64(v48)) + (v42 << 6))
  {
    unint64_t v204 = v45;
    v205 = (char *)v42;
    if (!v199 || !v32[2]) {
      goto LABEL_205;
    }
    uint64_t v50 = v43;
    uint64_t v51 = (uint64_t *)(*(void *)(v37 + 48) + 16 * i);
    uint64_t v52 = *v51;
    uint64_t v53 = v51[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v54 = sub_2498EF01C(v52, v53);
    if ((v55 & 1) == 0) {
      goto LABEL_204;
    }
    uint64_t v56 = *(void *)(v32[7] + 32 * v54 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v206 = v56;
    unint64_t v57 = (void *)sub_249AED0A8();
    id v58 = objc_msgSend(v57, sel_lastPathComponent);
    uint64_t v59 = sub_249AED0D8();
    unint64_t v61 = v60;

    uint64_t v62 = HIBYTE(v61) & 0xF;
    uint64_t v195 = v59;
    if ((v61 & 0x2000000000000000) == 0) {
      uint64_t v62 = v59 & 0xFFFFFFFFFFFFLL;
    }
    if (!v62)
    {
      swift_bridgeObjectRelease();
      sub_249AEB4C8();
      sub_2498F0724(MEMORY[0x263F8EE78]);
      sub_249881CF0((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
      uint64_t v91 = v186;
      sub_249AEB708();
      sub_249AEB458();
      (*(void (**)(char *, uint64_t))(v189 + 8))(v50, v91);
      swift_willThrow();

      swift_release();
      swift_release();

      sub_249882B2C(v199);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_74:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v202 = v61;
    id v203 = v57;
    id v63 = objc_msgSend(v57, sel_stringByDeletingLastPathComponent);
    sub_249AED0D8();
    uint64_t v65 = v64;

    uint64_t v66 = (void *)sub_249AED0A8();
    id v67 = objc_msgSend(v66, sel_pathComponents);

    uint64_t v68 = sub_249AED428();
    uint64_t v69 = *(void *)(v68 + 16);
    int64_t v207 = v16;
    if (!v69)
    {
      id v79 = v208;
      swift_bridgeObjectRelease();
LABEL_45:
      unsigned int v80 = objc_msgSend(v79, sel_isDirectory);
      uint64_t v32 = v200;
      id v81 = v201;
      uint64_t v82 = v202;
      if (!v80)
      {
        swift_bridgeObjectRelease();
LABEL_53:

        swift_bridgeObjectRelease();
        uint64_t v43 = v224;
        goto LABEL_70;
      }
      sub_24987BE44();
      id v83 = v79;
      char v84 = sub_249AED888();

      swift_bridgeObjectRelease();
      if (v84) {
        goto LABEL_53;
      }
      id v85 = objc_msgSend(v83, sel_fileWrappers);
      if (!v85)
      {
        swift_bridgeObjectRelease();

        goto LABEL_67;
      }
      uint64_t v86 = v85;
      uint64_t v87 = sub_249AECE98();

      if (!*(void *)(v87 + 16))
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
LABEL_67:
        uint64_t v43 = v224;
LABEL_69:

LABEL_70:
        id v23 = v81;
        int64_t v16 = v207;
        goto LABEL_71;
      }
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_2498EF01C(v195, v82);
      uint64_t v43 = v224;
      if ((v89 & 1) == 0)
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_69;
      }
      id v90 = *(id *)(*(void *)(v87 + 56) + 8 * v88);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v83, sel_removeFileWrapper_, v90);
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v37 = v196;
      unint64_t v41 = v204;
      int64_t v42 = (int64_t)v205;
      id v23 = v81;
      int64_t v16 = v207;
      if (!v204) {
        goto LABEL_19;
      }
      goto LABEL_18;
    }
    uint64_t v197 = v65;
    id v70 = v208;
    uint64_t v71 = (uint64_t *)(v68 + 40);
    uint64_t v43 = v224;
    while (1)
    {
      uint64_t v73 = *(v71 - 1);
      uint64_t v72 = *v71;
      swift_bridgeObjectRetain();
      if (!objc_msgSend(v70, sel_isDirectory))
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_60;
      }
      id v74 = objc_msgSend(v70, sel_fileWrappers);
      if (!v74)
      {

LABEL_57:
        uint64_t v43 = v224;
        goto LABEL_59;
      }
      uint64_t v75 = v74;
      sub_24987BE44();
      uint64_t v76 = sub_249AECE98();

      if (!*(void *)(v76 + 16))
      {

        swift_bridgeObjectRelease();
        goto LABEL_57;
      }
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_2498EF01C(v73, v72);
      uint64_t v43 = v224;
      if ((v78 & 1) == 0) {
        break;
      }
      v71 += 2;
      id v79 = *(id *)(*(void *)(v76 + 56) + 8 * v77);

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      id v70 = v79;
      if (!--v69)
      {
        swift_bridgeObjectRelease();
        goto LABEL_45;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_59:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_60:
    swift_bridgeObjectRelease();
    int64_t v16 = v207;
    uint64_t v32 = v200;
    id v23 = v201;
LABEL_71:
    swift_bridgeObjectRelease();
    uint64_t v37 = v196;
    unint64_t v41 = v204;
    int64_t v42 = (int64_t)v205;
    if (v204) {
      goto LABEL_18;
    }
LABEL_19:
    BOOL v47 = __OFADD__(v42++, 1);
    if (v47)
    {
      __break(1u);
LABEL_199:
      __break(1u);
      goto LABEL_200;
    }
    if (v42 >= v192) {
      break;
    }
    unint64_t v48 = *(void *)(v191 + 8 * v42);
    if (v48) {
      goto LABEL_29;
    }
    int64_t v49 = v42 + 1;
    if (v42 + 1 >= v192) {
      break;
    }
    unint64_t v48 = *(void *)(v191 + 8 * v49);
    if (v48) {
      goto LABEL_28;
    }
    int64_t v49 = v42 + 2;
    if (v42 + 2 >= v192) {
      break;
    }
    unint64_t v48 = *(void *)(v191 + 8 * v49);
    if (v48) {
      goto LABEL_28;
    }
    int64_t v49 = v42 + 3;
    if (v42 + 3 >= v192) {
      break;
    }
    unint64_t v48 = *(void *)(v191 + 8 * v49);
    if (!v48)
    {
      while (1)
      {
        int64_t v42 = v49 + 1;
        if (__OFADD__(v49, 1)) {
          break;
        }
        if (v42 >= v192) {
          goto LABEL_75;
        }
        unint64_t v48 = *(void *)(v191 + 8 * v42);
        ++v49;
        if (v48) {
          goto LABEL_29;
        }
      }
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
      goto LABEL_203;
    }
LABEL_28:
    int64_t v42 = v49;
LABEL_29:
    uint64_t v45 = (v48 - 1) & v48;
  }
LABEL_75:
  swift_release();
  uint64_t v92 = *(void *)(v188 + 56);
  uint64_t v206 = v188 + 56;
  uint64_t v93 = 1 << *(unsigned char *)(v188 + 32);
  uint64_t v94 = -1;
  if (v93 < 64) {
    uint64_t v94 = ~(-1 << v93);
  }
  unint64_t v95 = v94 & v92;
  int64_t v207 = (unint64_t)(v93 + 63) >> 6;
  uint64_t v96 = (char *)v221;
  swift_bridgeObjectRetain();
  int64_t v97 = 0;
  v224 = v96;
  if (!v95) {
    goto LABEL_79;
  }
LABEL_78:
  unint64_t v98 = __clz(__rbit64(v95));
  v95 &= v95 - 1;
  for (unint64_t j = v98 | (v97 << 6); ; unint64_t j = __clz(__rbit64(v100)) + (v97 << 6))
  {
    uint64_t v103 = (uint64_t *)(*(void *)(v188 + 48) + 16 * j);
    uint64_t v104 = v103[1];
    uint64_t v105 = v193;
    if (!*(void *)(v193 + 16))
    {
      memset(v209, 0, 40);
      swift_bridgeObjectRetain();
      goto LABEL_215;
    }
    uint64_t v106 = *v103;
    swift_bridgeObjectRetain_n();
    uint64_t v107 = sub_2498EF01C(v106, v104);
    if (v108) {
      sub_249882C34(*(void *)(v105 + 56) + 40 * v107, (uint64_t)v209);
    }
    else {
      memset(v209, 0, 40);
    }
    swift_bridgeObjectRelease();
    if (!*((void *)&v209[1] + 1)) {
      goto LABEL_215;
    }
    int64_t v109 = v97;
    sub_249882BCC(v209, (uint64_t)v210);
    if (!*((void *)v96 + 2) || (uint64_t v110 = sub_2498EF01C(v106, v104), (v111 & 1) == 0))
    {
      swift_bridgeObjectRelease();

      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
      goto LABEL_216;
    }
    uint64_t v112 = *((void *)v96 + 7) + 32 * v110;
    uint64_t v113 = *(void *)v112;
    uint64_t v114 = *(void *)(v112 + 8);
    char v115 = *(unsigned char *)(v112 + 16);
    uint64_t v116 = *(void *)(v112 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v211 = (uint64_t)v190;
    LOBYTE(v212) = v194;
    id v213 = v201;
    *(void *)&v209[0] = v113;
    *((void *)&v209[0] + 1) = v114;
    LOBYTE(v209[1]) = v115;
    *((void *)&v209[1] + 1) = v116;
    sub_24987DBB0(v210, (uint64_t *)v209, (uint64_t)v208);
    if (v16)
    {
      swift_release();

      swift_bridgeObjectRelease();
      sub_249882B2C(v199);

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_74;
    }
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
    swift_bridgeObjectRelease();
    uint64_t v96 = v224;
    int64_t v97 = v109;
    if (v95) {
      goto LABEL_78;
    }
LABEL_79:
    BOOL v47 = __OFADD__(v97++, 1);
    if (v47) {
      goto LABEL_199;
    }
    if (v97 >= v207) {
      break;
    }
    unint64_t v100 = *(void *)(v206 + 8 * v97);
    id v101 = v208;
    if (!v100)
    {
      int64_t v102 = v97 + 1;
      if (v97 + 1 >= v207) {
        goto LABEL_106;
      }
      unint64_t v100 = *(void *)(v206 + 8 * v102);
      if (!v100)
      {
        int64_t v102 = v97 + 2;
        if (v97 + 2 >= v207) {
          goto LABEL_106;
        }
        unint64_t v100 = *(void *)(v206 + 8 * v102);
        if (!v100)
        {
          int64_t v102 = v97 + 3;
          if (v97 + 3 >= v207) {
            goto LABEL_106;
          }
          unint64_t v100 = *(void *)(v206 + 8 * v102);
          if (!v100)
          {
            while (1)
            {
              int64_t v97 = v102 + 1;
              if (__OFADD__(v102, 1)) {
                goto LABEL_202;
              }
              if (v97 >= v207) {
                goto LABEL_106;
              }
              unint64_t v100 = *(void *)(v206 + 8 * v97);
              ++v102;
              if (v100) {
                goto LABEL_89;
              }
            }
          }
        }
      }
      int64_t v97 = v102;
    }
LABEL_89:
    unint64_t v95 = (v100 - 1) & v100;
  }
  id v101 = v208;
LABEL_106:
  swift_release();
  uint64_t v117 = *(void *)(v185 + 16);
  swift_bridgeObjectRelease();
  uint64_t v118 = swift_bridgeObjectRetain();
  uint64_t v119 = *(void *)(sub_2498D67DC(v118) + 16);
  swift_bridgeObjectRelease();
  LODWORD(v195) = v117 != v119;
  if (v117 != v119)
  {
    swift_retain();
    uint64_t v120 = swift_bridgeObjectRetain();
    uint64_t v121 = sub_249880D48(v120, (uint64_t (*)(uint64_t, uint64_t, void *))sub_249882B00);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v122 = sub_2498D67DC(v121);
    v123 = sub_2498E91BC(v122);
    swift_bridgeObjectRelease();
    sub_249A07228((uint64_t)v123);
    swift_release();
  }
  int64_t v124 = 0;
  uint64_t v125 = *(void *)(v187 + 56);
  uint64_t v197 = v187 + 56;
  uint64_t v126 = 1 << *(unsigned char *)(v187 + 32);
  uint64_t v127 = -1;
  if (v126 < 64) {
    uint64_t v127 = ~(-1 << v126);
  }
  unint64_t v128 = v127 & v125;
  int64_t v198 = (unint64_t)(v126 + 63) >> 6;
  while (2)
  {
    if (v128)
    {
      unint64_t v131 = __clz(__rbit64(v128));
      uint64_t v132 = (void *)((v128 - 1) & v128);
      unint64_t v133 = v131 | (v124 << 6);
      goto LABEL_127;
    }
    BOOL v47 = __OFADD__(v124++, 1);
    if (v47) {
      goto LABEL_201;
    }
    if (v124 >= v198)
    {
LABEL_174:
      swift_release();
      sub_249882B2C(v199);
      swift_bridgeObjectRelease();
      if (v195)
      {
        int64_t v166 = v16;
        swift_bridgeObjectRelease();
      }
      else
      {
        int64_t v166 = v16;
        uint64_t v167 = *(void *)(v188 + 16);
        swift_bridgeObjectRelease();
        if (!v167)
        {
          uint64_t v183 = *(void *)(v196 + 16);
          swift_bridgeObjectRelease();
          if (!v183)
          {
            sub_249882788((uint64_t)v223, (uint64_t)v210, &qword_2696DDA40);
            if (sub_24987BDBC((uint64_t)v210) != 1)
            {

              swift_release();
LABEL_197:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              return;
            }
          }
LABEL_178:
          uint64_t v168 = v221;
          unsigned __int8 v169 = v194;
          if (v194 == 2) {
            uint64_t v170 = 0xD000000000000015;
          }
          else {
            uint64_t v170 = 0xD000000000000013;
          }
          if (v194 == 2) {
            uint64_t v171 = 0x8000000249B14280;
          }
          else {
            uint64_t v171 = 0x8000000249B14260;
          }
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v172 = objc_msgSend(v101, sel_fileWrappers);
          if (!v172) {
            goto LABEL_191;
          }
          v173 = v172;
          sub_24987BE44();
          uint64_t v174 = sub_249AECE98();

          if (*(void *)(v174 + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v175 = sub_2498EF01C(v170, v171);
            if (v176)
            {
              id v177 = *(id *)(*(void *)(v174 + 56) + 8 * v175);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              objc_msgSend(v101, sel_removeFileWrapper_, v177);

LABEL_190:
              unsigned __int8 v169 = v194;
LABEL_191:
              swift_bridgeObjectRetain();
              uint64_t v178 = sub_2499B2878(v169, v168);
              id v180 = v190;
              if (v166)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease_n();
                swift_bridgeObjectRelease();

                return;
              }
              uint64_t v181 = v178;
              unint64_t v182 = v179;
              swift_bridgeObjectRelease();
              NSFileWrapper.addRegularFile(withContents:fileName:)(v181, v182, v170, v171);
              swift_bridgeObjectRelease();
              sub_249882104(v181, v182);

              swift_release();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v101 = v208;
              goto LABEL_197;
            }
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          goto LABEL_190;
        }
      }
      swift_bridgeObjectRelease();
      goto LABEL_178;
    }
    unint64_t v134 = *(void *)(v197 + 8 * v124);
    if (!v134)
    {
      int64_t v135 = v124 + 1;
      if (v124 + 1 >= v198) {
        goto LABEL_174;
      }
      unint64_t v134 = *(void *)(v197 + 8 * v135);
      if (v134) {
        goto LABEL_125;
      }
      int64_t v135 = v124 + 2;
      if (v124 + 2 >= v198) {
        goto LABEL_174;
      }
      unint64_t v134 = *(void *)(v197 + 8 * v135);
      if (v134) {
        goto LABEL_125;
      }
      int64_t v135 = v124 + 3;
      if (v124 + 3 >= v198) {
        goto LABEL_174;
      }
      unint64_t v134 = *(void *)(v197 + 8 * v135);
      if (v134)
      {
LABEL_125:
        int64_t v124 = v135;
        goto LABEL_126;
      }
      while (1)
      {
        int64_t v124 = v135 + 1;
        if (__OFADD__(v135, 1)) {
          break;
        }
        if (v124 >= v198)
        {
          id v101 = v208;
          goto LABEL_174;
        }
        unint64_t v134 = *(void *)(v197 + 8 * v124);
        ++v135;
        if (v134) {
          goto LABEL_126;
        }
      }
LABEL_203:
      __break(1u);
LABEL_204:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v23 = v201;
LABEL_205:

      goto LABEL_213;
    }
LABEL_126:
    uint64_t v132 = (void *)((v134 - 1) & v134);
    unint64_t v133 = __clz(__rbit64(v134)) + (v124 << 6);
LABEL_127:
    v136 = (uint64_t *)(*(void *)(v187 + 48) + 16 * v133);
    uint64_t v137 = v136[1];
    uint64_t v138 = v221;
    if (!*(void *)(v221 + 16))
    {

      swift_bridgeObjectRetain();
      goto LABEL_216;
    }
    id v203 = v132;
    uint64_t v139 = *v136;
    swift_bridgeObjectRetain_n();
    uint64_t v140 = sub_2498EF01C(v139, v137);
    if ((v141 & 1) == 0) {
      goto LABEL_212;
    }
    uint64_t v202 = v138;
    uint64_t v142 = *(void *)(v138 + 56) + 32 * v140;
    uint64_t v144 = *(void *)v142;
    v143 = *(void **)(v142 + 8);
    int v145 = *(unsigned __int8 *)(v142 + 16);
    v224 = *(char **)(v142 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (!v199) {
      goto LABEL_212;
    }
    v146 = v200;
    if (!v200[2]) {
      goto LABEL_212;
    }
    unint64_t v204 = v124;
    int64_t v207 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v147 = sub_2498EF01C(v139, v137);
    if (v148)
    {
      uint64_t v149 = v146[7] + 32 * v147;
      v151 = *(void **)v149;
      v150 = *(void **)(v149 + 8);
      LODWORD(v206) = *(unsigned __int8 *)(v149 + 16);
      v205 = *(char **)(v149 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v152 = v193;
      if (*(void *)(v193 + 16) && (uint64_t v153 = sub_2498EF01C(v139, v137), (v154 & 1) != 0)) {
        sub_249882C34(*(void *)(v152 + 56) + 40 * v153, (uint64_t)v209);
      }
      else {
        memset(v209, 0, 40);
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v209[1] + 1))
      {
        sub_249882BCC(v209, (uint64_t)v210);
        BOOL v155 = (void *)v144 == v151 && v143 == v150;
        if (v155 || (sub_249AEE0D8() & 1) != 0)
        {
          if (v145) {
            uint64_t v156 = 1953394534;
          }
          else {
            uint64_t v156 = 0x6567616D69;
          }
          if (v145) {
            unint64_t v157 = 0xE400000000000000;
          }
          else {
            unint64_t v157 = 0xE500000000000000;
          }
          if (v206) {
            uint64_t v158 = 1953394534;
          }
          else {
            uint64_t v158 = 0x6567616D69;
          }
          if (v206) {
            unint64_t v159 = 0xE400000000000000;
          }
          else {
            unint64_t v159 = 0xE500000000000000;
          }
          if (v156 == v158 && v157 == v159)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v161 = sub_249AEE0D8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v161 & 1) == 0) {
              goto LABEL_162;
            }
          }
          if (v224 != v205) {
            goto LABEL_162;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          v129._countAndFlagsBits = v144;
          v129._object = v143;
          id v101 = v208;
          uint64_t v130 = NSFileWrapper.child(at:)(v129);
          swift_bridgeObjectRelease();

          if (v130)
          {
            __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
            swift_bridgeObjectRelease();
            int64_t v16 = v207;
LABEL_113:
            unint64_t v128 = (unint64_t)v203;
            int64_t v124 = v204;
            continue;
          }
          uint64_t v211 = (uint64_t)v190;
          LOBYTE(v212) = v194;
          id v164 = v201;
          id v213 = v201;
          *(void *)&v209[0] = v144;
          *((void *)&v209[0] + 1) = v143;
          LOBYTE(v209[1]) = v145;
          *((void *)&v209[1] + 1) = v224;
          int64_t v165 = v207;
          sub_24987DBB0(v210, (uint64_t *)v209, (uint64_t)v101);
          int64_t v16 = v165;
          if (!v165)
          {
            __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
            swift_bridgeObjectRelease();
            goto LABEL_113;
          }

          swift_bridgeObjectRelease();
          sub_249882B2C(v199);

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
        }
        else
        {
LABEL_162:
          id v215 = v190;
          char v216 = v194;
          id v162 = v201;
          id v217 = v201;
          *(void *)&v209[0] = v144;
          *((void *)&v209[0] + 1) = v143;
          LOBYTE(v209[1]) = v145;
          *((void *)&v209[1] + 1) = v224;
          uint64_t v211 = (uint64_t)v151;
          v212 = v150;
          LOBYTE(v213) = v206;
          v214 = v205;
          int64_t v163 = v207;
          id v101 = v208;
          sub_24987DFB8(v210, (uint64_t)v209, (uint64_t)&v211, (uint64_t)v208);
          int64_t v16 = v163;
          if (!v163)
          {
            __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            LODWORD(v195) = 1;
            goto LABEL_113;
          }

          swift_bridgeObjectRelease();
          sub_249882B2C(v199);

          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v210);
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_74;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_215:

      sub_249882B6C((uint64_t)v209);
      goto LABEL_216;
    }
    break;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_212:
  swift_bridgeObjectRelease();

LABEL_213:
LABEL_216:
  sub_249AEDC58();
  __break(1u);
}

void sub_24987D860()
{
  uint64_t v0 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_249AEB4E8();
  uint64_t v23 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_249AED0A8();
  id v5 = objc_msgSend(v4, sel_lastPathComponent);
  uint64_t v6 = sub_249AED0D8();
  unint64_t v8 = v7;

  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
    swift_bridgeObjectRelease();
    sub_249AEB4C8();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_249881CF0((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
    swift_willThrow();

    return;
  }
  id v10 = objc_msgSend(v4, sel_stringByDeletingLastPathComponent);
  uint64_t v11 = sub_249AED0D8();
  unsigned int v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  id v15 = NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v14, 0);
  swift_bridgeObjectRelease();
  if (v15)
  {
    id v16 = objc_msgSend(v15, sel_fileWrappers);
    if (!v16)
    {

      swift_bridgeObjectRelease();
      return;
    }
    uint64_t v17 = v16;
    sub_24987BE44();
    uint64_t v18 = sub_249AECE98();

    if (*(void *)(v18 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_2498EF01C(v6, v8);
      if (v20)
      {
        id v21 = *(id *)(*(void *)(v18 + 56) + 8 * v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        objc_msgSend(v15, sel_removeFileWrapper_, v21);

        swift_bridgeObjectRelease();
        return;
      }

      swift_bridgeObjectRelease_n();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  else
  {
  }
  swift_bridgeObjectRelease();
}

void sub_24987DBB0(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v6 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_249AEB4E8();
  uint64_t v38 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = *a2;
  char v12 = *(unsigned char *)(v3 + 8);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  char v39 = v12;
  uint64_t v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 40))(&v39, v13, v14);
  if (!v15)
  {
    sub_249AEB488();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_249881CF0((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v9);
    swift_willThrow();
    return;
  }
  id v16 = (void *)v15;
  uint64_t v34 = v8;
  uint64_t v35 = v11;
  uint64_t v17 = v38;
  uint64_t v18 = (void *)sub_249AED0A8();
  id v19 = objc_msgSend(v18, sel_lastPathComponent);
  uint64_t v20 = sub_249AED0D8();
  unint64_t v22 = v21;

  swift_bridgeObjectRelease();
  uint64_t v23 = HIBYTE(v22) & 0xF;
  if ((v22 & 0x2000000000000000) == 0) {
    uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
  }
  if (!v23)
  {
    sub_249AEB4C8();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_249881CF0((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    uint64_t v31 = v35;
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v31, v9);
LABEL_11:
    swift_willThrow();

    return;
  }
  id v24 = objc_msgSend(v18, sel_stringByDeletingLastPathComponent);
  uint64_t v25 = sub_249AED0D8();
  id v27 = v26;

  v28._countAndFlagsBits = v25;
  v28._object = v27;
  uint64_t v29 = NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v28, 1);
  swift_bridgeObjectRelease();
  if (!v29)
  {
    uint64_t v32 = v9;
    sub_249AEB488();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_249881CF0((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    uint64_t v33 = v35;
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v33, v32);
    goto LABEL_11;
  }
  NSFileWrapper.checkedAddFileWrapper(_:)((NSFileWrapper)v16);

  if (!v30) {
    swift_bridgeObjectRelease();
  }
}

void sub_24987DFB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v61 = a4;
  uint64_t v8 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v8 - 8);
  id v58 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_249AEB4E8();
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v60 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v57 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)a2;
  uint64_t v62 = *(void **)(a2 + 8);
  int v13 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)a3;
  uint64_t v15 = *(void **)(a3 + 8);
  char v17 = *(unsigned char *)(a3 + 16);
  uint64_t v18 = *(void *)(a3 + 24);
  uint64_t v19 = *v4;
  int v20 = *((unsigned __int8 *)v4 + 8);
  uint64_t v21 = v4[2];
  if (v13) {
    uint64_t v22 = 1953394534;
  }
  else {
    uint64_t v22 = 0x6567616D69;
  }
  if (v13) {
    unint64_t v23 = 0xE400000000000000;
  }
  else {
    unint64_t v23 = 0xE500000000000000;
  }
  if (*(unsigned char *)(a3 + 16)) {
    uint64_t v24 = 1953394534;
  }
  else {
    uint64_t v24 = 0x6567616D69;
  }
  if (*(unsigned char *)(a3 + 16)) {
    unint64_t v25 = 0xE400000000000000;
  }
  else {
    unint64_t v25 = 0xE500000000000000;
  }
  if (v22 == v24 && v23 == v25)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v52 = v21;
    int v53 = v20;
    uint64_t v54 = v19;
    uint64_t v55 = v14;
    uint64_t v56 = a1;
    char v26 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      uint64_t v63 = v16;
      uint64_t v64 = v15;
      char v65 = v17;
      uint64_t v66 = v18;
      uint64_t v28 = v61;
      uint64_t v29 = v70;
      sub_24987D860();
      if (!v29)
      {
        char v68 = v53;
        uint64_t v69 = v52;
        uint64_t v63 = v12;
        uint64_t v64 = v62;
        char v65 = v13;
        uint64_t v66 = v55;
        uint64_t v67 = v54;
        sub_24987DBB0(v56, &v63, v28);
      }
      return;
    }
  }
  id v27 = v15;
  if ((v12 != v16 || v62 != v15) && (sub_249AEE0D8() & 1) == 0)
  {
    uint64_t v30 = (void *)sub_249AED0A8();
    id v31 = objc_msgSend(v30, sel_lastPathComponent);

    if (!v31)
    {
      sub_249AED0D8();
      id v31 = (id)sub_249AED0A8();
      swift_bridgeObjectRelease();
    }
    uint64_t v32 = (void *)sub_249AED0A8();
    id v33 = objc_msgSend(v32, sel_stringByDeletingPathExtension);

    uint64_t v34 = sub_249AED0D8();
    uint64_t v36 = v35;

    v37._countAndFlagsBits = v34;
    v37._object = v36;
    uint64_t v38 = NSFileWrapper.child(at:)(v37);
    swift_bridgeObjectRelease();
    if (v38)
    {
      char v39 = (void *)sub_249AED0A8();
      id v40 = objc_msgSend(v39, sel_stringByDeletingPathExtension);

      uint64_t v41 = sub_249AED0D8();
      uint64_t v43 = v42;

      v44._countAndFlagsBits = v41;
      v44._object = v43;
      uint64_t v45 = NSFileWrapper.child(at:)(v44);
      swift_bridgeObjectRelease();
      if (v45)
      {
        v46._countAndFlagsBits = v16;
        v46._object = v27;
        unint64_t v47 = (unint64_t)NSFileWrapper.child(at:)(v46);
        if (v47)
        {
          unint64_t v48 = (void *)v47;
          objc_msgSend(v38, sel_removeFileWrapper_, v47);
          objc_msgSend(v48, sel_setPreferredFilename_, v31);

          NSFileWrapper.checkedAddFileWrapper(_:)((NSFileWrapper)v48);
          if (!v49) {
            swift_bridgeObjectRelease();
          }
          return;
        }

        uint64_t v38 = v45;
      }
    }
    sub_249AEB4C8();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_249881CF0((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    uint64_t v50 = v57;
    uint64_t v51 = v60;
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v50, v51);
    swift_willThrow();
  }
}

uint64_t sub_24987E45C(uint64_t a1, uint64_t a2)
{
  return sub_24987E75C(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_24987E480()
{
  return sub_249AEB858();
}

uint64_t sub_24987E488(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = 0;
  char v7 = 1;
  uint64_t result = MEMORY[0x24C5AC9E0](a1, &v6);
  char v4 = v7;
  uint64_t v5 = v6;
  if (v7) {
    uint64_t v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return result;
}

uint64_t sub_24987E4DC(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = 0;
  char v8 = 1;
  char v3 = MEMORY[0x24C5AC9F0](a1, &v7);
  char v4 = v8;
  uint64_t v5 = v7;
  if (v8) {
    uint64_t v5 = 0;
  }
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v4;
  return v3 & 1;
}

void sub_24987E534(double *a1@<X8>)
{
  *a1 = MEMORY[0x24C5ACA00]();
}

BOOL sub_24987E55C(void *a1, void *a2)
{
  return *a1 == *a2;
}

void *sub_24987E570@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_24987E580(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_24987E598(double *a1, double *a2)
{
  return *a1 == *a2;
}

double sub_24987E5B0@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_24987E5BC()
{
  return MEMORY[0x270F9DDC0](*v0);
}

uint64_t sub_24987E5C4()
{
  return sub_249AEE378();
}

uint64_t sub_24987E5F8()
{
  return sub_249AEE328();
}

uint64_t sub_24987E608(uint64_t a1, id *a2)
{
  uint64_t result = sub_249AED0B8();
  *a2 = 0;
  return result;
}

uint64_t sub_24987E680(uint64_t a1, id *a2)
{
  char v3 = sub_249AED0C8();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_24987E700@<X0>(uint64_t *a1@<X8>)
{
  sub_249AED0D8();
  uint64_t v2 = sub_249AED0A8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24987E744(uint64_t a1, uint64_t a2)
{
  return sub_24987E75C(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_24987E75C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_249AED0D8();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24987E7A0()
{
  sub_249AED0D8();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24987E7F4()
{
  sub_249AED0D8();
  sub_249AEE338();
  sub_249AECF78();
  uint64_t v0 = sub_249AEE388();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24987E868()
{
  uint64_t v0 = sub_249AED0D8();
  uint64_t v2 = v1;
  if (v0 == sub_249AED0D8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24987E8F4()
{
  sub_249881CF0(&qword_2696DD9E8, type metadata accessor for SystemDesign);
  sub_249881CF0(&qword_2696DD9F0, type metadata accessor for SystemDesign);

  return sub_249AEDCE8();
}

uint64_t sub_24987E9B0()
{
  return sub_249AEDCE8();
}

uint64_t sub_24987EA78()
{
  sub_249881CF0(&qword_2696DDA08, type metadata accessor for AttributeName);
  sub_249881CF0(&qword_2696DDA10, type metadata accessor for AttributeName);

  return sub_249AEDCE8();
}

uint64_t sub_24987EB34()
{
  sub_249881CF0(&qword_2696DD9F8, type metadata accessor for TraitKey);
  sub_249881CF0(&qword_2696DDA00, type metadata accessor for TraitKey);

  return sub_249AEDCE8();
}

uint64_t sub_24987EBF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_249AED0A8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24987EC38@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AED0D8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24987EC64()
{
  sub_249881CF0(&qword_2696DDA98, type metadata accessor for Key);
  sub_249881CF0((unint64_t *)&unk_2696DDAA0, type metadata accessor for Key);

  return sub_249AEDCE8();
}

uint64_t sub_24987ED20@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_249882F28(a2, a3);
      uint64_t v10 = (char *)sub_249AEB658();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_249AEB678();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_249AEB668();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x24987EF84);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_249882104(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      char v17 = (char *)sub_249AEB658();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_249AEB678();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_249AEB668();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_24987EF94(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_24987FC74(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_24987F13C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v43 = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_249882CD8();
                  return v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      int64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_249AEE338();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      uint64_t v19 = sub_249AEE388();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    int v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_249AEE0D8() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        __int16 v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_249AEE0D8() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_24987FE04((uint64_t)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), v30, v2, v21, &v38);
      swift_release();
      sub_249882CD8();
    }
    else
    {
      id v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      uint64_t v32 = sub_24987FE04((uint64_t)v33, v30, v2, v21, &v38);
      swift_release();
      sub_249882CD8();
      MEMORY[0x24C5B0110](v33, -1, -1);
    }
    return v32;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_24987F5AC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_24987F734((uint64_t)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_24987F734((uint64_t)v8, v5, a2, v3);
    swift_release();
    MEMORY[0x24C5B0110](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_24987F734(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        sub_249AEE338();
        swift_bridgeObjectRetain();
        sub_249AECF78();
        uint64_t v20 = sub_249AEE388();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      __int16 v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (sub_249AEE0D8() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          size_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (sub_249AEE0D8() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    Swift::String v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    sub_249AEE338();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    uint64_t v47 = sub_249AEE388();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (sub_249AEE0D8() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_249A4FD78(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        uint64_t v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (sub_249AEE0D8() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_24987FC74(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  uint64_t v6 = sub_249AEE388();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_249AEE0D8() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_249AEE0D8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_249926E1C();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_2498800FC(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_24987FE04(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  unint64_t v39 = (unint64_t *)result;
  *(void *)(result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return sub_249A4FD78(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_249AEE338();
        swift_bridgeObjectRetain();
        sub_249AECF78();
        uint64_t v22 = sub_249AEE388();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        uint64_t v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_249AEE0D8() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          int64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_249AEE0D8() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = swift_bridgeObjectRelease();
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return MEMORY[0x263F8EE88];
  }
}

unint64_t sub_2498800FC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_249AED9A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_249AEE338();
        swift_bridgeObjectRetain();
        sub_249AECF78();
        uint64_t v10 = sub_249AEE388();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          int64_t v13 = (_OWORD *)(v12 + 16 * v2);
          int64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *int64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_2498802C4(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4, unsigned __int8 a5, void *a6)
{
  uint64_t result = swift_allocObject();
  uint64_t v13 = 0;
  int64_t v14 = 0;
  uint64_t v15 = a3 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(a3 + 64);
  *(void *)(result + 16) = a4;
  *(unsigned char *)(result + 24) = a5;
  *(void *)(result + 32) = a6;
  int64_t v19 = (unint64_t)(v16 + 63) >> 6;
  while (v18)
  {
    unint64_t v20 = __clz(__rbit64(v18));
    v18 &= v18 - 1;
    unint64_t v21 = v20 | (v14 << 6);
LABEL_21:
    uint64_t v25 = *(void *)(*(void *)(a3 + 56) + 32 * v21 + 24);
    if (a5 == 1)
    {
      if ((a5 & v25) != 0)
      {
LABEL_24:
        *(unint64_t *)((char *)a1 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
        if (__OFADD__(v13++, 1))
        {
          __break(1u);
LABEL_27:
          id v27 = a4;
          id v28 = a6;
          uint64_t v29 = sub_249929B64(a1, a2, v13, a3);

          swift_release();
          return v29;
        }
      }
    }
    else if (a5 != 2 || (v25 & 2) != 0)
    {
      goto LABEL_24;
    }
  }
  int64_t v22 = v14 + 1;
  if (__OFADD__(v14, 1))
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v22 >= v19) {
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v15 + 8 * v22);
  ++v14;
  if (v23) {
    goto LABEL_20;
  }
  int64_t v14 = v22 + 1;
  if (v22 + 1 >= v19) {
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v15 + 8 * v14);
  if (v23) {
    goto LABEL_20;
  }
  int64_t v14 = v22 + 2;
  if (v22 + 2 >= v19) {
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v15 + 8 * v14);
  if (v23)
  {
LABEL_20:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v14 << 6);
    goto LABEL_21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v19) {
    goto LABEL_27;
  }
  unint64_t v23 = *(void *)(v15 + 8 * v24);
  if (v23)
  {
    int64_t v14 = v24;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v14 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v14 >= v19) {
      goto LABEL_27;
    }
    unint64_t v23 = *(void *)(v15 + 8 * v14);
    ++v24;
    if (v23) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2498804CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_24987ED20((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_2498805A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_249AEB658();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_249AEB678();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_249AEB668();
  sub_24987ED20(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_24988065C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x2498808C4);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_249882F28(a3, a4);
                  sub_249882F28(a1, a2);
                  char v17 = sub_2498805A4((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_249882104(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_249882F28(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_2498805A4(v21, v22, v20, a3, a4);
                  sub_249882104(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_249882F28(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_249882F28(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_2498804CC(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_249882104(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_2498808F4(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(unsigned char *)(v8 + 24) = a3;
  *(void *)(v8 + 32) = a4;
  char v9 = *(unsigned char *)(a1 + 32);
  unsigned int v10 = v9 & 0x3F;
  unint64_t v11 = (unint64_t)((1 << v9) + 63) >> 6;
  id v12 = a2;
  id v13 = a4;
  id v24 = v12;
  uint64_t isStackAllocationSafe = (uint64_t)v13;
  uint64_t v15 = (void *)isStackAllocationSafe;
  if (v10 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    uint64_t v16 = (char *)v23 - ((8 * v11 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v16, 8 * v11);
    id v17 = v24;
    id v18 = v15;
    uint64_t v19 = v23[1];
    uint64_t v20 = sub_2498802C4((unint64_t *)v16, v11, a1, v17, a3, v18);
    if (v19) {
      swift_willThrow();
    }
    else {
      a3 = v20;
    }
    swift_release();
  }
  else
  {
    uint64_t v21 = (void *)swift_slowAlloc();
    bzero(v21, 8 * v11);
    a3 = sub_2498802C4((unint64_t *)v21, v11, a1, v24, a3, v15);
    MEMORY[0x24C5B0110](v21, -1, -1);
    swift_release();
  }

  return a3;
}

uint64_t sub_249880B18(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, void *))
{
  uint64_t v25 = (unint64_t *)result;
  uint64_t v26 = 0;
  int64_t v6 = 0;
  uint64_t v27 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v31) {
      return sub_249929B64(v25, a2, v26, a3);
    }
    unint64_t v21 = *(void *)(v27 + 8 * v20);
    ++v6;
    if (!v21)
    {
      int64_t v6 = v20 + 1;
      if (v20 + 1 >= v31) {
        return sub_249929B64(v25, a2, v26, a3);
      }
      unint64_t v21 = *(void *)(v27 + 8 * v6);
      if (!v21)
      {
        int64_t v6 = v20 + 2;
        if (v20 + 2 >= v31) {
          return sub_249929B64(v25, a2, v26, a3);
        }
        unint64_t v21 = *(void *)(v27 + 8 * v6);
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v21 - 1) & v21;
    unint64_t v11 = __clz(__rbit64(v21)) + (v6 << 6);
LABEL_5:
    id v12 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = *(void *)(a3 + 56) + 32 * v11;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    char v18 = *(unsigned char *)(v15 + 16);
    uint64_t v19 = *(void *)(v15 + 24);
    v28[0] = v16;
    v28[1] = v17;
    char v29 = v18;
    uint64_t v30 = v19;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    LOBYTE(v13) = a4(v13, v14, v28);
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease_n();
    if ((v13 & 1) == 0)
    {
      *(unint64_t *)((char *)v25 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
        return sub_249929B64(v25, a2, v26, a3);
      }
    }
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v31) {
    return sub_249929B64(v25, a2, v26, a3);
  }
  unint64_t v21 = *(void *)(v27 + 8 * v22);
  if (v21)
  {
    int64_t v6 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v6 >= v31) {
      return sub_249929B64(v25, a2, v26, a3);
    }
    unint64_t v21 = *(void *)(v27 + 8 * v6);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_249880D48(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, void *))
{
  uint64_t v3 = v2;
  v14[1] = *MEMORY[0x263EF8340];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v9 = 8 * v8;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    uint64_t v11 = sub_249880B18((uint64_t)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, a1, a2);
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    id v12 = (void *)swift_slowAlloc();
    bzero(v12, v9);
    swift_retain();
    uint64_t v11 = sub_249880B18((uint64_t)v12, v8, a1, a2);
    swift_release();
    MEMORY[0x24C5B0110](v12, -1, -1);
    swift_release_n();
  }
  return v11;
}

void *sub_249880F10(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v5 - 8);
  unsigned int v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_249AEB4E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_249AEB768();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *a2;
  (*(void (**)(char *, uint64_t))(v16 + 16))(v14, a1);
  uint64_t v17 = objc_allocWithZone(MEMORY[0x263F08870]);
  id v18 = sub_249963FF0((uint64_t)v14, 0);
  if (v2) {
    return v17;
  }
  uint64_t v19 = v18;
  uint64_t v45 = v7;
  uint64_t v46 = v11;
  uint64_t v47 = v9;
  uint64_t v48 = v8;
  if (!objc_msgSend(v18, sel_isDirectory))
  {
    sub_249AEB478();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_249881CF0((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    int64_t v22 = v46;
    uint64_t v23 = v48;
    sub_249AEB708();
    uint64_t v17 = v22;
    sub_249AEB458();
    (*(void (**)(void *, uint64_t))(v47 + 8))(v22, v23);
    swift_willThrow();

    return v17;
  }
  unint64_t v51 = MEMORY[0x263F8EE78];
  int64_t v20 = objc_msgSend(v19, sel_fileWrappers);
  uint64_t v43 = 0;
  id v44 = v19;
  if (v20)
  {
    uint64_t v17 = v20;
    sub_24987BE44();
    unint64_t v21 = sub_249AECE98();
  }
  else
  {
    unint64_t v21 = sub_2498ED39C(MEMORY[0x263F8EE78]);
  }
  int64_t v24 = 0;
  uint64_t v25 = *(void *)(v21 + 64);
  unint64_t v49 = v21 + 64;
  uint64_t v26 = 1 << *(unsigned char *)(v21 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v25;
  int64_t v50 = (unint64_t)(v26 + 63) >> 6;
  while (1)
  {
    if (v28)
    {
      unint64_t v31 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v32 = v31 | (v24 << 6);
      goto LABEL_31;
    }
    int64_t v33 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v33 >= v50) {
      goto LABEL_34;
    }
    unint64_t v34 = *(void *)(v49 + 8 * v33);
    ++v24;
    if (!v34)
    {
      int64_t v24 = v33 + 1;
      if (v33 + 1 >= v50) {
        goto LABEL_34;
      }
      unint64_t v34 = *(void *)(v49 + 8 * v24);
      if (!v34)
      {
        int64_t v24 = v33 + 2;
        if (v33 + 2 >= v50) {
          goto LABEL_34;
        }
        unint64_t v34 = *(void *)(v49 + 8 * v24);
        if (!v34) {
          break;
        }
      }
    }
LABEL_30:
    unint64_t v28 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v24 << 6);
LABEL_31:
    int64_t v36 = *(void **)(*(void *)(v21 + 56) + 8 * v32);
    if (v15)
    {
      uint64_t v17 = *(void **)(*(void *)(v21 + 48) + 16 * v32);
      swift_bridgeObjectRetain();
      id v37 = v36;
      if (sub_249AED278()) {
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      id v29 = v36;
    }
    id v30 = v36;
    uint64_t v17 = &v51;
    MEMORY[0x24C5AE570]();
    if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_249AED458();
    }
    sub_249AED498();
    sub_249AED448();
LABEL_14:

    swift_bridgeObjectRelease();
  }
  int64_t v35 = v33 + 3;
  if (v35 < v50)
  {
    unint64_t v34 = *(void *)(v49 + 8 * v35);
    if (!v34)
    {
      while (1)
      {
        int64_t v24 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          break;
        }
        if (v24 >= v50) {
          goto LABEL_34;
        }
        unint64_t v34 = *(void *)(v49 + 8 * v24);
        ++v35;
        if (v34) {
          goto LABEL_30;
        }
      }
LABEL_38:
      __break(1u);
LABEL_39:
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_249AEDC78();
      swift_bridgeObjectRelease();
      uint64_t v39 = v47;
      uint64_t v38 = v48;
      uint64_t v40 = v46;
      if (!v41) {
        goto LABEL_40;
      }
LABEL_36:

      return v17;
    }
    int64_t v24 = v35;
    goto LABEL_30;
  }
LABEL_34:
  swift_release();
  uint64_t v17 = (void *)v51;
  if (v51 >> 62) {
    goto LABEL_39;
  }
  uint64_t v39 = v47;
  uint64_t v38 = v48;
  uint64_t v40 = v46;
  if (*(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_36;
  }
LABEL_40:
  swift_bridgeObjectRelease();
  sub_249AEB478();
  sub_2498F0724(MEMORY[0x263F8EE78]);
  sub_249881CF0((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
  sub_249AEB708();
  uint64_t v17 = v40;
  sub_249AEB458();
  (*(void (**)(void *, uint64_t))(v39 + 8))(v40, v38);
  swift_willThrow();

  return v17;
}

unint64_t sub_2498814EC()
{
  unint64_t result = qword_2696DD8B8;
  if (!qword_2696DD8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DD8B8);
  }
  return result;
}

unint64_t sub_249881544()
{
  unint64_t result = qword_2696DD8C0;
  if (!qword_2696DD8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DD8C0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ArcPackageExporter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ArcPackageExporter(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for ArcPackageExporter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unsigned int v7 = *(void **)(a2 + 16);
  uint64_t v8 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v7;
  id v9 = v7;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ArcPackageExporter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for ArcPackageExporter(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ArcPackageExporter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ArcPackageExporter()
{
  return &type metadata for ArcPackageExporter;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ArcPackageExporter.ScriptVersion(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArcPackageExporter.ScriptVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498818E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_249881908(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_249881914(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ArcPackageExporter.ScriptVersion()
{
  return &type metadata for ArcPackageExporter.ScriptVersion;
}

uint64_t getEnumTagSinglePayload for ArcPackageExporter.Destination(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ArcPackageExporter.Destination(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249881A8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_249881AB4(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for ArcPackageExporter.Destination()
{
  return &type metadata for ArcPackageExporter.Destination;
}

void type metadata accessor for CHSWidgetFamily(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for SystemDesign(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for CACornerMask(uint64_t a1)
{
}

uint64_t sub_249881B64(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_249881B84(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

uint64_t _s7PaletteV14LinearGradientVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.BezierCurve(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.BezierCurve(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t sub_249881C60()
{
  return sub_249881CF0(&qword_2696DD970, type metadata accessor for AttributeName);
}

uint64_t sub_249881CA8()
{
  return sub_249881CF0(&qword_2696DD978, type metadata accessor for AttributeName);
}

uint64_t sub_249881CF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249881D38()
{
  return sub_249881CF0(&qword_2696DD980, type metadata accessor for TraitKey);
}

uint64_t sub_249881D80()
{
  return sub_249881CF0(&qword_2696DD988, type metadata accessor for TraitKey);
}

uint64_t sub_249881DC8()
{
  return sub_249881CF0(&qword_2696DD990, type metadata accessor for TraitKey);
}

uint64_t sub_249881E10()
{
  return sub_249881CF0(&qword_2696DD998, type metadata accessor for SystemDesign);
}

uint64_t sub_249881E58()
{
  return sub_249881CF0(&qword_2696DD9A0, type metadata accessor for SystemDesign);
}

uint64_t sub_249881EA0()
{
  return sub_249881CF0(&qword_2696DD9A8, type metadata accessor for SystemDesign);
}

uint64_t sub_249881EE8()
{
  return sub_249881CF0(&qword_2696DD9B0, type metadata accessor for Weight);
}

uint64_t sub_249881F30()
{
  return sub_249881CF0(&qword_2696DD9B8, type metadata accessor for Weight);
}

uint64_t sub_249881F78()
{
  return sub_249881CF0(&qword_2696DD9C0, type metadata accessor for Weight);
}

uint64_t sub_249881FC0()
{
  return sub_249881CF0(&qword_2696DD9C8, type metadata accessor for AttributeName);
}

unint64_t sub_249882008()
{
  unint64_t result = qword_2696DD9E0;
  if (!qword_2696DD9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DD9E0);
  }
  return result;
}

unint64_t sub_24988205C()
{
  unint64_t result = qword_2696DDA20;
  if (!qword_2696DDA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDA20);
  }
  return result;
}

unint64_t sub_2498820B0()
{
  unint64_t result = qword_2696DDA28;
  if (!qword_2696DDA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDA28);
  }
  return result;
}

uint64_t sub_249882104(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_24988215C()
{
  unint64_t result = qword_2696DDA30;
  if (!qword_2696DDA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDA30);
  }
  return result;
}

unint64_t sub_2498821B0()
{
  unint64_t result = qword_2696DDA38;
  if (!qword_2696DDA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDA38);
  }
  return result;
}

uint64_t sub_249882204()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

_OWORD *sub_24988225C(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_249882274(uint64_t a1)
{
  long long v3 = *(void **)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 64);
  unsigned int v4 = *(void **)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  BOOL v7 = *(void **)(a1 + 128);
  uint64_t v11 = *(void **)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 160);
  uint64_t v10 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 208);
  uint64_t v17 = *(void **)(a1 + 200);
  uint64_t v14 = *(void *)(a1 + 224);
  int v15 = *(void **)(a1 + 216);
  uint64_t v13 = *(void *)(a1 + 232);
  uint64_t v22 = *(void *)(a1 + 280);
  uint64_t v23 = *(void **)(a1 + 272);
  uint64_t v20 = *(void *)(a1 + 296);
  unint64_t v21 = *(void **)(a1 + 288);
  uint64_t v19 = *(void *)(a1 + 304);
  uint64_t v27 = *(void *)(a1 + 352);
  unint64_t v28 = *(void **)(a1 + 344);
  uint64_t v26 = *(void **)(a1 + 360);
  uint64_t v25 = *(void *)(a1 + 368);
  uint64_t v31 = *(void *)(a1 + 400);
  unint64_t v32 = *(void **)(a1 + 392);
  uint64_t v29 = *(void *)(a1 + 416);
  id v30 = *(void **)(a1 + 408);
  char v18 = *(unsigned char *)(a1 + 376);
  char v24 = *(unsigned char *)(a1 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_249882468(v3, v2, v4, v5, v6);
  swift_bridgeObjectRetain();
  sub_249882468(v7, v12, v11, v10, v9);
  swift_bridgeObjectRetain();
  sub_249882468(v17, v16, v15, v14, v13);
  swift_bridgeObjectRetain();
  sub_249882468(v23, v22, v21, v20, v19);
  swift_bridgeObjectRetain();
  sub_24988247C(v28, v27, v26, v25, v18);
  sub_24988247C(v32, v31, v30, v29, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_249882468(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if ((~a5 & 0xFE) != 0) {
    return (void *)sub_24988247C(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_24988247C(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if (a5 < 0)
  {
    id v6 = a1;
    swift_bridgeObjectRetain();
  }
  else
  {
    id v5 = a3;
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_2498824DC(uint64_t a1)
{
  long long v3 = *(void **)(a1 + 56);
  uint64_t v2 = *(void *)(a1 + 64);
  unsigned int v4 = *(void **)(a1 + 72);
  uint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a1 + 88);
  BOOL v7 = *(void **)(a1 + 128);
  uint64_t v11 = *(void **)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 160);
  uint64_t v10 = *(void *)(a1 + 152);
  uint64_t v16 = *(void *)(a1 + 208);
  uint64_t v17 = *(void **)(a1 + 200);
  uint64_t v14 = *(void *)(a1 + 224);
  int v15 = *(void **)(a1 + 216);
  uint64_t v13 = *(void *)(a1 + 232);
  uint64_t v22 = *(void *)(a1 + 280);
  uint64_t v23 = *(void **)(a1 + 272);
  uint64_t v20 = *(void *)(a1 + 296);
  unint64_t v21 = *(void **)(a1 + 288);
  uint64_t v19 = *(void *)(a1 + 304);
  uint64_t v27 = *(void *)(a1 + 352);
  unint64_t v28 = *(void **)(a1 + 344);
  uint64_t v26 = *(void **)(a1 + 360);
  uint64_t v25 = *(void *)(a1 + 368);
  uint64_t v31 = *(void *)(a1 + 400);
  unint64_t v32 = *(void **)(a1 + 392);
  uint64_t v29 = *(void *)(a1 + 416);
  id v30 = *(void **)(a1 + 408);
  char v18 = *(unsigned char *)(a1 + 376);
  char v24 = *(unsigned char *)(a1 + 424);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2498826D0(v3, v2, v4, v5, v6);
  swift_bridgeObjectRelease();
  sub_2498826D0(v7, v12, v11, v10, v9);
  swift_bridgeObjectRelease();
  sub_2498826D0(v17, v16, v15, v14, v13);
  swift_bridgeObjectRelease();
  sub_2498826D0(v23, v22, v21, v20, v19);
  swift_bridgeObjectRelease();
  sub_2498826E4(v28, v27, v26, v25, v18);
  sub_2498826E4(v32, v31, v30, v29, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_2498826D0(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if ((~a5 & 0xFE) != 0) {
    sub_2498826E4(a1, a2, a3, a4, a5);
  }
}

void sub_2498826E4(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5)
{
  if (a5 < 0)
  {
    a3 = a1;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

double sub_249882744(_OWORD *a1)
{
  double result = 0.0;
  a1[28] = 0u;
  a1[29] = 0u;
  a1[26] = 0u;
  a1[27] = 0u;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_249882788(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2498827EC(uint64_t a1)
{
  long long v14 = *(_OWORD *)(a1 + 400);
  long long v15 = *(_OWORD *)(a1 + 416);
  long long v12 = *(_OWORD *)(a1 + 368);
  long long v13 = *(_OWORD *)(a1 + 384);
  long long v10 = *(_OWORD *)(a1 + 336);
  long long v11 = *(_OWORD *)(a1 + 352);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v9 = *(_OWORD *)(a1 + 320);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v4 = *(_OWORD *)(a1 + 240);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v3 = *(_OWORD *)(a1 + 208);
  sub_2498828A8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void **)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void **)(a1 + 128), *(void *)(a1 + 136), *(void **)(a1 + 144),
    *(void *)(a1 + 152),
    *(_OWORD *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void **)(a1 + 200),
    v3,
    *((void **)&v3 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    (void *)v6,
    *((uint64_t *)&v6 + 1),
    (void *)v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((void **)&v10 + 1),
    v11,
    *((void **)&v11 + 1),
    v12,
    SBYTE8(v12),
    v13,
    *((void **)&v13 + 1),
    v14,
    *((void **)&v14 + 1),
    v15,
    SBYTE8(v15));
  return a1;
}

uint64_t sub_2498828A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, void *a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26,uint64_t a27,void *a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,uint64_t a36,void *a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,void *a44,uint64_t a45,void *a46,uint64_t a47,char a48,uint64_t a49,void *a50,uint64_t a51,void *a52,uint64_t a53,char a54)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2498826D0(a8, a9, a10, a11, a12);
    swift_bridgeObjectRelease();
    sub_2498826D0(a17, a18, a19, a20, a21);
    swift_bridgeObjectRelease();
    sub_2498826D0(a26, a27, a28, a29, a30);
    swift_bridgeObjectRelease();
    sub_2498826D0(a35, a36, a37, a38, a39);
    swift_bridgeObjectRelease();
    sub_2498826E4(a44, a45, a46, a47, a48);
    sub_2498826E4(a50, a51, a52, a53, a54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249882AC0()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

BOOL sub_249882B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(unsigned __int8 *)(v3 + 24);
  if (!*(unsigned char *)(v3 + 24)) {
    return 1;
  }
  if (v4 != 1) {
    uint64_t v4 = 2;
  }
  return (v4 & *(void *)(a3 + 24)) != 0;
}

uint64_t sub_249882B2C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249882B6C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDA48);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249882BCC(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t __swift_destroy_boxed_opaque_existential_2Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_249882C34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_249882C98(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_249882CD8()
{
  return swift_release();
}

void *__swift_project_boxed_opaque_existential_2Tm(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t *sub_249882D24(uint64_t *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v7 = a1[12];
  uint64_t v3 = a1[14];
  uint64_t v4 = a1[15];
  uint64_t v5 = a1[16];
  sub_249882DF8(*a1, a1[1], a1[2], a1[3], a1[4]);
  sub_249882DF8(v7, v2, v3, v4, v5);
  return a1;
}

uint64_t sub_249882DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_249882E5C()
{
  unint64_t result = qword_2696DDA50;
  if (!qword_2696DDA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDA50);
  }
  return result;
}

uint64_t sub_249882EB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_249882F14(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_249882104(a1, a2);
  }
  return a1;
}

uint64_t sub_249882F28(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_249882F80(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_249882F28(a1, a2);
  }
  return a1;
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for CTRun(uint64_t a1)
{
}

void type metadata accessor for CTFont(uint64_t a1)
{
}

void type metadata accessor for CTLine(uint64_t a1)
{
}

void sub_249882FF8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_249883040()
{
  return sub_249881CF0(&qword_2696DDA80, type metadata accessor for Key);
}

uint64_t sub_249883088()
{
  return sub_249881CF0(&qword_2696DDA88, type metadata accessor for Key);
}

uint64_t sub_2498830D0()
{
  return sub_249881CF0(&qword_2696DDA90, type metadata accessor for Key);
}

uint64_t dispatch thunk of FocusableContent.isFocusable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t WidgetRegistry.__allocating_init(widgets:)(uint64_t a1)
{
  swift_allocObject();
  uint64_t v2 = sub_2498849AC(a1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t WidgetRegistry.init(widgets:)(uint64_t a1)
{
  uint64_t v1 = sub_2498849AC(a1);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2498831CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_249AEB808();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = *((_OWORD *)a1 + 1);
  long long v10 = *((_OWORD *)a1 + 3);
  v35[2] = *((_OWORD *)a1 + 2);
  v35[3] = v10;
  uint64_t v11 = a1[8];
  uint64_t v33 = a1[7];
  uint64_t v36 = v11;
  v35[0] = *(_OWORD *)a1;
  v35[1] = v9;
  uint64_t v12 = *a1;
  uint64_t v27 = a1[1];
  uint64_t v28 = a1[2];
  uint64_t v29 = a1[3];
  uint64_t v13 = a1[5];
  uint64_t v31 = a1[4];
  uint64_t v32 = v13;
  long long v14 = (uint64_t *)(v2 + 16);
  int v30 = *((unsigned __int8 *)a1 + 48);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v2 + 16);
  if (!*(void *)(v15 + 16)) {
    goto LABEL_5;
  }
  sub_249884C78((uint64_t)v35);
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_2498EF47C((uint64_t *)v35);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_249884CD0((uint64_t)v35);
LABEL_5:
    sub_249AEB7F8();
    uint64_t v19 = sub_249AEB7D8();
    uint64_t v20 = v21;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_6;
  }
  char v18 = (uint64_t *)(*(void *)(v15 + 56) + 16 * v16);
  uint64_t v19 = *v18;
  uint64_t v20 = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_249884CD0((uint64_t)v35);
LABEL_6:
  swift_beginAccess();
  sub_249884C78((uint64_t)v35);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v34 = *v14;
  *long long v14 = 0x8000000000000000;
  sub_2498838C8(v19, v20, (uint64_t *)v35, isUniquelyReferenced_nonNull_native);
  *long long v14 = v34;
  swift_bridgeObjectRelease();
  sub_249884CD0((uint64_t)v35);
  swift_endAccess();
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v20;
  uint64_t v23 = v27;
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v23;
  uint64_t v24 = v29;
  *(void *)(a2 + 32) = v28;
  *(void *)(a2 + 40) = v24;
  uint64_t v25 = v32;
  *(void *)(a2 + 48) = v31;
  *(void *)(a2 + 56) = v25;
  *(unsigned char *)(a2 + 64) = v30;
  *(void *)(a2 + 72) = v33;
  *(void *)(a2 + 80) = v11;
  return sub_249884C78((uint64_t)v35);
}

uint64_t WidgetRegistry.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WidgetRegistry.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_24988349C(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  long long v10 = (void *)*v4;
  unint64_t v12 = sub_2498EF01C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2498DF2EC();
      goto LABEL_7;
    }
    sub_2498E28F8(v15, a4 & 1);
    uint64_t v21 = sub_2498EF01C(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_2Tm(v19);
    return sub_249882BCC(a1, v19);
  }
LABEL_13:
  sub_2498E87D8(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_2498835F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  long long v8 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = sub_2498EF01C(a5, a6);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 < v20 || (a7 & 1) == 0)
  {
    if (v22 >= v20 && (a7 & 1) == 0)
    {
      sub_2498DF4D8();
      goto LABEL_9;
    }
    sub_2498E2C20(v20, a7 & 1);
    uint64_t v23 = sub_2498EF01C(a5, a6);
    if ((v21 & 1) == (v24 & 1))
    {
      unint64_t v17 = v23;
      goto LABEL_9;
    }
LABEL_15:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
LABEL_9:
  uint64_t v25 = *v8;
  if (v21)
  {
    uint64_t v26 = v25[7] + 32 * v17;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v26 = a1;
    *(void *)(v26 + 8) = a2;
    *(unsigned char *)(v26 + 16) = a3 & 1;
    *(void *)(v26 + 24) = a4;
  }
  else
  {
    sub_2498E8848(v17, a5, a6, a1, a2, a3 & 1, a4, v25);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_249883770(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  long long v10 = (void *)*v4;
  unint64_t v12 = sub_2498EF01C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= result && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 88 * v12;
      long long v20 = *(_OWORD *)(a1 + 48);
      *(_OWORD *)(v19 + 32) = *(_OWORD *)(a1 + 32);
      *(_OWORD *)(v19 + 48) = v20;
      *(_OWORD *)(v19 + 64) = *(_OWORD *)(a1 + 64);
      *(unsigned char *)(v19 + 80) = *(unsigned char *)(a1 + 80);
      long long v21 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)a1;
      *(_OWORD *)(v19 + 16) = v21;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2498DF860();
    goto LABEL_7;
  }
  sub_2498E3278(result, a4 & 1);
  uint64_t result = sub_2498EF01C(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2498E88A0(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_2498838C8(uint64_t a1, uint64_t a2, uint64_t *a3, char a4)
{
  uint64_t v5 = (void **)v4;
  long long v10 = (void *)*v4;
  unint64_t v12 = sub_2498EF47C(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (uint64_t *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2498DFBE8();
    goto LABEL_7;
  }
  sub_2498E3908(v15, a4 & 1);
  unint64_t v21 = sub_2498EF47C(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2498E890C(v12, (uint64_t)a3, a1, a2, v18);

  return sub_249884C78((uint64_t)a3);
}

uint64_t sub_249883A00(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  long long v10 = (void *)*v4;
  unint64_t v12 = sub_2498EF018(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2498E05D4();
    goto LABEL_7;
  }
  sub_2498E4BC8(v15, a4 & 1);
  uint64_t v21 = sub_2498EF018(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB18);
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2498E8970(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_249883B44(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  long long v10 = (void *)*v4;
  unint64_t v12 = sub_2498EF018(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_2498E05E0();
      goto LABEL_7;
    }
    sub_2498E4BD4(v15, a4 & 1);
    uint64_t v21 = sub_2498EF018(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB20);
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + (v12 << 7);
    return sub_249884E04((uint64_t)a1, v19);
  }
LABEL_13:
  sub_2498E8974(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_249883C90(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  long long v10 = (void *)*v4;
  unint64_t v12 = sub_2498EF018(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2498E07F0();
    goto LABEL_7;
  }
  sub_2498E503C(v15, a4 & 1);
  uint64_t v21 = sub_2498EF018(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB20);
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2498E8970(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_249883DD4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_2498EF548(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t v21 = type metadata accessor for RequestContentModel();
      return sub_249884E60(a1, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v13, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_2498E0C30();
    goto LABEL_7;
  }
  sub_2498E574C(v16, a3 & 1);
  unint64_t v23 = sub_2498EF548(a2);
  if ((v17 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v13 = v23;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_249884D9C(a2, (uint64_t)v10);
  return sub_2498E8A2C(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_249883F70(char a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_2498EF548(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t result = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      *(unsigned char *)(v19[7] + v13) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2498E0C64();
    goto LABEL_7;
  }
  sub_2498E5780(result, a3 & 1);
  uint64_t result = sub_2498EF548(a2);
  if ((v17 & 1) != (v20 & 1))
  {
LABEL_14:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v13 = result;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_249884D9C(a2, (uint64_t)v10);
  return sub_2498E8A58(v13, (uint64_t)v10, a1 & 1, v19);
}

uint64_t sub_2498840D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, char a6)
{
  uint64_t v7 = (void **)v6;
  int v32 = a4;
  uint64_t v31 = a3;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v15 = (void *)*v6;
  unint64_t v17 = sub_2498EF548(a5);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a6 & 1) != 0)
  {
LABEL_7:
    unint64_t v23 = *v7;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7] + 32 * v17;
      uint64_t v25 = *(void *)(v24 + 8);
      uint64_t v26 = *(void *)(v24 + 16);
      unsigned __int8 v27 = *(unsigned char *)(v24 + 24);
      swift_release();
      uint64_t result = sub_249884EC8(v25, v26, v27);
      *(void *)uint64_t v24 = a1;
      *(void *)(v24 + 8) = a2;
      *(void *)(v24 + 16) = v31;
      *(unsigned char *)(v24 + 24) = v32;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a6 & 1) == 0)
  {
    sub_2498E0ED4();
    goto LABEL_7;
  }
  sub_2498E5B64(v20, a6 & 1);
  unint64_t v29 = sub_2498EF548(a5);
  if ((v21 & 1) != (v30 & 1))
  {
LABEL_14:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v17 = v29;
  unint64_t v23 = *v7;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  sub_249884D9C(a5, (uint64_t)v14);
  return sub_2498E8B04(v17, (uint64_t)v14, a1, a2, v31, v32, v23);
}

uint64_t sub_24988428C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_2498EF548(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t v21 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
      return sub_249884E60(a1, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v13, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_2498E11B4();
    goto LABEL_7;
  }
  sub_2498E5FA0(v16, a3 & 1);
  unint64_t v23 = sub_2498EF548(a2);
  if ((v17 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v13 = v23;
  BOOL v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_249884D9C(a2, (uint64_t)v10);
  return sub_2498E8BD8(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_249884428(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v7 = a2 & 1;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2498EF5FC(a2 & 1);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_2498E16B4();
    goto LABEL_7;
  }
  sub_2498E6794(result, a3 & 1);
  uint64_t result = sub_2498EF5FC(v7);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_15:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  uint64_t v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_2498E8CEC(v10, v7, a1, v16);
}

uint64_t sub_249884544(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_249884838(a1, a2, a3, a4, (void (*)(void))sub_2498E1E14, (void (*)(void))sub_2498E74F4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2498E8970);
}

void sub_249884584(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_2498EF01C(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_2498E1FDC();
    goto LABEL_7;
  }
  sub_2498E77DC(v15, a4 & 1);
  uint64_t v20 = sub_2498EF01C(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    sub_249AEE2D8();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_2498E8970(v12, a2, a3, a1, v18);

  swift_bridgeObjectRetain();
}

unint64_t sub_2498846C4(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_2498EF16C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_2498E2194();
      goto LABEL_7;
    }
    sub_2498E7AF4(v13, a3 & 1);
    unint64_t v19 = sub_2498EF16C(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      char v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    unint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
LABEL_7:
  char v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 48 * v10;
    return sub_249884EDC((uint64_t)a1, v17);
  }
LABEL_13:

  return sub_2498E8D94(v10, a2, a1, v16);
}

uint64_t sub_2498847F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_249884838(a1, a2, a3, a4, (void (*)(void))sub_2498E258C, (void (*)(void))sub_2498E81B0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2498E8970);
}

uint64_t sub_249884838(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  unint64_t v10 = v7;
  uint64_t v15 = *v7;
  uint64_t v17 = sub_2498EF01C(a2, a3);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v10;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = *(void *)(v23 + 56);
      uint64_t result = swift_release();
      *(void *)(v24 + 8 * v17) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    a5();
    goto LABEL_7;
  }
  a6();
  uint64_t v26 = sub_2498EF01C(a2, a3);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_15:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  uint64_t v17 = v26;
  uint64_t v23 = *v10;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  a7(v17, a2, a3, a1, v23);

  return swift_bridgeObjectRetain();
}

uint64_t sub_2498849AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v39 = sub_249AEB808();
  MEMORY[0x270FA5388](v39);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v2;
  *(void *)(v2 + 16) = MEMORY[0x263F8EE80];
  char v7 = (void *)(v2 + 16);
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return v37;
  }
  char v9 = (long long *)(a1 + 32);
  uint64_t v38 = (void (**)(char *, uint64_t))(v4 + 8);
  while (1)
  {
    long long v11 = v9[3];
    long long v43 = v9[2];
    long long v44 = v11;
    uint64_t v45 = *((void *)v9 + 8);
    long long v12 = v9[1];
    long long v41 = *v9;
    long long v42 = v12;
    sub_249884C78((uint64_t)&v41);
    sub_249884C78((uint64_t)&v41);
    sub_249AEB7F8();
    uint64_t v13 = sub_249AEB7D8();
    uint64_t v15 = v14;
    (*v38)(v6, v39);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = (void *)*v7;
    uint64_t v17 = v40;
    void *v7 = 0x8000000000000000;
    unint64_t v19 = sub_2498EF47C((uint64_t *)&v41);
    uint64_t v20 = v17[2];
    BOOL v21 = (v18 & 1) == 0;
    uint64_t v22 = v20 + v21;
    if (__OFADD__(v20, v21)) {
      break;
    }
    char v23 = v18;
    if (v17[3] >= v22)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v26 = v40;
        if (v18) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_2498DFBE8();
        uint64_t v26 = v40;
        if (v23) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_2498E3908(v22, isUniquelyReferenced_nonNull_native);
      unint64_t v24 = sub_2498EF47C((uint64_t *)&v41);
      if ((v23 & 1) != (v25 & 1)) {
        goto LABEL_19;
      }
      unint64_t v19 = v24;
      uint64_t v26 = v40;
      if (v23)
      {
LABEL_3:
        unint64_t v10 = (uint64_t *)(v26[7] + 16 * v19);
        swift_bridgeObjectRelease();
        *unint64_t v10 = v13;
        v10[1] = v15;
        goto LABEL_4;
      }
    }
    v26[(v19 >> 6) + 8] |= 1 << v19;
    uint64_t v27 = v26[6] + 72 * v19;
    *(_OWORD *)uint64_t v27 = v41;
    long long v28 = v42;
    long long v29 = v43;
    long long v30 = v44;
    *(void *)(v27 + 64) = v45;
    *(_OWORD *)(v27 + 32) = v29;
    *(_OWORD *)(v27 + 48) = v30;
    *(_OWORD *)(v27 + 16) = v28;
    uint64_t v31 = (uint64_t *)(v26[7] + 16 * v19);
    *uint64_t v31 = v13;
    v31[1] = v15;
    uint64_t v32 = v26[2];
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33) {
      goto LABEL_18;
    }
    v26[2] = v34;
    sub_249884C78((uint64_t)&v41);
LABEL_4:
    void *v7 = v26;
    swift_bridgeObjectRelease();
    sub_249884CD0((uint64_t)&v41);
    swift_endAccess();
    sub_249884CD0((uint64_t)&v41);
    char v9 = (long long *)((char *)v9 + 72);
    if (!--v8) {
      return v37;
    }
  }
  __break(1u);
LABEL_18:
  __break(1u);
LABEL_19:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

uint64_t sub_249884C78(uint64_t a1)
{
  return a1;
}

uint64_t sub_249884CD0(uint64_t a1)
{
  return a1;
}

uint64_t type metadata accessor for WidgetRegistry()
{
  return self;
}

uint64_t method lookup function for WidgetRegistry(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for WidgetRegistry);
}

uint64_t dispatch thunk of WidgetRegistry.__allocating_init(widgets:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of WidgetRegistry.getWidget(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_249884D9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249884E04(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249884E60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_249884EC8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249884EDC(uint64_t a1, uint64_t a2)
{
  return a2;
}

__n128 static Theme.Palette.RepresentedColorScheme.duoTone(tone1:tone2:)@<Q0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB28);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_249AEFCA0;
  *(void *)(v8 + 32) = 0;
  *(void *)(v8 + 40) = v4;
  *(void *)(v8 + 48) = v5;
  *(void *)(v8 + 56) = 0x3FDFFFD60E94EE39;
  *(void *)(v8 + 64) = v4;
  *(void *)(v8 + 72) = v5;
  *(void *)(v8 + 80) = 0x3FE0000000000000;
  *(void *)(v8 + 88) = v6;
  *(void *)(v8 + 96) = v7;
  *(void *)(v8 + 104) = 0x3FF0000000000000;
  *(void *)(v8 + 112) = v6;
  *(void *)(v8 + 120) = v7;
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  sub_249AECD08();
  *(void *)a3 = v8;
  *(void *)(a3 + 8) = v9;
  *(void *)(a3 + 16) = v10;
  __asm { FMOV            V0.2D, #1.0 }
  *(__n128 *)(a3 + 24) = result;
  *(unsigned char *)(a3 + 40) = 2;
  return result;
}

__n128 Theme.Palette.LinearGradient.Stop.init(location:color:)@<Q0>(__n128 *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)a2 = a3;
  __n128 result = *a1;
  *(__n128 *)(a2 + 8) = *a1;
  return result;
}

uint64_t Theme.Palette.LinearGradient.init(stops:startPoint:endPoint:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>, double a6@<D3>)
{
  *(void *)a2 = result;
  *(double *)(a2 + 8) = a3;
  *(double *)(a2 + 16) = a4;
  *(double *)(a2 + 24) = a5;
  *(double *)(a2 + 32) = a6;
  return result;
}

uint64_t Theme.Palette.RepresentedColorScheme.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  switch(*(unsigned char *)(v1 + 40))
  {
    case 1:
      sub_249AEE348();
      swift_retain();
      swift_retain();
      sub_249AEC878();
      sub_249AEC878();
      uint64_t v8 = v2;
      uint64_t v9 = v3;
      uint64_t v10 = v5;
      uint64_t v11 = v4;
      uint64_t v12 = v6;
      char v13 = 1;
      goto LABEL_8;
    case 2:
      sub_249AEE348();
      sub_249889F60(a1, v2);
      sub_249AECCF8();
      uint64_t result = sub_249AECCF8();
      break;
    case 3:
      uint64_t result = sub_249AEE348();
      break;
    default:
      sub_249AEE348();
      swift_retain();
      sub_249AEC878();
      uint64_t v8 = v2;
      uint64_t v9 = v3;
      uint64_t v10 = v5;
      uint64_t v11 = v4;
      uint64_t v12 = v6;
      char v13 = 0;
LABEL_8:
      uint64_t result = sub_249889FFC(v8, v9, v10, v11, v12, v13);
      break;
  }
  return result;
}

uint64_t static Theme.Palette.LinearGradient.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  if ((sub_249888CB0(*a1, *a2) & 1) == 0 || (sub_249AECCE8() & 1) == 0) {
    return 0;
  }

  return sub_249AECCE8();
}

uint64_t sub_2498852B8()
{
  uint64_t result = 0x656C676E6973;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4363696D616E7964;
      break;
    case 2:
      uint64_t result = 0x72477261656E696CLL;
      break;
    case 3:
      uint64_t result = 0x6C6F6369746C756DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24988535C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24988D574(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249885384()
{
  return 0;
}

void sub_249885390(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_24988539C(uint64_t a1)
{
  unint64_t v2 = sub_24988C9D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498853D8(uint64_t a1)
{
  unint64_t v2 = sub_24988C9D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249885414()
{
  return 1;
}

uint64_t sub_249885420()
{
  return sub_249AEE348();
}

uint64_t sub_24988544C()
{
  return 12383;
}

void sub_24988545C(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_249885468(uint64_t a1)
{
  unint64_t v2 = sub_24988CB20();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498854A4(uint64_t a1)
{
  unint64_t v2 = sub_24988CB20();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498854E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249885560(uint64_t a1)
{
  unint64_t v2 = sub_24988CA78();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24988559C(uint64_t a1)
{
  unint64_t v2 = sub_24988CA78();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498855D8()
{
  return 0;
}

uint64_t sub_2498855E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_249885614(uint64_t a1)
{
  unint64_t v2 = sub_24988CA24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249885650(uint64_t a1)
{
  unint64_t v2 = sub_24988CA24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24988568C()
{
  return sub_249AEE388();
}

uint64_t sub_2498856D0()
{
  return sub_249AEE388();
}

uint64_t sub_249885710()
{
  return 0x726F6C6F63;
}

uint64_t sub_249885724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2498857B4(uint64_t a1)
{
  unint64_t v2 = sub_24988CC64();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498857F0(uint64_t a1)
{
  unint64_t v2 = sub_24988CC64();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Theme.Palette.RepresentedColorScheme.encode(to:)(void *a1)
{
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB30);
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  uint64_t v40 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB38);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB40);
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v36 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB48);
  uint64_t v35 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB50);
  uint64_t v49 = *(void *)(v10 - 8);
  uint64_t v50 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)v1;
  uint64_t v14 = *(void *)(v1 + 16);
  uint64_t v45 = *(void *)(v1 + 8);
  uint64_t v46 = v14;
  uint64_t v15 = *(void *)(v1 + 32);
  uint64_t v47 = *(void *)(v1 + 24);
  uint64_t v48 = v15;
  uint64_t v16 = *(unsigned __int8 *)(v1 + 40);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24988C9D0();
  sub_249AEE468();
  switch(v16)
  {
    case 1:
      LOBYTE(v51) = 1;
      sub_24988CB20();
      uint64_t v30 = v13;
      swift_retain();
      uint64_t v31 = v45;
      swift_retain();
      uint64_t v32 = v36;
      uint64_t v33 = v50;
      sub_249AEDE48();
      uint64_t v51 = v13;
      uint64_t v52 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB80);
      sub_24988CD0C(&qword_2696DDB88);
      uint64_t v34 = v38;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v34);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v33);
      uint64_t v18 = v30;
      uint64_t v19 = v31;
      uint64_t v20 = v46;
      uint64_t v21 = v47;
      uint64_t v22 = v48;
      char v23 = 1;
      goto LABEL_6;
    case 2:
      LOBYTE(v51) = 2;
      sub_24988CA78();
      unint64_t v24 = v39;
      uint64_t v25 = v50;
      sub_249AEDE48();
      uint64_t v51 = v13;
      uint64_t v52 = v45;
      uint64_t v53 = v46;
      uint64_t v54 = v47;
      uint64_t v55 = v48;
      sub_24988CACC();
      uint64_t v26 = v43;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v24, v26);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v12, v25);
      break;
    case 3:
      LOBYTE(v51) = 3;
      sub_24988CA24();
      long long v28 = v40;
      uint64_t v29 = v50;
      sub_249AEDE48();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v44);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v12, v29);
      break;
    default:
      LOBYTE(v51) = 0;
      sub_24988CC64();
      swift_retain();
      uint64_t v17 = v50;
      sub_249AEDE48();
      uint64_t v51 = v13;
      sub_24988CC10();
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v9, v7);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v17);
      uint64_t v18 = v13;
      uint64_t v19 = v45;
      uint64_t v20 = v46;
      uint64_t v21 = v47;
      uint64_t v22 = v48;
      char v23 = 0;
LABEL_6:
      uint64_t result = sub_249889FFC(v18, v19, v20, v21, v22, v23);
      break;
  }
  return result;
}

uint64_t Theme.Palette.RepresentedColorScheme.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 40);
  sub_249AEE338();
  switch(v6)
  {
    case 1:
      sub_249AEE348();
      swift_retain();
      swift_retain();
      sub_249AEC878();
      sub_249AEC878();
      uint64_t v7 = v1;
      uint64_t v8 = v2;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 1;
      goto LABEL_6;
    case 2:
      sub_249AEE348();
      sub_249889F60((uint64_t)v14, v1);
      sub_249AECCF8();
      sub_249AECCF8();
      break;
    case 3:
      sub_249AEE348();
      break;
    default:
      sub_249AEE348();
      swift_retain();
      sub_249AEC878();
      uint64_t v7 = v1;
      uint64_t v8 = v2;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 0;
LABEL_6:
      sub_249889FFC(v7, v8, v9, v10, v11, v12);
      break;
  }
  return sub_249AEE388();
}

uint64_t Theme.Palette.RepresentedColorScheme.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBA8);
  uint64_t v44 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v52 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBB0);
  uint64_t v50 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v51 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBB8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v48 = v5;
  uint64_t v49 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBC0);
  uint64_t v45 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBC8);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v54 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v16);
  sub_24988C9D0();
  uint64_t v17 = v58;
  sub_249AEE428();
  if (v17)
  {
LABEL_13:
    uint64_t v38 = (uint64_t)v54;
    return __swift_destroy_boxed_opaque_existential_2Tm(v38);
  }
  uint64_t v42 = v9;
  uint64_t v43 = 0;
  uint64_t v18 = v51;
  uint64_t v19 = v52;
  uint64_t v20 = v53;
  uint64_t v58 = v13;
  uint64_t v21 = sub_249AEDE18();
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v26 = sub_249AEDB08();
    swift_allocError();
    long long v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *long long v28 = &type metadata for Theme.Palette.RepresentedColorScheme;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
LABEL_12:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v12);
    goto LABEL_13;
  }
  uint64_t v22 = *(unsigned __int8 *)(v21 + 32);
  uint64_t v41 = v22;
  switch(v22)
  {
    case 1:
      LOBYTE(v55) = 1;
      sub_24988CB20();
      uint64_t v29 = v8;
      uint64_t v30 = v43;
      sub_249AEDD38();
      if (v30) {
        goto LABEL_12;
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB80);
      sub_24988CD0C(&qword_2696DDBE0);
      uint64_t v31 = v48;
      sub_249AEDE08();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v31);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v12);
      uint64_t v25 = v55;
      *(void *)&long long v37 = v56;
      goto LABEL_17;
    case 2:
      LOBYTE(v55) = 2;
      sub_24988CA78();
      uint64_t v32 = v43;
      sub_249AEDD38();
      if (v32) {
        goto LABEL_12;
      }
      sub_24988CCB8();
      uint64_t v33 = v46;
      sub_249AEDE08();
      uint64_t v34 = v58;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v18, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v15, v12);
      uint64_t v38 = (uint64_t)v54;
      uint64_t v25 = v55;
      long long v37 = v56;
      long long v39 = v57;
      goto LABEL_18;
    case 3:
      LOBYTE(v55) = 3;
      sub_24988CA24();
      uint64_t v35 = v43;
      sub_249AEDD38();
      if (v35) {
        goto LABEL_12;
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v19, v47);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v12);
      uint64_t v25 = 0;
      goto LABEL_16;
    default:
      LOBYTE(v55) = 0;
      sub_24988CC64();
      uint64_t v23 = v43;
      sub_249AEDD38();
      if (v23) {
        goto LABEL_12;
      }
      sub_24988CBBC();
      uint64_t v24 = v42;
      sub_249AEDE08();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v11, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v12);
      uint64_t v25 = v55;
LABEL_16:
      long long v37 = 0uLL;
LABEL_17:
      long long v39 = 0uLL;
      uint64_t v38 = (uint64_t)v54;
LABEL_18:
      *(void *)uint64_t v20 = v25;
      *(_OWORD *)(v20 + 8) = v37;
      *(_OWORD *)(v20 + 24) = v39;
      *(unsigned char *)(v20 + 40) = v41;
      break;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm(v38);
}

uint64_t sub_2498867C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.Palette.RepresentedColorScheme.init(from:)(a1, a2);
}

uint64_t sub_2498867D8(void *a1)
{
  return Theme.Palette.RepresentedColorScheme.encode(to:)(a1);
}

uint64_t sub_2498867F8()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 40);
  sub_249AEE338();
  switch(v6)
  {
    case 1:
      sub_249AEE348();
      swift_retain();
      swift_retain();
      sub_249AEC878();
      sub_249AEC878();
      uint64_t v7 = v1;
      uint64_t v8 = v2;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 1;
      goto LABEL_6;
    case 2:
      sub_249AEE348();
      sub_249889F60((uint64_t)v14, v1);
      sub_249AECCF8();
      sub_249AECCF8();
      break;
    case 3:
      sub_249AEE348();
      break;
    default:
      sub_249AEE348();
      swift_retain();
      sub_249AEC878();
      uint64_t v7 = v1;
      uint64_t v8 = v2;
      uint64_t v9 = v4;
      uint64_t v10 = v3;
      uint64_t v11 = v5;
      char v12 = 0;
LABEL_6:
      sub_249889FFC(v7, v8, v9, v10, v11, v12);
      break;
  }
  return sub_249AEE388();
}

uint64_t Theme.Palette.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Theme.Palette.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Theme.Palette.backgroundOverrideColor.getter()
{
  return swift_retain();
}

uint64_t Theme.Palette.colors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Theme.Palette.representedColorScheme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  char v7 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 40) = v7;
  return sub_24988CD7C(v2, v3, v4, v5, v6, v7);
}

uint64_t Theme.Palette.sortIndex.getter()
{
  return *(void *)(v0 + 96);
}

uint64_t Theme.Palette.accentColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 112);
  *a1 = v2;
  a1[1] = v3;
  return sub_24988CDF0(v2);
}

uint64_t Theme.Palette.prominent.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t Theme.Palette.init(colorSet:colorMap:explicitColorIDs:)@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(void **)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v15)(uint64_t *__return_ptr, void *);
  void *v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char isUniquelyReferenced_nonNull_native;
  char v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  uint64_t v35;
  char v36;
  unint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  void (*v60)(uint64_t *__return_ptr, void **);
  uint64_t (*v61)(void **);
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;

  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 56);
  long long v56 = *(void *)(a1 + 48);
  long long v57 = *(void *)(a1 + 32);
  uint64_t v58 = *(unsigned char *)(a1 + 64);
  uint64_t v54 = *(void **)a1;
  uint64_t v55 = *(void *)(a1 + 72);
  uint64_t v11 = *(void *)(a1 + 88);
  char v12 = *(unsigned char *)(a1 + 96);
  int64_t v59 = *(void *)(a1 + 104);
  uint64_t v61 = *a2;
  uint64_t v51 = *(void *)(a1 + 80);
  uint64_t v64 = *(void **)a1;
  char v65 = v6;
  sub_24988CE30();
  uint64_t v53 = v6;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_249AED918();
  uint64_t v46 = v14;
  uint64_t v47 = v13;
  uint64_t v49 = v11;
  uint64_t v50 = v9;
  uint64_t v52 = v10;
  uint64_t v48 = v12;
  if (a3)
  {
    uint64_t v64 = v54;
    char v65 = v6;
    uint64_t v66 = v8;
    uint64_t v67 = v7;
    char v68 = v57;
    uint64_t v69 = v9;
    uint64_t v70 = v56;
    uint64_t v71 = v10;
    uint64_t v72 = v58;
    uint64_t v73 = v55;
    id v74 = v51;
    uint64_t v75 = v11;
    uint64_t v76 = v12;
    uint64_t v77 = v59;
    uint64_t v15 = (void (*)(uint64_t *__return_ptr, void *))v61(&v64);
    uint64_t v16 = (void *)sub_24988D1F4(MEMORY[0x263F8EE80], a3, v15);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v17 = v10;
    swift_release();
    uint64_t v18 = v58;
    uint64_t v19 = v51;
LABEL_20:
    swift_retain();
    sub_24988CD7C(v7, v57, v9, v56, v17, v18);
    sub_24988CDF0(v19);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249889FFC(v7, v57, v9, v56, v17, v58);
    sub_24988D7A0(v19);
    uint64_t result = swift_release();
    *(void *)a4 = v54;
    *(void *)(a4 + 8) = v53;
    *(void *)(a4 + 16) = v47;
    *(void *)(a4 + 24) = v46;
    *(void *)(a4 + 32) = v59;
    *(void *)(a4 + 40) = v16;
    *(void *)(a4 + 48) = v7;
    *(void *)(a4 + 56) = v57;
    *(void *)(a4 + 64) = v50;
    *(void *)(a4 + 72) = v56;
    *(void *)(a4 + 80) = v52;
    *(unsigned char *)(a4 + 88) = v58;
    *(void *)(a4 + 96) = v55;
    *(void *)(a4 + 104) = v19;
    *(void *)(a4 + 112) = v49;
    *(unsigned char *)(a4 + 120) = v48;
    return result;
  }
  uint64_t v64 = v54;
  char v65 = v6;
  uint64_t v66 = v8;
  uint64_t v67 = v7;
  char v68 = v57;
  uint64_t v69 = v9;
  uint64_t v70 = v56;
  uint64_t v71 = v10;
  uint64_t v72 = v58;
  uint64_t v19 = v51;
  uint64_t v73 = v55;
  id v74 = v51;
  uint64_t v75 = v11;
  uint64_t v76 = v12;
  uint64_t v77 = v59;
  uint64_t v60 = (void (*)(uint64_t *__return_ptr, void **))v61(&v64);
  uint64_t v20 = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
  uint64_t v21 = v7;
  uint64_t v22 = *(void *)(v20 + 16);
  if (!v22)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v16 = (void *)MEMORY[0x263F8EE80];
    uint64_t v7 = v21;
    uint64_t v17 = v52;
    uint64_t v18 = v58;
    goto LABEL_20;
  }
  uint64_t v44 = v21;
  uint64_t v45 = a4;
  swift_bridgeObjectRetain();
  uint64_t v23 = (unsigned __int8 *)(v20 + 48);
  uint64_t v24 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    int64_t v62 = v22;
    uint64_t v26 = *((void *)v23 - 2);
    uint64_t v27 = *((void *)v23 - 1);
    long long v28 = *v23;
    uint64_t v64 = (void *)v26;
    char v65 = v27;
    LOBYTE(v66) = v28;
    sub_24988D770(v26, v27, v28);
    sub_24988D770(v26, v27, v28);
    swift_bridgeObjectRetain();
    v60(&v63, &v64);
    uint64_t v29 = v63;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v64 = v24;
    uint64_t v32 = sub_2498EF034(v26, v27, v28);
    uint64_t v33 = v24[2];
    uint64_t v34 = (v31 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (__OFADD__(v33, v34)) {
      break;
    }
    uint64_t v36 = v31;
    if (v24[3] >= v35)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v16 = v64;
        if (v31) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_2498DFDFC();
        uint64_t v16 = v64;
        if (v36) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_2498E3D54(v35, isUniquelyReferenced_nonNull_native);
      long long v37 = sub_2498EF034(v26, v27, v28);
      if ((v36 & 1) != (v38 & 1)) {
        goto LABEL_23;
      }
      uint64_t v32 = v37;
      uint64_t v16 = v64;
      if (v36)
      {
LABEL_5:
        uint64_t v25 = v16[7];
        swift_bridgeObjectRelease();
        *(void *)(v25 + 8 * v32) = v29;
        goto LABEL_6;
      }
    }
    v16[(v32 >> 6) + 8] |= 1 << v32;
    long long v39 = v16[6] + 24 * v32;
    *(void *)long long v39 = v26;
    *(void *)(v39 + 8) = v27;
    *(unsigned char *)(v39 + 16) = v28;
    *(void *)(v16[7] + 8 * v32) = v29;
    uint64_t v40 = v16[2];
    uint64_t v41 = __OFADD__(v40, 1);
    uint64_t v42 = v40 + 1;
    if (v41) {
      goto LABEL_22;
    }
    v16[2] = v42;
    sub_24988D770(v26, v27, v28);
LABEL_6:
    v23 += 24;
    swift_bridgeObjectRelease();
    sub_24988D788(v26, v27, v28);
    sub_24988D788(v26, v27, v28);
    swift_bridgeObjectRelease();
    uint64_t v24 = v16;
    uint64_t v22 = v62 - 1;
    if (v62 == 1)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      uint64_t v7 = v44;
      a4 = v45;
      uint64_t v9 = v50;
      uint64_t v19 = v51;
      uint64_t v17 = v52;
      uint64_t v18 = v58;
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

uint64_t Theme.Palette.merging(colors:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[1];
  uint64_t v16 = v1[2];
  uint64_t v17 = *v1;
  uint64_t v4 = v1[5];
  uint64_t v13 = v1[4];
  uint64_t v14 = v1[3];
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = v1[8];
  uint64_t v8 = v1[9];
  uint64_t v15 = v1[10];
  uint64_t v21 = v1[12];
  uint64_t v18 = v1[14];
  uint64_t v19 = v1[13];
  char v20 = *((unsigned char *)v1 + 120);
  char v9 = *((unsigned char *)v1 + 88);
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_249887060(v10, v4);
  *(void *)a1 = v17;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v16;
  *(void *)(a1 + 24) = v14;
  *(void *)(a1 + 32) = v13;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v15;
  *(unsigned char *)(a1 + 88) = v9;
  *(void *)(a1 + 96) = v21;
  *(void *)(a1 + 104) = v19;
  *(void *)(a1 + 112) = v18;
  *(unsigned char *)(a1 + 120) = v20;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v5, v6, v7, v8, v15, v9);

  return sub_24988CDF0(v19);
}

uint64_t sub_249887060(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_2498DEFC0(a1, (uint64_t)sub_2498E9518, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t Theme.Palette.subset(colorIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[1];
  uint64_t v17 = v2[2];
  uint64_t v18 = *v2;
  uint64_t v13 = v2[4];
  uint64_t v16 = v2[6];
  uint64_t v6 = v2[8];
  uint64_t v14 = v2[3];
  uint64_t v15 = v2[7];
  uint64_t v7 = v2[9];
  uint64_t v8 = v2[10];
  uint64_t v22 = v2[12];
  uint64_t v19 = v2[14];
  uint64_t v20 = v2[13];
  char v21 = *((unsigned char *)v2 + 120);
  char v9 = *((unsigned char *)v2 + 88);
  swift_bridgeObjectRetain();
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v11 = sub_24988DE6C(v10, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v18;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v17;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v13;
  *(void *)(a2 + 40) = v11;
  *(void *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v15;
  *(void *)(a2 + 64) = v6;
  *(void *)(a2 + 72) = v7;
  *(void *)(a2 + 80) = v8;
  *(unsigned char *)(a2 + 88) = v9;
  *(void *)(a2 + 96) = v22;
  *(void *)(a2 + 104) = v20;
  *(void *)(a2 + 112) = v19;
  *(unsigned char *)(a2 + 120) = v21;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v16, v15, v6, v7, v8, v9);

  return sub_24988CDF0(v20);
}

uint64_t Theme.Palette.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v14 = *(void *)(v1 + 56);
  uint64_t v15 = *(void *)(v1 + 64);
  uint64_t v16 = *(void *)(v1 + 72);
  uint64_t v17 = *(void *)(v1 + 80);
  uint64_t v6 = *(unsigned __int8 *)(v1 + 88);
  uint64_t v18 = *(void *)(v1 + 104);
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE358();
  if (v4)
  {
    swift_retain();
    sub_249AEC878();
    swift_release();
  }
  swift_bridgeObjectRetain();
  sub_24988B798(a1, v3);
  swift_bridgeObjectRelease();
  switch(v6)
  {
    case 1:
      sub_249AEE348();
      swift_retain();
      swift_retain();
      sub_249AEC878();
      sub_249AEC878();
      uint64_t v7 = v5;
      uint64_t v8 = v14;
      uint64_t v9 = v15;
      uint64_t v10 = v16;
      uint64_t v11 = v17;
      char v12 = 1;
      goto LABEL_8;
    case 2:
      sub_249AEE348();
      swift_bridgeObjectRetain();
      sub_249889F60(a1, v5);
      sub_249AECCF8();
      sub_249AECCF8();
      uint64_t v7 = v5;
      uint64_t v8 = v14;
      uint64_t v9 = v15;
      uint64_t v10 = v16;
      uint64_t v11 = v17;
      char v12 = 2;
      goto LABEL_8;
    case 3:
      sub_249AEE348();
      goto LABEL_9;
    default:
      sub_249AEE348();
      swift_retain();
      sub_249AEC878();
      uint64_t v7 = v5;
      uint64_t v8 = v14;
      uint64_t v9 = v15;
      uint64_t v10 = v16;
      uint64_t v11 = v17;
      char v12 = 0;
LABEL_8:
      sub_249889FFC(v7, v8, v9, v10, v11, v12);
LABEL_9:
      sub_249AEE348();
      sub_249AEE358();
      if (v18)
      {
        swift_retain();
        swift_retain();
        sub_249AEC878();
        sub_249AEC878();
        sub_24988D7A0(v18);
      }
      return sub_249AEE358();
  }
}

unint64_t sub_249887524(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x73726F6C6F63;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
      unint64_t result = 0x65646E4974726F73;
      break;
    case 6:
      unint64_t result = 0x6F43746E65636361;
      break;
    case 7:
      unint64_t result = 0x6E656E696D6F7270;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249887640()
{
  return sub_249887524(*v0);
}

uint64_t sub_249887648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24988E7D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_249887670(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_24988767C(uint64_t a1)
{
  unint64_t v2 = sub_24988E028();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498876B8(uint64_t a1)
{
  unint64_t v2 = sub_24988E028();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Theme.Palette.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBF0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v31 = v1[3];
  uint64_t v32 = v9;
  uint64_t v10 = v1[4];
  uint64_t v29 = v1[5];
  uint64_t v30 = v10;
  uint64_t v11 = v1[6];
  uint64_t v27 = v1[7];
  uint64_t v28 = v11;
  uint64_t v12 = v1[9];
  uint64_t v24 = v1[8];
  uint64_t v25 = v12;
  uint64_t v26 = v1[10];
  int v40 = *((unsigned __int8 *)v1 + 88);
  uint64_t v13 = v1[12];
  uint64_t v21 = v1[13];
  uint64_t v22 = v1[14];
  uint64_t v23 = v13;
  v20[3] = *((unsigned __int8 *)v1 + 120);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24988E028();
  sub_249AEE468();
  uint64_t v34 = v8;
  uint64_t v35 = v7;
  char v41 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB20);
  sub_24988E200(&qword_2696DDC00);
  uint64_t v14 = v33;
  sub_249AEDF08();
  if (!v14)
  {
    uint64_t v15 = v29;
    uint64_t v16 = v30;
    uint64_t v18 = v27;
    uint64_t v17 = v28;
    LOBYTE(v34) = 1;
    sub_249AEDEB8();
    uint64_t v34 = v16;
    char v41 = 2;
    sub_24988CC10();
    sub_249AEDEA8();
    uint64_t v34 = v15;
    char v41 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDC08);
    sub_24988E07C(&qword_2696DDC10, (void (*)(void))sub_24988E104, (void (*)(void))sub_24988E158);
    sub_249AEDF08();
    uint64_t v34 = v17;
    uint64_t v35 = v18;
    uint64_t v36 = v24;
    uint64_t v37 = v25;
    uint64_t v38 = v26;
    char v39 = v40;
    char v41 = 4;
    sub_24988E1AC();
    sub_249AEDF08();
    LOBYTE(v34) = 5;
    sub_249AEDEE8();
    uint64_t v34 = v21;
    uint64_t v35 = v22;
    char v41 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB80);
    sub_24988CD0C(&qword_2696DDB88);
    sub_249AEDEA8();
    LOBYTE(v34) = 7;
    sub_249AEDEC8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Theme.Palette.hashValue.getter()
{
  sub_249AEE338();
  Theme.Palette.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t Theme.Palette.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDC30);
  uint64_t v5 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24988E028();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  uint64_t v52 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB20);
  LOBYTE(v53) = 0;
  sub_24988E200(&qword_2696DDC38);
  sub_249AEDE08();
  uint64_t v9 = v60;
  uint64_t v10 = v61;
  LOBYTE(v60) = 1;
  swift_bridgeObjectRetain();
  uint64_t v11 = (uint64_t)a1;
  uint64_t v50 = sub_249AEDDB8();
  uint64_t v51 = v9;
  uint64_t v12 = v10;
  LOBYTE(v53) = 2;
  uint64_t v14 = v13;
  sub_24988CBBC();
  swift_bridgeObjectRetain();
  sub_249AEDDA8();
  uint64_t v15 = v14;
  uint64_t v16 = v60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDC08);
  LOBYTE(v53) = 3;
  sub_24988E07C(&qword_2696DDC40, (void (*)(void))sub_24988E268, (void (*)(void))sub_24988E2BC);
  swift_retain();
  sub_249AEDE08();
  uint64_t v48 = v16;
  uint64_t v17 = v60;
  LOBYTE(v53) = 4;
  sub_24988E310();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  uint64_t v49 = v12;
  uint64_t v42 = v17;
  uint64_t v18 = v60;
  LOBYTE(v60) = 5;
  uint64_t v19 = v18;
  uint64_t v20 = v61;
  long long v46 = v62;
  uint64_t v47 = v63;
  int v41 = v64;
  sub_24988CD7C(v18, v61, v62, *((uint64_t *)&v62 + 1), v63, v64);
  uint64_t v40 = 0;
  uint64_t v21 = sub_249AEDDE8();
  *(void *)&long long v43 = v19;
  *((void *)&v43 + 1) = v20;
  uint64_t v39 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB80);
  LOBYTE(v53) = 6;
  sub_24988CD0C(&qword_2696DDBE0);
  sub_249AEDDA8();
  uint64_t v22 = v60;
  char v74 = 7;
  uint64_t v45 = v61;
  sub_24988CDF0(v60);
  char v23 = sub_249AEDDC8();
  uint64_t v24 = v49;
  uint64_t v44 = v22;
  LOBYTE(v17) = v23;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v76);
  LODWORD(v76) = v17 & 1;
  *(void *)&long long v53 = v51;
  *((void *)&v53 + 1) = v24;
  *(void *)&long long v54 = v50;
  *((void *)&v54 + 1) = v15;
  uint64_t v38 = v15;
  uint64_t v25 = v47;
  *(void *)&long long v55 = v48;
  *((void *)&v55 + 1) = v42;
  long long v56 = v43;
  long long v26 = v46;
  long long v57 = v46;
  *(void *)&long long v58 = v47;
  LOBYTE(v24) = v41;
  BYTE8(v58) = v41;
  *(void *)&v59[0] = v39;
  *((void *)&v59[0] + 1) = v22;
  uint64_t v27 = v45;
  *(void *)&v59[1] = v45;
  BYTE8(v59[1]) = v17 & 1;
  sub_24988E364((uint64_t)&v53);
  sub_24988D7A0(v22);
  sub_249889FFC(v43, *((uint64_t *)&v43 + 1), v26, *((uint64_t *)&v26 + 1), v25, v24);
  uint64_t v28 = v49;
  swift_bridgeObjectRelease();
  uint64_t v29 = v38;
  swift_bridgeObjectRelease();
  uint64_t v30 = v48;
  swift_release();
  uint64_t v31 = v42;
  swift_bridgeObjectRelease();
  long long v32 = v58;
  uint64_t v33 = v52;
  v52[4] = v57;
  v33[5] = v32;
  v33[6] = v59[0];
  *(_OWORD *)((char *)v33 + 105) = *(_OWORD *)((char *)v59 + 9);
  long long v34 = v54;
  *uint64_t v33 = v53;
  v33[1] = v34;
  long long v35 = v56;
  v33[2] = v55;
  v33[3] = v35;
  __swift_destroy_boxed_opaque_existential_2Tm(v11);
  uint64_t v60 = v51;
  uint64_t v61 = v28;
  *(void *)&long long v62 = v50;
  *((void *)&v62 + 1) = v29;
  uint64_t v63 = v30;
  uint64_t v64 = v31;
  long long v65 = v43;
  long long v66 = v46;
  uint64_t v67 = v47;
  char v68 = v24;
  *(_DWORD *)uint64_t v69 = v75[0];
  *(_DWORD *)&v69[3] = *(_DWORD *)((char *)v75 + 3);
  uint64_t v70 = v39;
  uint64_t v71 = v44;
  uint64_t v72 = v27;
  char v73 = v76;
  return sub_24988E414((uint64_t)&v60);
}

uint64_t sub_249888338@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return Theme.Palette.init(from:)(a1, a2);
}

uint64_t sub_249888350(void *a1)
{
  return Theme.Palette.encode(to:)(a1);
}

uint64_t sub_24988836C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_249888378()
{
  sub_249AEE338();
  Theme.Palette.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t sub_2498883BC()
{
  sub_249AEE338();
  Theme.Palette.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

double Theme.Palette.LinearGradient.Stop.location.getter()
{
  return *(double *)v0;
}

void Theme.Palette.LinearGradient.Stop.location.setter(double a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*Theme.Palette.LinearGradient.Stop.location.modify())()
{
  return nullsub_1;
}

uint64_t Theme.Palette.LinearGradient.Stop.color.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = *(void *)(v1 + 8);
  a1[1] = v2;
  swift_retain();

  return swift_retain();
}

__n128 Theme.Palette.LinearGradient.Stop.color.setter(__n128 *a1)
{
  swift_release();
  swift_release();
  __n128 result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  return result;
}

uint64_t (*Theme.Palette.LinearGradient.Stop.color.modify())()
{
  return nullsub_1;
}

uint64_t Theme.Palette.LinearGradient.Stop.hash(into:)()
{
  sub_249AEE378();
  swift_retain();
  swift_retain();
  sub_249AEC878();
  sub_249AEC878();
  swift_release();

  return swift_release();
}

uint64_t sub_24988854C()
{
  if (*v0) {
    return 0x726F6C6F63;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

uint64_t sub_249888584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24988EB2C(a1, a2);
  *a3 = result;
  return result;
}

void sub_2498885AC(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2498885B8(uint64_t a1)
{
  unint64_t v2 = sub_24988E4C8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498885F4(uint64_t a1)
{
  unint64_t v2 = sub_24988E4C8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Theme.Palette.LinearGradient.Stop.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDC60);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  long long v10 = *(_OWORD *)(v1 + 1);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24988E4C8();
  sub_249AEE468();
  *(void *)&long long v11 = v8;
  char v12 = 0;
  sub_24988E51C();
  sub_249AEDF08();
  if (!v2)
  {
    long long v11 = v10;
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB80);
    sub_24988CD0C(&qword_2696DDB88);
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Theme.Palette.LinearGradient.Stop.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t Theme.Palette.LinearGradient.Stop.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDC78);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24988E4C8();
  sub_249AEE428();
  if (!v2)
  {
    char v13 = 0;
    sub_24988E570();
    sub_249AEDE08();
    uint64_t v9 = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB80);
    char v13 = 1;
    sub_24988CD0C(&qword_2696DDBE0);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v10 = v12;
    *(void *)a2 = v9;
    *(_OWORD *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249888A68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.Palette.LinearGradient.Stop.init(from:)(a1, a2);
}

uint64_t sub_249888A80(void *a1)
{
  return Theme.Palette.LinearGradient.Stop.encode(to:)(a1);
}

uint64_t sub_249888A9C()
{
  sub_249AEE378();
  sub_249AEC878();

  return sub_249AEC878();
}

uint64_t sub_249888B00()
{
  return sub_249AEE388();
}

uint64_t Theme.Palette.LinearGradient.stops.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Theme.Palette.LinearGradient.stops.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Theme.Palette.LinearGradient.stops.modify())()
{
  return nullsub_1;
}

double Theme.Palette.LinearGradient.startPoint.getter()
{
  return *(double *)(v0 + 8);
}

void Theme.Palette.LinearGradient.startPoint.setter(double a1, double a2)
{
  *(double *)(v2 + 8) = a1;
  *(double *)(v2 + 16) = a2;
}

uint64_t (*Theme.Palette.LinearGradient.startPoint.modify())()
{
  return nullsub_1;
}

double Theme.Palette.LinearGradient.endPoint.getter()
{
  return *(double *)(v0 + 24);
}

void Theme.Palette.LinearGradient.endPoint.setter(double a1, double a2)
{
  *(double *)(v2 + 24) = a1;
  *(double *)(v2 + 32) = a2;
}

uint64_t (*Theme.Palette.LinearGradient.endPoint.modify())()
{
  return nullsub_1;
}

uint64_t Theme.Palette.LinearGradient.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_249889F60(a1, v3);
  swift_bridgeObjectRelease();
  sub_249AECCF8();

  return sub_249AECCF8();
}

uint64_t sub_249888CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = a2 + 48;
    for (uint64_t i = a1 + 48; *(double *)(i - 16) == *(double *)(v3 - 16); i += 24)
    {
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      if ((sub_249AEC848() & 1) == 0)
      {
        swift_release_n();
        swift_release_n();
        swift_release_n();
        swift_release_n();
        return 0;
      }
      char v5 = sub_249AEC848();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      if ((v5 & 1) == 0) {
        return 0;
      }
      v3 += 24;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_249888DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    for (uint64_t i = v2 - 1; ; --i)
    {
      sub_249890C54(v3, (uint64_t)v9);
      sub_249890C54((uint64_t)v9, (uint64_t)v8);
      sub_249890C54(v4, (uint64_t)v10);
      sub_249890C54((uint64_t)v10, (uint64_t)v7);
      if (!_s14CarPlayAssetUI14VisibilityRuleO2eeoiySbAC_ACtFZ_0((uint64_t)v8, (uint64_t)v7)) {
        break;
      }
      if (!i) {
        return 1;
      }
      v4 += 136;
      v3 += 136;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_249888EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 64);
    for (uint64_t i = (uint64_t *)(a1 + 64); *(i - 4) == *(v3 - 4); i += 5)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_249AEE0D8() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_249AEE0D8() & 1) == 0) {
        break;
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_249888F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a2 + 48);
    for (uint64_t i = (void *)(a1 + 48); *((unsigned __int8 *)i - 16) == *((unsigned __int8 *)v3 - 16); i += 5)
    {
      BOOL v5 = *(i - 1) == *(v3 - 1) && *i == *v3;
      if (!v5 && (sub_249AEE0D8() & 1) == 0) {
        break;
      }
      v3 += 5;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

BOOL sub_249889014(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (float *)(a1 + 36);
  uint64_t v4 = (float *)(a2 + 36);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    float v7 = *v3++;
    float v8 = v7;
    float v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_249889080(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  swift_retain();
  swift_retain();
  char v5 = sub_249AEC848();
  swift_release();
  swift_release();
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1 + 40;
  uint64_t v7 = a2 + 40;
  uint64_t v8 = v2 - 1;
  do
  {
    BOOL v9 = v8 == 0;
    if (!v8) {
      break;
    }
    v6 += 8;
    v7 += 8;
    swift_retain();
    swift_retain();
    char v10 = sub_249AEC848();
    swift_release();
    swift_release();
    --v8;
  }
  while ((v10 & 1) != 0);
  return v9;
}

BOOL sub_249889180(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  char v5 = (double *)(a1 + 40);
  uint64_t v6 = (double *)(a2 + 40);
  do
  {
    double v7 = *v5++;
    double v8 = v7;
    double v9 = *v6++;
    double v10 = v9;
    BOOL v12 = v4-- != 0;
    BOOL result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

uint64_t sub_2498891F4()
{
  uint64_t v1 = 0x696F507472617473;
  if (*v0 != 1) {
    uint64_t v1 = 0x746E696F50646E65;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73706F7473;
  }
}

uint64_t sub_249889250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24988EC18(a1, a2);
  *a3 = result;
  return result;
}

void sub_249889278(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_249889284(uint64_t a1)
{
  unint64_t v2 = sub_24988E5C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498892C0(uint64_t a1)
{
  unint64_t v2 = sub_24988E5C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Theme.Palette.LinearGradient.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDC88);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = v1[1];
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24988E5C4();
  sub_249AEE468();
  uint64_t v14 = v8;
  char v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDC98);
  sub_24988E6C0(&qword_2696DDCA0, (void (*)(void))sub_24988E618);
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v14 = v9;
    uint64_t v15 = v10;
    char v16 = 1;
    sub_24988E66C();
    sub_249AEDF08();
    uint64_t v14 = v11;
    uint64_t v15 = v12;
    char v16 = 2;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Theme.Palette.LinearGradient.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_249889F60((uint64_t)v3, v1);
  sub_249AECCF8();
  sub_249AECCF8();
  return sub_249AEE388();
}

uint64_t Theme.Palette.LinearGradient.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDCB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24988E5C4();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDC98);
  char v14 = 0;
  sub_24988E6C0(&qword_2696DDCC0, (void (*)(void))sub_24988E730);
  sub_249AEDE08();
  uint64_t v9 = v13;
  char v14 = 1;
  sub_24988E784();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  long long v10 = v13;
  char v14 = 2;
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  long long v12 = v13;
  *(void *)a2 = v9;
  *(_OWORD *)(a2 + 8) = v10;
  *(_OWORD *)(a2 + 24) = v12;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249889838@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.Palette.LinearGradient.init(from:)(a1, a2);
}

uint64_t sub_249889850(void *a1)
{
  return Theme.Palette.LinearGradient.encode(to:)(a1);
}

uint64_t sub_249889868()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_249889F60((uint64_t)v3, v1);
  sub_249AECCF8();
  sub_249AECCF8();
  return sub_249AEE388();
}

uint64_t sub_2498898E8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  sub_249AEE348();
  if (v2)
  {
    uint64_t v3 = v1 + 48;
    do
    {
      v3 += 24;
      sub_249AEE378();
      swift_retain();
      swift_retain();
      sub_249AEC878();
      sub_249AEC878();
      swift_release();
      swift_release();
      --v2;
    }
    while (v2);
  }
  sub_249AECCF8();

  return sub_249AECCF8();
}

uint64_t sub_2498899D0()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_249889F60((uint64_t)v3, v1);
  sub_249AECCF8();
  sub_249AECCF8();
  return sub_249AEE388();
}

uint64_t sub_249889A4C(uint64_t *a1, uint64_t *a2)
{
  if ((sub_249888CB0(*a1, *a2) & 1) == 0 || (sub_249AECCE8() & 1) == 0) {
    return 0;
  }

  return sub_249AECCE8();
}

uint64_t sub_249889AFC(char *a1, char *a2)
{
  return sub_2498F10EC(*a1, *a2);
}

uint64_t sub_249889B08()
{
  return sub_249AEE388();
}

uint64_t sub_249889B64()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249889BA4()
{
  return sub_249AEE388();
}

uint64_t sub_249889BFC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_249889C5C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 120;
  if (*v1) {
    uint64_t v2 = 121;
  }
  *a1 = v2;
  a1[1] = 0xE100000000000000;
}

uint64_t sub_249889C78()
{
  if (*v0) {
    return 121;
  }
  else {
    return 120;
  }
}

uint64_t sub_249889C90@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_249889CF4(uint64_t a1)
{
  unint64_t v2 = sub_24988EF4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249889D30(uint64_t a1)
{
  unint64_t v2 = sub_24988EF4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

double UnitPoint.init(from:)(void *a1)
{
  return sub_24988ED74(a1);
}

uint64_t UnitPoint.encode(to:)(void *a1, double a2, double a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDCD8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24988EF4C();
  sub_249AEE468();
  double v14 = a2;
  char v13 = 0;
  sub_24988E51C();
  sub_249AEDF08();
  if (!v3)
  {
    double v14 = a3;
    char v13 = 1;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

void sub_249889F18(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_24988ED74(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
  }
}

uint64_t sub_249889F44(void *a1)
{
  return UnitPoint.encode(to:)(a1, *v1, v1[1]);
}

uint64_t sub_249889F60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_249AEE348();
  if (v3)
  {
    uint64_t v5 = a2 + 48;
    do
    {
      v5 += 24;
      sub_249AEE378();
      swift_retain();
      swift_retain();
      sub_249AEC878();
      sub_249AEC878();
      swift_release();
      uint64_t result = swift_release();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_249889FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 == 2)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    if (a6 == 1)
    {
      swift_release();
    }
    else
    {
      if (a6) {
        return result;
      }
    }
    return swift_release();
  }
}

uint64_t sub_24988A070(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_249AEE348();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      v5 += 4;
      uint64_t result = sub_249AEE368();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_24988A0C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_249AEE348();
  if (v3)
  {
    uint64_t v5 = a2 + 32;
    do
    {
      v5 += 8;
      uint64_t result = sub_249AEE378();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_24988A120(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_19;
      }
      uint64_t v11 = *(void *)(v2 + 8 * v9);
      if (!v11) {
        break;
      }
    }
LABEL_18:
    uint64_t v5 = (v11 - 1) & v11;
LABEL_5:
    swift_bridgeObjectRetain();
    swift_retain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249AEC878();
    swift_release();
    uint64_t result = sub_249AEE388();
    v8 ^= result;
  }
  int64_t v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  uint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v9);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24988A2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v10 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v16 >= v6) {
      goto LABEL_19;
    }
    unint64_t v17 = *(void *)(v19 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v6) {
        goto LABEL_19;
      }
      unint64_t v17 = *(void *)(v19 + 8 * v9);
      if (!v17) {
        break;
      }
    }
LABEL_18:
    unint64_t v5 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(a2 + 56) + 24 * v11;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    char v15 = *(unsigned char *)(v12 + 16);
    sub_249AEE348();
    sub_24988D770(v13, v14, v15);
    Theme.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_24988D788(v13, v14, v15);
    uint64_t result = sub_249AEE388();
    v8 ^= result;
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  unint64_t v17 = *(void *)(v19 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_19;
    }
    unint64_t v17 = *(void *)(v19 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24988A4B4(uint64_t a1, uint64_t a2)
{
  return sub_24988A50C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890CE0, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890CE4);
}

uint64_t sub_24988A4E0(uint64_t a1, uint64_t a2)
{
  return sub_24988A50C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890C2C, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890C40);
}

uint64_t sub_24988A50C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v21 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v10 = 0;
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_20;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v14 >= v21) {
      goto LABEL_22;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v21) {
        goto LABEL_22;
      }
      unint64_t v15 = *(void *)(v22 + 8 * v11);
      if (!v15) {
        break;
      }
    }
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_20:
    uint64_t v17 = *(void *)(a2 + 56) + 24 * v13;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(unsigned __int8 *)(v17 + 16);
    sub_249AEE348();
    sub_249AEE348();
    if (v20 == 255)
    {
      a3(v19, v18, 255);
    }
    else
    {
      a3(v19, v18, v20);
      Theme.ColorID.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      a4(v19, v18, v20);
    }
    uint64_t result = sub_249AEE388();
    v10 ^= result;
  }
  int64_t v16 = v14 + 2;
  if (v16 >= v21)
  {
LABEL_22:
    swift_release();
    return sub_249AEE348();
  }
  unint64_t v15 = *(void *)(v22 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v21) {
      goto LABEL_22;
    }
    unint64_t v15 = *(void *)(v22 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_24988A734(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v5)
    {
      v5 &= v5 - 1;
      goto LABEL_5;
    }
    int64_t v10 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v10);
    ++v9;
    if (!v11)
    {
      int64_t v9 = v10 + 1;
      if (v10 + 1 >= v6) {
        goto LABEL_19;
      }
      uint64_t v11 = *(void *)(v2 + 8 * v9);
      if (!v11) {
        break;
      }
    }
LABEL_18:
    uint64_t v5 = (v11 - 1) & v11;
LABEL_5:
    sub_249AEE348();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    v8 ^= result;
  }
  int64_t v12 = v10 + 2;
  if (v12 >= v6)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  uint64_t v11 = *(void *)(v2 + 8 * v12);
  if (v11)
  {
    int64_t v9 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v9 >= v6) {
      goto LABEL_19;
    }
    uint64_t v11 = *(void *)(v2 + 8 * v9);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24988A8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v11 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v11) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v12 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v11) {
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)(v12 + 8 * v7);
      if (!v9) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v9 - 1) & v9;
LABEL_5:
    sub_249AEE348();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    v6 ^= result;
  }
  int64_t v10 = v8 + 2;
  if (v10 >= v11)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  uint64_t v9 = *(void *)(v12 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v12 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24988AAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v25 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    uint64_t v28 = v7;
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_21;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v11 >= v25) {
      goto LABEL_31;
    }
    unint64_t v12 = *(void *)(v26 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v25) {
        goto LABEL_31;
      }
      unint64_t v12 = *(void *)(v26 + 8 * v8);
      if (!v12) {
        break;
      }
    }
LABEL_20:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_21:
    uint64_t v14 = *(void *)(a2 + 56) + 48 * v10;
    int64_t v16 = *(void **)v14;
    uint64_t v15 = *(void *)(v14 + 8);
    uint64_t v18 = *(void **)(v14 + 16);
    uint64_t v17 = *(void *)(v14 + 24);
    int v19 = *(char *)(v14 + 32);
    uint64_t v20 = *(void *)(a1 + 64);
    long long v21 = *(_OWORD *)(a1 + 16);
    v29[0] = *(_OWORD *)a1;
    v29[1] = v21;
    long long v22 = *(_OWORD *)(a1 + 48);
    v29[2] = *(_OWORD *)(a1 + 32);
    v29[3] = v22;
    uint64_t v30 = v20;
    sub_249AEE348();
    if ((v19 & 0x80000000) == 0)
    {
      sub_249AEE348();
      swift_bridgeObjectRetain();
      sub_24988247C(v16, v15, v18, v17, v19);
      sub_24988247C(v16, v15, v18, v17, v19);
      sub_249AECF78();
      swift_bridgeObjectRelease();
      if (v18)
      {
        sub_249AEE358();
        id v23 = v18;
        sub_249AED898();

        if ((v19 & 1) == 0) {
          goto LABEL_28;
        }
      }
      else
      {
        sub_249AEE358();
        if ((v19 & 1) == 0)
        {
LABEL_28:
          sub_249AEE358();
          sub_249AEE378();
          goto LABEL_5;
        }
      }
      sub_249AEE358();
LABEL_5:
      sub_2498826E4(v16, v15, v18, v17, v19);
      goto LABEL_6;
    }
    sub_249AEE348();
    sub_249AEE358();
    if (v16)
    {
      sub_24988247C(v16, v15, v18, v17, v19);
      id v24 = v16;
      sub_249AED898();
    }
    else
    {
      sub_24988247C(0, v15, v18, v17, v19);
    }
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24988ADF0((uint64_t)v29, v17);
    swift_bridgeObjectRelease();
LABEL_6:
    sub_249AEE348();
    sub_2498826E4(v16, v15, v18, v17, v19);
    uint64_t result = sub_249AEE388();
    uint64_t v7 = result ^ v28;
  }
  int64_t v13 = v11 + 2;
  if (v13 >= v25)
  {
LABEL_31:
    swift_release();
    return sub_249AEE348();
  }
  unint64_t v12 = *(void *)(v26 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v25) {
      goto LABEL_31;
    }
    unint64_t v12 = *(void *)(v26 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_20;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_24988ADF0(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v14 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v9 = v8 | (v7 << 6);
      goto LABEL_20;
    }
    int64_t v10 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v10 >= v14) {
      goto LABEL_22;
    }
    unint64_t v11 = *(void *)(v15 + 8 * v10);
    ++v7;
    if (!v11)
    {
      int64_t v7 = v10 + 1;
      if (v10 + 1 >= v14) {
        goto LABEL_22;
      }
      unint64_t v11 = *(void *)(v15 + 8 * v7);
      if (!v11) {
        break;
      }
    }
LABEL_19:
    unint64_t v4 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v7 << 6);
LABEL_20:
    int v13 = *(unsigned __int8 *)(*(void *)(a2 + 56) + 32 * v9 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249AECF78();
    sub_249AEE358();
    if (v13 != 1) {
      sub_249AEE378();
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    v6 ^= result;
  }
  int64_t v12 = v10 + 2;
  if (v12 >= v14)
  {
LABEL_22:
    swift_release();
    return sub_249AEE348();
  }
  unint64_t v11 = *(void *)(v15 + 8 * v12);
  if (v11)
  {
    int64_t v7 = v12;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v7 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v7 >= v14) {
      goto LABEL_22;
    }
    unint64_t v11 = *(void *)(v15 + 8 * v7);
    ++v12;
    if (v11) {
      goto LABEL_19;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_24988AFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v24 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  for (int64_t i = 0; ; int64_t i = v27)
  {
    uint64_t v28 = v6;
    if (v4)
    {
      uint64_t v26 = (v4 - 1) & v4;
      int64_t v27 = i;
      unint64_t v8 = __clz(__rbit64(v4)) | (i << 6);
      goto LABEL_5;
    }
    int64_t v19 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v19 >= v24) {
      goto LABEL_19;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    int64_t v21 = i + 1;
    if (!v20)
    {
      int64_t v21 = i + 2;
      if (i + 2 >= v24) {
        goto LABEL_19;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v21);
      if (!v20) {
        break;
      }
    }
LABEL_18:
    uint64_t v26 = (v20 - 1) & v20;
    int64_t v27 = v21;
    unint64_t v8 = __clz(__rbit64(v20)) + (v21 << 6);
LABEL_5:
    uint64_t v9 = *(void *)(a2 + 56) + 96 * v8;
    uint64_t v11 = *(void *)(v9 + 24);
    uint64_t v10 = *(void *)(v9 + 32);
    uint64_t v12 = *(void *)(v9 + 48);
    uint64_t v13 = *(void *)(v9 + 56);
    uint64_t v14 = *(void *)(v9 + 72);
    uint64_t v15 = *(void *)(v9 + 80);
    char v16 = *(unsigned char *)(v9 + 40);
    char v17 = *(unsigned char *)(v9 + 64);
    char v18 = *(unsigned char *)(v9 + 88);
    swift_bridgeObjectRetain();
    sub_24988D770(v11, v10, v16);
    sub_24988D770(v12, v13, v17);
    sub_249890C2C(v14, v15, v18);
    sub_249AECF78();
    swift_bridgeObjectRelease();
    Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hash(into:)();
    sub_24988D788(v11, v10, v16);
    sub_24988D788(v12, v13, v17);
    sub_249890C40(v14, v15, v18);
    uint64_t result = sub_249AEE388();
    uint64_t v6 = result ^ v28;
    unint64_t v4 = v26;
  }
  uint64_t v22 = i + 3;
  if (i + 3 >= v24)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  unint64_t v20 = *(void *)(v23 + 8 * v22);
  if (v20)
  {
    int64_t v21 = i + 3;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v24) {
      goto LABEL_19;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24988B284(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_20;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v12 >= v7) {
      goto LABEL_22;
    }
    unint64_t v13 = *(void *)(v3 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_22;
      }
      unint64_t v13 = *(void *)(v3 + 8 * v9);
      if (!v13) {
        break;
      }
    }
LABEL_19:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_20:
    uint64_t v15 = *(void *)(a2 + 48) + 24 * v11;
    if (*(unsigned char *)(v15 + 8) == 1)
    {
      swift_retain();
    }
    else
    {
      swift_retain();
      sub_249AEDF48();
    }
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249AEE348();
    sub_249AEC878();
    swift_release();
    v8 ^= sub_249AEE388();
  }
  int64_t v14 = v12 + 2;
  if (v14 < v7)
  {
    unint64_t v13 = *(void *)(v3 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v9 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        if (v9 >= v7) {
          goto LABEL_22;
        }
        unint64_t v13 = *(void *)(v3 + 8 * v9);
        ++v14;
        if (v13) {
          goto LABEL_19;
        }
      }
LABEL_24:
      __break(1u);
      JUMPOUT(0x24988B5ACLL);
    }
    int64_t v9 = v14;
    goto LABEL_19;
  }
LABEL_22:
  swift_release();
  return sub_249AEE348();
}

uint64_t sub_24988B5C8(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  int64_t v8 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      int64_t v8 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_19;
      }
      uint64_t v10 = *(void *)(v12 + 8 * v8);
      if (!v10) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease_n();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    v7 ^= result;
  }
  int64_t v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  uint64_t v10 = *(void *)(v12 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v5) {
      goto LABEL_19;
    }
    uint64_t v10 = *(void *)(v12 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24988B798(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v23 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v20 >= v23) {
      goto LABEL_19;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v23) {
        goto LABEL_19;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_18:
    unint64_t v6 = (v21 - 1) & v21;
    unint64_t v11 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(a2 + 48) + 24 * v11;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    uint64_t v15 = *(void *)(*(void *)(a2 + 56) + 8 * v11);
    char v16 = *(unsigned char *)(v12 + 16);
    uint64_t v17 = *(void *)(a1 + 64);
    long long v18 = *(_OWORD *)(a1 + 16);
    v25[0] = *(_OWORD *)a1;
    v25[1] = v18;
    long long v19 = *(_OWORD *)(a1 + 48);
    v25[2] = *(_OWORD *)(a1 + 32);
    v25[3] = v19;
    uint64_t v26 = v17;
    sub_24988D770(v13, v14, v16);
    swift_bridgeObjectRetain();
    Theme.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_24988D788(v13, v14, v16);
    sub_24988A120((uint64_t)v25, v15);
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    v8 ^= result;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v23)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  unint64_t v21 = *(void *)(v24 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v23) {
      goto LABEL_19;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24988B990(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v30 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  for (int64_t i = 0; ; int64_t i = v34)
  {
    uint64_t v36 = v6;
    if (v4)
    {
      uint64_t v33 = (v4 - 1) & v4;
      int64_t v34 = i;
      unint64_t v8 = __clz(__rbit64(v4)) | (i << 6);
      goto LABEL_5;
    }
    int64_t v25 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v25 >= v30) {
      goto LABEL_19;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v25);
    int64_t v27 = i + 1;
    if (!v26)
    {
      int64_t v27 = i + 2;
      if (i + 2 >= v30) {
        goto LABEL_19;
      }
      unint64_t v26 = *(void *)(v29 + 8 * v27);
      if (!v26) {
        break;
      }
    }
LABEL_18:
    uint64_t v33 = (v26 - 1) & v26;
    int64_t v34 = v27;
    unint64_t v8 = __clz(__rbit64(v26)) + (v27 << 6);
LABEL_5:
    uint64_t v9 = *(void *)(a2 + 48) + 112 * v8;
    uint64_t v10 = *(void *)(v9 + 8);
    uint64_t v12 = *(void *)(v9 + 16);
    uint64_t v11 = *(void *)(v9 + 24);
    uint64_t v13 = *(void *)(v9 + 32);
    uint64_t v14 = *(void *)(v9 + 40);
    uint64_t v16 = *(void *)(v9 + 48);
    uint64_t v15 = *(void *)(v9 + 56);
    uint64_t v17 = *(void *)(v9 + 72);
    uint64_t v18 = *(void *)(v9 + 80);
    uint64_t v19 = *(void *)(v9 + 88);
    char v20 = *(unsigned char *)(v9 + 96);
    uint64_t v21 = *(void *)(v9 + 104);
    uint64_t v37 = *(void *)(*(void *)(a2 + 56) + 8 * v8);
    char v35 = *(unsigned char *)(v9 + 64);
    uint64_t v40 = *(void *)v9;
    uint64_t v41 = v10;
    uint64_t v42 = v12;
    uint64_t v43 = v11;
    uint64_t v44 = v13;
    uint64_t v45 = v14;
    uint64_t v46 = v16;
    uint64_t v47 = v15;
    char v48 = v35;
    uint64_t v49 = v17;
    uint64_t v50 = v18;
    uint64_t v51 = v19;
    char v52 = v20;
    uint64_t v53 = v21;
    uint64_t v22 = *(void *)(a1 + 64);
    long long v23 = *(_OWORD *)(a1 + 16);
    v38[0] = *(_OWORD *)a1;
    v38[1] = v23;
    long long v24 = *(_OWORD *)(a1 + 48);
    v38[2] = *(_OWORD *)(a1 + 32);
    v38[3] = v24;
    uint64_t v39 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24988CD7C(v11, v13, v14, v16, v15, v35);
    sub_24988CDF0(v18);
    swift_retain();
    swift_bridgeObjectRetain();
    ColorSet.hash(into:)((uint64_t)v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249889FFC(v11, v13, v14, v16, v15, v35);
    sub_24988D7A0(v18);
    swift_release();
    sub_24988BC30((uint64_t)v38, v37);
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    uint64_t v6 = result ^ v36;
    unint64_t v4 = v33;
  }
  uint64_t v28 = i + 3;
  if (i + 3 >= v30)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  unint64_t v26 = *(void *)(v29 + 8 * v28);
  if (v26)
  {
    int64_t v27 = i + 3;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v30) {
      goto LABEL_19;
    }
    unint64_t v26 = *(void *)(v29 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24988BC30(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a2 + 64);
  int64_t v26 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    uint64_t v29 = v6;
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v7 << 6);
      goto LABEL_20;
    }
    int64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v26) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    ++v7;
    if (!v12)
    {
      int64_t v7 = v11 + 1;
      if (v11 + 1 >= v26) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v7);
      if (!v12) {
        break;
      }
    }
LABEL_19:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v7 << 6);
LABEL_20:
    uint64_t v14 = 24 * v10;
    uint64_t v15 = *(void *)(a2 + 48) + v14;
    uint64_t v17 = *(void *)v15;
    uint64_t v16 = *(void *)(v15 + 8);
    uint64_t v18 = (uint64_t *)(*(void *)(a2 + 56) + v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    char v21 = *(unsigned char *)(v15 + 16);
    uint64_t v22 = *(void *)(a1 + 64);
    long long v23 = *(_OWORD *)(a1 + 16);
    v30[0] = *(_OWORD *)a1;
    v30[1] = v23;
    long long v24 = *(_OWORD *)(a1 + 48);
    v30[2] = *(_OWORD *)(a1 + 32);
    v30[3] = v24;
    uint64_t v31 = v22;
    sub_249890CB0(v19, v20);
    sub_24988D770(v17, v16, v21);
    Theme.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_24988D788(v17, v16, v21);
    if (v20 < 0)
    {
      sub_249AEE348();
      sub_24988A120((uint64_t)v30, v19);
      sub_249890CBC(v19, v20);
      uint64_t v8 = v29;
    }
    else
    {
      sub_249AEE348();
      if ((v20 & 1) == 0) {
        sub_249AEDF48();
      }
      uint64_t v8 = v29;
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE348();
    }
    uint64_t v6 = sub_249AEE388() ^ v8;
  }
  int64_t v13 = v11 + 2;
  if (v13 < v26)
  {
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v7 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          break;
        }
        if (v7 >= v26) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v7);
        ++v13;
        if (v12) {
          goto LABEL_19;
        }
      }
LABEL_26:
      __break(1u);
      JUMPOUT(0x24988BFACLL);
    }
    int64_t v7 = v13;
    goto LABEL_19;
  }
LABEL_24:
  swift_release();
  return sub_249AEE348();
}

uint64_t sub_24988BFC8(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v11 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v8 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v8 >= v11) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v12 + 8 * v8);
    ++v7;
    if (!v9)
    {
      int64_t v7 = v8 + 1;
      if (v8 + 1 >= v11) {
        goto LABEL_19;
      }
      uint64_t v9 = *(void *)(v12 + 8 * v7);
      if (!v9) {
        break;
      }
    }
LABEL_18:
    uint64_t v4 = (v9 - 1) & v9;
LABEL_5:
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE378();
    uint64_t result = sub_249AEE388();
    v6 ^= result;
  }
  int64_t v10 = v8 + 2;
  if (v10 >= v11)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  uint64_t v9 = *(void *)(v12 + 8 * v10);
  if (v9)
  {
    int64_t v7 = v10;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_19;
    }
    uint64_t v9 = *(void *)(v12 + 8 * v7);
    ++v10;
    if (v9) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24988C1B4(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a2 + 64);
  int64_t v24 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  for (int64_t i = 0; ; int64_t i = v28)
  {
    if (v4)
    {
      unint64_t v8 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      int64_t v28 = i;
      unint64_t v9 = v8 | (i << 6);
      goto LABEL_5;
    }
    int64_t v20 = i + 1;
    if (__OFADD__(i, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v20 >= v24) {
      goto LABEL_19;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    int64_t v22 = i + 1;
    if (!v21)
    {
      int64_t v22 = i + 2;
      if (i + 2 >= v24) {
        goto LABEL_19;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v22);
      if (!v21) {
        break;
      }
    }
LABEL_18:
    unint64_t v4 = (v21 - 1) & v21;
    int64_t v28 = v22;
    unint64_t v9 = __clz(__rbit64(v21)) + (v22 << 6);
LABEL_5:
    unint64_t v10 = *(void *)(a2 + 56) + (v9 << 6);
    uint64_t v12 = *(void **)v10;
    uint64_t v11 = *(void *)(v10 + 8);
    int64_t v13 = *(void **)(v10 + 16);
    uint64_t v14 = *(void *)(v10 + 24);
    uint64_t v15 = *(void *)(v10 + 48);
    char v16 = *(unsigned char *)(v10 + 32);
    uint64_t v17 = *(void *)(a1 + 64);
    long long v18 = *(_OWORD *)(a1 + 16);
    v29[0] = *(_OWORD *)a1;
    v29[1] = v18;
    long long v19 = *(_OWORD *)(a1 + 48);
    v29[2] = *(_OWORD *)(a1 + 32);
    v29[3] = v19;
    uint64_t v30 = v17;
    swift_bridgeObjectRetain();
    sub_24988247C(v12, v11, v13, v14, v16);
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_24988247C(v12, v11, v13, v14, v16);
    ImageAsset.ImageType.hash(into:)((uint64_t)v29);
    sub_249AEE348();
    sub_2498826E4(v12, v11, v13, v14, v16);
    swift_bridgeObjectRetain();
    sub_24988A2D4((uint64_t)v29, v15);
    swift_bridgeObjectRelease();
    sub_249AEE348();
    sub_2498826E4(v12, v11, v13, v14, v16);
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    v6 ^= result;
  }
  uint64_t v23 = i + 3;
  if (i + 3 >= v24)
  {
LABEL_19:
    swift_release();
    return sub_249AEE348();
  }
  unint64_t v21 = *(void *)(v25 + 8 * v23);
  if (v21)
  {
    int64_t v22 = i + 3;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v24) {
      goto LABEL_19;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_21:
  __break(1u);
  return result;
}

BOOL _s14CarPlayAssetUI5ThemeO7PaletteV22RepresentedColorSchemeO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  uint64_t v8 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  int v12 = *(unsigned __int8 *)(a2 + 40);
  switch(v7)
  {
    case 1:
      if (v12 != 1) {
        goto LABEL_15;
      }
      uint64_t v19 = *(void *)a2;
      uint64_t v20 = *(void *)(a2 + 8);
      sub_24988CD7C(*(void *)a2, v20, v10, v9, v11, 1);
      sub_24988CD7C(v3, v2, v5, v4, v6, 1);
      uint64_t v43 = v9;
      sub_24988CD7C(v19, v20, v10, v9, v11, 1);
      sub_24988CD7C(v3, v2, v5, v4, v6, 1);
      if ((sub_249AEC848() & 1) == 0)
      {
        sub_249889FFC(v3, v2, v5, v4, v6, 1);
        sub_249889FFC(v19, v20, v10, v9, v11, 1);
        sub_249889FFC(v19, v20, v10, v9, v11, 1);
        uint64_t v35 = v3;
        uint64_t v36 = v2;
        uint64_t v37 = v5;
        uint64_t v38 = v4;
        uint64_t v39 = v6;
        char v40 = 1;
        goto LABEL_16;
      }
      char v41 = sub_249AEC848();
      uint64_t v21 = v20;
      uint64_t v22 = 1;
      sub_249889FFC(v3, v2, v5, v4, v6, 1);
      sub_249889FFC(v19, v21, v10, v43, v11, 1);
      sub_249889FFC(v19, v21, v10, v43, v11, 1);
      sub_249889FFC(v3, v2, v5, v4, v6, 1);
      if ((v41 & 1) == 0) {
        return 0;
      }
      return v22;
    case 2:
      if (v12 != 2) {
        goto LABEL_15;
      }
      uint64_t v23 = *(void *)a2;
      uint64_t v24 = *(void *)(a2 + 16);
      uint64_t v25 = *(void *)(a2 + 8);
      sub_24988CD7C(*(void *)a2, v25, v24, v9, v11, 2);
      uint64_t v26 = v6;
      uint64_t v27 = v25;
      uint64_t v28 = v11;
      uint64_t v29 = v26;
      sub_24988CD7C(v3, v2, v5, v4, v26, 2);
      sub_24988CD7C(v23, v27, v24, v9, v28, 2);
      sub_24988CD7C(v3, v2, v5, v4, v29, 2);
      if ((sub_249888CB0(v3, v23) & 1) == 0 || (sub_249AECCE8() & 1) == 0)
      {
        sub_249889FFC(v3, v2, v5, v4, v29, 2);
        sub_249889FFC(v23, v27, v24, v9, v28, 2);
        sub_249889FFC(v23, v27, v24, v9, v28, 2);
        uint64_t v35 = v3;
        uint64_t v36 = v2;
        uint64_t v37 = v5;
        uint64_t v38 = v4;
        uint64_t v39 = v29;
        char v40 = 2;
        goto LABEL_16;
      }
      char v30 = sub_249AECCE8();
      uint64_t v31 = v29;
      uint64_t v32 = v28;
      uint64_t v33 = v27;
      char v44 = v30;
      uint64_t v34 = v31;
      sub_249889FFC(v3, v2, v5, v4, v31, 2);
      sub_249889FFC(v23, v33, v24, v9, v32, 2);
      sub_249889FFC(v23, v33, v24, v9, v32, 2);
      sub_249889FFC(v3, v2, v5, v4, v34, 2);
      return (v44 & 1) != 0;
    case 3:
      if (v12 != 3 || v8 | *(void *)a2 | v10 | v9 | v11) {
        goto LABEL_15;
      }
      sub_249889FFC(*(void *)a1, v2, v5, v4, v6, 3);
      sub_249889FFC(0, 0, 0, 0, v11, 3);
      return 1;
    default:
      if (*(unsigned char *)(a2 + 40))
      {
LABEL_15:
        uint64_t v45 = *(void *)(a2 + 8);
        uint64_t v46 = *(void *)a2;
        sub_24988CD7C(*(void *)a2, v8, v10, v9, v11, v12);
        sub_24988CD7C(v3, v2, v5, v4, v6, v7);
        sub_249889FFC(v3, v2, v5, v4, v6, v7);
        uint64_t v36 = v45;
        uint64_t v35 = v46;
        uint64_t v37 = v10;
        uint64_t v38 = v9;
        uint64_t v39 = v11;
        char v40 = v12;
LABEL_16:
        sub_249889FFC(v35, v36, v37, v38, v39, v40);
        return 0;
      }
      else
      {
        uint64_t v13 = *(void *)a2;
        uint64_t v42 = *(void *)(a2 + 16);
        uint64_t v14 = *(void *)(a2 + 24);
        uint64_t v15 = *(void *)(a2 + 32);
        uint64_t v16 = *(void *)(a2 + 8);
        sub_24988CD7C(*(void *)a2, v16, v42, v14, v11, 0);
        sub_24988CD7C(v3, v2, v5, v4, v6, 0);
        char v17 = sub_249AEC848();
        sub_249889FFC(v3, v2, v5, v4, v6, 0);
        sub_249889FFC(v13, v16, v42, v14, v15, 0);
        return v17 & 1;
      }
  }
}

unint64_t sub_24988C9D0()
{
  unint64_t result = qword_2696DDB58;
  if (!qword_2696DDB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDB58);
  }
  return result;
}

unint64_t sub_24988CA24()
{
  unint64_t result = qword_2696DDB60;
  if (!qword_2696DDB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDB60);
  }
  return result;
}

unint64_t sub_24988CA78()
{
  unint64_t result = qword_2696DDB68;
  if (!qword_2696DDB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDB68);
  }
  return result;
}

unint64_t sub_24988CACC()
{
  unint64_t result = qword_2696DDB70;
  if (!qword_2696DDB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDB70);
  }
  return result;
}

unint64_t sub_24988CB20()
{
  unint64_t result = qword_2696DDB78;
  if (!qword_2696DDB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDB78);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_24988CBBC()
{
  unint64_t result = qword_2696DDB90;
  if (!qword_2696DDB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDB90);
  }
  return result;
}

unint64_t sub_24988CC10()
{
  unint64_t result = qword_2696DDB98;
  if (!qword_2696DDB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDB98);
  }
  return result;
}

unint64_t sub_24988CC64()
{
  unint64_t result = qword_2696DDBA0;
  if (!qword_2696DDBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDBA0);
  }
  return result;
}

unint64_t sub_24988CCB8()
{
  unint64_t result = qword_2696DDBD8;
  if (!qword_2696DDBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDBD8);
  }
  return result;
}

uint64_t sub_24988CD0C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDB80);
    sub_24988CBBC();
    sub_24988CC10();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24988CD7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a6 == 2)
  {
    return swift_bridgeObjectRetain();
  }
  else
  {
    if (a6 == 1)
    {
      swift_retain();
    }
    else
    {
      if (a6) {
        return result;
      }
    }
    return swift_retain();
  }
}

uint64_t sub_24988CDF0(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

unint64_t sub_24988CE30()
{
  unint64_t result = qword_2696DDBE8;
  if (!qword_2696DDBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDBE8);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI5ThemeO7PaletteV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  long long v30 = *(_OWORD *)(a1 + 64);
  long long v31 = *(_OWORD *)(a1 + 48);
  uint64_t v29 = *(void *)(a1 + 80);
  char v28 = *(unsigned char *)(a1 + 88);
  uint64_t v23 = *(void *)(a1 + 104);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  long long v26 = *(_OWORD *)(a2 + 64);
  long long v27 = *(_OWORD *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 80);
  char v11 = *(unsigned char *)(a2 + 88);
  uint64_t v24 = *(void *)(a2 + 96);
  uint64_t v25 = *(void *)(a1 + 96);
  uint64_t v22 = *(void *)(a2 + 104);
  int v20 = *(unsigned __int8 *)(a2 + 120);
  int v21 = *(unsigned __int8 *)(a1 + 120);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_249AEE0D8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (v14 = sub_249AEE0D8(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3)
      {
        if (!v9) {
          return 0;
        }
        swift_retain();
        swift_retain();
        char v15 = sub_249AEC848();
        swift_release();
        swift_release();
        if ((v15 & 1) == 0) {
          return 0;
        }
      }
      else if (v9)
      {
        return 0;
      }
      if ((sub_2499FE070(v5, v8) & 1) == 0) {
        return 0;
      }
      v35[0] = v31;
      v35[1] = v30;
      uint64_t v36 = v29;
      char v37 = v28;
      v32[0] = v27;
      v32[1] = v26;
      uint64_t v33 = v10;
      char v34 = v11;
      BOOL v16 = _s14CarPlayAssetUI5ThemeO7PaletteV22RepresentedColorSchemeO2eeoiySbAG_AGtFZ_0((uint64_t)v35, (uint64_t)v32);
      uint64_t result = 0;
      if (v16 && v25 == v24)
      {
        if (v23)
        {
          uint64_t v17 = v22;
          if (v22)
          {
            sub_24988CDF0(v23);
            sub_24988CDF0(v22);
            if (sub_249AEC848())
            {
              char v18 = sub_249AEC848();
              sub_24988D7A0(v22);
              sub_24988D7A0(v23);
              if (v18) {
                return v21 ^ v20 ^ 1u;
              }
              return 0;
            }
            sub_24988D7A0(v22);
            uint64_t v19 = v23;
LABEL_24:
            sub_24988D7A0(v19);
            return 0;
          }
        }
        else
        {
          uint64_t v17 = v22;
          if (!v22) {
            return v21 ^ v20 ^ 1u;
          }
        }
        sub_24988CDF0(v23);
        sub_24988CDF0(v17);
        sub_24988D7A0(v23);
        uint64_t v19 = v17;
        goto LABEL_24;
      }
    }
  }
  return result;
}

uint64_t _s14CarPlayAssetUI5ThemeO7PaletteV14LinearGradientV4StopV2eeoiySbAI_AItFZ_0(double *a1, double *a2)
{
  if (*a1 == *a2)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (sub_249AEC848())
    {
      char v2 = sub_249AEC848();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      if (v2) {
        return 1;
      }
    }
    else
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
  }
  return 0;
}

uint64_t sub_24988D1F4(void *a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, void *))
{
  uint64_t v35 = a2 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v36 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v39)
  {
    if (v7)
    {
      uint64_t v38 = (v7 - 1) & v7;
      int64_t v39 = i;
      unint64_t v10 = __clz(__rbit64(v7)) | (i << 6);
    }
    else
    {
      int64_t v11 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_38;
      }
      if (v11 >= v36)
      {
LABEL_35:
        swift_release();
        return (uint64_t)a1;
      }
      unint64_t v12 = *(void *)(v35 + 8 * v11);
      int64_t v13 = i + 1;
      if (!v12)
      {
        int64_t v13 = i + 2;
        if (i + 2 >= v36) {
          goto LABEL_35;
        }
        unint64_t v12 = *(void *)(v35 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = i + 3;
          if (i + 3 >= v36) {
            goto LABEL_35;
          }
          unint64_t v12 = *(void *)(v35 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = i + 4;
            if (i + 4 >= v36) {
              goto LABEL_35;
            }
            unint64_t v12 = *(void *)(v35 + 8 * v13);
            if (!v12)
            {
              uint64_t v14 = i + 5;
              if (i + 5 >= v36) {
                goto LABEL_35;
              }
              unint64_t v12 = *(void *)(v35 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  int64_t v13 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_39;
                  }
                  if (v13 >= v36) {
                    goto LABEL_35;
                  }
                  unint64_t v12 = *(void *)(v35 + 8 * v13);
                  ++v14;
                  if (v12) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v13 = i + 5;
            }
          }
        }
      }
LABEL_23:
      uint64_t v38 = (v12 - 1) & v12;
      int64_t v39 = v13;
      unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    }
    uint64_t v15 = *(void *)(a2 + 48) + 24 * v10;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t v18 = *(unsigned __int8 *)(v15 + 16);
    v40[0] = v16;
    v40[1] = v17;
    char v41 = v18;
    sub_24988D770(v16, v17, v18);
    sub_24988D770(v16, v17, v18);
    swift_bridgeObjectRetain();
    a3(&v42, v40);
    uint64_t v19 = v42;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v40[0] = a1;
    unint64_t v22 = sub_2498EF034(v16, v17, v18);
    uint64_t v23 = a1[2];
    BOOL v24 = (v21 & 1) == 0;
    uint64_t v25 = v23 + v24;
    if (__OFADD__(v23, v24)) {
      break;
    }
    char v26 = v21;
    if (a1[3] >= v25)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v29 = (void *)v40[0];
        if (v21) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_2498DFDFC();
        uint64_t v29 = (void *)v40[0];
        if (v26) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_2498E3D54(v25, isUniquelyReferenced_nonNull_native);
      unint64_t v27 = sub_2498EF034(v16, v17, v18);
      if ((v26 & 1) != (v28 & 1)) {
        goto LABEL_40;
      }
      unint64_t v22 = v27;
      uint64_t v29 = (void *)v40[0];
      if (v26)
      {
LABEL_4:
        uint64_t v9 = v29[7];
        swift_bridgeObjectRelease();
        *(void *)(v9 + 8 * v22) = v19;
        goto LABEL_5;
      }
    }
    v29[(v22 >> 6) + 8] |= 1 << v22;
    uint64_t v30 = v29[6] + 24 * v22;
    *(void *)uint64_t v30 = v16;
    *(void *)(v30 + 8) = v17;
    *(unsigned char *)(v30 + 16) = v18;
    *(void *)(v29[7] + 8 * v22) = v19;
    uint64_t v31 = v29[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_37;
    }
    v29[2] = v33;
    sub_24988D770(v16, v17, v18);
LABEL_5:
    swift_bridgeObjectRelease();
    sub_24988D788(v16, v17, v18);
    sub_24988D788(v16, v17, v18);
    swift_bridgeObjectRelease();
    a1 = v29;
    unint64_t v7 = v38;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

uint64_t sub_24988D574(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C676E6973 && a2 == 0xE600000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4363696D616E7964 && a2 == 0xEC000000726F6C6FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72477261656E696CLL && a2 == 0xEE00746E65696461 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6F6369746C756DLL && a2 == 0xEA0000000000726FLL)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24988D770(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24988D788(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24988D7A0(uint64_t result)
{
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24988D7E0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = 0;
  int64_t v4 = 0;
  uint64_t v7 = *(void *)(a3 + 64);
  uint64_t v5 = a3 + 64;
  uint64_t v6 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v5 - 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & v6;
  uint64_t v36 = v5;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v43 = a4 + 56;
  do
  {
    while (1)
    {
      do
      {
        if (v10)
        {
          unint64_t v11 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          unint64_t v12 = v11 | (v4 << 6);
        }
        else
        {
          int64_t v13 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
            goto LABEL_42;
          }
          if (v13 >= v37) {
            return sub_249929E30(a1, a2, v34, a3);
          }
          unint64_t v14 = *(void *)(v36 + 8 * v13);
          ++v4;
          if (!v14)
          {
            int64_t v4 = v13 + 1;
            if (v13 + 1 >= v37) {
              return sub_249929E30(a1, a2, v34, a3);
            }
            unint64_t v14 = *(void *)(v36 + 8 * v4);
            if (!v14)
            {
              int64_t v4 = v13 + 2;
              if (v13 + 2 >= v37) {
                return sub_249929E30(a1, a2, v34, a3);
              }
              unint64_t v14 = *(void *)(v36 + 8 * v4);
              if (!v14)
              {
                int64_t v15 = v13 + 3;
                if (v15 >= v37) {
                  return sub_249929E30(a1, a2, v34, a3);
                }
                unint64_t v14 = *(void *)(v36 + 8 * v15);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v4 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v4 >= v37) {
                      return sub_249929E30(a1, a2, v34, a3);
                    }
                    unint64_t v14 = *(void *)(v36 + 8 * v4);
                    ++v15;
                    if (v14) {
                      goto LABEL_21;
                    }
                  }
LABEL_42:
                  __break(1u);
                  JUMPOUT(0x24988DE44);
                }
                int64_t v4 = v15;
              }
            }
          }
LABEL_21:
          unint64_t v10 = (v14 - 1) & v14;
          unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
        }
      }
      while (!*(void *)(a4 + 16));
      unint64_t v39 = v10;
      int64_t v40 = v4;
      uint64_t v16 = *(void *)(a3 + 48) + 24 * v12;
      uint64_t v18 = *(void *)v16;
      uint64_t v17 = *(void *)(v16 + 8);
      uint64_t v19 = *(unsigned __int8 *)(v16 + 16);
      unint64_t v38 = v12;
      sub_249AEE338();
      uint64_t v41 = v17;
      sub_24988D770(v18, v17, v19);
      swift_bridgeObjectRetain();
      Theme.ColorID.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      uint64_t v20 = sub_249AEE388();
      uint64_t v21 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v22 = v20 & ~v21;
      if ((*(void *)(v43 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22)) {
        break;
      }
LABEL_5:
      swift_bridgeObjectRelease();
      sub_24988D788(v18, v41, v19);
      unint64_t v10 = v39;
      int64_t v4 = v40;
    }
    uint64_t v42 = ~v21;
    while (1)
    {
      uint64_t v23 = *(void *)(a4 + 48) + 24 * v22;
      uint64_t v25 = *(void *)v23;
      uint64_t v24 = *(void *)(v23 + 8);
      char v26 = *(unsigned char *)(v23 + 16);
      switch(v26)
      {
        case 4:
          uint64_t v44 = 0x2E72656E74726170;
          unint64_t v46 = 0xE800000000000000;
          swift_bridgeObjectRetain_n();
          sub_249AED128();
          sub_249AED1E8();
          swift_bridgeObjectRelease();
          break;
        default:
          uint64_t v44 = 0;
          unint64_t v46 = 0xE000000000000000;
          sub_249AED1E8();
          sub_249AEDC08();
          break;
      }
      uint64_t v28 = v44;
      unint64_t v27 = v46;
      switch(v19)
      {
        case 4:
          uint64_t v45 = 0x2E72656E74726170;
          unint64_t v47 = 0xE800000000000000;
          swift_bridgeObjectRetain();
          sub_249AED128();
          sub_249AED1E8();
          swift_bridgeObjectRelease();
          break;
        default:
          uint64_t v45 = 0;
          unint64_t v47 = 0xE000000000000000;
          sub_249AED1E8();
          sub_249AEDC08();
          break;
      }
      if (v28 == v45 && v27 == v47) {
        break;
      }
      char v29 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24988D788(v25, v24, v26);
      if (v29) {
        goto LABEL_37;
      }
      unint64_t v22 = (v22 + 1) & v42;
      if (((*(void *)(v43 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_24988D788(v25, v24, v26);
LABEL_37:
    swift_bridgeObjectRelease();
    sub_24988D788(v18, v41, v19);
    *(unint64_t *)((char *)a1 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
    BOOL v30 = __OFADD__(v34++, 1);
    unint64_t v10 = v39;
    int64_t v4 = v40;
  }
  while (!v30);
  __break(1u);
  return sub_249929E30(a1, a2, v34, a3);
}

uint64_t sub_24988DE6C(uint64_t a1, uint64_t a2)
{
  v13[1] = *MEMORY[0x263EF8340];
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24988D7E0((void *)((char *)v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24988D7E0((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    MEMORY[0x24C5B0110](v11, -1, -1);
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

unint64_t sub_24988E028()
{
  unint64_t result = qword_2696DDBF8;
  if (!qword_2696DDBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDBF8);
  }
  return result;
}

uint64_t sub_24988E07C(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDC08);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24988E104()
{
  unint64_t result = qword_2696DDC18;
  if (!qword_2696DDC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC18);
  }
  return result;
}

unint64_t sub_24988E158()
{
  unint64_t result = qword_2696DDC20;
  if (!qword_2696DDC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC20);
  }
  return result;
}

unint64_t sub_24988E1AC()
{
  unint64_t result = qword_2696DDC28;
  if (!qword_2696DDC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC28);
  }
  return result;
}

uint64_t sub_24988E200(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDB20);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24988E268()
{
  unint64_t result = qword_2696DDC48;
  if (!qword_2696DDC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC48);
  }
  return result;
}

unint64_t sub_24988E2BC()
{
  unint64_t result = qword_2696DDC50;
  if (!qword_2696DDC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC50);
  }
  return result;
}

unint64_t sub_24988E310()
{
  unint64_t result = qword_2696DDC58;
  if (!qword_2696DDC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC58);
  }
  return result;
}

uint64_t sub_24988E364(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 104);
  char v7 = *(unsigned char *)(a1 + 88);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v2, v3, v4, v5, v6, v7);
  sub_24988CDF0(v9);
  return a1;
}

uint64_t sub_24988E414(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 104);
  char v7 = *(unsigned char *)(a1 + 88);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_249889FFC(v2, v3, v4, v5, v6, v7);
  sub_24988D7A0(v9);
  return a1;
}

unint64_t sub_24988E4C8()
{
  unint64_t result = qword_2696DDC68;
  if (!qword_2696DDC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC68);
  }
  return result;
}

unint64_t sub_24988E51C()
{
  unint64_t result = qword_2696DDC70;
  if (!qword_2696DDC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC70);
  }
  return result;
}

unint64_t sub_24988E570()
{
  unint64_t result = qword_2696DDC80;
  if (!qword_2696DDC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC80);
  }
  return result;
}

unint64_t sub_24988E5C4()
{
  unint64_t result = qword_2696DDC90;
  if (!qword_2696DDC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDC90);
  }
  return result;
}

unint64_t sub_24988E618()
{
  unint64_t result = qword_2696DDCA8;
  if (!qword_2696DDCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDCA8);
  }
  return result;
}

unint64_t sub_24988E66C()
{
  unint64_t result = qword_2696DDCB0;
  if (!qword_2696DDCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDCB0);
  }
  return result;
}

uint64_t sub_24988E6C0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDC98);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24988E730()
{
  unint64_t result = qword_2696DDCC8;
  if (!qword_2696DDCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDCC8);
  }
  return result;
}

unint64_t sub_24988E784()
{
  unint64_t result = qword_2696DDCD0;
  if (!qword_2696DDCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDCD0);
  }
  return result;
}

uint64_t sub_24988E7D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000249B14300 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B14320 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x65646E4974726F73 && a2 == 0xE900000000000078 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F43746E65636361 && a2 == 0xEB00000000726F6CLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E656E696D6F7270 && a2 == 0xE900000000000074)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_24988EB2C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24988EC18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73706F7473 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696F507472617473 && a2 == 0xEA0000000000746ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E696F50646E65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

double sub_24988ED74(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDDE0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24988EF4C();
  sub_249AEE428();
  if (!v1)
  {
    HIBYTE(v9) = 0;
    sub_24988E570();
    sub_249AEDE08();
    double v2 = v10;
    HIBYTE(v9) = 1;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return v2;
}

unint64_t sub_24988EF4C()
{
  unint64_t result = qword_2696DDCE0;
  if (!qword_2696DDCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDCE0);
  }
  return result;
}

unint64_t sub_24988EFA4()
{
  unint64_t result = qword_2696DDCE8;
  if (!qword_2696DDCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDCE8);
  }
  return result;
}

unint64_t sub_24988EFFC()
{
  unint64_t result = qword_2696DDCF0;
  if (!qword_2696DDCF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDB20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDCF0);
  }
  return result;
}

unint64_t sub_24988F06C()
{
  unint64_t result = qword_2696DDCF8;
  if (!qword_2696DDCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDCF8);
  }
  return result;
}

unint64_t sub_24988F0C4()
{
  unint64_t result = qword_2696DDD00;
  if (!qword_2696DDD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD00);
  }
  return result;
}

unint64_t sub_24988F11C()
{
  unint64_t result = qword_2696DDD08;
  if (!qword_2696DDD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD08);
  }
  return result;
}

uint64_t _s7PaletteVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_249889FFC(*(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(unsigned char *)(a1 + 88));
  uint64_t result = *(void *)(a1 + 104);
  if (result)
  {
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t _s7PaletteVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  uint64_t v9 = *(void *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  char v15 = *(unsigned char *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v7, v8, v9, v10, v11, v15);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(unsigned char *)(a1 + 88) = v15;
  uint64_t v12 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  if (v12)
  {
    uint64_t v13 = *(void *)(a2 + 112);
    *(void *)(a1 + 104) = v12;
    *(void *)(a1 + 112) = v13;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  }
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t _s7PaletteVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  char v9 = *(unsigned char *)(a2 + 88);
  sub_24988CD7C(v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  uint64_t v14 = *(void *)(a1 + 80);
  *(void *)(a1 + 48) = v4;
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  char v15 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v9;
  sub_249889FFC(v10, v11, v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  if (!v16)
  {
    if (v17)
    {
      *(void *)(a1 + 104) = v17;
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_retain();
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    goto LABEL_8;
  }
  if (!v17)
  {
    sub_24988F47C(a1 + 104);
    goto LABEL_7;
  }
  *(void *)(a1 + 104) = v17;
  swift_retain();
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t sub_24988F47C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy121_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(_OWORD *)(a1 + 105) = *(long long *)((char *)a2 + 105);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t _s7PaletteVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 80);
  char v7 = *(unsigned char *)(a2 + 88);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)(a1 + 72);
  uint64_t v12 = *(void *)(a1 + 80);
  long long v13 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v13;
  *(void *)(a1 + 80) = v6;
  char v14 = *(unsigned char *)(a1 + 88);
  *(unsigned char *)(a1 + 88) = v7;
  sub_249889FFC(v8, v9, v10, v11, v12, v14);
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v16 = *(void *)(a1 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  if (!v16) {
    goto LABEL_5;
  }
  if (!v15)
  {
    sub_24988F47C(a1 + 104);
LABEL_5:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    goto LABEL_6;
  }
  *(void *)(a1 + 104) = v15;
  swift_release();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_release();
LABEL_6:
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  return a1;
}

uint64_t _s7PaletteVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 121)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7PaletteVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 120) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 121) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 121) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.Palette()
{
  return &type metadata for Theme.Palette;
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwxx(uint64_t a1)
{
  return sub_249889FFC(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_24988CD7C(*(void *)a2, v4, v5, v6, v7, v8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  return a1;
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_24988CD7C(*(void *)a2, v4, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  char v14 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_249889FFC(v9, v10, v11, v12, v13, v14);
  return a1;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v3;
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_249889FFC(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s7PaletteV22RepresentedColorSchemeOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24988F8CC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 2u) {
    return *(unsigned __int8 *)(a1 + 40);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_24988F8E4(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)__n128 result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Theme.Palette.RepresentedColorScheme()
{
  return &type metadata for Theme.Palette.RepresentedColorScheme;
}

uint64_t _s7PaletteV14LinearGradientVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s7PaletteV14LinearGradientVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

void *_s7PaletteV14LinearGradientVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s7PaletteV14LinearGradientVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

uint64_t _s7PaletteV14LinearGradientVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7PaletteV14LinearGradientVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.Palette.LinearGradient()
{
  return &type metadata for Theme.Palette.LinearGradient;
}

uint64_t _s7PaletteV14LinearGradientV4StopVwxx()
{
  swift_release();

  return swift_release();
}

void *_s7PaletteV14LinearGradientV4StopVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  return a1;
}

void *_s7PaletteV14LinearGradientV4StopVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s7PaletteV14LinearGradientV4StopVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t _s7PaletteV14LinearGradientV4StopVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s7PaletteV14LinearGradientV4StopVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.Palette.LinearGradient.Stop()
{
  return &type metadata for Theme.Palette.LinearGradient.Stop;
}

ValueMetadata *_s10CodingKeysOMa()
{
  return &_s10CodingKeysON;
}

unsigned char *_s7PaletteV14LinearGradientV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24988FD70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7PaletteV14LinearGradientV10CodingKeysOMa()
{
  return &_s7PaletteV14LinearGradientV10CodingKeysON;
}

unsigned char *_s10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24988FE74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7PaletteV14LinearGradientV4StopV10CodingKeysOMa()
{
  return &_s7PaletteV14LinearGradientV4StopV10CodingKeysON;
}

uint64_t _s7PaletteV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s7PaletteV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249890008);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7PaletteV10CodingKeysOMa()
{
  return &_s7PaletteV10CodingKeysON;
}

uint64_t _s7PaletteV22RepresentedColorSchemeO10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s7PaletteV22RepresentedColorSchemeO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24989019CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO10CodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO10CodingKeysON;
}

uint64_t sub_2498901E0()
{
  return 0;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysON;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO22DynamicColorCodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO22DynamicColorCodingKeysON;
}

uint64_t getEnumTagSinglePayload for ImageGroupConfiguration.InstrumentDataTransformationType(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s7PaletteV22RepresentedColorSchemeO16SingleCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2498902F4);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO24LinearGradientCodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO24LinearGradientCodingKeysON;
}

ValueMetadata *_s7PaletteV22RepresentedColorSchemeO20MulticolorCodingKeysOMa()
{
  return &_s7PaletteV22RepresentedColorSchemeO20MulticolorCodingKeysON;
}

unint64_t sub_249890340()
{
  unint64_t result = qword_2696DDD10;
  if (!qword_2696DDD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD10);
  }
  return result;
}

unint64_t sub_249890398()
{
  unint64_t result = qword_2696DDD18;
  if (!qword_2696DDD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD18);
  }
  return result;
}

unint64_t sub_2498903F0()
{
  unint64_t result = qword_2696DDD20;
  if (!qword_2696DDD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD20);
  }
  return result;
}

unint64_t sub_249890448()
{
  unint64_t result = qword_2696DDD28;
  if (!qword_2696DDD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD28);
  }
  return result;
}

unint64_t sub_2498904A0()
{
  unint64_t result = qword_2696DDD30;
  if (!qword_2696DDD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD30);
  }
  return result;
}

unint64_t sub_2498904F8()
{
  unint64_t result = qword_2696DDD38;
  if (!qword_2696DDD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD38);
  }
  return result;
}

unint64_t sub_249890550()
{
  unint64_t result = qword_2696DDD40;
  if (!qword_2696DDD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD40);
  }
  return result;
}

unint64_t sub_2498905A8()
{
  unint64_t result = qword_2696DDD48;
  if (!qword_2696DDD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD48);
  }
  return result;
}

unint64_t sub_249890600()
{
  unint64_t result = qword_2696DDD50;
  if (!qword_2696DDD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD50);
  }
  return result;
}

unint64_t sub_249890658()
{
  unint64_t result = qword_2696DDD58;
  if (!qword_2696DDD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD58);
  }
  return result;
}

unint64_t sub_2498906B0()
{
  unint64_t result = qword_2696DDD60;
  if (!qword_2696DDD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD60);
  }
  return result;
}

unint64_t sub_249890708()
{
  unint64_t result = qword_2696DDD68;
  if (!qword_2696DDD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD68);
  }
  return result;
}

unint64_t sub_249890760()
{
  unint64_t result = qword_2696DDD70;
  if (!qword_2696DDD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD70);
  }
  return result;
}

unint64_t sub_2498907B8()
{
  unint64_t result = qword_2696DDD78;
  if (!qword_2696DDD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD78);
  }
  return result;
}

unint64_t sub_249890810()
{
  unint64_t result = qword_2696DDD80;
  if (!qword_2696DDD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD80);
  }
  return result;
}

unint64_t sub_249890868()
{
  unint64_t result = qword_2696DDD88;
  if (!qword_2696DDD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD88);
  }
  return result;
}

unint64_t sub_2498908C0()
{
  unint64_t result = qword_2696DDD90;
  if (!qword_2696DDD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD90);
  }
  return result;
}

unint64_t sub_249890918()
{
  unint64_t result = qword_2696DDD98;
  if (!qword_2696DDD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDD98);
  }
  return result;
}

unint64_t sub_249890970()
{
  unint64_t result = qword_2696DDDA0;
  if (!qword_2696DDDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDDA0);
  }
  return result;
}

unint64_t sub_2498909C8()
{
  unint64_t result = qword_2696DDDA8;
  if (!qword_2696DDDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDDA8);
  }
  return result;
}

unint64_t sub_249890A20()
{
  unint64_t result = qword_2696DDDB0;
  if (!qword_2696DDDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDDB0);
  }
  return result;
}

unint64_t sub_249890A78()
{
  unint64_t result = qword_2696DDDB8;
  if (!qword_2696DDDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDDB8);
  }
  return result;
}

unint64_t sub_249890AD0()
{
  unint64_t result = qword_2696DDDC0;
  if (!qword_2696DDDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDDC0);
  }
  return result;
}

unint64_t sub_249890B28()
{
  unint64_t result = qword_2696DDDC8;
  if (!qword_2696DDDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDDC8);
  }
  return result;
}

unint64_t sub_249890B80()
{
  unint64_t result = qword_2696DDDD0;
  if (!qword_2696DDDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDDD0);
  }
  return result;
}

unint64_t sub_249890BD8()
{
  unint64_t result = qword_2696DDDD8;
  if (!qword_2696DDDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDDD8);
  }
  return result;
}

uint64_t sub_249890C2C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_24988D770(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_249890C40(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_24988D788(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_249890C54(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249890CB0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_249890CBC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t ColorMap.explicit(colorIDs:colorSet:)(uint64_t a1, uint64_t *a2)
{
  void (*v10)(uint64_t *__return_ptr, void *);
  uint64_t v11;
  uint64_t v13;
  long long v14;
  long long v15;
  long long v16;
  uint64_t v17;
  char v18;
  long long v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  uint64_t v4 = a2[7];
  char v5 = *((unsigned char *)a2 + 64);
  uint64_t v6 = a2[11];
  char v7 = *((unsigned char *)a2 + 96);
  uint64_t v8 = a2[13];
  uint64_t v9 = *v2;
  uint64_t v13 = *a2;
  char v14 = *(_OWORD *)(a2 + 1);
  uint64_t v15 = *(_OWORD *)(a2 + 3);
  uint64_t v16 = *(_OWORD *)(a2 + 5);
  uint64_t v17 = v4;
  uint64_t v18 = v5;
  uint64_t v19 = *(_OWORD *)(a2 + 9);
  uint64_t v20 = v6;
  uint64_t v21 = v7;
  unint64_t v22 = v8;
  long long v10 = (void (*)(uint64_t *__return_ptr, void *))v9(&v13);
  char v11 = sub_24988D1F4(MEMORY[0x263F8EE80], a1, v10);
  swift_release();
  return v11;
}

uint64_t ColorMap.allColorIDs(colorSet:)(uint64_t a1)
{
  void (*v33)(uint64_t *__return_ptr, void **);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  long long v38;
  long long v39;
  long long v40;
  uint64_t v41;
  char v42;
  long long v43;
  uint64_t v44;
  char v45;
  uint64_t v46;

  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 88);
  char v5 = *(unsigned char *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  char v7 = *v1;
  int64_t v37 = *(void **)a1;
  long long v8 = *(_OWORD *)(a1 + 24);
  unint64_t v38 = *(_OWORD *)(a1 + 8);
  unint64_t v39 = v8;
  int64_t v40 = *(_OWORD *)(a1 + 40);
  uint64_t v41 = v2;
  uint64_t v42 = v3;
  uint64_t v43 = *(_OWORD *)(a1 + 72);
  uint64_t v44 = v4;
  uint64_t v45 = v5;
  unint64_t v46 = v6;
  uint64_t v33 = (void (*)(uint64_t *__return_ptr, void **))v7(&v37);
  uint64_t v9 = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10)
  {
    swift_release();
    unint64_t v27 = (void *)MEMORY[0x263F8EE80];
LABEL_18:
    swift_bridgeObjectRelease();
    return (uint64_t)v27;
  }
  swift_bridgeObjectRetain();
  char v11 = (unsigned __int8 *)(v9 + 48);
  uint64_t v12 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v35 = v10;
    uint64_t v14 = *((void *)v11 - 2);
    uint64_t v15 = *((void *)v11 - 1);
    uint64_t v16 = *v11;
    int64_t v37 = (void *)v14;
    *(void *)&unint64_t v38 = v15;
    BYTE8(v38) = v16;
    sub_24988D770(v14, v15, v16);
    sub_24988D770(v14, v15, v16);
    swift_bridgeObjectRetain();
    v33(&v36, &v37);
    uint64_t v17 = v36;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v37 = v12;
    unint64_t v20 = sub_2498EF034(v14, v15, v16);
    uint64_t v21 = v12[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22)) {
      break;
    }
    char v24 = v19;
    uint64_t v34 = v17;
    if (v12[3] >= v23)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v27 = v37;
        if (v19) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_2498DFDFC();
        unint64_t v27 = v37;
        if (v24) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_2498E3D54(v23, isUniquelyReferenced_nonNull_native);
      unint64_t v25 = sub_2498EF034(v14, v15, v16);
      if ((v24 & 1) != (v26 & 1)) {
        goto LABEL_21;
      }
      unint64_t v20 = v25;
      unint64_t v27 = v37;
      if (v24)
      {
LABEL_3:
        uint64_t v13 = v27[7];
        swift_bridgeObjectRelease();
        *(void *)(v13 + 8 * v20) = v34;
        goto LABEL_4;
      }
    }
    v27[(v20 >> 6) + 8] |= 1 << v20;
    uint64_t v28 = v27[6] + 24 * v20;
    *(void *)uint64_t v28 = v14;
    *(void *)(v28 + 8) = v15;
    *(unsigned char *)(v28 + 16) = v16;
    *(void *)(v27[7] + 8 * v20) = v34;
    uint64_t v29 = v27[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_20;
    }
    v27[2] = v31;
    sub_24988D770(v14, v15, v16);
LABEL_4:
    v11 += 24;
    swift_bridgeObjectRelease();
    sub_24988D788(v14, v15, v16);
    sub_24988D788(v14, v15, v16);
    swift_bridgeObjectRelease();
    uint64_t v12 = v27;
    uint64_t v10 = v35 - 1;
    if (v35 == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

uint64_t sub_249891094()
{
  return sub_249AEE388();
}

uint64_t sub_249891104()
{
  ColorSet.ColorID.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249891170()
{
  return sub_249AEE388();
}

uint64_t sub_2498911DC()
{
  return sub_2498F1598();
}

uint64_t ColorSet.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t ColorSet.colors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ColorSet.representedColorScheme.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  char v7 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 40) = v7;
  return sub_24988CD7C(v2, v3, v4, v5, v6, v7);
}

uint64_t ColorSet.sortIndex.getter()
{
  return *(void *)(v0 + 72);
}

uint64_t ColorSet.accentColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  *a1 = v2;
  a1[1] = v3;
  return sub_24988CDF0(v2);
}

uint64_t ColorSet.prominent.getter()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t ColorSet.backgroundOverrideColor.getter()
{
  return swift_retain();
}

uint64_t ColorSet.init(id:color1:color2:color3:color4:color5:color6:color7:color8:activeCruiseControl:speedAssist:inactiveCruiseControl:lowState:criticalState:redline:homologatedSecondaryLabel:representedColorScheme:sortIndex:accentColor:prominent:backgroundOverrideColor:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14, uint64_t *a15, uint64_t *a16, uint64_t *a17, uint64_t *a18, uint64_t a19, uint64_t *a20,char a21,uint64_t a22)
{
  uint64_t v22 = 0;
  uint64_t v76 = a1[1];
  uint64_t v77 = *a1;
  uint64_t v23 = *a2;
  char v24 = *((unsigned char *)a2 + 8);
  uint64_t v25 = *a3;
  char v26 = *((unsigned char *)a3 + 8);
  uint64_t v27 = *a4;
  char v28 = *((unsigned char *)a4 + 8);
  uint64_t v29 = *a5;
  char v30 = *((unsigned char *)a5 + 8);
  uint64_t v87 = v23;
  uint64_t v31 = *a6;
  char v32 = *((unsigned char *)a6 + 8);
  v88[0] = v24;
  uint64_t v33 = *a7;
  char v34 = *((unsigned char *)a7 + 8);
  uint64_t v91 = v25;
  uint64_t v35 = *a8;
  char v36 = *((unsigned char *)a8 + 8);
  char v92 = v26;
  uint64_t v37 = *a10;
  char v38 = *((unsigned char *)a10 + 8);
  uint64_t v95 = v27;
  uint64_t v39 = *a11;
  char v40 = *((unsigned char *)a11 + 8);
  char v96 = v28;
  uint64_t v41 = *a12;
  char v42 = *((unsigned char *)a12 + 8);
  uint64_t v99 = v29;
  uint64_t v43 = *a13;
  char v44 = *((unsigned char *)a13 + 8);
  char v100 = v30;
  uint64_t v45 = *a14;
  char v46 = *((unsigned char *)a14 + 8);
  uint64_t v103 = v31;
  uint64_t v47 = *a15;
  char v48 = *((unsigned char *)a15 + 8);
  char v104 = v32;
  uint64_t v49 = *a16;
  char v50 = *((unsigned char *)a16 + 8);
  uint64_t v107 = v33;
  uint64_t v51 = *a17;
  char v52 = *((unsigned char *)a17 + 8);
  char v108 = v34;
  uint64_t v109 = 7;
  uint64_t v111 = v35;
  uint64_t v74 = *a18;
  uint64_t v75 = a18[1];
  char v112 = v36;
  uint64_t v113 = 8;
  uint64_t v115 = v37;
  uint64_t v53 = a18[2];
  uint64_t v54 = a18[3];
  char v116 = v38;
  uint64_t v70 = v54;
  uint64_t v71 = a18[4];
  char v73 = *((unsigned char *)a18 + 40);
  uint64_t v119 = v39;
  uint64_t v68 = v53;
  uint64_t v69 = *a20;
  uint64_t v72 = a20[1];
  long long v84 = xmmword_249AF0A50;
  char v120 = v40;
  uint64_t v123 = v41;
  char v124 = v42;
  uint64_t v85 = 1;
  char v86 = 0;
  uint64_t v127 = v43;
  uint64_t v89 = 2;
  char v90 = 0;
  char v128 = v44;
  uint64_t v93 = 3;
  char v94 = 0;
  uint64_t v131 = v45;
  uint64_t v97 = 4;
  char v98 = 0;
  char v132 = v46;
  uint64_t v101 = 5;
  char v102 = 0;
  uint64_t v135 = v47;
  uint64_t v105 = 6;
  char v106 = 0;
  char v110 = 0;
  char v114 = 0;
  uint64_t v117 = 0;
  char v118 = 1;
  uint64_t v121 = 1;
  char v122 = 1;
  uint64_t v125 = 2;
  char v126 = 1;
  uint64_t v129 = 3;
  char v130 = 1;
  uint64_t v133 = 4;
  char v134 = 1;
  char v136 = v48;
  uint64_t v137 = 5;
  char v138 = 1;
  uint64_t v139 = v49;
  char v140 = v50;
  uint64_t v141 = 6;
  uint64_t v143 = v51;
  char v144 = v52;
  v83[0] = MEMORY[0x263F8EE78];
  char v142 = 1;
  do
  {
    uint64_t v58 = *(void *)&v88[v22 - 8];
    if (v88[v22])
    {
      uint64_t v55 = swift_bridgeObjectRetain();
      unint64_t v56 = v58;
    }
    else
    {
      swift_retain();
      uint64_t v59 = sub_249AEC8E8();
      uint64_t v81 = sub_249AEC8E8();
      uint64_t v80 = sub_249AEC8E8();
      uint64_t v60 = sub_249AEC8E8();
      uint64_t v82 = v22;
      uint64_t v61 = sub_249AEC8E8();
      uint64_t v62 = sub_249AEC8E8();
      uint64_t v79 = sub_249AEC8E8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDDF8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_249AF0A60;
      *(void *)(inited + 32) = 0;
      *(void *)(inited + 40) = v59;
      *(void *)(inited + 48) = 1;
      *(void *)(inited + 56) = v81;
      *(void *)(inited + 64) = 2;
      *(void *)(inited + 72) = v80;
      *(void *)(inited + 80) = 3;
      *(void *)(inited + 88) = v60;
      *(void *)(inited + 96) = 4;
      *(void *)(inited + 104) = v61;
      *(void *)(inited + 112) = 5;
      *(void *)(inited + 120) = v62;
      *(void *)(inited + 128) = 6;
      *(void *)(inited + 136) = v79;
      unint64_t v56 = sub_2498F0C0C((void *)inited);
      swift_setDeallocating();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE00);
      swift_arrayDestroy();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v22 = v82;
      swift_release();
      swift_release();
      swift_release();
      uint64_t v55 = sub_249896754(v58, 0);
    }
    MEMORY[0x270FA5388](v55);
    uint64_t v57 = sub_2498964D0(v56, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))sub_249896738);
    swift_bridgeObjectRelease();
    sub_249894798(v57);
    v22 += 32;
  }
  while (v22 != 480);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDDE8);
  swift_arrayDestroy();
  if (*(void *)(v83[0] + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDDF0);
    uint64_t v64 = sub_249AEDCA8();
  }
  else
  {
    uint64_t v64 = MEMORY[0x263F8EE80];
  }
  v83[0] = v64;
  uint64_t v65 = swift_bridgeObjectRetain();
  sub_2498954F4(v65, 1, v83);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v67 = v83[0];
  *(void *)a9 = v77;
  *(void *)(a9 + 8) = v76;
  *(void *)(a9 + 16) = v67;
  *(void *)(a9 + 24) = v74;
  *(void *)(a9 + 32) = v75;
  *(void *)(a9 + 40) = v68;
  *(void *)(a9 + 48) = v70;
  *(void *)(a9 + 56) = v71;
  *(unsigned char *)(a9 + 64) = v73;
  *(void *)(a9 + 72) = a19;
  *(void *)(a9 + 80) = v69;
  *(void *)(a9 + 88) = v72;
  *(unsigned char *)(a9 + 96) = a21 & 1;
  *(void *)(a9 + 104) = a22;
  return result;
}

__n128 ColorSet.init(id:colors:representedColorScheme:sortIndex:accentColor:prominent:backgroundOverrideColor:)@<Q0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  long long v8 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a8 + 24) = *(_OWORD *)a3;
  uint64_t v9 = a1[1];
  uint64_t v10 = *(void *)(a3 + 32);
  char v11 = *(unsigned char *)(a3 + 40);
  *(void *)a8 = *a1;
  *(void *)(a8 + 8) = v9;
  *(void *)(a8 + 16) = a2;
  *(_OWORD *)(a8 + 40) = v8;
  *(void *)(a8 + 56) = v10;
  *(unsigned char *)(a8 + 64) = v11;
  *(void *)(a8 + 72) = a4;
  __n128 result = *a5;
  *(__n128 *)(a8 + 80) = *a5;
  *(unsigned char *)(a8 + 96) = a6;
  *(void *)(a8 + 104) = a7;
  return result;
}

uint64_t ColorSet.color(_:_:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *a1;
  char v6 = *((unsigned char *)a1 + 8);
  uint64_t v7 = v3[7];
  char v8 = *((unsigned char *)v3 + 64);
  uint64_t v9 = v3[11];
  char v10 = *((unsigned char *)v3 + 96);
  uint64_t v11 = v3[13];
  uint64_t v16 = *v3;
  long long v17 = *(_OWORD *)(v3 + 1);
  long long v18 = *(_OWORD *)(v3 + 3);
  long long v19 = *(_OWORD *)(v3 + 5);
  uint64_t v20 = v7;
  char v21 = v8;
  long long v22 = *(_OWORD *)(v3 + 9);
  uint64_t v23 = v9;
  char v24 = v10;
  uint64_t v25 = v11;
  uint64_t v14 = v5;
  char v15 = v6;
  sub_249896394((uint64_t)&v14, a2);
  uint64_t v12 = swift_retain();
  static GradientColor.singleColor(_:)(v12, a3);

  return swift_release();
}

uint64_t ColorSet.color(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_249896394(a1, a2);

  return swift_retain();
}

uint64_t ColorSet.color(_:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  char v5 = *((unsigned char *)a1 + 8);
  uint64_t v6 = a1[2];
  uint64_t v7 = v2[7];
  char v8 = *((unsigned char *)v2 + 64);
  uint64_t v9 = v2[11];
  char v10 = *((unsigned char *)v2 + 96);
  uint64_t v11 = v2[13];
  uint64_t v16 = *v2;
  long long v17 = *(_OWORD *)(v2 + 1);
  long long v18 = *(_OWORD *)(v2 + 3);
  long long v19 = *(_OWORD *)(v2 + 5);
  uint64_t v20 = v7;
  char v21 = v8;
  long long v22 = *(_OWORD *)(v2 + 9);
  uint64_t v23 = v9;
  char v24 = v10;
  uint64_t v25 = v11;
  uint64_t v14 = v4;
  char v15 = v5;
  sub_249896394((uint64_t)&v14, v6);
  uint64_t v12 = swift_retain();
  static GradientColor.singleColor(_:)(v12, a2);

  return swift_release();
}

uint64_t ColorSet.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v16 = *(void *)(v1 + 40);
  uint64_t v17 = *(void *)(v1 + 48);
  uint64_t v6 = *(unsigned __int8 *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 80);
  uint64_t v18 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 104);
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988B284(a1, v4);
  swift_bridgeObjectRelease();
  switch(v6)
  {
    case 1:
      sub_249AEE348();
      swift_retain();
      swift_retain();
      sub_249AEC878();
      sub_249AEC878();
      uint64_t v9 = v3;
      uint64_t v10 = v5;
      uint64_t v11 = v16;
      uint64_t v12 = v17;
      uint64_t v13 = v18;
      char v14 = 1;
      goto LABEL_6;
    case 2:
      sub_249AEE348();
      swift_bridgeObjectRetain();
      sub_249889F60(a1, v3);
      sub_249AECCF8();
      sub_249AECCF8();
      uint64_t v9 = v3;
      uint64_t v10 = v5;
      uint64_t v11 = v16;
      uint64_t v12 = v17;
      uint64_t v13 = v18;
      char v14 = 2;
      goto LABEL_6;
    case 3:
      sub_249AEE348();
      goto LABEL_7;
    default:
      sub_249AEE348();
      swift_retain();
      sub_249AEC878();
      uint64_t v9 = v3;
      uint64_t v10 = v5;
      uint64_t v11 = v16;
      uint64_t v12 = v17;
      uint64_t v13 = v18;
      char v14 = 0;
LABEL_6:
      sub_249889FFC(v9, v10, v11, v12, v13, v14);
LABEL_7:
      sub_249AEE348();
      sub_249AEE358();
      if (v7)
      {
        swift_retain();
        swift_retain();
        sub_249AEC878();
        sub_249AEC878();
        sub_24988D7A0(v7);
      }
      sub_249AEE358();
      if (!v8) {
        return sub_249AEE358();
      }
      sub_249AEE358();
      swift_retain();
      sub_249AEC878();
      return swift_release();
  }
}

unint64_t sub_249891D0C(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x73726F6C6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x65646E4974726F73;
      break;
    case 4:
      unint64_t result = 0x6F43746E65636361;
      break;
    case 5:
      unint64_t result = 0x6E656E696D6F7270;
      break;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249891E04()
{
  return sub_249891D0C(*v0);
}

uint64_t sub_249891E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498976B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_249891E34(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_249891E40(uint64_t a1)
{
  unint64_t v2 = sub_249896760();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249891E7C(uint64_t a1)
{
  unint64_t v2 = sub_249896760();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ColorSet.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v28 = v1[3];
  uint64_t v29 = v9;
  uint64_t v10 = v1[4];
  uint64_t v26 = v1[5];
  uint64_t v27 = v10;
  uint64_t v11 = v1[6];
  uint64_t v24 = v1[7];
  uint64_t v25 = v11;
  int v37 = *((unsigned __int8 *)v1 + 64);
  uint64_t v12 = v1[9];
  uint64_t v21 = v1[10];
  uint64_t v22 = v1[11];
  uint64_t v23 = v12;
  int v20 = *((unsigned __int8 *)v1 + 96);
  uint64_t v19 = v1[13];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249896760();
  sub_249AEE468();
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  char v38 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB20);
  sub_24988E200(&qword_2696DDC00);
  uint64_t v13 = v30;
  sub_249AEDF08();
  if (!v13)
  {
    uint64_t v14 = v25;
    uint64_t v15 = v26;
    uint64_t v17 = v27;
    uint64_t v16 = v28;
    uint64_t v31 = v29;
    char v38 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE18);
    sub_2498967B4();
    sub_249AEDF08();
    uint64_t v31 = v16;
    uint64_t v32 = v17;
    uint64_t v33 = v15;
    uint64_t v34 = v14;
    uint64_t v35 = v24;
    char v36 = v37;
    char v38 = 2;
    sub_24988E1AC();
    sub_249AEDF08();
    LOBYTE(v31) = 3;
    sub_249AEDEE8();
    uint64_t v31 = v21;
    uint64_t v32 = v22;
    char v38 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB80);
    sub_24988CD0C(&qword_2696DDB88);
    sub_249AEDEA8();
    LOBYTE(v31) = 5;
    sub_249AEDEC8();
    uint64_t v31 = v19;
    char v38 = 6;
    sub_24988CC10();
    sub_249AEDEA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t ColorSet.hashValue.getter()
{
  uint64_t v1 = v0[7];
  char v2 = *((unsigned char *)v0 + 64);
  uint64_t v3 = v0[11];
  char v4 = *((unsigned char *)v0 + 96);
  uint64_t v5 = v0[13];
  uint64_t v8 = *v0;
  long long v9 = *(_OWORD *)(v0 + 1);
  long long v10 = *(_OWORD *)(v0 + 3);
  long long v11 = *(_OWORD *)(v0 + 5);
  uint64_t v12 = v1;
  char v13 = v2;
  long long v14 = *(_OWORD *)(v0 + 9);
  uint64_t v15 = v3;
  char v16 = v4;
  uint64_t v17 = v5;
  sub_249AEE338();
  ColorSet.hash(into:)((uint64_t)v7);
  return sub_249AEE388();
}

uint64_t ColorSet.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249896760();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB20);
  char v51 = 0;
  sub_24988E200(&qword_2696DDC38);
  sub_249AEDE08();
  uint64_t v43 = a2;
  uint64_t v10 = v44;
  uint64_t v9 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE18);
  char v51 = 1;
  sub_2498968F4();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  uint64_t v41 = v10;
  uint64_t v11 = v44;
  char v51 = 2;
  sub_24988E310();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  uint64_t v40 = v11;
  uint64_t v12 = v44;
  uint64_t v13 = v46;
  uint64_t v14 = v47;
  LOBYTE(v44) = 3;
  uint64_t v38 = v12;
  uint64_t v39 = v45;
  uint64_t v42 = v48;
  int v50 = v49;
  sub_24988CD7C(v12, v45, v46, v47, v48, v49);
  uint64_t v33 = sub_249AEDDE8();
  uint64_t v36 = v13;
  uint64_t v37 = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB80);
  char v51 = 4;
  sub_24988CD0C(&qword_2696DDBE0);
  sub_249AEDDA8();
  uint64_t v15 = v44;
  uint64_t v16 = v45;
  LOBYTE(v44) = 5;
  sub_24988CDF0(v15);
  int v17 = sub_249AEDDC8();
  uint64_t v34 = v16;
  uint64_t v35 = v15;
  LODWORD(v32) = v17;
  char v51 = 6;
  sub_24988CBBC();
  sub_249AEDDA8();
  int v31 = v32 & 1;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v32 = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v18 = v38;
  uint64_t v19 = v39;
  uint64_t v20 = v36;
  char v21 = v50;
  sub_24988CD7C(v38, v39, v36, v37, v42, v50);
  uint64_t v22 = v35;
  sub_24988CDF0(v35);
  swift_retain();
  sub_24988D7A0(v22);
  uint64_t v23 = v37;
  sub_249889FFC(v18, v19, v20, v37, v42, v21);
  swift_bridgeObjectRelease();
  uint64_t v24 = v40;
  swift_bridgeObjectRelease();
  uint64_t v25 = v43;
  uint64_t *v43 = v41;
  v25[1] = v9;
  v25[2] = v24;
  v25[3] = v18;
  _OWORD v25[4] = v19;
  v25[5] = v20;
  uint64_t v26 = v42;
  v25[6] = v23;
  v25[7] = v26;
  *((unsigned char *)v25 + 64) = v21;
  uint64_t v27 = v34;
  uint64_t v28 = v35;
  v25[9] = v33;
  v25[10] = v28;
  v25[11] = v27;
  *((unsigned char *)v25 + 96) = v31;
  v25[13] = v32;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249889FFC(v18, v19, v20, v37, v42, v50);
  sub_24988D7A0(v28);
  return swift_release();
}

uint64_t sub_249892928@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ColorSet.init(from:)(a1, a2);
}

uint64_t sub_249892940(void *a1)
{
  return ColorSet.encode(to:)(a1);
}

uint64_t sub_249892958()
{
  uint64_t v1 = v0[7];
  char v2 = *((unsigned char *)v0 + 64);
  uint64_t v3 = v0[11];
  char v4 = *((unsigned char *)v0 + 96);
  uint64_t v5 = v0[13];
  uint64_t v8 = *v0;
  long long v9 = *(_OWORD *)(v0 + 1);
  long long v10 = *(_OWORD *)(v0 + 3);
  long long v11 = *(_OWORD *)(v0 + 5);
  uint64_t v12 = v1;
  char v13 = v2;
  long long v14 = *(_OWORD *)(v0 + 9);
  uint64_t v15 = v3;
  char v16 = v4;
  uint64_t v17 = v5;
  sub_249AEE338();
  ColorSet.hash(into:)((uint64_t)v7);
  return sub_249AEE388();
}

uint64_t sub_2498929F0()
{
  uint64_t v1 = v0[7];
  char v2 = *((unsigned char *)v0 + 64);
  uint64_t v3 = v0[11];
  char v4 = *((unsigned char *)v0 + 96);
  uint64_t v5 = v0[13];
  uint64_t v8 = *v0;
  long long v9 = *(_OWORD *)(v0 + 1);
  long long v10 = *(_OWORD *)(v0 + 3);
  long long v11 = *(_OWORD *)(v0 + 5);
  uint64_t v12 = v1;
  char v13 = v2;
  long long v14 = *(_OWORD *)(v0 + 9);
  uint64_t v15 = v3;
  char v16 = v4;
  uint64_t v17 = v5;
  sub_249AEE338();
  ColorSet.hash(into:)((uint64_t)v7);
  return sub_249AEE388();
}

uint64_t static ColorSet.< infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_249AEE0D8();
  }
}

uint64_t sub_249892AB4(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_249AEE0D8();
  }
}

uint64_t sub_249892AE4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_249892B24(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_249AEE0D8() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_249892B70(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_249AEE0D8();
  }
}

unint64_t static ColorSet.shades(color0:color1:color2:color3:color4:color5:color6:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDDF8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A60;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = a1;
  *(void *)(inited + 48) = 1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 64) = 2;
  *(void *)(inited + 72) = a3;
  *(void *)(inited + 80) = 3;
  *(void *)(inited + 88) = a4;
  *(void *)(inited + 96) = 4;
  *(void *)(inited + 104) = a5;
  *(void *)(inited + 112) = 5;
  *(void *)(inited + 120) = a6;
  *(void *)(inited + 128) = 6;
  *(void *)(inited + 136) = a7;
  unint64_t v15 = sub_2498F0C0C((void *)inited);
  swift_setDeallocating();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE00);
  swift_arrayDestroy();
  return v15;
}

uint64_t ColorSet.ColorID.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = HIBYTE(a2) & 0xF;
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v8 = v6;
  }
  else {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8) {
    goto LABEL_54;
  }
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((a1 & 0x1000000000000000) != 0) {
        long long v9 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        long long v9 = (unsigned __int8 *)sub_249AEDB48();
      }
      long long v10 = sub_2498959CC(v9, v7, 10);
      if ((v11 & 1) == 0) {
        goto LABEL_10;
      }
LABEL_54:
      if (a1 == 0xD000000000000013 && a2 == 0x8000000249B14380 || (sub_249AEE0D8() & 1) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v12 = 0;
        char v19 = 0;
LABEL_58:
        char v18 = 1;
        goto LABEL_59;
      }
      if (a1 == 0x7373416465657073 && a2 == 0xEB00000000747369 || (sub_249AEE0D8() & 1) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        char v19 = 0;
        uint64_t v12 = 1;
        goto LABEL_58;
      }
      if (a1 == 0xD000000000000015 && a2 == 0x8000000249B14360 || (sub_249AEE0D8() & 1) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        char v19 = 0;
        char v18 = 1;
        uint64_t v12 = 2;
        goto LABEL_59;
      }
      if (a1 == 0x6574617453776F6CLL && a2 == 0xE800000000000000 || (sub_249AEE0D8() & 1) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        char v19 = 0;
        char v18 = 1;
        uint64_t v12 = 3;
        goto LABEL_59;
      }
      if (a1 == 0x6C61636974697263 && a2 == 0xED00006574617453 || (sub_249AEE0D8() & 1) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        char v19 = 0;
        char v18 = 1;
        uint64_t v12 = 4;
        goto LABEL_59;
      }
      if (a1 == 0x656E696C646572 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
      {
        uint64_t result = swift_bridgeObjectRelease();
        char v19 = 0;
        char v18 = 1;
        uint64_t v12 = 5;
        goto LABEL_59;
      }
      if (a1 == 0xD000000000000019 && a2 == 0x8000000249B14340)
      {
        uint64_t result = swift_bridgeObjectRelease();
LABEL_89:
        char v19 = 0;
        char v18 = 1;
        uint64_t v12 = 6;
        goto LABEL_59;
      }
LABEL_88:
      char v29 = sub_249AEE0D8();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v29 & 1) == 0)
      {
        uint64_t v12 = 0;
        char v18 = 0;
        char v19 = 1;
        goto LABEL_59;
      }
      goto LABEL_89;
    }
    v30[0] = a1;
    v30[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (a1 == 43)
    {
      if (!v6) {
        goto LABEL_87;
      }
      if (v6 == 1) {
        goto LABEL_82;
      }
      if ((BYTE1(a1) - 48) > 9u) {
        goto LABEL_32;
      }
      uint64_t v12 = (BYTE1(a1) - 48);
      if (v6 != 2)
      {
        if ((BYTE2(a1) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v12 = 10 * (BYTE1(a1) - 48) + (BYTE2(a1) - 48);
        uint64_t v13 = v6 - 3;
        if (v6 != 3)
        {
          long long v14 = (unsigned __int8 *)v30 + 3;
          while (1)
          {
            unsigned int v15 = *v14 - 48;
            if (v15 > 9) {
              goto LABEL_32;
            }
            uint64_t v16 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
              goto LABEL_32;
            }
            uint64_t v12 = v16 + v15;
            if (__OFADD__(v16, v15)) {
              goto LABEL_32;
            }
            LOBYTE(v6) = 0;
            ++v14;
            if (!--v13) {
              goto LABEL_35;
            }
          }
        }
      }
    }
    else
    {
      if (a1 == 45)
      {
        if (v6)
        {
          if (v6 != 1)
          {
            if ((BYTE1(a1) - 48) > 9u) {
              goto LABEL_32;
            }
            if (v6 == 2)
            {
              LOBYTE(v6) = 0;
              uint64_t v12 = -(uint64_t)(BYTE1(a1) - 48);
              goto LABEL_35;
            }
            if ((BYTE2(a1) - 48) > 9u) {
              goto LABEL_32;
            }
            uint64_t v12 = -10 * (BYTE1(a1) - 48) - (BYTE2(a1) - 48);
            uint64_t v24 = v6 - 3;
            if (v6 != 3)
            {
              uint64_t v25 = (unsigned __int8 *)v30 + 3;
              while (1)
              {
                unsigned int v26 = *v25 - 48;
                if (v26 > 9) {
                  goto LABEL_32;
                }
                uint64_t v27 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
                  goto LABEL_32;
                }
                uint64_t v12 = v27 - v26;
                if (__OFSUB__(v27, v26)) {
                  goto LABEL_32;
                }
                LOBYTE(v6) = 0;
                ++v25;
                if (!--v24) {
                  goto LABEL_35;
                }
              }
            }
            goto LABEL_34;
          }
LABEL_82:
          uint64_t v12 = 0;
LABEL_35:
          if ((v6 & 1) == 0) {
            goto LABEL_36;
          }
          goto LABEL_54;
        }
        __break(1u);
LABEL_87:
        __break(1u);
        goto LABEL_88;
      }
      if (!v6 || (a1 - 48) > 9u)
      {
LABEL_32:
        uint64_t v12 = 0;
        LOBYTE(v6) = 1;
        goto LABEL_35;
      }
      uint64_t v12 = (a1 - 48);
      if (v6 != 1)
      {
        if ((BYTE1(a1) - 48) > 9u) {
          goto LABEL_32;
        }
        uint64_t v12 = 10 * (a1 - 48) + (BYTE1(a1) - 48);
        uint64_t v20 = v6 - 2;
        if (v6 != 2)
        {
          char v21 = (unsigned __int8 *)v30 + 2;
          while (1)
          {
            unsigned int v22 = *v21 - 48;
            if (v22 > 9) {
              goto LABEL_32;
            }
            uint64_t v23 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63) {
              goto LABEL_32;
            }
            uint64_t v12 = v23 + v22;
            if (__OFADD__(v23, v22)) {
              goto LABEL_32;
            }
            LOBYTE(v6) = 0;
            ++v21;
            if (!--v20) {
              goto LABEL_35;
            }
          }
        }
      }
    }
LABEL_34:
    LOBYTE(v6) = 0;
    goto LABEL_35;
  }
  long long v10 = sub_2498958E4(a1, a2, 10);
  if (v28) {
    goto LABEL_54;
  }
LABEL_10:
  uint64_t v12 = (uint64_t)v10;
LABEL_36:
  uint64_t result = swift_bridgeObjectRelease();
  char v18 = 0;
  char v19 = 0;
LABEL_59:
  *(void *)a3 = v12;
  *(unsigned char *)(a3 + 8) = v18;
  *(unsigned char *)(a3 + 9) = v19;
  return result;
}

uint64_t ColorSet.ColorID.rawValue.getter()
{
  if (*(unsigned char *)(v0 + 8) != 1) {
    return sub_249AEDF48();
  }
  uint64_t result = 0xD000000000000013;
  switch(*(void *)v0)
  {
    case 1:
      uint64_t result = 0x7373416465657073;
      break;
    case 2:
      uint64_t result = 0xD000000000000015;
      break;
    case 3:
      uint64_t result = 0x6574617453776F6CLL;
      break;
    case 4:
      uint64_t result = 0x6C61636974697263;
      break;
    case 5:
      uint64_t result = 0x656E696C646572;
      break;
    case 6:
      uint64_t result = 0xD000000000000019;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498933FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return ColorSet.ColorID.init(rawValue:)(*(void *)a1, *(void *)(a1 + 8), a2);
}

uint64_t sub_249893408@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ColorSet.ColorID.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t ColorSet.ColorID.codingKey.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  if (*((unsigned char *)v1 + 8) == 1)
  {
    unint64_t v4 = 0x8000000249B14380;
    uint64_t v5 = 0xD000000000000013;
    switch(v3)
    {
      case 1:
        unint64_t v4 = 0xEB00000000747369;
        uint64_t v5 = 0x7373416465657073;
        break;
      case 2:
        uint64_t v5 = 0xD000000000000015;
        uint64_t v7 = "inactiveCruiseControl";
        goto LABEL_10;
      case 3:
        unint64_t v4 = 0xE800000000000000;
        uint64_t v5 = 0x6574617453776F6CLL;
        break;
      case 4:
        unint64_t v4 = 0xED00006574617453;
        uint64_t v5 = 0x6C61636974697263;
        break;
      case 5:
        unint64_t v4 = 0xE700000000000000;
        uint64_t v5 = 0x656E696C646572;
        break;
      case 6:
        uint64_t v5 = 0xD000000000000019;
        uint64_t v7 = "homologatedSecondaryLabel";
LABEL_10:
        unint64_t v4 = (unint64_t)(v7 - 32) | 0x8000000000000000;
        break;
      default:
        break;
    }
  }
  else
  {
    uint64_t v5 = sub_249AEDF48();
    unint64_t v4 = v6;
  }
  a1[3] = (uint64_t)&type metadata for AnyCodingKey;
  a1[4] = sub_249896A10();
  uint64_t result = swift_allocObject();
  *a1 = result;
  *(void *)(result + 16) = v5;
  *(void *)(result + 24) = v4;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 1;
  return result;
}

uint64_t ColorSet.ColorID.init<A>(codingKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_249AEE4C8();
  ColorSet.ColorID.init(rawValue:)(v6, v7, (uint64_t)&v11);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  char v9 = v12;
  char v10 = v13;
  *(void *)a3 = v11;
  *(unsigned char *)(a3 + 8) = v9;
  *(unsigned char *)(a3 + 9) = v10;
  return result;
}

uint64_t ColorSet.ColorID.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE418();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_2Tm(v7, v7[3]);
    uint64_t v5 = sub_249AEE118();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v7);
    *(void *)a2 = v5;
    *(unsigned char *)(a2 + 8) = 0;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t ColorSet.ColorID.encode(to:)(void *a1)
{
  char v2 = *(unsigned char *)(v1 + 8);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE458();
  if (v2)
  {
    ColorSet.ColorID.rawValue.getter();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_249AEE148();
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_249AEE168();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v4);
}

uint64_t sub_249893874@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ColorSet.ColorID.init(from:)(a1, a2);
}

uint64_t sub_24989388C(void *a1)
{
  return ColorSet.ColorID.encode(to:)(a1);
}

uint64_t Pair<>.codingKey.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = ColorSet.ColorID.rawValue.getter();
  uint64_t v4 = v3;
  sub_249AEDF48();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[3] = (uint64_t)&type metadata for AnyCodingKey;
  a1[4] = sub_249896A10();
  uint64_t result = swift_allocObject();
  *a1 = result;
  *(void *)(result + 16) = v2;
  *(void *)(result + 24) = v4;
  *(void *)(result + 32) = 0;
  *(unsigned char *)(result + 40) = 1;
  return result;
}

uint64_t Pair<>.init<A>(codingKey:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_249AEE4C8();
  unint64_t v8 = v7;
  uint64_t v48 = 95;
  uint64_t v49 = 0xE100000000000000;
  uint64_t v47 = &v48;
  swift_bridgeObjectRetain();
  char v9 = (void *)sub_249894EF4(0x7FFFFFFFFFFFFFFFLL, 1, sub_249896AEC, (uint64_t)v46, v6, v8);
  swift_bridgeObjectRelease();
  if (v9[2] != 2) {
    goto LABEL_3;
  }
  uint64_t v10 = v9[4];
  uint64_t v11 = v9[5];
  uint64_t v12 = v9[6];
  uint64_t v13 = v9[7];
  swift_bridgeObjectRetain();
  uint64_t v14 = MEMORY[0x24C5AE2B0](v10, v11, v12, v13);
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  ColorSet.ColorID.init(rawValue:)(v14, v16, (uint64_t)&v48);
  if ((v49 & 0x100) != 0)
  {
LABEL_3:
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
    uint64_t result = swift_bridgeObjectRelease();
LABEL_4:
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = 0;
    *(void *)(a3 + 16) = 0;
    *(unsigned char *)(a3 + 24) = 1;
    return result;
  }
  if (v9[2] < 2uLL)
  {
    __break(1u);
LABEL_58:
    swift_bridgeObjectRelease();
    goto LABEL_59;
  }
  uint64_t v45 = v48;
  char v18 = v49;
  uint64_t v19 = v9[8];
  uint64_t v20 = v9[9];
  uint64_t v21 = v9[10];
  uint64_t v22 = v9[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = MEMORY[0x24C5AE2B0](v19, v20, v21, v22);
  unint64_t v25 = v24;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v26 = HIBYTE(v25) & 0xF;
  uint64_t v27 = v23 & 0xFFFFFFFFFFFFLL;
  if ((v25 & 0x2000000000000000) != 0) {
    uint64_t v28 = HIBYTE(v25) & 0xF;
  }
  else {
    uint64_t v28 = v23 & 0xFFFFFFFFFFFFLL;
  }
  if (!v28) {
    goto LABEL_58;
  }
  if ((v25 & 0x1000000000000000) != 0)
  {
    uint64_t v30 = (uint64_t)sub_2498958E4(v23, v25, 10);
    LOBYTE(v23) = v44;
    goto LABEL_49;
  }
  if ((v25 & 0x2000000000000000) == 0)
  {
    if ((v23 & 0x1000000000000000) != 0) {
      char v29 = (unsigned __int8 *)((v25 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      char v29 = (unsigned __int8 *)sub_249AEDB48();
    }
    uint64_t v30 = (uint64_t)sub_2498959CC(v29, v27, 10);
    LOBYTE(v23) = v31 & 1;
LABEL_49:
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
      *(void *)a3 = v45;
      *(void *)(a3 + 8) = v18 & 1;
      *(void *)(a3 + 16) = v30;
      *(unsigned char *)(a3 + 24) = 0;
      return result;
    }
LABEL_59:
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
    goto LABEL_4;
  }
  uint64_t v48 = v23;
  uint64_t v49 = v25 & 0xFFFFFFFFFFFFFFLL;
  if (v23 == 43)
  {
    if (!v26) {
      goto LABEL_63;
    }
    if (v26 == 1 || (BYTE1(v23) - 48) > 9u) {
      goto LABEL_36;
    }
    uint64_t v30 = (BYTE1(v23) - 48);
    if (v26 != 2)
    {
      if ((BYTE2(v23) - 48) > 9u) {
        goto LABEL_36;
      }
      uint64_t v30 = 10 * (BYTE1(v23) - 48) + (BYTE2(v23) - 48);
      uint64_t v32 = v26 - 3;
      if (v32)
      {
        uint64_t v33 = (unsigned __int8 *)&v48 + 3;
        while (1)
        {
          unsigned int v34 = *v33 - 48;
          if (v34 > 9) {
            goto LABEL_36;
          }
          uint64_t v35 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            goto LABEL_36;
          }
          uint64_t v30 = v35 + v34;
          if (__OFADD__(v35, v34)) {
            goto LABEL_36;
          }
          LOBYTE(v23) = 0;
          ++v33;
          if (!--v32) {
            goto LABEL_49;
          }
        }
      }
    }
LABEL_48:
    LOBYTE(v23) = 0;
    goto LABEL_49;
  }
  if (v23 != 45)
  {
    if (!v26 || (v23 - 48) > 9u) {
      goto LABEL_36;
    }
    uint64_t v30 = (v23 - 48);
    if (v26 != 1)
    {
      if ((BYTE1(v23) - 48) > 9u) {
        goto LABEL_36;
      }
      uint64_t v30 = 10 * (v23 - 48) + (BYTE1(v23) - 48);
      uint64_t v36 = v26 - 2;
      if (v36)
      {
        uint64_t v37 = (unsigned __int8 *)&v48 + 2;
        while (1)
        {
          unsigned int v38 = *v37 - 48;
          if (v38 > 9) {
            goto LABEL_36;
          }
          uint64_t v39 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            goto LABEL_36;
          }
          uint64_t v30 = v39 + v38;
          if (__OFADD__(v39, v38)) {
            goto LABEL_36;
          }
          LOBYTE(v23) = 0;
          ++v37;
          if (!--v36) {
            goto LABEL_49;
          }
        }
      }
    }
    goto LABEL_48;
  }
  if (v26)
  {
    if (v26 != 1 && (BYTE1(v23) - 48) <= 9u)
    {
      if (v26 == 2)
      {
        LOBYTE(v23) = 0;
        uint64_t v30 = -(uint64_t)(BYTE1(v23) - 48);
        goto LABEL_49;
      }
      if ((BYTE2(v23) - 48) <= 9u)
      {
        uint64_t v30 = -10 * (BYTE1(v23) - 48) - (BYTE2(v23) - 48);
        uint64_t v40 = v26 - 3;
        if (!v40) {
          goto LABEL_48;
        }
        uint64_t v41 = (unsigned __int8 *)&v48 + 3;
        while (1)
        {
          unsigned int v42 = *v41 - 48;
          if (v42 > 9) {
            break;
          }
          uint64_t v43 = 10 * v30;
          if ((unsigned __int128)(v30 * (__int128)10) >> 64 != (10 * v30) >> 63) {
            break;
          }
          uint64_t v30 = v43 - v42;
          if (__OFSUB__(v43, v42)) {
            break;
          }
          LOBYTE(v23) = 0;
          ++v41;
          if (!--v40) {
            goto LABEL_49;
          }
        }
      }
    }
LABEL_36:
    uint64_t v30 = 0;
    LOBYTE(v23) = 1;
    goto LABEL_49;
  }
  __break(1u);
LABEL_63:
  __break(1u);
  return result;
}

uint64_t ColorMap.color.getter()
{
  uint64_t v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t ColorMap.init(color:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t (*sub_249893EAC(_OWORD *a1))@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  long long v2 = a1[5];
  v10[4] = a1[4];
  v10[5] = v2;
  v10[6] = a1[6];
  long long v3 = a1[1];
  v10[0] = *a1;
  v10[1] = v3;
  long long v4 = a1[3];
  void v10[2] = a1[2];
  v10[3] = v4;
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = a1[5];
  v5[5] = a1[4];
  v5[6] = v6;
  v5[7] = a1[6];
  long long v7 = a1[1];
  v5[1] = *a1;
  v5[2] = v7;
  long long v8 = a1[3];
  v5[3] = a1[2];
  v5[4] = v8;
  sub_249897A10((uint64_t)v10);
  return sub_249897B28;
}

uint64_t sub_249893F4C@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  char v3 = *((unsigned char *)a1 + 16);
  long long v4 = a2[5];
  long long v14 = a2[4];
  long long v15 = v4;
  long long v16 = a2[6];
  long long v5 = a2[1];
  long long v10 = *a2;
  long long v11 = v5;
  long long v6 = a2[3];
  long long v12 = a2[2];
  long long v13 = v6;
  long long v8 = *a1;
  char v9 = v3;
  return sub_249951B20((uint64_t *)&v8, a3);
}

void static ColorSet.defaultColorMap.getter(void *a1@<X8>)
{
  *a1 = sub_249893EAC;
  a1[1] = 0;
}

uint64_t static ColorSet.overridableColorMap(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *a2 = sub_249896B44;
  a2[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t (*sub_249894028(_OWORD *a1, uint64_t a2))@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v4 = a1[5];
  v12[4] = a1[4];
  v12[5] = v4;
  v12[6] = a1[6];
  long long v5 = a1[1];
  v12[0] = *a1;
  v12[1] = v5;
  long long v6 = a1[3];
  v12[2] = a1[2];
  v12[3] = v6;
  uint64_t v7 = swift_allocObject();
  long long v8 = a1[2];
  *(_OWORD *)(v7 + 72) = a1[3];
  long long v9 = a1[5];
  *(_OWORD *)(v7 + 88) = a1[4];
  *(_OWORD *)(v7 + 104) = v9;
  *(_OWORD *)(v7 + 120) = a1[6];
  long long v10 = a1[1];
  *(_OWORD *)(v7 + 24) = *a1;
  *(_OWORD *)(v7 + 40) = v10;
  *(void *)(v7 + 16) = a2;
  *(_OWORD *)(v7 + 56) = v8;
  swift_bridgeObjectRetain();
  sub_249897A10((uint64_t)v12);
  return sub_249897A04;
}

uint64_t sub_2498940EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v8 = *(unsigned __int8 *)(a1 + 16);
  if (!*(void *)(a2 + 16)) {
    goto LABEL_7;
  }
  sub_24988D770(*(void *)a1, v6, v8);
  unint64_t v10 = sub_2498EF034(v7, v6, v8);
  if ((v11 & 1) == 0)
  {
    sub_24988D788(v7, v6, v8);
LABEL_7:
    long long v27 = a3[4];
    long long v28 = a3[5];
    long long v29 = a3[2];
    long long v39 = a3[3];
    long long v40 = v27;
    long long v30 = a3[6];
    long long v41 = v28;
    long long v42 = v30;
    long long v31 = a3[1];
    long long v36 = *a3;
    long long v37 = v31;
    long long v38 = v29;
    uint64_t v33 = v7;
    uint64_t v34 = v6;
    char v35 = v8;
    return sub_249951B20(&v33, a4);
  }
  long long v12 = (uint64_t *)(*(void *)(a2 + 56) + 24 * v10);
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = v12[2];
  sub_249890CB0(*v12, v14);
  uint64_t result = sub_24988D788(v7, v6, v8);
  if (v14 < 0)
  {
    *a4 = v13;
  }
  else
  {
    long long v17 = a3[4];
    long long v18 = a3[5];
    long long v19 = a3[2];
    long long v39 = a3[3];
    long long v40 = v17;
    long long v20 = a3[6];
    long long v41 = v18;
    long long v42 = v20;
    long long v21 = a3[1];
    long long v36 = *a3;
    long long v37 = v21;
    long long v38 = v19;
    uint64_t v33 = v13;
    LOBYTE(v34) = v14 & 1;
    uint64_t v22 = sub_249896394((uint64_t)&v33, v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE98);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = v22;
    unint64_t v24 = sub_2498F0AFC((double *)inited);
    swift_setDeallocating();
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA0);
    swift_arrayDestroy();
    uint64_t v25 = sub_249A01E48(v24);
    swift_bridgeObjectRelease();
    if (*(void *)(v25 + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA8);
      uint64_t v26 = sub_249AEDCA8();
    }
    else
    {
      uint64_t v26 = MEMORY[0x263F8EE80];
    }
    *(void *)&long long v36 = v26;
    uint64_t v32 = (void *)swift_bridgeObjectRetain();
    sub_249A05944(v32, 1, &v36);
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    *a4 = v36;
  }
  return result;
}

uint64_t ColorSet.ColorID.init(integerLiteral:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_249894354(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  char v3 = sub_2498AB154(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE90);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498944CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  char v3 = sub_2498AB278(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_249894638(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  char v3 = sub_2498AB3BC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[3 * v9 + 4];
  if (a1 + 32 < v10 + 24 * v8 && v10 < a1 + 32 + 24 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_249894798(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  char v3 = sub_2498AB410(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEC0);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498948FC(uint64_t a1)
{
  return sub_249894954(a1, (uint64_t (*)(void))sub_2498AC054, (uint64_t (*)(void))type metadata accessor for Slot);
}

uint64_t sub_249894928(uint64_t a1)
{
  return sub_249894954(a1, (uint64_t (*)(void))sub_2498AB974, (uint64_t (*)(void))type metadata accessor for Component);
}

uint64_t sub_249894954(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(void *)(v5 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v5 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v10 = *(void *)(v5 + 16);
  uint64_t v11 = (*(void *)(v5 + 24) >> 1) - v10;
  uint64_t v12 = *(void *)(a3(0) - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v15 = v5 + v14 + v13 * v10;
  unint64_t v16 = a1 + v14;
  uint64_t v17 = v13 * v4;
  unint64_t v18 = v15 + v17;
  unint64_t v19 = v16 + v17;
  if (v16 < v18 && v15 < v19) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *char v3 = v5;
    return result;
  }
  uint64_t v21 = *(void *)(v5 + 16);
  BOOL v22 = __OFADD__(v21, v4);
  uint64_t v23 = v21 + v4;
  if (!v22)
  {
    *(void *)(v5 + 16) = v23;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_249894B10(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  char v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  char v3 = sub_2498AC1E8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[v2] && (unint64_t)v9 < a1 + 32 + v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_249894C58(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  char v3 = sub_2498ABD38(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_249894DAC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  char v3 = sub_2498AC2E4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[2 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 16 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_249894EF4(uint64_t a1, char a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5, unint64_t a6)
{
  v50[3] = a4;
  if (a1 < 0) {
    goto LABEL_42;
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = MEMORY[0x263F8EE78];
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = 15;
  uint64_t v11 = HIBYTE(a6) & 0xF;
  if (!a1 || ((a6 & 0x2000000000000000) != 0 ? (uint64_t v12 = HIBYTE(a6) & 0xF) : (uint64_t v12 = a5 & 0xFFFFFFFFFFFFLL), !v12))
  {
    if ((a6 & 0x2000000000000000) == 0) {
      uint64_t v11 = a5 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v30 = 7;
    if (((a6 >> 60) & ((a5 & 0x800000000000000) == 0)) != 0) {
      uint64_t v30 = 11;
    }
    sub_249895398(v30 | (v11 << 16), v47, a2 & 1, v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void **)(v10 + 16);
    swift_bridgeObjectRetain();
    swift_release();
LABEL_39:
    swift_release();
    return (uint64_t)v13;
  }
  uint64_t v42 = a1;
  uint64_t v43 = v10;
  unint64_t v48 = 4 * v12;
  uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  unint64_t v14 = 15;
  unint64_t v15 = 15;
  unint64_t v16 = 15;
  while (1)
  {
    v50[0] = sub_249AED298();
    v50[1] = v17;
    char v18 = a3(v50);
    if (v6)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v13;
    }
    char v19 = v18;
    swift_bridgeObjectRelease();
    if (v19) {
      break;
    }
    unint64_t v14 = sub_249AED198();
LABEL_9:
    if (v48 == v14 >> 14) {
      goto LABEL_29;
    }
  }
  if (v15 >> 14 == v14 >> 14 && (a2 & 1) != 0)
  {
    unint64_t v14 = sub_249AED198();
    *(void *)(v47 + 16) = v14;
    unint64_t v15 = v14;
    unint64_t v16 = v14;
    goto LABEL_9;
  }
  if (v14 >> 14 < v15 >> 14) {
    goto LABEL_41;
  }
  uint64_t v20 = sub_249AED2B8();
  uint64_t v44 = v21;
  uint64_t v45 = v20;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v13 = sub_2498AB520(0, v13[2] + 1, 1, v13);
  }
  unint64_t v27 = v13[2];
  unint64_t v26 = v13[3];
  if (v27 >= v26 >> 1) {
    uint64_t v13 = sub_2498AB520((void *)(v26 > 1), v27 + 1, 1, v13);
  }
  void v13[2] = v27 + 1;
  long long v28 = &v13[4 * v27];
  v28[4] = v45;
  v28[5] = v23;
  v28[6] = v25;
  v28[7] = v44;
  *(void *)(v43 + 16) = v13;
  uint64_t v29 = sub_249AED198();
  unint64_t v14 = v29;
  *(void *)(v47 + 16) = v29;
  if (v13[2] != v42)
  {
    unint64_t v15 = v29;
    unint64_t v16 = v29;
    goto LABEL_9;
  }
  unint64_t v16 = v29;
  unint64_t v15 = v29;
LABEL_29:
  if (v48 == v15 >> 14 && (a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
LABEL_38:
    swift_bridgeObjectRetain();
    swift_release();
    goto LABEL_39;
  }
  if (v48 >= v16 >> 14)
  {
    uint64_t v31 = sub_249AED2B8();
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_2498AB520(0, v13[2] + 1, 1, v13);
    }
    unint64_t v39 = v13[2];
    unint64_t v38 = v13[3];
    if (v39 >= v38 >> 1) {
      uint64_t v13 = sub_2498AB520((void *)(v38 > 1), v39 + 1, 1, v13);
    }
    void v13[2] = v39 + 1;
    long long v40 = &v13[4 * v39];
    v40[4] = v31;
    v40[5] = v33;
    v40[6] = v35;
    v40[7] = v37;
    *(void *)(v43 + 16) = v13;
    goto LABEL_38;
  }
LABEL_41:
  sub_249AEDC48();
  __break(1u);
LABEL_42:
  uint64_t result = sub_249AEDC48();
  __break(1u);
  return result;
}

uint64_t sub_249895398(unint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4)
{
  unint64_t v4 = *(void *)(a2 + 16) >> 14;
  int v5 = (v4 == a1 >> 14) & a3;
  if (v5 == 1) {
    return v5 ^ 1u;
  }
  if (a1 >> 14 >= v4)
  {
    uint64_t v7 = sub_249AED2B8();
    uint64_t v9 = v8;
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    unint64_t v14 = *(void **)(a4 + 16);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a4 + 16) = v14;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v14 = sub_2498AB520(0, v14[2] + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1)
    {
      unint64_t v14 = sub_2498AB520((void *)(v16 > 1), v17 + 1, 1, v14);
      *(void *)(a4 + 16) = v14;
    }
    void v14[2] = v17 + 1;
    char v18 = &v14[4 * v17];
    v18[4] = v7;
    v18[5] = v9;
    v18[6] = v11;
    v18[7] = v13;
    return v5 ^ 1u;
  }
  uint64_t result = sub_249AEDC48();
  __break(1u);
  return result;
}

void sub_2498954F4(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v5)
  {
    if (!*(void *)(a1 + 16))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v6 = *(void *)(a1 + 32);
    char v7 = *(unsigned char *)(a1 + 40);
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 56);
    swift_retain();
    if (v8)
    {
      uint64_t v10 = (void *)*a3;
      unint64_t v11 = sub_2498EEF60(v6, v7, v9);
      uint64_t v13 = v10[2];
      BOOL v14 = (v12 & 1) == 0;
      BOOL v15 = __OFADD__(v13, v14);
      uint64_t v16 = v13 + v14;
      if (v15)
      {
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
      LOBYTE(v17) = v12;
      if (v10[3] < v16)
      {
        sub_2498E40A4(v16, a2 & 1);
        unint64_t v11 = sub_2498EEF60(v6, v7, v9);
        if ((v17 & 1) == (v18 & 1)) {
          goto LABEL_9;
        }
LABEL_7:
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE30);
        unint64_t v11 = sub_249AEE2D8();
        __break(1u);
      }
      if ((a2 & 1) == 0)
      {
        unint64_t v21 = v11;
        sub_2498DFFC0();
        unint64_t v11 = v21;
        if (v17)
        {
LABEL_10:
          char v19 = (void *)swift_allocError();
          swift_willThrow();
          id v20 = v19;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB8);
          if ((swift_dynamicCast() & 1) == 0)
          {
            swift_release();
            swift_bridgeObjectRelease_n();

            return;
          }
          goto LABEL_29;
        }
LABEL_13:
        uint64_t v22 = (void *)*a3;
        *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
        uint64_t v23 = v22[6] + 24 * v11;
        *(void *)uint64_t v23 = v6;
        *(unsigned char *)(v23 + 8) = v7;
        *(void *)(v23 + 16) = v9;
        *(void *)(v22[7] + 8 * v11) = v8;
        uint64_t v24 = v22[2];
        BOOL v15 = __OFADD__(v24, 1);
        uint64_t v25 = v24 + 1;
        if (v15)
        {
LABEL_28:
          __break(1u);
LABEL_29:
          sub_249AEDA78();
          sub_249AED1E8();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE30);
          sub_249AEDC08();
          sub_249AED1E8();
          sub_249AEDC58();
          __break(1u);
          return;
        }
        v22[2] = v25;
        if (v5 != 1)
        {
          unint64_t v17 = (void *)(a1 + 88);
          unint64_t v26 = 1;
          while (v26 < *(void *)(a1 + 16))
          {
            uint64_t v6 = *(v17 - 3);
            char v7 = *((unsigned char *)v17 - 16);
            uint64_t v9 = *(v17 - 1);
            uint64_t v8 = *v17;
            swift_retain();
            if (!v8) {
              goto LABEL_24;
            }
            unint64_t v27 = (void *)*a3;
            unint64_t v28 = sub_2498EEF60(v6, v7, v9);
            uint64_t v30 = v27[2];
            BOOL v31 = (v29 & 1) == 0;
            BOOL v15 = __OFADD__(v30, v31);
            uint64_t v32 = v30 + v31;
            if (v15) {
              goto LABEL_27;
            }
            a2 = v29;
            if (v27[3] < v32)
            {
              sub_2498E40A4(v32, 1);
              unint64_t v28 = sub_2498EEF60(v6, v7, v9);
              if ((a2 & 1) != (v33 & 1)) {
                goto LABEL_7;
              }
            }
            if (a2) {
              goto LABEL_10;
            }
            uint64_t v34 = (void *)*a3;
            *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
            uint64_t v35 = v34[6] + 24 * v28;
            *(void *)uint64_t v35 = v6;
            *(unsigned char *)(v35 + 8) = v7;
            *(void *)(v35 + 16) = v9;
            *(void *)(v34[7] + 8 * v28) = v8;
            uint64_t v36 = v34[2];
            BOOL v15 = __OFADD__(v36, 1);
            uint64_t v37 = v36 + 1;
            if (v15) {
              goto LABEL_28;
            }
            ++v26;
            v34[2] = v37;
            v17 += 4;
            if (v5 == v26) {
              goto LABEL_24;
            }
          }
          goto LABEL_26;
        }
        goto LABEL_24;
      }
LABEL_9:
      if (v17) {
        goto LABEL_10;
      }
      goto LABEL_13;
    }
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
}

unsigned __int8 *sub_2498958E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_249AED2A8();
  unint64_t v6 = v4;
  if ((v4 & 0x1000000000000000) == 0)
  {
    if ((v4 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v8 = HIBYTE(v6) & 0xF;
    uint64_t v13 = v5;
    uint64_t v14 = v6 & 0xFFFFFFFFFFFFFFLL;
    char v7 = (unsigned __int8 *)&v13;
    goto LABEL_7;
  }
  uint64_t v5 = sub_249895C48();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  unint64_t v6 = v10;
  if ((v10 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v5 & 0x1000000000000000) != 0)
  {
    char v7 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    char v7 = (unsigned __int8 *)sub_249AEDB48();
  }
LABEL_7:
  unint64_t v11 = sub_2498959CC(v7, v8, a3);
  swift_bridgeObjectRelease();
  return v11;
}

unsigned __int8 *sub_2498959CC(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (int64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  char v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_249895C48()
{
  unint64_t v0 = sub_249AED2B8();
  uint64_t v4 = sub_249895CC8(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_249895CC8(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_249895E20(a1, a2, a3, a4);
    if (v9)
    {
      uint64_t v10 = v9;
      unsigned int v11 = sub_249924534(v9, 0);
      unint64_t v12 = sub_249895F20((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
LABEL_11:
        sub_249AEDB48();
LABEL_4:
        JUMPOUT(0x24C5AE2D0);
      }
    }
    else
    {
      unsigned int v11 = (void *)MEMORY[0x263F8EE78];
    }
    uint64_t v13 = MEMORY[0x24C5AE2D0](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x24C5AE2D0]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

uint64_t sub_249895E20(unint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_24992459C(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_24992459C(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return MEMORY[0x270F9D808](a1, a2, a3, a4);
  }
  __break(1u);
  return MEMORY[0x270F9D808](a1, a2, a3, a4);
}

unint64_t sub_249895F20(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_24992459C(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_249AED258();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_249AEDB48();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_24992459C(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_249AED228();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t _s14CarPlayAssetUI8ColorSetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  long long v24 = *(_OWORD *)(a1 + 40);
  long long v25 = *(_OWORD *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t v19 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a2 + 16);
  long long v22 = *(_OWORD *)(a2 + 40);
  long long v23 = *(_OWORD *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 56);
  char v9 = *(unsigned char *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  int v20 = *(unsigned __int8 *)(a2 + 96);
  int v21 = *(unsigned __int8 *)(a1 + 96);
  uint64_t v18 = *(void *)(a2 + 104);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_249AEE0D8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if ((sub_2499FDC9C(v2, v7) & 1) == 0) {
      return 0;
    }
    v29[0] = v25;
    v29[1] = v24;
    uint64_t v30 = v3;
    char v31 = v4;
    v26[0] = v23;
    v26[1] = v22;
    uint64_t v27 = v8;
    char v28 = v9;
    BOOL v14 = _s14CarPlayAssetUI5ThemeO7PaletteV22RepresentedColorSchemeO2eeoiySbAG_AGtFZ_0((uint64_t)v29, (uint64_t)v26);
    uint64_t result = 0;
    if (v14 && v5 == v10)
    {
      if (v6)
      {
        if (v11)
        {
          sub_24988CDF0(v6);
          sub_24988CDF0(v11);
          if (sub_249AEC848())
          {
            char v15 = sub_249AEC848();
            sub_24988D7A0(v11);
            sub_24988D7A0(v6);
            uint64_t result = 0;
            if (v15 & 1) == 0 || ((v21 ^ v20)) {
              return result;
            }
LABEL_20:
            if (v19)
            {
              if (v18)
              {
                swift_retain();
                swift_retain();
                char v17 = sub_249AEC848();
                swift_release();
                swift_release();
                if (v17) {
                  return 1;
                }
              }
            }
            else if (!v18)
            {
              return 1;
            }
            return 0;
          }
          sub_24988D7A0(v11);
          uint64_t v16 = v6;
LABEL_16:
          sub_24988D7A0(v16);
          return 0;
        }
      }
      else if (!v11)
      {
        if (v21 != v20) {
          return 0;
        }
        goto LABEL_20;
      }
      sub_24988CDF0(v6);
      sub_24988CDF0(v11);
      sub_24988D7A0(v6);
      uint64_t v16 = v11;
      goto LABEL_16;
    }
  }
  return result;
}

uint64_t sub_249896394(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(v2 + 16);
  if (*(void *)(v3 + 16))
  {
    unint64_t v4 = sub_2498EEF60(*(void *)a1, *(unsigned char *)(a1 + 8), a2);
    if (v5) {
      return *(void *)(*(void *)(v3 + 56) + 8 * v4);
    }
  }
  sub_249AEDA78();
  sub_249AED1E8();
  sub_249AEDC08();
  sub_249AED1E8();
  sub_249AEDF48();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_249AEDC58();
  __break(1u);
  return result;
}

uint64_t sub_2498964D0(uint64_t a1, uint64_t (*a2)(uint64_t *, uint64_t, uint64_t))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v36 = MEMORY[0x263F8EE78];
  sub_249A22050(0, v2, 0);
  uint64_t v3 = v36;
  uint64_t result = sub_249A49DE0(a1);
  uint64_t v7 = result;
  uint64_t v8 = 0;
  uint64_t v9 = a1 + 64;
  int64_t v27 = v2;
  int v28 = v6;
  uint64_t v29 = a1 + 64;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v7 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_24;
    }
    uint64_t v31 = v8;
    uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * v7);
    uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8 * v7);
    swift_retain();
    uint64_t v32 = a2(&v33, v13, v14);
    uint64_t result = swift_release();
    uint64_t v15 = v33;
    char v16 = v34;
    uint64_t v17 = v35;
    uint64_t v36 = v3;
    unint64_t v18 = *(void *)(v3 + 16);
    unint64_t v19 = *(void *)(v3 + 24);
    if (v18 >= v19 >> 1)
    {
      uint64_t v26 = v35;
      uint64_t result = sub_249A22050(v19 > 1, v18 + 1, 1);
      uint64_t v17 = v26;
      uint64_t v3 = v36;
    }
    *(void *)(v3 + 16) = v18 + 1;
    uint64_t v20 = v3 + 32 * v18;
    *(void *)(v20 + 32) = v15;
    *(unsigned char *)(v20 + 40) = v16;
    *(void *)(v20 + 48) = v17;
    *(void *)(v20 + 56) = v32;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v7 >= v10) {
      goto LABEL_25;
    }
    uint64_t v9 = a1 + 64;
    uint64_t v21 = *(void *)(v29 + 8 * v12);
    if ((v21 & (1 << v7)) == 0) {
      goto LABEL_26;
    }
    int v6 = v28;
    if (*(_DWORD *)(a1 + 36) != v28) {
      goto LABEL_27;
    }
    unint64_t v22 = v21 & (-2 << (v7 & 0x3F));
    if (v22)
    {
      int64_t v10 = __clz(__rbit64(v22)) | v7 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v27;
    }
    else
    {
      unint64_t v23 = v12 + 1;
      unint64_t v24 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v27;
      if (v12 + 1 < v24)
      {
        unint64_t v25 = *(void *)(v29 + 8 * v23);
        if (v25)
        {
LABEL_20:
          int64_t v10 = __clz(__rbit64(v25)) + (v23 << 6);
        }
        else
        {
          while (v24 - 2 != v12)
          {
            unint64_t v25 = *(void *)(a1 + 80 + 8 * v12++);
            if (v25)
            {
              unint64_t v23 = v12 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v8 = v31 + 1;
    uint64_t v7 = v10;
    if (v31 + 1 == v11) {
      return v3;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_249896738(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(v2 + 24);
  *(void *)a1 = *(void *)(v2 + 16);
  *(unsigned char *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = a2;
  return swift_retain();
}

uint64_t sub_249896754(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

unint64_t sub_249896760()
{
  unint64_t result = qword_2696DDE10;
  if (!qword_2696DDE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE10);
  }
  return result;
}

unint64_t sub_2498967B4()
{
  unint64_t result = qword_2696DDE20;
  if (!qword_2696DDE20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDE18);
    sub_24989698C(&qword_2696DDE28);
    sub_24988CC10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE20);
  }
  return result;
}

unint64_t sub_24989684C()
{
  unint64_t result = qword_2696DDE38;
  if (!qword_2696DDE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE38);
  }
  return result;
}

unint64_t sub_2498968A0()
{
  unint64_t result = qword_2696DDE40;
  if (!qword_2696DDE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE40);
  }
  return result;
}

unint64_t sub_2498968F4()
{
  unint64_t result = qword_2696DDE50;
  if (!qword_2696DDE50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDE18);
    sub_24989698C(&qword_2696DDE58);
    sub_24988CBBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE50);
  }
  return result;
}

uint64_t sub_24989698C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDE30);
    sub_24989684C();
    sub_2498968A0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249896A10()
{
  unint64_t result = qword_2696DDE60;
  if (!qword_2696DDE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE60);
  }
  return result;
}

uint64_t sub_249896A64()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_249896AEC(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  if (*a1 == *v2 && a1[1] == v2[1]) {
    return 1;
  }
  else {
    return sub_249AEE0D8() & 1;
  }
}

uint64_t (*sub_249896B44(_OWORD *a1))@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_249894028(a1, *(void *)(v1 + 16));
}

unint64_t sub_249896B50()
{
  unint64_t result = qword_2696DDE68;
  if (!qword_2696DDE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE68);
  }
  return result;
}

unint64_t sub_249896BA8()
{
  unint64_t result = qword_2696DDE70;
  if (!qword_2696DDE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE70);
  }
  return result;
}

uint64_t sub_249896BFC()
{
  return MEMORY[0x263F8D748];
}

uint64_t destroy for ColorSet(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249889FFC(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  if (*(void *)(a1 + 80))
  {
    swift_release();
    swift_release();
  }

  return swift_release();
}

uint64_t initializeWithCopy for ColorSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  char v10 = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v5, v6, v7, v8, v9, v10);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = v12;
    swift_retain();
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ColorSet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  char v9 = *(unsigned char *)(a2 + 64);
  sub_24988CD7C(v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  char v15 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v9;
  sub_249889FFC(v10, v11, v12, v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  uint64_t v17 = *(void *)(a2 + 80);
  if (!v16)
  {
    if (v17)
    {
      *(void *)(a1 + 80) = v17;
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_retain();
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_8;
  }
  if (!v17)
  {
    sub_24988F47C(a1 + 80);
    goto LABEL_7;
  }
  *(void *)(a1 + 80) = v17;
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_retain();
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ColorSet(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  char v6 = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  char v12 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v6;
  sub_249889FFC(v7, v8, v9, v10, v11, v12);
  uint64_t v13 = *(void *)(a2 + 80);
  uint64_t v14 = *(void *)(a1 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  if (!v14) {
    goto LABEL_5;
  }
  if (!v13)
  {
    sub_24988F47C(a1 + 80);
LABEL_5:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    goto LABEL_6;
  }
  *(void *)(a1 + 80) = v13;
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_release();
LABEL_6:
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorSet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorSet()
{
  return &type metadata for ColorSet;
}

uint64_t initializeBufferWithCopyOfBuffer for ColorSet.ColorShadeType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_2498970C8(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_2498970C8(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t destroy for ColorSet.ColorShadeType(uint64_t a1)
{
  return sub_249896754(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for ColorSet.ColorShadeType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_2498970C8(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_249896754(v5, v6);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t assignWithTake for ColorSet.ColorShadeType(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *(void *)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_249896754(v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorSet.ColorShadeType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorSet.ColorShadeType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_249897218(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_249897220(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ColorSet.ColorShadeType()
{
  return &type metadata for ColorSet.ColorShadeType;
}

uint64_t getEnumTagSinglePayload for ColorSet.ColorID(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ColorSet.ColorID(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_24989728C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2498972A8(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorSet.ColorID()
{
  return &type metadata for ColorSet.ColorID;
}

void *initializeBufferWithCopyOfBuffer for ColorMap(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for ColorMap()
{
  return swift_release();
}

void *assignWithCopy for ColorMap(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ColorMap(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ColorMap(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ColorMap(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorMap()
{
  return &type metadata for ColorMap;
}

uint64_t getEnumTagSinglePayload for ColorSet.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ColorSet.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249897570);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ColorSet.CodingKeys()
{
  return &type metadata for ColorSet.CodingKeys;
}

unint64_t sub_2498975AC()
{
  unint64_t result = qword_2696DDE78;
  if (!qword_2696DDE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE78);
  }
  return result;
}

unint64_t sub_249897604()
{
  unint64_t result = qword_2696DDE80;
  if (!qword_2696DDE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE80);
  }
  return result;
}

unint64_t sub_24989765C()
{
  unint64_t result = qword_2696DDE88;
  if (!qword_2696DDE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDE88);
  }
  return result;
}

uint64_t sub_2498976B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73726F6C6F63 && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B14320 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65646E4974726F73 && a2 == 0xE900000000000078 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F43746E65636361 && a2 == 0xEB00000000726F6CLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6E656E696D6F7270 && a2 == 0xE900000000000074 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000249B14300)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_24989798C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249889FFC(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(unsigned char *)(v0 + 88));
  if (*(void *)(v0 + 104))
  {
    swift_release();
    swift_release();
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_249897A04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2498940EC(a1, *(void *)(v2 + 16), (long long *)(v2 + 24), a2);
}

uint64_t sub_249897A10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 80);
  char v8 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v2, v3, v4, v5, v6, v8);
  sub_24988CDF0(v7);
  swift_retain();
  return a1;
}

uint64_t sub_249897AB8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249889FFC(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  if (*(void *)(v0 + 96))
  {
    swift_release();
    swift_release();
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, 128, 7);
}

uint64_t sub_249897B28@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3 = *((unsigned char *)a1 + 16);
  long long v4 = v2[6];
  long long v14 = v2[5];
  long long v15 = v4;
  long long v16 = v2[7];
  long long v5 = v2[2];
  long long v10 = v2[1];
  long long v11 = v5;
  long long v6 = v2[4];
  long long v12 = v2[3];
  long long v13 = v6;
  long long v8 = *a1;
  char v9 = v3;
  return sub_249951B20((uint64_t *)&v8, a2);
}

uint64_t sub_249897B88()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249897BC0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249897BDC()
{
  return swift_deallocClassInstance();
}

id static NSBundle.carplayAssetUI.getter()
{
  _s12BundleLoaderCMa();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v1 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);

  return v1;
}

uint64_t _s12BundleLoaderCMa()
{
  return self;
}

uint64_t sub_249897C68(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t *, void *), uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1;
  uint64_t v33 = a1;
  uint64_t v24 = a4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  int64_t v25 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v27 = v5;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v11 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v10 << 6))
  {
    uint64_t v16 = *(void *)(*(void *)(a4 + 48) + 8 * i);
    uint64_t v17 = *(void *)(a4 + 56) + 48 * i;
    unint64_t v18 = *(void **)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void **)(v17 + 16);
    uint64_t v21 = *(void *)(v17 + 24);
    uint64_t v22 = *(void *)(v17 + 40);
    char v23 = *(unsigned char *)(v17 + 32);
    v30[0] = v16;
    v30[1] = v18;
    v30[2] = v19;
    void v30[3] = v20;
    _OWORD v30[4] = v21;
    char v31 = v23;
    uint64_t v32 = v22;
    sub_24988247C(v18, v19, v20, v21, v23);
    a2(&v29, &v33, v30);
    sub_2498826E4(v18, v19, v20, v21, v23);
    uint64_t v5 = v27;
    uint64_t result = swift_bridgeObjectRelease();
    if (v28)
    {
LABEL_25:
      swift_release();
      return v5;
    }
    uint64_t v5 = v29;
    uint64_t v33 = v29;
    uint64_t v27 = v29;
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v10++, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v10 >= v25) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v10);
    if (!v14) {
      break;
    }
LABEL_17:
    unint64_t v8 = (v14 - 1) & v14;
  }
  int64_t v15 = v10 + 1;
  if (v10 + 1 >= v25) {
    goto LABEL_25;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v25) {
    goto LABEL_25;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v25) {
    goto LABEL_25;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14) {
    goto LABEL_16;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v25) {
    goto LABEL_25;
  }
  unint64_t v14 = *(void *)(v24 + 8 * v15);
  if (v14)
  {
LABEL_16:
    int64_t v10 = v15;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v24 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_17;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

double static DefaultRedactedColorID.default.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 26;
  *(_OWORD *)a1 = xmmword_249AF0ED0;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

double sub_249897EEC@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 26;
  *(_OWORD *)a1 = xmmword_249AF0ED0;
  *(unsigned char *)(a1 + 16) = 0;
  return result;
}

void ChargeFuelDataIdentifiers.levelDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ChargeFuelDataIdentifiers.levelDataIdentifier.setter(unsigned char *result)
{
  *id v1 = *result;
  return result;
}

uint64_t (*ChargeFuelDataIdentifiers.levelDataIdentifier.modify())()
{
  return nullsub_1;
}

void ChargeFuelDataIdentifiers.levelStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *ChargeFuelDataIdentifiers.levelStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*ChargeFuelDataIdentifiers.levelStateDataIdentifier.modify())()
{
  return nullsub_1;
}

void ChargeFuelDataIdentifiers.portSideIndicatorDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *ChargeFuelDataIdentifiers.portSideIndicatorDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*ChargeFuelDataIdentifiers.portSideIndicatorDataIdentifier.modify())()
{
  return nullsub_1;
}

void ChargeFuelDataIdentifiers.levelMarkerLowDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *ChargeFuelDataIdentifiers.levelMarkerLowDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*ChargeFuelDataIdentifiers.levelMarkerLowDataIdentifier.modify())()
{
  return nullsub_1;
}

double sub_249897FE0()
{
  *(void *)&double result = 471669530;
  dword_2696DDEC8 = 471669530;
  return result;
}

void *static ChargeFuelDataIdentifiers.fuel.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_249898058(&qword_2696DD330, &dword_2696DDEC8, a1);
}

double sub_24989801C()
{
  *(void *)&double result = 134809350;
  dword_2696DDECC = 134809350;
  return result;
}

void *static ChargeFuelDataIdentifiers.charge.getter@<X0>(_DWORD *a1@<X8>)
{
  return sub_249898058(&qword_2696DD338, &dword_2696DDECC, a1);
}

void *sub_249898058@<X0>(void *result@<X0>, _DWORD *a2@<X1>, _DWORD *a3@<X8>)
{
  if (*result != -1) {
    double result = (void *)swift_once();
  }
  *a3 = *a2;
  return result;
}

uint64_t ChargeFuelDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_2498981A4(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24989822C()
{
  return sub_2498981A4(*v0);
}

uint64_t sub_249898234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24989F0A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24989825C(uint64_t a1)
{
  unint64_t v2 = sub_24989C8E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249898298(uint64_t a1)
{
  unint64_t v2 = sub_24989C8E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ChargeFuelDataIdentifiers.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDED0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v14 = v1[2];
  int v15 = v9;
  HIDWORD(v13) = v1[3];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24989C8E0();
  sub_249AEE468();
  char v23 = v8;
  char v22 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v10 = BYTE4(v13);
    char v11 = v14;
    char v21 = v15;
    char v20 = 1;
    sub_249AEDF08();
    char v19 = v11;
    char v18 = 2;
    sub_249AEDF08();
    char v17 = v10;
    char v16 = 3;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ChargeFuelDataIdentifiers.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t ChargeFuelDataIdentifiers.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24989C8E0();
  sub_249AEE428();
  if (!v2)
  {
    char v22 = 0;
    sub_24989C988();
    sub_249AEDE08();
    int v9 = v23;
    char v20 = 1;
    sub_249AEDE08();
    int v15 = v9;
    int v10 = v21;
    char v18 = 2;
    sub_249AEDE08();
    int v14 = v10;
    LOBYTE(v10) = v19;
    char v16 = 3;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v12 = v17;
    *a2 = v15;
    a2[1] = v14;
    a2[2] = v10;
    a2[3] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_24989885C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ChargeFuelDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_249898874(void *a1)
{
  return ChargeFuelDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_249898894()
{
  return sub_249AEE388();
}

void RemainingRangeDataIdentifiers.remainingRangeDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *RemainingRangeDataIdentifiers.remainingRangeDataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*RemainingRangeDataIdentifiers.remainingRangeDataIdentifier.modify())()
{
  return nullsub_1;
}

void RemainingRangeDataIdentifiers.unitDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *RemainingRangeDataIdentifiers.unitDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*RemainingRangeDataIdentifiers.unitDataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t RemainingRangeDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_249898AAC()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0xD00000000000001CLL;
  }
}

uint64_t sub_249898AEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24989F23C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249898B14(uint64_t a1)
{
  unint64_t v2 = sub_24989CB04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249898B50(uint64_t a1)
{
  unint64_t v2 = sub_24989CB04();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t RemainingRangeDataIdentifiers.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24989CB04();
  sub_249AEE468();
  char v15 = v8;
  char v14 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RemainingRangeDataIdentifiers.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t RemainingRangeDataIdentifiers.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24989CB04();
  sub_249AEE428();
  if (!v2)
  {
    char v15 = 0;
    sub_24989C988();
    sub_249AEDE08();
    char v9 = v16;
    char v13 = 1;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249898F94@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return RemainingRangeDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_249898FAC(void *a1)
{
  return RemainingRangeDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_249898FC8()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249899064()
{
  return sub_249AEE388();
}

void Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelDataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelDataIdentifier.modify())()
{
  return nullsub_1;
}

void Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelStateDataIdentifier.modify())()
{
  return nullsub_1;
}

void Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorDataIdentifier.modify())()
{
  return nullsub_1;
}

void Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelMarkerLowDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelMarkerLowDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.levelMarkerLowDataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.remainingRangeTextConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  sub_24989CB58(v1 + 8, (uint64_t)v4);
  sub_24989CB58((uint64_t)v4, a1);
  return sub_24989CD54((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CBC0);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.remainingRangeTextConfiguration.setter(uint64_t a1)
{
  sub_24989CB58(a1, (uint64_t)v3);
  sub_24989CB58(v1 + 8, (uint64_t)v4);
  sub_24989CD54((uint64_t)v4, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
  return sub_24989CB58((uint64_t)v3, v1 + 8);
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.remainingRangeTextConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.progressColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 296);
  uint64_t v3 = *(void *)(v1 + 304);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 312);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.progressColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 296), *(void *)(v1 + 304), *(unsigned char *)(v1 + 312));
  *(void *)(v1 + 296) = v2;
  *(void *)(v1 + 304) = v3;
  *(unsigned char *)(v1 + 312) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.progressColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.trackColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 320);
  uint64_t v3 = *(void *)(v1 + 328);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 336);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.trackColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 320), *(void *)(v1 + 328), *(unsigned char *)(v1 + 336));
  *(void *)(v1 + 320) = v2;
  *(void *)(v1 + 328) = v3;
  *(unsigned char *)(v1 + 336) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.trackColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 344);
  uint64_t v3 = *(void *)(v1 + 352);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 360);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 344), *(void *)(v1 + 352), *(unsigned char *)(v1 + 360));
  *(void *)(v1 + 344) = v2;
  *(void *)(v1 + 352) = v3;
  *(unsigned char *)(v1 + 360) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 368);
  uint64_t v3 = *(void *)(v1 + 376);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 384);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 368), *(void *)(v1 + 376), *(unsigned char *)(v1 + 384));
  *(void *)(v1 + 368) = v2;
  *(void *)(v1 + 376) = v3;
  *(unsigned char *)(v1 + 384) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.normalLevelIndicatorColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 392);
  uint64_t v3 = *(void *)(v1 + 400);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 408);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.normalLevelIndicatorColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 392), *(void *)(v1 + 400), *(unsigned char *)(v1 + 408));
  *(void *)(v1 + 392) = v2;
  *(void *)(v1 + 400) = v3;
  *(unsigned char *)(v1 + 408) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.normalLevelIndicatorColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelIndicatorColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 416);
  uint64_t v3 = *(void *)(v1 + 424);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 432);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelIndicatorColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 416), *(void *)(v1 + 424), *(unsigned char *)(v1 + 432));
  *(void *)(v1 + 416) = v2;
  *(void *)(v1 + 424) = v3;
  *(unsigned char *)(v1 + 432) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.lowLevelIndicatorColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelIndicatorColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 440);
  uint64_t v3 = *(void *)(v1 + 448);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 456);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelIndicatorColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 440), *(void *)(v1 + 448), *(unsigned char *)(v1 + 456));
  *(void *)(v1 + 440) = v2;
  *(void *)(v1 + 448) = v3;
  *(unsigned char *)(v1 + 456) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.criticallyLowLevelIndicatorColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.redactedIndicatorColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 464);
  uint64_t v3 = *(void *)(v1 + 472);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 480);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.redactedIndicatorColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 464), *(void *)(v1 + 472), *(unsigned char *)(v1 + 480));
  *(void *)(v1 + 464) = v2;
  *(void *)(v1 + 472) = v3;
  *(unsigned char *)(v1 + 480) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.redactedIndicatorColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorImages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorImages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 488) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.portSideIndicatorImages.modify())()
{
  return nullsub_1;
}

void *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.init(levelDataIdentifier:levelStateDataIdentifier:levelMarkerLowDataIdentifier:portSideIndicatorDataIdentifier:remainingRangeTextConfiguration:trackColorID:progressColorID:lowLevelColorID:criticallyLowLevelColorID:normalLevelIndicatorColorID:lowLevelIndicatorColorID:criticallyLowLevelIndicatorColorID:redactedIndicatorColorID:)@<X0>(char *a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t *a7@<X6>, uint64_t *a8@<X7>, void *a9@<X8>, uint64_t *a10, uint64_t *a11, uint64_t *a12, uint64_t *a13, uint64_t *a14)
{
  char v27 = *a2;
  char v28 = *a1;
  char v42 = *a3;
  char v17 = *a4;
  sub_24989CB58(a5, (uint64_t)v47);
  uint64_t v44 = a6[1];
  uint64_t v45 = *a6;
  char v43 = *((unsigned char *)a6 + 16);
  uint64_t v18 = *a7;
  uint64_t v19 = a7[1];
  LOBYTE(a7) = *((unsigned char *)a7 + 16);
  uint64_t v40 = a8[1];
  uint64_t v41 = *a8;
  char v39 = *((unsigned char *)a8 + 16);
  uint64_t v37 = a10[1];
  uint64_t v38 = *a10;
  char v20 = *((unsigned char *)a10 + 16);
  uint64_t v35 = a11[1];
  uint64_t v36 = *a11;
  char v21 = *((unsigned char *)a11 + 16);
  uint64_t v33 = a12[1];
  uint64_t v34 = *a12;
  char v22 = *((unsigned char *)a12 + 16);
  uint64_t v31 = a13[1];
  uint64_t v32 = *a13;
  char v23 = *((unsigned char *)a13 + 16);
  uint64_t v29 = a14[1];
  uint64_t v30 = *a14;
  char v24 = *((unsigned char *)a14 + 16);
  unint64_t v25 = sub_2498F0D0C(MEMORY[0x263F8EE78]);
  LOBYTE(__src[0]) = v28;
  BYTE1(__src[0]) = v27;
  BYTE2(__src[0]) = v17;
  BYTE3(__src[0]) = v42;
  sub_24989CB58((uint64_t)v47, (uint64_t)&__src[1]);
  __src[37] = v18;
  __src[38] = v19;
  LOBYTE(__src[39]) = (_BYTE)a7;
  __src[40] = v45;
  __src[41] = v44;
  LOBYTE(__src[42]) = v43;
  __src[43] = v41;
  __src[44] = v40;
  LOBYTE(__src[45]) = v39;
  __src[46] = v38;
  __src[47] = v37;
  LOBYTE(__src[48]) = v20;
  __src[49] = v36;
  __src[50] = v35;
  LOBYTE(__src[51]) = v21;
  __src[52] = v34;
  __src[53] = v33;
  LOBYTE(__src[54]) = v22;
  __src[55] = v32;
  __src[56] = v31;
  LOBYTE(__src[57]) = v23;
  __src[58] = v30;
  __src[59] = v29;
  LOBYTE(__src[60]) = v24;
  __src[61] = v25;
  return memcpy(a9, __src, 0x1F0uLL);
}

void *Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.assets.getter()
{
  sub_24989CB58(v0 + 8, (uint64_t)v3);
  sub_24989CB58((uint64_t)v3, (uint64_t)v4);
  if (sub_24989CF7C((uint64_t)v4) == 1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  memcpy(__dst, v5, sizeof(__dst));
  return MeasurementLabelConfiguration.assets.getter();
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.restoreAssets(from:)(uint64_t a1)
{
  sub_24989CB58(v1 + 8, (uint64_t)v9);
  sub_24989CB58((uint64_t)v9, (uint64_t)v10);
  uint64_t result = sub_24989CF7C((uint64_t)v10);
  if (result != 1)
  {
    uint64_t v5 = *(void *)(v1 + 264);
    unint64_t v6 = sub_2498F0D0C(MEMORY[0x263F8EE78]);
    MEMORY[0x270FA5388](v6);
    v8[2] = a1;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_249897C68(v6, (void (*)(uint64_t *__return_ptr, uint64_t *, void *))sub_24989CF94, (uint64_t)v8, v5);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v2)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v1 + 264) = v7;
    }
  }
  return result;
}

unint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.description.getter()
{
  unint64_t v0 = InstrumentDataIdentifier.rawValue.getter();
  unint64_t v2 = sub_249AE34DC(v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hash(into:)(uint64_t a1)
{
  char v3 = *v1;
  char v4 = v1[1];
  char v5 = v1[2];
  char v6 = v1[3];
  sub_24989CB58((uint64_t)(v1 + 8), (uint64_t)v36);
  uint64_t v7 = *((void *)v1 + 37);
  uint64_t v8 = *((void *)v1 + 38);
  char v9 = v1[312];
  uint64_t v10 = *((void *)v1 + 41);
  uint64_t v13 = *((void *)v1 + 40);
  char v12 = v1[336];
  uint64_t v15 = *((void *)v1 + 44);
  uint64_t v16 = *((void *)v1 + 43);
  char v14 = v1[360];
  uint64_t v18 = *((void *)v1 + 47);
  uint64_t v19 = *((void *)v1 + 46);
  char v17 = v1[384];
  uint64_t v21 = *((void *)v1 + 50);
  uint64_t v22 = *((void *)v1 + 49);
  char v20 = v1[408];
  uint64_t v24 = *((void *)v1 + 53);
  uint64_t v25 = *((void *)v1 + 52);
  char v23 = v1[432];
  uint64_t v27 = *((void *)v1 + 56);
  uint64_t v28 = *((void *)v1 + 55);
  char v26 = v1[456];
  uint64_t v30 = *((void *)v1 + 59);
  uint64_t v31 = *((void *)v1 + 58);
  char v29 = v1[480];
  uint64_t v32 = *((void *)v1 + 61);
  v37[0] = v3;
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  v37[0] = v4;
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  v37[0] = v5;
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  v37[0] = v6;
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24989CB58((uint64_t)v36, (uint64_t)v37);
  if (sub_24989CF7C((uint64_t)v37) == 1)
  {
    sub_249AEE358();
  }
  else
  {
    sub_24989CB58((uint64_t)v36, (uint64_t)&v34);
    sub_249AEE358();
    InstrumentDataIdentifier.rawValue.getter();
    sub_24989CFB0((uint64_t)&v34);
    sub_24989CFB0((uint64_t)&v34);
    sub_249AECF78();
    swift_bridgeObjectRelease();
    InstrumentDataIdentifier.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    memcpy(__dst, v35, sizeof(__dst));
    MeasurementLabelConfiguration.hash(into:)(a1);
    sub_24989CD54((uint64_t)v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
    sub_24989CD54((uint64_t)v36, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
  }
  uint64_t v34 = v7;
  v35[0] = v8;
  LOBYTE(v35[1]) = v9;
  sub_24988D770(v7, v8, v9);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v7, v8, v9);
  uint64_t v34 = v13;
  v35[0] = v10;
  LOBYTE(v35[1]) = v12;
  sub_24988D770(v13, v10, v12);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v13, v10, v12);
  uint64_t v34 = v16;
  v35[0] = v15;
  LOBYTE(v35[1]) = v14;
  sub_24988D770(v16, v15, v14);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v16, v15, v14);
  uint64_t v34 = v19;
  v35[0] = v18;
  LOBYTE(v35[1]) = v17;
  sub_24988D770(v19, v18, v17);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v19, v18, v17);
  uint64_t v34 = v22;
  v35[0] = v21;
  LOBYTE(v35[1]) = v20;
  sub_24988D770(v22, v21, v20);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v22, v21, v20);
  uint64_t v34 = v25;
  v35[0] = v24;
  LOBYTE(v35[1]) = v23;
  sub_24988D770(v25, v24, v23);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v25, v24, v23);
  uint64_t v34 = v28;
  v35[0] = v27;
  LOBYTE(v35[1]) = v26;
  sub_24988D770(v28, v27, v26);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v28, v27, v26);
  uint64_t v34 = v31;
  v35[0] = v30;
  LOBYTE(v35[1]) = v29;
  sub_24988D770(v31, v30, v29);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v31, v30, v29);
  swift_bridgeObjectRetain();
  sub_24988AAA4(a1, v32);
  return swift_bridgeObjectRelease();
}

unint64_t sub_24989A01C(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
    case 10:
    case 12:
      unint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0x73736572676F7270;
      break;
    case 6:
      unint64_t result = 0x6C6F436B63617274;
      break;
    case 7:
      unint64_t result = 0x6C6576654C776F6CLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000019;
      break;
    case 9:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000022;
      break;
    case 13:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24989A19C()
{
  return sub_24989A01C(*v0);
}

uint64_t sub_24989A1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24989F32C(a1, a2);
  *a3 = result;
  return result;
}

void sub_24989A1CC(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_24989A1D8(uint64_t a1)
{
  unint64_t v2 = sub_24989D0E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24989A214(uint64_t a1)
{
  unint64_t v2 = sub_24989D0E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF18);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  int v54 = v1[1];
  int v8 = v1[2];
  int v47 = v1[3];
  int v48 = v8;
  sub_24989CB58((uint64_t)(v1 + 8), (uint64_t)v53);
  uint64_t v46 = *((void *)v1 + 37);
  uint64_t v44 = *((void *)v1 + 38);
  int v45 = v1[312];
  uint64_t v9 = *((void *)v1 + 41);
  uint64_t v41 = *((void *)v1 + 40);
  uint64_t v42 = v9;
  int v43 = v1[336];
  uint64_t v10 = *((void *)v1 + 44);
  uint64_t v38 = *((void *)v1 + 43);
  uint64_t v39 = v10;
  int v40 = v1[360];
  uint64_t v11 = *((void *)v1 + 46);
  uint64_t v37 = *((void *)v1 + 47);
  int v36 = v1[384];
  uint64_t v12 = *((void *)v1 + 49);
  uint64_t v34 = *((void *)v1 + 50);
  uint64_t v35 = v11;
  int v33 = v1[408];
  uint64_t v13 = *((void *)v1 + 52);
  uint64_t v31 = *((void *)v1 + 53);
  uint64_t v32 = v12;
  int v30 = v1[432];
  uint64_t v14 = *((void *)v1 + 55);
  uint64_t v28 = *((void *)v1 + 56);
  uint64_t v29 = v13;
  int v27 = v1[456];
  uint64_t v15 = *((void *)v1 + 58);
  uint64_t v25 = *((void *)v1 + 59);
  uint64_t v26 = v14;
  int v24 = v1[480];
  uint64_t v22 = *((void *)v1 + 61);
  uint64_t v23 = v15;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24989D0E8();
  uint64_t v16 = v3;
  sub_249AEE468();
  LOBYTE(v50) = v7;
  char v55 = 0;
  sub_24989C934();
  uint64_t v17 = v49;
  sub_249AEDF08();
  if (v17) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  char v19 = v47;
  char v20 = v48;
  uint64_t v21 = v46;
  uint64_t v49 = v4;
  LOBYTE(v50) = v54;
  char v55 = 1;
  sub_249AEDF08();
  LOBYTE(v50) = v20;
  char v55 = 2;
  sub_249AEDF08();
  LOBYTE(v50) = v19;
  char v55 = 3;
  sub_249AEDF08();
  sub_24989CB58((uint64_t)v53, (uint64_t)&v50);
  char v55 = 4;
  sub_24989D13C();
  sub_249AEDEA8();
  uint64_t v50 = v21;
  uint64_t v51 = v44;
  char v52 = v45;
  char v55 = 5;
  sub_24988E104();
  sub_249AEDF08();
  uint64_t v50 = v41;
  uint64_t v51 = v42;
  char v52 = v43;
  char v55 = 6;
  sub_249AEDF08();
  uint64_t v50 = v38;
  uint64_t v51 = v39;
  char v52 = v40;
  char v55 = 7;
  sub_249AEDF08();
  uint64_t v50 = v35;
  uint64_t v51 = v37;
  char v52 = v36;
  char v55 = 8;
  sub_249AEDF08();
  uint64_t v50 = v32;
  uint64_t v51 = v34;
  char v52 = v33;
  char v55 = 9;
  sub_249AEDF08();
  uint64_t v50 = v29;
  uint64_t v51 = v31;
  char v52 = v30;
  char v55 = 10;
  sub_249AEDF08();
  uint64_t v50 = v26;
  uint64_t v51 = v28;
  char v52 = v27;
  char v55 = 11;
  sub_249AEDF08();
  uint64_t v50 = v23;
  uint64_t v51 = v25;
  char v52 = v24;
  char v55 = 12;
  sub_249AEDF08();
  uint64_t v50 = v22;
  char v55 = 13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF30);
  sub_24989D26C(&qword_2696DDF38, (void (*)(void))sub_24989D190);
  sub_249AEDF08();
  return (*(uint64_t (**)(void, uint64_t))(v49 + 8))(0, v16);
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hashValue.getter()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_249AEE338();
  Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hash(into:)((uint64_t)v2);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF48);
  uint64_t v5 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  char v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24989D1E4(v83);
  uint64_t v77 = &v82[1];
  sub_24989CB58((uint64_t)v83, (uint64_t)&v82[1]);
  v82[61] = sub_2498F0D0C(MEMORY[0x263F8EE78]);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24989D0E8();
  sub_249AEE428();
  uint64_t v75 = a1;
  if (v2)
  {
    uint64_t v76 = v2;
    int v11 = 0;
    int v12 = 0;
    int v13 = 0;
    int v14 = 0;
    int v15 = 0;
    int v16 = 0;
    int v17 = 0;
    int v18 = 0;
    goto LABEL_4;
  }
  uint64_t v8 = v5;
  char v73 = a2;
  LOBYTE(v78[0]) = 0;
  sub_24989C988();
  sub_249AEDE08();
  int v9 = LOBYTE(v79[0]);
  LOBYTE(v82[0]) = v79[0];
  LOBYTE(v78[0]) = 1;
  sub_249AEDE08();
  int v10 = LOBYTE(v79[0]);
  BYTE1(v82[0]) = v79[0];
  LOBYTE(v78[0]) = 2;
  sub_249AEDE08();
  int v72 = v10;
  int v84 = v9;
  int v20 = LOBYTE(v79[0]);
  BYTE2(v82[0]) = v79[0];
  LOBYTE(v78[0]) = 3;
  sub_249AEDE08();
  int v71 = v20;
  int v21 = LOBYTE(v79[0]);
  BYTE3(v82[0]) = v79[0];
  char v86 = 4;
  sub_24989D218();
  sub_249AEDDA8();
  int v70 = v21;
  sub_24989CB58((uint64_t)&v81, (uint64_t)v80);
  sub_24989CB58((uint64_t)v80, (uint64_t)v77);
  LOBYTE(v78[0]) = 5;
  sub_24989CD54((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CBC0);
  unint64_t v22 = sub_24988E268();
  sub_249AEDE08();
  int v23 = LOBYTE(v79[2]);
  v82[37] = v79[0];
  v82[38] = v79[1];
  LOBYTE(v82[39]) = v79[2];
  LOBYTE(v78[0]) = 6;
  uint64_t v68 = v79[0];
  uint64_t v69 = v79[1];
  sub_24988D770(v79[0], v79[1], v79[2]);
  sub_249AEDE08();
  int v67 = v23;
  int v24 = LOBYTE(v79[2]);
  v82[40] = v79[0];
  v82[41] = v79[1];
  LOBYTE(v82[42]) = v79[2];
  LOBYTE(v78[0]) = 7;
  uint64_t v65 = v79[0];
  uint64_t v66 = v79[1];
  sub_24988D770(v79[0], v79[1], v79[2]);
  sub_249AEDE08();
  int v63 = v24;
  uint64_t v25 = v79[1];
  int v26 = LOBYTE(v79[2]);
  v82[43] = v79[0];
  v82[44] = v79[1];
  LOBYTE(v82[45]) = v79[2];
  LOBYTE(v78[0]) = 8;
  uint64_t v64 = v79[0];
  sub_24988D770(v79[0], v79[1], v79[2]);
  unint64_t v62 = v22;
  sub_249AEDE08();
  uint64_t v76 = 0;
  uint64_t v27 = v64;
  uint64_t v60 = v25;
  int v61 = v26;
  char v28 = v79[2];
  v82[46] = v79[0];
  v82[47] = v79[1];
  LOBYTE(v82[48]) = v79[2];
  LOBYTE(v78[0]) = 9;
  uint64_t v29 = v79[0];
  uint64_t v30 = v79[1];
  sub_24988D770(v79[0], v79[1], v79[2]);
  uint64_t v31 = v76;
  sub_249AEDE08();
  uint64_t v76 = v31;
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v74);
    sub_24988D788(v29, v30, v28);
    sub_24988D788(v27, v60, v61);
    sub_24988D788(v65, v66, v63);
    sub_24988D788(v68, v69, v67);
    sub_24989CD54((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
    int v15 = 0;
    int v16 = 0;
    int v17 = 0;
    int v18 = 0;
    int v11 = 1;
    int v12 = 1;
    int v13 = 1;
    int v14 = 1;
    goto LABEL_4;
  }
  v82[49] = v79[0];
  v82[50] = v79[1];
  LOBYTE(v82[51]) = v79[2];
  LOBYTE(v78[0]) = 10;
  uint64_t v32 = v79[0];
  uint64_t v58 = v79[1];
  int v59 = LOBYTE(v79[2]);
  sub_24988D770(v79[0], v79[1], v79[2]);
  uint64_t v33 = v76;
  sub_249AEDE08();
  uint64_t v76 = v33;
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
    sub_24988D788(v32, v58, v59);
    sub_24988D788(v29, v30, v28);
    sub_24988D788(v27, v60, v61);
    sub_24988D788(v65, v66, v63);
    sub_24988D788(v68, v69, v67);
    sub_24989CD54((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
    int v16 = 0;
    int v17 = 0;
    int v18 = 0;
    int v11 = 1;
    int v12 = 1;
    int v13 = 1;
    int v14 = 1;
    int v15 = 1;
    goto LABEL_4;
  }
  v82[52] = v79[0];
  v82[53] = v79[1];
  LOBYTE(v82[54]) = v79[2];
  LOBYTE(v78[0]) = 11;
  uint64_t v55 = v79[0];
  uint64_t v56 = v79[1];
  int v57 = LOBYTE(v79[2]);
  sub_24988D770(v79[0], v79[1], v79[2]);
  uint64_t v34 = v76;
  sub_249AEDE08();
  uint64_t v76 = v34;
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
    sub_24988D788(v55, v56, v57);
    sub_24988D788(v32, v58, v59);
    sub_24988D788(v29, v30, v28);
    sub_24988D788(v27, v60, v61);
    sub_24988D788(v65, v66, v63);
    sub_24988D788(v68, v69, v67);
    sub_24989CD54((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
    int v17 = 0;
    int v18 = 0;
    int v11 = 1;
    int v12 = 1;
    int v13 = 1;
    int v14 = 1;
    int v15 = 1;
    int v16 = 1;
    goto LABEL_4;
  }
  v82[55] = v79[0];
  v82[56] = v79[1];
  LOBYTE(v82[57]) = v79[2];
  LOBYTE(v78[0]) = 12;
  uint64_t v52 = v79[0];
  uint64_t v53 = v79[1];
  int v54 = LOBYTE(v79[2]);
  sub_24988D770(v79[0], v79[1], v79[2]);
  uint64_t v35 = v76;
  sub_249AEDE08();
  uint64_t v76 = v35;
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
    sub_24988D788(v52, v53, v54);
    sub_24988D788(v55, v56, v57);
    sub_24988D788(v32, v58, v59);
    sub_24988D788(v29, v30, v28);
    sub_24988D788(v27, v60, v61);
    sub_24988D788(v65, v66, v63);
    sub_24988D788(v68, v69, v67);
    sub_24989CD54((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
    int v18 = 0;
    int v11 = 1;
    int v12 = 1;
    int v13 = 1;
    int v14 = 1;
    int v15 = 1;
    int v16 = 1;
    int v17 = 1;
    goto LABEL_4;
  }
  unint64_t v62 = v79[0];
  uint64_t v51 = v79[1];
  int v36 = LOBYTE(v79[2]);
  v82[58] = v79[0];
  v82[59] = v79[1];
  LOBYTE(v82[60]) = v79[2];
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF30);
  char v85 = 13;
  int v50 = v36;
  sub_24988D770(v62, v51, v36);
  sub_24989D26C(&qword_2696DDF58, (void (*)(void))sub_24989D2E8);
  uint64_t v37 = v76;
  sub_249AEDE08();
  uint64_t v76 = v37;
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
    sub_24988D788(v62, v51, v50);
    sub_24988D788(v52, v53, v54);
    sub_24988D788(v55, v56, v57);
    sub_24988D788(v32, v58, v59);
    sub_24988D788(v29, v30, v28);
    sub_24988D788(v27, v60, v61);
    sub_24988D788(v65, v66, v63);
    sub_24988D788(v68, v69, v67);
    sub_24989CD54((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
    int v11 = 1;
    int v12 = 1;
    int v13 = 1;
    int v14 = 1;
    int v15 = 1;
    int v16 = 1;
    int v17 = 1;
    int v18 = 1;
LABEL_4:
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v75);
    sub_24989CB58((uint64_t)v77, (uint64_t)v79);
    sub_24989CD54((uint64_t)v79, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
    if (v11)
    {
      sub_24988D788(v82[37], v82[38], v82[39]);
      if (!v12)
      {
LABEL_6:
        if (!v13) {
          goto LABEL_7;
        }
        goto LABEL_16;
      }
    }
    else if (!v12)
    {
      goto LABEL_6;
    }
    sub_24988D788(v82[40], v82[41], v82[42]);
    if (!v13)
    {
LABEL_7:
      if (!v14) {
        goto LABEL_8;
      }
      goto LABEL_17;
    }
LABEL_16:
    sub_24988D788(v82[43], v82[44], v82[45]);
    if (!v14)
    {
LABEL_8:
      if (!v15) {
        goto LABEL_9;
      }
      goto LABEL_18;
    }
LABEL_17:
    sub_24988D788(v82[46], v82[47], v82[48]);
    if (!v15)
    {
LABEL_9:
      if (!v16) {
        goto LABEL_10;
      }
      goto LABEL_19;
    }
LABEL_18:
    sub_24988D788(v82[49], v82[50], v82[51]);
    if (!v16)
    {
LABEL_10:
      if (!v17) {
        goto LABEL_11;
      }
      goto LABEL_20;
    }
LABEL_19:
    sub_24988D788(v82[52], v82[53], v82[54]);
    if (!v17)
    {
LABEL_11:
      if (!v18) {
        return swift_bridgeObjectRelease();
      }
LABEL_12:
      sub_24988D788(v82[58], v82[59], v82[60]);
      return swift_bridgeObjectRelease();
    }
LABEL_20:
    sub_24988D788(v82[55], v82[56], v82[57]);
    if (!v18) {
      return swift_bridgeObjectRelease();
    }
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v74);
  uint64_t v38 = v79[62];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v82[61] = v38;
  LOBYTE(v78[0]) = v84;
  BYTE1(v78[0]) = v72;
  BYTE2(v78[0]) = v71;
  BYTE3(v78[0]) = v70;
  sub_24989CB58((uint64_t)v80, (uint64_t)&v78[1]);
  v78[37] = v68;
  v78[38] = v69;
  LOBYTE(v78[39]) = v67;
  v78[40] = v65;
  v78[41] = v66;
  LOBYTE(v78[42]) = v63;
  v78[43] = v27;
  v78[44] = v60;
  LOBYTE(v78[45]) = v61;
  uint64_t v47 = v29;
  uint64_t v48 = v30;
  v78[46] = v29;
  v78[47] = v30;
  LOBYTE(v78[48]) = v28;
  uint64_t v46 = v32;
  v78[49] = v32;
  v78[50] = v58;
  LOBYTE(v78[51]) = v59;
  v78[52] = v55;
  v78[53] = v56;
  LOBYTE(v78[54]) = v57;
  uint64_t v40 = v52;
  uint64_t v39 = v53;
  v78[55] = v52;
  v78[56] = v53;
  char v41 = v54;
  LOBYTE(v78[57]) = v54;
  uint64_t v42 = v62;
  v78[58] = v62;
  uint64_t v43 = v51;
  v78[59] = v51;
  char v44 = v50;
  LOBYTE(v78[60]) = v50;
  v78[61] = v38;
  sub_24989D33C((uint64_t)v78);
  swift_bridgeObjectRelease();
  sub_24988D788(v42, v43, v44);
  sub_24988D788(v40, v39, v41);
  sub_24988D788(v55, v56, v57);
  sub_24988D788(v46, v58, v59);
  sub_24988D788(v47, v48, v28);
  sub_24988D788(v64, v60, v61);
  sub_24988D788(v65, v66, v63);
  sub_24988D788(v68, v69, v67);
  sub_24989CD54((uint64_t)v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
  memcpy(v73, v78, 0x1F0uLL);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v75);
  memcpy(v79, v82, 0x1F0uLL);
  return sub_24989D4F8((uint64_t)v79);
}

void *sub_24989B75C()
{
  sub_24989CB58(v0 + 8, (uint64_t)v3);
  sub_24989CB58((uint64_t)v3, (uint64_t)v4);
  if (sub_24989CF7C((uint64_t)v4) == 1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  memcpy(__dst, v5, sizeof(__dst));
  return MeasurementLabelConfiguration.assets.getter();
}

uint64_t sub_24989B7D8(uint64_t a1)
{
  sub_24989CB58(v1 + 8, (uint64_t)v9);
  sub_24989CB58((uint64_t)v9, (uint64_t)v10);
  uint64_t result = sub_24989CF7C((uint64_t)v10);
  if (result != 1)
  {
    uint64_t v5 = *(void *)(v1 + 264);
    unint64_t v6 = sub_2498F0D0C(MEMORY[0x263F8EE78]);
    MEMORY[0x270FA5388](v6);
    v8[2] = a1;
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_249897C68(v6, (void (*)(uint64_t *__return_ptr, uint64_t *, void *))sub_24989FB78, (uint64_t)v8, v5);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v2)
    {
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v1 + 264) = v7;
    }
  }
  return result;
}

uint64_t sub_24989B8E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_24989B8FC(void *a1)
{
  return Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.encode(to:)(a1);
}

uint64_t sub_24989B914()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_249AEE338();
  Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hash(into:)((uint64_t)v2);
  return sub_249AEE388();
}

uint64_t sub_24989B96C()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_249AEE338();
  Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration.hash(into:)((uint64_t)v2);
  return sub_249AEE388();
}

unint64_t sub_24989B9CC()
{
  unint64_t v0 = InstrumentDataIdentifier.rawValue.getter();
  unint64_t v2 = sub_249AE34DC(v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO015ChargeFuelLevelF13ConfigurationV2eeoiySbAG_AGtFZ_0(char *a1, char *a2)
{
  char v4 = *a1;
  char v5 = a1[1];
  char v6 = a1[2];
  char v7 = a1[3];
  sub_24989CB58((uint64_t)(a1 + 8), (uint64_t)v142);
  uint64_t v129 = *((void *)a1 + 37);
  uint64_t v130 = *((void *)a1 + 38);
  char v131 = a1[312];
  uint64_t v119 = *((void *)a1 + 40);
  uint64_t v120 = *((void *)a1 + 41);
  char v121 = a1[336];
  uint64_t v106 = *((void *)a1 + 43);
  uint64_t v107 = *((void *)a1 + 44);
  uint64_t v125 = *((void *)a1 + 46);
  uint64_t v126 = *((void *)a1 + 47);
  char v108 = a1[360];
  char v109 = a1[384];
  uint64_t v113 = *((void *)a1 + 49);
  uint64_t v114 = *((void *)a1 + 50);
  char v115 = a1[408];
  uint64_t v100 = *((void *)a1 + 52);
  uint64_t v101 = *((void *)a1 + 53);
  char v102 = a1[432];
  uint64_t v94 = *((void *)a1 + 55);
  uint64_t v95 = *((void *)a1 + 56);
  char v96 = a1[456];
  uint64_t v88 = *((void *)a1 + 58);
  uint64_t v89 = *((void *)a1 + 59);
  char v90 = a1[480];
  uint64_t v84 = *((void *)a1 + 61);
  char v8 = *a2;
  char v9 = a2[1];
  char v10 = a2[2];
  char v11 = a2[3];
  sub_24989CB58((uint64_t)(a2 + 8), (uint64_t)v143);
  uint64_t v12 = *((void *)a2 + 37);
  uint64_t v127 = *((void *)a2 + 38);
  char v128 = a2[312];
  uint64_t v116 = *((void *)a2 + 40);
  uint64_t v117 = *((void *)a2 + 41);
  char v118 = a2[336];
  uint64_t v103 = *((void *)a2 + 43);
  uint64_t v104 = *((void *)a2 + 44);
  char v105 = a2[360];
  uint64_t v122 = *((void *)a2 + 46);
  uint64_t v123 = *((void *)a2 + 47);
  char v124 = a2[384];
  uint64_t v110 = *((void *)a2 + 49);
  uint64_t v111 = *((void *)a2 + 50);
  char v112 = a2[408];
  uint64_t v97 = *((void *)a2 + 52);
  uint64_t v98 = *((void *)a2 + 53);
  char v99 = a2[432];
  uint64_t v91 = *((void *)a2 + 55);
  uint64_t v92 = *((void *)a2 + 56);
  char v93 = a2[456];
  uint64_t v85 = *((void *)a2 + 58);
  uint64_t v86 = *((void *)a2 + 59);
  char v87 = a2[480];
  uint64_t v83 = *((void *)a2 + 61);
  LOBYTE(v137) = v4;
  v141[0] = v8;
  unint64_t v13 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v15 = v14;
  if (v13 == InstrumentDataIdentifier.rawValue.getter() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v18 = 0;
    if ((v17 & 1) == 0) {
      return v18 & 1;
    }
  }
  LOBYTE(v137) = v5;
  v141[0] = v9;
  unint64_t v19 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v21 = v20;
  if (v19 == InstrumentDataIdentifier.rawValue.getter() && v21 == v22)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v18 = 0;
    if ((v23 & 1) == 0) {
      return v18 & 1;
    }
  }
  LOBYTE(v137) = v6;
  v141[0] = v10;
  unint64_t v24 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v26 = v25;
  if (v24 == InstrumentDataIdentifier.rawValue.getter() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v28 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v18 = 0;
    if ((v28 & 1) == 0) {
      return v18 & 1;
    }
  }
  LOBYTE(v137) = v7;
  v141[0] = v11;
  unint64_t v29 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v31 = v30;
  if (v29 == InstrumentDataIdentifier.rawValue.getter() && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v33 = sub_249AEE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v18 = 0;
  if (v33)
  {
LABEL_17:
    sub_24989CB58((uint64_t)v142, (uint64_t)v141);
    if (sub_24989CF7C((uint64_t)v141) == 1)
    {
      sub_24989CB58((uint64_t)v143, (uint64_t)&v137);
      if (sub_24989CF7C((uint64_t)&v137) == 1)
      {
LABEL_24:
        uint64_t v137 = v129;
        uint64_t v138 = v130;
        char v139 = v131;
        __src[0] = v12;
        __src[1] = v127;
        LOBYTE(__src[2]) = v128;
        sub_24988D770(v129, v130, v131);
        sub_24988D770(v12, v127, v128);
        uint64_t v35 = Theme.ColorID.rawValue.getter();
        uint64_t v37 = v36;
        if (v35 == Theme.ColorID.rawValue.getter() && v37 == v38)
        {
          swift_bridgeObjectRelease_n();
          sub_24988D788(v12, v127, v128);
          sub_24988D788(v129, v130, v131);
        }
        else
        {
          char v39 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24988D788(v12, v127, v128);
          sub_24988D788(v129, v130, v131);
          if ((v39 & 1) == 0) {
            goto LABEL_57;
          }
        }
        uint64_t v137 = v119;
        uint64_t v138 = v120;
        char v139 = v121;
        __src[0] = v116;
        __src[1] = v117;
        LOBYTE(__src[2]) = v118;
        sub_24988D770(v119, v120, v121);
        sub_24988D770(v116, v117, v118);
        uint64_t v40 = Theme.ColorID.rawValue.getter();
        uint64_t v42 = v41;
        if (v40 == Theme.ColorID.rawValue.getter() && v42 == v43)
        {
          swift_bridgeObjectRelease_n();
          sub_24988D788(v116, v117, v118);
          sub_24988D788(v119, v120, v121);
        }
        else
        {
          char v44 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24988D788(v116, v117, v118);
          sub_24988D788(v119, v120, v121);
          if ((v44 & 1) == 0) {
            goto LABEL_57;
          }
        }
        uint64_t v137 = v106;
        uint64_t v138 = v107;
        char v139 = v108;
        __src[0] = v103;
        __src[1] = v104;
        LOBYTE(__src[2]) = v105;
        sub_24988D770(v106, v107, v108);
        sub_24988D770(v103, v104, v105);
        uint64_t v45 = Theme.ColorID.rawValue.getter();
        uint64_t v47 = v46;
        if (v45 == Theme.ColorID.rawValue.getter() && v47 == v48)
        {
          swift_bridgeObjectRelease_n();
          sub_24988D788(v103, v104, v105);
          sub_24988D788(v106, v107, v108);
          char v49 = v115;
          uint64_t v51 = v113;
          uint64_t v50 = v114;
          char v52 = v112;
          uint64_t v54 = v110;
          uint64_t v53 = v111;
          char v55 = v109;
        }
        else
        {
          char v56 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24988D788(v103, v104, v105);
          sub_24988D788(v106, v107, v108);
          char v49 = v115;
          uint64_t v51 = v113;
          uint64_t v50 = v114;
          char v52 = v112;
          uint64_t v54 = v110;
          uint64_t v53 = v111;
          char v55 = v109;
          if ((v56 & 1) == 0) {
            goto LABEL_57;
          }
        }
        uint64_t v137 = v125;
        uint64_t v138 = v126;
        char v139 = v55;
        __src[0] = v122;
        __src[1] = v123;
        LOBYTE(__src[2]) = v124;
        sub_24988D770(v125, v126, v55);
        sub_24988D770(v122, v123, v124);
        uint64_t v57 = Theme.ColorID.rawValue.getter();
        uint64_t v59 = v58;
        if (v57 == Theme.ColorID.rawValue.getter() && v59 == v60)
        {
          swift_bridgeObjectRelease_n();
          sub_24988D788(v122, v123, v124);
          sub_24988D788(v125, v126, v55);
        }
        else
        {
          char v61 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24988D788(v122, v123, v124);
          sub_24988D788(v125, v126, v55);
          if ((v61 & 1) == 0) {
            goto LABEL_57;
          }
        }
        uint64_t v137 = v51;
        uint64_t v138 = v50;
        char v139 = v49;
        __src[0] = v54;
        __src[1] = v53;
        LOBYTE(__src[2]) = v52;
        sub_24988D770(v51, v50, v49);
        sub_24988D770(v54, v53, v52);
        uint64_t v62 = Theme.ColorID.rawValue.getter();
        uint64_t v64 = v63;
        if (v62 == Theme.ColorID.rawValue.getter() && v64 == v65)
        {
          swift_bridgeObjectRelease_n();
          sub_24988D788(v54, v53, v52);
          sub_24988D788(v51, v50, v49);
        }
        else
        {
          char v66 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24988D788(v54, v53, v52);
          sub_24988D788(v51, v50, v49);
          if ((v66 & 1) == 0) {
            goto LABEL_57;
          }
        }
        uint64_t v137 = v100;
        uint64_t v138 = v101;
        char v139 = v102;
        __src[0] = v97;
        __src[1] = v98;
        LOBYTE(__src[2]) = v99;
        sub_24988D770(v100, v101, v102);
        sub_24988D770(v97, v98, v99);
        uint64_t v67 = Theme.ColorID.rawValue.getter();
        uint64_t v69 = v68;
        if (v67 == Theme.ColorID.rawValue.getter() && v69 == v70)
        {
          swift_bridgeObjectRelease_n();
          sub_24988D788(v97, v98, v99);
          sub_24988D788(v100, v101, v102);
        }
        else
        {
          char v71 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24988D788(v97, v98, v99);
          sub_24988D788(v100, v101, v102);
          if ((v71 & 1) == 0) {
            goto LABEL_57;
          }
        }
        uint64_t v137 = v94;
        uint64_t v138 = v95;
        char v139 = v96;
        __src[0] = v91;
        __src[1] = v92;
        LOBYTE(__src[2]) = v93;
        sub_24988D770(v94, v95, v96);
        sub_24988D770(v91, v92, v93);
        uint64_t v72 = Theme.ColorID.rawValue.getter();
        uint64_t v74 = v73;
        if (v72 == Theme.ColorID.rawValue.getter() && v74 == v75)
        {
          swift_bridgeObjectRelease_n();
          sub_24988D788(v91, v92, v93);
          sub_24988D788(v94, v95, v96);
        }
        else
        {
          char v76 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24988D788(v91, v92, v93);
          sub_24988D788(v94, v95, v96);
          if ((v76 & 1) == 0) {
            goto LABEL_57;
          }
        }
        uint64_t v137 = v88;
        uint64_t v138 = v89;
        char v139 = v90;
        __src[0] = v85;
        __src[1] = v86;
        LOBYTE(__src[2]) = v87;
        sub_24988D770(v88, v89, v90);
        sub_24988D770(v85, v86, v87);
        uint64_t v77 = Theme.ColorID.rawValue.getter();
        uint64_t v79 = v78;
        if (v77 == Theme.ColorID.rawValue.getter() && v79 == v80)
        {
          swift_bridgeObjectRelease_n();
          sub_24988D788(v85, v86, v87);
          sub_24988D788(v88, v89, v90);
LABEL_56:
          char v18 = sub_249A00DE0(v84, v83);
          return v18 & 1;
        }
        char v81 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24988D788(v85, v86, v87);
        sub_24988D788(v88, v89, v90);
        if (v81) {
          goto LABEL_56;
        }
LABEL_57:
        char v18 = 0;
        return v18 & 1;
      }
    }
    else
    {
      sub_24989CB58((uint64_t)v142, (uint64_t)__src);
      sub_24989CB58((uint64_t)v143, (uint64_t)&v137);
      if (sub_24989CF7C((uint64_t)&v137) != 1)
      {
        sub_24989CB58((uint64_t)v143, (uint64_t)v133);
        memcpy(v132, v133, 0x11AuLL);
        sub_24989CB58((uint64_t)v142, (uint64_t)__dst);
        sub_24989CD54((uint64_t)v142, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CBC0);
        sub_24989CFB0((uint64_t)__dst);
        BOOL v34 = _s14CarPlayAssetUI10InstrumentV31RemainingRangeTextConfigurationV2eeoiySbAE_AEtFZ_0((char *)__src, v132);
        memcpy(v135, __src, 0x11AuLL);
        sub_24989FA44((uint64_t)v135);
        sub_24989CD54((uint64_t)v142, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CDE8);
        if (!v34) {
          goto LABEL_57;
        }
        goto LABEL_24;
      }
      memcpy(__dst, __src, 0x11AuLL);
      sub_24989CB58((uint64_t)v142, (uint64_t)v135);
      sub_24989CFB0((uint64_t)v135);
      sub_24989CFB0((uint64_t)v135);
      sub_24989FA44((uint64_t)__dst);
    }
    sub_24989CB58((uint64_t)v142, (uint64_t)&v137);
    sub_24989CB58((uint64_t)v143, (uint64_t)&v140);
    sub_24989CD54((uint64_t)v143, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_24989CBC0);
    sub_24989F898((uint64_t)&v137);
    goto LABEL_57;
  }
  return v18 & 1;
}

uint64_t _s14CarPlayAssetUI25ChargeFuelDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  unint64_t v0 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v4 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v4 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v6 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v8 = v7;
  if (v6 == InstrumentDataIdentifier.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v10 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v11 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v15 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v16 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v18 = v17;
  if (v16 == InstrumentDataIdentifier.rawValue.getter() && v18 == v19) {
    char v5 = 1;
  }
  else {
    char v5 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_24989C8E0()
{
  unint64_t result = qword_2696DDED8;
  if (!qword_2696DDED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDED8);
  }
  return result;
}

unint64_t sub_24989C934()
{
  unint64_t result = qword_2696DDEE0;
  if (!qword_2696DDEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDEE0);
  }
  return result;
}

unint64_t sub_24989C988()
{
  unint64_t result = qword_2696DDEF0;
  if (!qword_2696DDEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDEF0);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI29RemainingRangeDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  unint64_t v0 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = 0;
    if ((v5 & 1) == 0) {
      return v6 & 1;
    }
  }
  unint64_t v7 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v9 = v8;
  if (v7 == InstrumentDataIdentifier.rawValue.getter() && v9 == v10) {
    char v6 = 1;
  }
  else {
    char v6 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

unint64_t sub_24989CB04()
{
  unint64_t result = qword_2696DDF00;
  if (!qword_2696DDF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF00);
  }
  return result;
}

uint64_t sub_24989CB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24989CBC0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  if (a4)
  {
    id v28 = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24988D770(a12, a13, a14);
    sub_24988D770(a15, a16, a17);
    sub_24988D770(a18, a19, a20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24989CD14(a26, a27, a28);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24989CD14(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    id v3 = a3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24989CD54(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))
{
  __int16 v6 = *(_WORD *)(a1 + 280);
  long long v4 = *(_OWORD *)(a1 + 240);
  long long v5 = *(_OWORD *)(a1 + 256);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    *(void *)(a1 + 272),
    v6);
  return a1;
}

uint64_t sub_24989CDE8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28)
{
  if (a4)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24988D788(a12, a13, a14);
    sub_24988D788(a15, a16, a17);
    sub_24988D788(a18, a19, a20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24989CF3C(a26, a27, a28);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24989CF3C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24989CF7C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void sub_24989CF94(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  sub_249A0F0A8(a1, a2, *(void **)(v3 + 16), a3);
}

uint64_t sub_24989CFB0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v9 = *(void *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v11 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  uint64_t v14 = *(void *)(a1 + 208);
  uint64_t v15 = *(void *)(a1 + 200);
  uint64_t v13 = *(void **)(a1 + 216);
  char v4 = *(unsigned char *)(a1 + 104);
  char v5 = *(unsigned char *)(a1 + 128);
  char v6 = *(unsigned char *)(a1 + 152);
  id v7 = *(id *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988D770(v2, v3, v4);
  sub_24988D770(v10, v9, v5);
  sub_24988D770(v12, v11, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24989CD14(v15, v14, v13);
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_24989D0E8()
{
  unint64_t result = qword_2696DDF20;
  if (!qword_2696DDF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF20);
  }
  return result;
}

unint64_t sub_24989D13C()
{
  unint64_t result = qword_2696DDF28;
  if (!qword_2696DDF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF28);
  }
  return result;
}

unint64_t sub_24989D190()
{
  unint64_t result = qword_2696DDF40;
  if (!qword_2696DDF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF40);
  }
  return result;
}

double sub_24989D1E4(_OWORD *a1)
{
  double result = 0.0;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  *(_OWORD *)((char *)a1 + 266) = 0u;
  return result;
}

unint64_t sub_24989D218()
{
  unint64_t result = qword_2696DDF50;
  if (!qword_2696DDF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF50);
  }
  return result;
}

uint64_t sub_24989D26C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDF30);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24989D2E8()
{
  unint64_t result = qword_2696DDF60;
  if (!qword_2696DDF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF60);
  }
  return result;
}

uint64_t sub_24989D33C(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 296);
  uint64_t v2 = *(void *)(a1 + 304);
  uint64_t v5 = *(void *)(a1 + 320);
  uint64_t v4 = *(void *)(a1 + 328);
  uint64_t v12 = *(void *)(a1 + 352);
  uint64_t v13 = *(void *)(a1 + 344);
  uint64_t v15 = *(void *)(a1 + 376);
  uint64_t v16 = *(void *)(a1 + 368);
  uint64_t v18 = *(void *)(a1 + 400);
  uint64_t v19 = *(void *)(a1 + 392);
  uint64_t v21 = *(void *)(a1 + 424);
  uint64_t v22 = *(void *)(a1 + 416);
  uint64_t v23 = *(void *)(a1 + 448);
  uint64_t v24 = *(void *)(a1 + 440);
  uint64_t v25 = *(void *)(a1 + 472);
  uint64_t v26 = *(void *)(a1 + 464);
  char v6 = *(unsigned char *)(a1 + 312);
  char v7 = *(unsigned char *)(a1 + 336);
  char v8 = *(unsigned char *)(a1 + 360);
  char v9 = *(unsigned char *)(a1 + 384);
  char v10 = *(unsigned char *)(a1 + 408);
  char v14 = *(unsigned char *)(a1 + 432);
  char v17 = *(unsigned char *)(a1 + 456);
  char v20 = *(unsigned char *)(a1 + 480);
  sub_24989CBC0(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void **)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(_OWORD *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void **)(a1 + 224));
  sub_24988D770(v3, v2, v6);
  sub_24988D770(v5, v4, v7);
  sub_24988D770(v13, v12, v8);
  sub_24988D770(v16, v15, v9);
  sub_24988D770(v19, v18, v10);
  sub_24988D770(v22, v21, v14);
  sub_24988D770(v24, v23, v17);
  sub_24988D770(v26, v25, v20);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24989D4F8(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 296);
  uint64_t v2 = *(void *)(a1 + 304);
  uint64_t v5 = *(void *)(a1 + 320);
  uint64_t v4 = *(void *)(a1 + 328);
  uint64_t v12 = *(void *)(a1 + 352);
  uint64_t v13 = *(void *)(a1 + 344);
  uint64_t v15 = *(void *)(a1 + 376);
  uint64_t v16 = *(void *)(a1 + 368);
  uint64_t v18 = *(void *)(a1 + 400);
  uint64_t v19 = *(void *)(a1 + 392);
  uint64_t v21 = *(void *)(a1 + 424);
  uint64_t v22 = *(void *)(a1 + 416);
  uint64_t v23 = *(void *)(a1 + 448);
  uint64_t v24 = *(void *)(a1 + 440);
  uint64_t v25 = *(void *)(a1 + 472);
  uint64_t v26 = *(void *)(a1 + 464);
  char v6 = *(unsigned char *)(a1 + 312);
  char v7 = *(unsigned char *)(a1 + 336);
  char v8 = *(unsigned char *)(a1 + 360);
  char v9 = *(unsigned char *)(a1 + 384);
  char v10 = *(unsigned char *)(a1 + 408);
  char v14 = *(unsigned char *)(a1 + 432);
  char v17 = *(unsigned char *)(a1 + 456);
  char v20 = *(unsigned char *)(a1 + 480);
  sub_24989CDE8(*(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void **)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(_OWORD *)(a1 + 136), *(void *)(a1 + 144), *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void **)(a1 + 224));
  sub_24988D788(v3, v2, v6);
  sub_24988D788(v5, v4, v7);
  sub_24988D788(v13, v12, v8);
  sub_24988D788(v16, v15, v9);
  sub_24988D788(v19, v18, v10);
  sub_24988D788(v22, v21, v14);
  sub_24988D788(v24, v23, v17);
  sub_24988D788(v26, v25, v20);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_24989D6C0()
{
  unint64_t result = qword_2696DDF68;
  if (!qword_2696DDF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF68);
  }
  return result;
}

unint64_t sub_24989D718()
{
  unint64_t result = qword_2696DDF70;
  if (!qword_2696DDF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF70);
  }
  return result;
}

unint64_t sub_24989D770()
{
  unint64_t result = qword_2696DDF78;
  if (!qword_2696DDF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF78);
  }
  return result;
}

unint64_t sub_24989D7C8()
{
  unint64_t result = qword_2696DDF80;
  if (!qword_2696DDF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF80);
  }
  return result;
}

ValueMetadata *type metadata accessor for DefaultRedactedColorID()
{
  return &type metadata for DefaultRedactedColorID;
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ChargeFuelDataIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC8 && a1[4]) {
    return (*(_DWORD *)a1 + 200);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 0x39;
  int v5 = v3 - 57;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ChargeFuelDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC7)
  {
    *(_DWORD *)unint64_t result = a2 - 200;
    if (a3 >= 0xC8) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC8) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 56;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChargeFuelDataIdentifiers()
{
  return &type metadata for ChargeFuelDataIdentifiers;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for RemainingRangeDataIdentifiers(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xC8) {
    goto LABEL_17;
  }
  if (a2 + 65336 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65336 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65336;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65336;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65336;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 0x39;
  int v8 = v6 - 57;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RemainingRangeDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65336 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65336 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC7)
  {
    unsigned int v6 = ((a2 - 200) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 200;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24989DA38);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 56;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemainingRangeDataIdentifiers()
{
  return &type metadata for RemainingRangeDataIdentifiers;
}

uint64_t _s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationVwxx(uint64_t a1)
{
  int v2 = *(void **)(a1 + 32);
  if (v2)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24988D788(*(void *)(a1 + 96), *(void *)(a1 + 104), *(unsigned char *)(a1 + 112));
    sub_24988D788(*(void *)(a1 + 120), *(void *)(a1 + 128), *(unsigned char *)(a1 + 136));
    sub_24988D788(*(void *)(a1 + 144), *(void *)(a1 + 152), *(unsigned char *)(a1 + 160));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v3 = *(void **)(a1 + 224);
    if (v3)
    {

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  sub_24988D788(*(void *)(a1 + 296), *(void *)(a1 + 304), *(unsigned char *)(a1 + 312));
  sub_24988D788(*(void *)(a1 + 320), *(void *)(a1 + 328), *(unsigned char *)(a1 + 336));
  sub_24988D788(*(void *)(a1 + 344), *(void *)(a1 + 352), *(unsigned char *)(a1 + 360));
  sub_24988D788(*(void *)(a1 + 368), *(void *)(a1 + 376), *(unsigned char *)(a1 + 384));
  sub_24988D788(*(void *)(a1 + 392), *(void *)(a1 + 400), *(unsigned char *)(a1 + 408));
  sub_24988D788(*(void *)(a1 + 416), *(void *)(a1 + 424), *(unsigned char *)(a1 + 432));
  sub_24988D788(*(void *)(a1 + 440), *(void *)(a1 + 448), *(unsigned char *)(a1 + 456));
  sub_24988D788(*(void *)(a1 + 464), *(void *)(a1 + 472), *(unsigned char *)(a1 + 480));

  return swift_bridgeObjectRelease();
}

uint64_t _s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  unsigned int v4 = (void *)(a1 + 8);
  uint64_t v5 = *(void **)(a2 + 32);
  if (v5)
  {
    *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v5;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
    uint64_t v6 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v6;
    uint64_t v7 = *(void *)(a2 + 80);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v7;
    uint64_t v8 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    uint64_t v9 = *(void *)(a2 + 104);
    char v10 = *(unsigned char *)(a2 + 112);
    id v11 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24988D770(v8, v9, v10);
    *(void *)(a1 + 96) = v8;
    *(void *)(a1 + 104) = v9;
    *(unsigned char *)(a1 + 112) = v10;
    uint64_t v12 = *(void *)(a2 + 120);
    uint64_t v13 = *(void *)(a2 + 128);
    LOBYTE(v7) = *(unsigned char *)(a2 + 136);
    sub_24988D770(v12, v13, v7);
    *(void *)(a1 + 120) = v12;
    *(void *)(a1 + 128) = v13;
    *(unsigned char *)(a1 + 136) = v7;
    uint64_t v14 = *(void *)(a2 + 144);
    uint64_t v15 = *(void *)(a2 + 152);
    LOBYTE(v7) = *(unsigned char *)(a2 + 160);
    sub_24988D770(v14, v15, v7);
    *(void *)(a1 + 144) = v14;
    *(void *)(a1 + 152) = v15;
    *(unsigned char *)(a1 + 160) = v7;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    uint64_t v16 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = v16;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    char v17 = *(void **)(a2 + 224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17)
    {
      *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = v17;
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(_WORD *)(a1 + 240) = *(_WORD *)(a2 + 240);
      uint64_t v18 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v18;
      id v19 = v17;
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v20 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = v20;
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
    }
    *(void *)(a1 + 264) = *(void *)(a2 + 264);
    *(void *)(a1 + 272) = *(void *)(a2 + 272);
    *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
    *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
    *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(v4, (const void *)(a2 + 8), 0x11AuLL);
  }
  uint64_t v21 = *(void *)(a2 + 296);
  uint64_t v22 = *(void *)(a2 + 304);
  char v23 = *(unsigned char *)(a2 + 312);
  sub_24988D770(v21, v22, v23);
  *(void *)(a1 + 296) = v21;
  *(void *)(a1 + 304) = v22;
  *(unsigned char *)(a1 + 312) = v23;
  uint64_t v24 = *(void *)(a2 + 320);
  uint64_t v25 = *(void *)(a2 + 328);
  char v26 = *(unsigned char *)(a2 + 336);
  sub_24988D770(v24, v25, v26);
  *(void *)(a1 + 320) = v24;
  *(void *)(a1 + 328) = v25;
  *(unsigned char *)(a1 + 336) = v26;
  uint64_t v27 = *(void *)(a2 + 344);
  uint64_t v28 = *(void *)(a2 + 352);
  char v29 = *(unsigned char *)(a2 + 360);
  sub_24988D770(v27, v28, v29);
  *(void *)(a1 + 344) = v27;
  *(void *)(a1 + 352) = v28;
  *(unsigned char *)(a1 + 360) = v29;
  uint64_t v30 = *(void *)(a2 + 368);
  uint64_t v31 = *(void *)(a2 + 376);
  char v32 = *(unsigned char *)(a2 + 384);
  sub_24988D770(v30, v31, v32);
  *(void *)(a1 + 368) = v30;
  *(void *)(a1 + 376) = v31;
  *(unsigned char *)(a1 + 384) = v32;
  uint64_t v33 = *(void *)(a2 + 392);
  uint64_t v34 = *(void *)(a2 + 400);
  char v35 = *(unsigned char *)(a2 + 408);
  sub_24988D770(v33, v34, v35);
  *(void *)(a1 + 392) = v33;
  *(void *)(a1 + 400) = v34;
  *(unsigned char *)(a1 + 408) = v35;
  uint64_t v36 = *(void *)(a2 + 416);
  uint64_t v37 = *(void *)(a2 + 424);
  char v38 = *(unsigned char *)(a2 + 432);
  sub_24988D770(v36, v37, v38);
  *(void *)(a1 + 416) = v36;
  *(void *)(a1 + 424) = v37;
  *(unsigned char *)(a1 + 432) = v38;
  uint64_t v39 = *(void *)(a2 + 440);
  uint64_t v40 = *(void *)(a2 + 448);
  char v41 = *(unsigned char *)(a2 + 456);
  sub_24988D770(v39, v40, v41);
  *(void *)(a1 + 440) = v39;
  *(void *)(a1 + 448) = v40;
  *(unsigned char *)(a1 + 456) = v41;
  uint64_t v42 = *(void *)(a2 + 464);
  uint64_t v43 = *(void *)(a2 + 472);
  char v44 = *(unsigned char *)(a2 + 480);
  sub_24988D770(v42, v43, v44);
  *(void *)(a1 + 464) = v42;
  *(void *)(a1 + 472) = v43;
  *(unsigned char *)(a1 + 480) = v44;
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  unsigned int v4 = (void *)(a1 + 8);
  uint64_t v5 = (const void *)(a2 + 8);
  uint64_t v6 = *(void **)(a1 + 32);
  uint64_t v7 = *(void *)(a2 + 32);
  if (v6)
  {
    if (v7)
    {
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      uint64_t v8 = *(void **)(a2 + 32);
      *(void *)(a1 + 32) = v8;
      id v9 = v8;

      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 96);
      uint64_t v11 = *(void *)(a2 + 104);
      char v12 = *(unsigned char *)(a2 + 112);
      sub_24988D770(v10, v11, v12);
      uint64_t v13 = *(void *)(a1 + 96);
      uint64_t v14 = *(void *)(a1 + 104);
      *(void *)(a1 + 96) = v10;
      *(void *)(a1 + 104) = v11;
      char v15 = *(unsigned char *)(a1 + 112);
      *(unsigned char *)(a1 + 112) = v12;
      sub_24988D788(v13, v14, v15);
      uint64_t v16 = *(void *)(a2 + 120);
      uint64_t v17 = *(void *)(a2 + 128);
      char v18 = *(unsigned char *)(a2 + 136);
      sub_24988D770(v16, v17, v18);
      uint64_t v19 = *(void *)(a1 + 120);
      uint64_t v20 = *(void *)(a1 + 128);
      *(void *)(a1 + 120) = v16;
      *(void *)(a1 + 128) = v17;
      char v21 = *(unsigned char *)(a1 + 136);
      *(unsigned char *)(a1 + 136) = v18;
      sub_24988D788(v19, v20, v21);
      uint64_t v22 = *(void *)(a2 + 144);
      uint64_t v23 = *(void *)(a2 + 152);
      char v24 = *(unsigned char *)(a2 + 160);
      sub_24988D770(v22, v23, v24);
      uint64_t v25 = *(void *)(a1 + 144);
      uint64_t v26 = *(void *)(a1 + 152);
      *(void *)(a1 + 144) = v22;
      *(void *)(a1 + 152) = v23;
      char v27 = *(unsigned char *)(a1 + 160);
      *(unsigned char *)(a1 + 160) = v24;
      sub_24988D788(v25, v26, v27);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v28 = (_OWORD *)(a1 + 208);
      char v29 = (long long *)(a2 + 208);
      uint64_t v30 = *(void **)(a1 + 224);
      uint64_t v31 = *(void *)(a2 + 224);
      if (v30)
      {
        if (v31)
        {
          *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
          *(void *)(a1 + 216) = *(void *)(a2 + 216);
          char v32 = *(void **)(a2 + 224);
          *(void *)(a1 + 224) = v32;
          id v33 = v32;

          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
          *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
          *(void *)(a1 + 248) = *(void *)(a2 + 248);
          *(void *)(a1 + 256) = *(void *)(a2 + 256);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_24989E520(a1 + 208);
          long long v51 = *(_OWORD *)(a2 + 224);
          long long v50 = *(_OWORD *)(a2 + 240);
          long long v52 = *v29;
          *(void *)(a1 + 256) = *(void *)(a2 + 256);
          *(_OWORD *)(a1 + 224) = v51;
          *(_OWORD *)(a1 + 240) = v50;
          *uint64_t v28 = v52;
        }
      }
      else if (v31)
      {
        *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
        *(void *)(a1 + 216) = *(void *)(a2 + 216);
        uint64_t v48 = *(void **)(a2 + 224);
        *(void *)(a1 + 224) = v48;
        *(void *)(a1 + 232) = *(void *)(a2 + 232);
        *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
        *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
        *(void *)(a1 + 248) = *(void *)(a2 + 248);
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        id v49 = v48;
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v57 = *v29;
        long long v58 = *(_OWORD *)(a2 + 224);
        long long v59 = *(_OWORD *)(a2 + 240);
        *(void *)(a1 + 256) = *(void *)(a2 + 256);
        *(_OWORD *)(a1 + 224) = v58;
        *(_OWORD *)(a1 + 240) = v59;
        *uint64_t v28 = v57;
      }
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
      *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
      *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
      int v60 = *(_DWORD *)(a2 + 284);
      *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
      *(_DWORD *)(a1 + 284) = v60;
      *(unsigned char *)(a1 + 289) = *(unsigned char *)(a2 + 289);
      goto LABEL_18;
    }
    sub_24989E574(a1 + 8);
LABEL_10:
    memcpy(v4, v5, 0x11AuLL);
    goto LABEL_18;
  }
  if (!v7) {
    goto LABEL_10;
  }
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v34 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v34;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v35 = *(void *)(a2 + 96);
  uint64_t v36 = *(void *)(a2 + 104);
  char v37 = *(unsigned char *)(a2 + 112);
  id v38 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988D770(v35, v36, v37);
  *(void *)(a1 + 96) = v35;
  *(void *)(a1 + 104) = v36;
  *(unsigned char *)(a1 + 112) = v37;
  uint64_t v39 = *(void *)(a2 + 120);
  uint64_t v40 = *(void *)(a2 + 128);
  char v41 = *(unsigned char *)(a2 + 136);
  sub_24988D770(v39, v40, v41);
  *(void *)(a1 + 120) = v39;
  *(void *)(a1 + 128) = v40;
  *(unsigned char *)(a1 + 136) = v41;
  uint64_t v42 = *(void *)(a2 + 144);
  uint64_t v43 = *(void *)(a2 + 152);
  char v44 = *(unsigned char *)(a2 + 160);
  sub_24988D770(v42, v43, v44);
  *(void *)(a1 + 144) = v42;
  *(void *)(a1 + 152) = v43;
  *(unsigned char *)(a1 + 160) = v44;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  uint64_t v45 = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v45)
  {
    *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    uint64_t v46 = *(void **)(a2 + 224);
    *(void *)(a1 + 224) = v46;
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
    *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    id v47 = v46;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v53 = *(_OWORD *)(a2 + 208);
    long long v54 = *(_OWORD *)(a2 + 224);
    long long v55 = *(_OWORD *)(a2 + 240);
    *(void *)(a1 + 256) = *(void *)(a2 + 256);
    *(_OWORD *)(a1 + 224) = v54;
    *(_OWORD *)(a1 + 240) = v55;
    *(_OWORD *)(a1 + 208) = v53;
  }
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
  int v56 = *(_DWORD *)(a2 + 284);
  *(unsigned char *)(a1 + 288) = *(unsigned char *)(a2 + 288);
  *(_DWORD *)(a1 + 284) = v56;
  *(unsigned char *)(a1 + 289) = *(unsigned char *)(a2 + 289);
  swift_bridgeObjectRetain();
LABEL_18:
  uint64_t v61 = *(void *)(a2 + 296);
  uint64_t v62 = *(void *)(a2 + 304);
  char v63 = *(unsigned char *)(a2 + 312);
  sub_24988D770(v61, v62, v63);
  uint64_t v64 = *(void *)(a1 + 296);
  uint64_t v65 = *(void *)(a1 + 304);
  *(void *)(a1 + 296) = v61;
  *(void *)(a1 + 304) = v62;
  char v66 = *(unsigned char *)(a1 + 312);
  *(unsigned char *)(a1 + 312) = v63;
  sub_24988D788(v64, v65, v66);
  uint64_t v67 = *(void *)(a2 + 320);
  uint64_t v68 = *(void *)(a2 + 328);
  char v69 = *(unsigned char *)(a2 + 336);
  sub_24988D770(v67, v68, v69);
  uint64_t v70 = *(void *)(a1 + 320);
  uint64_t v71 = *(void *)(a1 + 328);
  *(void *)(a1 + 320) = v67;
  *(void *)(a1 + 328) = v68;
  char v72 = *(unsigned char *)(a1 + 336);
  *(unsigned char *)(a1 + 336) = v69;
  sub_24988D788(v70, v71, v72);
  uint64_t v73 = *(void *)(a2 + 344);
  uint64_t v74 = *(void *)(a2 + 352);
  char v75 = *(unsigned char *)(a2 + 360);
  sub_24988D770(v73, v74, v75);
  uint64_t v76 = *(void *)(a1 + 344);
  uint64_t v77 = *(void *)(a1 + 352);
  *(void *)(a1 + 344) = v73;
  *(void *)(a1 + 352) = v74;
  char v78 = *(unsigned char *)(a1 + 360);
  *(unsigned char *)(a1 + 360) = v75;
  sub_24988D788(v76, v77, v78);
  uint64_t v79 = *(void *)(a2 + 368);
  uint64_t v80 = *(void *)(a2 + 376);
  char v81 = *(unsigned char *)(a2 + 384);
  sub_24988D770(v79, v80, v81);
  uint64_t v82 = *(void *)(a1 + 368);
  uint64_t v83 = *(void *)(a1 + 376);
  *(void *)(a1 + 368) = v79;
  *(void *)(a1 + 376) = v80;
  char v84 = *(unsigned char *)(a1 + 384);
  *(unsigned char *)(a1 + 384) = v81;
  sub_24988D788(v82, v83, v84);
  uint64_t v85 = *(void *)(a2 + 392);
  uint64_t v86 = *(void *)(a2 + 400);
  char v87 = *(unsigned char *)(a2 + 408);
  sub_24988D770(v85, v86, v87);
  uint64_t v88 = *(void *)(a1 + 392);
  uint64_t v89 = *(void *)(a1 + 400);
  *(void *)(a1 + 392) = v85;
  *(void *)(a1 + 400) = v86;
  char v90 = *(unsigned char *)(a1 + 408);
  *(unsigned char *)(a1 + 408) = v87;
  sub_24988D788(v88, v89, v90);
  uint64_t v91 = *(void *)(a2 + 416);
  uint64_t v92 = *(void *)(a2 + 424);
  char v93 = *(unsigned char *)(a2 + 432);
  sub_24988D770(v91, v92, v93);
  uint64_t v94 = *(void *)(a1 + 416);
  uint64_t v95 = *(void *)(a1 + 424);
  *(void *)(a1 + 416) = v91;
  *(void *)(a1 + 424) = v92;
  char v96 = *(unsigned char *)(a1 + 432);
  *(unsigned char *)(a1 + 432) = v93;
  sub_24988D788(v94, v95, v96);
  uint64_t v97 = *(void *)(a2 + 440);
  uint64_t v98 = *(void *)(a2 + 448);
  char v99 = *(unsigned char *)(a2 + 456);
  sub_24988D770(v97, v98, v99);
  uint64_t v100 = *(void *)(a1 + 440);
  uint64_t v101 = *(void *)(a1 + 448);
  *(void *)(a1 + 440) = v97;
  *(void *)(a1 + 448) = v98;
  char v102 = *(unsigned char *)(a1 + 456);
  *(unsigned char *)(a1 + 456) = v99;
  sub_24988D788(v100, v101, v102);
  uint64_t v103 = *(void *)(a2 + 464);
  uint64_t v104 = *(void *)(a2 + 472);
  char v105 = *(unsigned char *)(a2 + 480);
  sub_24988D770(v103, v104, v105);
  uint64_t v106 = *(void *)(a1 + 464);
  uint64_t v107 = *(void *)(a1 + 472);
  *(void *)(a1 + 464) = v103;
  *(void *)(a1 + 472) = v104;
  char v108 = *(unsigned char *)(a1 + 480);
  *(unsigned char *)(a1 + 480) = v105;
  sub_24988D788(v106, v107, v108);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24989E520(uint64_t a1)
{
  return a1;
}

uint64_t sub_24989E574(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy496_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F0uLL);
}

uint64_t _s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationVwta(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (_OWORD *)(a1 + 296);
  uint64_t v5 = (_OWORD *)(a2 + 296);
  *(_DWORD *)a1 = *(_DWORD *)a2;
  uint64_t v6 = (void *)(a1 + 8);
  uint64_t v7 = (const void *)(a2 + 8);
  uint64_t v8 = *(void **)(a1 + 32);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 32);
    if (v9)
    {
      *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
      *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = v9;

      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
      uint64_t v10 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v10;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRelease();
      char v11 = *(unsigned char *)(a2 + 112);
      uint64_t v12 = *(void *)(a1 + 96);
      uint64_t v13 = *(void *)(a1 + 104);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      char v14 = *(unsigned char *)(a1 + 112);
      *(unsigned char *)(a1 + 112) = v11;
      sub_24988D788(v12, v13, v14);
      char v15 = *(unsigned char *)(a2 + 136);
      uint64_t v16 = *(void *)(a1 + 120);
      uint64_t v17 = *(void *)(a1 + 128);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      char v18 = *(unsigned char *)(a1 + 136);
      *(unsigned char *)(a1 + 136) = v15;
      sub_24988D788(v16, v17, v18);
      char v19 = *(unsigned char *)(a2 + 160);
      uint64_t v20 = *(void *)(a1 + 144);
      uint64_t v21 = *(void *)(a1 + 152);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      char v22 = *(unsigned char *)(a1 + 160);
      *(unsigned char *)(a1 + 160) = v19;
      sub_24988D788(v20, v21, v22);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      uint64_t v23 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v23;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRelease();
      char v24 = *(void **)(a1 + 224);
      if (v24)
      {
        uint64_t v25 = *(void *)(a2 + 224);
        if (v25)
        {
          *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
          *(void *)(a1 + 216) = *(void *)(a2 + 216);
          *(void *)(a1 + 224) = v25;

          *(void *)(a1 + 232) = *(void *)(a2 + 232);
          *(unsigned char *)(a1 + 240) = *(unsigned char *)(a2 + 240);
          *(unsigned char *)(a1 + 241) = *(unsigned char *)(a2 + 241);
          uint64_t v26 = *(void *)(a2 + 256);
          *(void *)(a1 + 248) = *(void *)(a2 + 248);
          *(void *)(a1 + 256) = v26;
          swift_bridgeObjectRelease();
LABEL_10:
          *(void *)(a1 + 264) = *(void *)(a2 + 264);
          swift_bridgeObjectRelease();
          *(void *)(a1 + 272) = *(void *)(a2 + 272);
          *(_DWORD *)(a1 + 280) = *(_DWORD *)(a2 + 280);
          *(_DWORD *)(a1 + 284) = *(_DWORD *)(a2 + 284);
          *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
          goto LABEL_11;
        }
        sub_24989E520(a1 + 208);
      }
      long long v27 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = v27;
      *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      goto LABEL_10;
    }
    sub_24989E574(a1 + 8);
  }
  memcpy(v6, v7, 0x11AuLL);
LABEL_11:
  char v28 = *(unsigned char *)(a2 + 312);
  uint64_t v29 = *(void *)(a1 + 296);
  uint64_t v30 = *(void *)(a1 + 304);
  *unsigned int v4 = *v5;
  char v31 = *(unsigned char *)(a1 + 312);
  *(unsigned char *)(a1 + 312) = v28;
  sub_24988D788(v29, v30, v31);
  char v32 = *(unsigned char *)(a2 + 336);
  uint64_t v33 = *(void *)(a1 + 320);
  uint64_t v34 = *(void *)(a1 + 328);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  char v35 = *(unsigned char *)(a1 + 336);
  *(unsigned char *)(a1 + 336) = v32;
  sub_24988D788(v33, v34, v35);
  char v36 = *(unsigned char *)(a2 + 360);
  uint64_t v37 = *(void *)(a1 + 344);
  uint64_t v38 = *(void *)(a1 + 352);
  v4[3] = v5[3];
  char v39 = *(unsigned char *)(a1 + 360);
  *(unsigned char *)(a1 + 360) = v36;
  sub_24988D788(v37, v38, v39);
  char v40 = *(unsigned char *)(a2 + 384);
  uint64_t v41 = *(void *)(a1 + 368);
  uint64_t v42 = *(void *)(a1 + 376);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  char v43 = *(unsigned char *)(a1 + 384);
  *(unsigned char *)(a1 + 384) = v40;
  sub_24988D788(v41, v42, v43);
  char v44 = *(unsigned char *)(a2 + 408);
  uint64_t v45 = *(void *)(a1 + 392);
  uint64_t v46 = *(void *)(a1 + 400);
  v4[6] = v5[6];
  char v47 = *(unsigned char *)(a1 + 408);
  *(unsigned char *)(a1 + 408) = v44;
  sub_24988D788(v45, v46, v47);
  char v48 = *(unsigned char *)(a2 + 432);
  uint64_t v49 = *(void *)(a1 + 416);
  uint64_t v50 = *(void *)(a1 + 424);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  char v51 = *(unsigned char *)(a1 + 432);
  *(unsigned char *)(a1 + 432) = v48;
  sub_24988D788(v49, v50, v51);
  char v52 = *(unsigned char *)(a2 + 456);
  uint64_t v53 = *(void *)(a1 + 440);
  uint64_t v54 = *(void *)(a1 + 448);
  v4[9] = v5[9];
  char v55 = *(unsigned char *)(a1 + 456);
  *(unsigned char *)(a1 + 456) = v52;
  sub_24988D788(v53, v54, v55);
  char v56 = *(unsigned char *)(a2 + 480);
  uint64_t v57 = *(void *)(a1 + 464);
  uint64_t v58 = *(void *)(a1 + 472);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  char v59 = *(unsigned char *)(a1 + 480);
  *(unsigned char *)(a1 + 480) = v56;
  sub_24988D788(v57, v58, v59);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 496)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 488);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 488) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 496) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 488) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 496) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.ChargeFuelLevelGaugeConfiguration;
}

uint64_t _s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24989EB48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O33ChargeFuelLevelGaugeConfigurationV10CodingKeysON;
}

unsigned char *storeEnumTagSinglePayload for RemainingRangeDataIdentifiers.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24989EC4CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RemainingRangeDataIdentifiers.CodingKeys()
{
  return &type metadata for RemainingRangeDataIdentifiers.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ChargeFuelDataIdentifiers.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24989ED50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChargeFuelDataIdentifiers.CodingKeys()
{
  return &type metadata for ChargeFuelDataIdentifiers.CodingKeys;
}

unint64_t sub_24989ED8C()
{
  unint64_t result = qword_2696DDF88;
  if (!qword_2696DDF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF88);
  }
  return result;
}

unint64_t sub_24989EDE4()
{
  unint64_t result = qword_2696DDF90;
  if (!qword_2696DDF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF90);
  }
  return result;
}

unint64_t sub_24989EE3C()
{
  unint64_t result = qword_2696DDF98;
  if (!qword_2696DDF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDF98);
  }
  return result;
}

unint64_t sub_24989EE94()
{
  unint64_t result = qword_2696DDFA0;
  if (!qword_2696DDFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDFA0);
  }
  return result;
}

unint64_t sub_24989EEEC()
{
  unint64_t result = qword_2696DDFA8;
  if (!qword_2696DDFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDFA8);
  }
  return result;
}

unint64_t sub_24989EF44()
{
  unint64_t result = qword_2696DDFB0;
  if (!qword_2696DDFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDFB0);
  }
  return result;
}

unint64_t sub_24989EF9C()
{
  unint64_t result = qword_2696DDFB8;
  if (!qword_2696DDFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDFB8);
  }
  return result;
}

unint64_t sub_24989EFF4()
{
  unint64_t result = qword_2696DDFC0;
  if (!qword_2696DDFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDFC0);
  }
  return result;
}

unint64_t sub_24989F04C()
{
  unint64_t result = qword_2696DDFC8;
  if (!qword_2696DDFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDFC8);
  }
  return result;
}

uint64_t sub_24989F0A0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000249B144E0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000249B14500 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000249B14520 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B14540)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24989F23C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B14560 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B14580)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24989F32C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000249B144E0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000249B14500 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000249B14520 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B14540 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000249B145A0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xEF4449726F6C6F43 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C6F436B63617274 && a2 == 0xEC0000004449726FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C6576654C776F6CLL && a2 == 0xEF4449726F6C6F43 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000249B145C0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000249B145E0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000249B14600 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000249B14620 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000249B14650 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000249B14670)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 13;
    }
    else {
      return 14;
    }
  }
}

uint64_t sub_24989F898(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 296);
  uint64_t v20 = *(void *)(a1 + 288);
  uint64_t v3 = *(void *)(a1 + 304);
  unsigned int v4 = *(void **)(a1 + 312);
  uint64_t v5 = *(void *)(a1 + 320);
  uint64_t v6 = *(void *)(a1 + 328);
  uint64_t v7 = *(void *)(a1 + 336);
  uint64_t v8 = *(void *)(a1 + 344);
  long long v18 = *(_OWORD *)(a1 + 368);
  long long v19 = *(_OWORD *)(a1 + 352);
  long long v16 = *(_OWORD *)(a1 + 400);
  long long v17 = *(_OWORD *)(a1 + 384);
  long long v14 = *(_OWORD *)(a1 + 432);
  long long v15 = *(_OWORD *)(a1 + 416);
  long long v12 = *(_OWORD *)(a1 + 464);
  long long v13 = *(_OWORD *)(a1 + 448);
  long long v10 = *(_OWORD *)(a1 + 496);
  long long v11 = *(_OWORD *)(a1 + 480);
  sub_24989CDE8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(_OWORD *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216));
  sub_24989CDE8(v20, v2, v3, v4, v5, v6, v7, v8, v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, SBYTE8(v17), v16, *((uint64_t *)&v16 + 1), v15, *((uint64_t *)&v15 + 1), v14,
    SBYTE8(v14),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v10,
    *((void **)&v10 + 1));
  return a1;
}

uint64_t sub_24989FA44(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v9 = *(void *)(a1 + 120);
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v11 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  uint64_t v14 = *(void *)(a1 + 208);
  uint64_t v15 = *(void *)(a1 + 200);
  long long v13 = *(void **)(a1 + 216);
  char v5 = *(unsigned char *)(a1 + 104);
  char v6 = *(unsigned char *)(a1 + 128);
  char v7 = *(unsigned char *)(a1 + 152);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_24988D788(v3, v4, v5);
  sub_24988D788(v10, v9, v6);
  sub_24988D788(v12, v11, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24989CF3C(v15, v14, v13);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_24989FB78(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
}

void __swiftcall AvocadoWidget.init(id:info:)(CarPlayAssetUI::AvocadoWidget *__return_ptr retstr, Swift::String id, CarPlayAssetUI::AvocadoWidgetInfo *info)
{
  Swift::String kind = info->kind;
  Swift::String extensionBundleIdentifier = info->extensionBundleIdentifier;
  uint64_t countAndFlagsBits = info->containerBundleIdentifier._countAndFlagsBits;
  object = info->containerBundleIdentifier._object;
  Swift::Bool keepAlive = info->keepAlive;
  retstr->id = id;
  retstr->info.Swift::String kind = kind;
  retstr->info.Swift::String extensionBundleIdentifier = extensionBundleIdentifier;
  retstr->info.containerBundleIdentifier._uint64_t countAndFlagsBits = countAndFlagsBits;
  retstr->info.containerBundleIdentifier._object = object;
  retstr->info.Swift::Bool keepAlive = keepAlive;
  retstr->info.carplayIdentifier = info->carplayIdentifier;
}

uint64_t AppWidgetInfo.carplayIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

CarPlayAssetUI::AppWidgetInfo __swiftcall AppWidgetInfo.init(applicationBundleIdentifier:carplayIdentifier:)(Swift::String applicationBundleIdentifier, Swift::String_optional carplayIdentifier)
{
  v2->value = applicationBundleIdentifier;
  v2[1] = carplayIdentifier;
  result.carplayIdentifier = carplayIdentifier;
  result.applicationBundleIdentifier = applicationBundleIdentifier;
  return result;
}

uint64_t AppWidgetInfo.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  if (!v1) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_24989FCAC()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0xD00000000000001BLL;
  }
}

uint64_t sub_24989FCF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498A7478(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24989FD18(uint64_t a1)
{
  unint64_t v2 = sub_2498A4330();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24989FD54(uint64_t a1)
{
  unint64_t v2 = sub_2498A4330();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AppWidgetInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDFD0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498A4330();
  sub_249AEE468();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_249AEDEB8();
  if (!v8)
  {
    char v11 = 1;
    sub_249AEDE58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AppWidgetInfo.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_249AEE338();
  sub_249AECF78();
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t AppWidgetInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDFE0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498A4330();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_249AEDDB8();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_249AEDD58();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2498A01A8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_249AEE338();
  sub_249AECF78();
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t sub_2498A0244()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_249AECF78();
  if (!v1) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498A02D0()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_249AEE338();
  sub_249AECF78();
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t sub_2498A036C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AppWidgetInfo.init(from:)(a1, a2);
}

uint64_t sub_2498A0384(void *a1)
{
  return AppWidgetInfo.encode(to:)(a1);
}

uint64_t AvocadoWidgetInfo.kind.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvocadoWidgetInfo.extensionBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvocadoWidgetInfo.containerBundleIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvocadoWidgetInfo.keepAlive.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t AvocadoWidgetInfo.carplayIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall AvocadoWidgetInfo.init(kind:extensionBundleIdentifier:containerBundleIdentifier:keepAlive:carplayIdentifier:)(CarPlayAssetUI::AvocadoWidgetInfo *__return_ptr retstr, Swift::String kind, Swift::String extensionBundleIdentifier, Swift::String containerBundleIdentifier, Swift::Bool keepAlive, Swift::String_optional carplayIdentifier)
{
  retstr->Swift::String kind = kind;
  retstr->Swift::String extensionBundleIdentifier = extensionBundleIdentifier;
  retstr->containerBundleIdentifier = containerBundleIdentifier;
  retstr->Swift::Bool keepAlive = keepAlive;
  retstr->carplayIdentifier = carplayIdentifier;
}

uint64_t AvocadoWidgetInfo.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE358();
  if (!v1) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_2498A05B8(char a1)
{
  unint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000019;
      break;
    case 3:
      unint64_t result = 0x76696C417065656BLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2498A0664()
{
  return sub_2498A05B8(*v0);
}

uint64_t sub_2498A066C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498A7568(a1, a2);
  *a3 = result;
  return result;
}

void sub_2498A0694(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_2498A06A0(uint64_t a1)
{
  unint64_t v2 = sub_2498A4384();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498A06DC(uint64_t a1)
{
  unint64_t v2 = sub_2498A4384();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AvocadoWidgetInfo.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDFE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = v7;
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v14 = *(void *)(v1 + 40);
  uint64_t v15 = v8;
  int v13 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = *(void *)(v1 + 64);
  v12[0] = *(void *)(v1 + 56);
  v12[1] = v9;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498A4384();
  sub_249AEE468();
  char v23 = 0;
  uint64_t v10 = v18;
  sub_249AEDEB8();
  if (!v10)
  {
    char v22 = 1;
    sub_249AEDEB8();
    char v21 = 2;
    sub_249AEDEB8();
    char v20 = 3;
    sub_249AEDEC8();
    char v19 = 4;
    sub_249AEDE58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t AvocadoWidgetInfo.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t AvocadoWidgetInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDFF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498A4384();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  char v36 = 0;
  uint64_t v9 = sub_249AEDDB8();
  uint64_t v11 = v10;
  uint64_t v30 = v9;
  char v35 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_249AEDDB8();
  uint64_t v31 = v13;
  uint64_t v27 = v12;
  char v34 = 2;
  swift_bridgeObjectRetain();
  uint64_t v29 = 0;
  uint64_t v26 = sub_249AEDDB8();
  char v33 = 3;
  uint64_t v15 = v14;
  swift_bridgeObjectRetain();
  int v16 = sub_249AEDDC8();
  uint64_t v28 = v15;
  int v25 = v16;
  char v32 = 4;
  uint64_t v17 = sub_249AEDD58();
  uint64_t v20 = v19;
  LODWORD(v29) = v25 & 1;
  uint64_t v21 = v17;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  uint64_t v22 = v31;
  *(void *)a2 = v30;
  *(void *)(a2 + 8) = v11;
  uint64_t v23 = v28;
  *(void *)(a2 + 16) = v27;
  *(void *)(a2 + 24) = v22;
  *(void *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v23;
  *(unsigned char *)(a2 + 48) = v29;
  *(void *)(a2 + 56) = v21;
  *(void *)(a2 + 64) = v20;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2498A0D4C()
{
  return sub_249AEE388();
}

uint64_t sub_2498A0DB8()
{
  return sub_249AEE388();
}

uint64_t sub_2498A0E20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AvocadoWidgetInfo.init(from:)(a1, a2);
}

uint64_t sub_2498A0E38(void *a1)
{
  return AvocadoWidgetInfo.encode(to:)(a1);
}

uint64_t StreamWidgetInfo.name.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

CarPlayAssetUI::StreamWidgetInfo __swiftcall StreamWidgetInfo.init(name:)(CarPlayAssetUI::StreamWidgetInfo name)
{
  *uint64_t v1 = name;
  return name;
}

uint64_t StreamWidgetInfo.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t static StreamWidgetInfo.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_249AEE0D8();
  }
}

uint64_t sub_2498A0F10()
{
  return 1701667182;
}

uint64_t sub_2498A0F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2498A0FA8(uint64_t a1)
{
  unint64_t v2 = sub_2498A43D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498A0FE4(uint64_t a1)
{
  unint64_t v2 = sub_2498A43D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t StreamWidgetInfo.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE000);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498A43D8();
  sub_249AEE468();
  sub_249AEDEB8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t StreamWidgetInfo.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t StreamWidgetInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE010);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498A43D8();
  sub_249AEE428();
  if (!v2)
  {
    uint64_t v9 = sub_249AEDDB8();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498A1314()
{
  return sub_249AEE388();
}

uint64_t sub_2498A1360()
{
  return sub_249AECF78();
}

uint64_t sub_2498A1368()
{
  return sub_249AEE388();
}

uint64_t sub_2498A13B0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_249AEE0D8();
  }
}

uint64_t sub_2498A13E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return StreamWidgetInfo.init(from:)(a1, a2);
}

uint64_t sub_2498A13F8(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE000);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498A43D8();
  sub_249AEE468();
  sub_249AEDEB8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t WidgetInfo.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  switch(*(void *)(v0 + 48) >> 62)
  {
    case 1:
      sub_249AEE348();
      uint64_t result = AvocadoWidgetInfo.hash(into:)();
      break;
    case 2:
      sub_249AEE348();
      uint64_t result = sub_249AECF78();
      break;
    case 3:
      uint64_t result = sub_249AEE348();
      break;
    default:
      sub_249AEE348();
      sub_249AECF78();
      if (v1)
      {
        sub_249AEE358();
        swift_bridgeObjectRetain();
        sub_249AECF78();
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t result = sub_249AEE358();
      }
      break;
  }
  return result;
}

uint64_t sub_2498A16DC(uint64_t a1)
{
  unint64_t v2 = sub_2498A4624();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498A1718(uint64_t a1)
{
  unint64_t v2 = sub_2498A4624();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498A1754(uint64_t a1)
{
  unint64_t v2 = sub_2498A457C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498A1790(uint64_t a1)
{
  unint64_t v2 = sub_2498A457C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498A17CC()
{
  uint64_t result = 7368801;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6F6461636F7661;
      break;
    case 2:
      uint64_t result = 0x6D6165727473;
      break;
    case 3:
      uint64_t result = 0x7974706D65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498A184C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498A7768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498A1874(uint64_t a1)
{
  unint64_t v2 = sub_2498A442C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498A18B0(uint64_t a1)
{
  unint64_t v2 = sub_2498A442C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498A18EC(uint64_t a1)
{
  unint64_t v2 = sub_2498A4480();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498A1928(uint64_t a1)
{
  unint64_t v2 = sub_2498A4480();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498A1964(uint64_t a1)
{
  unint64_t v2 = sub_2498A44D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498A19A0(uint64_t a1)
{
  unint64_t v2 = sub_2498A44D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t WidgetInfo.encode(to:)(void *a1)
{
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE018);
  uint64_t v35 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  char v33 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE020);
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  char v32 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE028);
  uint64_t v30 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE030);
  uint64_t v29 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE038);
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v1[1];
  uint64_t v40 = *v1;
  uint64_t v41 = v13;
  uint64_t v14 = v1[2];
  uint64_t v38 = v1[3];
  uint64_t v39 = v14;
  uint64_t v28 = v1[4];
  unint64_t v15 = v1[6];
  uint64_t v27 = v1[5];
  uint64_t v26 = v1[7];
  uint64_t v25 = v1[8];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498A442C();
  sub_249AEE468();
  switch(v15 >> 62)
  {
    case 1uLL:
      LOBYTE(v44) = 1;
      sub_2498A457C();
      uint64_t v22 = v43;
      sub_249AEDE48();
      uint64_t v44 = v40;
      uint64_t v45 = v41;
      uint64_t v46 = v39;
      uint64_t v47 = v38;
      uint64_t v48 = v28;
      uint64_t v49 = v27;
      char v50 = v15 & 1;
      uint64_t v51 = v26;
      uint64_t v52 = v25;
      sub_2498A45D0();
      uint64_t v23 = v31;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v23);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v12, v22);
      break;
    case 2uLL:
      LOBYTE(v44) = 2;
      sub_2498A44D4();
      uint64_t v17 = v32;
      uint64_t v16 = v43;
      sub_249AEDE48();
      uint64_t v44 = v40;
      uint64_t v45 = v41;
      sub_2498A4528();
      uint64_t v18 = v36;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v17, v18);
      goto LABEL_4;
    case 3uLL:
      LOBYTE(v44) = 3;
      sub_2498A4480();
      uint64_t v20 = v33;
      uint64_t v21 = v43;
      sub_249AEDE48();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v37);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v12, v21);
      break;
    default:
      LOBYTE(v44) = 0;
      sub_2498A4624();
      uint64_t v16 = v43;
      sub_249AEDE48();
      uint64_t v44 = v40;
      uint64_t v45 = v41;
      uint64_t v46 = v39;
      uint64_t v47 = v38;
      sub_2498A4678();
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
LABEL_4:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v12, v16);
      break;
  }
  return result;
}

uint64_t WidgetInfo.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 48);
  sub_249AEE338();
  switch(v2 >> 62)
  {
    case 1uLL:
      sub_249AEE348();
      AvocadoWidgetInfo.hash(into:)();
      break;
    case 2uLL:
      sub_249AEE348();
      sub_249AECF78();
      break;
    case 3uLL:
      sub_249AEE348();
      break;
    default:
      sub_249AEE348();
      sub_249AECF78();
      sub_249AEE358();
      if (v1)
      {
        swift_bridgeObjectRetain();
        sub_249AECF78();
        swift_bridgeObjectRelease();
      }
      break;
  }
  return sub_249AEE388();
}

uint64_t WidgetInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE080);
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v51 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE088);
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  char v50 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE090);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v45 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE098);
  uint64_t v43 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0A0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1[3];
  uint64_t v53 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v16);
  sub_2498A442C();
  uint64_t v17 = v62;
  sub_249AEE428();
  if (v17) {
    goto LABEL_6;
  }
  uint64_t v42 = v11;
  uint64_t v41 = v9;
  uint64_t v19 = v50;
  uint64_t v18 = v51;
  uint64_t v62 = v13;
  uint64_t v20 = v52;
  uint64_t v21 = sub_249AEDE18();
  if (*(void *)(v21 + 16) != 1)
  {
    uint64_t v32 = sub_249AEDB08();
    swift_allocError();
    uint64_t v34 = v33;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    void *v34 = &type metadata for WidgetInfo;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v32 - 8) + 104))(v34, *MEMORY[0x263F8DCB0], v32);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v12);
LABEL_6:
    uint64_t v35 = (uint64_t)v53;
    return __swift_destroy_boxed_opaque_existential_2Tm(v35);
  }
  switch(*(unsigned char *)(v21 + 32))
  {
    case 1:
      LOBYTE(v54) = 1;
      sub_2498A457C();
      sub_249AEDD38();
      sub_2498A4720();
      uint64_t v37 = v45;
      sub_249AEDE08();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v12);
      uint64_t v27 = v54;
      uint64_t v28 = v55;
      uint64_t v30 = v56;
      uint64_t v31 = v57;
      uint64_t v24 = v58;
      uint64_t v25 = v59;
      long long v29 = v61;
      uint64_t v26 = v60 | 0x4000000000000000;
      break;
    case 2:
      LOBYTE(v54) = 2;
      sub_2498A44D4();
      sub_249AEDD38();
      sub_2498A46CC();
      uint64_t v38 = v46;
      sub_249AEDE08();
      uint64_t v39 = v62;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v19, v38);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v15, v12);
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v27 = v54;
      uint64_t v28 = v55;
      long long v29 = 0uLL;
      uint64_t v26 = 0x8000000000000000;
      break;
    case 3:
      LOBYTE(v54) = 3;
      sub_2498A4480();
      sub_249AEDD38();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v48);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v12);
      uint64_t v27 = 0;
      uint64_t v28 = 0;
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      long long v29 = 0uLL;
      uint64_t v26 = 0xC000000000000000;
      break;
    default:
      LOBYTE(v54) = 0;
      sub_2498A4624();
      uint64_t v22 = v42;
      sub_249AEDD38();
      sub_2498A4774();
      uint64_t v23 = v41;
      sub_249AEDE08();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v22, v23);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v15, v12);
      uint64_t v24 = 0;
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = v54;
      uint64_t v28 = v55;
      long long v29 = 0uLL;
      uint64_t v30 = v56;
      uint64_t v31 = v57;
      break;
  }
  uint64_t v35 = (uint64_t)v53;
  *(void *)uint64_t v20 = v27;
  *(void *)(v20 + 8) = v28;
  *(void *)(v20 + 16) = v30;
  *(void *)(v20 + 24) = v31;
  *(void *)(v20 + 32) = v24;
  *(void *)(v20 + 40) = v25;
  *(void *)(v20 + 48) = v26;
  *(_OWORD *)(v20 + 56) = v29;
  return __swift_destroy_boxed_opaque_existential_2Tm(v35);
}

uint64_t sub_2498A2900()
{
  uint64_t v1 = *(void *)(v0 + 24);
  unint64_t v2 = *(void *)(v0 + 48);
  sub_249AEE338();
  switch(v2 >> 62)
  {
    case 1uLL:
      sub_249AEE348();
      AvocadoWidgetInfo.hash(into:)();
      break;
    case 2uLL:
      sub_249AEE348();
      sub_249AECF78();
      break;
    case 3uLL:
      sub_249AEE348();
      break;
    default:
      sub_249AEE348();
      sub_249AECF78();
      sub_249AEE358();
      if (v1)
      {
        swift_bridgeObjectRetain();
        sub_249AECF78();
        swift_bridgeObjectRelease();
      }
      break;
  }
  return sub_249AEE388();
}

uint64_t sub_2498A2A5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return WidgetInfo.init(from:)(a1, a2);
}

uint64_t sub_2498A2A74(void *a1)
{
  return WidgetInfo.encode(to:)(a1);
}

uint64_t WidgetInfo.appWidget.getter@<X0>(void *a1@<X8>)
{
  if (v1[6] >> 62)
  {
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v4 = v1[2];
    uint64_t v3 = v1[3];
    uint64_t v7 = v1;
    uint64_t v5 = *v1;
    uint64_t v6 = v7[1];
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a1 = v5;
  a1[1] = v6;
  a1[2] = v4;
  a1[3] = v3;
  return result;
}

uint64_t WidgetInfo.avocadoWidget.getter@<X0>(void *a1@<X8>)
{
  if (v1[6] >> 62 == 1)
  {
    uint64_t v4 = v1[7];
    uint64_t v3 = v1[8];
    uint64_t v6 = v1[4];
    uint64_t v5 = v1[5];
    uint64_t v8 = v1[2];
    uint64_t v7 = v1[3];
    uint64_t v9 = v1[6] & 1;
    uint64_t v12 = v1;
    uint64_t v10 = *v1;
    uint64_t v11 = v12[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    uint64_t v9 = 0;
    uint64_t v4 = 0;
    uint64_t v3 = 0;
  }
  *a1 = v10;
  a1[1] = v11;
  a1[2] = v8;
  a1[3] = v7;
  a1[4] = v6;
  a1[5] = v5;
  a1[6] = v9;
  a1[7] = v4;
  a1[8] = v3;
  return result;
}

uint64_t WidgetInfo.streamWidget.getter@<X0>(void *a1@<X8>)
{
  if ((unint64_t)v1[6] >> 62 == 2)
  {
    uint64_t v3 = *v1;
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t result = 0;
  }
  *a1 = v3;
  a1[1] = result;
  return result;
}

uint64_t WidgetInfo.instrumentKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = v1[8];
  switch(v9 >> 62)
  {
    case 1uLL:
      uint64_t v18 = *v1;
      uint64_t v19 = v2;
      uint64_t v20 = v5;
      uint64_t v21 = v4;
      uint64_t v22 = v7;
      uint64_t v23 = v6;
      char v24 = v9 & 1;
      uint64_t v25 = v8;
      uint64_t v26 = v10;
      sub_2498A4A50(&v18);
      sub_2498A4990((uint64_t)&v18, (uint64_t)v27);
      nullsub_1(v27);
      sub_2498A4820((uint64_t)v27, a1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_7;
    case 2uLL:
      uint64_t v15 = v1[5];
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0C8);
      uint64_t v16 = a1;
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_249AF0A70;
      swift_beginAccess();
      LOBYTE(v17[0]) = byte_2696DE830;
      HIDWORD(v17[0]) = dword_2696DE834;
      v17[1] = 1056964608;
      v17[2] = 0x3FB999999999999ALL;
      v17[3] = 0;
      v17[4] = 0;
      v17[5] = 0x3FF0000000000000;
      v17[6] = 1056964608;
      v17[7] = 0x3FB999999999999ALL;
      v17[8] = 0;
      v17[9] = 0;
      v17[10] = 0x3FF0000000000000;
      sub_2498A4888(v17);
      sub_249890C54((uint64_t)v17, v12 + 32);
      sub_2498A48A4(v3, v2, v5, v4, v7, v15, v9);
      VisibilityConfiguration.init(arrayLiteral:)((void *)v12, v27);
      uint64_t v18 = v3;
      uint64_t v19 = v2;
      uint64_t v20 = v27[0];
      sub_2498A492C(&v18);
      sub_2498A4990((uint64_t)&v18, (uint64_t)v27);
      nullsub_1(v27);
      uint64_t v13 = v16;
      goto LABEL_5;
    case 3uLL:
      sub_2498A47C8((uint64_t)v27);
      uint64_t v13 = a1;
LABEL_5:
      uint64_t result = sub_2498A4820((uint64_t)v27, v13);
      break;
    default:
      uint64_t v18 = *v1;
      uint64_t v19 = v2;
      uint64_t v20 = v5;
      uint64_t v21 = v4;
      sub_2498A49EC(&v18);
      sub_2498A4990((uint64_t)&v18, (uint64_t)v27);
      nullsub_1(v27);
      sub_2498A4820((uint64_t)v27, a1);
      swift_bridgeObjectRetain();
LABEL_7:
      uint64_t result = swift_bridgeObjectRetain();
      break;
  }
  return result;
}

uint64_t WidgetInfo.carplayIdentifier.getter()
{
  uint64_t v1 = v0[6] >> 62;
  if (v1 == 1)
  {
    uint64_t v2 = v0 + 7;
  }
  else
  {
    if (v1) {
      return 0;
    }
    uint64_t v2 = v0 + 2;
  }
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t AppWidget.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AppWidget.info.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v3 = v1[5];
  *a1 = v1[2];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

void __swiftcall AppWidget.init(id:info:)(CarPlayAssetUI::AppWidget *__return_ptr retstr, Swift::String id, CarPlayAssetUI::AppWidgetInfo info)
{
  uint64_t v3 = *(void *)info.applicationBundleIdentifier._countAndFlagsBits;
  uint64_t v4 = *(void **)(info.applicationBundleIdentifier._countAndFlagsBits + 8);
  retstr->id = id;
  retstr->info.applicationBundleIdentifier._uint64_t countAndFlagsBits = v3;
  retstr->info.applicationBundleIdentifier._object = v4;
  retstr->info.carplayIdentifier = *(Swift::String_optional *)(info.applicationBundleIdentifier._countAndFlagsBits + 16);
}

uint64_t AppWidget.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  if (v1)
  {
    sub_249AEE358();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_249AEE358();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t AppWidget.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_249AEE338();
  sub_249AECF78();
  sub_249AECF78();
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t sub_2498A3114()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_249AECF78();
  sub_249AECF78();
  if (!v1) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498A31C0()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_249AEE338();
  sub_249AECF78();
  sub_249AECF78();
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t AvocadoWidget.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AvocadoWidget.info.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  char v7 = *(unsigned char *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t AvocadoWidget.hash(into:)()
{
  return AvocadoWidgetInfo.hash(into:)();
}

uint64_t AvocadoWidget.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_2498A3464()
{
  return sub_249AEE388();
}

uint64_t sub_2498A3504()
{
  return AvocadoWidgetInfo.hash(into:)();
}

uint64_t sub_2498A3584()
{
  return sub_249AEE388();
}

uint64_t StreamWidget.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StreamWidget.info.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

CarPlayAssetUI::StreamWidget __swiftcall StreamWidget.init(id:info:)(Swift::String id, CarPlayAssetUI::StreamWidgetInfo info)
{
  uint64_t v3 = *(void *)info.name._countAndFlagsBits;
  uint64_t v4 = *(void **)(info.name._countAndFlagsBits + 8);
  *uint64_t v2 = id;
  v2[1]._uint64_t countAndFlagsBits = v3;
  v2[1]._object = v4;
  result.info = info;
  result.id = id;
  return result;
}

uint64_t StreamWidget.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t StreamWidget.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_2498A3760()
{
  return sub_249AEE388();
}

uint64_t sub_2498A37C8()
{
  sub_249AECF78();

  return sub_249AECF78();
}

uint64_t sub_2498A3818()
{
  return sub_249AEE388();
}

uint64_t Widget.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Widget.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_2498A3910()
{
  return sub_249AEE388();
}

uint64_t sub_2498A396C()
{
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t Widget.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498A3A1C()
{
  return sub_249AEE388();
}

uint64_t Widget.info.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  unint64_t v6 = v1[8];
  if (v6 >> 62)
  {
    if (v6 >> 62 == 1)
    {
      uint64_t v8 = v1[9];
      uint64_t v7 = v1[10];
      uint64_t v9 = v1[6];
      uint64_t v10 = v1[7];
      *a1 = v2;
      a1[1] = v3;
      a1[2] = v4;
      a1[3] = v5;
      a1[4] = v9;
      a1[5] = v10;
      a1[6] = v6 & 1 | 0x4000000000000000;
      a1[7] = v8;
      a1[8] = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = v2;
      a1[1] = v3;
      *((_OWORD *)a1 + 1) = 0u;
      *((_OWORD *)a1 + 2) = 0u;
      a1[7] = 0;
      a1[8] = 0;
      a1[6] = 0x8000000000000000;
    }
  }
  else
  {
    *a1 = v2;
    a1[1] = v3;
    a1[2] = v4;
    a1[3] = v5;
    *((_OWORD *)a1 + 2) = 0u;
    *((_OWORD *)a1 + 3) = 0u;
    a1[8] = 0;
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t Widget.carplayIdentifier.getter()
{
  uint64_t v1 = v0[8] >> 62;
  if (v1)
  {
    if (v1 != 1) {
      return 0;
    }
    uint64_t v2 = v0 + 9;
  }
  else
  {
    uint64_t v2 = v0 + 4;
  }
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t _s14CarPlayAssetUI17AvocadoWidgetInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  int v11 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a2 + 64);
  uint64_t v19 = *(void *)(a1 + 64);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (v12 = sub_249AEE0D8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (v2 == v7 && v4 == v8 || (v14 = sub_249AEE0D8(), uint64_t result = 0, (v14 & 1) != 0))
    {
      if (v3 == v9 && v5 == v10)
      {
        if (v6 != v11) {
          return 0;
        }
LABEL_13:
        if (v19)
        {
          if (!v18 || (v17 != v16 || v19 != v18) && (sub_249AEE0D8() & 1) == 0) {
            return 0;
          }
        }
        else if (v18)
        {
          return 0;
        }
        return 1;
      }
      char v15 = sub_249AEE0D8();
      uint64_t result = 0;
      if ((v15 & 1) != 0 && ((v6 ^ v11) & 1) == 0) {
        goto LABEL_13;
      }
    }
  }
  return result;
}

uint64_t _s14CarPlayAssetUI10WidgetInfoO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  unint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v12 = *a2;
  uint64_t v11 = a2[1];
  uint64_t v14 = a2[2];
  uint64_t v13 = a2[3];
  uint64_t v16 = a2[4];
  uint64_t v15 = a2[5];
  unint64_t v18 = a2[6];
  uint64_t v17 = a2[7];
  uint64_t v19 = a2[8];
  v106[0] = *a1;
  v106[1] = v2;
  v106[2] = v5;
  v106[3] = v4;
  v106[4] = v7;
  v106[5] = v6;
  v106[6] = v8;
  v106[7] = v9;
  v106[8] = v10;
  v106[9] = v12;
  v106[10] = v11;
  v106[11] = v14;
  v106[12] = v13;
  v106[13] = v16;
  v106[14] = v15;
  v106[15] = v18;
  v106[16] = v17;
  v106[17] = v19;
  switch(v8 >> 62)
  {
    case 1uLL:
      if (v18 >> 62 != 1) {
        goto LABEL_20;
      }
      v102[0] = v3;
      v102[1] = v2;
      v102[2] = v5;
      v102[3] = v4;
      v102[4] = v7;
      v102[5] = v6;
      char v103 = v8 & 1;
      uint64_t v104 = v9;
      uint64_t v105 = v10;
      v98[0] = v12;
      v98[1] = v11;
      v98[2] = v14;
      v98[3] = v13;
      v98[4] = v16;
      v98[5] = v15;
      char v99 = v18 & 1;
      uint64_t v100 = v17;
      uint64_t v101 = v19;
      uint64_t v93 = v6;
      unint64_t v96 = v8;
      uint64_t v87 = v5;
      uint64_t v90 = v7;
      uint64_t v78 = v2;
      uint64_t v80 = v3;
      uint64_t v83 = v4;
      uint64_t v32 = v15;
      char v33 = _s14CarPlayAssetUI17AvocadoWidgetInfoV2eeoiySbAC_ACtFZ_0((uint64_t)v102, (uint64_t)v98);
      sub_2498A48A4(v12, v11, v14, v13, v16, v32, v18);
      uint64_t v34 = v78;
      uint64_t v35 = v80;
      uint64_t v36 = v83;
      uint64_t v37 = v87;
      uint64_t v38 = v90;
      uint64_t v39 = v93;
      unint64_t v40 = v96;
      goto LABEL_25;
    case 2uLL:
      if (v18 >> 62 != 2) {
        goto LABEL_20;
      }
      uint64_t v94 = v6;
      unint64_t v97 = v8;
      uint64_t v88 = v5;
      uint64_t v91 = v7;
      uint64_t v84 = v4;
      if (v3 == v12 && v2 == v11)
      {
        char v33 = 1;
        uint64_t v41 = v2;
        uint64_t v42 = v3;
      }
      else
      {
        uint64_t v41 = v2;
        uint64_t v81 = v3;
        uint64_t v62 = v15;
        char v63 = sub_249AEE0D8();
        uint64_t v15 = v62;
        uint64_t v42 = v81;
        char v33 = v63;
      }
      sub_2498A48A4(v12, v11, v14, v13, v16, v15, v18);
      uint64_t v35 = v42;
      uint64_t v34 = v41;
      uint64_t v36 = v84;
      uint64_t v37 = v88;
      uint64_t v38 = v91;
      uint64_t v39 = v94;
      unint64_t v40 = v97;
LABEL_25:
      sub_2498A48A4(v35, v34, v37, v36, v38, v39, v40);
      sub_2498A79C4(v106);
      return v33 & 1;
    case 3uLL:
      if (v18 >> 62 != 3 || v18 != 0xC000000000000000 || v11 | v12 | v14 | v13 | v16 | v15 | v17 | v19) {
        goto LABEL_20;
      }
      goto LABEL_34;
    default:
      if (v18 >> 62)
      {
LABEL_20:
        uint64_t v43 = v12;
        uint64_t v44 = v11;
        uint64_t v45 = v5;
        uint64_t v46 = v14;
        uint64_t v47 = v4;
        uint64_t v48 = v13;
        uint64_t v49 = v7;
        uint64_t v50 = v16;
        uint64_t v51 = v6;
        unint64_t v52 = v8;
        uint64_t v53 = v2;
        uint64_t v54 = v3;
        sub_2498A48A4(v43, v44, v46, v48, v50, v15, v18);
        uint64_t v55 = v54;
        uint64_t v56 = v53;
        uint64_t v57 = v45;
        uint64_t v58 = v47;
        uint64_t v59 = v49;
        uint64_t v60 = v51;
        unint64_t v61 = v52;
LABEL_21:
        sub_2498A48A4(v55, v56, v57, v58, v59, v60, v61);
        sub_2498A79C4(v106);
        goto LABEL_22;
      }
      uint64_t v92 = v6;
      unint64_t v95 = v8;
      uint64_t v86 = v5;
      uint64_t v89 = v7;
      uint64_t v77 = v2;
      uint64_t v79 = v3;
      if (v3 != v12 || v2 != v11)
      {
        uint64_t v82 = v4;
        uint64_t v20 = v15;
        char v21 = sub_249AEE0D8();
        uint64_t v15 = v20;
        uint64_t v3 = v79;
        uint64_t v4 = v82;
        uint64_t v2 = v77;
        uint64_t v5 = v86;
        uint64_t v7 = v89;
        uint64_t v6 = v92;
        unint64_t v8 = v95;
        if ((v21 & 1) == 0) {
          goto LABEL_29;
        }
      }
      if (!v4)
      {
        if (!v13)
        {
          uint64_t v66 = v12;
          uint64_t v67 = v11;
          uint64_t v68 = v5;
          uint64_t v69 = v14;
          uint64_t v70 = v7;
          uint64_t v71 = v16;
          uint64_t v72 = v6;
          unint64_t v73 = v8;
          uint64_t v74 = v2;
          uint64_t v75 = v3;
          sub_2498A48A4(v66, v67, v69, 0, v71, v15, v18);
          uint64_t v25 = v75;
          uint64_t v26 = v74;
          uint64_t v27 = v68;
          uint64_t v28 = 0;
          uint64_t v29 = v70;
          uint64_t v30 = v72;
          unint64_t v31 = v73;
LABEL_33:
          sub_2498A48A4(v25, v26, v27, v28, v29, v30, v31);
LABEL_34:
          sub_2498A79C4(v106);
          goto LABEL_35;
        }
        uint64_t v82 = 0;
        goto LABEL_29;
      }
      if (!v13)
      {
        uint64_t v82 = v4;
LABEL_29:
        sub_2498A48A4(v12, v11, v14, v13, v16, v15, v18);
        uint64_t v56 = v77;
        uint64_t v55 = v79;
        uint64_t v58 = v82;
        uint64_t v57 = v86;
        uint64_t v59 = v89;
        uint64_t v60 = v92;
        unint64_t v61 = v95;
        goto LABEL_21;
      }
      if (v5 == v14 && v4 == v13)
      {
        uint64_t v22 = v11;
        uint64_t v23 = v5;
        uint64_t v24 = v4;
        sub_2498A48A4(v12, v22, v5, v4, v16, v15, v18);
        uint64_t v26 = v77;
        uint64_t v25 = v79;
        uint64_t v27 = v23;
        uint64_t v28 = v24;
        uint64_t v29 = v89;
        uint64_t v30 = v92;
        unint64_t v31 = v95;
        goto LABEL_33;
      }
      uint64_t v85 = v4;
      uint64_t v64 = v15;
      char v65 = sub_249AEE0D8();
      sub_2498A48A4(v12, v11, v14, v13, v16, v64, v18);
      sub_2498A48A4(v79, v77, v86, v85, v89, v92, v95);
      sub_2498A79C4(v106);
      if ((v65 & 1) == 0)
      {
LABEL_22:
        char v33 = 0;
        return v33 & 1;
      }
LABEL_35:
      char v33 = 1;
      return v33 & 1;
  }
}

uint64_t _s14CarPlayAssetUI12StreamWidgetV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_249AEE0D8(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_249AEE0D8();
    }
  }
  return result;
}

uint64_t _s14CarPlayAssetUI13AppWidgetInfoV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_249AEE0D8(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        BOOL v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_249AEE0D8() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_2498A4330()
{
  unint64_t result = qword_2696DDFD8;
  if (!qword_2696DDFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDFD8);
  }
  return result;
}

unint64_t sub_2498A4384()
{
  unint64_t result = qword_2696DDFF0;
  if (!qword_2696DDFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDFF0);
  }
  return result;
}

unint64_t sub_2498A43D8()
{
  unint64_t result = qword_2696DE008;
  if (!qword_2696DE008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE008);
  }
  return result;
}

unint64_t sub_2498A442C()
{
  unint64_t result = qword_2696DE040;
  if (!qword_2696DE040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE040);
  }
  return result;
}

unint64_t sub_2498A4480()
{
  unint64_t result = qword_2696DE048;
  if (!qword_2696DE048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE048);
  }
  return result;
}

unint64_t sub_2498A44D4()
{
  unint64_t result = qword_2696DE050;
  if (!qword_2696DE050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE050);
  }
  return result;
}

unint64_t sub_2498A4528()
{
  unint64_t result = qword_2696DE058;
  if (!qword_2696DE058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE058);
  }
  return result;
}

unint64_t sub_2498A457C()
{
  unint64_t result = qword_2696DE060;
  if (!qword_2696DE060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE060);
  }
  return result;
}

unint64_t sub_2498A45D0()
{
  unint64_t result = qword_2696DE068;
  if (!qword_2696DE068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE068);
  }
  return result;
}

unint64_t sub_2498A4624()
{
  unint64_t result = qword_2696DE070;
  if (!qword_2696DE070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE070);
  }
  return result;
}

unint64_t sub_2498A4678()
{
  unint64_t result = qword_2696DE078;
  if (!qword_2696DE078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE078);
  }
  return result;
}

unint64_t sub_2498A46CC()
{
  unint64_t result = qword_2696DE0A8;
  if (!qword_2696DE0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE0A8);
  }
  return result;
}

unint64_t sub_2498A4720()
{
  unint64_t result = qword_2696DE0B0;
  if (!qword_2696DE0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE0B0);
  }
  return result;
}

unint64_t sub_2498A4774()
{
  unint64_t result = qword_2696DE0B8;
  if (!qword_2696DE0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE0B8);
  }
  return result;
}

double sub_2498A47C8(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 336) = 0xFFFFFFFF00000000;
  *(_OWORD *)(a1 + 344) = 0u;
  *(_OWORD *)(a1 + 360) = 0u;
  *(_OWORD *)(a1 + 376) = 0u;
  *(_OWORD *)(a1 + 392) = 0u;
  *(_OWORD *)(a1 + 408) = 0u;
  *(_OWORD *)(a1 + 424) = 0u;
  *(_OWORD *)(a1 + 440) = 0u;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(void *)(a1 + 504) = 0;
  return result;
}

uint64_t sub_2498A4820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t *sub_2498A4888(unint64_t *result)
{
  *double result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x80000000;
  return result;
}

uint64_t sub_2498A48A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  unint64_t v7 = a7 >> 62;
  if (!(a7 >> 62))
  {
LABEL_5:
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  if (v7 != 2)
  {
    if (v7 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
LABEL_6:

  return swift_bridgeObjectRetain();
}

void *sub_2498A492C(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xFE00000000000007;
  uint64_t v7 = result[62] & 1 | 0x3000000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

uint64_t sub_2498A4990(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_2498A49EC(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xFE00000000000007;
  uint64_t v7 = result[62] & 1 | 0x6000000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

void *sub_2498A4A50(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xFE00000000000007;
  uint64_t v7 = result[62] & 1 | 0x7000000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

uint64_t _s14CarPlayAssetUI13AvocadoWidgetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  char v8 = *(unsigned char *)(a1 + 64);
  long long v9 = *(_OWORD *)(a1 + 72);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  uint64_t v14 = *(void *)(a2 + 48);
  uint64_t v15 = *(void *)(a2 + 56);
  char v16 = *(unsigned char *)(a2 + 64);
  long long v17 = *(_OWORD *)(a2 + 72);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    goto LABEL_4;
  }
  uint64_t v25 = *(void *)(a2 + 48);
  uint64_t v26 = *(void *)(a2 + 24);
  long long v27 = *(_OWORD *)(a2 + 72);
  long long v28 = *(_OWORD *)(a1 + 72);
  uint64_t v24 = *(void *)(a1 + 40);
  char v23 = *(unsigned char *)(a2 + 64);
  uint64_t v18 = *(void *)(a2 + 56);
  char v19 = sub_249AEE0D8();
  uint64_t v15 = v18;
  char v16 = v23;
  uint64_t v14 = v25;
  uint64_t v10 = v26;
  long long v17 = v27;
  long long v9 = v28;
  uint64_t v5 = v24;
  char v20 = v19;
  char v21 = 0;
  if (v20)
  {
LABEL_4:
    v32[0] = v2;
    v32[1] = v3;
    _OWORD v32[2] = v4;
    v32[3] = v5;
    v32[4] = v6;
    v32[5] = v7;
    char v33 = v8;
    long long v34 = v9;
    v29[0] = v11;
    v29[1] = v10;
    _OWORD v29[2] = v13;
    v29[3] = v12;
    _OWORD v29[4] = v14;
    v29[5] = v15;
    char v30 = v16;
    long long v31 = v17;
    char v21 = _s14CarPlayAssetUI17AvocadoWidgetInfoV2eeoiySbAC_ACtFZ_0((uint64_t)v32, (uint64_t)v29);
  }
  return v21 & 1;
}

BOOL _s14CarPlayAssetUI6WidgetO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v58 = a1[3];
  uint64_t v5 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v7 = a1[7];
  unint64_t v10 = a1[8];
  uint64_t v9 = a1[9];
  uint64_t v11 = a1[10];
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  uint64_t v15 = a2[2];
  uint64_t v14 = a2[3];
  uint64_t v16 = a2[4];
  uint64_t v17 = a2[5];
  uint64_t v18 = a2[6];
  uint64_t v19 = a2[7];
  unint64_t v20 = a2[8];
  uint64_t v21 = a2[9];
  uint64_t v22 = a2[10];
  v68[0] = *a1;
  v68[1] = v2;
  uint64_t v59 = v4;
  v68[2] = v4;
  v68[3] = v58;
  uint64_t v55 = v7;
  uint64_t v56 = v5;
  v68[4] = v5;
  v68[5] = v6;
  uint64_t v53 = v9;
  uint64_t v54 = v8;
  v68[6] = v8;
  v68[7] = v7;
  v68[8] = v10;
  v68[9] = v9;
  uint64_t v52 = v11;
  v68[10] = v11;
  v68[11] = v12;
  v68[12] = v13;
  v68[13] = v15;
  v68[14] = v14;
  v68[15] = v16;
  v68[16] = v17;
  v68[17] = v18;
  v68[18] = v19;
  v68[19] = v20;
  v68[20] = v21;
  v68[21] = v22;
  uint64_t v57 = v6;
  if (v10 >> 62)
  {
    if (v10 >> 62 == 1)
    {
      if (v20 >> 62 == 1)
      {
        uint64_t v48 = v2;
        uint64_t v50 = v3;
        uint64_t v44 = v18;
        uint64_t v46 = v19;
        if (v3 == v12 && v2 == v13 || (v23 = sub_249AEE0D8(), uint64_t v18 = v44, v19 = v46, (v23 & 1) != 0))
        {
          v64[0] = v59;
          v64[1] = v58;
          v64[2] = v56;
          v64[3] = v57;
          v64[4] = v54;
          v64[5] = v55;
          char v65 = v10 & 1;
          uint64_t v66 = v53;
          uint64_t v67 = v52;
          v60[0] = v15;
          v60[1] = v14;
          v60[2] = v16;
          v60[3] = v17;
          v60[4] = v18;
          v60[5] = v19;
          char v61 = v20 & 1;
          uint64_t v62 = v21;
          uint64_t v63 = v22;
          char v24 = _s14CarPlayAssetUI17AvocadoWidgetInfoV2eeoiySbAC_ACtFZ_0((uint64_t)v64, (uint64_t)v60);
          goto LABEL_38;
        }
        sub_2498A6354(v12, v13, v15, v14, v16, v17, v44, v46, v20);
        sub_2498A6354(v50, v48, v59, v58, v56, v57, v54, v55, v10);
LABEL_30:
        sub_2498A7904((uint64_t)v68);
        return 0;
      }
LABEL_28:
      uint64_t v39 = v14;
      uint64_t v40 = v16;
      uint64_t v41 = v2;
      uint64_t v42 = v3;
      sub_2498A6354(v12, v13, v15, v39, v40, v17, v18, v19, v20);
      sub_2498A6354(v42, v41, v59, v58, v56, v57, v54, v55, v10);
      goto LABEL_30;
    }
    if (v20 >> 62 != 2) {
      goto LABEL_28;
    }
    if (v3 != v12 || v2 != v13)
    {
      uint64_t v49 = v2;
      uint64_t v51 = v3;
      uint64_t v45 = v18;
      uint64_t v47 = v19;
      char v33 = sub_249AEE0D8();
      uint64_t v18 = v45;
      uint64_t v19 = v47;
      uint64_t v2 = v49;
      uint64_t v3 = v51;
      if ((v33 & 1) == 0) {
        goto LABEL_28;
      }
    }
    if (v59 == v15 && v58 == v14)
    {
      uint64_t v34 = v16;
      uint64_t v35 = v17;
      uint64_t v36 = v2;
      uint64_t v37 = v3;
      sub_2498A6354(v12, v13, v59, v58, v34, v35, v18, v19, v20);
      sub_2498A6354(v37, v36, v59, v58, v56, v57, v54, v55, v10);
      goto LABEL_27;
    }
    uint64_t v48 = v2;
    uint64_t v50 = v3;
    uint64_t v44 = v18;
    uint64_t v46 = v19;
    goto LABEL_37;
  }
  if (v20 >> 62) {
    goto LABEL_28;
  }
  uint64_t v48 = v2;
  uint64_t v50 = v3;
  uint64_t v44 = v18;
  uint64_t v46 = v19;
  if (v3 != v12 || v2 != v13)
  {
    char v25 = sub_249AEE0D8();
    uint64_t v18 = v44;
    uint64_t v19 = v46;
    uint64_t v2 = v48;
    uint64_t v3 = v50;
    if ((v25 & 1) == 0) {
      goto LABEL_36;
    }
  }
  uint64_t v26 = v58;
  if (v59 != v15 || v58 != v14)
  {
    char v27 = sub_249AEE0D8();
    uint64_t v18 = v44;
    uint64_t v19 = v46;
    uint64_t v2 = v48;
    uint64_t v3 = v50;
    uint64_t v26 = v58;
    if ((v27 & 1) == 0)
    {
LABEL_36:
      sub_2498A6354(v12, v13, v15, v14, v16, v17, v18, v19, v20);
      sub_2498A6354(v50, v48, v59, v58, v56, v57, v54, v55, v10);
      goto LABEL_30;
    }
  }
  if (!v57)
  {
    if (!v17)
    {
      sub_2498A6354(v12, v13, v15, v14, v16, 0, v18, v19, v20);
      sub_2498A6354(v50, v48, v59, v58, v56, 0, v54, v55, v10);
      goto LABEL_27;
    }
    uint64_t v57 = 0;
    goto LABEL_36;
  }
  if (!v17) {
    goto LABEL_36;
  }
  if (v56 == v16 && v57 == v17)
  {
    uint64_t v28 = v12;
    uint64_t v29 = v26;
    uint64_t v30 = v14;
    uint64_t v31 = v2;
    uint64_t v32 = v3;
    sub_2498A6354(v28, v13, v15, v30, v56, v57, v18, v19, v20);
    sub_2498A6354(v32, v31, v59, v29, v56, v57, v54, v55, v10);
LABEL_27:
    sub_2498A7904((uint64_t)v68);
    return 1;
  }
LABEL_37:
  char v24 = sub_249AEE0D8();
LABEL_38:
  char v43 = v24;
  sub_2498A6354(v12, v13, v15, v14, v16, v17, v44, v46, v20);
  sub_2498A6354(v50, v48, v59, v58, v56, v57, v54, v55, v10);
  sub_2498A7904((uint64_t)v68);
  return (v43 & 1) != 0;
}

uint64_t _s14CarPlayAssetUI9AppWidgetV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  if (*a1 == *a2 && a1[1] == a2[1] || (char v10 = sub_249AEE0D8(), result = 0, (v10 & 1) != 0))
  {
    if (v2 == v6 && v4 == v7 || (sub_249AEE0D8() & 1) != 0)
    {
      if (v5)
      {
        if (v8 && (v3 == v9 && v5 == v8 || (sub_249AEE0D8() & 1) != 0)) {
          return 1;
        }
      }
      else if (!v8)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_2498A51B4()
{
  unint64_t result = qword_2696DE0D0;
  if (!qword_2696DE0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE0D0);
  }
  return result;
}

unint64_t sub_2498A520C()
{
  unint64_t result = qword_2696DE0D8;
  if (!qword_2696DE0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE0D8);
  }
  return result;
}

unint64_t sub_2498A5264()
{
  unint64_t result = qword_2696DE0E0;
  if (!qword_2696DE0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE0E0);
  }
  return result;
}

unint64_t sub_2498A52BC()
{
  unint64_t result = qword_2696DE0E8;
  if (!qword_2696DE0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE0E8);
  }
  return result;
}

uint64_t sub_2498A5310()
{
  return MEMORY[0x263F8D320];
}

unint64_t sub_2498A5320()
{
  unint64_t result = qword_2696DE0F0;
  if (!qword_2696DE0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE0F0);
  }
  return result;
}

unint64_t sub_2498A5378()
{
  unint64_t result = qword_2696DE0F8;
  if (!qword_2696DE0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE0F8);
  }
  return result;
}

unint64_t sub_2498A53D0()
{
  unint64_t result = qword_2696DE100;
  if (!qword_2696DE100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE100);
  }
  return result;
}

unint64_t sub_2498A5428()
{
  unint64_t result = qword_2696DE108;
  if (!qword_2696DE108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE108);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppWidgetInfo()
{
  return &type metadata for AppWidgetInfo;
}

uint64_t destroy for AvocadoWidgetInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AvocadoWidgetInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AvocadoWidgetInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for AvocadoWidgetInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvocadoWidgetInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvocadoWidgetInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AvocadoWidgetInfo()
{
  return &type metadata for AvocadoWidgetInfo;
}

void *initializeBufferWithCopyOfBuffer for StreamWidgetInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ImageAsset.LocalizedImage.ImageData()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for StreamWidgetInfo(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for StreamWidgetInfo(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for StreamWidgetInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for StreamWidgetInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreamWidgetInfo()
{
  return &type metadata for StreamWidgetInfo;
}

uint64_t destroy for WidgetInfo(uint64_t a1)
{
  return sub_2498A58D4(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48));
}

uint64_t sub_2498A58D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t result = a2;
  unint64_t v8 = a7 >> 62;
  if (!(a7 >> 62))
  {
LABEL_5:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (v8 != 2)
  {
    if (v8 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
LABEL_6:

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for WidgetInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  unint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  sub_2498A48A4(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  return a1;
}

uint64_t *assignWithCopy for WidgetInfo(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  unint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  sub_2498A48A4(*a2, v4, v5, v6, v7, v8, v9);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  uint64_t v17 = a1[5];
  unint64_t v18 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  sub_2498A58D4(v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t *assignWithTake for WidgetInfo(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  unint64_t v10 = a1[6];
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v12;
  a1[8] = v3;
  sub_2498A58D4(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 48) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for WidgetInfo(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 56) = 0;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 48) = 2 * -a2;
      return result;
    }
    *(unsigned char *)(a1 + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_2498A5BD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 48) >> 62;
  if (v1 == 3) {
    return (*(_DWORD *)a1 + 3);
  }
  else {
    return v1;
  }
}

uint64_t sub_2498A5BEC(uint64_t result)
{
  *(void *)(result + 48) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_2498A5BFC(uint64_t result, uint64_t a2)
{
  if (a2 < 3)
  {
    *(void *)(result + 48) = *(void *)(result + 48) & 1 | (a2 << 62);
  }
  else
  {
    *(void *)double result = (a2 - 3);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)(result + 40) = 0;
    *(void *)(result + 48) = 0xC000000000000000;
    *(void *)(result + 56) = 0;
    *(void *)(result + 64) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetInfo()
{
  return &type metadata for WidgetInfo;
}

uint64_t destroy for AppWidget()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AppWidget(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AppWidget(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for AppWidget(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AppWidget(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AppWidget(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppWidget()
{
  return &type metadata for AppWidget;
}

uint64_t destroy for AvocadoWidget()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AvocadoWidget(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AvocadoWidget(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for AvocadoWidget(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvocadoWidget(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AvocadoWidget(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AvocadoWidget()
{
  return &type metadata for AvocadoWidget;
}

uint64_t _s11BoundsLabelVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s11BoundsLabelVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s11BoundsLabelVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s11BoundsLabelVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11BoundsLabelVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11BoundsLabelVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StreamWidget()
{
  return &type metadata for StreamWidget;
}

uint64_t sub_2498A6354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  unint64_t v9 = a9 >> 62;
  if (!(a9 >> 62))
  {
LABEL_5:
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  if (v9 != 2)
  {
    if (v9 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
LABEL_6:
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t destroy for Widget(uint64_t a1)
{
  return sub_2498A643C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64));
}

uint64_t sub_2498A643C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t result = a2;
  unint64_t v10 = a9 >> 62;
  if (!(a9 >> 62))
  {
LABEL_5:
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (v10 != 2)
  {
    if (v10 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
LABEL_6:
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t *initializeWithCopy for Widget(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  unint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  sub_2498A6354(*a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  return a1;
}

uint64_t assignWithCopy for Widget(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  unint64_t v11 = a2[8];
  uint64_t v22 = a2[9];
  uint64_t v23 = a2[10];
  sub_2498A6354(*a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v22;
  *(void *)(a1 + 80) = v23;
  sub_2498A643C(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for Widget(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 80);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v3;
  sub_2498A643C(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for Widget(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 64) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Widget(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 72) = 0;
      *(void *)(a1 + 80) = 0;
      *(void *)(a1 + 64) = 2 * -a2;
      return result;
    }
    *(unsigned char *)(a1 + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_2498A679C(uint64_t a1)
{
  return *(void *)(a1 + 64) >> 62;
}

uint64_t sub_2498A67A8(uint64_t result)
{
  *(void *)(result + 64) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_2498A67B8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 64) = *(void *)(result + 64) & 1 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for Widget()
{
  return &type metadata for Widget;
}

unsigned char *storeEnumTagSinglePayload for WidgetInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498A68A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetInfo.CodingKeys()
{
  return &type metadata for WidgetInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for WidgetInfo.AppCodingKeys()
{
  return &type metadata for WidgetInfo.AppCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetInfo.AvocadoCodingKeys()
{
  return &type metadata for WidgetInfo.AvocadoCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetInfo.StreamCodingKeys()
{
  return &type metadata for WidgetInfo.StreamCodingKeys;
}

ValueMetadata *type metadata accessor for WidgetInfo.EmptyCodingKeys()
{
  return &type metadata for WidgetInfo.EmptyCodingKeys;
}

unsigned char *_s14CarPlayAssetUI10WidgetInfoO13AppCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2498A69C0);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for StreamWidgetInfo.CodingKeys()
{
  return &type metadata for StreamWidgetInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for AvocadoWidgetInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for AvocadoWidgetInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *double result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498A6B54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AvocadoWidgetInfo.CodingKeys()
{
  return &type metadata for AvocadoWidgetInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AppWidgetInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498A6C58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppWidgetInfo.CodingKeys()
{
  return &type metadata for AppWidgetInfo.CodingKeys;
}

unint64_t sub_2498A6C94()
{
  unint64_t result = qword_2696DE110;
  if (!qword_2696DE110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE110);
  }
  return result;
}

unint64_t sub_2498A6CEC()
{
  unint64_t result = qword_2696DE118;
  if (!qword_2696DE118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE118);
  }
  return result;
}

unint64_t sub_2498A6D44()
{
  unint64_t result = qword_2696DE120;
  if (!qword_2696DE120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE120);
  }
  return result;
}

unint64_t sub_2498A6D9C()
{
  unint64_t result = qword_2696DE128;
  if (!qword_2696DE128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE128);
  }
  return result;
}

unint64_t sub_2498A6DF4()
{
  unint64_t result = qword_2696DE130;
  if (!qword_2696DE130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE130);
  }
  return result;
}

unint64_t sub_2498A6E4C()
{
  unint64_t result = qword_2696DE138;
  if (!qword_2696DE138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE138);
  }
  return result;
}

unint64_t sub_2498A6EA4()
{
  unint64_t result = qword_2696DE140;
  if (!qword_2696DE140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE140);
  }
  return result;
}

unint64_t sub_2498A6EFC()
{
  unint64_t result = qword_2696DE148;
  if (!qword_2696DE148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE148);
  }
  return result;
}

unint64_t sub_2498A6F54()
{
  unint64_t result = qword_2696DE150;
  if (!qword_2696DE150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE150);
  }
  return result;
}

unint64_t sub_2498A6FAC()
{
  unint64_t result = qword_2696DE158;
  if (!qword_2696DE158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE158);
  }
  return result;
}

unint64_t sub_2498A7004()
{
  unint64_t result = qword_2696DE160;
  if (!qword_2696DE160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE160);
  }
  return result;
}

unint64_t sub_2498A705C()
{
  unint64_t result = qword_2696DE168;
  if (!qword_2696DE168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE168);
  }
  return result;
}

unint64_t sub_2498A70B4()
{
  unint64_t result = qword_2696DE170;
  if (!qword_2696DE170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE170);
  }
  return result;
}

unint64_t sub_2498A710C()
{
  unint64_t result = qword_2696DE178;
  if (!qword_2696DE178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE178);
  }
  return result;
}

unint64_t sub_2498A7164()
{
  unint64_t result = qword_2696DE180;
  if (!qword_2696DE180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE180);
  }
  return result;
}

unint64_t sub_2498A71BC()
{
  unint64_t result = qword_2696DE188;
  if (!qword_2696DE188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE188);
  }
  return result;
}

unint64_t sub_2498A7214()
{
  unint64_t result = qword_2696DE190;
  if (!qword_2696DE190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE190);
  }
  return result;
}

unint64_t sub_2498A726C()
{
  unint64_t result = qword_2696DE198;
  if (!qword_2696DE198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE198);
  }
  return result;
}

unint64_t sub_2498A72C4()
{
  unint64_t result = qword_2696DE1A0;
  if (!qword_2696DE1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE1A0);
  }
  return result;
}

unint64_t sub_2498A731C()
{
  unint64_t result = qword_2696DE1A8;
  if (!qword_2696DE1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE1A8);
  }
  return result;
}

unint64_t sub_2498A7374()
{
  unint64_t result = qword_2696DE1B0;
  if (!qword_2696DE1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE1B0);
  }
  return result;
}

unint64_t sub_2498A73CC()
{
  unint64_t result = qword_2696DE1B8;
  if (!qword_2696DE1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE1B8);
  }
  return result;
}

unint64_t sub_2498A7424()
{
  unint64_t result = qword_2696DE1C0;
  if (!qword_2696DE1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE1C0);
  }
  return result;
}

uint64_t sub_2498A7478(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001BLL && a2 == 0x8000000249B14690 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B146B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2498A7568(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684957547 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000249B146D0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000249B146F0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x76696C417065656BLL && a2 == 0xE900000000000065 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B146B0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_2498A7768(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7368801 && a2 == 0xE300000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6461636F7661 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D6165727473 && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974706D65 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2498A7904(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 136);
  uint64_t v9 = *(void *)(a1 + 144);
  long long v11 = *(_OWORD *)(a1 + 152);
  sub_2498A643C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64));
  sub_2498A643C(v2, v3, v4, v5, v6, v7, v8, v9, v11);
  return a1;
}

uint64_t *sub_2498A79C4(uint64_t *a1)
{
  uint64_t v2 = a1[9];
  uint64_t v3 = a1[10];
  uint64_t v4 = a1[11];
  uint64_t v5 = a1[12];
  uint64_t v6 = a1[13];
  uint64_t v7 = a1[14];
  unint64_t v8 = a1[15];
  sub_2498A58D4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_2498A58D4(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeColors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.activeColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeSecondaryColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeSecondaryColors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.activeSecondaryColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeTertiaryColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.activeTertiaryColors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.activeTertiaryColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveColors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveSecondaryColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveSecondaryColors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveSecondaryColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveTertiaryColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveTertiaryColors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.TickColors.inactiveTertiaryColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.stops.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.init(activeColors:activeSecondaryColors:activeTertiaryColors:inactiveColors:inactiveSecondaryColors:inactiveTertiaryColors:stops:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v8 = *(void *)(result + 16);
  if (v8 && *(void *)(a2 + 16) && (uint64_t v9 = *(void *)(a4 + 16)) != 0 && v8 == v9 && *(void *)(a7 + 16) + 1 == v8)
  {
    *a8 = result;
    a8[1] = a2;
    a8[2] = a3;
    a8[3] = a4;
    a8[4] = a5;
    a8[5] = a6;
    a8[6] = a7;
  }
  else
  {
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  return result;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v22 = v1[6];
  sub_249AEE348();
  uint64_t v9 = *(void *)(v4 + 16);
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    do
    {
      ++v10;
      swift_retain();
      sub_249AEC878();
      swift_release();
    }
    while (v9 != v10);
    swift_bridgeObjectRelease();
  }
  sub_249AEE348();
  uint64_t v11 = *(void *)(v3 + 16);
  if (v11)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    do
    {
      ++v12;
      swift_retain();
      sub_249AEC878();
      swift_release();
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
  }
  sub_249AEE348();
  uint64_t v13 = *(void *)(v6 + 16);
  if (v13)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    do
    {
      ++v14;
      swift_retain();
      sub_249AEC878();
      swift_release();
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
  }
  sub_249AEE348();
  uint64_t v15 = *(void *)(v5 + 16);
  if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = 0;
    do
    {
      ++v16;
      swift_retain();
      sub_249AEC878();
      swift_release();
    }
    while (v15 != v16);
    swift_bridgeObjectRelease();
  }
  sub_249AEE348();
  uint64_t v17 = *(void *)(v8 + 16);
  if (v17)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = 0;
    do
    {
      ++v18;
      swift_retain();
      sub_249AEC878();
      swift_release();
    }
    while (v17 != v18);
    swift_bridgeObjectRelease();
  }
  sub_249AEE348();
  uint64_t v19 = *(void *)(v7 + 16);
  if (v19)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = 0;
    do
    {
      ++v20;
      swift_retain();
      sub_249AEC878();
      swift_release();
    }
    while (v19 != v20);
    swift_bridgeObjectRelease();
  }

  return sub_24988A0C8(a1, v22);
}

unint64_t sub_2498A8040(char a1)
{
  unint64_t result = 0x6F43657669746361;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0x6576697463616E69;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 6:
      unint64_t result = 0x73706F7473;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2498A8144()
{
  return sub_2498A8040(*v0);
}

uint64_t sub_2498A814C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498AE4DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498A8174(uint64_t a1)
{
  unint64_t v2 = sub_2498ACD4C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498A81B0(uint64_t a1)
{
  unint64_t v2 = sub_2498ACD4C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE1C8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v21 = v1[2];
  uint64_t v22 = v8;
  uint64_t v10 = v1[3];
  uint64_t v19 = v1[4];
  uint64_t v20 = v10;
  uint64_t v11 = v1[5];
  uint64_t v17 = v1[6];
  uint64_t v18 = v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498ACD4C();
  uint64_t v12 = v4;
  sub_249AEE468();
  uint64_t v24 = v9;
  char v23 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE1D8);
  sub_2498ACDA0(&qword_2696DE1E0, (void (*)(void))sub_24988CC10);
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v13 = v20;
    uint64_t v14 = v21;
    uint64_t v24 = v22;
    char v23 = 1;
    sub_249AEDF08();
    uint64_t v24 = v14;
    char v23 = 2;
    uint64_t v22 = v12;
    sub_249AEDF08();
    uint64_t v24 = v13;
    char v23 = 3;
    sub_249AEDF08();
    uint64_t v24 = v19;
    char v23 = 4;
    sub_249AEDF08();
    uint64_t v24 = v18;
    char v23 = 5;
    sub_249AEDF08();
    uint64_t v24 = v17;
    char v23 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE1E8);
    sub_2498AEA2C(&qword_2696DE1F0, &qword_2696DE1E8);
    uint64_t v4 = v22;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 6);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  long long v7 = v0[2];
  uint64_t v8 = v1;
  sub_249AEE338();
  Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)((uint64_t)v4);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.TickColors.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE1F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498ACD4C();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v30 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE1D8);
  char v31 = 0;
  sub_2498ACDA0(&qword_2696DE200, (void (*)(void))sub_24988CBBC);
  sub_249AEDE08();
  uint64_t v9 = v32;
  char v31 = 1;
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  uint64_t v29 = v9;
  uint64_t v10 = v32;
  char v31 = 2;
  swift_bridgeObjectRetain();
  uint64_t v28 = 0;
  sub_249AEDE08();
  uint64_t v28 = v10;
  uint64_t v12 = v32;
  char v31 = 3;
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  uint64_t v25 = v12;
  uint64_t v13 = v32;
  char v31 = 4;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  sub_249AEDE08();
  uint64_t v26 = v13;
  uint64_t v14 = v32;
  char v31 = 5;
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  uint64_t v27 = v14;
  uint64_t v15 = v32;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE1E8);
  char v31 = 6;
  sub_2498AEA2C(&qword_2696DE208, &qword_2696DE1E8);
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v16 = v32;
  uint64_t v17 = v29;
  swift_bridgeObjectRetain();
  uint64_t v18 = v28;
  swift_bridgeObjectRetain();
  uint64_t v19 = v25;
  swift_bridgeObjectRetain();
  uint64_t v20 = v15;
  uint64_t v21 = v26;
  swift_bridgeObjectRetain();
  uint64_t v22 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v23 = v30;
  *uint64_t v30 = v17;
  v23[1] = v18;
  void v23[2] = v19;
  v23[3] = v21;
  v23[4] = v22;
  v23[5] = v20;
  v23[6] = v16;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2498A8C54@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.DialConfiguration.TickColors.init(from:)(a1, a2);
}

uint64_t sub_2498A8C6C(void *a1)
{
  return Instrument.GaugeStyle.DialConfiguration.TickColors.encode(to:)(a1);
}

uint64_t sub_2498A8C84()
{
  uint64_t v1 = *((void *)v0 + 6);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  long long v7 = v0[2];
  uint64_t v8 = v1;
  sub_249AEE338();
  Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)((uint64_t)v4);
  return sub_249AEE388();
}

uint64_t sub_2498A8CE4()
{
  uint64_t v1 = *((void *)v0 + 6);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  long long v7 = v0[2];
  uint64_t v8 = v1;
  sub_249AEE338();
  Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)((uint64_t)v4);
  return sub_249AEE388();
}

void Instrument.GaugeStyle.DialConfiguration.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

double Instrument.GaugeStyle.DialConfiguration.bounds.getter()
{
  return *(double *)(v0 + 8);
}

double Instrument.GaugeStyle.DialConfiguration.minimumAngle.getter()
{
  return *(double *)(v0 + 24);
}

double Instrument.GaugeStyle.DialConfiguration.maximumAngle.getter()
{
  return *(double *)(v0 + 32);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.primaryTickMarks.getter()
{
  return *(void *)(v0 + 40);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.secondaryTickMarks.getter()
{
  return *(void *)(v0 + 48);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.tertiaryTickMarks.getter()
{
  return *(void *)(v0 + 56);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.tickColors.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[8];
  uint64_t v3 = v1[9];
  uint64_t v4 = v1[10];
  uint64_t v5 = v1[11];
  uint64_t v6 = v1[12];
  uint64_t v7 = v1[13];
  uint64_t v8 = v1[14];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DialConfiguration.hasNeedle.getter()
{
  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.iconImageName.getter()
{
  uint64_t v1 = *(void *)(v0 + 128);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.currentValueLabelFont.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[18];
  uint64_t v3 = v1[19];
  uint64_t v4 = (void *)v1[20];
  uint64_t v5 = v1[21];
  uint64_t v6 = v1[22];
  uint64_t v7 = v1[23];
  uint64_t v8 = v1[24];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_24989CD14(v2, v3, v4);
}

__n128 Instrument.GaugeStyle.DialConfiguration.currentValueLabelFont.setter(long long *a1)
{
  long long v5 = a1[1];
  long long v6 = *a1;
  __n128 v4 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  sub_24989CF3C(*(void *)(v1 + 144), *(void *)(v1 + 152), *(void **)(v1 + 160));
  *(_OWORD *)(v1 + 144) = v6;
  *(_OWORD *)(v1 + 160) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 176) = v4;
  *(void *)(v1 + 192) = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.currentValueLabelFont.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.primaryTickMarkLabelFont.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[25];
  uint64_t v3 = v1[26];
  __n128 v4 = (void *)v1[27];
  uint64_t v5 = v1[28];
  uint64_t v6 = v1[29];
  uint64_t v7 = v1[30];
  uint64_t v8 = v1[31];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_24989CD14(v2, v3, v4);
}

__n128 Instrument.GaugeStyle.DialConfiguration.primaryTickMarkLabelFont.setter(long long *a1)
{
  long long v5 = a1[1];
  long long v6 = *a1;
  __n128 v4 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  sub_24989CF3C(*(void *)(v1 + 200), *(void *)(v1 + 208), *(void **)(v1 + 216));
  *(_OWORD *)(v1 + 200) = v6;
  *(_OWORD *)(v1 + 216) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 232) = v4;
  *(void *)(v1 + 248) = v2;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DialConfiguration.primaryTickMarkLabelFont.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.currentValueMaximumFractionDigits.getter()
{
  return *(void *)(v0 + 256);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.minimumValueLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 272);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.maximumValueLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 288);
  swift_bridgeObjectRetain();
  return v1;
}

__n128 Instrument.GaugeStyle.DialConfiguration.init(dataIdentifier:bounds:minimumAngle:maximumAngle:primaryTickMarks:secondaryTickMarks:tertiaryTickMarks:tickColors:hasNeedle:iconImageName:currentValueLabelFont:primaryTickMarkLabelFont:currentValueMaximumFractionDigits:minimumValueLabel:maximumValueLabel:)@<Q0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15, uint64_t a16, char a17, long long a18, uint64_t a19, uint64_t a20)
{
  char v20 = *a1;
  uint64_t v21 = *(void *)(a5 + 48);
  uint64_t v22 = *(void *)(a14 + 48);
  uint64_t v23 = *(void *)(a15 + 48);
  *(unsigned char *)a9 = v20;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a11;
  *(double *)(a9 + 24) = a12;
  *(double *)(a9 + 32) = a13;
  *(void *)(a9 + 40) = a2;
  *(void *)(a9 + 48) = a3;
  *(void *)(a9 + 56) = a4;
  long long v24 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)a5;
  *(_OWORD *)(a9 + 80) = v24;
  *(_OWORD *)(a9 + 96) = *(_OWORD *)(a5 + 32);
  *(void *)(a9 + 112) = v21;
  *(unsigned char *)(a9 + 120) = a6;
  *(void *)(a9 + 128) = a7;
  *(void *)(a9 + 136) = a8;
  long long v25 = *(_OWORD *)(a14 + 16);
  *(_OWORD *)(a9 + 144) = *(_OWORD *)a14;
  *(_OWORD *)(a9 + 160) = v25;
  *(_OWORD *)(a9 + 176) = *(_OWORD *)(a14 + 32);
  *(void *)(a9 + 192) = v22;
  long long v26 = *(_OWORD *)(a15 + 16);
  *(_OWORD *)(a9 + 200) = *(_OWORD *)a15;
  *(_OWORD *)(a9 + 216) = v26;
  __n128 result = *(__n128 *)(a15 + 32);
  *(__n128 *)(a9 + 232) = result;
  *(void *)(a9 + 248) = v23;
  *(void *)(a9 + 256) = a16;
  *(unsigned char *)(a9 + 264) = a17 & 1;
  *(_OWORD *)(a9 + 272) = a18;
  *(void *)(a9 + 288) = a19;
  *(void *)(a9 + 296) = a20;
  return result;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.activeTickColor(for:)(double a1)
{
  memcpy(v13, v1, sizeof(v13));
  if (a1 < 0.0 || a1 > 1.0)
  {
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v13[8];
    long long v5 = (void *)v13[14];
    swift_bridgeObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_2498AB864(0, v5[2] + 1, 1, v5);
      long long v5 = (void *)isUniquelyReferenced_nonNull_native;
    }
    unint64_t v8 = v5[2];
    unint64_t v7 = v5[3];
    if (v8 >= v7 >> 1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_2498AB864((void *)(v7 > 1), v8 + 1, 1, v5);
      long long v5 = (void *)isUniquelyReferenced_nonNull_native;
    }
    uint64_t v9 = v13[2];
    v5[2] = v8 + 1;
    v5[v8 + 4] = v9;
    MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRetain();
    sub_2498AE7D0((uint64_t)v5, v4, (uint64_t (*)(uint64_t, double))sub_2498ACE10);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v11) {
      return sub_249AEC888();
    }
    return v11;
  }
  return result;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.inactiveTickColor(for:)(double a1)
{
  memcpy(v13, v1, sizeof(v13));
  if (a1 < 0.0 || a1 > 1.0)
  {
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  else
  {
    uint64_t v4 = v13[11];
    long long v5 = (void *)v13[14];
    swift_bridgeObjectRetain();
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_2498AB864(0, v5[2] + 1, 1, v5);
      long long v5 = (void *)isUniquelyReferenced_nonNull_native;
    }
    unint64_t v8 = v5[2];
    unint64_t v7 = v5[3];
    if (v8 >= v7 >> 1)
    {
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_2498AB864((void *)(v7 > 1), v8 + 1, 1, v5);
      long long v5 = (void *)isUniquelyReferenced_nonNull_native;
    }
    uint64_t v9 = v13[2];
    v5[2] = v8 + 1;
    v5[v8 + 4] = v9;
    MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRetain();
    sub_2498AE7D0((uint64_t)v5, v4, (uint64_t (*)(uint64_t, double))sub_2498ACE10);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v11) {
      return sub_249AEC888();
    }
    return v11;
  }
  return result;
}

void *Instrument.GaugeStyle.DialConfiguration.assets.getter()
{
  uint64_t v1 = (void *)v0[20];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = (void *)v0[27];
  uint64_t v5 = v0[28];
  uint64_t v6 = v0[29];
  uint64_t v30 = v0[30];
  uint64_t v31 = v0[31];
  if (!v1)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    uint64_t v17 = v0[31];
    if (!v4) {
      return v13;
    }
    goto LABEL_7;
  }
  uint64_t v25 = v0[29];
  uint64_t v26 = v0[28];
  uint64_t v27 = (void *)v0[27];
  uint64_t v28 = v0[26];
  uint64_t v29 = v0[25];
  uint64_t v7 = v0[18];
  uint64_t v6 = v0[19];
  uint64_t v8 = v0[22];
  uint64_t v24 = v0[21];
  uint64_t v10 = v0[23];
  uint64_t v9 = v0[24];
  id v11 = v1;
  swift_bridgeObjectRetain_n();
  id v12 = v11;
  uint64_t v13 = sub_2498AB28C(0, 1, 1, MEMORY[0x263F8EE78], &qword_2696DE370, &qword_2696DDEB0);
  unint64_t v15 = v13[2];
  unint64_t v14 = v13[3];
  if (v15 >= v14 >> 1) {
    uint64_t v13 = sub_2498AB28C((void *)(v14 > 1), v15 + 1, 1, v13, &qword_2696DE370, &qword_2696DDEB0);
  }
  char v33 = &type metadata for InstrumentFont;
  uint64_t v34 = &protocol witness table for InstrumentFont;
  uint64_t v16 = swift_allocObject();
  *(void *)&long long v32 = v16;
  *(unsigned char *)(v16 + 16) = v7;
  *(void *)(v16 + 24) = v6;
  *(void *)(v16 + 32) = v12;
  *(void *)(v16 + 40) = v24;
  *(unsigned char *)(v16 + 48) = v8 & 1;
  *(unsigned char *)(v16 + 49) = BYTE1(v8) & 1;
  *(void *)(v16 + 56) = v10;
  *(void *)(v16 + 64) = v9;
  void v13[2] = v15 + 1;
  sub_249882BCC(&v32, (uint64_t)&v13[5 * v15 + 4]);
  sub_24989CF3C(v7, v6, v1);
  uint64_t v3 = v28;
  uint64_t v2 = v29;
  uint64_t v5 = v26;
  uint64_t v4 = v27;
  LOWORD(v6) = v25;
  uint64_t v17 = v31;
  if (v27)
  {
LABEL_7:
    id v18 = v4;
    swift_bridgeObjectRetain_n();
    id v19 = v18;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_2498AB28C(0, v13[2] + 1, 1, v13, &qword_2696DE370, &qword_2696DDEB0);
    }
    unint64_t v21 = v13[2];
    unint64_t v20 = v13[3];
    if (v21 >= v20 >> 1) {
      uint64_t v13 = sub_2498AB28C((void *)(v20 > 1), v21 + 1, 1, v13, &qword_2696DE370, &qword_2696DDEB0);
    }
    char v33 = &type metadata for InstrumentFont;
    uint64_t v34 = &protocol witness table for InstrumentFont;
    uint64_t v22 = swift_allocObject();
    *(void *)&long long v32 = v22;
    *(unsigned char *)(v22 + 16) = v2;
    *(void *)(v22 + 24) = v3;
    *(void *)(v22 + 32) = v19;
    *(void *)(v22 + 40) = v5;
    *(unsigned char *)(v22 + 48) = v6 & 1;
    *(unsigned char *)(v22 + 49) = BYTE1(v6) & 1;
    *(void *)(v22 + 56) = v30;
    *(void *)(v22 + 64) = v17;
    void v13[2] = v21 + 1;
    sub_249882BCC(&v32, (uint64_t)&v13[5 * v21 + 4]);
    sub_24989CF3C(v2, v3, v4);
  }
  return v13;
}

uint64_t Instrument.GaugeStyle.DialConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 136);
  uint64_t v5 = *(void *)(v1 + 160);
  uint64_t v6 = *(void *)(v1 + 216);
  int v7 = *(unsigned __int8 *)(v1 + 264);
  uint64_t v8 = *(void *)(v1 + 280);
  uint64_t v9 = *(void *)(v1 + 296);
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE348();
  sub_249AEE348();
  sub_249AEE348();
  Instrument.GaugeStyle.DialConfiguration.TickColors.hash(into:)(a1);
  sub_249AEE358();
  sub_249AEE358();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  if (v5)
  {
    sub_249AEE358();
    InstrumentFont.hash(into:)();
    if (v6) {
      goto LABEL_5;
    }
  }
  else
  {
    sub_249AEE358();
    if (v6)
    {
LABEL_5:
      sub_249AEE358();
      InstrumentFont.hash(into:)();
      if (v7) {
        goto LABEL_6;
      }
      goto LABEL_13;
    }
  }
  sub_249AEE358();
  if (v7)
  {
LABEL_6:
    sub_249AEE358();
    if (v8) {
      goto LABEL_7;
    }
LABEL_14:
    sub_249AEE358();
    if (v9) {
      goto LABEL_8;
    }
    return sub_249AEE358();
  }
LABEL_13:
  sub_249AEE358();
  sub_249AEE348();
  if (!v8) {
    goto LABEL_14;
  }
LABEL_7:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  if (!v9) {
    return sub_249AEE358();
  }
LABEL_8:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498A9AD8(char a1)
{
  uint64_t result = 0x6E65644961746164;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x73646E756F62;
      break;
    case 2:
      unsigned int v3 = 1768843629;
      goto LABEL_5;
    case 3:
      unsigned int v3 = 1769496941;
LABEL_5:
      uint64_t result = v3 | 0x416D756D00000000;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0xD000000000000012;
      break;
    case 6:
    case 13:
    case 14:
      uint64_t result = 0xD000000000000011;
      break;
    case 7:
      uint64_t result = 0x6F6C6F436B636974;
      break;
    case 8:
      uint64_t result = 0x6C6465654E736168;
      break;
    case 9:
      uint64_t result = 0x67616D496E6F6369;
      break;
    case 10:
      uint64_t result = 0xD000000000000015;
      break;
    case 11:
      uint64_t result = 0xD000000000000018;
      break;
    case 12:
      uint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498A9CAC()
{
  return sub_2498A9AD8(*v0);
}

uint64_t sub_2498A9CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498AFEF4(a1, a2);
  *a3 = result;
  return result;
}

void sub_2498A9CDC(unsigned char *a1@<X8>)
{
  *a1 = 15;
}

uint64_t sub_2498A9CE8(uint64_t a1)
{
  unint64_t v2 = sub_2498AE930();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498A9D24(uint64_t a1)
{
  unint64_t v2 = sub_2498AE930();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE210);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  uint64_t v8 = *((void *)v1 + 1);
  uint64_t v9 = *((void *)v1 + 2);
  uint64_t v11 = *((void *)v1 + 3);
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v39 = *((void *)v1 + 6);
  uint64_t v40 = v12;
  uint64_t v38 = *((void *)v1 + 7);
  long long v13 = *((_OWORD *)v1 + 4);
  long long v36 = *((_OWORD *)v1 + 5);
  long long v37 = v13;
  long long v35 = *((_OWORD *)v1 + 6);
  uint64_t v34 = *((void *)v1 + 14);
  int v46 = v1[120];
  uint64_t v33 = *((void *)v1 + 16);
  uint64_t v32 = *((void *)v1 + 17);
  long long v26 = *((_OWORD *)v1 + 9);
  uint64_t v31 = *((void *)v1 + 20);
  uint64_t v30 = *((void *)v1 + 21);
  uint64_t v29 = *((void *)v1 + 22);
  uint64_t v28 = *((void *)v1 + 23);
  uint64_t v27 = *((void *)v1 + 24);
  long long v20 = *(_OWORD *)(v1 + 200);
  uint64_t v25 = *((void *)v1 + 27);
  uint64_t v24 = *((void *)v1 + 28);
  uint64_t v23 = *((void *)v1 + 29);
  uint64_t v22 = *((void *)v1 + 30);
  uint64_t v21 = *((void *)v1 + 31);
  uint64_t v19 = *((void *)v1 + 32);
  int v18 = v1[264];
  v17[4] = *((void *)v1 + 34);
  v17[3] = *((void *)v1 + 35);
  uint64_t v14 = *((void *)v1 + 37);
  v17[2] = *((void *)v1 + 36);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498AE930();
  sub_249AEE468();
  LOBYTE(v42) = v7;
  char v47 = 0;
  sub_24989C934();
  uint64_t v15 = v41;
  sub_249AEDF08();
  if (v15) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v17[1] = v14;
  uint64_t v41 = v4;
  *(void *)&long long v42 = v8;
  *((void *)&v42 + 1) = v9;
  char v47 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE220);
  sub_2498AEA2C(&qword_2696DE228, &qword_2696DE220);
  sub_249AEDF08();
  *(void *)&long long v42 = v11;
  char v47 = 2;
  sub_24988E51C();
  sub_249AEDF08();
  *(void *)&long long v42 = v10;
  char v47 = 3;
  sub_249AEDF08();
  LOBYTE(v42) = 4;
  sub_249AEDEE8();
  LOBYTE(v42) = 5;
  sub_249AEDEE8();
  LOBYTE(v42) = 6;
  sub_249AEDEE8();
  long long v42 = v37;
  long long v43 = v36;
  long long v44 = v35;
  uint64_t v45 = v34;
  char v47 = 7;
  sub_2498AE984();
  sub_249AEDF08();
  LOBYTE(v42) = 8;
  sub_249AEDEC8();
  LOBYTE(v42) = 9;
  sub_249AEDE58();
  long long v42 = v26;
  *(void *)&long long v43 = v31;
  *((void *)&v43 + 1) = v30;
  *(void *)&long long v44 = v29;
  *((void *)&v44 + 1) = v28;
  uint64_t v45 = v27;
  char v47 = 10;
  sub_2498AE9D8();
  sub_249AEDEA8();
  long long v42 = v20;
  *(void *)&long long v43 = v25;
  *((void *)&v43 + 1) = v24;
  *(void *)&long long v44 = v23;
  *((void *)&v44 + 1) = v22;
  uint64_t v45 = v21;
  char v47 = 11;
  sub_249AEDEA8();
  LOBYTE(v42) = 12;
  sub_249AEDE98();
  LOBYTE(v42) = 13;
  sub_249AEDE58();
  LOBYTE(v42) = 14;
  sub_249AEDE58();
  return (*(uint64_t (**)(void, uint64_t))(v41 + 8))(0, v3);
}

uint64_t Instrument.GaugeStyle.DialConfiguration.hashValue.getter()
{
  sub_249AEE338();
  Instrument.GaugeStyle.DialConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

void *Instrument.GaugeStyle.DialConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE240);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  uint64_t v63 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v9);
  sub_2498AE930();
  sub_249AEE428();
  if (v2)
  {
    uint64_t v118 = 0;
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    uint64_t v68 = 0;
    uint64_t v69 = 0;
    uint64_t v66 = 0;
    uint64_t v67 = 0;
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
    sub_24989CF3C(v69, v70, v71);
    return (void *)sub_24989CF3C(v68, v67, v66);
  }
  else
  {
    uint64_t v53 = a2;
    LOBYTE(v72[0]) = 0;
    sub_24989C988();
    sub_249AEDE08();
    char v10 = v73;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE220);
    LOBYTE(v72[0]) = 1;
    sub_2498AEA2C(&qword_2696DE248, &qword_2696DE220);
    sub_249AEDE08();
    uint64_t v11 = v73;
    uint64_t v12 = v74;
    LOBYTE(v72[0]) = 2;
    sub_24988E570();
    sub_249AEDE08();
    uint64_t v13 = v73;
    LOBYTE(v72[0]) = 3;
    sub_249AEDE08();
    uint64_t v14 = v73;
    LOBYTE(v73) = 4;
    uint64_t v15 = sub_249AEDDE8();
    LOBYTE(v73) = 5;
    uint64_t v16 = sub_249AEDDE8();
    LOBYTE(v73) = 6;
    uint64_t v52 = sub_249AEDDE8();
    LOBYTE(v72[0]) = 7;
    sub_2498AEA8C();
    sub_249AEDE08();
    uint64_t v50 = v16;
    uint64_t v51 = v15;
    uint64_t v17 = v73;
    uint64_t v18 = (uint64_t)v74;
    uint64_t v19 = v75;
    uint64_t v20 = v76;
    uint64_t v21 = v78;
    uint64_t v61 = v77;
    uint64_t v62 = v79;
    LOBYTE(v73) = 8;
    uint64_t v56 = v17;
    swift_bridgeObjectRetain();
    uint64_t v57 = v18;
    swift_bridgeObjectRetain();
    uint64_t v58 = v19;
    swift_bridgeObjectRetain();
    uint64_t v59 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v60 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int v49 = sub_249AEDDC8();
    LOBYTE(v73) = 9;
    uint64_t v48 = sub_249AEDD58();
    uint64_t v55 = v22;
    LOBYTE(v72[0]) = 10;
    sub_2498AEAE0();
    swift_bridgeObjectRetain();
    sub_249AEDDA8();
    LOBYTE(v72[0]) = 11;
    uint64_t v69 = v73;
    uint64_t v70 = (uint64_t)v74;
    uint64_t v71 = v75;
    uint64_t v118 = v76;
    uint64_t v45 = v77;
    uint64_t v46 = v78;
    uint64_t v47 = v79;
    sub_24989CD14(v73, (uint64_t)v74, v75);
    sub_249AEDDA8();
    uint64_t v23 = v73;
    LOBYTE(v73) = 12;
    uint64_t v67 = (uint64_t)v74;
    uint64_t v68 = v23;
    uint64_t v65 = v76;
    uint64_t v66 = v75;
    uint64_t v64 = v77;
    uint64_t v24 = v78;
    uint64_t v25 = v79;
    sub_24989CD14(v23, (uint64_t)v74, v75);
    uint64_t v43 = sub_249AEDD98();
    int v44 = v26;
    char v115 = v26 & 1;
    LOBYTE(v73) = 13;
    uint64_t v42 = sub_249AEDD58();
    uint64_t v54 = v27;
    char v113 = 14;
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_249AEDD58();
    uint64_t v40 = v29;
    uint64_t v41 = v28;
    v49 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LOBYTE(v72[33]) = v44 & 1;
    LOBYTE(v72[0]) = v10;
    v72[1] = v11;
    v72[2] = v12;
    v72[3] = v13;
    v72[4] = v14;
    v72[5] = v51;
    v72[6] = v50;
    v72[7] = v52;
    v72[8] = v56;
    v72[9] = v57;
    v72[10] = v58;
    v72[11] = v59;
    v72[12] = v61;
    v72[13] = v60;
    v72[14] = v62;
    LOBYTE(v72[15]) = v49;
    v72[16] = v48;
    v72[17] = v55;
    v72[18] = v69;
    v72[19] = v70;
    v72[20] = v71;
    v72[21] = v118;
    v72[22] = v45;
    v72[23] = v46;
    v72[24] = v47;
    v72[25] = v68;
    uint64_t v30 = v66;
    v72[26] = v67;
    v72[27] = v66;
    v72[28] = v65;
    v72[29] = v64;
    v72[30] = v24;
    uint64_t v38 = v24;
    uint64_t v39 = v25;
    v72[31] = v25;
    v72[32] = v43;
    v72[34] = v42;
    v72[35] = v54;
    v72[36] = v41;
    v72[37] = v40;
    sub_2498AEB34(v72);
    swift_bridgeObjectRelease();
    sub_24989CF3C(v68, v67, v30);
    sub_24989CF3C(v69, v70, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v61;
    swift_bridgeObjectRelease();
    uint64_t v32 = v59;
    swift_bridgeObjectRelease();
    uint64_t v33 = v58;
    swift_bridgeObjectRelease();
    uint64_t v34 = v57;
    swift_bridgeObjectRelease();
    uint64_t v35 = v56;
    swift_bridgeObjectRelease();
    uint64_t v36 = v55;
    swift_bridgeObjectRelease();
    memcpy(v53, v72, 0x130uLL);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v63);
    LOBYTE(v73) = v10;
    uint64_t v78 = v51;
    uint64_t v79 = v50;
    uint64_t v80 = v52;
    uint64_t v81 = v35;
    *(_DWORD *)((char *)&v73 + 1) = v117[0];
    HIDWORD(v73) = *(_DWORD *)((char *)v117 + 3);
    uint64_t v74 = (void *)v11;
    uint64_t v75 = v12;
    uint64_t v76 = v13;
    uint64_t v77 = v14;
    uint64_t v82 = v34;
    uint64_t v83 = v33;
    uint64_t v84 = v32;
    uint64_t v85 = v31;
    uint64_t v86 = v60;
    uint64_t v87 = v62;
    char v88 = v49;
    *(_DWORD *)uint64_t v89 = *(_DWORD *)v116;
    *(_DWORD *)&v89[3] = *(_DWORD *)&v116[3];
    uint64_t v90 = v48;
    uint64_t v91 = v36;
    uint64_t v92 = v69;
    uint64_t v93 = v70;
    uint64_t v94 = v71;
    uint64_t v95 = v118;
    uint64_t v96 = v45;
    uint64_t v97 = v46;
    uint64_t v98 = v47;
    uint64_t v99 = v68;
    uint64_t v100 = v67;
    uint64_t v101 = v66;
    uint64_t v102 = v65;
    uint64_t v103 = v64;
    uint64_t v104 = v38;
    uint64_t v105 = v39;
    uint64_t v106 = v43;
    char v107 = v115;
    *(_DWORD *)char v108 = *(_DWORD *)v114;
    *(_DWORD *)&v108[3] = *(_DWORD *)&v114[3];
    uint64_t v109 = v42;
    uint64_t v110 = v54;
    uint64_t v111 = v41;
    uint64_t v112 = v40;
    return sub_2498AEC6C(&v73);
  }
}

void *sub_2498AB0A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.DialConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2498AB0B8(void *a1)
{
  return Instrument.GaugeStyle.DialConfiguration.encode(to:)(a1);
}

uint64_t sub_2498AB0D0()
{
  sub_249AEE338();
  Instrument.GaugeStyle.DialConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t sub_2498AB114()
{
  sub_249AEE338();
  Instrument.GaugeStyle.DialConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

void *sub_2498AB154(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2498AB28C(a1, a2, a3, a4, &qword_2696DE2A0, &qword_2696DDE90);
}

void *sub_2498AB168(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2A8);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498ADAB0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498AB278(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2498AB28C(a1, a2, a3, a4, &qword_2696DE370, &qword_2696DDEB0);
}

void *sub_2498AB28C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      void v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498AD9A4(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_2498AB3BC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2498AC538(a1, a2, a3, a4, &qword_2696DE368);
}

void *sub_2498AB3D0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2498AC2F0(a1, a2, a3, a4, &qword_2696DE320);
}

uint64_t sub_2498AB3DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2498AB9A8(a1, a2, a3, a4, &qword_2696DE2D0, (uint64_t (*)(void))type metadata accessor for Layout, (uint64_t (*)(void))type metadata accessor for Layout);
}

void *sub_2498AB410(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE388);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498ADCB0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498AB520(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE380);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498AE1E8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498AB630(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0C8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 136);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[17 * v8 + 4]) {
          memmove(v12, a4 + 4, 136 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498ADEA8(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498AB754(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE360);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498ADDBC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498AB864(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE378);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498ADDBC(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2498AB974(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2498AB9A8(a1, a2, a3, a4, &qword_2696DE2E8, (uint64_t (*)(void))type metadata accessor for Component, (uint64_t (*)(void))type metadata accessor for Component);
}

uint64_t sub_2498AB9A8(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_249AEDC48();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_2498AE08C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

void *sub_2498ABC28(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE350);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498AE2DC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498ABD38(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE328);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498ADBBC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498ABE48(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE348);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 479;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 9);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[64 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498AE3E8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2498ABF58(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2B8);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498B061C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2498AC054(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2498AB9A8(a1, a2, a3, a4, &qword_2696DE2E0, (uint64_t (*)(void))type metadata accessor for Slot, (uint64_t (*)(void))type metadata accessor for Slot);
}

void *sub_2498AC088(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE340);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[19 * v8 + 4]) {
          memmove(v12, a4 + 4, 152 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498ADF98(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2498AC1B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_2498AB9A8(a1, a2, a3, a4, &qword_2696DE338, (uint64_t (*)(void))type metadata accessor for Zone, (uint64_t (*)(void))type metadata accessor for Zone);
}

char *sub_2498AC1E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE330);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498B061C(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498AC2E4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2498AC2F0(a1, a2, a3, a4, &qword_2696DE308);
}

void *sub_2498AC2F0(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      uint64_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498AD6B4(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_2498AC3FC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2D8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 480);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[60 * v8 + 4]) {
          memmove(v12, a4 + 4, 480 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498B0524(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498AC524(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_2498AC538(a1, a2, a3, a4, &qword_2696DE2C8);
}

void *sub_2498AC538(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 24);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[3 * v9 + 4]) {
          memmove(v13, a4 + 4, 24 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498B0704(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_2498AC668(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2C0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      size_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498B07F8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498AC790(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2F0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      size_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498AD894(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498AC8B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE310);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_2498AD5C8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_2498AC9C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE318);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32]) {
          memmove(v13, a4 + 32, 2 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_2498AD4DC(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_2498ACAD4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE300);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 88);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[11 * v8 + 4]) {
          memmove(v12, a4 + 4, 88 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_2498AD7A0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_2498ACC00()
{
  return sub_249AEE378();
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO17DialConfigurationV10TickColorsV2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v13 = a2[6];
  uint64_t v14 = a1[6];
  if ((sub_249889080(*a1, *a2) & 1) == 0
    || (sub_249889080(v2, v7) & 1) == 0
    || (sub_249889080(v4, v9) & 1) == 0
    || (sub_249889080(v3, v8) & 1) == 0
    || (sub_249889080(v6, v11) & 1) == 0
    || (sub_249889080(v5, v10) & 1) == 0)
  {
    return 0;
  }

  return sub_249889180(v14, v13);
}

unint64_t sub_2498ACD4C()
{
  unint64_t result = qword_2696DE1D0;
  if (!qword_2696DE1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE1D0);
  }
  return result;
}

uint64_t sub_2498ACDA0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DE1D8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO17DialConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, char *a2)
{
  double v3 = *(double *)(a1 + 8);
  double v2 = *(double *)(a1 + 16);
  double v5 = *(double *)(a1 + 24);
  double v4 = *(double *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v91 = *(void *)(a1 + 56);
  long long v89 = *(_OWORD *)(a1 + 80);
  long long v90 = *(_OWORD *)(a1 + 64);
  long long v88 = *(_OWORD *)(a1 + 96);
  uint64_t v87 = *(void *)(a1 + 112);
  int v83 = *(unsigned __int8 *)(a1 + 120);
  uint64_t v80 = *(void *)(a1 + 128);
  uint64_t v82 = *(void *)(a1 + 136);
  uint64_t v74 = *(void **)(a1 + 160);
  uint64_t v75 = *(void *)(a1 + 144);
  uint64_t v76 = *(void *)(a1 + 168);
  long long v77 = *(_OWORD *)(a1 + 176);
  uint64_t v72 = *(void *)(a1 + 152);
  uint64_t v73 = *(void *)(a1 + 192);
  long long v62 = *(_OWORD *)(a1 + 200);
  uint64_t v63 = *(void *)(a1 + 224);
  long long v64 = *(_OWORD *)(a1 + 232);
  uint64_t v65 = *(void **)(a1 + 216);
  uint64_t v61 = *(void *)(a1 + 248);
  char v53 = *(unsigned char *)(a1 + 264);
  uint64_t v47 = *(void *)(a1 + 272);
  uint64_t v49 = *(void *)(a1 + 256);
  uint64_t v50 = *(void *)(a1 + 280);
  uint64_t v43 = *(void *)(a1 + 288);
  uint64_t v45 = *(void *)(a1 + 296);
  char v8 = *a2;
  double v10 = *((double *)a2 + 1);
  double v9 = *((double *)a2 + 2);
  double v12 = *((double *)a2 + 3);
  double v11 = *((double *)a2 + 4);
  LOBYTE(v96) = *(unsigned char *)a1;
  uint64_t v13 = *((void *)a2 + 5);
  uint64_t v14 = *((void *)a2 + 6);
  long long v84 = *((_OWORD *)a2 + 4);
  long long v85 = *((_OWORD *)a2 + 5);
  long long v86 = *((_OWORD *)a2 + 6);
  LOBYTE(v92) = v8;
  int v52 = a2[264];
  uint64_t v15 = *((void *)a2 + 7);
  uint64_t v16 = *((void *)a2 + 14);
  int v17 = a2[120];
  uint64_t v81 = *((void *)a2 + 17);
  uint64_t v66 = *((void *)a2 + 18);
  uint64_t v67 = *((void *)a2 + 19);
  uint64_t v78 = (void *)*((void *)a2 + 20);
  uint64_t v79 = *((void *)a2 + 16);
  uint64_t v68 = *((void *)a2 + 21);
  uint64_t v69 = *((void *)a2 + 22);
  uint64_t v70 = *((void *)a2 + 23);
  uint64_t v71 = *((void *)a2 + 24);
  uint64_t v54 = *((void *)a2 + 25);
  uint64_t v55 = *((void *)a2 + 26);
  uint64_t v56 = *((void *)a2 + 28);
  uint64_t v57 = *((void *)a2 + 29);
  uint64_t v58 = *((void *)a2 + 30);
  uint64_t v59 = *((void *)a2 + 31);
  uint64_t v60 = (void *)*((void *)a2 + 27);
  uint64_t v48 = *((void *)a2 + 32);
  uint64_t v46 = *((void *)a2 + 34);
  uint64_t v51 = *((void *)a2 + 35);
  uint64_t v42 = *((void *)a2 + 36);
  uint64_t v44 = *((void *)a2 + 37);
  unint64_t v18 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v20 = v19;
  if (v18 == InstrumentDataIdentifier.rawValue.getter() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
    BOOL result = 0;
  }
  else
  {
    char v23 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v23 & 1) == 0) {
      return result;
    }
  }
  if (v3 == v10 && v2 == v9 && v5 == v12 && v4 == v11 && v7 == v13 && v6 == v14 && v91 == v15)
  {
    long long v96 = v90;
    long long v97 = v89;
    long long v98 = v88;
    uint64_t v99 = v87;
    long long v92 = v84;
    long long v93 = v85;
    long long v94 = v86;
    uint64_t v95 = v16;
    BOOL v24 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO17DialConfigurationV10TickColorsV2eeoiySbAI_AItFZ_0((uint64_t *)&v96, (uint64_t *)&v92);
    BOOL result = 0;
    if (v24 && ((v83 ^ v17) & 1) == 0)
    {
      if (v82)
      {
        if (!v81) {
          return 0;
        }
        if (v80 != v79 || v82 != v81)
        {
          char v25 = sub_249AEE0D8();
          BOOL result = 0;
          if ((v25 & 1) == 0) {
            return result;
          }
        }
      }
      else if (v81)
      {
        return 0;
      }
      if (v74)
      {
        uint64_t v26 = v72;
        *(void *)&long long v96 = v75;
        *((void *)&v96 + 1) = v72;
        *(void *)&long long v97 = v74;
        *((void *)&v97 + 1) = v76;
        long long v98 = v77;
        uint64_t v99 = v73;
        if (v78)
        {
          LOBYTE(v92) = v66;
          *((void *)&v92 + 1) = v67;
          *(void *)&long long v93 = v78;
          *((void *)&v93 + 1) = v68;
          LOWORD(v94) = v69 & 0x101;
          *((void *)&v94 + 1) = v70;
          uint64_t v95 = v71;
          sub_24989CD14(v75, v72, v74);
          id v27 = v74;
          swift_bridgeObjectRetain();
          char v28 = _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v96, (uint64_t)&v92);
          uint64_t v29 = (void *)v97;
          swift_bridgeObjectRelease();

          sub_24989CF3C(v75, v72, v74);
          if ((v28 & 1) == 0) {
            return 0;
          }
          goto LABEL_26;
        }
        id v35 = v74;
        swift_bridgeObjectRetain();
        uint64_t v30 = 0;
      }
      else
      {
        uint64_t v26 = v72;
        uint64_t v30 = v78;
        if (!v78)
        {
LABEL_26:
          if (v65)
          {
            long long v96 = v62;
            *(void *)&long long v97 = v65;
            *((void *)&v97 + 1) = v63;
            long long v98 = v64;
            uint64_t v31 = v60;
            uint64_t v99 = v61;
            if (v60)
            {
              LOBYTE(v92) = v54;
              *((void *)&v92 + 1) = v55;
              *(void *)&long long v93 = v60;
              *((void *)&v93 + 1) = v56;
              LOWORD(v94) = v57 & 0x101;
              *((void *)&v94 + 1) = v58;
              uint64_t v95 = v59;
              sub_24989CD14(v62, *((uint64_t *)&v62 + 1), v65);
              id v32 = v65;
              swift_bridgeObjectRetain();
              char v33 = _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v96, (uint64_t)&v92);
              uint64_t v34 = (void *)v97;
              swift_bridgeObjectRelease();

              sub_24989CF3C(v62, *((uint64_t *)&v62 + 1), v65);
              if ((v33 & 1) == 0) {
                return 0;
              }
              goto LABEL_33;
            }
            id v39 = v65;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v31 = v60;
            if (!v60)
            {
LABEL_33:
              if (v53)
              {
                if (!v52) {
                  return 0;
                }
              }
              else
              {
                char v40 = v52;
                if (v49 != v48) {
                  char v40 = 1;
                }
                if (v40) {
                  return 0;
                }
              }
              if (v50)
              {
                if (!v51) {
                  return 0;
                }
                if (v47 != v46 || v50 != v51)
                {
                  char v41 = sub_249AEE0D8();
                  BOOL result = 0;
                  if ((v41 & 1) == 0) {
                    return result;
                  }
                }
              }
              else if (v51)
              {
                return 0;
              }
              if (v45) {
                return v44 && (v43 == v42 && v45 == v44 || (sub_249AEE0D8() & 1) != 0);
              }
              return !v44;
            }
          }
          sub_24989CD14(v54, v55, v31);
          sub_24989CF3C(v62, *((uint64_t *)&v62 + 1), v65);
          uint64_t v36 = v54;
          uint64_t v37 = v55;
          uint64_t v38 = v31;
LABEL_38:
          sub_24989CF3C(v36, v37, v38);
          return 0;
        }
      }
      sub_24989CD14(v66, v67, v30);
      sub_24989CF3C(v75, v26, v74);
      uint64_t v36 = v66;
      uint64_t v37 = v67;
      uint64_t v38 = v30;
      goto LABEL_38;
    }
  }
  return result;
}

char *sub_2498AD4DC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    double v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  BOOL result = (char *)sub_249AEDCB8();
  __break(1u);
  return result;
}

char *sub_2498AD5C8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    double v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  BOOL result = (char *)sub_249AEDCB8();
  __break(1u);
  return result;
}

char *sub_2498AD6B4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    double v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  BOOL result = (char *)sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498AD7A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 88 * a1 + 32;
    unint64_t v6 = a3 + 88 * v4;
    if (v5 >= v6 || v5 + 88 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498AD894(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2F8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498AD9A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498ADAB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2B0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498ADBBC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498ADCB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEC0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

char *sub_2498ADDBC(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_249AEDCB8();
  __break(1u);
  return result;
}

char *sub_2498ADEA8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 136 * a1 + 32);
    size_t v6 = 136 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498ADF98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 152 * a1 + 32;
    unint64_t v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498AE08C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498AE1E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498AE2DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE358);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498AE3E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 9) + 32;
    unint64_t v6 = a3 + (v4 << 9);
    if (v5 >= v6 || v5 + (v4 << 9) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498AE4DC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F43657669746361 && a2 == 0xEC00000073726F6CLL;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000249B14860 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000249B14880 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6576697463616E69 && a2 == 0xEE0073726F6C6F43 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000249B148A0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B148C0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73706F7473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2498AE7D0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, double))
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4) {
    return 0;
  }
  double v7 = *(double *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v8 = 0;
  while (1)
  {
    uint64_t v9 = swift_retain();
    if (a3(v9, v7)) {
      break;
    }
    swift_release();
    if (v3 - 1 != v8)
    {
      double v7 = *(double *)(a1 + 8 * v8++ + 40);
      if (v4 != v8) {
        continue;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return *(void *)&v7;
}

BOOL sub_2498AE8CC(double a1)
{
  return (a1 - *(double *)(*(void *)(v1 + 16) + 8))
       / (*(double *)(*(void *)(v1 + 16) + 16) - *(double *)(*(void *)(v1 + 16) + 8)) >= *(double *)(v1 + 24);
}

uint64_t sub_2498AE8F0()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

unint64_t sub_2498AE930()
{
  unint64_t result = qword_2696DE218;
  if (!qword_2696DE218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE218);
  }
  return result;
}

unint64_t sub_2498AE984()
{
  unint64_t result = qword_2696DE230;
  if (!qword_2696DE230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE230);
  }
  return result;
}

unint64_t sub_2498AE9D8()
{
  unint64_t result = qword_2696DE238;
  if (!qword_2696DE238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE238);
  }
  return result;
}

uint64_t sub_2498AEA2C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498AEA8C()
{
  unint64_t result = qword_2696DE250;
  if (!qword_2696DE250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE250);
  }
  return result;
}

unint64_t sub_2498AEAE0()
{
  unint64_t result = qword_2696DE258;
  if (!qword_2696DE258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE258);
  }
  return result;
}

void *sub_2498AEB34(void *a1)
{
  uint64_t v3 = a1[18];
  uint64_t v2 = a1[19];
  unint64_t v5 = (void *)a1[20];
  uint64_t v7 = a1[26];
  uint64_t v8 = a1[25];
  char v6 = (void *)a1[27];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24989CD14(v3, v2, v5);
  sub_24989CD14(v8, v7, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2498AEC6C(void *a1)
{
  uint64_t v2 = a1[18];
  uint64_t v3 = a1[19];
  unint64_t v5 = (void *)a1[20];
  uint64_t v7 = a1[26];
  uint64_t v8 = a1[25];
  char v6 = (void *)a1[27];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24989CF3C(v2, v3, v5);
  sub_24989CF3C(v8, v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2498AEDA4()
{
  unint64_t result = qword_2696DE260;
  if (!qword_2696DE260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE260);
  }
  return result;
}

unint64_t sub_2498AEDFC()
{
  unint64_t result = qword_2696DE268;
  if (!qword_2696DE268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE268);
  }
  return result;
}

uint64_t _s14descr26FD9EE19O17DialConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 160);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v3 = *(void **)(a1 + 216);
  if (v3)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s14descr26FD9EE19O17DialConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v7;
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v8 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v8;
  uint64_t v9 = *(void **)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v9)
  {
    long long v15 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v15;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    unint64_t v12 = *(void **)(a2 + 216);
    if (v12) {
      goto LABEL_3;
    }
LABEL_5:
    long long v16 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v16;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    goto LABEL_6;
  }
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v9;
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
  uint64_t v10 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v10;
  id v11 = v9;
  swift_bridgeObjectRetain();
  unint64_t v12 = *(void **)(a2 + 216);
  if (!v12) {
    goto LABEL_5;
  }
LABEL_3:
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v12;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  uint64_t v13 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v13;
  id v14 = v12;
  swift_bridgeObjectRetain();
LABEL_6:
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v17 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v17;
  uint64_t v18 = *(void *)(a2 + 288);
  uint64_t v19 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = v18;
  *(void *)(a1 + 296) = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr26FD9EE19O17DialConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 144);
  uint64_t v5 = (long long *)(a2 + 144);
  uint64_t v6 = *(void **)(a1 + 160);
  uint64_t v7 = *(void *)(a2 + 160);
  if (v6)
  {
    if (v7)
    {
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      uint64_t v8 = *(void **)(a2 + 160);
      *(void *)(a1 + 160) = v8;
      id v9 = v8;

      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24989E520(a1 + 144);
      long long v13 = *(_OWORD *)(a2 + 160);
      long long v12 = *(_OWORD *)(a2 + 176);
      long long v14 = *v5;
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(_OWORD *)(a1 + 160) = v13;
      *(_OWORD *)(a1 + 176) = v12;
      *uint64_t v4 = v14;
    }
  }
  else if (v7)
  {
    *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    uint64_t v10 = *(void **)(a2 + 160);
    *(void *)(a1 + 160) = v10;
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
    *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    id v11 = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v15 = *v5;
    long long v16 = *(_OWORD *)(a2 + 160);
    long long v17 = *(_OWORD *)(a2 + 176);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(_OWORD *)(a1 + 160) = v16;
    *(_OWORD *)(a1 + 176) = v17;
    *uint64_t v4 = v15;
  }
  uint64_t v18 = (_OWORD *)(a1 + 200);
  uint64_t v19 = (long long *)(a2 + 200);
  uint64_t v20 = *(void **)(a1 + 216);
  uint64_t v21 = *(void *)(a2 + 216);
  if (v20)
  {
    if (v21)
    {
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      unint64_t v22 = *(void **)(a2 + 216);
      *(void *)(a1 + 216) = v22;
      id v23 = v22;

      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24989E520(a1 + 200);
      long long v27 = *(_OWORD *)(a2 + 216);
      long long v26 = *(_OWORD *)(a2 + 232);
      long long v28 = *v19;
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(_OWORD *)(a1 + 216) = v27;
      *(_OWORD *)(a1 + 232) = v26;
      *uint64_t v18 = v28;
    }
  }
  else if (v21)
  {
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    BOOL v24 = *(void **)(a2 + 216);
    *(void *)(a1 + 216) = v24;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    id v25 = v24;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v29 = *v19;
    long long v30 = *(_OWORD *)(a2 + 216);
    long long v31 = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v30;
    *(_OWORD *)(a1 + 232) = v31;
    *uint64_t v18 = v29;
  }
  uint64_t v32 = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  *(void *)(a1 + 256) = v32;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy304_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x130uLL);
}

uint64_t _s14descr26FD9EE19O17DialConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  uint64_t v5 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void **)(a1 + 160);
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 160);
    if (v7)
    {
      *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = v7;

      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
      *(unsigned char *)(a1 + 177) = *(unsigned char *)(a2 + 177);
      uint64_t v8 = *(void *)(a2 + 192);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24989E520(a1 + 144);
  }
  long long v9 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
LABEL_6:
  uint64_t v10 = *(void **)(a1 + 216);
  if (!v10)
  {
LABEL_10:
    long long v13 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v13;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    goto LABEL_11;
  }
  uint64_t v11 = *(void *)(a2 + 216);
  if (!v11)
  {
    sub_24989E520(a1 + 200);
    goto LABEL_10;
  }
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v11;

  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
  uint64_t v12 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v12;
  swift_bridgeObjectRelease();
LABEL_11:
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(unsigned char *)(a1 + 264) = *(unsigned char *)(a2 + 264);
  uint64_t v14 = *(void *)(a2 + 280);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 296);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr26FD9EE19O17DialConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 304)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr26FD9EE19O17DialConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 296) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 304) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 304) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DialConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.DialConfiguration;
}

uint64_t _s14descr26FD9EE19O17DialConfigurationV10TickColorsVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14descr26FD9EE19O17DialConfigurationV10TickColorsVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14descr26FD9EE19O17DialConfigurationV10TickColorsVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s14descr26FD9EE19O17DialConfigurationV10TickColorsVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr26FD9EE19O17DialConfigurationV10TickColorsVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr26FD9EE19O17DialConfigurationV10TickColorsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DialConfiguration.TickColors()
{
  return &type metadata for Instrument.GaugeStyle.DialConfiguration.TickColors;
}

uint64_t _s14descr26FD9EE19O17DialConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr26FD9EE19O17DialConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *__n128 result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498AFBA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O17DialConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O17DialConfigurationV10CodingKeysON;
}

unsigned char *_s14descr26FD9EE19O17DialConfigurationV10TickColorsV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498AFCACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O17DialConfigurationV10TickColorsV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O17DialConfigurationV10TickColorsV10CodingKeysON;
}

unint64_t sub_2498AFCE8()
{
  unint64_t result = qword_2696DE270;
  if (!qword_2696DE270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE270);
  }
  return result;
}

unint64_t sub_2498AFD40()
{
  unint64_t result = qword_2696DE278;
  if (!qword_2696DE278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE278);
  }
  return result;
}

unint64_t sub_2498AFD98()
{
  unint64_t result = qword_2696DE280;
  if (!qword_2696DE280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE280);
  }
  return result;
}

unint64_t sub_2498AFDF0()
{
  unint64_t result = qword_2696DE288;
  if (!qword_2696DE288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE288);
  }
  return result;
}

unint64_t sub_2498AFE48()
{
  unint64_t result = qword_2696DE290;
  if (!qword_2696DE290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE290);
  }
  return result;
}

unint64_t sub_2498AFEA0()
{
  unint64_t result = qword_2696DE298;
  if (!qword_2696DE298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE298);
  }
  return result;
}

uint64_t sub_2498AFEF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x73646E756F62 && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x416D756D696E696DLL && a2 == 0xEC000000656C676ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x416D756D6978616DLL && a2 == 0xEC000000656C676ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B148E0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B14900 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B14920 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F6C6F436B636974 && a2 == 0xEA00000000007372 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6C6465654E736168 && a2 == 0xE900000000000065 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x67616D496E6F6369 && a2 == 0xED0000656D614E65 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000249B14940 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000249B14960 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000249B14980 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B149B0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B149D0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 14;
    }
    else {
      return 15;
    }
  }
}

uint64_t sub_2498B0524(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 480 * a1 + 32;
    unint64_t v6 = a3 + 480 * v4;
    if (v5 >= v6 || v5 + 480 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

char *sub_2498B061C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498B0704(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498B07F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t LayerHostView.body.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for WrapLayer();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  id v4 = v1;

  return MEMORY[0x270EFF588](v2, sub_2498B0E64, v3, v2);
}

uint64_t type metadata accessor for WrapLayer()
{
  return self;
}

uint64_t sub_2498B09A8()
{
  return sub_249AEC728();
}

uint64_t sub_2498B09C4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for WrapLayer();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  id v4 = v1;

  return MEMORY[0x270EFF588](v2, sub_2498B0F38, v3, v2);
}

id sub_2498B0B20()
{
  id result = objc_msgSend(v0, sel_sublayers);
  if (result)
  {
    uint64_t v2 = result;
    sub_2498B0EF8();
    unint64_t v3 = sub_249AED428();

    if (v3 >> 62)
    {
      swift_bridgeObjectRetain();
      id result = (id)sub_249AEDC78();
      uint64_t v4 = (uint64_t)result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id result = (id)swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_4:
        if (v4 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v5 = 0;
        do
        {
          if ((v3 & 0xC000000000000001) != 0) {
            id v6 = (id)MEMORY[0x24C5AEC50](v5, v3);
          }
          else {
            id v6 = *(id *)(v3 + 8 * v5 + 32);
          }
          BOOL v7 = v6;
          ++v5;
          objc_msgSend(v0, sel_bounds);
          objc_msgSend(v7, sel_setFrame_);
        }
        while (v4 != v5);
      }
    }
    return (id)swift_bridgeObjectRelease_n();
  }
  return result;
}

id sub_2498B0D74()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WrapLayer();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_2498B0DAC(void *a1, id a2)
{
  id v4 = objc_msgSend(a2, sel_superlayer);

  if (!v4)
  {
    objc_msgSend(a1, sel_addSublayer_, a2);
  }
}

uint64_t sub_2498B0E2C()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_2498B0E64(void *a1)
{
  sub_2498B0DAC(a1, *(id *)(v1 + 16));
}

uint64_t sub_2498B0E6C()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for LayerHostView()
{
  return &type metadata for LayerHostView;
}

unint64_t sub_2498B0E9C()
{
  unint64_t result = qword_2696DE390;
  if (!qword_2696DE390)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DE398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE390);
  }
  return result;
}

unint64_t sub_2498B0EF8()
{
  unint64_t result = qword_2696DE3A0;
  if (!qword_2696DE3A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2696DE3A0);
  }
  return result;
}

CarPlayAssetUI::VehicleType_optional __swiftcall VehicleType.init(rawValue:)(Swift::String rawValue)
{
  objc_super v2 = v1;
  uint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *objc_super v2 = v5;
  return result;
}

void *static VehicleType.allCases.getter()
{
  return &unk_26FDA0A18;
}

uint64_t VehicleType.rawValue.getter()
{
  if (*v0) {
    return 4539209;
  }
  else {
    return 22085;
  }
}

uint64_t sub_2498B0FD8(char *a1, char *a2)
{
  return sub_2498F1CC0(*a1, *a2);
}

uint64_t sub_2498B0FE4()
{
  return sub_249AEE388();
}

uint64_t sub_2498B1054()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498B10B0()
{
  return sub_249AEE388();
}

CarPlayAssetUI::VehicleType_optional sub_2498B111C(Swift::String *a1)
{
  return VehicleType.init(rawValue:)(*a1);
}

void sub_2498B1128(uint64_t *a1@<X8>)
{
  uint64_t v2 = 22085;
  if (*v1) {
    uint64_t v2 = 4539209;
  }
  unint64_t v3 = 0xE200000000000000;
  if (*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_2498B1154(void *a1@<X8>)
{
  *a1 = &unk_26FDA0A40;
}

uint64_t sub_2498B1164()
{
  return sub_249AED3A8();
}

uint64_t sub_2498B11C4()
{
  return sub_249AED348();
}

void static VehicleType.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

unint64_t sub_2498B1224()
{
  unint64_t result = qword_2696DE3A8;
  if (!qword_2696DE3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE3A8);
  }
  return result;
}

unint64_t sub_2498B127C()
{
  unint64_t result = qword_2696DE3B0;
  if (!qword_2696DE3B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DE3B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE3B0);
  }
  return result;
}

unint64_t sub_2498B12DC()
{
  unint64_t result = qword_2696DE3C0;
  if (!qword_2696DE3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE3C0);
  }
  return result;
}

unint64_t sub_2498B1334()
{
  unint64_t result = qword_2696DE3C8;
  if (!qword_2696DE3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE3C8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for VehicleType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498B1454);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VehicleType()
{
  return &type metadata for VehicleType;
}

unint64_t sub_2498B148C()
{
  unint64_t result = qword_2696DE3D0;
  if (!qword_2696DE3D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE3D0);
  }
  return result;
}

void TrackingView.init(identifier:cornerRadius:)(void *a1@<X8>, double a2@<D0>)
{
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15768]), sel_init);
  uint64_t v5 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setIdentifier_, v5);

  objc_msgSend(v4, sel_setCornerRadius_, a2);
  *a1 = v4;
}

id TrackingView.body.getter@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t sub_2498B1594()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_2498B15B0@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

ValueMetadata *type metadata accessor for TrackingView()
{
  return &type metadata for TrackingView;
}

unint64_t sub_2498B15D0()
{
  unint64_t result = qword_2696DE3D8;
  if (!qword_2696DE3D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE3D8);
  }
  return result;
}

BOOL static PresentationStyle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t PresentationStyle.hash(into:)()
{
  return sub_249AEE348();
}

uint64_t PresentationStyle.hashValue.getter()
{
  return sub_249AEE388();
}

void static AppWidgetInfo.media.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000012;
  a1[1] = 0x8000000249B13480;
  a1[2] = 0;
  a1[3] = 0;
}

double static WidgetInfo.vitals.getter@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_249AF2A40;
  *(void *)(a1 + 16) = 0xD00000000000001ALL;
  *(void *)(a1 + 24) = 0x8000000249B14B80;
  *(void *)(a1 + 32) = 0xD000000000000013;
  *(void *)(a1 + 40) = 0x8000000249B14BA0;
  double result = 2.0;
  *(_OWORD *)(a1 + 48) = xmmword_249AF2A50;
  *(void *)(a1 + 64) = 0x8000000249B14BC0;
  return result;
}

double static WidgetInfo.home.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000021;
  *(void *)(a1 + 8) = 0x8000000249B14BE0;
  *(void *)(a1 + 16) = 0xD000000000000025;
  *(void *)(a1 + 24) = 0x8000000249B14C10;
  double result = 2.21366487e214;
  *(_OWORD *)(a1 + 32) = xmmword_249AF2A60;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = 0x4000000000000000;
  return result;
}

void static WidgetInfo.reminders.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x8000000249B14C40;
  a1[2] = 0xD000000000000023;
  a1[3] = 0x8000000249B14C60;
  a1[4] = 0xD000000000000013;
  a1[5] = 0x8000000249B14C90;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.findMy.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000022;
  a1[1] = 0x8000000249B14CB0;
  a1[2] = 0xD000000000000022;
  a1[3] = 0x8000000249B14CB0;
  a1[4] = 0xD000000000000010;
  a1[5] = 0x8000000249B14CE0;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.photos.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000002CLL;
  a1[1] = 0x8000000249B14D00;
  a1[2] = 0xD00000000000002CLL;
  a1[3] = 0x8000000249B14D00;
  a1[4] = 0xD000000000000019;
  a1[5] = 0x8000000249B14D30;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.batteries.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x8000000249B14D50;
  a1[2] = 0xD000000000000033;
  a1[3] = 0x8000000249B14D70;
  a1[4] = 0xD000000000000013;
  a1[5] = 0x8000000249B14DB0;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.clock.getter(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ELL;
  a1[1] = 0x8000000249B14DD0;
  a1[2] = 0xD000000000000026;
  a1[3] = 0x8000000249B14DF0;
  a1[4] = 0xD000000000000015;
  a1[5] = 0x8000000249B14E20;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.weatherForecast.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000026;
  a1[1] = 0x8000000249B14E40;
  a1[2] = 0xD000000000000018;
  a1[3] = 0x8000000249B133A0;
  a1[4] = 0xD000000000000011;
  a1[5] = 0x8000000249B13380;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

void static WidgetInfo.weather.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x8000000249B13380;
  a1[2] = 0xD000000000000018;
  a1[3] = 0x8000000249B133A0;
  a1[4] = 0xD000000000000011;
  a1[5] = 0x8000000249B13380;
  a1[7] = 0;
  a1[8] = 0;
  a1[6] = 0x4000000000000000;
}

double static WidgetInfo.charge.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000013;
  *(void *)(a1 + 8) = 0x8000000249B133C0;
  *(void *)(a1 + 16) = 0xD000000000000012;
  *(void *)(a1 + 24) = 0x8000000249B133E0;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  return result;
}

double static WidgetInfo.trip.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000011;
  *(void *)(a1 + 8) = 0x8000000249B13400;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  return result;
}

double static WidgetInfo.tires.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000019;
  *(void *)(a1 + 8) = 0x8000000249B13420;
  double result = 2.21366487e214;
  *(_OWORD *)(a1 + 16) = xmmword_249AF2A70;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  return result;
}

double static WidgetInfo.carBodyStatus.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000015;
  *(void *)(a1 + 8) = 0x8000000249B13440;
  *(void *)(a1 + 16) = 0xD000000000000017;
  *(void *)(a1 + 24) = 0x8000000249B13460;
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  return result;
}

double static WidgetInfo.adasView.getter@<D0>(uint64_t a1@<X8>)
{
  double result = 1.38080632e267;
  *(_OWORD *)a1 = xmmword_249AF2A80;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 48) = 0x8000000000000000;
  return result;
}

double static WidgetInfo.media.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0xD000000000000012;
  *(void *)(a1 + 8) = 0x8000000249B13480;
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(void *)(a1 + 64) = 0;
  return result;
}

void *static WidgetInfo.allCases.getter()
{
  return &unk_26FDA0A68;
}

void *static WidgetInfo.defaultWidgets.getter()
{
  return &unk_26FDA0C80;
}

void *static WidgetInfo.defaultMapsMediaWidgets.getter()
{
  return &unk_26FDA0D78;
}

uint64_t WidgetInfo.preferredPresentation.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 64);
  v9[0] = 0xD000000000000019;
  v9[1] = 0x8000000249B13420;
  long long v10 = xmmword_249AF2A70;
  long long v11 = 0u;
  long long v12 = 0u;
  uint64_t v13 = 0;
  long long v4 = *(_OWORD *)(v1 + 16);
  v7[0] = *(_OWORD *)v1;
  v7[1] = v4;
  long long v5 = *(_OWORD *)(v1 + 48);
  v7[2] = *(_OWORD *)(v1 + 32);
  v7[3] = v5;
  uint64_t v8 = v3;
  uint64_t result = _s14CarPlayAssetUI10WidgetInfoO2eeoiySbAC_ACtFZ_0(v9, (uint64_t *)v7);
  *a1 = result & 1;
  return result;
}

double static WidgetInfo.getWidgetInfo(requestContentIdentifier:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  BOOL v4 = a1 == 0x7765695673616461 && a2 == 0xE800000000000000;
  if (v4 || (v5 = a2, uint64_t v6 = a1, (sub_249AEE0D8() & 1) != 0))
  {
    double result = 1.38080632e267;
    *(_OWORD *)a3 = xmmword_249AF2A80;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(void *)(a3 + 56) = 0;
    *(void *)(a3 + 64) = 0;
    *(void *)(a3 + 48) = 0x8000000000000000;
    return result;
  }
  id v25 = (uint64_t *)a3;
  uint64_t v8 = qword_26FDA0A78;
  if (qword_26FDA0A78)
  {
    long long v9 = &qword_26FDA0A98;
    uint64_t v26 = v6;
    do
    {
      uint64_t v10 = *(v9 - 2);
      uint64_t v11 = *(v9 - 1);
      uint64_t v12 = *v9;
      uint64_t v13 = v9[1];
      uint64_t v15 = v9[2];
      uint64_t v14 = v9[3];
      unint64_t v16 = v9[4];
      uint64_t v17 = v9[5];
      uint64_t v18 = v9[6];
      uint64_t v19 = *v9;
      uint64_t v20 = v13;
      if (v16 >> 62)
      {
        if (v16 >> 62 != 1) {
          goto LABEL_9;
        }
        uint64_t v19 = v9[5];
        uint64_t v20 = v9[6];
      }
      if (v20)
      {
        if (v19 == v6 && v20 == v5) {
          goto LABEL_19;
        }
        uint64_t v27 = v9[1];
        uint64_t v28 = *v9;
        uint64_t v22 = v5;
        uint64_t v23 = *(v9 - 2);
        char v24 = sub_249AEE0D8();
        uint64_t v13 = v27;
        uint64_t v12 = v28;
        uint64_t v10 = v23;
        uint64_t v5 = v22;
        uint64_t v6 = v26;
        if (v24)
        {
LABEL_19:
          *id v25 = v10;
          v25[1] = v11;
          v25[2] = v12;
          v25[3] = v13;
          _OWORD v25[4] = v15;
          v25[5] = v14;
          v25[6] = v16;
          v25[7] = v17;
          v25[8] = v18;
          sub_2498A48A4(v10, v11, v12, v13, v15, v14, v16);
          return result;
        }
      }
LABEL_9:
      v9 += 9;
      --v8;
    }
    while (v8);
  }
  double result = 0.0;
  *((_OWORD *)v25 + 1) = 0u;
  *((_OWORD *)v25 + 2) = 0u;
  *(_OWORD *)id v25 = 0u;
  v25[7] = 0;
  v25[8] = 0;
  v25[6] = 0x1FFFFFFFELL;
  return result;
}

void sub_2498B1D70(void *a1@<X8>)
{
  *a1 = &unk_26FDA0A68;
}

unint64_t sub_2498B1D84()
{
  unint64_t result = qword_2696DE3E0;
  if (!qword_2696DE3E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE3E0);
  }
  return result;
}

unint64_t sub_2498B1DDC()
{
  unint64_t result = qword_2696DE3E8;
  if (!qword_2696DE3E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DE3F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE3E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PresentationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498B1F04);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PresentationStyle()
{
  return &type metadata for PresentationStyle;
}

uint64_t sub_2498B1F3C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_249A22090(0, v1, 0);
  uint64_t v2 = v26;
  uint64_t result = sub_2498B4618(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v5;
  uint64_t v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 112 * v6);
    uint64_t v13 = v12[1];
    uint64_t v25 = *v12;
    unint64_t v15 = *(void *)(v26 + 16);
    unint64_t v14 = *(void *)(v26 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_249A22090(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v26 + 16) = v15 + 1;
    uint64_t v16 = v26 + 16 * v15;
    *(void *)(v16 + 32) = v25;
    *(void *)(v16 + 40) = v13;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_27;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t Theme.ColorOverride.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (v1[1] < 0)
  {
    sub_249AEE348();
    return sub_24988A120(a1, v3);
  }
  else
  {
    sub_249AEE348();
    ColorSet.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    return sub_249AEE348();
  }
}

uint64_t sub_2498B221C()
{
  if (*v0) {
    return 0x726F6C6F63;
  }
  else {
    return 0x6564616873;
  }
}

uint64_t sub_2498B2248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498B7B60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498B2270(uint64_t a1)
{
  unint64_t v2 = sub_2498B4A00();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498B22AC(uint64_t a1)
{
  unint64_t v2 = sub_2498B4A00();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498B22E8(uint64_t a1)
{
  unint64_t v2 = sub_2498B4A54();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498B2324(uint64_t a1)
{
  unint64_t v2 = sub_2498B4A54();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498B2360()
{
  return 0x6564616873;
}

uint64_t sub_2498B2374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6564616873 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2498B2404(uint64_t a1)
{
  unint64_t v2 = sub_2498B4AA8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498B2440(uint64_t a1)
{
  unint64_t v2 = sub_2498B4AA8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Theme.ColorOverride.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE3F8);
  uint64_t v17 = *(void *)(v3 - 8);
  uint64_t v18 = v3;
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE400);
  uint64_t v20 = *(void *)(v6 - 8);
  uint64_t v21 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE408);
  uint64_t v9 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  unint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v1[1];
  uint64_t v22 = *v1;
  uint64_t v19 = v1[2];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498B4A00();
  sub_249AEE468();
  if (v12 < 0)
  {
    LOBYTE(v24) = 1;
    sub_2498B4A54();
    uint64_t v13 = v23;
    sub_249AEDE48();
    uint64_t v24 = v22;
    sub_24988E158();
    uint64_t v15 = v18;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v15);
  }
  else
  {
    LOBYTE(v24) = 0;
    sub_2498B4AA8();
    uint64_t v13 = v23;
    sub_249AEDE48();
    uint64_t v24 = v22;
    char v25 = v12 & 1;
    uint64_t v26 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE30);
    sub_24989698C(&qword_2696DDE28);
    uint64_t v14 = v21;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v14);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v13);
}

uint64_t Theme.ColorOverride.hashValue.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_249AEE338();
  sub_249AEE348();
  if (v2 < 0)
  {
    sub_24988A120((uint64_t)v4, v1);
  }
  else
  {
    ColorSet.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249AEE348();
  }
  return sub_249AEE388();
}

uint64_t Theme.ColorOverride.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE428);
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE430);
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE438);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v28 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_2498B4A00();
  uint64_t v13 = v32;
  sub_249AEE428();
  if (!v13)
  {
    uint64_t v14 = v27;
    uint64_t v32 = v9;
    uint64_t v15 = sub_249AEDE18();
    if (*(void *)(v15 + 16) == 1)
    {
      if (*(unsigned char *)(v15 + 32))
      {
        LOBYTE(v29) = 1;
        sub_2498B4A54();
        sub_249AEDD38();
        sub_24988E2BC();
        sub_249AEDE08();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v14);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v8);
        uint64_t v16 = 0;
        uint64_t v17 = v29;
        unint64_t v18 = 0x8000000000000000;
      }
      else
      {
        LOBYTE(v29) = 0;
        sub_2498B4AA8();
        sub_249AEDD38();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE30);
        sub_24989698C(&qword_2696DDE58);
        sub_249AEDE08();
        (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v8);
        uint64_t v17 = v29;
        unint64_t v18 = v30;
        uint64_t v16 = v31;
      }
      uint64_t v23 = v24;
      *uint64_t v24 = v17;
      v23[1] = v18;
      void v23[2] = v16;
    }
    else
    {
      uint64_t v19 = sub_249AEDB08();
      swift_allocError();
      uint64_t v21 = v20;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
      *uint64_t v21 = &type metadata for Theme.ColorOverride;
      sub_249AEDD48();
      sub_249AEDAE8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v19 - 8) + 104))(v21, *MEMORY[0x263F8DCB0], v19);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v28);
}

uint64_t sub_2498B2D50@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Theme.ColorOverride.init(from:)(a1, a2);
}

uint64_t sub_2498B2D68(void *a1)
{
  return Theme.ColorOverride.encode(to:)(a1);
}

uint64_t sub_2498B2D84(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (v1[1] < 0)
  {
    sub_249AEE348();
    return sub_24988A120(a1, v3);
  }
  else
  {
    sub_249AEE348();
    ColorSet.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    return sub_249AEE348();
  }
}

uint64_t sub_2498B2E50()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  sub_249AEE338();
  sub_249AEE348();
  if (v2 < 0)
  {
    sub_24988A120((uint64_t)v4, v1);
  }
  else
  {
    ColorSet.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249AEE348();
  }
  return sub_249AEE388();
}

uint64_t Theme.LayoutStyle.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Theme.LayoutStyle.id.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = v2;
  v1[1] = v3;
  return result;
}

uint64_t (*Theme.LayoutStyle.id.modify())()
{
  return nullsub_1;
}

uint64_t Theme.LayoutStyle.colorSetOverrides.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Theme.LayoutStyle.defaultPaletteID.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *a1 = *(void *)(v1 + 24);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Theme.LayoutStyle.defaultPaletteID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  return result;
}

uint64_t (*Theme.LayoutStyle.defaultPaletteID.modify())()
{
  return nullsub_1;
}

uint64_t Theme.LayoutStyle.defaultWallpaperID.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  *a1 = *(void *)(v1 + 40);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Theme.LayoutStyle.defaultWallpaperID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v3;
  return result;
}

uint64_t (*Theme.LayoutStyle.defaultWallpaperID.modify())()
{
  return nullsub_1;
}

uint64_t Theme.LayoutStyle.paletteIDs.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_2498B1F3C(v0);
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t Theme.LayoutStyle.init(id:defaultPaletteID:defaultWallpaperID:colorSetOverrides:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v12 = *a3;
  uint64_t v11 = a3[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_2498B1F3C(a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  char v14 = sub_249A1F488(v10, v9, v13);
  swift_bridgeObjectRelease();
  if (v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *a5 = v8;
    a5[1] = v7;
    a5[2] = a4;
    a5[3] = v10;
    a5[4] = v9;
    a5[5] = v12;
    a5[6] = v11;
  }
  else
  {
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_249AED128();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  return result;
}

uint64_t Theme.LayoutStyle.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988B990(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t Theme.LayoutStyle.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988B990((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

unint64_t sub_2498B33D8(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498B3470(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988B990(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498B3540()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988B990((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

unint64_t sub_2498B361C()
{
  return sub_2498B33D8(*v0);
}

uint64_t sub_2498B3624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498B7C44(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498B364C(uint64_t a1)
{
  unint64_t v2 = sub_2498B4AFC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498B3688(uint64_t a1)
{
  unint64_t v2 = sub_2498B4AFC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Theme.LayoutStyle.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE440);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498B4AFC();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v51 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB18);
  LOBYTE(v59[0]) = 0;
  sub_2498B4CA0(&qword_2696DE450, &qword_2696DDB18);
  sub_249AEDE08();
  long long v9 = v52;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB20);
  LOBYTE(v59[0]) = 2;
  sub_2498B4CA0(&qword_2696DDC38, &qword_2696DDB20);
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  uint64_t v50 = a1;
  uint64_t v46 = v52;
  uint64_t v47 = v9;
  uint64_t v10 = *((void *)&v52 + 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE458);
  LOBYTE(v59[0]) = 3;
  sub_2498B4CA0(&qword_2696DE460, &qword_2696DE458);
  swift_bridgeObjectRetain();
  uint64_t v49 = 0;
  sub_249AEDE08();
  long long v11 = v52;
  LOBYTE(v52) = 1;
  swift_bridgeObjectRetain();
  sub_249AEDD28();
  long long v43 = v11;
  uint64_t v44 = v10;
  uint64_t v45 = *((void *)&v9 + 1);
  __swift_project_boxed_opaque_existential_2Tm(v59, v60);
  if (sub_249AEDF68())
  {
    uint64_t v48 = MEMORY[0x263F8EE80];
LABEL_6:
    (*(void (**)(char *, uint64_t))(v51 + 8))(v7, v4);
    uint64_t v12 = v48;
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v59);
    uint64_t v13 = v68;
    uint64_t v15 = v44;
    uint64_t v14 = v45;
    *uint64_t v68 = v47;
    v13[1] = v14;
    uint64_t v16 = v46;
    void v13[2] = v12;
    v13[3] = v16;
    unint64_t v18 = *((void *)&v43 + 1);
    unint64_t v17 = v43;
    v13[4] = v15;
    *(_OWORD *)(v13 + 5) = __PAIR128__(v18, v17);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v50);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v48 = MEMORY[0x263F8EE80];
    while (1)
    {
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v59, v60);
      sub_2498B4B50();
      sub_249AEDF58();
      long long v65 = v56;
      long long v66 = v57;
      long long v67 = v58;
      long long v61 = v52;
      long long v62 = v53;
      long long v63 = v54;
      long long v64 = v55;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE470);
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v59, v60);
      sub_2498B6E18(&qword_2696DE478, (void (*)(void))sub_24988E268, (void (*)(void))sub_2498B4BA4);
      sub_249AEDF58();
      uint64_t v20 = v52;
      sub_249897A10((uint64_t)&v61);
      uint64_t v21 = v48;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v52 = v21;
      unint64_t v24 = sub_2498EF0DC(&v61);
      uint64_t v25 = *(void *)(v21 + 16);
      BOOL v26 = (v23 & 1) == 0;
      uint64_t v27 = v25 + v26;
      if (__OFADD__(v25, v26)) {
        break;
      }
      if (*(void *)(v21 + 24) >= v27)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          char v41 = v23;
          sub_2498E033C();
          char v23 = v41;
        }
      }
      else
      {
        char v28 = v23;
        sub_2498E4828(v27, isUniquelyReferenced_nonNull_native);
        unint64_t v29 = sub_2498EF0DC(&v61);
        if ((v28 & 1) != (v30 & 1)) {
          goto LABEL_21;
        }
        unint64_t v24 = v29;
        char v23 = v28;
      }
      uint64_t v31 = (void *)v52;
      uint64_t v48 = v52;
      if (v23)
      {
        uint64_t v19 = *(void *)(v52 + 56);
        swift_bridgeObjectRelease();
        *(void *)(v19 + 8 * v24) = v20;
      }
      else
      {
        *(void *)(v52 + 8 * (v24 >> 6) + 64) |= 1 << v24;
        uint64_t v32 = (_OWORD *)(v31[6] + 112 * v24);
        long long v34 = v62;
        long long v33 = v63;
        *uint64_t v32 = v61;
        v32[1] = v34;
        _OWORD v32[2] = v33;
        long long v35 = v64;
        long long v36 = v65;
        long long v37 = v67;
        v32[5] = v66;
        void v32[6] = v37;
        v32[3] = v35;
        v32[4] = v36;
        *(void *)(v31[7] + 8 * v24) = v20;
        uint64_t v38 = v31[2];
        BOOL v39 = __OFADD__(v38, 1);
        uint64_t v40 = v38 + 1;
        if (v39) {
          goto LABEL_20;
        }
        v31[2] = v40;
        sub_249897A10((uint64_t)&v61);
      }
      swift_bridgeObjectRelease();
      sub_2498B4BF8((uint64_t)&v61);
      sub_2498B4BF8((uint64_t)&v61);
      __swift_project_boxed_opaque_existential_2Tm(v59, v60);
      if (sub_249AEDF68()) {
        goto LABEL_6;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
  }
  return result;
}

uint64_t Theme.LayoutStyle.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE488);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)v1;
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v52 = *(void *)(v1 + 16);
  long long v9 = *(void **)(v1 + 24);
  uint64_t v53 = *(void *)(v1 + 32);
  long long v54 = v9;
  uint64_t v51 = *(void **)(v1 + 40);
  uint64_t v50 = *(void *)(v1 + 48);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498B4AFC();
  sub_249AEE468();
  long long v55 = v7;
  uint64_t v56 = v8;
  uint64_t v10 = v3;
  long long v11 = v6;
  v69[0] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB18);
  sub_2498B4CA0(&qword_2696DE490, &qword_2696DDB18);
  uint64_t v12 = v72;
  sub_249AEDF08();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v14 = v50;
  uint64_t v15 = v51;
  uint64_t v16 = v52;
  uint64_t v49 = v4;
  long long v55 = v54;
  uint64_t v56 = v53;
  v69[0] = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB20);
  sub_2498B4CA0(&qword_2696DDC00, &qword_2696DDB20);
  sub_249AEDF08();
  long long v55 = v15;
  uint64_t v56 = v14;
  v69[0] = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE458);
  sub_2498B4CA0(&qword_2696DE498, &qword_2696DE458);
  sub_249AEDF08();
  uint64_t v17 = v49;
  LOBYTE(v55) = 1;
  sub_249AEDE38();
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  unint64_t v18 = sub_2498E8EE8(v16);
  swift_bridgeObjectRelease();
  long long v55 = v18;
  sub_2498B6D20(&v55);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v19 = v55;
  uint64_t v20 = v55[2];
  if (v20)
  {
    long long v37 = v11;
    uint64_t v38 = v10;
    swift_retain();
    v36[1] = v19;
    uint64_t v21 = v19 + 9;
    while (1)
    {
      uint64_t v42 = 0;
      uint64_t v22 = (void *)*(v21 - 2);
      uint64_t v53 = *(v21 - 3);
      long long v54 = v22;
      uint64_t v23 = *v21;
      uint64_t v72 = *(v21 - 1);
      uint64_t v25 = v21[1];
      uint64_t v24 = v21[2];
      int v26 = *((unsigned __int8 *)v21 + 24);
      uint64_t v28 = v21[5];
      uint64_t v27 = v21[6];
      uint64_t v29 = v21[8];
      uint64_t v51 = (void *)v21[9];
      uint64_t v52 = v29;
      char v30 = *((unsigned char *)v21 + 56);
      uint64_t v31 = v21[4];
      uint64_t v32 = *(v21 - 4);
      long long v55 = (void *)*(v21 - 5);
      uint64_t v56 = v32;
      uint64_t v57 = v53;
      long long v58 = v22;
      uint64_t v59 = v72;
      uint64_t v60 = v23;
      uint64_t v61 = v25;
      uint64_t v62 = v24;
      char v63 = v26;
      uint64_t v64 = v31;
      uint64_t v65 = v28;
      uint64_t v66 = v27;
      char v67 = v30;
      uint64_t v68 = v29;
      uint64_t v40 = v70;
      uint64_t v41 = v71;
      uint64_t v39 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v69, v70);
      uint64_t v43 = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v44 = v23;
      uint64_t v45 = v25;
      uint64_t v46 = v24;
      int v47 = v26;
      sub_24988CD7C((uint64_t)v54, v72, v23, v25, v24, v26);
      uint64_t v48 = v28;
      uint64_t v33 = v28;
      long long v34 = v51;
      uint64_t v50 = v27;
      sub_24988CDF0(v33);
      sub_2498B6DC4();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v35 = v42;
      sub_249AEDF78();
      if (v35) {
        break;
      }
      long long v55 = v34;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v69, v70);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE470);
      sub_2498B6E18(&qword_2696DE4A8, (void (*)(void))sub_24988E104, (void (*)(void))sub_2498B6EA0);
      sub_249AEDF78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249889FFC((uint64_t)v54, v72, v44, v45, v46, v47);
      sub_24988D7A0(v48);
      swift_bridgeObjectRelease();
      swift_release();
      v21 += 15;
      if (!--v20)
      {
        swift_release();
        uint64_t v10 = v38;
        uint64_t v17 = v49;
        long long v11 = v37;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249889FFC((uint64_t)v54, v72, v44, v45, v46, v47);
    sub_24988D7A0(v48);
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v37, v38);
  }
  else
  {
LABEL_8:
    swift_release();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v11, v10);
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v69);
}

uint64_t sub_2498B45E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Theme.LayoutStyle.init(from:)(a1, a2);
}

uint64_t sub_2498B4600(void *a1)
{
  return Theme.LayoutStyle.encode(to:)(a1);
}

uint64_t sub_2498B4618(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  long long v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t _s14CarPlayAssetUI5ThemeO11LayoutStyleV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v11 = a2[6];
  if (*a1 == *a2 && a1[1] == a2[1] || (v12 = sub_249AEE0D8(), uint64_t result = 0, (v12 & 1) != 0))
  {
    if (sub_2499FE45C(v2, v8))
    {
      if (v3 == v7 && v4 == v10 || (v14 = sub_249AEE0D8(), uint64_t result = 0, (v14 & 1) != 0))
      {
        if (v5 == v9 && v6 == v11)
        {
          return 1;
        }
        else
        {
          return sub_249AEE0D8();
        }
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t _s14CarPlayAssetUI5ThemeO13ColorOverrideO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v6 = *a2;
  uint64_t v5 = a2[1];
  uint64_t v7 = a2[2];
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((v5 & 0x8000000000000000) == 0)
    {
      uint64_t v8 = ColorSet.ColorID.rawValue.getter();
      uint64_t v10 = v9;
      if (v8 == ColorSet.ColorID.rawValue.getter() && v10 == v11)
      {
        swift_bridgeObjectRelease_n();
        sub_249890CBC(v3, v2);
        sub_249890CBC(v6, v5);
        if (v4 == v7) {
          return 1;
        }
      }
      else
      {
        char v13 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_249890CBC(v3, v2);
        sub_249890CBC(v6, v5);
        if ((v13 & 1) != 0 && v4 == v7) {
          return 1;
        }
      }
      return 0;
    }
LABEL_9:
    sub_249890CB0(v6, v5);
    sub_249890CBC(v3, v2);
    sub_249890CBC(v6, v5);
    return 0;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  sub_249890CB0(*a2, a2[1]);
  sub_249890CB0(v3, v2);
  sub_249890CB0(v6, v5);
  sub_249890CB0(v3, v2);
  char v14 = sub_2499FE290(v3, v6);
  sub_249890CBC(v3, v2);
  sub_249890CBC(v6, v5);
  sub_249890CBC(v6, v5);
  sub_249890CBC(v3, v2);
  return v14 & 1;
}

unint64_t sub_2498B4A00()
{
  unint64_t result = qword_2696DE410;
  if (!qword_2696DE410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE410);
  }
  return result;
}

unint64_t sub_2498B4A54()
{
  unint64_t result = qword_2696DE418;
  if (!qword_2696DE418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE418);
  }
  return result;
}

unint64_t sub_2498B4AA8()
{
  unint64_t result = qword_2696DE420;
  if (!qword_2696DE420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE420);
  }
  return result;
}

unint64_t sub_2498B4AFC()
{
  unint64_t result = qword_2696DE448;
  if (!qword_2696DE448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE448);
  }
  return result;
}

unint64_t sub_2498B4B50()
{
  unint64_t result = qword_2696DE468;
  if (!qword_2696DE468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE468);
  }
  return result;
}

unint64_t sub_2498B4BA4()
{
  unint64_t result = qword_2696DE480;
  if (!qword_2696DE480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE480);
  }
  return result;
}

uint64_t sub_2498B4BF8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 80);
  char v8 = *(unsigned char *)(a1 + 64);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249889FFC(v2, v3, v4, v5, v6, v8);
  sub_24988D7A0(v7);
  swift_release();
  return a1;
}

uint64_t sub_2498B4CA0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2498B4D04(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 120;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 120;
  uint64_t v72 = __src;
  uint64_t v71 = __dst;
  if (v8 >= v10)
  {
    if (v9 >= -119)
    {
      if (__dst != a2 || &a2[120 * v10] <= __dst) {
        memmove(__dst, a2, 120 * v10);
      }
      uint64_t v17 = &v4[120 * v10];
      uint64_t v70 = v17;
      uint64_t v72 = v5;
      if (v6 < v5 && v9 >= 120)
      {
        __dstb = (char *)(a3 - 120);
        unint64_t v18 = v5;
        do
        {
          char v19 = *(v17 - 56);
          uint64_t v42 = *((void *)v17 - 5);
          uint64_t v45 = *((void *)v17 - 12);
          v18 -= 120;
          uint64_t v36 = *((void *)v18 + 4);
          uint64_t v37 = *((void *)v18 + 3);
          uint64_t v34 = *((void *)v18 + 5);
          uint64_t v32 = *((void *)v18 + 6);
          char v28 = v18[64];
          uint64_t v29 = *((void *)v18 + 10);
          uint64_t v30 = *((void *)v18 + 7);
          uint64_t v66 = *((void *)v17 - 11);
          uint64_t v67 = *((void *)v17 - 10);
          uint64_t v68 = *((void *)v17 - 9);
          uint64_t v69 = *((void *)v17 - 8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24988CD7C(v45, v66, v67, v68, v69, v19);
          sub_24988CDF0(v42);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24988CD7C(v37, v36, v34, v32, v30, v28);
          sub_24988CDF0(v29);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v57 == v48 && v58 == v49) {
            char v23 = 0;
          }
          else {
            char v23 = sub_249AEE0D8();
          }
          uint64_t v24 = __dstb + 120;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_249889FFC(v50, v51, v52, v53, v54, v55);
          sub_24988D7A0(v56);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_249889FFC(v59, v60, v61, v62, v63, v64);
          sub_24988D7A0(v65);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_249889FFC(v37, v36, v34, v32, v30, v28);
          sub_24988D7A0(v29);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_249889FFC(v45, v66, v67, v68, v69, v19);
          sub_24988D7A0(v42);
          swift_bridgeObjectRelease();
          swift_release();
          if (v23)
          {
            if (v24 != v5 || __dstb >= v5) {
              memmove(__dstb, v18, 0x78uLL);
            }
            uint64_t v72 = v18;
          }
          else
          {
            uint64_t v70 = v17 - 120;
            if (v24 < v17 || __dstb >= v17 || v24 != v17) {
              memmove(__dstb, v17 - 120, 0x78uLL);
            }
            unint64_t v18 = v5;
            v17 -= 120;
          }
          if (v17 <= v4) {
            break;
          }
          __dstb -= 120;
          uint64_t v5 = v18;
        }
        while (v18 > v6);
      }
      goto LABEL_46;
    }
  }
  else if (v7 >= -119)
  {
    if (__dst != __src || &__src[120 * v8] <= __dst) {
      memmove(__dst, __src, 120 * v8);
    }
    uint64_t v21 = &v4[120 * v8];
    uint64_t v70 = v21;
    if ((unint64_t)v5 < a3 && v7 >= 120)
    {
      do
      {
        int v26 = v6;
        uint64_t v11 = *((void *)v5 + 3);
        uint64_t v12 = *((void *)v5 + 4);
        uint64_t v13 = *((void *)v5 + 5);
        __dsta = (void *)*((void *)v5 + 6);
        uint64_t v44 = *((void *)v5 + 7);
        char v43 = v5[64];
        uint64_t v14 = *((void *)v5 + 10);
        uint64_t v41 = *((void *)v4 + 3);
        uint64_t v39 = *((void *)v4 + 5);
        uint64_t v40 = *((void *)v4 + 4);
        uint64_t v38 = *((void *)v4 + 6);
        char v31 = v4[64];
        uint64_t v33 = *((void *)v4 + 10);
        uint64_t v35 = *((void *)v4 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24988CD7C(v11, v12, v13, (uint64_t)__dsta, v44, v43);
        sub_24988CDF0(v14);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24988CD7C(v41, v40, v39, v38, v35, v31);
        sub_24988CDF0(v33);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        uint64_t v27 = v4;
        if (v57 == v48 && v58 == v49) {
          char v25 = 0;
        }
        else {
          char v25 = sub_249AEE0D8();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_249889FFC(v50, v51, v52, v53, v54, v55);
        sub_24988D7A0(v56);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_249889FFC(v59, v60, v61, v62, v63, v64);
        sub_24988D7A0(v65);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_249889FFC(v41, v40, v39, v38, v35, v31);
        sub_24988D7A0(v33);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_249889FFC(v11, v12, v13, (uint64_t)__dsta, v44, v43);
        sub_24988D7A0(v14);
        swift_bridgeObjectRelease();
        swift_release();
        if (v25)
        {
          uint64_t v15 = v5 + 120;
          uint64_t v16 = v26;
          if (v26 < v5 || v26 >= v15 || v26 != v5) {
            memmove(v26, v5, 0x78uLL);
          }
        }
        else
        {
          uint64_t v16 = v26;
          uint64_t v15 = v5;
          if (v26 != v4) {
            memmove(v26, v4, 0x78uLL);
          }
          v4 += 120;
          uint64_t v71 = v27 + 120;
        }
        uint64_t v6 = v16 + 120;
        if (v4 >= v21) {
          break;
        }
        uint64_t v5 = v15;
      }
      while ((unint64_t)v15 < a3);
      uint64_t v72 = v6;
    }
LABEL_46:
    sub_24998ED4C((void **)&v72, &v71, &v70);
    return 1;
  }
  swift_release();
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498B5618(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v24 = result;
  if (a3 != a2)
  {
    uint64_t v26 = *a4;
    uint64_t v4 = (void *)(*a4 + 120 * a3 + 112);
LABEL_5:
    uint64_t v27 = a3;
    uint64_t v5 = v26 + 120 * a3;
    uint64_t v6 = *(void *)(v5 + 24);
    uint64_t v8 = *(void *)(v5 + 32);
    uint64_t v7 = *(void *)(v5 + 40);
    uint64_t v9 = *(void *)(v5 + 48);
    uint64_t v10 = *(void *)(v5 + 56);
    char v37 = *(unsigned char *)(v5 + 64);
    uint64_t v11 = *(void *)(v5 + 80);
    uint64_t v28 = v24;
    char v25 = v4;
    while (1)
    {
      uint64_t v35 = *(v4 - 25);
      uint64_t v36 = *(v4 - 26);
      uint64_t v34 = *(v4 - 24);
      uint64_t v33 = *(v4 - 23);
      char v30 = *((unsigned char *)v4 - 168);
      uint64_t v31 = *(v4 - 19);
      uint64_t v32 = *(v4 - 22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24988CD7C(v6, v8, v7, v9, v10, v37);
      sub_24988CDF0(v11);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24988CD7C(v36, v35, v34, v33, v32, v30);
      sub_24988CDF0(v31);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v47 == v38 && v48 == v39) {
        char v29 = 0;
      }
      else {
        char v29 = sub_249AEE0D8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249889FFC(v40, v41, v42, v43, v44, v45);
      sub_24988D7A0(v46);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249889FFC(v49, v50, v51, v52, v53, v54);
      sub_24988D7A0(v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_249889FFC(v36, v35, v34, v33, v32, v30);
      sub_24988D7A0(v31);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_249889FFC(v6, v8, v7, v9, v10, v37);
      sub_24988D7A0(v11);
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      if ((v29 & 1) == 0)
      {
LABEL_4:
        a3 = v27 + 1;
        uint64_t v4 = v25 + 15;
        if (v27 + 1 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v26) {
        break;
      }
      uint64_t v12 = *(v4 - 14);
      uint64_t result = *(v4 - 13);
      uint64_t v13 = *(v4 - 12);
      uint64_t v6 = *(v4 - 11);
      uint64_t v8 = *(v4 - 10);
      uint64_t v7 = *(v4 - 9);
      uint64_t v9 = *(v4 - 8);
      uint64_t v10 = *(v4 - 7);
      char v14 = *((unsigned char *)v4 - 48);
      uint64_t v15 = *(v4 - 5);
      uint64_t v11 = *(v4 - 4);
      uint64_t v16 = *(v4 - 3);
      char v17 = *((unsigned char *)v4 - 16);
      uint64_t v18 = *(v4 - 1);
      uint64_t v19 = *v4;
      long long v20 = *(_OWORD *)(v4 - 19);
      *((_OWORD *)v4 - 3) = *(_OWORD *)(v4 - 21);
      *((_OWORD *)v4 - 2) = v20;
      *((_OWORD *)v4 - 1) = *(_OWORD *)(v4 - 17);
      *uint64_t v4 = *(v4 - 15);
      long long v21 = *(_OWORD *)(v4 - 23);
      *((_OWORD *)v4 - 5) = *(_OWORD *)(v4 - 25);
      *((_OWORD *)v4 - 4) = v21;
      long long v22 = *(_OWORD *)(v4 - 27);
      *((_OWORD *)v4 - 7) = *(_OWORD *)(v4 - 29);
      *((_OWORD *)v4 - 6) = v22;
      *(v4 - 15) = v19;
      v4 -= 15;
      *(v4 - 14) = v12;
      *(v4 - 13) = result;
      *(v4 - 12) = v13;
      *(v4 - 11) = v6;
      *(v4 - 10) = v8;
      *(v4 - 9) = v7;
      *(v4 - 8) = v9;
      *(v4 - 7) = v10;
      char v37 = v14;
      *((unsigned char *)v4 - 48) = v14;
      *(v4 - 5) = v15;
      *(v4 - 4) = v11;
      *(v4 - 3) = v16;
      *((unsigned char *)v4 - 16) = v17;
      *(v4 - 1) = v18;
      if (v27 == ++v28) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2498B5A94(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  swift_retain_n();
  uint64_t v2 = sub_249AEDF38();
  if (v2 >= v1)
  {
    if (v1 < 0) {
      goto LABEL_151;
    }
    if (v1)
    {
      swift_retain();
      sub_2498B5618(0, v1, 1, a1);
    }
    swift_release_n();
    return swift_release();
  }
  if (v1 >= 0) {
    uint64_t v3 = v1;
  }
  else {
    uint64_t v3 = v1 + 1;
  }
  if (v1 < -1) {
    goto LABEL_159;
  }
  uint64_t v133 = v1;
  uint64_t v129 = v2;
  if (v1 < 2)
  {
    uint64_t v135 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v128 = MEMORY[0x263F8EE78];
    if (v1 == 1) {
      goto LABEL_13;
    }
    unint64_t v9 = *(void *)(MEMORY[0x263F8EE78] + 16);
    uint64_t v7 = (char *)MEMORY[0x263F8EE78];
LABEL_113:
    if (v9 >= 2)
    {
      uint64_t v112 = *a1;
      do
      {
        unint64_t v113 = v9 - 2;
        if (v9 < 2) {
          goto LABEL_146;
        }
        if (!v112) {
          goto LABEL_158;
        }
        uint64_t v139 = (uint64_t)v7;
        uint64_t v114 = *(void *)&v7[16 * v113 + 32];
        uint64_t v115 = *(void *)&v7[16 * v9 + 24];
        uint64_t v116 = (char *)(v112 + 120 * *(void *)&v7[16 * v9 + 16]);
        swift_retain();
        sub_2498B4D04((char *)(v112 + 120 * v114), v116, v112 + 120 * v115, v135);
        if (v136) {
          goto LABEL_127;
        }
        swift_release();
        if (v115 < v114) {
          goto LABEL_147;
        }
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v117 = (char *)v139;
        }
        else {
          uint64_t v117 = sub_24998EF90(v139);
        }
        if (v113 >= *((void *)v117 + 2)) {
          goto LABEL_148;
        }
        uint64_t v118 = v117 + 32;
        uint64_t v119 = &v117[16 * v113 + 32];
        *(void *)uint64_t v119 = v114;
        *((void *)v119 + 1) = v115;
        unint64_t v120 = *((void *)v117 + 2);
        if (v9 > v120) {
          goto LABEL_149;
        }
        char v121 = &v118[16 * v9 - 16];
        uint64_t v122 = &v118[16 * v9];
        size_t v123 = 16 * (v120 - v9);
        char v124 = v117;
        memmove(v121, v122, v123);
        uint64_t v7 = v124;
        *((void *)v124 + 2) = v120 - 1;
        unint64_t v9 = v120 - 1;
      }
      while (v120 > 2);
    }
    swift_bridgeObjectRelease();
    *(void *)(v128 + 16) = 0;
LABEL_128:
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v4 = v3 >> 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE530);
  uint64_t v5 = sub_249AED488();
  *(void *)(v5 + 16) = v4;
  uint64_t v128 = v5;
  uint64_t v135 = (char *)(v5 + 32);
LABEL_13:
  uint64_t v6 = 0;
  uint64_t v140 = *a1;
  uint64_t v126 = *a1 + 112;
  uint64_t v127 = *a1 + 176;
  uint64_t v7 = (char *)MEMORY[0x263F8EE78];
  uint64_t v8 = v1;
  while (1)
  {
    uint64_t v10 = v6 + 1;
    uint64_t v137 = v7;
    uint64_t v132 = v6;
    if (v6 + 1 < v8)
    {
      uint64_t v11 = v140 + 120 * v10;
      uint64_t v12 = *(void *)(v11 + 24);
      uint64_t v13 = *(void *)(v11 + 32);
      uint64_t v14 = *(void *)(v11 + 40);
      uint64_t v15 = *(void *)(v11 + 48);
      uint64_t v16 = *(void *)(v11 + 56);
      char v17 = *(unsigned char *)(v11 + 64);
      uint64_t v18 = *(void *)(v11 + 80);
      uint64_t v19 = v140 + 120 * v6;
      uint64_t v171 = *(void *)(v19 + 32);
      uint64_t v167 = *(void *)(v19 + 40);
      uint64_t v163 = *(void *)(v19 + 48);
      uint64_t v158 = *(void *)(v19 + 56);
      char v153 = *(unsigned char *)(v19 + 64);
      uint64_t v156 = *(void *)(v19 + 80);
      uint64_t v174 = *(void *)(v19 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24988CD7C(v12, v13, v14, v15, v16, v17);
      sub_24988CDF0(v18);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24988CD7C(v174, v171, v167, v163, v158, v153);
      sub_24988CDF0(v156);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v188 == v179 && v189 == v180) {
        int v145 = 0;
      }
      else {
        int v145 = sub_249AEE0D8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249889FFC(v181, v182, v183, v184, v185, v186);
      sub_24988D7A0(v187);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249889FFC(v190, v191, v192, v193, v194, v195);
      sub_24988D7A0(v196);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_249889FFC(v174, v171, v167, v163, v158, v153);
      sub_24988D7A0(v156);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_249889FFC(v12, v13, v14, v15, v16, v17);
      sub_24988D7A0(v18);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v6 = v132;
      uint64_t v10 = v132 + 2;
      if (v132 + 2 < v133)
      {
        uint64_t v20 = v127 + 120 * v132;
        while (1)
        {
          uint64_t v197 = *(void *)(v20 + 88);
          uint64_t v21 = *(void *)(v20 + 104);
          uint64_t v22 = *(void *)(v20 + 112);
          uint64_t v23 = *(void *)(v20 + 120);
          char v24 = *(unsigned char *)(v20 + 128);
          uint64_t v25 = *(void *)(v20 + 144);
          uint64_t v177 = *(void *)(v20 + 96);
          uint64_t v168 = *(void *)(v20 - 32);
          uint64_t v164 = *(void *)(v20 - 24);
          uint64_t v160 = *(void *)(v20 - 16);
          uint64_t v159 = *(void *)(v20 - 8);
          char v150 = *(unsigned char *)(v20 + 8);
          uint64_t v151 = *(void *)(v20 + 24);
          uint64_t v154 = *(void *)v20;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24988CD7C(v197, v177, v21, v22, v23, v24);
          sub_24988CDF0(v25);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24988CD7C(v168, v164, v160, v159, v154, v150);
          sub_24988CDF0(v151);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          uint64_t v141 = v10;
          if (v188 != v179) {
            goto LABEL_26;
          }
          if (v189 == v180) {
            int v148 = 0;
          }
          else {
LABEL_26:
          }
            int v148 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_249889FFC(v181, v182, v183, v184, v185, v186);
          sub_24988D7A0(v187);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_249889FFC(v190, v191, v192, v193, v194, v195);
          sub_24988D7A0(v196);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_249889FFC(v168, v164, v160, v159, v154, v150);
          sub_24988D7A0(v151);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_249889FFC(v197, v177, v21, v22, v23, v24);
          sub_24988D7A0(v25);
          swift_bridgeObjectRelease();
          swift_release();
          if ((v145 ^ v148)) {
            break;
          }
          ++v10;
          v20 += 120;
          if (v133 == v141 + 1)
          {
            uint64_t v10 = v133;
            uint64_t v6 = v132;
            goto LABEL_31;
          }
        }
        uint64_t v6 = v132;
      }
LABEL_31:
      if (v145)
      {
        if (v10 < v6) {
          goto LABEL_152;
        }
        if (v6 < v10)
        {
          uint64_t v26 = 120 * v10;
          uint64_t v27 = v10;
          uint64_t v28 = v6;
          uint64_t v29 = 120 * v6;
          do
          {
            if (v28 != --v27)
            {
              if (!v140) {
                goto LABEL_157;
              }
              uint64_t v30 = *(void *)(v140 + v29);
              uint64_t v31 = v140 + v26;
              uint64_t v32 = *(void *)(v140 + v29 + 56);
              char v33 = *(unsigned char *)(v140 + v29 + 64);
              uint64_t v198 = *(void *)(v140 + v29 + 88);
              char v178 = *(unsigned char *)(v140 + v29 + 96);
              uint64_t v175 = *(void *)(v140 + v29 + 112);
              uint64_t v176 = *(void *)(v140 + v29 + 104);
              long long v165 = *(_OWORD *)(v140 + v29 + 24);
              long long v169 = *(_OWORD *)(v140 + v29 + 8);
              long long v161 = *(_OWORD *)(v140 + v29 + 40);
              long long v172 = *(_OWORD *)(v140 + v29 + 72);
              memmove((void *)(v140 + v29), (const void *)(v140 + v26 - 120), 0x78uLL);
              *(void *)(v31 - 120) = v30;
              *(_OWORD *)(v31 - 112) = v169;
              *(_OWORD *)(v31 - 96) = v165;
              *(_OWORD *)(v31 - 80) = v161;
              *(void *)(v31 - 64) = v32;
              *(unsigned char *)(v31 - 56) = v33;
              *(_OWORD *)(v31 - 48) = v172;
              *(void *)(v31 - 32) = v198;
              *(unsigned char *)(v31 - 24) = v178;
              *(void *)(v31 - 16) = v176;
              *(void *)(v31 - 8) = v175;
            }
            ++v28;
            v26 -= 120;
            v29 += 120;
          }
          while (v28 < v27);
          uint64_t v6 = v132;
        }
      }
    }
    if (v10 < v133)
    {
      if (__OFSUB__(v10, v6)) {
        goto LABEL_150;
      }
      if (v10 - v6 < v129) {
        break;
      }
    }
LABEL_62:
    if (v10 < v6) {
      goto LABEL_145;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v7 = v137;
    }
    else {
      uint64_t v7 = sub_24998EB7C(0, *((void *)v137 + 2) + 1, 1, v137);
    }
    unint64_t v61 = *((void *)v7 + 2);
    unint64_t v60 = *((void *)v7 + 3);
    unint64_t v9 = v61 + 1;
    if (v61 >= v60 >> 1) {
      uint64_t v7 = sub_24998EB7C((char *)(v60 > 1), v61 + 1, 1, v7);
    }
    *((void *)v7 + 2) = v9;
    uint64_t v62 = v7 + 32;
    uint64_t v63 = &v7[16 * v61 + 32];
    *(void *)uint64_t v63 = v132;
    *((void *)v63 + 1) = v10;
    uint64_t v143 = v10;
    if (v61)
    {
      uint64_t v138 = v7;
      v200 = v7 + 32;
      while (1)
      {
        unint64_t v64 = v9 - 1;
        if (v9 >= 4)
        {
          uint64_t v69 = &v62[16 * v9];
          uint64_t v70 = *((void *)v69 - 8);
          uint64_t v71 = *((void *)v69 - 7);
          BOOL v75 = __OFSUB__(v71, v70);
          uint64_t v72 = v71 - v70;
          if (v75) {
            goto LABEL_134;
          }
          uint64_t v74 = *((void *)v69 - 6);
          uint64_t v73 = *((void *)v69 - 5);
          BOOL v75 = __OFSUB__(v73, v74);
          uint64_t v67 = v73 - v74;
          char v68 = v75;
          if (v75) {
            goto LABEL_135;
          }
          unint64_t v76 = v9 - 2;
          long long v77 = &v62[16 * v9 - 32];
          uint64_t v79 = *(void *)v77;
          uint64_t v78 = *((void *)v77 + 1);
          BOOL v75 = __OFSUB__(v78, v79);
          uint64_t v80 = v78 - v79;
          if (v75) {
            goto LABEL_137;
          }
          BOOL v75 = __OFADD__(v67, v80);
          uint64_t v81 = v67 + v80;
          if (v75) {
            goto LABEL_140;
          }
          if (v81 >= v72)
          {
            uint64_t v99 = &v62[16 * v64];
            uint64_t v101 = *(void *)v99;
            uint64_t v100 = *((void *)v99 + 1);
            BOOL v75 = __OFSUB__(v100, v101);
            uint64_t v102 = v100 - v101;
            if (v75) {
              goto LABEL_144;
            }
            BOOL v92 = v67 < v102;
            goto LABEL_100;
          }
        }
        else
        {
          if (v9 != 3)
          {
            uint64_t v93 = *((void *)v7 + 4);
            uint64_t v94 = *((void *)v7 + 5);
            BOOL v75 = __OFSUB__(v94, v93);
            uint64_t v86 = v94 - v93;
            char v87 = v75;
            goto LABEL_94;
          }
          uint64_t v66 = *((void *)v7 + 4);
          uint64_t v65 = *((void *)v7 + 5);
          BOOL v75 = __OFSUB__(v65, v66);
          uint64_t v67 = v65 - v66;
          char v68 = v75;
        }
        if (v68) {
          goto LABEL_136;
        }
        unint64_t v76 = v9 - 2;
        uint64_t v82 = &v62[16 * v9 - 32];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v85 = __OFSUB__(v83, v84);
        uint64_t v86 = v83 - v84;
        char v87 = v85;
        if (v85) {
          goto LABEL_139;
        }
        long long v88 = &v62[16 * v64];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v75 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v75) {
          goto LABEL_142;
        }
        if (__OFADD__(v86, v91)) {
          goto LABEL_143;
        }
        if (v86 + v91 >= v67)
        {
          BOOL v92 = v67 < v91;
LABEL_100:
          if (v92) {
            unint64_t v64 = v76;
          }
          goto LABEL_102;
        }
LABEL_94:
        if (v87) {
          goto LABEL_138;
        }
        uint64_t v95 = &v62[16 * v64];
        uint64_t v97 = *(void *)v95;
        uint64_t v96 = *((void *)v95 + 1);
        BOOL v75 = __OFSUB__(v96, v97);
        uint64_t v98 = v96 - v97;
        if (v75) {
          goto LABEL_141;
        }
        if (v98 < v86) {
          goto LABEL_15;
        }
LABEL_102:
        unint64_t v103 = v64 - 1;
        if (v64 - 1 >= v9)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v140) {
          goto LABEL_156;
        }
        uint64_t v104 = &v62[16 * v103];
        uint64_t v105 = *(void *)v104;
        unint64_t v106 = v64;
        char v107 = &v62[16 * v64];
        uint64_t v108 = *((void *)v107 + 1);
        uint64_t v109 = (char *)(v140 + 120 * *(void *)v104);
        uint64_t v110 = (char *)(v140 + 120 * *(void *)v107);
        swift_retain();
        sub_2498B4D04(v109, v110, v140 + 120 * v108, v135);
        if (v136)
        {
LABEL_127:
          swift_bridgeObjectRelease();
          swift_release();
          *(void *)(v128 + 16) = 0;
          goto LABEL_128;
        }
        swift_release();
        if (v108 < v105) {
          goto LABEL_131;
        }
        if (v106 > *((void *)v138 + 2)) {
          goto LABEL_132;
        }
        *(void *)uint64_t v104 = v105;
        uint64_t v62 = v200;
        *(void *)&v200[16 * v103 + 8] = v108;
        unint64_t v111 = *((void *)v138 + 2);
        if (v106 >= v111) {
          goto LABEL_133;
        }
        unint64_t v9 = v111 - 1;
        memmove(v107, v107 + 16, 16 * (v111 - 1 - v106));
        uint64_t v7 = v138;
        *((void *)v138 + 2) = v111 - 1;
        if (v111 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v9 = 1;
LABEL_15:
    uint64_t v8 = v133;
    uint64_t v6 = v143;
    if (v143 >= v133) {
      goto LABEL_113;
    }
  }
  if (__OFADD__(v6, v129)) {
    goto LABEL_153;
  }
  if (v6 + v129 >= v133) {
    uint64_t v34 = v133;
  }
  else {
    uint64_t v34 = v6 + v129;
  }
  if (v34 >= v6)
  {
    if (v10 != v34)
    {
      uint64_t v35 = (void *)(v126 + 120 * v10);
      uint64_t v36 = v140;
      uint64_t v131 = v34;
      do
      {
        uint64_t v142 = v10;
        uint64_t v38 = v36 + 120 * v10;
        uint64_t v39 = *(void *)(v38 + 24);
        uint64_t v40 = *(void *)(v38 + 40);
        uint64_t v199 = *(void *)(v38 + 32);
        uint64_t v41 = *(void *)(v38 + 48);
        uint64_t v42 = *(void *)(v38 + 56);
        char v43 = *(unsigned char *)(v38 + 64);
        uint64_t v44 = *(void *)(v38 + 80);
        char v134 = v35;
        while (1)
        {
          uint64_t v147 = v6;
          char v144 = v35;
          uint64_t v173 = *(v35 - 26);
          uint64_t v170 = *(v35 - 25);
          uint64_t v166 = *(v35 - 24);
          uint64_t v162 = *(v35 - 23);
          char v152 = *((unsigned char *)v35 - 168);
          uint64_t v155 = *(v35 - 19);
          uint64_t v157 = *(v35 - 22);
          v146 = v35 - 29;
          uint64_t v45 = v44;
          uint64_t v46 = v41;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v149 = v39;
          sub_24988CD7C(v39, v199, v40, v46, v42, v43);
          sub_24988CDF0(v45);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_24988CD7C(v173, v170, v166, v162, v157, v152);
          sub_24988CDF0(v155);
          swift_retain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v188 != v179) {
            goto LABEL_56;
          }
          if (v189 == v180) {
            char v47 = 0;
          }
          else {
LABEL_56:
          }
            char v47 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_249889FFC(v181, v182, v183, v184, v185, v186);
          sub_24988D7A0(v187);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_249889FFC(v190, v191, v192, v193, v194, v195);
          sub_24988D7A0(v196);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_249889FFC(v173, v170, v166, v162, v157, v152);
          sub_24988D7A0(v155);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_249889FFC(v149, v199, v40, v46, v42, v43);
          sub_24988D7A0(v45);
          swift_bridgeObjectRelease();
          swift_release();
          if ((v47 & 1) == 0) {
            break;
          }
          uint64_t v36 = v140;
          uint64_t v37 = v142;
          if (!v140) {
            goto LABEL_155;
          }
          uint64_t v49 = *(v144 - 14);
          uint64_t v48 = *(v144 - 13);
          uint64_t v50 = *(v144 - 12);
          uint64_t v39 = *(v144 - 11);
          uint64_t v51 = *(v144 - 10);
          uint64_t v40 = *(v144 - 9);
          uint64_t v41 = *(v144 - 8);
          uint64_t v42 = *(v144 - 7);
          char v43 = *((unsigned char *)v144 - 48);
          uint64_t v52 = *(v144 - 5);
          uint64_t v44 = *(v144 - 4);
          uint64_t v53 = *(v144 - 3);
          char v54 = *((unsigned char *)v144 - 16);
          uint64_t v55 = *(v144 - 1);
          uint64_t v56 = *v144;
          long long v57 = *((_OWORD *)v146 + 5);
          *(_OWORD *)(v146 + 23) = *((_OWORD *)v146 + 4);
          *(_OWORD *)(v146 + 25) = v57;
          *(_OWORD *)(v146 + 27) = *((_OWORD *)v146 + 6);
          v146[29] = v146[14];
          long long v58 = *((_OWORD *)v146 + 3);
          *(_OWORD *)(v146 + 19) = *((_OWORD *)v146 + 2);
          *(_OWORD *)(v146 + 21) = v58;
          long long v59 = *((_OWORD *)v146 + 1);
          *(_OWORD *)(v146 + 15) = *(_OWORD *)v146;
          *(_OWORD *)(v146 + 17) = v59;
          *(v144 - 15) = v56;
          uint64_t v35 = v144 - 15;
          *(v144 - 29) = v49;
          *(v144 - 28) = v48;
          *(v144 - 27) = v50;
          *(v144 - 26) = v39;
          uint64_t v199 = v51;
          *(v144 - 25) = v51;
          *(v144 - 24) = v40;
          *(v144 - 23) = v41;
          *(v144 - 22) = v42;
          *((unsigned char *)v144 - 168) = v43;
          *(v144 - 20) = v52;
          *(v144 - 19) = v44;
          *(v144 - 18) = v53;
          *((unsigned char *)v144 - 136) = v54;
          uint64_t v6 = v147 + 1;
          *(v144 - 16) = v55;
          if (v142 == v147 + 1) {
            goto LABEL_51;
          }
        }
        uint64_t v36 = v140;
        uint64_t v37 = v142;
LABEL_51:
        uint64_t v10 = v37 + 1;
        uint64_t v35 = v134 + 15;
        uint64_t v6 = v132;
      }
      while (v10 != v131);
      uint64_t v10 = v131;
    }
    goto LABEL_62;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  swift_release_n();
  __break(1u);
LABEL_156:
  swift_release_n();
  __break(1u);
LABEL_157:
  swift_release_n();
  __break(1u);
LABEL_158:
  swift_release_n();
  __break(1u);
LABEL_159:
  swift_release_n();
  uint64_t result = sub_249AEDC48();
  __break(1u);
  return result;
}

uint64_t sub_2498B6D20(void **a1)
{
  uint64_t v2 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = (void *)sub_24998EFB8(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  swift_retain();
  sub_2498B5A94(v5);
  swift_release();
  *a1 = v2;
  return swift_release_n();
}

unint64_t sub_2498B6DC4()
{
  unint64_t result = qword_2696DE4A0;
  if (!qword_2696DE4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4A0);
  }
  return result;
}

uint64_t sub_2498B6E18(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DE470);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498B6EA0()
{
  unint64_t result = qword_2696DE4B0;
  if (!qword_2696DE4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4B0);
  }
  return result;
}

unint64_t sub_2498B6EF8()
{
  unint64_t result = qword_2696DE4B8;
  if (!qword_2696DE4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4B8);
  }
  return result;
}

unint64_t sub_2498B6F50()
{
  unint64_t result = qword_2696DE4C0;
  if (!qword_2696DE4C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDB18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4C0);
  }
  return result;
}

unint64_t sub_2498B6FC0()
{
  unint64_t result = qword_2696DE4C8;
  if (!qword_2696DE4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4C8);
  }
  return result;
}

uint64_t _s13ColorOverrideOwxx(uint64_t *a1)
{
  return sub_249890CBC(*a1, a1[1]);
}

uint64_t *_s13ColorOverrideOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_249890CB0(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  return a1;
}

uint64_t *_s13ColorOverrideOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  sub_249890CB0(*a2, v4);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  sub_249890CBC(v6, v7);
  return a1;
}

uint64_t *_s13ColorOverrideOwta(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  a1[2] = v3;
  sub_249890CBC(v4, v5);
  return a1;
}

uint64_t _s13ColorOverrideOwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 8) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t _s13ColorOverrideOwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 2 * -a2;
      *(void *)(result + 16) = 0;
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_2498B71A8(uint64_t a1)
{
  return *(void *)(a1 + 8) >> 63;
}

uint64_t sub_2498B71B4(uint64_t result)
{
  *(void *)(result + 8) &= ~0x8000000000000000;
  return result;
}

uint64_t sub_2498B71C4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 8) = *(void *)(result + 8) & 1 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for Theme.ColorOverride()
{
  return &type metadata for Theme.ColorOverride;
}

uint64_t _s11LayoutStyleVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s11LayoutStyleVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s11LayoutStyleVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11LayoutStyleVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11LayoutStyleVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11LayoutStyleVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.LayoutStyle()
{
  return &type metadata for Theme.LayoutStyle;
}

unsigned char *_s11LayoutStyleV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498B751CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11LayoutStyleV10CodingKeysOMa()
{
  return &_s11LayoutStyleV10CodingKeysON;
}

unsigned char *_s13ColorOverrideO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498B7620);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s13ColorOverrideO10CodingKeysOMa()
{
  return &_s13ColorOverrideO10CodingKeysON;
}

ValueMetadata *_s13ColorOverrideO15ShadeCodingKeysOMa()
{
  return &_s13ColorOverrideO15ShadeCodingKeysON;
}

unsigned char *_s13ColorOverrideO15ShadeCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2498B7708);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s13ColorOverrideO15ColorCodingKeysOMa()
{
  return &_s13ColorOverrideO15ColorCodingKeysON;
}

unint64_t sub_2498B7744()
{
  unint64_t result = qword_2696DE4D0;
  if (!qword_2696DE4D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4D0);
  }
  return result;
}

unint64_t sub_2498B779C()
{
  unint64_t result = qword_2696DE4D8;
  if (!qword_2696DE4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4D8);
  }
  return result;
}

unint64_t sub_2498B77F4()
{
  unint64_t result = qword_2696DE4E0;
  if (!qword_2696DE4E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4E0);
  }
  return result;
}

unint64_t sub_2498B784C()
{
  unint64_t result = qword_2696DE4E8;
  if (!qword_2696DE4E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4E8);
  }
  return result;
}

unint64_t sub_2498B78A4()
{
  unint64_t result = qword_2696DE4F0;
  if (!qword_2696DE4F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4F0);
  }
  return result;
}

unint64_t sub_2498B78FC()
{
  unint64_t result = qword_2696DE4F8;
  if (!qword_2696DE4F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE4F8);
  }
  return result;
}

unint64_t sub_2498B7954()
{
  unint64_t result = qword_2696DE500;
  if (!qword_2696DE500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE500);
  }
  return result;
}

unint64_t sub_2498B79AC()
{
  unint64_t result = qword_2696DE508;
  if (!qword_2696DE508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE508);
  }
  return result;
}

unint64_t sub_2498B7A04()
{
  unint64_t result = qword_2696DE510;
  if (!qword_2696DE510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE510);
  }
  return result;
}

unint64_t sub_2498B7A5C()
{
  unint64_t result = qword_2696DE518;
  if (!qword_2696DE518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE518);
  }
  return result;
}

unint64_t sub_2498B7AB4()
{
  unint64_t result = qword_2696DE520;
  if (!qword_2696DE520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE520);
  }
  return result;
}

unint64_t sub_2498B7B0C()
{
  unint64_t result = qword_2696DE528;
  if (!qword_2696DE528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE528);
  }
  return result;
}

uint64_t sub_2498B7B60(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564616873 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2498B7C44(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B14E90 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B14EB0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B14ED0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

CarPlayAssetUI::LayoutOutput __swiftcall LayoutOutput.init(rawValue:)(CarPlayAssetUI::LayoutOutput rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static LayoutOutput.background.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static LayoutOutput.phone.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static LayoutOutput.native.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void sub_2498B7DF8()
{
  uint64_t v0 = unk_26FDA0E50;
  if ((unk_26FDA0E50 & ~qword_26FDA0E48) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = qword_26FDA0E58;
  if ((qword_26FDA0E58 & ~(v0 | qword_26FDA0E48)) == 0) {
    uint64_t v1 = 0;
  }
  qword_2696DE538 = v1 | v0 | qword_26FDA0E48;
}

uint64_t static LayoutOutput.all.getter@<X0>(void *a1@<X8>)
{
  if (qword_2696DD340 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_2696DE538;
  return result;
}

uint64_t LayoutOutput.rawValue.getter()
{
  return *(void *)v0;
}

void *sub_2498B7E90@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_2498B7E9C(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_2498B7EA4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_2498B7EB8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_2498B7ECC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_2498B7EE0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_2498B7F10@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_2498B7F3C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_2498B7F60(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_2498B7F74(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_2498B7F88(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_2498B7F9C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_2498B7FB0(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_2498B7FC4(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_2498B7FD8(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_2498B7FEC()
{
  return *v0 == 0;
}

uint64_t sub_2498B7FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_2498B8014(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t View.layoutOutput(_:)()
{
  return swift_release();
}

uint64_t sub_2498B80A0@<X0>(void *a1@<X8>)
{
  sub_2498B89F8();
  uint64_t result = sub_249AEBFF8();
  *a1 = v3;
  return result;
}

uint64_t sub_2498B80F0@<X0>(void *a1@<X8>)
{
  sub_2498B89F8();
  uint64_t result = sub_249AEBFF8();
  *a1 = v3;
  return result;
}

uint64_t sub_2498B8140()
{
  return sub_249AEC008();
}

uint64_t sub_2498B818C()
{
  return sub_249AEC008();
}

uint64_t LayoutOutput.isVisible(_:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = &v28[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = type metadata accessor for Instrument();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  unint64_t v9 = &v28[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = &v28[-v11 - 8];
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = &v28[-v14 - 8];
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = &v28[-v17 - 8];
  uint64_t v19 = *v1;
  sub_2498B85A4(a1, (uint64_t)v5);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_2498B860C((uint64_t)v5);
    return 0;
  }
  else
  {
    sub_2498B866C((uint64_t)v5, (uint64_t)v18);
    sub_2498B86D0((uint64_t)v18, (uint64_t)v15);
    if ((v19 & 4) != 0)
    {
      sub_2498A4990((uint64_t)&v15[*(int *)(v6 + 20)], (uint64_t)v28);
      sub_2498A4990((uint64_t)v28, (uint64_t)v29);
      switch(sub_2498B8790((uint64_t)v29))
      {
        case 1u:
          char v23 = *(unsigned char *)(sub_2498B87AC((uint64_t)v29) + 496);
          goto LABEL_17;
        case 2u:
          BOOL v24 = (~*(_DWORD *)(sub_2498B87AC((uint64_t)v29) + 40) & 0xFELL) == 0;
          goto LABEL_14;
        case 3u:
        case 4u:
        case 5u:
          sub_2498B87AC((uint64_t)v29);
          sub_2498B8734((uint64_t)v15);
          sub_2498B86D0((uint64_t)v18, (uint64_t)v12);
          goto LABEL_18;
        case 8u:
          BOOL v24 = *(void *)(sub_2498B87AC((uint64_t)v29) + 8) == 0;
LABEL_14:
          char v23 = !v24;
LABEL_17:
          sub_2498B8734((uint64_t)v15);
          sub_2498B86D0((uint64_t)v18, (uint64_t)v12);
          if ((v23 & 1) == 0) {
            goto LABEL_5;
          }
LABEL_18:
          sub_2498B8734((uint64_t)v12);
          sub_2498B8734((uint64_t)v18);
          uint64_t v20 = 1;
          break;
        default:
          goto LABEL_4;
      }
    }
    else
    {
LABEL_4:
      sub_2498B8734((uint64_t)v15);
      sub_2498B86D0((uint64_t)v18, (uint64_t)v12);
LABEL_5:
      sub_2498B8734((uint64_t)v18);
      sub_2498B866C((uint64_t)v12, (uint64_t)v9);
      if ((v19 & 2) != 0)
      {
        sub_2498A4990((uint64_t)&v9[*(int *)(v6 + 20)], (uint64_t)v28);
        sub_2498A4990((uint64_t)v28, (uint64_t)v29);
        int v21 = sub_2498B8790((uint64_t)v29);
        int v22 = 0;
        switch(v21)
        {
          case 1:
            int v22 = *(unsigned __int8 *)(sub_2498B87AC((uint64_t)v29) + 496);
            break;
          case 2:
            BOOL v25 = (~*(_DWORD *)(sub_2498B87AC((uint64_t)v29) + 40) & 0xFELL) == 0;
            goto LABEL_22;
          case 3:
          case 4:
          case 5:
            sub_2498B87AC((uint64_t)v29);
            int v22 = 1;
            break;
          case 8:
            BOOL v25 = *(void *)(sub_2498B87AC((uint64_t)v29) + 8) == 0;
LABEL_22:
            int v22 = !v25;
            break;
          default:
            break;
        }
        uint64_t v20 = v22 ^ 1u;
      }
      else
      {
        uint64_t v20 = 0;
      }
      sub_2498B8734((uint64_t)v9);
    }
  }
  return v20;
}

uint64_t sub_2498B85A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498B860C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2498B866C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Instrument();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498B86D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Instrument();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498B8734(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Instrument();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2498B8790(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 496) >> 60;
  if (v1 <= 8) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 9);
  }
}

uint64_t sub_2498B87AC(uint64_t result)
{
  *(void *)(result + 496) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t sub_2498B87C0()
{
  unint64_t result = qword_2696DE548;
  if (!qword_2696DE548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE548);
  }
  return result;
}

unint64_t sub_2498B8818()
{
  unint64_t result = qword_2696DE550;
  if (!qword_2696DE550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE550);
  }
  return result;
}

unint64_t sub_2498B8870()
{
  unint64_t result = qword_2696DE558;
  if (!qword_2696DE558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE558);
  }
  return result;
}

unint64_t sub_2498B88C8()
{
  unint64_t result = qword_2696DE560;
  if (!qword_2696DE560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE560);
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutOutput()
{
  return &type metadata for LayoutOutput;
}

uint64_t sub_2498B892C()
{
  return swift_getWitnessTable();
}

unint64_t sub_2498B899C()
{
  unint64_t result = qword_2696DE570;
  if (!qword_2696DE570)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DE568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE570);
  }
  return result;
}

unint64_t sub_2498B89F8()
{
  unint64_t result = qword_2696DE578;
  if (!qword_2696DE578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE578);
  }
  return result;
}

void OutsideTemperatureDataIdentifiers.temperatureDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *OutsideTemperatureDataIdentifiers.temperatureDataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*OutsideTemperatureDataIdentifiers.temperatureDataIdentifier.modify())()
{
  return nullsub_1;
}

void OutsideTemperatureDataIdentifiers.unitDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *OutsideTemperatureDataIdentifiers.unitDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*OutsideTemperatureDataIdentifiers.unitDataIdentifier.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::OutsideTemperatureDataIdentifiers __swiftcall OutsideTemperatureDataIdentifiers.init(temperatureDataIdentifier:unitDataIdentifier:)(CarPlayAssetUI::InstrumentDataIdentifier temperatureDataIdentifier, CarPlayAssetUI::InstrumentDataIdentifier unitDataIdentifier)
{
  char v3 = *(unsigned char *)unitDataIdentifier;
  *uint64_t v2 = *(unsigned char *)temperatureDataIdentifier;
  v2[1] = v3;
  result.temperatureDataIdentifier = temperatureDataIdentifier;
  return result;
}

uint64_t OutsideTemperatureDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_2498B8B74()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0xD000000000000019;
  }
}

uint64_t sub_2498B8BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498B944C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498B8BDC(uint64_t a1)
{
  unint64_t v2 = sub_2498B9090();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498B8C18(uint64_t a1)
{
  unint64_t v2 = sub_2498B9090();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t OutsideTemperatureDataIdentifiers.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE580);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498B9090();
  sub_249AEE468();
  char v15 = v8;
  char v14 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t OutsideTemperatureDataIdentifiers.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t OutsideTemperatureDataIdentifiers.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE590);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498B9090();
  sub_249AEE428();
  if (!v2)
  {
    char v15 = 0;
    sub_24989C988();
    sub_249AEDE08();
    char v9 = v16;
    char v13 = 1;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498B905C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return OutsideTemperatureDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_2498B9074(void *a1)
{
  return OutsideTemperatureDataIdentifiers.encode(to:)(a1);
}

unint64_t sub_2498B9090()
{
  unint64_t result = qword_2696DE588;
  if (!qword_2696DE588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE588);
  }
  return result;
}

unint64_t sub_2498B90E8()
{
  unint64_t result = qword_2696DE598;
  if (!qword_2696DE598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE598);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OutsideTemperatureDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65336 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65336 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC7)
  {
    unsigned int v6 = ((a2 - 200) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 200;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498B9208);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 56;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OutsideTemperatureDataIdentifiers()
{
  return &type metadata for OutsideTemperatureDataIdentifiers;
}

unsigned char *storeEnumTagSinglePayload for OutsideTemperatureDataIdentifiers.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498B930CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OutsideTemperatureDataIdentifiers.CodingKeys()
{
  return &type metadata for OutsideTemperatureDataIdentifiers.CodingKeys;
}

unint64_t sub_2498B9348()
{
  unint64_t result = qword_2696DE5A0;
  if (!qword_2696DE5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE5A0);
  }
  return result;
}

unint64_t sub_2498B93A0()
{
  unint64_t result = qword_2696DE5A8;
  if (!qword_2696DE5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE5A8);
  }
  return result;
}

unint64_t sub_2498B93F8()
{
  unint64_t result = qword_2696DE5B0;
  if (!qword_2696DE5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE5B0);
  }
  return result;
}

uint64_t sub_2498B944C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x8000000249B14F80 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B14580)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void SingleSelectMenuModel.Entry.id.getter(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t SingleSelectMenuModel.Entry.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleSelectMenuModel.Entry.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*SingleSelectMenuModel.Entry.title.modify())()
{
  return nullsub_1;
}

uint64_t SingleSelectMenuModel.Entry.symbolName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SingleSelectMenuModel.Entry.symbolName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*SingleSelectMenuModel.Entry.symbolName.modify())()
{
  return nullsub_1;
}

void *SingleSelectMenuModel.Entry.init(id:title:symbolName:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = *result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t SingleSelectMenuModel.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t SingleSelectMenuModel.entries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SingleSelectMenuModel.entries.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SingleSelectMenuModel.entries.modify())()
{
  return nullsub_1;
}

void SingleSelectMenuModel.selectedEntryID.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t SingleSelectMenuModel.selectedEntryID.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 24) = *(void *)result;
  *(unsigned char *)(v1 + 32) = v2;
  return result;
}

uint64_t (*SingleSelectMenuModel.selectedEntryID.modify())()
{
  return nullsub_1;
}

uint64_t SingleSelectMenuModel.isUserSelectionEnabled.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t SingleSelectMenuModel.isUserSelectionEnabled.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 33) = result;
  return result;
}

uint64_t (*SingleSelectMenuModel.isUserSelectionEnabled.modify())()
{
  return nullsub_1;
}

uint64_t sub_2498B974C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    unsigned int v6 = sub_2498BA058;
  }
  else
  {
    unsigned int v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;

  return sub_2498B9AA8(v3);
}

uint64_t sub_2498B97CC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    unsigned int v6 = sub_2498BA030;
  }
  else
  {
    unsigned int v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  sub_2498B9AA8(v3);
  uint64_t result = sub_2498B9AB8(v7);
  *(void *)(a2 + 40) = v6;
  *(void *)(a2 + 48) = v5;
  return result;
}

uint64_t SingleSelectMenuModel.selectionHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_2498B9AA8(v1);
  return v1;
}

uint64_t SingleSelectMenuModel.selectionHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2498B9AB8(*(void *)(v2 + 40));
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*SingleSelectMenuModel.selectionHandler.modify())()
{
  return nullsub_1;
}

uint64_t SingleSelectMenuModel.isFocusable.getter()
{
  return 1;
}

void *SingleSelectMenuModel.init(id:entries:selectedEntryID:isUserSelectionEnabled:selectionHandler:)@<X0>(void *result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7 = result[1];
  uint64_t v8 = *a3;
  char v9 = *((unsigned char *)a3 + 8);
  *(void *)a7 = *result;
  *(void *)(a7 + 8) = v7;
  *(void *)(a7 + 16) = a2;
  *(void *)(a7 + 24) = v8;
  *(unsigned char *)(a7 + 32) = v9;
  *(unsigned char *)(a7 + 33) = a4;
  *(void *)(a7 + 40) = a5;
  *(void *)(a7 + 48) = a6;
  return result;
}

Swift::Double_optional __swiftcall SingleSelectMenuModel.doubleValue()()
{
  Swift::Bool v0 = 0;
  result.is_nil = v0;
  return result;
}

uint64_t _s14CarPlayAssetUI21SingleSelectMenuModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  int v5 = *(unsigned __int8 *)(a1 + 33);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  int v8 = *(unsigned __int8 *)(a2 + 32);
  int v9 = *(unsigned __int8 *)(a2 + 33);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)
    || (char v10 = sub_249AEE0D8(), result = 0, (v10 & 1) != 0))
  {
    if ((sub_249888EA4(v2, v6) & 1) == 0) {
      return 0;
    }
    if (v4)
    {
      if (!v8) {
        return 0;
      }
    }
    else
    {
      if (v3 == v7) {
        char v12 = v8;
      }
      else {
        char v12 = 1;
      }
      if (v12) {
        return 0;
      }
    }
    return v5 ^ v9 ^ 1u;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI21SingleSelectMenuModelV5EntryV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  BOOL v6 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v6 || (v7 = sub_249AEE0D8(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_249AEE0D8();
    }
  }
  return result;
}

uint64_t sub_2498B9AA8(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2498B9AB8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2498B9AC8()
{
  return sub_2498B9B28(&qword_2696DE5B8, &qword_2696DE5C0);
}

uint64_t sub_2498B9AF8()
{
  return sub_2498B9B28(&qword_2696DE5C8, &qword_2696DE5D0);
}

uint64_t sub_2498B9B28(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for SingleSelectMenuModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for SingleSelectMenuModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  char v7 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for SingleSelectMenuModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a1 + 40);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 40);
  if (!v5)
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v6;
      *(void *)(a1 + 48) = v8;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SingleSelectMenuModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 40);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  if (!v5)
  {
    if (v4)
    {
      uint64_t v7 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 48) = v7;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v6;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SingleSelectMenuModel()
{
  return &type metadata for SingleSelectMenuModel;
}

uint64_t destroy for SingleSelectMenuModel.Entry()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SingleSelectMenuModel.Entry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SingleSelectMenuModel.Entry(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SingleSelectMenuModel.Entry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CAPackageAsset(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CAPackageAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SingleSelectMenuModel.Entry()
{
  return &type metadata for SingleSelectMenuModel.Entry;
}

uint64_t sub_2498B9FF8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2498BA030()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2498BA058()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void *sub_2498BA084(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v3 = a1 + 32;
  swift_bridgeObjectRetain();
  sub_249890C54(v3, (uint64_t)v14);
  uint64_t v4 = a1 + 168;
  uint64_t v5 = v1 - 1;
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    sub_249890C54((uint64_t)v14, (uint64_t)v15);
    if (sub_2498C4E8C(v15) == 4)
    {
      uint64_t v7 = sub_2498C4EA0(v15);
      char v8 = *(unsigned char *)v7;
      int v9 = *((_DWORD *)v7 + 1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_2498AB754(0, v6[2] + 1, 1, v6);
      }
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1) {
        uint64_t v6 = sub_2498AB754((void *)(v10 > 1), v11 + 1, 1, v6);
      }
      v6[2] = v11 + 1;
      char v12 = &v6[v11];
      *((unsigned char *)v12 + 32) = v8;
      *((_DWORD *)v12 + 9) = v9;
    }
    if (!v5) {
      break;
    }
    sub_249890C54(v4, (uint64_t)v14);
    v4 += 136;
    --v5;
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t VisibilityConfiguration.rules.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t VisibilityConfiguration.init(arrayLiteral:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_2498BA084(v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = v5[2];
  uint64_t result = swift_bridgeObjectRelease();
  if (!v6)
  {
    swift_beginAccess();
    char v8 = byte_2696DE830;
    int v9 = dword_2696DE834;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      a1 = sub_2498AB630(0, a1[2] + 1, 1, a1);
    }
    unint64_t v11 = a1[2];
    unint64_t v10 = a1[3];
    if (v11 >= v10 >> 1) {
      a1 = sub_2498AB630((void *)(v10 > 1), v11 + 1, 1, a1);
    }
    LOBYTE(v12[0]) = v8;
    HIDWORD(v12[0]) = v9;
    v12[1] = 1056964608;
    void v12[2] = 0x3FB999999999999ALL;
    v12[3] = 0;
    v12[4] = 0;
    v12[5] = 0x3FF0000000000000;
    v12[6] = 1056964608;
    _OWORD v12[7] = 0x3FB999999999999ALL;
    v12[8] = 0;
    v12[9] = 0;
    v12[10] = 0x3FF0000000000000;
    sub_2498A4888(v12);
    a1[2] = v11 + 1;
    uint64_t result = sub_249890C54((uint64_t)v12, (uint64_t)&a1[17 * v11 + 4]);
  }
  *a2 = a1;
  return result;
}

CarPlayAssetUI::VisibilityConfiguration __swiftcall VisibilityConfiguration.init()()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0C8);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_249AF0A70;
  swift_beginAccess();
  LOBYTE(v5[0]) = byte_2696DE830;
  HIDWORD(v5[0]) = dword_2696DE834;
  v5[1] = 1056964608;
  uint64_t v5[2] = 0x3FB999999999999ALL;
  v5[3] = 0;
  v5[4] = 0;
  v5[5] = 0x3FF0000000000000;
  v5[6] = 1056964608;
  v5[7] = 0x3FB999999999999ALL;
  v5[8] = 0;
  v5[9] = 0;
  v5[10] = 0x3FF0000000000000;
  sub_2498A4888(v5);
  sub_249890C54((uint64_t)v5, v2 + 32);
  result.rules._rawValue = (void *)VisibilityConfiguration.init(arrayLiteral:)((void *)v2, &v4);
  *uint64_t v1 = v4;
  return result;
}

uint64_t VisibilityConfiguration.hash(into:)()
{
  uint64_t v1 = *v0;
  uint64_t result = sub_249AEE348();
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_249890C54(v1 + 32, (uint64_t)v7);
    sub_249890C54((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    uint64_t v4 = v3 - 1;
    if (v3 != 1)
    {
      uint64_t v5 = v1 + 168;
      do
      {
        sub_249890C54(v5, (uint64_t)v7);
        sub_249890C54((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v5 += 136;
        --v4;
      }
      while (v4);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static VisibilityConfiguration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_249888DF0(*a1, *a2);
}

uint64_t sub_2498BA4D4()
{
  return 0x73656C7572;
}

uint64_t sub_2498BA4E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73656C7572 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2498BA578(uint64_t a1)
{
  unint64_t v2 = sub_2498C4CE4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BA5B4(uint64_t a1)
{
  unint64_t v2 = sub_2498C4CE4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE850);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C4CE4();
  sub_249AEE468();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE860);
  sub_2498C4D8C(&qword_2696DE868, (void (*)(void))sub_2498C4D38);
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t VisibilityConfiguration.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_249AEE348();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_249890C54(v1 + 32, (uint64_t)v7);
    sub_249890C54((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    uint64_t v3 = v2 - 1;
    if (v3)
    {
      uint64_t v4 = v1 + 168;
      do
      {
        sub_249890C54(v4, (uint64_t)v7);
        sub_249890C54((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v4 += 136;
        --v3;
      }
      while (v3);
    }
  }
  return sub_249AEE388();
}

uint64_t VisibilityConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE878);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C4CE4();
  sub_249AEE428();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE860);
    sub_2498C4D8C(&qword_2696DE880, (void (*)(void))sub_2498C4DFC);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498BA9D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VisibilityConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2498BA9E8(void *a1)
{
  return VisibilityConfiguration.encode(to:)(a1);
}

uint64_t sub_2498BAA04()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  uint64_t result = sub_249AEE348();
  if (v2)
  {
    sub_249890C54(v1 + 32, (uint64_t)v7);
    sub_249890C54((uint64_t)v7, (uint64_t)v6);
    uint64_t result = VisibilityRule.hash(into:)();
    uint64_t v4 = v2 - 1;
    if (v2 != 1)
    {
      uint64_t v5 = v1 + 168;
      do
      {
        sub_249890C54(v5, (uint64_t)v7);
        sub_249890C54((uint64_t)v7, (uint64_t)v6);
        uint64_t result = VisibilityRule.hash(into:)();
        v5 += 136;
        --v4;
      }
      while (v4);
    }
  }
  return result;
}

uint64_t sub_2498BAAB4()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_249AEE348();
  if (v2)
  {
    sub_249890C54(v1 + 32, (uint64_t)v7);
    sub_249890C54((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    uint64_t v3 = v2 - 1;
    if (v2 != 1)
    {
      uint64_t v4 = v1 + 168;
      do
      {
        sub_249890C54(v4, (uint64_t)v7);
        sub_249890C54((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v4 += 136;
        --v3;
      }
      while (v3);
    }
  }
  return sub_249AEE388();
}

uint64_t sub_2498BAB74(uint64_t *a1, uint64_t *a2)
{
  return sub_249888DF0(*a1, *a2);
}

double static VisibilityRule.Animation.default.getter@<D0>(void *a1@<X8>)
{
  *(void *)&double result = 1056964608;
  *a1 = 1056964608;
  a1[1] = 0x3FB999999999999ALL;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0x3FF0000000000000;
  return result;
}

uint64_t sub_2498BABA8(uint64_t a1)
{
  return sub_2498BAC10(a1, &unk_2696DE6E8, &asc_2696DE6E9, (uint64_t)&unk_2696DE5D8);
}

__n128 VisibilityRule.Animation.init(duration:delay:bezierCurve:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>, float a3@<S0>, float a4@<S1>)
{
  *(float *)a2 = a3;
  *(float *)(a2 + 4) = a4;
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t static VisibilityRule.transmissionModeGearSet.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2498BACDC(&qword_2696DD348, (uint64_t)&unk_2696DE5D8, a1);
}

uint64_t sub_2498BABF8(uint64_t a1)
{
  return sub_2498BAC10(a1, &unk_2696DE6EA, asc_2696DE6EB, (uint64_t)&unk_2696DE660);
}

uint64_t sub_2498BAC10(uint64_t a1, unsigned char *a2, char *a3, uint64_t a4)
{
  swift_beginAccess();
  char v7 = *a3;
  LOBYTE(v9[0]) = *a2;
  BYTE1(v9[0]) = v7;
  v9[1] = 0x3DEB851F3E99999ALL;
  void v9[2] = 0x3FB999999999999ALL;
  v9[3] = 0;
  v9[4] = 0;
  v9[5] = 0x3FF0000000000000;
  v9[6] = 1041865114;
  v9[7] = 0x3FB999999999999ALL;
  v9[8] = 0;
  v9[9] = 0;
  v9[10] = 0x3FF0000000000000;
  sub_2498C6AB4(v9);
  return sub_249890C54((uint64_t)v9, a4);
}

uint64_t static VisibilityRule.transmissionModeGearNotSet.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2498BACDC(&qword_2696DD350, (uint64_t)&unk_2696DE660, a1);
}

uint64_t sub_2498BACDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  sub_249890C54(a2, (uint64_t)v6);
  return sub_249890C54((uint64_t)v6, a3);
}

void static VisibilityRule.Animation.none.getter(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0x3FB999999999999ALL;
  a1[2] = 0;
  a1[3] = 0;
  a1[4] = 0x3FF0000000000000;
}

uint64_t static VisibilityRule.invalidData(dataIdentifier:showAnimation:hideAnimation:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  LOBYTE(v8[0]) = *a1;
  v8[1] = *(void *)a2;
  long long v5 = *(_OWORD *)(a2 + 24);
  long long v9 = *(_OWORD *)(a2 + 8);
  long long v10 = v5;
  uint64_t v11 = *a3;
  long long v6 = *(_OWORD *)(a3 + 3);
  long long v12 = *(_OWORD *)(a3 + 1);
  long long v13 = v6;
  sub_2498C4E50(v8);
  return sub_249890C54((uint64_t)v8, a4);
}

CarPlayAssetUI::VisibilityRule::InvalidDataRule __swiftcall VisibilityRule.InvalidDataRule.init(dataIdentifier:)(CarPlayAssetUI::VisibilityRule::InvalidDataRule dataIdentifier)
{
  *uint64_t v1 = *(unsigned char *)dataIdentifier.dataIdentifier;
  return dataIdentifier;
}

uint64_t static VisibilityRule.secondarySpeedEnabled.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2498BADF4(1, a1);
}

unsigned char *VisibilityRule.SecondarySpeedRule.init(dataIdentifier:enabled:)@<X0>(unsigned char *result@<X0>, char a2@<W1>, unsigned char *a3@<X8>)
{
  *a3 = *result;
  a3[1] = a2;
  return result;
}

uint64_t static VisibilityRule.secondarySpeedDisabled.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2498BADF4(0, a1);
}

uint64_t sub_2498BADF4@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  LOBYTE(v4[0]) = 51;
  BYTE1(v4[0]) = a1;
  v4[1] = 1056964608;
  v4[2] = 0x3FB999999999999ALL;
  v4[3] = 0;
  v4[4] = 0;
  v4[5] = 0x3FF0000000000000;
  v4[6] = 1056964608;
  v4[7] = 0x3FB999999999999ALL;
  unsigned char v4[8] = 0;
  v4[9] = 0;
  v4[10] = 0x3FF0000000000000;
  sub_2498C4E70(v4);
  return sub_249890C54((uint64_t)v4, a2);
}

uint64_t static VisibilityRule.driveMode.getter@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  LOBYTE(v3[0]) = byte_2696DE838;
  HIDWORD(v3[0]) = dword_2696DE83C;
  v3[1] = 1053609165;
  v3[2] = 0x3FB999999999999ALL;
  v3[3] = 0;
  v3[4] = 0;
  v3[5] = 0x3FF0000000000000;
  v3[6] = 1053609165;
  v3[7] = 0x3FB999999999999ALL;
  v3[8] = 0;
  v3[9] = 0;
  v3[10] = 0x3FF0000000000000;
  sub_2498A4888(v3);
  return sub_249890C54((uint64_t)v3, a1);
}

uint64_t VisibilityRule.hash(into:)()
{
  sub_249890C54(v0, (uint64_t)v3);
  sub_249890C54((uint64_t)v3, (uint64_t)v4);
  switch(sub_2498C4E8C(v4))
  {
    case 1u:
      sub_2498C4EA0(v4);
      sub_249AEE348();
      sub_249AEE348();
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    case 2u:
      int v1 = *((unsigned __int8 *)sub_2498C4EA0(v4) + 48);
      sub_249AEE348();
      sub_249AEE348();
      sub_249AEE358();
      if (v1 != 1)
      {
        sub_249AEE368();
        sub_249AEE368();
        sub_249AECCF8();
        sub_249AECCF8();
      }
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE368();
      sub_249AEE368();
      sub_249AECCF8();
      sub_249AECCF8();
      sub_249AEE368();
      sub_249AEE368();
      sub_249AECCF8();
      return sub_249AECCF8();
    case 4u:
      sub_2498C4EA0(v4);
      sub_249AEE348();
      sub_249AEE348();
      sub_249AEE368();
      sub_249AEE368();
      sub_249AEE368();
      sub_249AECCF8();
      sub_249AECCF8();
      goto LABEL_12;
    case 5u:
      sub_2498C4EA0(v4);
      sub_249AEE348();
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE368();
      goto LABEL_11;
    case 6u:
      sub_2498C4EA0(v4);
      sub_249AEE348();
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE358();
      sub_249AEE368();
      sub_249AEE368();
      sub_249AECCF8();
      sub_249AECCF8();
      sub_249AEE368();
      goto LABEL_13;
    case 7u:
      sub_2498C4EA0(v4);
      sub_249AEE348();
      sub_249AEE348();
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
LABEL_10:
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE368();
      goto LABEL_11;
    default:
      sub_2498C4EA0(v4);
      sub_249AEE348();
      sub_249AEE348();
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE368();
LABEL_11:
      sub_249AEE368();
      sub_249AECCF8();
      sub_249AECCF8();
LABEL_12:
      sub_249AEE368();
LABEL_13:
      sub_249AEE368();
      sub_249AECCF8();
      return sub_249AECCF8();
  }
}

uint64_t static VisibilityRule.TransmissionModeRule.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498C6030(a1, a2) & 1;
}

uint64_t static VisibilityRule.RemainingRangeRule.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498C6030(a1, a2) & 1;
}

BOOL static VisibilityRule.LayoutModeRule.== infix(_:_:)(float *a1, float *a2)
{
  return a1[1] == a2[1] && *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2;
}

unint64_t sub_2498BB688(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x6D694C6465657073;
      break;
    case 3:
      unint64_t result = 0x6E696E69616D6572;
      break;
    case 4:
      unint64_t result = 0x6F4D74756F79616CLL;
      break;
    case 5:
      unint64_t result = 0x4464696C61766E69;
      break;
    case 6:
      unint64_t result = 0x7261646E6F636573;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2498BB7B0()
{
  return sub_2498BB688(*v0);
}

uint64_t sub_2498BB7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498C9DE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498BB7E0(uint64_t a1)
{
  unint64_t v2 = sub_2498C6160();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BB81C(uint64_t a1)
{
  unint64_t v2 = sub_2498C6160();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498BB858(uint64_t a1)
{
  unint64_t v2 = sub_2498C6358();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BB894(uint64_t a1)
{
  unint64_t v2 = sub_2498C6358();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498BB8D0()
{
  uint64_t v1 = 0x6D696E41776F6873;
  if (*v0 != 1) {
    uint64_t v1 = 0x6D696E4165646968;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701606770;
  }
}

uint64_t sub_2498BB93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498CA1A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498BB964(uint64_t a1)
{
  unint64_t v2 = sub_2498C6400();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BB9A0(uint64_t a1)
{
  unint64_t v2 = sub_2498C6400();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498BB9DC(uint64_t a1)
{
  unint64_t v2 = sub_2498C64A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BBA18(uint64_t a1)
{
  unint64_t v2 = sub_2498C64A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498BBA54(uint64_t a1)
{
  unint64_t v2 = sub_2498C62B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BBA90(uint64_t a1)
{
  unint64_t v2 = sub_2498C62B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498BBACC(uint64_t a1)
{
  unint64_t v2 = sub_2498C6550();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BBB08(uint64_t a1)
{
  unint64_t v2 = sub_2498C6550();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498BBB44(uint64_t a1)
{
  unint64_t v2 = sub_2498C61B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BBB80(uint64_t a1)
{
  unint64_t v2 = sub_2498C61B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498BBBBC(uint64_t a1)
{
  unint64_t v2 = sub_2498C65F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BBBF8(uint64_t a1)
{
  unint64_t v2 = sub_2498C65F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498BBC34(uint64_t a1)
{
  unint64_t v2 = sub_2498C66A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BBC70(uint64_t a1)
{
  unint64_t v2 = sub_2498C66A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  *(void *)&long long v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE890);
  uint64_t v140 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  *(void *)&long long v151 = (char *)&v133 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE898);
  uint64_t v139 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  uint64_t v149 = (char *)&v133 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE8A0);
  uint64_t v138 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148);
  uint64_t v147 = (char *)&v133 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE8A8);
  uint64_t v137 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  int v145 = (char *)&v133 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE8B0);
  uint64_t v136 = *(void *)(v144 - 8);
  MEMORY[0x270FA5388](v144);
  uint64_t v143 = (char *)&v133 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE8B8);
  uint64_t v135 = *(void *)(v142 - 8);
  MEMORY[0x270FA5388](v142);
  long long v10 = (char *)&v133 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE8C0);
  uint64_t v134 = *(void *)(v141 - 8);
  MEMORY[0x270FA5388](v141);
  long long v12 = (char *)&v133 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE8C8);
  uint64_t v133 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  char v15 = (char *)&v133 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE8D0);
  uint64_t v153 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v17 = (char *)&v133 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249890C54(v2, (uint64_t)v163);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6160();
  uint64_t v156 = v17;
  sub_249AEE468();
  sub_249890C54((uint64_t)v163, (uint64_t)v164);
  switch(sub_2498C4E8C(v164))
  {
    case 1u:
      uint64_t v32 = sub_2498C4EA0(v164);
      __int16 v33 = *(_WORD *)v32;
      char v34 = *((unsigned char *)v32 + 2);
      uint64_t v35 = v32[1];
      uint64_t v36 = v32[2];
      uint64_t v37 = v32[3];
      *(void *)&long long v152 = v32[4];
      uint64_t v38 = v32[6];
      *(void *)&long long v151 = v32[5];
      uint64_t v39 = v32[7];
      uint64_t v40 = v32[8];
      uint64_t v41 = v32[9];
      uint64_t v42 = v32[10];
      LOBYTE(v157) = 1;
      sub_2498C65F8();
      uint64_t v43 = v155;
      uint64_t v44 = v156;
      sub_249AEDE48();
      LOWORD(v157) = v33;
      BYTE2(v157) = v34;
      char v165 = 0;
      sub_2498C664C();
      uint64_t v45 = v141;
      uint64_t v46 = v154;
      sub_249AEDF08();
      if (!v46)
      {
        uint64_t v157 = v35;
        *(void *)&long long v158 = v36;
        *((void *)&v158 + 1) = v37;
        *(void *)&long long v159 = v152;
        *((void *)&v159 + 1) = v151;
        char v165 = 1;
        sub_2498C625C();
        sub_249AEDF08();
        uint64_t v157 = v38;
        *(void *)&long long v158 = v39;
        *((void *)&v158 + 1) = v40;
        *(void *)&long long v159 = v41;
        *((void *)&v159 + 1) = v42;
        char v165 = 2;
        sub_249AEDF08();
      }
      (*(void (**)(char *, uint64_t))(v134 + 8))(v12, v45);
      return (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v44, v43);
    case 2u:
      char v47 = sub_2498C4EA0(v164);
      char v48 = *(unsigned char *)v47;
      long long v49 = *(_OWORD *)(v47 + 1);
      long long v151 = *(_OWORD *)(v47 + 3);
      long long v152 = v49;
      uint64_t v50 = v47[5];
      char v51 = *((unsigned char *)v47 + 48);
      __int16 v52 = *(_WORD *)((char *)v47 + 49);
      LOBYTE(v157) = 2;
      sub_2498C6550();
      uint64_t v53 = v155;
      sub_249AEDE48();
      LOBYTE(v157) = v48;
      long long v158 = v152;
      long long v159 = v151;
      uint64_t v160 = v50;
      char v161 = v51;
      __int16 v162 = v52;
      char v165 = 0;
      sub_2498C65A4();
      uint64_t v54 = v142;
      uint64_t v55 = v154;
      sub_249AEDF08();
      if (!v55)
      {
        uint64_t v157 = v47[7];
        long long v56 = *((_OWORD *)v47 + 5);
        long long v158 = *((_OWORD *)v47 + 4);
        long long v159 = v56;
        char v165 = 1;
        sub_2498C625C();
        sub_249AEDF08();
        uint64_t v157 = v47[12];
        long long v158 = *(_OWORD *)(v47 + 13);
        long long v159 = *(_OWORD *)(v47 + 15);
        char v165 = 2;
        sub_249AEDF08();
      }
      (*(void (**)(char *, uint64_t))(v135 + 8))(v10, v54);
      return (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v156, v53);
    case 3u:
      long long v57 = sub_2498C4EA0(v164);
      char v58 = *(unsigned char *)v57;
      char v59 = *((unsigned char *)v57 + 1);
      uint64_t v60 = v57[1];
      uint64_t v61 = v57[2];
      uint64_t v62 = v57[3];
      *(void *)&long long v152 = v57[4];
      uint64_t v63 = v57[6];
      *(void *)&long long v151 = v57[5];
      uint64_t v64 = v57[7];
      uint64_t v65 = v57[8];
      uint64_t v66 = v57[9];
      uint64_t v67 = v57[10];
      LOBYTE(v157) = 3;
      sub_2498C64A8();
      char v68 = v143;
      uint64_t v69 = v155;
      uint64_t v70 = v156;
      sub_249AEDE48();
      LOBYTE(v157) = v58;
      BYTE1(v157) = v59;
      char v165 = 0;
      sub_2498C64FC();
      uint64_t v71 = v144;
      uint64_t v72 = v154;
      sub_249AEDF08();
      if (!v72)
      {
        uint64_t v157 = v60;
        *(void *)&long long v158 = v61;
        *((void *)&v158 + 1) = v62;
        *(void *)&long long v159 = v152;
        *((void *)&v159 + 1) = v151;
        char v165 = 1;
        sub_2498C625C();
        sub_249AEDF08();
        uint64_t v157 = v63;
        *(void *)&long long v158 = v64;
        *((void *)&v158 + 1) = v65;
        *(void *)&long long v159 = v66;
        *((void *)&v159 + 1) = v67;
        char v165 = 2;
        sub_249AEDF08();
      }
      uint64_t v73 = v136;
      goto LABEL_25;
    case 4u:
      uint64_t v74 = sub_2498C4EA0(v164);
      char v75 = *(unsigned char *)v74;
      int v76 = *((_DWORD *)v74 + 1);
      uint64_t v77 = v74[2];
      *(void *)&long long v152 = v74[1];
      uint64_t v79 = v74[3];
      uint64_t v78 = v74[4];
      uint64_t v80 = v74[6];
      uint64_t v150 = v74[5];
      *(void *)&long long v151 = v78;
      uint64_t v82 = v74[7];
      uint64_t v81 = v74[8];
      uint64_t v83 = v74[9];
      uint64_t v84 = v74[10];
      LOBYTE(v157) = 4;
      sub_2498C6400();
      BOOL v85 = v145;
      uint64_t v86 = v155;
      char v87 = v156;
      sub_249AEDE48();
      LOBYTE(v157) = v75;
      HIDWORD(v157) = v76;
      char v165 = 0;
      sub_2498C6454();
      uint64_t v88 = v146;
      uint64_t v89 = v154;
      sub_249AEDF08();
      if (!v89)
      {
        uint64_t v157 = v152;
        *(void *)&long long v158 = v77;
        *((void *)&v158 + 1) = v79;
        *(void *)&long long v159 = v151;
        *((void *)&v159 + 1) = v150;
        char v165 = 1;
        sub_2498C625C();
        sub_249AEDF08();
        uint64_t v157 = v80;
        *(void *)&long long v158 = v82;
        *((void *)&v158 + 1) = v81;
        *(void *)&long long v159 = v83;
        *((void *)&v159 + 1) = v84;
        char v165 = 2;
        sub_249AEDF08();
      }
      uint64_t v90 = v137;
      goto LABEL_21;
    case 5u:
      uint64_t v91 = sub_2498C4EA0(v164);
      char v92 = *(unsigned char *)v91;
      uint64_t v93 = v91[1];
      uint64_t v94 = v91[2];
      uint64_t v95 = v91[3];
      *(void *)&long long v152 = v91[4];
      uint64_t v96 = v91[6];
      *(void *)&long long v151 = v91[5];
      uint64_t v97 = v91[7];
      uint64_t v98 = v91[8];
      uint64_t v99 = v91[9];
      uint64_t v100 = v91[10];
      LOBYTE(v157) = 5;
      sub_2498C6358();
      BOOL v85 = v147;
      uint64_t v86 = v155;
      char v87 = v156;
      sub_249AEDE48();
      LOBYTE(v157) = v92;
      char v165 = 0;
      sub_2498C63AC();
      uint64_t v88 = v148;
      uint64_t v101 = v154;
      sub_249AEDF08();
      if (!v101)
      {
        uint64_t v157 = v93;
        *(void *)&long long v158 = v94;
        *((void *)&v158 + 1) = v95;
        *(void *)&long long v159 = v152;
        *((void *)&v159 + 1) = v151;
        char v165 = 1;
        sub_2498C625C();
        sub_249AEDF08();
        uint64_t v157 = v96;
        *(void *)&long long v158 = v97;
        *((void *)&v158 + 1) = v98;
        *(void *)&long long v159 = v99;
        *((void *)&v159 + 1) = v100;
        char v165 = 2;
        sub_249AEDF08();
      }
      uint64_t v90 = v138;
LABEL_21:
      (*(void (**)(char *, uint64_t))(v90 + 8))(v85, v88);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v87, v86);
      break;
    case 6u:
      uint64_t v102 = sub_2498C4EA0(v164);
      char v103 = *(unsigned char *)v102;
      char v104 = *((unsigned char *)v102 + 1);
      uint64_t v105 = v102[1];
      uint64_t v106 = v102[2];
      uint64_t v107 = v102[3];
      *(void *)&long long v152 = v102[4];
      uint64_t v108 = v102[6];
      *(void *)&long long v151 = v102[5];
      uint64_t v109 = v102[7];
      uint64_t v110 = v102[8];
      uint64_t v111 = v102[9];
      uint64_t v112 = v102[10];
      LOBYTE(v157) = 6;
      sub_2498C62B0();
      char v68 = v149;
      uint64_t v69 = v155;
      uint64_t v70 = v156;
      sub_249AEDE48();
      LOBYTE(v157) = v103;
      BYTE1(v157) = v104;
      char v165 = 0;
      sub_2498C6304();
      uint64_t v71 = v150;
      uint64_t v113 = v154;
      sub_249AEDF08();
      if (!v113)
      {
        uint64_t v157 = v105;
        *(void *)&long long v158 = v106;
        *((void *)&v158 + 1) = v107;
        *(void *)&long long v159 = v152;
        *((void *)&v159 + 1) = v151;
        char v165 = 1;
        sub_2498C625C();
        sub_249AEDF08();
        uint64_t v157 = v108;
        *(void *)&long long v158 = v109;
        *((void *)&v158 + 1) = v110;
        *(void *)&long long v159 = v111;
        *((void *)&v159 + 1) = v112;
        char v165 = 2;
        sub_249AEDF08();
      }
      uint64_t v73 = v139;
LABEL_25:
      (*(void (**)(char *, uint64_t))(v73 + 8))(v68, v71);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v70, v69);
      break;
    case 7u:
      uint64_t v114 = sub_2498C4EA0(v164);
      char v115 = *(unsigned char *)v114;
      __int16 v116 = *(_WORD *)((char *)v114 + 1);
      char v117 = *((unsigned char *)v114 + 3);
      uint64_t v118 = v114[1];
      uint64_t v119 = v114[2];
      uint64_t v121 = v114[3];
      uint64_t v120 = v114[4];
      uint64_t v122 = v114[6];
      uint64_t v149 = (char *)v114[5];
      uint64_t v150 = v120;
      uint64_t v123 = v114[7];
      uint64_t v124 = v114[8];
      uint64_t v125 = v114[9];
      uint64_t v126 = v114[10];
      LOBYTE(v157) = 7;
      sub_2498C61B4();
      uint64_t v127 = v151;
      uint64_t v128 = v155;
      uint64_t v129 = v156;
      sub_249AEDE48();
      LOBYTE(v157) = v115;
      *(_WORD *)((char *)&v157 + 1) = v116;
      BYTE3(v157) = v117;
      char v165 = 0;
      sub_2498C6208();
      uint64_t v130 = v152;
      uint64_t v131 = v154;
      sub_249AEDF08();
      if (!v131)
      {
        uint64_t v157 = v118;
        *(void *)&long long v158 = v119;
        *((void *)&v158 + 1) = v121;
        *(void *)&long long v159 = v150;
        *((void *)&v159 + 1) = v149;
        char v165 = 1;
        sub_2498C625C();
        sub_249AEDF08();
        uint64_t v157 = v122;
        *(void *)&long long v158 = v123;
        *((void *)&v158 + 1) = v124;
        *(void *)&long long v159 = v125;
        *((void *)&v159 + 1) = v126;
        char v165 = 2;
        sub_249AEDF08();
      }
      (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v127, v130);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v129, v128);
      break;
    default:
      uint64_t v18 = sub_2498C4EA0(v164);
      char v19 = *(unsigned char *)v18;
      char v20 = *((unsigned char *)v18 + 1);
      uint64_t v21 = v18[1];
      uint64_t v22 = v18[2];
      uint64_t v23 = v18[3];
      *(void *)&long long v152 = v18[4];
      uint64_t v24 = v18[6];
      *(void *)&long long v151 = v18[5];
      uint64_t v25 = v18[7];
      uint64_t v26 = v18[8];
      uint64_t v27 = v18[9];
      uint64_t v28 = v18[10];
      LOBYTE(v157) = 0;
      sub_2498C66A0();
      uint64_t v29 = v155;
      uint64_t v30 = v156;
      sub_249AEDE48();
      LOBYTE(v157) = v19;
      BYTE1(v157) = v20;
      char v165 = 0;
      sub_2498C66F4();
      uint64_t v31 = v154;
      sub_249AEDF08();
      if (!v31)
      {
        uint64_t v157 = v21;
        *(void *)&long long v158 = v22;
        *((void *)&v158 + 1) = v23;
        *(void *)&long long v159 = v152;
        *((void *)&v159 + 1) = v151;
        char v165 = 1;
        sub_2498C625C();
        sub_249AEDF08();
        uint64_t v157 = v24;
        *(void *)&long long v158 = v25;
        *((void *)&v158 + 1) = v26;
        *(void *)&long long v159 = v27;
        *((void *)&v159 + 1) = v28;
        char v165 = 2;
        sub_249AEDF08();
      }
      (*(void (**)(char *, uint64_t))(v133 + 8))(v15, v13);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v153 + 8))(v30, v29);
      break;
  }
  return result;
}

uint64_t VisibilityRule.hashValue.getter()
{
  sub_249890C54(v0, (uint64_t)v3);
  sub_249890C54((uint64_t)v3, (uint64_t)v2);
  sub_249AEE338();
  VisibilityRule.hash(into:)();
  return sub_249AEE388();
}

uint64_t VisibilityRule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v142 = a2;
  uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE968);
  uint64_t v132 = *(void *)(v147 - 8);
  MEMORY[0x270FA5388](v147);
  uint64_t v146 = (char *)&v121 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE970);
  uint64_t v131 = *(void *)(v137 - 8);
  MEMORY[0x270FA5388](v137);
  int v145 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE978);
  uint64_t v130 = *(void *)(v138 - 8);
  MEMORY[0x270FA5388](v138);
  uint64_t v141 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE980);
  uint64_t v129 = *(void *)(v136 - 8);
  MEMORY[0x270FA5388](v136);
  uint64_t v144 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE988);
  uint64_t v127 = *(void *)(v135 - 8);
  MEMORY[0x270FA5388](v135);
  uint64_t v140 = (char *)&v121 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE990);
  uint64_t v128 = *(void *)(v134 - 8);
  MEMORY[0x270FA5388](v134);
  uint64_t v139 = (char *)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE998);
  uint64_t v126 = *(void *)(v133 - 8);
  MEMORY[0x270FA5388](v133);
  long long v10 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE9A0);
  uint64_t v125 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE9A8);
  uint64_t v143 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v148 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v17);
  sub_2498C6160();
  uint64_t v18 = v178;
  sub_249AEE428();
  if (!v18)
  {
    uint64_t v121 = v11;
    uint64_t v122 = v13;
    uint64_t v123 = v10;
    char v19 = v144;
    char v20 = v145;
    uint64_t v178 = 0;
    uint64_t v22 = v146;
    uint64_t v21 = v147;
    uint64_t v23 = sub_249AEDE18();
    uint64_t v24 = (char *)v23;
    if (*(void *)(v23 + 16) == 1)
    {
      uint64_t v124 = v16;
      uint64_t v25 = v16;
      switch(*(unsigned char *)(v23 + 32))
      {
        case 1:
          LOBYTE(v162) = 1;
          sub_2498C65F8();
          uint64_t v32 = v123;
          uint64_t v33 = v178;
          sub_249AEDD38();
          if (v33) {
            goto LABEL_18;
          }
          LOBYTE(v162) = 0;
          sub_2498C69F0();
          uint64_t v34 = v133;
          sub_249AEDE08();
          uint64_t v60 = v32;
          uint64_t v178 = v14;
          int v61 = v150;
          int v62 = BYTE1(v150);
          int v63 = BYTE2(v150);
          LOBYTE(v162) = 1;
          sub_2498C679C();
          sub_249AEDE08();
          LODWORD(v145) = v62;
          LODWORD(v146) = v63;
          LODWORD(v147) = v61;
          BOOL v85 = v153;
          uint64_t v86 = v154;
          char v87 = v155;
          uint64_t v88 = v156;
          uint64_t v89 = v157;
          char v173 = 2;
          sub_249AEDE08();
          uint64_t v90 = (void (**)(char *, uint64_t))(v143 + 8);
          (*(void (**)(char *, uint64_t))(v126 + 8))(v60, v34);
          swift_bridgeObjectRelease();
          (*v90)(v124, v178);
          LOBYTE(v162) = v147;
          BYTE1(v162) = (_BYTE)v145;
          BYTE2(v162) = (_BYTE)v146;
          uint64_t v163 = v85;
          uint64_t v164 = v86;
          char v165 = v87;
          uint64_t v166 = v88;
          uint64_t v167 = (uint64_t)v89;
          uint64_t v168 = v174;
          *(_OWORD *)long long v169 = v175;
          *(_OWORD *)&v169[16] = v176;
          sub_2498C6A44(&v162);
          goto LABEL_27;
        case 2:
          LOBYTE(v162) = 2;
          sub_2498C6550();
          uint64_t v35 = v139;
          uint64_t v36 = v178;
          sub_249AEDD38();
          if (v36) {
            goto LABEL_18;
          }
          LOBYTE(v162) = 0;
          sub_2498C6980();
          uint64_t v37 = v134;
          sub_249AEDE08();
          uint64_t v64 = v35;
          int v145 = v24;
          uint64_t v178 = v14;
          LODWORD(v147) = v153;
          uint64_t v146 = v154;
          uint64_t v144 = v155;
          uint64_t v65 = v158;
          uint64_t v140 = v157;
          uint64_t v141 = v156;
          int v66 = v159;
          int v67 = v160;
          int v68 = v161;
          LOBYTE(v162) = 1;
          sub_2498C679C();
          sub_249AEDE08();
          LODWORD(v135) = v68;
          LODWORD(v136) = v67;
          LODWORD(v137) = v66;
          uint64_t v138 = v65;
          LOBYTE(v65) = v147;
          uint64_t v91 = v174;
          long long v92 = v175;
          long long v93 = v176;
          char v173 = 2;
          sub_249AEDE08();
          (*(void (**)(char *, uint64_t))(v128 + 8))(v64, v37);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v143 + 8))(v124, v178);
          char v149 = v137;
          LOBYTE(v162) = v65;
          uint64_t v163 = v146;
          uint64_t v164 = v144;
          char v165 = v141;
          uint64_t v166 = v140;
          uint64_t v167 = v138;
          LOBYTE(v168) = v137;
          BYTE1(v168) = v136;
          BYTE2(v168) = v135;
          *(void *)long long v169 = v91;
          *(_OWORD *)&v169[8] = v92;
          *(_OWORD *)&v169[24] = v93;
          uint64_t v170 = v150;
          long long v171 = v151;
          long long v172 = v152;
          sub_2498C69D4(&v162);
          goto LABEL_27;
        case 3:
          uint64_t v38 = v142;
          LOBYTE(v162) = 3;
          sub_2498C64A8();
          uint64_t v39 = v140;
          uint64_t v40 = v178;
          sub_249AEDD38();
          if (v40) {
            goto LABEL_18;
          }
          LOBYTE(v162) = 0;
          sub_2498C690C();
          uint64_t v41 = v135;
          sub_249AEDE08();
          uint64_t v42 = v143;
          uint64_t v69 = v41;
          int v145 = v24;
          uint64_t v178 = v14;
          LODWORD(v41) = v150;
          int v70 = BYTE1(v150);
          LOBYTE(v162) = 1;
          sub_2498C679C();
          sub_249AEDE08();
          LODWORD(v146) = v41;
          LODWORD(v147) = v70;
          uint64_t v94 = v153;
          uint64_t v95 = v154;
          uint64_t v96 = v155;
          uint64_t v97 = v156;
          uint64_t v98 = v157;
          char v173 = 2;
          sub_249AEDE08();
          (*(void (**)(char *, uint64_t))(v127 + 8))(v39, v69);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v42 + 8))(v124, v178);
          LOBYTE(v162) = (_BYTE)v146;
          BYTE1(v162) = v147;
          uint64_t v163 = v94;
          uint64_t v164 = v95;
          char v165 = v96;
          uint64_t v166 = v97;
          uint64_t v167 = (uint64_t)v98;
          uint64_t v168 = v174;
          *(_OWORD *)long long v169 = v175;
          *(_OWORD *)&v169[16] = v176;
          sub_2498C6960(&v162);
          goto LABEL_26;
        case 4:
          uint64_t v38 = v142;
          LOBYTE(v162) = 4;
          sub_2498C6400();
          uint64_t v43 = v178;
          sub_249AEDD38();
          if (v43) {
            goto LABEL_18;
          }
          LOBYTE(v162) = 0;
          sub_2498C68B8();
          uint64_t v44 = v136;
          sub_249AEDE08();
          uint64_t v45 = v143;
          uint64_t v178 = v14;
          int v71 = v150;
          int v72 = HIDWORD(v150);
          LOBYTE(v162) = 1;
          sub_2498C679C();
          sub_249AEDE08();
          LODWORD(v147) = v71;
          uint64_t v99 = v153;
          uint64_t v100 = v154;
          uint64_t v101 = v155;
          uint64_t v102 = v156;
          char v103 = v157;
          char v173 = 2;
          sub_249AEDE08();
          (*(void (**)(char *, uint64_t))(v129 + 8))(v19, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v124, v178);
          LOBYTE(v162) = v147;
          HIDWORD(v162) = v72;
          uint64_t v163 = v99;
          uint64_t v164 = v100;
          char v165 = v101;
          uint64_t v166 = v102;
          uint64_t v167 = (uint64_t)v103;
          uint64_t v168 = v174;
          *(_OWORD *)long long v169 = v175;
          *(_OWORD *)&v169[16] = v176;
          sub_2498A4888(&v162);
          goto LABEL_26;
        case 5:
          uint64_t v38 = v142;
          LOBYTE(v162) = 5;
          sub_2498C6358();
          uint64_t v46 = v141;
          uint64_t v47 = v178;
          sub_249AEDD38();
          if (v47) {
            goto LABEL_18;
          }
          LOBYTE(v162) = 0;
          sub_2498C6864();
          uint64_t v48 = v138;
          sub_249AEDE08();
          uint64_t v49 = v143;
          uint64_t v178 = v14;
          int v73 = v150;
          LOBYTE(v162) = 1;
          sub_2498C679C();
          sub_249AEDE08();
          LODWORD(v147) = v73;
          char v104 = v153;
          uint64_t v105 = v154;
          uint64_t v106 = v155;
          uint64_t v107 = v156;
          uint64_t v108 = v157;
          char v173 = 2;
          sub_249AEDE08();
          (*(void (**)(char *, uint64_t))(v130 + 8))(v46, v48);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v49 + 8))(v124, v178);
          LOBYTE(v162) = v147;
          uint64_t v163 = v104;
          uint64_t v164 = v105;
          char v165 = v106;
          uint64_t v166 = v107;
          uint64_t v167 = (uint64_t)v108;
          uint64_t v168 = v174;
          *(_OWORD *)long long v169 = v175;
          *(_OWORD *)&v169[16] = v176;
          sub_2498C4E50(&v162);
LABEL_26:
          sub_249890C54((uint64_t)&v162, (uint64_t)v177);
          uint64_t v120 = v38;
          goto LABEL_28;
        case 6:
          LOBYTE(v162) = 6;
          sub_2498C62B0();
          uint64_t v50 = v178;
          sub_249AEDD38();
          if (v50) {
            goto LABEL_18;
          }
          LOBYTE(v162) = 0;
          sub_2498C6810();
          uint64_t v54 = v137;
          uint64_t v55 = v20;
          sub_249AEDE08();
          uint64_t v56 = v143;
          uint64_t v178 = v14;
          int v74 = v150;
          int v75 = BYTE1(v150);
          LOBYTE(v162) = 1;
          sub_2498C679C();
          sub_249AEDE08();
          LODWORD(v146) = v75;
          LODWORD(v147) = v74;
          uint64_t v109 = v153;
          uint64_t v110 = v154;
          uint64_t v111 = v155;
          uint64_t v112 = v156;
          uint64_t v113 = v157;
          char v173 = 2;
          sub_249AEDE08();
          (*(void (**)(char *, uint64_t))(v131 + 8))(v55, v54);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v124, v178);
          LOBYTE(v162) = v147;
          BYTE1(v162) = (_BYTE)v146;
          uint64_t v163 = v109;
          uint64_t v164 = v110;
          char v165 = v111;
          uint64_t v166 = v112;
          uint64_t v167 = (uint64_t)v113;
          uint64_t v168 = v174;
          *(_OWORD *)long long v169 = v175;
          *(_OWORD *)&v169[16] = v176;
          sub_2498C4E70(&v162);
          goto LABEL_27;
        case 7:
          LOBYTE(v162) = 7;
          sub_2498C61B4();
          uint64_t v53 = v178;
          sub_249AEDD38();
          if (v53)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v143 + 8))(v16, v14);
            uint64_t v51 = (uint64_t)v148;
            return __swift_destroy_boxed_opaque_existential_2Tm(v51);
          }
          LOBYTE(v162) = 0;
          sub_2498C6748();
          uint64_t v57 = v21;
          sub_249AEDE08();
          int v145 = v24;
          uint64_t v178 = v14;
          LODWORD(v144) = v150;
          int v76 = BYTE1(v150);
          int v77 = BYTE2(v150);
          int v78 = BYTE3(v150);
          LOBYTE(v162) = 1;
          sub_2498C679C();
          sub_249AEDE08();
          LODWORD(v139) = v76;
          LODWORD(v140) = v78;
          LODWORD(v141) = v77;
          uint64_t v114 = v153;
          char v115 = v154;
          __int16 v116 = v155;
          char v117 = v156;
          uint64_t v118 = v157;
          char v173 = 2;
          sub_249AEDE08();
          uint64_t v119 = (void (**)(char *, uint64_t))(v143 + 8);
          (*(void (**)(char *, uint64_t))(v132 + 8))(v22, v57);
          swift_bridgeObjectRelease();
          (*v119)(v124, v178);
          LOBYTE(v162) = (_BYTE)v144;
          BYTE1(v162) = (_BYTE)v139;
          BYTE2(v162) = (_BYTE)v141;
          BYTE3(v162) = (_BYTE)v140;
          uint64_t v163 = v114;
          uint64_t v164 = v115;
          char v165 = v116;
          uint64_t v166 = v117;
          uint64_t v167 = (uint64_t)v118;
          uint64_t v168 = v174;
          *(_OWORD *)long long v169 = v175;
          *(_OWORD *)&v169[16] = v176;
          sub_2498C67F0(&v162);
          goto LABEL_27;
        default:
          LOBYTE(v162) = 0;
          sub_2498C66A0();
          uint64_t v26 = v122;
          uint64_t v27 = v178;
          sub_249AEDD38();
          if (v27)
          {
LABEL_18:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v143 + 8))(v25, v14);
          }
          else
          {
            LOBYTE(v162) = 0;
            sub_2498C6A60();
            uint64_t v28 = v121;
            sub_249AEDE08();
            uint64_t v178 = v14;
            LODWORD(v147) = v150;
            int v58 = BYTE1(v150);
            LOBYTE(v162) = 1;
            sub_2498C679C();
            sub_249AEDE08();
            uint64_t v59 = v125;
            LODWORD(v146) = v58;
            uint64_t v79 = v153;
            uint64_t v80 = v154;
            uint64_t v81 = v155;
            uint64_t v82 = v156;
            uint64_t v83 = v157;
            char v173 = 2;
            sub_249AEDE08();
            uint64_t v84 = (void (**)(char *, uint64_t))(v143 + 8);
            (*(void (**)(char *, uint64_t))(v59 + 8))(v26, v28);
            swift_bridgeObjectRelease();
            (*v84)(v124, v178);
            LOBYTE(v162) = v147;
            BYTE1(v162) = (_BYTE)v146;
            uint64_t v163 = v79;
            uint64_t v164 = v80;
            char v165 = v81;
            uint64_t v166 = v82;
            uint64_t v167 = (uint64_t)v83;
            uint64_t v168 = v174;
            *(_OWORD *)long long v169 = v175;
            *(_OWORD *)&v169[16] = v176;
            sub_2498C6AB4(&v162);
LABEL_27:
            sub_249890C54((uint64_t)&v162, (uint64_t)v177);
            uint64_t v120 = v142;
LABEL_28:
            sub_249890C54((uint64_t)v177, v120);
          }
          break;
      }
    }
    else
    {
      uint64_t v29 = sub_249AEDB08();
      swift_allocError();
      uint64_t v31 = v30;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
      *uint64_t v31 = &type metadata for VisibilityRule;
      sub_249AEDD48();
      sub_249AEDAE8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x263F8DCB0], v29);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v143 + 8))(v16, v14);
    }
  }
  uint64_t v51 = (uint64_t)v148;
  return __swift_destroy_boxed_opaque_existential_2Tm(v51);
}

uint64_t sub_2498BE5D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisibilityRule.init(from:)(a1, a2);
}

uint64_t sub_2498BE5EC(void *a1)
{
  return VisibilityRule.encode(to:)(a1);
}

uint64_t sub_2498BE604()
{
  sub_249890C54(v0, (uint64_t)v3);
  sub_249890C54((uint64_t)v3, (uint64_t)v2);
  sub_249AEE338();
  VisibilityRule.hash(into:)();
  return sub_249AEE388();
}

uint64_t sub_2498BE664()
{
  sub_249890C54(v0, (uint64_t)v3);
  sub_249890C54((uint64_t)v3, (uint64_t)v2);
  sub_249AEE338();
  VisibilityRule.hash(into:)();
  return sub_249AEE388();
}

double VisibilityRule.BezierCurve.startControlPoint.getter()
{
  return *(double *)v0;
}

double VisibilityRule.BezierCurve.endControlPoint.getter()
{
  return *(double *)(v0 + 16);
}

void _s14CarPlayAssetUI14VisibilityRuleO11BezierCurveV17startControlPoint03endjK0AE05SwiftD004UnitK0V_AJtcfC_0(double *a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  *a1 = a2;
  a1[1] = a3;
  a1[2] = a4;
  a1[3] = a5;
}

double static VisibilityRule.BezierCurve.easeIn.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.42;
  __asm { FMOV            V1.2D, #1.0 }
  *a1 = xmmword_249AF36F0;
  a1[1] = _Q1;
  return result;
}

double static VisibilityRule.BezierCurve.easeOut.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  double result = 0.58;
  *(_OWORD *)(a1 + 16) = xmmword_249AF3700;
  return result;
}

double static VisibilityRule.BezierCurve.easeInOut.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.42;
  *a1 = xmmword_249AF36F0;
  a1[1] = xmmword_249AF3700;
  return result;
}

void static VisibilityRule.BezierCurve.default.getter(void *a1@<X8>)
{
  *a1 = 0x3FB999999999999ALL;
  a1[1] = 0;
  a1[2] = 0;
  a1[3] = 0x3FF0000000000000;
}

uint64_t VisibilityRule.BezierCurve.hash(into:)()
{
  sub_249AECCF8();

  return sub_249AECCF8();
}

uint64_t static VisibilityRule.BezierCurve.== infix(_:_:)()
{
  if ((sub_249AECCE8() & 1) == 0) {
    return 0;
  }

  return sub_249AECCE8();
}

uint64_t VisibilityRule.BezierCurve.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_2498BE880()
{
  return sub_249AEE388();
}

uint64_t sub_2498BE8F0()
{
  sub_249AECCF8();

  return sub_249AECCF8();
}

uint64_t sub_2498BE940()
{
  return sub_249AEE388();
}

uint64_t sub_2498BE9AC()
{
  if ((sub_249AECCE8() & 1) == 0) {
    return 0;
  }

  return sub_249AECCE8();
}

float VisibilityRule.Animation.duration.getter()
{
  return *(float *)v0;
}

float VisibilityRule.Animation.delay.getter()
{
  return *(float *)(v0 + 4);
}

__n128 VisibilityRule.Animation.bezierCurve.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 8);
  long long v3 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t VisibilityRule.Animation.hash(into:)()
{
  sub_249AEE368();
  sub_249AEE368();
  sub_249AECCF8();

  return sub_249AECCF8();
}

uint64_t sub_2498BEAC8()
{
  uint64_t v1 = 0x79616C6564;
  if (*v0 != 1) {
    uint64_t v1 = 0x75437265697A6562;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E6F697461727564;
  }
}

uint64_t sub_2498BEB28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498CA32C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498BEB50(uint64_t a1)
{
  unint64_t v2 = sub_2498C6ACC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BEB8C(uint64_t a1)
{
  unint64_t v2 = sub_2498C6ACC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.Animation.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE9F8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6ACC();
  sub_249AEE468();
  LOBYTE(v14) = 0;
  sub_249AEDED8();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_249AEDED8();
    uint64_t v14 = v8;
    uint64_t v15 = v9;
    uint64_t v16 = v10;
    uint64_t v17 = v11;
    v13[15] = 2;
    sub_2498C6B20();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.Animation.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t VisibilityRule.Animation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEA10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6ACC();
  sub_249AEE428();
  if (!v2)
  {
    LOBYTE(v16[0]) = 0;
    sub_249AEDDD8();
    int v10 = v9;
    LOBYTE(v16[0]) = 1;
    sub_249AEDDD8();
    int v13 = v12;
    char v17 = 2;
    sub_2498C6B74();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v14 = v16[0];
    long long v15 = v16[1];
    *(_DWORD *)a2 = v10;
    *(_DWORD *)(a2 + 4) = v13;
    *(_OWORD *)(a2 + 8) = v14;
    *(_OWORD *)(a2 + 24) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498BF014@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisibilityRule.Animation.init(from:)(a1, a2);
}

uint64_t sub_2498BF02C(void *a1)
{
  return VisibilityRule.Animation.encode(to:)(a1);
}

uint64_t sub_2498BF048()
{
  sub_249AEE368();
  sub_249AEE368();
  sub_249AECCF8();

  return sub_249AECCF8();
}

uint64_t sub_2498BF0D4()
{
  return sub_249AEE388();
}

uint64_t VisibilityRule.BezierCurve.encode(to:)(void *a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v5 = v1[3];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE448();
  uint64_t v10 = v4;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
  sub_24988E51C();
  sub_249AEDF78();
  if (!v2)
  {
    uint64_t v10 = v3;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_249AEDF78();
    uint64_t v10 = v6;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_249AEDF78();
    uint64_t v10 = v5;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v8, v9);
    sub_249AEDF78();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v8);
}

uint64_t VisibilityRule.BezierCurve.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE408();
  if (!v2)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    sub_24988E570();
    sub_249AEDF58();
    uint64_t v5 = v12;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    sub_249AEDF58();
    uint64_t v6 = v12;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    sub_249AEDF58();
    uint64_t v7 = v12;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v10, v11);
    sub_249AEDF58();
    uint64_t v9 = v12;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v10);
    *a2 = v5;
    a2[1] = v6;
    a2[2] = v7;
    a2[3] = v9;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498BF4B4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return VisibilityRule.BezierCurve.init(from:)(a1, a2);
}

uint64_t sub_2498BF4CC(void *a1)
{
  return VisibilityRule.BezierCurve.encode(to:)(a1);
}

uint64_t sub_2498BF4E4()
{
  return sub_249AED3B8();
}

uint64_t sub_2498BF544()
{
  return sub_249AED358();
}

uint64_t static VisibilityRule.TransmissionModeRule.numeric.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_2498C1A9C(&unk_2696DE6E8, &asc_2696DE6E9, a1);
}

uint64_t static VisibilityRule.TransmissionModeRule.numeric.setter(char *a1)
{
  return sub_2498C1B04(a1, &unk_2696DE6E8, &asc_2696DE6E9);
}

uint64_t (*static VisibilityRule.TransmissionModeRule.numeric.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static VisibilityRule.TransmissionModeRule.nonnumeric.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_2498C1A9C(&unk_2696DE6EA, asc_2696DE6EB, a1);
}

uint64_t static VisibilityRule.TransmissionModeRule.nonnumeric.setter(char *a1)
{
  return sub_2498C1B04(a1, &unk_2696DE6EA, asc_2696DE6EB);
}

uint64_t (*static VisibilityRule.TransmissionModeRule.nonnumeric.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2498BF690(uint64_t a1)
{
  unint64_t v2 = sub_2498C6BC8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BF6CC(uint64_t a1)
{
  unint64_t v2 = sub_2498C6BC8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.TransmissionModeRule.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEA20);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6BC8();
  sub_249AEE468();
  char v15 = v8;
  char v14 = 0;
  sub_2498C6C1C();
  sub_249AEDF08();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_24989C934();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.TransmissionModeRule.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEA38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6BC8();
  sub_249AEE428();
  if (!v2)
  {
    char v15 = 0;
    sub_2498C6C70();
    sub_249AEDE08();
    char v9 = v16;
    char v13 = 1;
    sub_24989C988();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498BFA74@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return VisibilityRule.TransmissionModeRule.init(from:)(a1, a2);
}

uint64_t sub_2498BFA8C(void *a1)
{
  return VisibilityRule.TransmissionModeRule.encode(to:)(a1);
}

uint64_t sub_2498BFAB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498C6030(a1, a2) & 1;
}

CarPlayAssetUI::VisibilityRule::TickmarksSpeedUnitRule::Rule_optional __swiftcall VisibilityRule.TickmarksSpeedUnitRule.Rule.init(rawValue:)(Swift::Int rawValue)
{
  unsigned int v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(v2) = 3;
  }
  *uint64_t v1 = v2;
  return (CarPlayAssetUI::VisibilityRule::TickmarksSpeedUnitRule::Rule_optional)rawValue;
}

CarPlayAssetUI::VisibilityRule::TickmarksSpeedUnitRule::Rule_optional sub_2498BFAF0(Swift::Int *a1)
{
  return VisibilityRule.TickmarksSpeedUnitRule.Rule.init(rawValue:)(*a1);
}

uint64_t sub_2498BFAF8()
{
  return sub_249AED3B8();
}

uint64_t sub_2498BFB58()
{
  return sub_249AED358();
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.noUnit.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_2498BFCC4(&asc_2696DE6EB[1], a31, &a31[1], a1);
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.noUnit.setter(char *a1)
{
  return sub_2498BFD3C(a1, &asc_2696DE6EB[1], a31, &a31[1]);
}

uint64_t (*static VisibilityRule.TickmarksSpeedUnitRule.noUnit.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.mph.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_2498BFCC4(&unk_2696DE6EF, a31_0, &a31_0[1], a1);
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.mph.setter(char *a1)
{
  return sub_2498BFD3C(a1, &unk_2696DE6EF, a31_0, &a31_0[1]);
}

uint64_t (*static VisibilityRule.TickmarksSpeedUnitRule.mph.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.kmh.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_2498BFCC4(&unk_2696DE6F2, a31_1, &a31_1[1], a1);
}

uint64_t sub_2498BFCC4@<X0>(unsigned char *a1@<X0>, char *a2@<X1>, char *a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = swift_beginAccess();
  char v9 = *a2;
  char v10 = *a3;
  *a4 = *a1;
  a4[1] = v9;
  a4[2] = v10;
  return result;
}

uint64_t static VisibilityRule.TickmarksSpeedUnitRule.kmh.setter(char *a1)
{
  return sub_2498BFD3C(a1, &unk_2696DE6F2, a31_1, &a31_1[1]);
}

uint64_t sub_2498BFD3C(char *a1, unsigned char *a2, unsigned char *a3, unsigned char *a4)
{
  char v7 = *a1;
  char v8 = a1[1];
  char v9 = a1[2];
  uint64_t result = swift_beginAccess();
  *a2 = v7;
  *a3 = v8;
  *a4 = v9;
  return result;
}

uint64_t (*static VisibilityRule.TickmarksSpeedUnitRule.kmh.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t VisibilityRule.TickmarksSpeedUnitRule.hash(into:)()
{
  sub_249AEE348();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498BFEAC()
{
  unint64_t v1 = 0xD00000000000001CLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1701606770;
  }
}

uint64_t sub_2498BFF0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498CA494(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498BFF34(uint64_t a1)
{
  unint64_t v2 = sub_2498C6CC4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498BFF70(uint64_t a1)
{
  unint64_t v2 = sub_2498C6CC4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.TickmarksSpeedUnitRule.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEA48);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v13 = v1[2];
  int v14 = v9;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6CC4();
  sub_249AEE468();
  char v20 = v8;
  char v19 = 0;
  sub_2498C6D18();
  sub_249AEDF08();
  if (!v2)
  {
    char v10 = v13;
    char v18 = v14;
    char v17 = 1;
    sub_24989C934();
    sub_249AEDF08();
    char v16 = v10;
    char v15 = 2;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.TickmarksSpeedUnitRule.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t VisibilityRule.TickmarksSpeedUnitRule.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEA60);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6CC4();
  sub_249AEE428();
  if (!v2)
  {
    char v18 = 0;
    sub_2498C6D6C();
    sub_249AEDE08();
    char v9 = v19;
    char v16 = 1;
    sub_24989C988();
    sub_249AEDE08();
    int v13 = v17;
    char v14 = 2;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v11 = v15;
    *a2 = v9;
    a2[1] = v13;
    a2[2] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498C0458@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return VisibilityRule.TickmarksSpeedUnitRule.init(from:)(a1, a2);
}

uint64_t sub_2498C0470(void *a1)
{
  return VisibilityRule.TickmarksSpeedUnitRule.encode(to:)(a1);
}

uint64_t sub_2498C048C()
{
  sub_249AEE348();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498C0538()
{
  return sub_249AEE388();
}

CarPlayAssetUI::VisibilityRule::SpeedLimiterRule::Rule_optional __swiftcall VisibilityRule.SpeedLimiterRule.Rule.init(rawValue:)(Swift::Int rawValue)
{
  unint64_t v2 = 0x302010004uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 5) {
    LOBYTE(v2) = 4;
  }
  *unint64_t v1 = v2;
  return (CarPlayAssetUI::VisibilityRule::SpeedLimiterRule::Rule_optional)rawValue;
}

uint64_t VisibilityRule.SpeedLimiterRule.Rule.rawValue.getter()
{
  return *v0 + 1;
}

CarPlayAssetUI::VisibilityRule::SpeedLimiterRule::Rule_optional sub_2498C061C(Swift::Int *a1)
{
  return VisibilityRule.SpeedLimiterRule.Rule.init(rawValue:)(*a1);
}

void sub_2498C0624(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_2498C0634()
{
  return sub_249AED3B8();
}

uint64_t sub_2498C0694()
{
  return sub_249AED358();
}

uint64_t sub_2498C06E4()
{
  return sub_249AEE388();
}

uint64_t sub_2498C072C()
{
  return sub_249AEE348();
}

uint64_t sub_2498C075C()
{
  return sub_249AEE388();
}

double static VisibilityRule.SpeedLimiterRule.cruiseControl.getter@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = qword_2696DE720;
  char v3 = byte_2696DE728;
  __int16 v4 = unk_2696DE729;
  *(unsigned char *)a1 = byte_2696DE6F8;
  *(_OWORD *)(a1 + 8) = unk_2696DE700;
  double result = dbl_2696DE710[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_2696DE710;
  *(void *)(a1 + 40) = v2;
  *(unsigned char *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.cruiseControl.setter(uint64_t a1)
{
  char v1 = *(unsigned char *)a1;
  __n128 v6 = *(__n128 *)(a1 + 24);
  long long v7 = *(_OWORD *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);
  __int16 v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_2696DE6F8 = v1;
  unk_2696DE700 = v7;
  __n128 result = v6;
  *(__n128 *)dbl_2696DE710 = v6;
  qword_2696DE720 = v2;
  byte_2696DE728 = v3;
  unk_2696DE729 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.cruiseControl.modify())()
{
  return j_j__swift_endAccess;
}

double static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabel.getter@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = qword_2696DE758;
  char v3 = byte_2696DE760;
  __int16 v4 = unk_2696DE761;
  *(unsigned char *)a1 = byte_2696DE730;
  *(_OWORD *)(a1 + 8) = unk_2696DE738;
  double result = dbl_2696DE748[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_2696DE748;
  *(void *)(a1 + 40) = v2;
  *(unsigned char *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabel.setter(uint64_t a1)
{
  char v1 = *(unsigned char *)a1;
  __n128 v6 = *(__n128 *)(a1 + 24);
  long long v7 = *(_OWORD *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);
  __int16 v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_2696DE730 = v1;
  unk_2696DE738 = v7;
  __n128 result = v6;
  *(__n128 *)dbl_2696DE748 = v6;
  qword_2696DE758 = v2;
  byte_2696DE760 = v3;
  unk_2696DE761 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabel.modify())()
{
  return j_j__swift_endAccess;
}

double static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabelNoHide.getter@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = qword_2696DE790;
  char v3 = byte_2696DE798;
  __int16 v4 = unk_2696DE799;
  *(unsigned char *)a1 = byte_2696DE768;
  *(_OWORD *)(a1 + 8) = unk_2696DE770;
  double result = dbl_2696DE780[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_2696DE780;
  *(void *)(a1 + 40) = v2;
  *(unsigned char *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabelNoHide.setter(uint64_t a1)
{
  char v1 = *(unsigned char *)a1;
  __n128 v6 = *(__n128 *)(a1 + 24);
  long long v7 = *(_OWORD *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);
  __int16 v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_2696DE768 = v1;
  unk_2696DE770 = v7;
  __n128 result = v6;
  *(__n128 *)dbl_2696DE780 = v6;
  qword_2696DE790 = v2;
  byte_2696DE798 = v3;
  unk_2696DE799 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.speedLimitedOrCruiseControlLabelNoHide.modify())()
{
  return j_j__swift_endAccess;
}

double static VisibilityRule.SpeedLimiterRule.speedLimited.getter@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = qword_2696DE7C8;
  char v3 = byte_2696DE7D0;
  __int16 v4 = unk_2696DE7D1;
  *(unsigned char *)a1 = byte_2696DE7A0;
  *(_OWORD *)(a1 + 8) = unk_2696DE7A8;
  double result = dbl_2696DE7B8[0];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)dbl_2696DE7B8;
  *(void *)(a1 + 40) = v2;
  *(unsigned char *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.speedLimited.setter(uint64_t a1)
{
  char v1 = *(unsigned char *)a1;
  __n128 v6 = *(__n128 *)(a1 + 24);
  long long v7 = *(_OWORD *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);
  __int16 v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_2696DE7A0 = v1;
  unk_2696DE7A8 = v7;
  __n128 result = v6;
  *(__n128 *)dbl_2696DE7B8 = v6;
  qword_2696DE7C8 = v2;
  byte_2696DE7D0 = v3;
  unk_2696DE7D1 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.speedLimited.modify())()
{
  return j_j__swift_endAccess;
}

double static VisibilityRule.SpeedLimiterRule.cruiseControlActivated.getter@<D0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = qword_2696DE800;
  char v3 = byte_2696DE808;
  __int16 v4 = unk_2696DE809;
  *(unsigned char *)a1 = byte_2696DE7D8;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)&algn_2696DE7D9[7];
  double result = *(double *)&algn_2696DE7D9[23];
  *(_OWORD *)(a1 + 24) = *(_OWORD *)&algn_2696DE7D9[23];
  *(void *)(a1 + 40) = v2;
  *(unsigned char *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 49) = v4;
  return result;
}

__n128 static VisibilityRule.SpeedLimiterRule.cruiseControlActivated.setter(uint64_t a1)
{
  char v1 = *(unsigned char *)a1;
  __n128 v6 = *(__n128 *)(a1 + 24);
  long long v7 = *(_OWORD *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);
  __int16 v4 = *(_WORD *)(a1 + 49);
  swift_beginAccess();
  byte_2696DE7D8 = v1;
  *(_OWORD *)&algn_2696DE7D9[7] = v7;
  __n128 result = v6;
  *(__n128 *)&algn_2696DE7D9[23] = v6;
  qword_2696DE800 = v2;
  byte_2696DE808 = v3;
  unk_2696DE809 = v4;
  return result;
}

uint64_t (*static VisibilityRule.SpeedLimiterRule.cruiseControlActivated.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t VisibilityRule.SpeedLimiterRule.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 48);
  sub_249AEE348();
  sub_249AEE358();
  if (v1 != 1)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AECCF8();
    sub_249AECCF8();
  }
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_2498C0F9C(char a1)
{
  unint64_t result = 1701606770;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2498C1034()
{
  return sub_2498C0F9C(*v0);
}

uint64_t sub_2498C103C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498CA5D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498C1064(uint64_t a1)
{
  unint64_t v2 = sub_2498C6DC0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498C10A0(uint64_t a1)
{
  unint64_t v2 = sub_2498C6DC0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.SpeedLimiterRule.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEA70);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v19 = *((void *)v1 + 2);
  uint64_t v20 = v9;
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v17 = *((void *)v1 + 4);
  uint64_t v18 = v10;
  uint64_t v16 = *((void *)v1 + 5);
  int v27 = v1[48];
  LODWORD(v10) = v1[49];
  int v14 = v1[50];
  int v15 = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6DC0();
  sub_249AEE468();
  LOBYTE(v21) = v8;
  char v28 = 0;
  sub_2498C6E14();
  sub_249AEDF08();
  if (!v2)
  {
    char v12 = v14;
    char v11 = v15;
    uint64_t v21 = v20;
    uint64_t v22 = v19;
    uint64_t v23 = v18;
    uint64_t v24 = v17;
    uint64_t v25 = v16;
    char v26 = v27;
    char v28 = 1;
    sub_2498C625C();
    sub_249AEDEA8();
    LOBYTE(v21) = v11;
    char v28 = 2;
    sub_24989C934();
    sub_249AEDF08();
    LOBYTE(v21) = v12;
    char v28 = 3;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.SpeedLimiterRule.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 48);
  sub_249AEE338();
  sub_249AEE348();
  sub_249AEE358();
  if (v1 != 1)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AECCF8();
    sub_249AECCF8();
  }
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

uint64_t VisibilityRule.SpeedLimiterRule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEA88);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6DC0();
  sub_249AEE428();
  if (!v2)
  {
    char v28 = 0;
    sub_2498C6E68();
    sub_249AEDE08();
    int v9 = v21;
    char v28 = 1;
    sub_2498C679C();
    sub_249AEDDA8();
    int v27 = v9;
    uint64_t v19 = v22;
    uint64_t v20 = v21;
    uint64_t v17 = v24;
    uint64_t v18 = v23;
    uint64_t v16 = v25;
    int v10 = v26;
    char v28 = 2;
    sub_24989C988();
    sub_249AEDE08();
    HIDWORD(v15) = v10;
    LOBYTE(v10) = v21;
    char v28 = 3;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v12 = v21;
    *(unsigned char *)a2 = v27;
    uint64_t v13 = v19;
    *(void *)(a2 + 8) = v20;
    *(void *)(a2 + 16) = v13;
    uint64_t v14 = v17;
    *(void *)(a2 + 24) = v18;
    *(void *)(a2 + 32) = v14;
    *(void *)(a2 + 40) = v16;
    *(unsigned char *)(a2 + 48) = BYTE4(v15);
    *(unsigned char *)(a2 + 49) = v10;
    *(unsigned char *)(a2 + 50) = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498C173C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisibilityRule.SpeedLimiterRule.init(from:)(a1, a2);
}

uint64_t sub_2498C1754(void *a1)
{
  return VisibilityRule.SpeedLimiterRule.encode(to:)(a1);
}

uint64_t sub_2498C1774()
{
  int v1 = *(unsigned __int8 *)(v0 + 48);
  sub_249AEE338();
  sub_249AEE348();
  sub_249AEE358();
  if (v1 != 1)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AECCF8();
    sub_249AECCF8();
  }
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

CarPlayAssetUI::VisibilityRule::RemainingRangeRule::Rule_optional __swiftcall VisibilityRule.RemainingRangeRule.Rule.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (rawValue == 1) {
    char v2 = 0;
  }
  *int v1 = v2;
  return (CarPlayAssetUI::VisibilityRule::RemainingRangeRule::Rule_optional)rawValue;
}

uint64_t VisibilityRule.RemainingRangeRule.Rule.rawValue.getter()
{
  if (*v0) {
    return 2;
  }
  else {
    return 1;
  }
}

void *sub_2498C18F4@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 2) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result == 1) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  *a2 = v3;
  return result;
}

void sub_2498C1914(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1;
  if (*v1) {
    uint64_t v2 = 2;
  }
  *a1 = v2;
}

uint64_t sub_2498C192C()
{
  return sub_249AED3B8();
}

uint64_t sub_2498C198C()
{
  return sub_249AED358();
}

uint64_t sub_2498C19DC()
{
  return sub_249AEE348();
}

uint64_t static VisibilityRule.RemainingRangeRule.iconOnly.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_2498C1A9C(&unk_2696DE80B, asc_2696DE80C, a1);
}

uint64_t static VisibilityRule.RemainingRangeRule.iconOnly.setter(char *a1)
{
  return sub_2498C1B04(a1, &unk_2696DE80B, asc_2696DE80C);
}

uint64_t (*static VisibilityRule.RemainingRangeRule.iconOnly.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static VisibilityRule.RemainingRangeRule.rangeAndIcon.getter@<X0>(unsigned char *a1@<X8>)
{
  return sub_2498C1A9C(&asc_2696DE80C[1], asc_2696DE80E, a1);
}

uint64_t sub_2498C1A9C@<X0>(unsigned char *a1@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = swift_beginAccess();
  char v7 = *a2;
  *a3 = *a1;
  a3[1] = v7;
  return result;
}

uint64_t static VisibilityRule.RemainingRangeRule.rangeAndIcon.setter(char *a1)
{
  return sub_2498C1B04(a1, &asc_2696DE80C[1], asc_2696DE80E);
}

uint64_t sub_2498C1B04(char *a1, unsigned char *a2, unsigned char *a3)
{
  char v5 = *a1;
  char v6 = a1[1];
  uint64_t result = swift_beginAccess();
  *a2 = v5;
  *a3 = v6;
  return result;
}

uint64_t (*static VisibilityRule.RemainingRangeRule.rangeAndIcon.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO016TransmissionModeF0V4hash4intoys6HasherVz_tF_0()
{
  sub_249AEE348();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498C1C3C()
{
  if (*v0) {
    return 0x6E65644961746164;
  }
  else {
    return 1701606770;
  }
}

uint64_t sub_2498C1C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498CA768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498C1CA4(uint64_t a1)
{
  unint64_t v2 = sub_2498C6EBC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498C1CE0(uint64_t a1)
{
  unint64_t v2 = sub_2498C6EBC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.RemainingRangeRule.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEA98);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6EBC();
  sub_249AEE468();
  char v15 = v8;
  char v14 = 0;
  sub_2498C6F10();
  sub_249AEDF08();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_24989C934();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO016TransmissionModeF0V9hashValueSivg_0()
{
  return sub_249AEE388();
}

uint64_t VisibilityRule.RemainingRangeRule.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEAB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6EBC();
  sub_249AEE428();
  if (!v2)
  {
    char v15 = 0;
    sub_2498C6F64();
    sub_249AEDE08();
    char v9 = v16;
    char v13 = 1;
    sub_24989C988();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v14;
    *a2 = v9;
    a2[1] = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498C2110@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return VisibilityRule.RemainingRangeRule.init(from:)(a1, a2);
}

uint64_t sub_2498C2128(void *a1)
{
  return VisibilityRule.RemainingRangeRule.encode(to:)(a1);
}

uint64_t sub_2498C2140()
{
  return sub_249AEE388();
}

CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional __swiftcall VisibilityRule.LayoutModeRule.Level.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue <= 199)
  {
    if (!rawValue)
    {
      *int v1 = 0;
      return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
    }
    if (rawValue == 100)
    {
      *int v1 = 1;
      return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
    }
LABEL_12:
    *int v1 = 5;
    return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
  }
  if (rawValue == 400)
  {
    *int v1 = 4;
    return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
  }
  if (rawValue == 300)
  {
    *int v1 = 3;
    return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
  }
  if (rawValue != 200) {
    goto LABEL_12;
  }
  *int v1 = 2;
  return (CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional)rawValue;
}

uint64_t VisibilityRule.LayoutModeRule.Level.rawValue.getter()
{
  return 100 * *v0;
}

CarPlayAssetUI::VisibilityRule::LayoutModeRule::Level_optional sub_2498C2244(Swift::Int *a1)
{
  return VisibilityRule.LayoutModeRule.Level.init(rawValue:)(*a1);
}

void sub_2498C224C(void *a1@<X8>)
{
  *a1 = 100 * *v1;
}

uint64_t sub_2498C2260()
{
  return sub_249AED3B8();
}

uint64_t sub_2498C22C0()
{
  return sub_249AED358();
}

uint64_t sub_2498C2310()
{
  return sub_249AEE388();
}

uint64_t sub_2498C235C()
{
  return sub_249AEE348();
}

uint64_t sub_2498C2390()
{
  return sub_249AEE388();
}

float static VisibilityRule.LayoutModeRule.none.getter@<S0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  float result = *(float *)&dword_2696DE814;
  *(unsigned char *)a1 = byte_2696DE810;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.none.setter(char *a1)
{
  return sub_2498C27EC(a1, &byte_2696DE810, &dword_2696DE814);
}

uint64_t (*static VisibilityRule.LayoutModeRule.none.modify())()
{
  return j_j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.exit.getter@<S0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  float result = *(float *)&dword_2696DE81C;
  *(unsigned char *)a1 = byte_2696DE818;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.exit.setter(char *a1)
{
  return sub_2498C27EC(a1, &byte_2696DE818, &dword_2696DE81C);
}

uint64_t (*static VisibilityRule.LayoutModeRule.exit.modify())()
{
  return j_j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.ghost.getter@<S0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  float result = *(float *)&dword_2696DE824;
  *(unsigned char *)a1 = byte_2696DE820;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.ghost.setter(char *a1)
{
  return sub_2498C27EC(a1, &byte_2696DE820, &dword_2696DE824);
}

uint64_t (*static VisibilityRule.LayoutModeRule.ghost.modify())()
{
  return j_j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.ghostFaded.getter@<S0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  float result = *(float *)&dword_2696DE82C;
  *(unsigned char *)a1 = byte_2696DE828;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.ghostFaded.setter(char *a1)
{
  return sub_2498C27EC(a1, &byte_2696DE828, &dword_2696DE82C);
}

uint64_t (*static VisibilityRule.LayoutModeRule.ghostFaded.modify())()
{
  return j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.accessory.getter@<S0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  float result = *(float *)&dword_2696DE834;
  *(unsigned char *)a1 = byte_2696DE830;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.accessory.setter(char *a1)
{
  return sub_2498C27EC(a1, &byte_2696DE830, &dword_2696DE834);
}

uint64_t (*static VisibilityRule.LayoutModeRule.accessory.modify())()
{
  return j_j__swift_endAccess;
}

float static VisibilityRule.LayoutModeRule.drive.getter@<S0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  float result = *(float *)&dword_2696DE83C;
  *(unsigned char *)a1 = byte_2696DE838;
  *(float *)(a1 + 4) = result;
  return result;
}

uint64_t static VisibilityRule.LayoutModeRule.drive.setter(char *a1)
{
  return sub_2498C27EC(a1, &byte_2696DE838, &dword_2696DE83C);
}

uint64_t sub_2498C27EC(char *a1, unsigned char *a2, _DWORD *a3)
{
  char v5 = *a1;
  int v6 = *((_DWORD *)a1 + 1);
  uint64_t result = swift_beginAccess();
  *a2 = v5;
  *a3 = v6;
  return result;
}

uint64_t (*static VisibilityRule.LayoutModeRule.drive.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t VisibilityRule.LayoutModeRule.hash(into:)()
{
  return sub_249AEE368();
}

uint64_t sub_2498C28F0()
{
  if (*v0) {
    return 0x7974696361706FLL;
  }
  else {
    return 0x6C6576656CLL;
  }
}

uint64_t sub_2498C2928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498CA870(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498C2950(uint64_t a1)
{
  unint64_t v2 = sub_2498C6FB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498C298C(uint64_t a1)
{
  unint64_t v2 = sub_2498C6FB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.LayoutModeRule.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEAC0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v8 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6FB8();
  sub_249AEE468();
  v10[15] = v8;
  v10[14] = 0;
  sub_2498C700C();
  sub_249AEDF08();
  if (!v2)
  {
    v10[13] = 1;
    sub_249AEDED8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.LayoutModeRule.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t VisibilityRule.LayoutModeRule.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEAD8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C6FB8();
  sub_249AEE428();
  if (!v2)
  {
    v13[14] = 0;
    sub_2498C7060();
    sub_249AEDE08();
    char v9 = v13[15];
    v13[13] = 1;
    sub_249AEDDD8();
    int v11 = v10;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9;
    *(_DWORD *)(a2 + 4) = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498C2D7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return VisibilityRule.LayoutModeRule.init(from:)(a1, a2);
}

uint64_t sub_2498C2D94(void *a1)
{
  return VisibilityRule.LayoutModeRule.encode(to:)(a1);
}

uint64_t sub_2498C2DB0()
{
  return sub_249AEE368();
}

uint64_t sub_2498C2DFC()
{
  return sub_249AEE388();
}

BOOL sub_2498C2E60(float *a1, float *a2)
{
  return a1[1] == a2[1] && *(unsigned __int8 *)a1 == *(unsigned __int8 *)a2;
}

uint64_t VisibilityRule.InvalidDataRule.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498C2EE4()
{
  return 0x6E65644961746164;
}

uint64_t sub_2498C2F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2498C2FC4(uint64_t a1)
{
  unint64_t v2 = sub_2498C70B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498C3000(uint64_t a1)
{
  unint64_t v2 = sub_2498C70B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.InvalidDataRule.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEAE8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C70B4();
  sub_249AEE468();
  char v10 = v7;
  sub_24989C934();
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t VisibilityRule.InvalidDataRule.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t VisibilityRule.InvalidDataRule.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEAF8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C70B4();
  sub_249AEE428();
  if (!v2)
  {
    sub_24989C988();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498C3354@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return VisibilityRule.InvalidDataRule.init(from:)(a1, a2);
}

uint64_t sub_2498C336C(void *a1)
{
  return VisibilityRule.InvalidDataRule.encode(to:)(a1);
}

uint64_t sub_2498C3384()
{
  return sub_249AEE388();
}

uint64_t sub_2498C33EC()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498C3450()
{
  return sub_249AEE388();
}

uint64_t VisibilityRule.SecondarySpeedRule.hash(into:)()
{
  return sub_249AEE358();
}

uint64_t sub_2498C3528()
{
  if (*v0) {
    return 0x64656C62616E65;
  }
  else {
    return 0x6E65644961746164;
  }
}

uint64_t sub_2498C3570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498CA95C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498C3598(uint64_t a1)
{
  unint64_t v2 = sub_2498C7108();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498C35D4(uint64_t a1)
{
  unint64_t v2 = sub_2498C7108();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.SecondarySpeedRule.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEB00);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C7108();
  sub_249AEE468();
  char v15 = v8;
  char v14 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v13 = v11;
    char v12 = 1;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.SecondarySpeedRule.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t VisibilityRule.SecondarySpeedRule.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEB10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C7108();
  sub_249AEE428();
  if (!v2)
  {
    char v15 = 0;
    sub_24989C988();
    sub_249AEDE08();
    char v9 = v16;
    char v14 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEB18);
    sub_2498C715C();
    sub_249AEDDA8();
    char v11 = v13 & 1;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498C3A08@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return VisibilityRule.SecondarySpeedRule.init(from:)(a1, a2);
}

uint64_t sub_2498C3A20(void *a1)
{
  return VisibilityRule.SecondarySpeedRule.encode(to:)(a1);
}

uint64_t sub_2498C3A38()
{
  return sub_249AEE388();
}

uint64_t sub_2498C3AB8()
{
  return sub_249AEE358();
}

uint64_t sub_2498C3B28()
{
  return sub_249AEE388();
}

uint64_t sub_2498C3BA8()
{
  return sub_249AED3B8();
}

uint64_t sub_2498C3C08()
{
  return sub_249AED358();
}

uint64_t sub_2498C3C58()
{
  return sub_249AEE388();
}

uint64_t sub_2498C3CA8()
{
  return sub_249AEE388();
}

double sub_2498C3CF4()
{
  *(void *)&double result = 353637121;
  dword_2696DE840 = 353637121;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.engineTemperatureIconOnly.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD358 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  __int16 v3 = *(_WORD *)((char *)&dword_2696DE840 + 1);
  char v4 = HIBYTE(dword_2696DE840);
  *(unsigned char *)a1 = dword_2696DE840;
  *(_WORD *)(a1 + 1) = v3;
  *(unsigned char *)(a1 + 3) = v4;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.engineTemperatureIconOnly.setter(char *a1)
{
  char v1 = *a1;
  char v2 = a1[1];
  char v3 = a1[2];
  char v4 = a1[3];
  if (qword_2696DD358 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  LOBYTE(dword_2696DE840) = v1;
  BYTE1(dword_2696DE840) = v2;
  BYTE2(dword_2696DE840) = v3;
  HIBYTE(dword_2696DE840) = v4;
  return result;
}

uint64_t (*static VisibilityRule.TemperatureLabelRule.engineTemperatureIconOnly.modify())()
{
  if (qword_2696DD358 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2498C3EC0()
{
  *(void *)&double result = 353637120;
  dword_2696DE844 = 353637120;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.engineTemperatureLabelAndIcon.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD360 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  __int16 v3 = *(_WORD *)((char *)&dword_2696DE844 + 1);
  char v4 = HIBYTE(dword_2696DE844);
  *(unsigned char *)a1 = dword_2696DE844;
  *(_WORD *)(a1 + 1) = v3;
  *(unsigned char *)(a1 + 3) = v4;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.engineTemperatureLabelAndIcon.setter(char *a1)
{
  char v1 = *a1;
  char v2 = a1[1];
  char v3 = a1[2];
  char v4 = a1[3];
  if (qword_2696DD360 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  LOBYTE(dword_2696DE844) = v1;
  BYTE1(dword_2696DE844) = v2;
  BYTE2(dword_2696DE844) = v3;
  HIBYTE(dword_2696DE844) = v4;
  return result;
}

uint64_t (*static VisibilityRule.TemperatureLabelRule.engineTemperatureLabelAndIcon.modify())()
{
  if (qword_2696DD360 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2498C408C()
{
  *(void *)&double result = 33619969;
  dword_2696DE848 = 33619969;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.batteryTemperatureIconOnly.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD368 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  __int16 v3 = *(_WORD *)((char *)&dword_2696DE848 + 1);
  char v4 = HIBYTE(dword_2696DE848);
  *(unsigned char *)a1 = dword_2696DE848;
  *(_WORD *)(a1 + 1) = v3;
  *(unsigned char *)(a1 + 3) = v4;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.batteryTemperatureIconOnly.setter(char *a1)
{
  char v1 = *a1;
  char v2 = a1[1];
  char v3 = a1[2];
  char v4 = a1[3];
  if (qword_2696DD368 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  LOBYTE(dword_2696DE848) = v1;
  BYTE1(dword_2696DE848) = v2;
  BYTE2(dword_2696DE848) = v3;
  HIBYTE(dword_2696DE848) = v4;
  return result;
}

uint64_t (*static VisibilityRule.TemperatureLabelRule.batteryTemperatureIconOnly.modify())()
{
  if (qword_2696DD368 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

double sub_2498C4258()
{
  *(void *)&double result = 33619968;
  dword_2696DE84C = 33619968;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.batteryTemperatureLabelAndIcon.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD370 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  __int16 v3 = *(_WORD *)((char *)&dword_2696DE84C + 1);
  char v4 = HIBYTE(dword_2696DE84C);
  *(unsigned char *)a1 = dword_2696DE84C;
  *(_WORD *)(a1 + 1) = v3;
  *(unsigned char *)(a1 + 3) = v4;
  return result;
}

uint64_t static VisibilityRule.TemperatureLabelRule.batteryTemperatureLabelAndIcon.setter(char *a1)
{
  char v1 = *a1;
  char v2 = a1[1];
  char v3 = a1[2];
  char v4 = a1[3];
  if (qword_2696DD370 != -1) {
    swift_once();
  }
  uint64_t result = swift_beginAccess();
  LOBYTE(dword_2696DE84C) = v1;
  BYTE1(dword_2696DE84C) = v2;
  BYTE2(dword_2696DE84C) = v3;
  HIBYTE(dword_2696DE84C) = v4;
  return result;
}

uint64_t (*static VisibilityRule.TemperatureLabelRule.batteryTemperatureLabelAndIcon.modify())()
{
  if (qword_2696DD370 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t VisibilityRule.TemperatureLabelRule.hash(into:)()
{
  sub_249AEE348();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_2498C4510(char a1)
{
  unint64_t result = 1701606770;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2498C459C()
{
  return sub_2498C4510(*v0);
}

uint64_t sub_2498C45A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498CAA74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498C45CC(uint64_t a1)
{
  unint64_t v2 = sub_2498C71B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498C4608(uint64_t a1)
{
  unint64_t v2 = sub_2498C71B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t VisibilityRule.TemperatureLabelRule.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEB28);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v14 = v1[2];
  int v15 = v9;
  HIDWORD(v13) = v1[3];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C71B8();
  sub_249AEE468();
  char v23 = v8;
  char v22 = 0;
  sub_2498C720C();
  sub_249AEDF08();
  if (!v2)
  {
    char v10 = BYTE4(v13);
    char v11 = v14;
    char v21 = v15;
    char v20 = 1;
    sub_24989C934();
    sub_249AEDF08();
    char v19 = v11;
    char v18 = 2;
    sub_249AEDF08();
    char v17 = v10;
    char v16 = 3;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t VisibilityRule.TemperatureLabelRule.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t VisibilityRule.TemperatureLabelRule.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEB40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498C71B8();
  sub_249AEE428();
  if (!v2)
  {
    char v22 = 0;
    sub_2498C7260();
    sub_249AEDE08();
    int v9 = v23;
    char v20 = 1;
    sub_24989C988();
    sub_249AEDE08();
    int v15 = v9;
    int v10 = v21;
    char v18 = 2;
    sub_249AEDE08();
    int v14 = v10;
    LOBYTE(v10) = v19;
    char v16 = 3;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v12 = v17;
    *a2 = v15;
    a2[1] = v14;
    a2[2] = v10;
    a2[3] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2498C4BBC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return VisibilityRule.TemperatureLabelRule.init(from:)(a1, a2);
}

uint64_t sub_2498C4BD4(void *a1)
{
  return VisibilityRule.TemperatureLabelRule.encode(to:)(a1);
}

uint64_t sub_2498C4BF4()
{
  return sub_249AEE388();
}

unint64_t sub_2498C4CE4()
{
  unint64_t result = qword_2696DE858;
  if (!qword_2696DE858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE858);
  }
  return result;
}

unint64_t sub_2498C4D38()
{
  unint64_t result = qword_2696DE870;
  if (!qword_2696DE870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE870);
  }
  return result;
}

uint64_t sub_2498C4D8C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DE860);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498C4DFC()
{
  unint64_t result = qword_2696DE888;
  if (!qword_2696DE888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE888);
  }
  return result;
}

unint64_t *sub_2498C4E50(unint64_t *result)
{
  *unint64_t result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x80800000;
  return result;
}

unint64_t *sub_2498C4E70(unint64_t *result)
{
  *unint64_t result = *result & 0xFFFFFFFF3F3F3F3FLL | 0xC0000000;
  return result;
}

uint64_t sub_2498C4E8C(_DWORD *a1)
{
  return (*a1 >> 29) & 6 | (*a1 >> 23) & 1u;
}

void *sub_2498C4EA0(void *result)
{
  *result &= 0xFFFFFFFF3F7FFFFFLL;
  return result;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO018TickmarksSpeedUnitF0V2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    unint64_t v2 = InstrumentDataIdentifier.rawValue.getter();
    uint64_t v4 = v3;
    if (v2 == InstrumentDataIdentifier.rawValue.getter() && v4 == v5)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v7 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v6 = 0;
      if ((v7 & 1) == 0) {
        return v6 & 1;
      }
    }
    unint64_t v8 = InstrumentDataIdentifier.rawValue.getter();
    uint64_t v10 = v9;
    if (v8 == InstrumentDataIdentifier.rawValue.getter() && v10 == v11) {
      char v6 = 1;
    }
    else {
      char v6 = sub_249AEE0D8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO012SpeedLimiterF0V2eeoiySbAE_AEtFZ_0(float *a1, unsigned __int8 *a2)
{
  if (*(unsigned __int8 *)a1 != *a2) {
    goto LABEL_13;
  }
  char v2 = a2[48];
  if (((_BYTE)a1[12] & 1) == 0)
  {
    uint64_t v7 = *((void *)a2 + 1);
    if (a1[2] != *(float *)&v7) {
      char v2 = 1;
    }
    if (v2 & 1) == 0 && a1[3] == *((float *)&v7 + 1) && (sub_249AECCE8() & 1) != 0 && (sub_249AECCE8()) {
      goto LABEL_4;
    }
LABEL_13:
    char v8 = 0;
    return v8 & 1;
  }
  if ((a2[48] & 1) == 0) {
    goto LABEL_13;
  }
LABEL_4:
  unint64_t v3 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v5 = v4;
  if (v3 == InstrumentDataIdentifier.rawValue.getter() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v8 = 0;
    if ((v10 & 1) == 0) {
      return v8 & 1;
    }
  }
  unint64_t v11 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14) {
    char v8 = 1;
  }
  else {
    char v8 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO016TemperatureLabelF0V2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    unint64_t v3 = InstrumentDataIdentifier.rawValue.getter();
    uint64_t v5 = v4;
    if (v3 == InstrumentDataIdentifier.rawValue.getter() && v5 == v6)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v7 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v2 = 0;
      if ((v7 & 1) == 0) {
        return v2 & 1;
      }
    }
    unint64_t v8 = InstrumentDataIdentifier.rawValue.getter();
    uint64_t v10 = v9;
    if (v8 == InstrumentDataIdentifier.rawValue.getter() && v10 == v11)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v12 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v2 = 0;
      if ((v12 & 1) == 0) {
        return v2 & 1;
      }
    }
    unint64_t v13 = InstrumentDataIdentifier.rawValue.getter();
    uint64_t v15 = v14;
    if (v13 == InstrumentDataIdentifier.rawValue.getter() && v15 == v16) {
      char v2 = 1;
    }
    else {
      char v2 = sub_249AEE0D8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

BOOL _s14CarPlayAssetUI14VisibilityRuleO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_249890C54(a1, (uint64_t)v122);
  sub_249890C54(a2, (uint64_t)v123);
  sub_249890C54((uint64_t)v122, (uint64_t)v124);
  switch(sub_2498C4E8C(v124))
  {
    case 1u:
      uint64_t v15 = sub_2498C4EA0(v124);
      char v16 = *(unsigned char *)v15;
      char v17 = *((unsigned char *)v15 + 1);
      char v18 = *((unsigned char *)v15 + 2);
      float v20 = *((float *)v15 + 2);
      float v19 = *((float *)v15 + 3);
      float v106 = *((float *)v15 + 12);
      float v105 = *((float *)v15 + 13);
      sub_249890C54((uint64_t)v123, (uint64_t)v121);
      if (sub_2498C4E8C(v121) == 1)
      {
        unsigned __int8 v21 = sub_2498C4EA0(v121);
        __int16 v22 = *(_WORD *)v21;
        char v23 = *((unsigned char *)v21 + 2);
        float v25 = *((float *)v21 + 2);
        float v24 = *((float *)v21 + 3);
        float v101 = *((float *)v21 + 12);
        float v99 = *((float *)v21 + 13);
        LOBYTE(v115) = v16;
        BYTE1(v115) = v17;
        BYTE2(v115) = v18;
        *(_WORD *)uint64_t v108 = v22;
        v108[2] = v23;
        if (_s14CarPlayAssetUI14VisibilityRuleO018TickmarksSpeedUnitF0V2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v115, v108))goto LABEL_56; {
      }
        }
      return 0;
    case 2u:
      unsigned __int8 v26 = sub_2498C4EA0(v124);
      sub_249890C54((uint64_t)v123, (uint64_t)v121);
      if (sub_2498C4E8C(v121) != 2) {
        return 0;
      }
      int v27 = sub_2498C4EA0(v121);
      uint64_t v28 = v26[5];
      char v29 = *((unsigned char *)v26 + 48);
      __int16 v30 = *(_WORD *)((char *)v26 + 49);
      char v31 = *(unsigned char *)v27;
      uint64_t v32 = v27[5];
      char v33 = *((unsigned char *)v27 + 48);
      __int16 v34 = *(_WORD *)((char *)v27 + 49);
      LOBYTE(v115) = *(unsigned char *)v26;
      long long v35 = *(_OWORD *)(v26 + 3);
      long long v116 = *(_OWORD *)(v26 + 1);
      long long v117 = v35;
      uint64_t v118 = v28;
      char v119 = v29;
      __int16 v120 = v30;
      v108[0] = v31;
      long long v110 = *(_OWORD *)(v27 + 1);
      long long v111 = *(_OWORD *)(v27 + 3);
      uint64_t v112 = v32;
      char v113 = v33;
      __int16 v114 = v34;
      return (_s14CarPlayAssetUI14VisibilityRuleO012SpeedLimiterF0V2eeoiySbAE_AEtFZ_0(&v115, v108) & 1) != 0
          && *((float *)v26 + 14) == *((float *)v27 + 14)
          && *((float *)v26 + 15) == *((float *)v27 + 15)
          && (sub_249AECCE8() & 1) != 0
          && (sub_249AECCE8() & 1) != 0
          && *((float *)v26 + 24) == *((float *)v27 + 24)
          && *((float *)v26 + 25) == *((float *)v27 + 25)
          && (sub_249AECCE8() & 1) != 0
          && (sub_249AECCE8() & 1) != 0;
    case 3u:
      uint64_t v36 = sub_2498C4EA0(v124);
      int v37 = *(unsigned __int8 *)v36;
      char v38 = *((unsigned char *)v36 + 1);
      float v40 = *((float *)v36 + 2);
      float v39 = *((float *)v36 + 3);
      float v42 = *((float *)v36 + 12);
      float v41 = *((float *)v36 + 13);
      sub_249890C54((uint64_t)v123, (uint64_t)v121);
      if (sub_2498C4E8C(v121) != 3) {
        return 0;
      }
      uint64_t v43 = (float *)sub_2498C4EA0(v121);
      if (v37 != *(unsigned __int8 *)v43) {
        return 0;
      }
      float v103 = v43[2];
      float v102 = v43[3];
      float v97 = v43[12];
      float v96 = v43[13];
      char v44 = *((unsigned char *)v43 + 1);
      LOBYTE(v115) = v38;
      v108[0] = v44;
      unint64_t v45 = InstrumentDataIdentifier.rawValue.getter();
      uint64_t v47 = v46;
      if (v45 == InstrumentDataIdentifier.rawValue.getter() && v47 == v48)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v92 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v92 & 1) == 0) {
          return 0;
        }
      }
      if (v40 == v103
        && v39 == v102
        && (sub_249AECCE8() & 1) != 0
        && (sub_249AECCE8() & 1) != 0
        && v42 == v97
        && v41 == v96
        && (sub_249AECCE8() & 1) != 0)
      {
        return (sub_249AECCE8() & 1) != 0;
      }
      return 0;
    case 4u:
      uint64_t v49 = (float *)sub_2498C4EA0(v124);
      int v50 = *(unsigned __int8 *)v49;
      float v51 = v49[1];
      float v52 = v49[2];
      float v53 = v49[3];
      float v54 = v49[12];
      float v107 = v49[13];
      sub_249890C54((uint64_t)v123, (uint64_t)v121);
      if (sub_2498C4E8C(v121) != 4) {
        return 0;
      }
      uint64_t v55 = (float *)sub_2498C4EA0(v121);
      if (v50 != *(unsigned __int8 *)v55) {
        return 0;
      }
      if (v51 != v55[1]) {
        return 0;
      }
      if (v52 != v55[2]) {
        return 0;
      }
      if (v53 != v55[3]) {
        return 0;
      }
      float v57 = v55[12];
      float v56 = v55[13];
      return (sub_249AECCE8() & 1) != 0
          && (sub_249AECCE8() & 1) != 0
          && v54 == v57
          && v107 == v56
          && (sub_249AECCE8() & 1) != 0
          && (sub_249AECCE8() & 1) != 0;
    case 5u:
      int v58 = (float *)sub_2498C4EA0(v124);
      char v59 = *(unsigned char *)v58;
      float v60 = v58[2];
      float v61 = v58[3];
      float v106 = v58[12];
      float v105 = v58[13];
      sub_249890C54((uint64_t)v123, (uint64_t)v121);
      if (sub_2498C4E8C(v121) != 5) {
        return 0;
      }
      int v62 = (float *)sub_2498C4EA0(v121);
      char v63 = *(unsigned char *)v62;
      float v65 = v62[2];
      float v64 = v62[3];
      float v101 = v62[12];
      float v99 = v62[13];
      LOBYTE(v115) = v59;
      v108[0] = v63;
      unint64_t v66 = InstrumentDataIdentifier.rawValue.getter();
      uint64_t v68 = v67;
      if (v66 == InstrumentDataIdentifier.rawValue.getter() && v68 == v69)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v89 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v89 & 1) == 0) {
          return 0;
        }
      }
      if (v60 != v65 || v61 != v64) {
        return 0;
      }
      goto LABEL_58;
    case 6u:
      int v70 = (float *)sub_2498C4EA0(v124);
      char v71 = *(unsigned char *)v70;
      int v72 = *((unsigned __int8 *)v70 + 1);
      float v20 = v70[2];
      float v19 = v70[3];
      float v106 = v70[12];
      float v105 = v70[13];
      sub_249890C54((uint64_t)v123, (uint64_t)v121);
      if (sub_2498C4E8C(v121) != 6) {
        return 0;
      }
      int v73 = (float *)sub_2498C4EA0(v121);
      char v74 = *(unsigned char *)v73;
      int v75 = *((unsigned __int8 *)v73 + 1);
      float v25 = v73[2];
      float v24 = v73[3];
      float v101 = v73[12];
      float v99 = v73[13];
      LOBYTE(v115) = v71;
      v108[0] = v74;
      unint64_t v76 = InstrumentDataIdentifier.rawValue.getter();
      uint64_t v78 = v77;
      if (v76 == InstrumentDataIdentifier.rawValue.getter() && v78 == v79)
      {
        swift_bridgeObjectRelease_n();
        if (v72 != v75) {
          return 0;
        }
      }
      else
      {
        char v90 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v90 & 1) == 0 || ((v72 ^ v75)) {
          return 0;
        }
      }
LABEL_56:
      if (v20 != v25 || v19 != v24) {
        return 0;
      }
LABEL_58:
      if ((sub_249AECCE8() & 1) == 0
        || (sub_249AECCE8() & 1) == 0
        || v106 != v101
        || v105 != v99
        || (sub_249AECCE8() & 1) == 0)
      {
        return 0;
      }
      return (sub_249AECCE8() & 1) != 0;
    case 7u:
      uint64_t v80 = sub_2498C4EA0(v124);
      char v81 = *(unsigned char *)v80;
      char v82 = *((unsigned char *)v80 + 1);
      char v83 = *((unsigned char *)v80 + 2);
      char v84 = *((unsigned char *)v80 + 3);
      float v20 = *((float *)v80 + 2);
      float v19 = *((float *)v80 + 3);
      float v106 = *((float *)v80 + 12);
      float v105 = *((float *)v80 + 13);
      sub_249890C54((uint64_t)v123, (uint64_t)v121);
      if (sub_2498C4E8C(v121) != 7) {
        return 0;
      }
      BOOL v85 = sub_2498C4EA0(v121);
      char v86 = *(unsigned char *)v85;
      __int16 v87 = *(_WORD *)((char *)v85 + 1);
      char v88 = *((unsigned char *)v85 + 3);
      float v25 = *((float *)v85 + 2);
      float v24 = *((float *)v85 + 3);
      float v101 = *((float *)v85 + 12);
      float v99 = *((float *)v85 + 13);
      LOBYTE(v115) = v81;
      BYTE1(v115) = v82;
      BYTE2(v115) = v83;
      HIBYTE(v115) = v84;
      v108[0] = v86;
      *(_WORD *)&v108[1] = v87;
      char v109 = v88;
      if ((_s14CarPlayAssetUI14VisibilityRuleO016TemperatureLabelF0V2eeoiySbAE_AEtFZ_0((unsigned __int8 *)&v115, v108) & 1) == 0) {
        return 0;
      }
      goto LABEL_56;
    default:
      unint64_t v3 = sub_2498C4EA0(v124);
      int v4 = *(unsigned __int8 *)v3;
      char v5 = *((unsigned char *)v3 + 1);
      float v6 = *((float *)v3 + 2);
      float v7 = *((float *)v3 + 3);
      float v8 = *((float *)v3 + 13);
      float v104 = *((float *)v3 + 12);
      sub_249890C54((uint64_t)v123, (uint64_t)v121);
      if (sub_2498C4E8C(v121)) {
        return 0;
      }
      uint64_t v9 = (float *)sub_2498C4EA0(v121);
      if (v4 != *(unsigned __int8 *)v9) {
        return 0;
      }
      float v100 = v9[2];
      float v98 = v9[3];
      float v95 = v9[12];
      float v94 = v9[13];
      char v10 = *((unsigned char *)v9 + 1);
      LOBYTE(v115) = v5;
      v108[0] = v10;
      unint64_t v11 = InstrumentDataIdentifier.rawValue.getter();
      uint64_t v13 = v12;
      if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v93 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v93 & 1) == 0) {
          return 0;
        }
      }
      return v6 == v100
          && v7 == v98
          && (sub_249AECCE8() & 1) != 0
          && (sub_249AECCE8() & 1) != 0
          && v104 == v95
          && v8 == v94
          && (sub_249AECCE8() & 1) != 0
          && (sub_249AECCE8() & 1) != 0;
  }
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO011InvalidDataF0V2eeoiySbAE_AEtFZ_0()
{
  unint64_t v0 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO014SecondarySpeedF0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 1);
  int v3 = *(unsigned __int8 *)(a2 + 1);
  unint64_t v4 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v6 = v5;
  if (v4 == InstrumentDataIdentifier.rawValue.getter() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    return v2 ^ v3 ^ 1u;
  }
  char v9 = sub_249AEE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  if (v9) {
    return v2 ^ v3 ^ 1u;
  }
  return result;
}

uint64_t sub_2498C6030(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    unint64_t v3 = InstrumentDataIdentifier.rawValue.getter();
    uint64_t v5 = v4;
    if (v3 == InstrumentDataIdentifier.rawValue.getter() && v5 == v6) {
      char v2 = 1;
    }
    else {
      char v2 = sub_249AEE0D8();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

BOOL _s14CarPlayAssetUI14VisibilityRuleO9AnimationV2eeoiySbAE_AEtFZ_0(float *a1, float *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  return v2 && (sub_249AECCE8() & 1) != 0 && (sub_249AECCE8() & 1) != 0;
}

unint64_t sub_2498C6160()
{
  unint64_t result = qword_2696DE8D8;
  if (!qword_2696DE8D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE8D8);
  }
  return result;
}

unint64_t sub_2498C61B4()
{
  unint64_t result = qword_2696DE8E0;
  if (!qword_2696DE8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE8E0);
  }
  return result;
}

unint64_t sub_2498C6208()
{
  unint64_t result = qword_2696DE8E8;
  if (!qword_2696DE8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE8E8);
  }
  return result;
}

unint64_t sub_2498C625C()
{
  unint64_t result = qword_2696DE8F0;
  if (!qword_2696DE8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE8F0);
  }
  return result;
}

unint64_t sub_2498C62B0()
{
  unint64_t result = qword_2696DE8F8;
  if (!qword_2696DE8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE8F8);
  }
  return result;
}

unint64_t sub_2498C6304()
{
  unint64_t result = qword_2696DE900;
  if (!qword_2696DE900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE900);
  }
  return result;
}

unint64_t sub_2498C6358()
{
  unint64_t result = qword_2696DE908;
  if (!qword_2696DE908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE908);
  }
  return result;
}

unint64_t sub_2498C63AC()
{
  unint64_t result = qword_2696DE910;
  if (!qword_2696DE910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE910);
  }
  return result;
}

unint64_t sub_2498C6400()
{
  unint64_t result = qword_2696DE918;
  if (!qword_2696DE918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE918);
  }
  return result;
}

unint64_t sub_2498C6454()
{
  unint64_t result = qword_2696DE920;
  if (!qword_2696DE920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE920);
  }
  return result;
}

unint64_t sub_2498C64A8()
{
  unint64_t result = qword_2696DE928;
  if (!qword_2696DE928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE928);
  }
  return result;
}

unint64_t sub_2498C64FC()
{
  unint64_t result = qword_2696DE930;
  if (!qword_2696DE930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE930);
  }
  return result;
}

unint64_t sub_2498C6550()
{
  unint64_t result = qword_2696DE938;
  if (!qword_2696DE938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE938);
  }
  return result;
}

unint64_t sub_2498C65A4()
{
  unint64_t result = qword_2696DE940;
  if (!qword_2696DE940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE940);
  }
  return result;
}

unint64_t sub_2498C65F8()
{
  unint64_t result = qword_2696DE948;
  if (!qword_2696DE948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE948);
  }
  return result;
}

unint64_t sub_2498C664C()
{
  unint64_t result = qword_2696DE950;
  if (!qword_2696DE950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE950);
  }
  return result;
}

unint64_t sub_2498C66A0()
{
  unint64_t result = qword_2696DE958;
  if (!qword_2696DE958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE958);
  }
  return result;
}

unint64_t sub_2498C66F4()
{
  unint64_t result = qword_2696DE960;
  if (!qword_2696DE960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE960);
  }
  return result;
}

unint64_t sub_2498C6748()
{
  unint64_t result = qword_2696DE9B0;
  if (!qword_2696DE9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE9B0);
  }
  return result;
}

unint64_t sub_2498C679C()
{
  unint64_t result = qword_2696DE9B8;
  if (!qword_2696DE9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE9B8);
  }
  return result;
}

unint64_t *sub_2498C67F0(unint64_t *result)
{
  *unint64_t result = *result & 0xFFFFFFFF3F3F3F3FLL | 0xC0800000;
  return result;
}

unint64_t sub_2498C6810()
{
  unint64_t result = qword_2696DE9C0;
  if (!qword_2696DE9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE9C0);
  }
  return result;
}

unint64_t sub_2498C6864()
{
  unint64_t result = qword_2696DE9C8;
  if (!qword_2696DE9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE9C8);
  }
  return result;
}

unint64_t sub_2498C68B8()
{
  unint64_t result = qword_2696DE9D0;
  if (!qword_2696DE9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE9D0);
  }
  return result;
}

unint64_t sub_2498C690C()
{
  unint64_t result = qword_2696DE9D8;
  if (!qword_2696DE9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE9D8);
  }
  return result;
}

unint64_t *sub_2498C6960(unint64_t *result)
{
  *unint64_t result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x40800000;
  return result;
}

unint64_t sub_2498C6980()
{
  unint64_t result = qword_2696DE9E0;
  if (!qword_2696DE9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE9E0);
  }
  return result;
}

unint64_t *sub_2498C69D4(unint64_t *result)
{
  *unint64_t result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x40000000;
  return result;
}

unint64_t sub_2498C69F0()
{
  unint64_t result = qword_2696DE9E8;
  if (!qword_2696DE9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE9E8);
  }
  return result;
}

unint64_t *sub_2498C6A44(unint64_t *result)
{
  *unint64_t result = *result & 0xFFFFFFFF3F3F3F3FLL | 0x800000;
  return result;
}

unint64_t sub_2498C6A60()
{
  unint64_t result = qword_2696DE9F0;
  if (!qword_2696DE9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DE9F0);
  }
  return result;
}

void *sub_2498C6AB4(void *result)
{
  *result &= 0xFFFFFFFF3F3F3F3FLL;
  return result;
}

unint64_t sub_2498C6ACC()
{
  unint64_t result = qword_2696DEA00;
  if (!qword_2696DEA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA00);
  }
  return result;
}

unint64_t sub_2498C6B20()
{
  unint64_t result = qword_2696DEA08;
  if (!qword_2696DEA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA08);
  }
  return result;
}

unint64_t sub_2498C6B74()
{
  unint64_t result = qword_2696DEA18;
  if (!qword_2696DEA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA18);
  }
  return result;
}

unint64_t sub_2498C6BC8()
{
  unint64_t result = qword_2696DEA28;
  if (!qword_2696DEA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA28);
  }
  return result;
}

unint64_t sub_2498C6C1C()
{
  unint64_t result = qword_2696DEA30;
  if (!qword_2696DEA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA30);
  }
  return result;
}

unint64_t sub_2498C6C70()
{
  unint64_t result = qword_2696DEA40;
  if (!qword_2696DEA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA40);
  }
  return result;
}

unint64_t sub_2498C6CC4()
{
  unint64_t result = qword_2696DEA50;
  if (!qword_2696DEA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA50);
  }
  return result;
}

unint64_t sub_2498C6D18()
{
  unint64_t result = qword_2696DEA58;
  if (!qword_2696DEA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA58);
  }
  return result;
}

unint64_t sub_2498C6D6C()
{
  unint64_t result = qword_2696DEA68;
  if (!qword_2696DEA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA68);
  }
  return result;
}

unint64_t sub_2498C6DC0()
{
  unint64_t result = qword_2696DEA78;
  if (!qword_2696DEA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA78);
  }
  return result;
}

unint64_t sub_2498C6E14()
{
  unint64_t result = qword_2696DEA80;
  if (!qword_2696DEA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA80);
  }
  return result;
}

unint64_t sub_2498C6E68()
{
  unint64_t result = qword_2696DEA90;
  if (!qword_2696DEA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEA90);
  }
  return result;
}

unint64_t sub_2498C6EBC()
{
  unint64_t result = qword_2696DEAA0;
  if (!qword_2696DEAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEAA0);
  }
  return result;
}

unint64_t sub_2498C6F10()
{
  unint64_t result = qword_2696DEAA8;
  if (!qword_2696DEAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEAA8);
  }
  return result;
}

unint64_t sub_2498C6F64()
{
  unint64_t result = qword_2696DEAB8;
  if (!qword_2696DEAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEAB8);
  }
  return result;
}

unint64_t sub_2498C6FB8()
{
  unint64_t result = qword_2696DEAC8;
  if (!qword_2696DEAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEAC8);
  }
  return result;
}

unint64_t sub_2498C700C()
{
  unint64_t result = qword_2696DEAD0;
  if (!qword_2696DEAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEAD0);
  }
  return result;
}

unint64_t sub_2498C7060()
{
  unint64_t result = qword_2696DEAE0;
  if (!qword_2696DEAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEAE0);
  }
  return result;
}

unint64_t sub_2498C70B4()
{
  unint64_t result = qword_2696DEAF0;
  if (!qword_2696DEAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEAF0);
  }
  return result;
}

unint64_t sub_2498C7108()
{
  unint64_t result = qword_2696DEB08;
  if (!qword_2696DEB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB08);
  }
  return result;
}

unint64_t sub_2498C715C()
{
  unint64_t result = qword_2696DEB20;
  if (!qword_2696DEB20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DEB18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB20);
  }
  return result;
}

unint64_t sub_2498C71B8()
{
  unint64_t result = qword_2696DEB30;
  if (!qword_2696DEB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB30);
  }
  return result;
}

unint64_t sub_2498C720C()
{
  unint64_t result = qword_2696DEB38;
  if (!qword_2696DEB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB38);
  }
  return result;
}

unint64_t sub_2498C7260()
{
  unint64_t result = qword_2696DEB48;
  if (!qword_2696DEB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB48);
  }
  return result;
}

unint64_t sub_2498C72B8()
{
  unint64_t result = qword_2696DEB50;
  if (!qword_2696DEB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB50);
  }
  return result;
}

unint64_t sub_2498C7310()
{
  unint64_t result = qword_2696DEB58;
  if (!qword_2696DEB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB58);
  }
  return result;
}

unint64_t sub_2498C7368()
{
  unint64_t result = qword_2696DEB60;
  if (!qword_2696DEB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB60);
  }
  return result;
}

unint64_t sub_2498C73C0()
{
  unint64_t result = qword_2696DEB68;
  if (!qword_2696DEB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB68);
  }
  return result;
}

unint64_t sub_2498C7418()
{
  unint64_t result = qword_2696DEB70;
  if (!qword_2696DEB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB70);
  }
  return result;
}

unint64_t sub_2498C7470()
{
  unint64_t result = qword_2696DEB78;
  if (!qword_2696DEB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB78);
  }
  return result;
}

unint64_t sub_2498C74C8()
{
  unint64_t result = qword_2696DEB80;
  if (!qword_2696DEB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB80);
  }
  return result;
}

unint64_t sub_2498C7520()
{
  unint64_t result = qword_2696DEB88;
  if (!qword_2696DEB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB88);
  }
  return result;
}

unint64_t sub_2498C7578()
{
  unint64_t result = qword_2696DEB90;
  if (!qword_2696DEB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB90);
  }
  return result;
}

unint64_t sub_2498C75D0()
{
  unint64_t result = qword_2696DEB98;
  if (!qword_2696DEB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEB98);
  }
  return result;
}

unint64_t sub_2498C7628()
{
  unint64_t result = qword_2696DEBA0;
  if (!qword_2696DEBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBA0);
  }
  return result;
}

unint64_t sub_2498C7680()
{
  unint64_t result = qword_2696DEBA8;
  if (!qword_2696DEBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBA8);
  }
  return result;
}

unint64_t sub_2498C76D8()
{
  unint64_t result = qword_2696DEBB0;
  if (!qword_2696DEBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBB0);
  }
  return result;
}

unint64_t sub_2498C7730()
{
  unint64_t result = qword_2696DEBB8;
  if (!qword_2696DEBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBB8);
  }
  return result;
}

unint64_t sub_2498C7788()
{
  unint64_t result = qword_2696DEBC0;
  if (!qword_2696DEBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBC0);
  }
  return result;
}

unint64_t sub_2498C77E0()
{
  unint64_t result = qword_2696DEBC8;
  if (!qword_2696DEBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBC8);
  }
  return result;
}

unint64_t sub_2498C7838()
{
  unint64_t result = qword_2696DEBD0;
  if (!qword_2696DEBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBD0);
  }
  return result;
}

unint64_t sub_2498C7890()
{
  unint64_t result = qword_2696DEBD8;
  if (!qword_2696DEBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBD8);
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityConfiguration()
{
  return &type metadata for VisibilityConfiguration;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 136)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = (((HIBYTE(*(_DWORD *)a1) & 0xC0 | (*(_DWORD *)a1 >> 18) & 0x3Fu) >> 5) & 0xFFFFFF07 | (8
                                                                                            * ((*(_DWORD *)a1 >> 12) & 0xC | (*(_DWORD *)a1 >> 6) & 0x1F | (*(_DWORD *)a1 >> 18) & 0x10))) ^ 0xFF;
  if (v3 >= 0xF8) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for VisibilityRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)__n128 result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 136) = 0;
    }
    if (a2)
    {
      uint64x2_t v3 = (uint64x2_t)vdupq_n_s32((-(char)a2 >> 3) & 0x1F | (32
                                                                             * -(char)a2));
      int8x16_t v4 = vorrq_s8(vandq_s8((int8x16_t)vshlq_u64(v3, (uint64x2_t)xmmword_249AF3710), (int8x16_t)xmmword_249AF3740), vandq_s8((int8x16_t)vshlq_u64(v3, (uint64x2_t)xmmword_249AF3720), (int8x16_t)xmmword_249AF3730));
      *(int8x8_t *)__n128 result = vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL));
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      *(_OWORD *)(result + 88) = 0u;
      *(_OWORD *)(result + 104) = 0u;
      *(_OWORD *)(result + 120) = 0u;
    }
  }
  return result;
}

unint64_t *sub_2498C7A6C(unint64_t *result, int a2)
{
  *__n128 result = (a2 << 29) & 0xC0000000 | ((unint64_t)(a2 & 1) << 23) | *result & 0xFFFFFFFF3F3F3F3FLL;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule()
{
  return &type metadata for VisibilityRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.BezierCurve()
{
  return &type metadata for VisibilityRule.BezierCurve;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.Animation(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.Animation(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.Animation()
{
  return &type metadata for VisibilityRule.Animation;
}

ValueMetadata *type metadata accessor for VisibilityRule.TransmissionModeRule()
{
  return &type metadata for VisibilityRule.TransmissionModeRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.TransmissionModeRule.Rule()
{
  return &type metadata for VisibilityRule.TransmissionModeRule.Rule;
}

uint64_t __swift_memcpy3_1(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)__n128 result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.TickmarksSpeedUnitRule(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    if ((a2 + 33554178) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776962;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 3;
  int v6 = v4 - 3;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.TickmarksSpeedUnitRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554178) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFD) {
    int v3 = 0;
  }
  if (a2 > 0xFD)
  {
    *(_WORD *)__n128 result = a2 - 254;
    *(unsigned char *)(result + 2) = (a2 - 254) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 254) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)__n128 result = a2 + 2;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.TickmarksSpeedUnitRule()
{
  return &type metadata for VisibilityRule.TickmarksSpeedUnitRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.TickmarksSpeedUnitRule.Rule()
{
  return &type metadata for VisibilityRule.TickmarksSpeedUnitRule.Rule;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.SpeedLimiterRule(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && a1[51]) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 4;
  int v5 = v3 - 4;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.SpeedLimiterRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 51) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 51) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.SpeedLimiterRule()
{
  return &type metadata for VisibilityRule.SpeedLimiterRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.SpeedLimiterRule.Rule()
{
  return &type metadata for VisibilityRule.SpeedLimiterRule.Rule;
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO20TransmissionModeRuleVwet_0(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t _s14CarPlayAssetUI14VisibilityRuleO20TransmissionModeRuleVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498C7EBCLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.RemainingRangeRule()
{
  return &type metadata for VisibilityRule.RemainingRangeRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.RemainingRangeRule.Rule()
{
  return &type metadata for VisibilityRule.RemainingRangeRule.Rule;
}

void *__swift_memcpy8_4(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.LayoutModeRule(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && a1[8]) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 5;
  int v5 = v3 - 5;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.LayoutModeRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 4;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.LayoutModeRule()
{
  return &type metadata for VisibilityRule.LayoutModeRule;
}

unsigned char *storeEnumTagSinglePayload for VisibilityRule.LayoutModeRule.Level(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498C8070);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.LayoutModeRule.Level()
{
  return &type metadata for VisibilityRule.LayoutModeRule.Level;
}

uint64_t getEnumTagSinglePayload for InstrumentDataIdentifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xC8) {
    goto LABEL_17;
  }
  if (a2 + 56 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 56) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 56;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 56;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 56;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x39;
  int v8 = v6 - 57;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VisibilityRule.InvalidDataRule(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 56 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 56) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xC8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xC7)
  {
    unsigned int v6 = ((a2 - 200) >> 8) + 1;
    *__n128 result = a2 + 56;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498C8204);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 56;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.InvalidDataRule()
{
  return &type metadata for VisibilityRule.InvalidDataRule;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.SecondarySpeedRule(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityRule.SecondarySpeedRule(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)__n128 result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498C83ACLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.SecondarySpeedRule()
{
  return &type metadata for VisibilityRule.SecondarySpeedRule;
}

uint64_t getEnumTagSinglePayload for VisibilityRule.TemperatureLabelRule(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[4]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Wallpaper.Traits(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.TemperatureLabelRule()
{
  return &type metadata for VisibilityRule.TemperatureLabelRule;
}

ValueMetadata *type metadata accessor for VisibilityRule.TemperatureLabelRule.Rule()
{
  return &type metadata for VisibilityRule.TemperatureLabelRule.Rule;
}

ValueMetadata *type metadata accessor for VisibilityRule.TemperatureLabelRule.CodingKeys()
{
  return &type metadata for VisibilityRule.TemperatureLabelRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.SecondarySpeedRule.CodingKeys()
{
  return &type metadata for VisibilityRule.SecondarySpeedRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.InvalidDataRule.CodingKeys()
{
  return &type metadata for VisibilityRule.InvalidDataRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.LayoutModeRule.CodingKeys()
{
  return &type metadata for VisibilityRule.LayoutModeRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.RemainingRangeRule.CodingKeys()
{
  return &type metadata for VisibilityRule.RemainingRangeRule.CodingKeys;
}

unsigned char *_s14CarPlayAssetUI14VisibilityRuleO16SpeedLimiterRuleV4RuleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498C85A8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.SpeedLimiterRule.CodingKeys()
{
  return &type metadata for VisibilityRule.SpeedLimiterRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.TickmarksSpeedUnitRule.CodingKeys()
{
  return &type metadata for VisibilityRule.TickmarksSpeedUnitRule.CodingKeys;
}

unsigned char *_s14CarPlayAssetUI14VisibilityRuleO20TransmissionModeRuleV4RuleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498C86BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.TransmissionModeRule.CodingKeys()
{
  return &type metadata for VisibilityRule.TransmissionModeRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.Animation.CodingKeys()
{
  return &type metadata for VisibilityRule.Animation.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for VisibilityRule.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498C87D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.CodingKeys()
{
  return &type metadata for VisibilityRule.CodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.TransmissionModeCodingKeys()
{
  return &type metadata for VisibilityRule.TransmissionModeCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.TickmarksSpeedUnitCodingKeys()
{
  return &type metadata for VisibilityRule.TickmarksSpeedUnitCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.SpeedLimiterCodingKeys()
{
  return &type metadata for VisibilityRule.SpeedLimiterCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.RemainingRangeCodingKeys()
{
  return &type metadata for VisibilityRule.RemainingRangeCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.LayoutModeCodingKeys()
{
  return &type metadata for VisibilityRule.LayoutModeCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.InvalidDataCodingKeys()
{
  return &type metadata for VisibilityRule.InvalidDataCodingKeys;
}

ValueMetadata *type metadata accessor for VisibilityRule.SecondarySpeedCodingKeys()
{
  return &type metadata for VisibilityRule.SecondarySpeedCodingKeys;
}

unsigned char *_s14CarPlayAssetUI14VisibilityRuleO22TickmarksSpeedUnitRuleV4RuleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498C8944);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityRule.TemperatureLabelCodingKeys()
{
  return &type metadata for VisibilityRule.TemperatureLabelCodingKeys;
}

unsigned char *_s14CarPlayAssetUI14VisibilityRuleO15InvalidDataRuleV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2498C8A18);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityConfiguration.CodingKeys()
{
  return &type metadata for VisibilityConfiguration.CodingKeys;
}

unint64_t sub_2498C8A54()
{
  unint64_t result = qword_2696DEBE0;
  if (!qword_2696DEBE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBE0);
  }
  return result;
}

unint64_t sub_2498C8AAC()
{
  unint64_t result = qword_2696DEBE8;
  if (!qword_2696DEBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBE8);
  }
  return result;
}

unint64_t sub_2498C8B04()
{
  unint64_t result = qword_2696DEBF0;
  if (!qword_2696DEBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBF0);
  }
  return result;
}

unint64_t sub_2498C8B5C()
{
  unint64_t result = qword_2696DEBF8;
  if (!qword_2696DEBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEBF8);
  }
  return result;
}

unint64_t sub_2498C8BB4()
{
  unint64_t result = qword_2696DEC00;
  if (!qword_2696DEC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC00);
  }
  return result;
}

unint64_t sub_2498C8C0C()
{
  unint64_t result = qword_2696DEC08;
  if (!qword_2696DEC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC08);
  }
  return result;
}

unint64_t sub_2498C8C64()
{
  unint64_t result = qword_2696DEC10;
  if (!qword_2696DEC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC10);
  }
  return result;
}

unint64_t sub_2498C8CBC()
{
  unint64_t result = qword_2696DEC18;
  if (!qword_2696DEC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC18);
  }
  return result;
}

unint64_t sub_2498C8D14()
{
  unint64_t result = qword_2696DEC20;
  if (!qword_2696DEC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC20);
  }
  return result;
}

unint64_t sub_2498C8D6C()
{
  unint64_t result = qword_2696DEC28;
  if (!qword_2696DEC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC28);
  }
  return result;
}

unint64_t sub_2498C8DC4()
{
  unint64_t result = qword_2696DEC30;
  if (!qword_2696DEC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC30);
  }
  return result;
}

unint64_t sub_2498C8E1C()
{
  unint64_t result = qword_2696DEC38;
  if (!qword_2696DEC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC38);
  }
  return result;
}

unint64_t sub_2498C8E74()
{
  unint64_t result = qword_2696DEC40;
  if (!qword_2696DEC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC40);
  }
  return result;
}

unint64_t sub_2498C8ECC()
{
  unint64_t result = qword_2696DEC48;
  if (!qword_2696DEC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC48);
  }
  return result;
}

unint64_t sub_2498C8F24()
{
  unint64_t result = qword_2696DEC50;
  if (!qword_2696DEC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC50);
  }
  return result;
}

unint64_t sub_2498C8F7C()
{
  unint64_t result = qword_2696DEC58;
  if (!qword_2696DEC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC58);
  }
  return result;
}

unint64_t sub_2498C8FD4()
{
  unint64_t result = qword_2696DEC60;
  if (!qword_2696DEC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC60);
  }
  return result;
}

unint64_t sub_2498C902C()
{
  unint64_t result = qword_2696DEC68;
  if (!qword_2696DEC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC68);
  }
  return result;
}

unint64_t sub_2498C9084()
{
  unint64_t result = qword_2696DEC70;
  if (!qword_2696DEC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC70);
  }
  return result;
}

unint64_t sub_2498C90DC()
{
  unint64_t result = qword_2696DEC78;
  if (!qword_2696DEC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC78);
  }
  return result;
}

unint64_t sub_2498C9134()
{
  unint64_t result = qword_2696DEC80;
  if (!qword_2696DEC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC80);
  }
  return result;
}

unint64_t sub_2498C918C()
{
  unint64_t result = qword_2696DEC88;
  if (!qword_2696DEC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC88);
  }
  return result;
}

unint64_t sub_2498C91E4()
{
  unint64_t result = qword_2696DEC90;
  if (!qword_2696DEC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC90);
  }
  return result;
}

unint64_t sub_2498C923C()
{
  unint64_t result = qword_2696DEC98;
  if (!qword_2696DEC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEC98);
  }
  return result;
}

unint64_t sub_2498C9294()
{
  unint64_t result = qword_2696DECA0;
  if (!qword_2696DECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECA0);
  }
  return result;
}

unint64_t sub_2498C92EC()
{
  unint64_t result = qword_2696DECA8;
  if (!qword_2696DECA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECA8);
  }
  return result;
}

unint64_t sub_2498C9344()
{
  unint64_t result = qword_2696DECB0;
  if (!qword_2696DECB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECB0);
  }
  return result;
}

unint64_t sub_2498C939C()
{
  unint64_t result = qword_2696DECB8;
  if (!qword_2696DECB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECB8);
  }
  return result;
}

unint64_t sub_2498C93F4()
{
  unint64_t result = qword_2696DECC0;
  if (!qword_2696DECC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECC0);
  }
  return result;
}

unint64_t sub_2498C944C()
{
  unint64_t result = qword_2696DECC8;
  if (!qword_2696DECC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECC8);
  }
  return result;
}

unint64_t sub_2498C94A4()
{
  unint64_t result = qword_2696DECD0;
  if (!qword_2696DECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECD0);
  }
  return result;
}

unint64_t sub_2498C94FC()
{
  unint64_t result = qword_2696DECD8;
  if (!qword_2696DECD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECD8);
  }
  return result;
}

unint64_t sub_2498C9554()
{
  unint64_t result = qword_2696DECE0;
  if (!qword_2696DECE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECE0);
  }
  return result;
}

unint64_t sub_2498C95AC()
{
  unint64_t result = qword_2696DECE8;
  if (!qword_2696DECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECE8);
  }
  return result;
}

unint64_t sub_2498C9604()
{
  unint64_t result = qword_2696DECF0;
  if (!qword_2696DECF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECF0);
  }
  return result;
}

unint64_t sub_2498C965C()
{
  unint64_t result = qword_2696DECF8;
  if (!qword_2696DECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DECF8);
  }
  return result;
}

unint64_t sub_2498C96B4()
{
  unint64_t result = qword_2696DED00;
  if (!qword_2696DED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED00);
  }
  return result;
}

unint64_t sub_2498C970C()
{
  unint64_t result = qword_2696DED08;
  if (!qword_2696DED08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED08);
  }
  return result;
}

unint64_t sub_2498C9764()
{
  unint64_t result = qword_2696DED10;
  if (!qword_2696DED10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED10);
  }
  return result;
}

unint64_t sub_2498C97BC()
{
  unint64_t result = qword_2696DED18;
  if (!qword_2696DED18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED18);
  }
  return result;
}

unint64_t sub_2498C9814()
{
  unint64_t result = qword_2696DED20;
  if (!qword_2696DED20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED20);
  }
  return result;
}

unint64_t sub_2498C986C()
{
  unint64_t result = qword_2696DED28;
  if (!qword_2696DED28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED28);
  }
  return result;
}

unint64_t sub_2498C98C4()
{
  unint64_t result = qword_2696DED30;
  if (!qword_2696DED30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED30);
  }
  return result;
}

unint64_t sub_2498C991C()
{
  unint64_t result = qword_2696DED38;
  if (!qword_2696DED38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED38);
  }
  return result;
}

unint64_t sub_2498C9974()
{
  unint64_t result = qword_2696DED40;
  if (!qword_2696DED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED40);
  }
  return result;
}

unint64_t sub_2498C99CC()
{
  unint64_t result = qword_2696DED48;
  if (!qword_2696DED48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED48);
  }
  return result;
}

unint64_t sub_2498C9A24()
{
  unint64_t result = qword_2696DED50;
  if (!qword_2696DED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED50);
  }
  return result;
}

unint64_t sub_2498C9A7C()
{
  unint64_t result = qword_2696DED58;
  if (!qword_2696DED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED58);
  }
  return result;
}

unint64_t sub_2498C9AD4()
{
  unint64_t result = qword_2696DED60;
  if (!qword_2696DED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED60);
  }
  return result;
}

unint64_t sub_2498C9B2C()
{
  unint64_t result = qword_2696DED68;
  if (!qword_2696DED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED68);
  }
  return result;
}

unint64_t sub_2498C9B84()
{
  unint64_t result = qword_2696DED70;
  if (!qword_2696DED70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED70);
  }
  return result;
}

unint64_t sub_2498C9BDC()
{
  unint64_t result = qword_2696DED78;
  if (!qword_2696DED78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED78);
  }
  return result;
}

unint64_t sub_2498C9C34()
{
  unint64_t result = qword_2696DED80;
  if (!qword_2696DED80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED80);
  }
  return result;
}

unint64_t sub_2498C9C8C()
{
  unint64_t result = qword_2696DED88;
  if (!qword_2696DED88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED88);
  }
  return result;
}

unint64_t sub_2498C9CE4()
{
  unint64_t result = qword_2696DED90;
  if (!qword_2696DED90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED90);
  }
  return result;
}

unint64_t sub_2498C9D3C()
{
  unint64_t result = qword_2696DED98;
  if (!qword_2696DED98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DED98);
  }
  return result;
}

unint64_t sub_2498C9D94()
{
  unint64_t result = qword_2696DEDA0;
  if (!qword_2696DEDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEDA0);
  }
  return result;
}

uint64_t sub_2498C9DE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000249B14FA0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B14FC0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D694C6465657073 && a2 == 0xEC00000072657469 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E696E69616D6572 && a2 == 0xEE0065676E615267 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F4D74756F79616CLL && a2 == 0xEA00000000006564 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4464696C61766E69 && a2 == 0xEB00000000617461 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7261646E6F636573 && a2 == 0xEE00646565705379 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B14FE0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_2498CA1A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D696E41776F6873 && a2 == 0xED00006E6F697461 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6D696E4165646968 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2498CA32C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x79616C6564 && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x75437265697A6562 && a2 == 0xEB00000000657672)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2498CA494(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B15000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000249B15020)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2498CA5D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B15040 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B15060 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B15080)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2498CA768(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2498CA870(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6576656CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974696361706FLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2498CA95C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2498CAA74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701606770 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000249B14F80 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B150A0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B150C0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_2498CAC08()
{
  unint64_t result = qword_2696DEDA8;
  if (!qword_2696DEDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEDA8);
  }
  return result;
}

unint64_t sub_2498CAC5C()
{
  unint64_t result = qword_2696DEDB0;
  if (!qword_2696DEDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEDB0);
  }
  return result;
}

unint64_t sub_2498CACB0()
{
  unint64_t result = qword_2696DEDB8;
  if (!qword_2696DEDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEDB8);
  }
  return result;
}

unint64_t sub_2498CAD04()
{
  unint64_t result = qword_2696DEDC0;
  if (!qword_2696DEDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEDC0);
  }
  return result;
}

unint64_t sub_2498CAD58()
{
  unint64_t result = qword_2696DEDC8;
  if (!qword_2696DEDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEDC8);
  }
  return result;
}

unint64_t sub_2498CADAC()
{
  unint64_t result = qword_2696DEDD0;
  if (!qword_2696DEDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEDD0);
  }
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.maxLabelsCount.getter()
{
  return *(void *)v0;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.maxLabelsCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.maxLabelsCount.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.inset.getter()
{
  return *(float *)(v0 + 8);
}

void Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.inset.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.inset.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.zeroLabelInset.getter()
{
  return *(float *)(v0 + 12);
}

void Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.zeroLabelInset.setter(float a1)
{
  *(float *)(v1 + 12) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.zeroLabelInset.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelsFont.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  int v3 = *(void **)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 40);
  char v5 = *(unsigned char *)(v1 + 48);
  char v6 = *(unsigned char *)(v1 + 49);
  uint64_t v7 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

void Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelsFont.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 3);
  char v6 = a1[32];
  char v7 = a1[33];
  uint64_t v8 = *((void *)a1 + 5);
  uint64_t v9 = *((void *)a1 + 6);
  char v10 = *(void **)(v1 + 32);
  swift_bridgeObjectRelease();

  *(unsigned char *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(void *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v5;
  *(unsigned char *)(v1 + 48) = v6;
  *(unsigned char *)(v1 + 49) = v7;
  *(void *)(v1 + 56) = v8;
  *(void *)(v1 + 64) = v9;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelsFont.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.continuousFill.getter()
{
  return *(unsigned __int8 *)(v0 + 72);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.continuousFill.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 72) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.continuousFill.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hideFirstLabel.getter()
{
  return *(unsigned __int8 *)(v0 + 73);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hideFirstLabel.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 73) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hideFirstLabel.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelDivider.getter()
{
  return *(void *)(v0 + 80);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelDivider.setter(uint64_t result)
{
  *(void *)(v1 + 80) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelDivider.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelColors.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 112);
  uint64_t v5 = *(void *)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 136);
  uint64_t v7 = *(void *)(v1 + 144);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v8 = *(unsigned char *)(v1 + 104);
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v9 = *(unsigned char *)(v1 + 128);
  *(unsigned char *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  char v10 = *(unsigned char *)(v1 + 152);
  *(unsigned char *)(a1 + 64) = v10;
  sub_24988D770(v2, v3, v8);
  sub_24988D770(v4, v5, v9);

  return sub_249890C2C(v6, v7, v10);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelColors.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v16 = a1[4];
  uint64_t v17 = a1[3];
  char v15 = *((unsigned char *)a1 + 40);
  uint64_t v13 = a1[7];
  uint64_t v14 = a1[6];
  char v12 = *((unsigned char *)a1 + 64);
  uint64_t v5 = *(void *)(v1 + 112);
  uint64_t v6 = *(void *)(v1 + 120);
  uint64_t v7 = *(void *)(v1 + 136);
  uint64_t v8 = *(void *)(v1 + 144);
  char v9 = *(unsigned char *)(v1 + 128);
  char v10 = *(unsigned char *)(v1 + 152);
  sub_24988D788(*(void *)(v1 + 88), *(void *)(v1 + 96), *(unsigned char *)(v1 + 104));
  sub_24988D788(v5, v6, v9);
  uint64_t result = sub_249890C40(v7, v8, v10);
  *(void *)(v1 + 88) = v2;
  *(void *)(v1 + 96) = v3;
  *(unsigned char *)(v1 + 104) = v4;
  *(void *)(v1 + 112) = v17;
  *(void *)(v1 + 120) = v16;
  *(unsigned char *)(v1 + 128) = v15;
  *(void *)(v1 + 136) = v14;
  *(void *)(v1 + 144) = v13;
  *(unsigned char *)(v1 + 152) = v12;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.labelColors.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.init(maxLabelsCount:inset:zeroLabelInset:labelsFont:continuousFill:hideFirstLabel:labelDivider:labelColors:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, float a8@<S0>, float a9@<S1>)
{
  char v9 = *a2;
  uint64_t v10 = *((void *)a2 + 1);
  uint64_t v11 = *((void *)a2 + 2);
  uint64_t v12 = *((void *)a2 + 3);
  char v13 = a2[32];
  char v14 = a2[33];
  uint64_t v15 = *((void *)a2 + 5);
  uint64_t v16 = *((void *)a2 + 6);
  char v17 = *(unsigned char *)(a6 + 16);
  char v18 = *(unsigned char *)(a6 + 40);
  char v19 = *(unsigned char *)(a6 + 64);
  *(void *)a7 = a1;
  *(float *)(a7 + 8) = a8;
  *(float *)(a7 + 12) = a9;
  *(unsigned char *)(a7 + 16) = v9;
  *(void *)(a7 + 24) = v10;
  *(void *)(a7 + 32) = v11;
  *(void *)(a7 + 40) = v12;
  *(unsigned char *)(a7 + 48) = v13;
  *(unsigned char *)(a7 + 49) = v14;
  *(void *)(a7 + 56) = v15;
  *(void *)(a7 + 64) = v16;
  *(unsigned char *)(a7 + 72) = a3;
  *(unsigned char *)(a7 + 73) = a4;
  *(void *)(a7 + 80) = a5;
  *(_OWORD *)(a7 + 88) = *(_OWORD *)a6;
  *(unsigned char *)(a7 + 104) = v17;
  *(_OWORD *)(a7 + 112) = *(_OWORD *)(a6 + 24);
  *(unsigned char *)(a7 + 128) = v18;
  __n128 result = *(__n128 *)(a6 + 48);
  *(__n128 *)(a7 + 136) = result;
  *(unsigned char *)(a7 + 152) = v19;
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)()
{
  return Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.hash(into:)();
}

uint64_t sub_2498CB3E4()
{
  uint64_t result = 0x6C6562614C78616DLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7465736E69;
      break;
    case 2:
      uint64_t result = 0x6562614C6F72657ALL;
      break;
    case 3:
      uint64_t result = 0x6F46736C6562616CLL;
      break;
    case 4:
      uint64_t result = 0x6F756E69746E6F63;
      break;
    case 5:
      uint64_t result = 0x7372694665646968;
      break;
    case 6:
      uint64_t result = 0x7669446C6562616CLL;
      break;
    case 7:
      uint64_t result = 0x6C6F436C6562616CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498CB524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498D27E8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498CB54C(uint64_t a1)
{
  unint64_t v2 = sub_2498CFBCC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498CB588(uint64_t a1)
{
  unint64_t v2 = sub_2498CFBCC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEF58);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v42 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v41 = *(void *)(v1 + 24);
  uint64_t v38 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  int v8 = *(unsigned __int8 *)(v1 + 48);
  int v36 = *(unsigned __int8 *)(v1 + 49);
  int v37 = v8;
  uint64_t v9 = *(void *)(v1 + 56);
  uint64_t v34 = *(void *)(v1 + 64);
  uint64_t v35 = v9;
  LODWORD(v9) = *(unsigned __int8 *)(v1 + 72);
  int v32 = *(unsigned __int8 *)(v1 + 73);
  int v33 = v9;
  uint64_t v31 = *(void *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 88);
  uint64_t v39 = *(void *)(v1 + 96);
  uint64_t v40 = v10;
  int v30 = *(unsigned __int8 *)(v1 + 104);
  uint64_t v29 = *(void *)(v1 + 112);
  uint64_t v28 = *(void *)(v1 + 120);
  int v27 = *(unsigned __int8 *)(v1 + 128);
  uint64_t v11 = *(void *)(v1 + 144);
  uint64_t v26 = *(void *)(v1 + 136);
  int v12 = *(unsigned __int8 *)(v1 + 152);
  uint64_t v13 = a1[3];
  char v14 = a1;
  uint64_t v16 = v15;
  __swift_project_boxed_opaque_existential_2Tm(v14, v13);
  sub_2498CFBCC();
  sub_249AEE468();
  LOBYTE(v44) = 0;
  char v17 = v6;
  uint64_t v18 = v43;
  sub_249AEDEE8();
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v16);
  }
  uint64_t v20 = v41;
  char v21 = v42;
  LODWORD(v43) = v12;
  uint64_t v25 = v11;
  uint64_t v22 = v39;
  uint64_t v23 = v40;
  LOBYTE(v44) = 1;
  sub_249AEDED8();
  LOBYTE(v44) = 2;
  sub_249AEDED8();
  LOBYTE(v44) = v21;
  uint64_t v45 = v20;
  uint64_t v46 = v38;
  uint64_t v47 = v7;
  LOBYTE(v48) = v37;
  BYTE1(v48) = v36;
  uint64_t v49 = v35;
  uint64_t v50 = v34;
  char v53 = 3;
  sub_2498AE9D8();
  sub_249AEDF08();
  LOBYTE(v44) = 4;
  sub_249AEDEC8();
  LOBYTE(v44) = 5;
  sub_249AEDEC8();
  LOBYTE(v44) = 6;
  sub_249AEDEE8();
  uint64_t v44 = v23;
  uint64_t v45 = v22;
  LOBYTE(v46) = v30;
  uint64_t v47 = v29;
  uint64_t v48 = v28;
  LOBYTE(v49) = v27;
  uint64_t v50 = v26;
  uint64_t v51 = v25;
  char v52 = v43;
  char v53 = 7;
  sub_2498CFC20();
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v17, v16);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hashValue.getter()
{
  return sub_249AEE388();
}

void Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.init(from:)(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEF70);
  uint64_t v4 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498CFBCC();
  int v8 = v6;
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    uint64_t v9 = v4;
    uint64_t v11 = v46;
    uint64_t v10 = v47;
    LOBYTE(v57) = 0;
    int v12 = v8;
    uint64_t v45 = sub_249AEDDE8();
    LOBYTE(v57) = 1;
    sub_249AEDDD8();
    uint64_t v13 = (uint64_t)v7;
    unsigned int v15 = v14;
    LOBYTE(v57) = 2;
    sub_249AEDDD8();
    unsigned int v17 = v16;
    LOBYTE(v48) = 3;
    sub_2498AEAE0();
    sub_249AEDE08();
    unint64_t v43 = v58;
    unint64_t v18 = v60;
    int v42 = v61;
    int v40 = v57;
    int v41 = BYTE1(v61);
    unint64_t v20 = v62;
    uint64_t v19 = v63;
    LOBYTE(v57) = 4;
    id v44 = v59;
    swift_bridgeObjectRetain();
    int v38 = sub_249AEDDC8();
    unint64_t v39 = v20;
    LOBYTE(v57) = 5;
    LOBYTE(v20) = sub_249AEDDC8();
    LOBYTE(v57) = 6;
    uint64_t v37 = sub_249AEDDE8();
    char v78 = 7;
    sub_2498CFC74();
    sub_249AEDE08();
    v38 &= 1u;
    int v36 = v20 & 1;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v10);
    uint64_t v35 = v80;
    int v34 = v81;
    uint64_t v32 = *((void *)&v82 + 1);
    uint64_t v33 = v82;
    int v31 = v83;
    uint64_t v29 = v85;
    uint64_t v30 = v84;
    int v28 = v86;
    char v21 = v44;
    uint64_t v22 = v45;
    uint64_t v47 = v79;
    *(void *)&long long v48 = v45;
    *((void *)&v48 + 1) = __PAIR64__(v17, v15);
    LOBYTE(v9) = v40;
    LOBYTE(v49) = v40;
    *((void *)&v49 + 1) = v43;
    *(void *)&long long v50 = v44;
    *((void *)&v50 + 1) = v18;
    LOBYTE(v51) = v42;
    BYTE1(v51) = v41;
    *((void *)&v51 + 1) = v39;
    *(void *)&long long v52 = v19;
    BYTE8(v52) = v38;
    BYTE9(v52) = v36;
    *(void *)&long long v53 = v37;
    *((void *)&v53 + 1) = v79;
    *(void *)&long long v54 = v80;
    BYTE8(v54) = v81;
    long long v55 = v82;
    LOBYTE(v56[0]) = v83;
    *((void *)&v56[0] + 1) = v84;
    *(void *)&v56[1] = v85;
    BYTE8(v56[1]) = v86;
    sub_2498CFCC8((uint64_t)&v48);
    swift_bridgeObjectRelease();

    long long v23 = v55;
    v11[6] = v54;
    v11[7] = v23;
    v11[8] = v56[0];
    *(_OWORD *)((char *)v11 + 137) = *(_OWORD *)((char *)v56 + 9);
    long long v24 = v51;
    v11[2] = v50;
    v11[3] = v24;
    long long v25 = v53;
    v11[4] = v52;
    v11[5] = v25;
    long long v26 = v49;
    *uint64_t v11 = v48;
    v11[1] = v26;
    __swift_destroy_boxed_opaque_existential_2Tm(v13);
    uint64_t v57 = v22;
    unint64_t v58 = __PAIR64__(v17, v15);
    LOBYTE(v59) = v9;
    unint64_t v60 = v43;
    float v61 = v21;
    unint64_t v62 = v18;
    LOBYTE(v63) = v42;
    BYTE1(v63) = v41;
    unint64_t v64 = v39;
    uint64_t v65 = v19;
    char v66 = v38;
    char v67 = v36;
    uint64_t v68 = v37;
    uint64_t v69 = v47;
    uint64_t v70 = v35;
    char v71 = v34;
    uint64_t v72 = v33;
    uint64_t v73 = v32;
    char v74 = v31;
    uint64_t v75 = v30;
    uint64_t v76 = v29;
    char v77 = v28;
    sub_2498CFD74((uint64_t)&v57);
  }
}

void sub_2498CBEA8(void *a1@<X0>, _OWORD *a2@<X8>)
{
}

uint64_t sub_2498CBEC0(void *a1)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.encode(to:)(a1);
}

uint64_t sub_2498CBED8()
{
  return sub_249AEE388();
}

uint64_t sub_2498CBF1C()
{
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickType.displayValue.getter()
{
  uint64_t v1 = 0x7261646E6F636553;
  if (*v0 != 1) {
    uint64_t v1 = 0x7972616974726554;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7972616D697250;
  }
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickType.init(rawValue:)@<X0>(char *a1@<X8>)
{
  unint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  char v4 = 3;
  if (v2 < 3) {
    char v4 = v2;
  }
  *a1 = v4;
  return result;
}

void *static Instrument.GaugeStyle.TicksConfiguration.TickType.allCases.getter()
{
  return &unk_26FDA0EC8;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickType.rawValue.getter()
{
  uint64_t v1 = 0x7261646E6F636573;
  if (*v0 != 1) {
    uint64_t v1 = 0x7972616974726574;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7972616D697270;
  }
}

uint64_t sub_2498CC084(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498F279C(*a1, *a2);
}

uint64_t sub_2498CC090@<X0>(char *a1@<X8>)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickType.init(rawValue:)(a1);
}

void sub_2498CC09C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE700000000000000;
  unint64_t v4 = 0xE900000000000079;
  uint64_t v5 = 0x7261646E6F636573;
  if (v2 != 1)
  {
    uint64_t v5 = 0x7972616974726574;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7972616D697270;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void sub_2498CC100(void *a1@<X8>)
{
  *a1 = &unk_26FDA0EF0;
}

uint64_t sub_2498CC110()
{
  return sub_249AED3A8();
}

uint64_t sub_2498CC170()
{
  return sub_249AED348();
}

uint64_t sub_2498CC1C0()
{
  return sub_249AEE388();
}

uint64_t sub_2498CC268()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498CC2FC()
{
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.ticksCount.getter()
{
  return *(void *)v0;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.ticksCount.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.ticksCount.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickWidth.getter()
{
  return *(float *)(v0 + 8);
}

void Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickWidth.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickWidth.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickLength.getter()
{
  return *(float *)(v0 + 12);
}

void Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickLength.setter(float a1)
{
  *(float *)(v1 + 12) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickLength.modify())()
{
  return nullsub_1;
}

float Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickInset.getter()
{
  return *(float *)(v0 + 16);
}

void Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickInset.setter(float a1)
{
  *(float *)(v1 + 16) = a1;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tickInset.modify())()
{
  return nullsub_1;
}

void Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.lineCap.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 20);
}

unsigned char *Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.lineCap.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 20) = *result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.lineCap.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.primaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.primaryColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  *(unsigned char *)(v1 + 40) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.primaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.secondaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.secondaryColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  *(unsigned char *)(v1 + 64) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.secondaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tertiaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_249890C2C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tertiaryColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_249890C40(*(void *)(v1 + 72), *(void *)(v1 + 80), *(unsigned char *)(v1 + 88));
  *(void *)(v1 + 72) = v2;
  *(void *)(v1 + 80) = v3;
  *(unsigned char *)(v1 + 88) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.tertiaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hideFirstTick.getter()
{
  return *(unsigned __int8 *)(v0 + 89);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hideFirstTick.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 89) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hideFirstTick.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.fixedRedline.getter()
{
  return *(unsigned __int8 *)(v0 + 90);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.fixedRedline.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 90) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.fixedRedline.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.init(ticksCount:tickWidth:tickLength:tickInset:lineCap:primaryColorID:secondaryColorID:tertiaryColorID:hideFirstTick:fixedRedline:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __n128 *a5@<X4>, char a6@<W5>, char a7@<W6>, uint64_t a8@<X8>, float a9@<S0>, float a10@<S1>, float a11@<S2>)
{
  char v11 = *a2;
  char v12 = *(unsigned char *)(a3 + 16);
  char v13 = *(unsigned char *)(a4 + 16);
  unsigned __int8 v14 = a5[1].n128_u8[0];
  *(void *)a8 = a1;
  *(float *)(a8 + 8) = a9;
  *(float *)(a8 + 12) = a10;
  *(float *)(a8 + 16) = a11;
  *(unsigned char *)(a8 + 20) = v11;
  *(_OWORD *)(a8 + 24) = *(_OWORD *)a3;
  *(unsigned char *)(a8 + 40) = v12;
  *(_OWORD *)(a8 + 48) = *(_OWORD *)a4;
  *(unsigned char *)(a8 + 64) = v13;
  __n128 result = *a5;
  *(__n128 *)(a8 + 72) = *a5;
  *(unsigned char *)(a8 + 88) = v14;
  *(unsigned char *)(a8 + 89) = a6;
  *(unsigned char *)(a8 + 90) = a7;
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = *(void *)(v0 + 72);
  int v9 = *(unsigned __int8 *)(v0 + 88);
  char v4 = *(unsigned char *)(v0 + 40);
  char v5 = *(unsigned char *)(v0 + 64);
  sub_249AEE348();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE348();
  sub_24988D770(v1, v2, v4);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v1, v2, v4);
  sub_24988D770(v10, v3, v5);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v10, v3, v5);
  sub_249AEE358();
  if (v9 != 255)
  {
    sub_24988D770(v8, v7, v9);
    sub_24988D770(v8, v7, v9);
    Theme.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249890C40(v8, v7, v9);
    sub_249890C40(v8, v7, v9);
  }
  sub_249AEE358();
  return sub_249AEE358();
}

unint64_t sub_2498CC8C0(char a1)
{
  unint64_t result = 0x756F43736B636974;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x746469576B636974;
      break;
    case 2:
      unint64_t result = 0x676E654C6B636974;
      break;
    case 3:
      unint64_t result = 0x65736E496B636974;
      break;
    case 4:
      unint64_t result = 0x706143656E696CLL;
      break;
    case 5:
      unint64_t result = 0x437972616D697270;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 0x7972616974726574;
      break;
    case 8:
      unint64_t result = 0x7372694665646968;
      break;
    case 9:
      unint64_t result = 0x6465526465786966;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2498CCA44()
{
  return sub_2498CC8C0(*v0);
}

uint64_t sub_2498CCA4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498D2BF8(a1, a2);
  *a3 = result;
  return result;
}

void sub_2498CCA74(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_2498CCA80(uint64_t a1)
{
  unint64_t v2 = sub_2498D02A8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498CCABC(uint64_t a1)
{
  unint64_t v2 = sub_2498D02A8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEF80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  BOOL v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v26 = *(unsigned __int8 *)(v1 + 20);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v24 = *(void *)(v1 + 32);
  uint64_t v25 = v7;
  LODWORD(v7) = *(unsigned __int8 *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v20 = *(void *)(v1 + 48);
  uint64_t v21 = v8;
  int v22 = *(unsigned __int8 *)(v1 + 64);
  int v23 = v7;
  uint64_t v9 = *(void *)(v1 + 80);
  uint64_t v17 = *(void *)(v1 + 72);
  uint64_t v18 = v9;
  int v19 = *(unsigned __int8 *)(v1 + 88);
  v16[1] = *(unsigned __int8 *)(v1 + 89);
  int v10 = *(unsigned __int8 *)(v1 + 90);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498D02A8();
  sub_249AEE468();
  LOBYTE(v28) = 0;
  uint64_t v11 = v27;
  sub_249AEDEE8();
  if (!v11)
  {
    char v12 = v26;
    uint64_t v14 = v24;
    uint64_t v13 = v25;
    LODWORD(v27) = v10;
    LOBYTE(v28) = 1;
    sub_249AEDED8();
    LOBYTE(v28) = 2;
    sub_249AEDED8();
    LOBYTE(v28) = 3;
    sub_249AEDED8();
    LOBYTE(v28) = v12;
    char v31 = 4;
    sub_2498D02FC();
    sub_249AEDF08();
    uint64_t v28 = v13;
    uint64_t v29 = v14;
    char v30 = v23;
    char v31 = 5;
    sub_24988E104();
    sub_249AEDF08();
    uint64_t v28 = v20;
    uint64_t v29 = v21;
    char v30 = v22;
    char v31 = 6;
    sub_249AEDF08();
    uint64_t v28 = v17;
    uint64_t v29 = v18;
    char v30 = v19;
    char v31 = 7;
    sub_249AEDEA8();
    LOBYTE(v28) = 8;
    sub_249AEDEC8();
    LOBYTE(v28) = v27;
    char v31 = 9;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEF98);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498D02A8();
  sub_249AEE428();
  if (v2)
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    char v20 = -1;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    LOBYTE(v39) = 0;
    uint64_t v9 = sub_249AEDDE8();
    LOBYTE(v39) = 1;
    sub_249AEDDD8();
    int v11 = v10;
    LOBYTE(v39) = 2;
    sub_249AEDDD8();
    int v13 = v12;
    LOBYTE(v39) = 3;
    sub_249AEDDD8();
    int v15 = v14;
    char v42 = 4;
    sub_2498D0350();
    sub_249AEDE08();
    int v35 = v39;
    char v42 = 5;
    sub_24988E268();
    sub_249AEDE08();
    uint64_t v32 = v9;
    uint64_t v17 = v39;
    uint64_t v33 = v40;
    int v34 = v41;
    char v42 = 6;
    sub_249AEDE08();
    uint64_t v38 = v17;
    uint64_t v31 = v39;
    uint64_t v36 = v40;
    int v37 = v41;
    char v42 = 7;
    sub_249AEDDA8();
    char v30 = a2;
    uint64_t v18 = v39;
    uint64_t v19 = v40;
    char v20 = v41;
    LOBYTE(v39) = 8;
    int v29 = sub_249AEDDC8();
    LOBYTE(v39) = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEB18);
    sub_2498D0A3C((unint64_t *)&qword_2696DEB20, &qword_2696DEB18);
    sub_249AEDDA8();
    int v28 = v42 & 1;
    v29 &= 1u;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v21 = v30;
    uint64_t v22 = v31;
    uint64_t v23 = v33;
    *char v30 = v32;
    *((_DWORD *)v21 + 2) = v11;
    *((_DWORD *)v21 + 3) = v13;
    *((_DWORD *)v21 + 4) = v15;
    char v24 = v34;
    *((unsigned char *)v21 + 20) = v35;
    uint64_t v25 = v38;
    v21[3] = v38;
    v21[4] = v23;
    *((unsigned char *)v21 + 40) = v24;
    uint64_t v26 = v36;
    v21[6] = v22;
    v21[7] = v26;
    *((unsigned char *)v21 + 64) = v37;
    v21[9] = v18;
    v21[10] = v19;
    *((unsigned char *)v21 + 88) = v20;
    *((unsigned char *)v21 + 89) = v29;
    *((unsigned char *)v21 + 90) = v28;
    sub_24988D770(v25, v23, v24);
    uint64_t v27 = v22;
    LOBYTE(v22) = v37;
    sub_24988D770(v27, v26, v37);
    sub_249890C2C(v18, v19, v20);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_24988D788(v38, v23, v24);
    sub_24988D788(v31, v26, v22);
  }
  return sub_249890C40(v18, v19, v20);
}

uint64_t sub_2498CD4E8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2498CD500(void *a1)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.encode(to:)(a1);
}

uint64_t sub_2498CD518()
{
  return sub_249AEE388();
}

uint64_t sub_2498CD5C0()
{
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.primaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.primaryColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(unsigned char *)(v1 + 16) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.primaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.secondaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.secondaryColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = v3;
  *(unsigned char *)(v1 + 40) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.secondaryColorID.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.tertiaryColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_249890C2C(v2, v3, v4);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.tertiaryColorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_249890C40(*(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64));
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  *(unsigned char *)(v1 + 64) = v4;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.tertiaryColorID.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.init(primaryColorID:secondaryColorID:tertiaryColorID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *(unsigned char *)(a1 + 16);
  char v5 = *(unsigned char *)(a2 + 16);
  unsigned __int8 v6 = a3[1].n128_u8[0];
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(unsigned char *)(a4 + 16) = v4;
  *(_OWORD *)(a4 + 24) = *(_OWORD *)a2;
  *(unsigned char *)(a4 + 40) = v5;
  __n128 result = *a3;
  *(__n128 *)(a4 + 48) = *a3;
  *(unsigned char *)(a4 + 64) = v6;
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.hash(into:)()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v10 = *(void *)(v0 + 48);
  int v6 = *(unsigned __int8 *)(v0 + 64);
  char v7 = *(unsigned char *)(v0 + 16);
  char v8 = *(unsigned char *)(v0 + 40);
  sub_24988D770(*(void *)v0, v2, v7);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v1, v2, v7);
  sub_24988D770(v3, v4, v8);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v3, v4, v8);
  if (v6 == 255) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  sub_24988D770(v10, v5, v6);
  sub_24988D770(v10, v5, v6);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249890C40(v10, v5, v6);

  return sub_249890C40(v10, v5, v6);
}

uint64_t sub_2498CD9B8()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x7972616974726574;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x437972616D697270;
  }
}

uint64_t sub_2498CDA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498D30A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498CDA58(uint64_t a1)
{
  unint64_t v2 = sub_2498D03A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498CDA94(uint64_t a1)
{
  unint64_t v2 = sub_2498D03A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEFA8);
  uint64_t v23 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v6 = v1[1];
  char v8 = *((unsigned char *)v1 + 16);
  uint64_t v9 = v1[3];
  uint64_t v20 = v1[4];
  uint64_t v21 = v9;
  int v27 = *((unsigned __int8 *)v1 + 40);
  uint64_t v10 = v1[6];
  uint64_t v18 = v1[7];
  uint64_t v19 = v10;
  HIDWORD(v17) = *((unsigned __int8 *)v1 + 64);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498D03A4();
  sub_249AEE468();
  uint64_t v24 = v7;
  uint64_t v25 = v6;
  char v26 = v8;
  char v28 = 0;
  sub_24988E104();
  uint64_t v11 = v22;
  sub_249AEDF08();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v5, v3);
  }
  char v13 = BYTE4(v17);
  uint64_t v15 = v18;
  uint64_t v14 = v19;
  uint64_t v16 = v23;
  uint64_t v24 = v21;
  uint64_t v25 = v20;
  char v26 = v27;
  char v28 = 1;
  sub_249AEDF08();
  uint64_t v24 = v14;
  uint64_t v25 = v15;
  char v26 = v13;
  char v28 = 2;
  sub_249AEDEA8();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEFB8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498D03A4();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    uint64_t v24 = 0;
    uint64_t v25 = 0;
    char v26 = -1;
  }
  else
  {
    char v40 = 0;
    sub_24988E268();
    sub_249AEDE08();
    int v34 = a2;
    uint64_t v10 = v37;
    int v11 = v38;
    char v40 = 1;
    uint64_t v35 = v36;
    sub_24988D770(v36, v37, v38);
    sub_249AEDE08();
    int v33 = v11;
    uint64_t v12 = v36;
    char v40 = 2;
    uint64_t v32 = v37;
    int v39 = v38;
    sub_24988D770(v36, v37, v38);
    uint64_t v31 = 0;
    sub_249AEDDA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v37;
    uint64_t v30 = v12;
    LODWORD(v31) = v38;
    uint64_t v14 = v36;
    sub_249890C2C(v36, v37, v38);
    sub_249890C40(0, 0, 255);
    uint64_t v15 = v35;
    char v16 = v33;
    sub_24988D770(v35, v10, v33);
    uint64_t v17 = v32;
    sub_24988D770(v12, v32, v39);
    uint64_t v18 = v14;
    uint64_t v28 = v13;
    uint64_t v29 = v14;
    uint64_t v19 = v14;
    LOBYTE(v14) = v31;
    sub_249890C2C(v19, v13, v31);
    sub_249890C40(v18, v13, v14);
    uint64_t v20 = v30;
    LOBYTE(v18) = v39;
    sub_24988D788(v30, v17, v39);
    sub_24988D788(v15, v10, v16);
    uint64_t v21 = v34;
    uint64_t *v34 = v15;
    v21[1] = v10;
    *((unsigned char *)v21 + 16) = v16;
    v21[3] = v20;
    v21[4] = v17;
    *((unsigned char *)v21 + 40) = v18;
    uint64_t v22 = v28;
    uint64_t v23 = v29;
    v21[6] = v29;
    v21[7] = v22;
    LOBYTE(v18) = v31;
    *((unsigned char *)v21 + 64) = v31;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_24988D788(v15, v10, v16);
    sub_24988D788(v30, v17, v39);
    uint64_t v24 = v23;
    uint64_t v25 = v22;
    char v26 = v18;
  }
  return sub_249890C40(v24, v25, v26);
}

uint64_t sub_2498CE168@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.init(from:)(a1, a2);
}

uint64_t sub_2498CE180(void *a1)
{
  return Instrument.GaugeStyle.TicksConfiguration.TickLabelColors.encode(to:)(a1);
}

uint64_t sub_2498CE198()
{
  return sub_249AEE388();
}

uint64_t sub_2498CE210()
{
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.tickTypeConfigurations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.tickTypeConfigurations.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v1 = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.tickTypeConfigurations.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.tickLabelsConfiguration.getter@<X0>(_OWORD *a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 120);
  v11[6] = *(_OWORD *)(v1 + 104);
  v11[7] = v2;
  v12[0] = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)v12 + 9) = *(_OWORD *)(v1 + 145);
  long long v3 = *(_OWORD *)(v1 + 56);
  v11[2] = *(_OWORD *)(v1 + 40);
  v11[3] = v3;
  long long v4 = *(_OWORD *)(v1 + 88);
  v11[4] = *(_OWORD *)(v1 + 72);
  v11[5] = v4;
  long long v5 = *(_OWORD *)(v1 + 24);
  v11[0] = *(_OWORD *)(v1 + 8);
  v11[1] = v5;
  long long v6 = *(_OWORD *)(v1 + 120);
  a1[6] = *(_OWORD *)(v1 + 104);
  a1[7] = v6;
  a1[8] = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)a1 + 137) = *(_OWORD *)(v1 + 145);
  long long v7 = *(_OWORD *)(v1 + 56);
  a1[2] = *(_OWORD *)(v1 + 40);
  a1[3] = v7;
  long long v8 = *(_OWORD *)(v1 + 88);
  a1[4] = *(_OWORD *)(v1 + 72);
  a1[5] = v8;
  long long v9 = *(_OWORD *)(v1 + 24);
  *a1 = *(_OWORD *)(v1 + 8);
  a1[1] = v9;
  return sub_2498CFCC8((uint64_t)v11);
}

__n128 Instrument.GaugeStyle.TicksConfiguration.tickLabelsConfiguration.setter(uint64_t a1)
{
  long long v3 = *(_OWORD *)(v1 + 120);
  v12[6] = *(_OWORD *)(v1 + 104);
  _OWORD v12[7] = v3;
  v13[0] = *(_OWORD *)(v1 + 136);
  *(_OWORD *)((char *)v13 + 9) = *(_OWORD *)(v1 + 145);
  long long v4 = *(_OWORD *)(v1 + 56);
  _OWORD v12[2] = *(_OWORD *)(v1 + 40);
  v12[3] = v4;
  long long v5 = *(_OWORD *)(v1 + 88);
  v12[4] = *(_OWORD *)(v1 + 72);
  v12[5] = v5;
  long long v6 = *(_OWORD *)(v1 + 24);
  v12[0] = *(_OWORD *)(v1 + 8);
  v12[1] = v6;
  sub_2498CFD74((uint64_t)v12);
  long long v7 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 104) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 120) = v7;
  *(_OWORD *)(v1 + 136) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 145) = *(_OWORD *)(a1 + 137);
  long long v8 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = v8;
  long long v9 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 88) = v9;
  __n128 result = *(__n128 *)a1;
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v11;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.tickLabelsConfiguration.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.angleConfiguration.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 184);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 168);
  *(unsigned char *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 192);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.angleConfiguration.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)a1;
  *(unsigned char *)(v1 + 184) = v2;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v1 + 192) = result;
  return result;
}

uint64_t (*Instrument.GaugeStyle.TicksConfiguration.angleConfiguration.modify())()
{
  return nullsub_1;
}

__n128 Instrument.GaugeStyle.TicksConfiguration.init(tickTypeConfigurations:tickLabelsConfiguration:angleConfiguration:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v4 = a2[7];
  *(_OWORD *)(a4 + 104) = a2[6];
  *(_OWORD *)(a4 + 120) = v4;
  *(_OWORD *)(a4 + 136) = a2[8];
  *(_OWORD *)(a4 + 145) = *(_OWORD *)((char *)a2 + 137);
  long long v5 = a2[3];
  *(_OWORD *)(a4 + 40) = a2[2];
  *(_OWORD *)(a4 + 56) = v5;
  long long v6 = a2[5];
  *(_OWORD *)(a4 + 72) = a2[4];
  *(_OWORD *)(a4 + 88) = v6;
  long long v7 = a2[1];
  *(_OWORD *)(a4 + 8) = *a2;
  *(_OWORD *)(a4 + 24) = v7;
  char v8 = *(unsigned char *)(a3 + 16);
  *(void *)a4 = a1;
  *(_OWORD *)(a4 + 168) = *(_OWORD *)a3;
  *(unsigned char *)(a4 + 184) = v8;
  __n128 result = *(__n128 *)(a3 + 24);
  *(__n128 *)(a4 + 192) = result;
  return result;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.assets.getter()
{
  char v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  long long v3 = *(void **)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  char v5 = *(unsigned char *)(v0 + 56);
  char v6 = *(unsigned char *)(v0 + 57);
  uint64_t v8 = *(void *)(v0 + 64);
  uint64_t v7 = *(void *)(v0 + 72);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_249AF0A70;
  *(void *)(v9 + 56) = &type metadata for InstrumentFont;
  *(void *)(v9 + 64) = &protocol witness table for InstrumentFont;
  uint64_t v10 = swift_allocObject();
  *(void *)(v9 + 32) = v10;
  *(unsigned char *)(v10 + 16) = v1;
  *(void *)(v10 + 24) = v2;
  *(void *)(v10 + 32) = v3;
  *(void *)(v10 + 40) = v4;
  *(unsigned char *)(v10 + 48) = v5;
  *(unsigned char *)(v10 + 49) = v6;
  *(void *)(v10 + 56) = v8;
  *(void *)(v10 + 64) = v7;
  id v11 = v3;
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_24988AFF0(a1, v3);
  swift_bridgeObjectRelease();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();

  return sub_2498ACC00();
}

unint64_t sub_2498CE698(char a1)
{
  if (!a1) {
    return 0xD000000000000016;
  }
  if (a1 == 1) {
    return 0xD000000000000017;
  }
  return 0xD000000000000012;
}

unint64_t sub_2498CE6F4()
{
  return sub_2498CE698(*v0);
}

uint64_t sub_2498CE6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498D323C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498CE724(uint64_t a1)
{
  unint64_t v2 = sub_2498D0578();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498CE760(uint64_t a1)
{
  unint64_t v2 = sub_2498D0578();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEFC0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v3;
  uint64_t v10 = v3[21];
  uint64_t v11 = v3[22];
  int v29 = *((unsigned __int8 *)v3 + 184);
  uint64_t v12 = v3[24];
  uint64_t v13 = v3[25];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498D0578();
  sub_249AEE468();
  *(void *)&long long v20 = v9;
  char v30 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEFD0);
  sub_2498D06C8(&qword_2696DEFD8, (void (*)(void))sub_2498D05CC);
  sub_249AEDF08();
  if (!v2)
  {
    char v14 = v29;
    long long v15 = *(_OWORD *)(v3 + 15);
    long long v26 = *(_OWORD *)(v3 + 13);
    long long v27 = v15;
    v28[0] = *(_OWORD *)(v3 + 17);
    *(_OWORD *)((char *)v28 + 9) = *(_OWORD *)((char *)v3 + 145);
    long long v16 = *(_OWORD *)(v3 + 7);
    long long v22 = *(_OWORD *)(v3 + 5);
    long long v23 = v16;
    long long v17 = *(_OWORD *)(v3 + 11);
    long long v24 = *(_OWORD *)(v3 + 9);
    long long v25 = v17;
    long long v18 = *(_OWORD *)(v3 + 3);
    long long v20 = *(_OWORD *)(v3 + 1);
    long long v21 = v18;
    char v30 = 1;
    sub_2498D0620();
    sub_249AEDF08();
    *(void *)&long long v20 = v10;
    *((void *)&v20 + 1) = v11;
    LOBYTE(v21) = v14;
    *((void *)&v21 + 1) = v12;
    *(void *)&long long v22 = v13;
    char v30 = 2;
    sub_2498D0674();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_24988AFF0((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();
  sub_2498ACC00();
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.TicksConfiguration.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEFF8);
  uint64_t v5 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498D0578();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEFD0);
  LOBYTE(v21[0]) = 0;
  sub_2498D06C8(&qword_2696DF000, (void (*)(void))sub_2498D0744);
  sub_249AEDE08();
  uint64_t v9 = v24;
  char v52 = 1;
  sub_2498D0798();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  long long v49 = v59;
  long long v50 = v60;
  *(_OWORD *)long long v51 = v61[0];
  *(_OWORD *)&v51[9] = *(_OWORD *)((char *)v61 + 9);
  long long v45 = v55;
  long long v46 = v56;
  long long v47 = v57;
  long long v48 = v58;
  long long v43 = v53;
  long long v44 = v54;
  long long v68 = v59;
  long long v69 = v60;
  v70[0] = v61[0];
  *(_OWORD *)((char *)v70 + 9) = *(_OWORD *)((char *)v61 + 9);
  long long v64 = v55;
  long long v65 = v56;
  long long v66 = v57;
  long long v67 = v58;
  long long v62 = v53;
  long long v63 = v54;
  char v38 = 2;
  sub_2498CFCC8((uint64_t)&v43);
  sub_2498D07EC();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v71);
  uint64_t v10 = v39;
  uint64_t v11 = v40;
  char v12 = v41;
  *(_OWORD *)((char *)&v21[6] + 8) = v49;
  *(_OWORD *)((char *)&v21[7] + 8) = v50;
  *(_OWORD *)((char *)&v21[8] + 8) = *(_OWORD *)v51;
  *(_OWORD *)((char *)&v21[9] + 1) = *(_OWORD *)&v51[9];
  *(_OWORD *)((char *)&v21[2] + 8) = v45;
  *(_OWORD *)((char *)&v21[3] + 8) = v46;
  *(_OWORD *)((char *)&v21[4] + 8) = v47;
  *(_OWORD *)((char *)&v21[5] + 8) = v48;
  *(_OWORD *)((char *)v21 + 8) = v43;
  long long v13 = v42;
  *(void *)&v21[0] = v9;
  *(_OWORD *)((char *)&v21[1] + 8) = v44;
  *((void *)&v21[10] + 1) = v39;
  *(void *)&long long v22 = v40;
  BYTE8(v22) = v41;
  long long v23 = v42;
  sub_2498D0840((uint64_t)v21);
  sub_2498CFD74((uint64_t)&v43);
  swift_bridgeObjectRelease();
  long long v14 = v22;
  a2[10] = v21[10];
  a2[11] = v14;
  a2[12] = v23;
  long long v15 = v21[7];
  a2[6] = v21[6];
  a2[7] = v15;
  long long v16 = v21[9];
  a2[8] = v21[8];
  a2[9] = v16;
  long long v17 = v21[3];
  a2[2] = v21[2];
  a2[3] = v17;
  long long v18 = v21[5];
  a2[4] = v21[4];
  a2[5] = v18;
  long long v19 = v21[1];
  *a2 = v21[0];
  a2[1] = v19;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  long long v31 = v68;
  long long v32 = v69;
  v33[0] = v70[0];
  *(_OWORD *)((char *)v33 + 9) = *(_OWORD *)((char *)v70 + 9);
  long long v27 = v64;
  long long v28 = v65;
  long long v29 = v66;
  long long v30 = v67;
  long long v25 = v62;
  uint64_t v24 = v9;
  long long v26 = v63;
  uint64_t v34 = v10;
  uint64_t v35 = v11;
  char v36 = v12;
  long long v37 = v13;
  return sub_2498D08F4((uint64_t)&v24);
}

uint64_t sub_2498CEFB0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return Instrument.GaugeStyle.TicksConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2498CEFC8(void *a1)
{
  return Instrument.GaugeStyle.TicksConfiguration.encode(to:)(a1);
}

uint64_t sub_2498CEFE8()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_24988AFF0((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration.hash(into:)();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();
  sub_2498ACC00();
  return sub_249AEE388();
}

double sub_2498CF0B0()
{
  qword_2696DEDD8 = 2;
  qword_2696DEDE0 = 0x4198000040800000;
  dword_2696DEDE8 = 1086324736;
  byte_2696DEDEC = 0;
  *(_OWORD *)&qword_2696DEDF0 = xmmword_249AF5C20;
  byte_2696DEE00 = 0;
  *(void *)&double result = 32;
  xmmword_2696DEE08 = xmmword_249AF5C30;
  byte_2696DEE18 = 0;
  qword_2696DEE20 = 0;
  unk_2696DEE28 = 0;
  word_2696DEE30 = 255;
  byte_2696DEE32 = 0;
  return result;
}

uint64_t static Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.defaultPrimary.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD378 != -1) {
    swift_once();
  }
  int v2 = dword_2696DEDE8;
  char v3 = byte_2696DEDEC;
  uint64_t v4 = qword_2696DEDF0;
  uint64_t v5 = unk_2696DEDF8;
  long long v6 = xmmword_2696DEE08;
  uint64_t v7 = qword_2696DEE20;
  uint64_t v8 = unk_2696DEE28;
  char v9 = HIBYTE(word_2696DEE30);
  char v10 = byte_2696DEE32;
  *(void *)a1 = qword_2696DEDD8;
  *(void *)(a1 + 8) = qword_2696DEDE0;
  *(_DWORD *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 20) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v11 = byte_2696DEE00;
  *(unsigned char *)(a1 + 40) = byte_2696DEE00;
  *(_OWORD *)(a1 + 48) = v6;
  char v12 = byte_2696DEE18;
  *(unsigned char *)(a1 + 64) = byte_2696DEE18;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  char v13 = word_2696DEE30;
  *(unsigned char *)(a1 + 88) = word_2696DEE30;
  *(unsigned char *)(a1 + 89) = v9;
  *(unsigned char *)(a1 + 90) = v10;
  sub_24988D770(v4, v5, v11);
  sub_24988D770(v6, *((uint64_t *)&v6 + 1), v12);

  return sub_249890C2C(v7, v8, v13);
}

double sub_2498CF20C()
{
  qword_2696DEE38 = 4;
  qword_2696DEE40 = 0x4140000040000000;
  dword_2696DEE48 = 1084227584;
  byte_2696DEE4C = 0;
  *(_OWORD *)&qword_2696DEE50 = xmmword_249AF5C40;
  byte_2696DEE60 = 0;
  *(void *)&double result = 33;
  xmmword_2696DEE68 = xmmword_249AF5C50;
  byte_2696DEE78 = 0;
  qword_2696DEE80 = 0;
  unk_2696DEE88 = 0;
  word_2696DEE90 = 255;
  byte_2696DEE92 = 0;
  return result;
}

uint64_t static Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.defaultSecondary.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD380 != -1) {
    swift_once();
  }
  int v2 = dword_2696DEE48;
  char v3 = byte_2696DEE4C;
  uint64_t v4 = qword_2696DEE50;
  uint64_t v5 = unk_2696DEE58;
  long long v6 = xmmword_2696DEE68;
  uint64_t v7 = qword_2696DEE80;
  uint64_t v8 = unk_2696DEE88;
  char v9 = HIBYTE(word_2696DEE90);
  char v10 = byte_2696DEE92;
  *(void *)a1 = qword_2696DEE38;
  *(void *)(a1 + 8) = qword_2696DEE40;
  *(_DWORD *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 20) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v11 = byte_2696DEE60;
  *(unsigned char *)(a1 + 40) = byte_2696DEE60;
  *(_OWORD *)(a1 + 48) = v6;
  char v12 = byte_2696DEE78;
  *(unsigned char *)(a1 + 64) = byte_2696DEE78;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  char v13 = word_2696DEE90;
  *(unsigned char *)(a1 + 88) = word_2696DEE90;
  *(unsigned char *)(a1 + 89) = v9;
  *(unsigned char *)(a1 + 90) = v10;
  sub_24988D770(v4, v5, v11);
  sub_24988D770(v6, *((uint64_t *)&v6 + 1), v12);

  return sub_249890C2C(v7, v8, v13);
}

double sub_2498CF368()
{
  qword_2696DEE98 = 1;
  qword_2696DEEA0 = 0x40E0000040000000;
  dword_2696DEEA8 = 1084227584;
  byte_2696DEEAC = 0;
  *(_OWORD *)&qword_2696DEEB0 = xmmword_249AF5C40;
  byte_2696DEEC0 = 0;
  *(void *)&double result = 33;
  xmmword_2696DEEC8 = xmmword_249AF5C50;
  byte_2696DEED8 = 0;
  qword_2696DEEE0 = 0;
  unk_2696DEEE8 = 0;
  word_2696DEEF0 = 255;
  byte_2696DEEF2 = 0;
  return result;
}

uint64_t static Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.defaultTertiary.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD388 != -1) {
    swift_once();
  }
  int v2 = dword_2696DEEA8;
  char v3 = byte_2696DEEAC;
  uint64_t v4 = qword_2696DEEB0;
  uint64_t v5 = unk_2696DEEB8;
  long long v6 = xmmword_2696DEEC8;
  uint64_t v7 = qword_2696DEEE0;
  uint64_t v8 = unk_2696DEEE8;
  char v9 = HIBYTE(word_2696DEEF0);
  char v10 = byte_2696DEEF2;
  *(void *)a1 = qword_2696DEE98;
  *(void *)(a1 + 8) = qword_2696DEEA0;
  *(_DWORD *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 20) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v11 = byte_2696DEEC0;
  *(unsigned char *)(a1 + 40) = byte_2696DEEC0;
  *(_OWORD *)(a1 + 48) = v6;
  char v12 = byte_2696DEED8;
  *(unsigned char *)(a1 + 64) = byte_2696DEED8;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  char v13 = word_2696DEEF0;
  *(unsigned char *)(a1 + 88) = word_2696DEEF0;
  *(unsigned char *)(a1 + 89) = v9;
  *(unsigned char *)(a1 + 90) = v10;
  sub_24988D770(v4, v5, v11);
  sub_24988D770(v6, *((uint64_t *)&v6 + 1), v12);

  return sub_249890C2C(v7, v8, v13);
}

double sub_2498CF4C4()
{
  qword_2696DEEF8 = 0;
  qword_2696DEF00 = 0x4198000040800000;
  dword_2696DEF08 = 1086324736;
  byte_2696DEF0C = 0;
  *(void *)&double result = 28;
  *(_OWORD *)&qword_2696DEF10 = xmmword_249AF5C20;
  byte_2696DEF20 = 0;
  xmmword_2696DEF28 = xmmword_249AF5C20;
  byte_2696DEF38 = 0;
  qword_2696DEF40 = 0;
  unk_2696DEF48 = 0;
  word_2696DEF50 = 511;
  byte_2696DEF52 = 0;
  return result;
}

uint64_t static Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration.noTicks.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD390 != -1) {
    swift_once();
  }
  int v2 = dword_2696DEF08;
  char v3 = byte_2696DEF0C;
  uint64_t v4 = qword_2696DEF10;
  uint64_t v5 = unk_2696DEF18;
  long long v6 = xmmword_2696DEF28;
  uint64_t v7 = qword_2696DEF40;
  uint64_t v8 = unk_2696DEF48;
  char v9 = HIBYTE(word_2696DEF50);
  char v10 = byte_2696DEF52;
  *(void *)a1 = qword_2696DEEF8;
  *(void *)(a1 + 8) = qword_2696DEF00;
  *(_DWORD *)(a1 + 16) = v2;
  *(unsigned char *)(a1 + 20) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v11 = byte_2696DEF20;
  *(unsigned char *)(a1 + 40) = byte_2696DEF20;
  *(_OWORD *)(a1 + 48) = v6;
  char v12 = byte_2696DEF38;
  *(unsigned char *)(a1 + 64) = byte_2696DEF38;
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  char v13 = word_2696DEF50;
  *(unsigned char *)(a1 + 88) = word_2696DEF50;
  *(unsigned char *)(a1 + 89) = v9;
  *(unsigned char *)(a1 + 90) = v10;
  sub_24988D770(v4, v5, v11);
  sub_24988D770(v6, *((uint64_t *)&v6 + 1), v12);

  return sub_249890C2C(v7, v8, v13);
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV15TickLabelColorsV2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v36 = *(void *)(a1 + 24);
  uint64_t v37 = *(void *)(a1 + 32);
  char v38 = *(unsigned char *)(a1 + 40);
  uint64_t v29 = *(void *)(a1 + 48);
  uint64_t v30 = *(void *)(a1 + 56);
  int v31 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  char v35 = *(unsigned char *)(a2 + 40);
  uint64_t v32 = *(void *)(a2 + 48);
  uint64_t v33 = *(void *)(a2 + 56);
  uint64_t v34 = *(void *)(a2 + 32);
  int v28 = *(unsigned __int8 *)(a2 + 64);
  sub_24988D770(*(void *)a1, v3, v4);
  sub_24988D770(v5, v6, v7);
  uint64_t v9 = Theme.ColorID.rawValue.getter();
  uint64_t v11 = v10;
  if (v9 == Theme.ColorID.rawValue.getter() && v11 == v12)
  {
    swift_bridgeObjectRelease_n();
    sub_24988D788(v5, v6, v7);
    sub_24988D788(v2, v3, v4);
  }
  else
  {
    char v13 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24988D788(v5, v6, v7);
    sub_24988D788(v2, v3, v4);
    BOOL result = 0;
    if ((v13 & 1) == 0) {
      return result;
    }
  }
  sub_24988D770(v36, v37, v38);
  sub_24988D770(v8, v34, v35);
  uint64_t v15 = Theme.ColorID.rawValue.getter();
  uint64_t v17 = v16;
  if (v15 == Theme.ColorID.rawValue.getter() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
    sub_24988D788(v8, v34, v35);
    sub_24988D788(v36, v37, v38);
  }
  else
  {
    char v19 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24988D788(v8, v34, v35);
    sub_24988D788(v36, v37, v38);
    BOOL result = 0;
    if ((v19 & 1) == 0) {
      return result;
    }
  }
  if (v31 != 255)
  {
    char v20 = v28;
    uint64_t v22 = v29;
    uint64_t v21 = v30;
    if (v28 != 255)
    {
      sub_249890C2C(v29, v30, v31);
      sub_249890C2C(v29, v30, v31);
      sub_249890C2C(v32, v33, v28);
      uint64_t v23 = Theme.ColorID.rawValue.getter();
      uint64_t v25 = v24;
      if (v23 == Theme.ColorID.rawValue.getter() && v25 == v26)
      {
        swift_bridgeObjectRelease_n();
        sub_249890C40(v32, v33, v28);
        sub_249890C40(v29, v30, v31);
        sub_249890C40(v29, v30, v31);
        return 1;
      }
      char v27 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249890C40(v32, v33, v28);
      sub_249890C40(v29, v30, v31);
      sub_249890C40(v29, v30, v31);
      return (v27 & 1) != 0;
    }
LABEL_15:
    sub_249890C2C(v22, v21, v31);
    sub_249890C2C(v32, v33, v20);
    sub_249890C40(v22, v21, v31);
    sub_249890C40(v32, v33, v20);
    return 0;
  }
  char v20 = v28;
  uint64_t v22 = v29;
  uint64_t v21 = v30;
  if (v28 != 255) {
    goto LABEL_15;
  }
  return 1;
}

BOOL _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV010TickLabelsI0V2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = 0;
  if (*(void *)a1 == *(void *)a2
    && *(float *)(a1 + 8) == *(float *)(a2 + 8)
    && *(float *)(a1 + 12) == *(float *)(a2 + 12))
  {
    long long v36 = *(_OWORD *)(a1 + 112);
    long long v37 = *(_OWORD *)(a1 + 88);
    char v30 = *(unsigned char *)(a1 + 128);
    char v31 = *(unsigned char *)(a1 + 104);
    char v3 = *(unsigned char *)(a1 + 152);
    long long v34 = *(_OWORD *)(a2 + 88);
    long long v35 = *(_OWORD *)(a1 + 136);
    char v4 = *(unsigned char *)(a2 + 104);
    char v5 = *(unsigned char *)(a2 + 128);
    long long v32 = *(_OWORD *)(a2 + 136);
    long long v33 = *(_OWORD *)(a2 + 112);
    char v6 = *(unsigned char *)(a2 + 152);
    uint64_t v7 = *(void *)(a2 + 80);
    int v8 = *(unsigned __int8 *)(a2 + 73);
    int v9 = *(unsigned __int8 *)(a2 + 72);
    uint64_t v11 = *(void *)(a2 + 56);
    uint64_t v10 = *(void *)(a2 + 64);
    char v12 = *(unsigned char *)(a2 + 49);
    char v13 = *(unsigned char *)(a2 + 48);
    uint64_t v14 = *(void *)(a2 + 40);
    uint64_t v16 = *(void *)(a2 + 24);
    uint64_t v15 = *(void *)(a2 + 32);
    char v17 = *(unsigned char *)(a2 + 16);
    uint64_t v18 = *(void *)(a1 + 80);
    int v19 = *(unsigned __int8 *)(a1 + 73);
    int v20 = *(unsigned __int8 *)(a1 + 72);
    uint64_t v22 = *(void *)(a1 + 56);
    uint64_t v21 = *(void *)(a1 + 64);
    char v23 = *(unsigned char *)(a1 + 49);
    char v24 = *(unsigned char *)(a1 + 48);
    uint64_t v25 = *(void *)(a1 + 40);
    uint64_t v27 = *(void *)(a1 + 24);
    uint64_t v26 = *(void *)(a1 + 32);
    LOBYTE(v44) = *(unsigned char *)(a1 + 16);
    *((void *)&v44 + 1) = v27;
    uint64_t v45 = v26;
    *(void *)&long long v46 = v25;
    BYTE8(v46) = v24;
    BYTE9(v46) = v23;
    uint64_t v47 = v22;
    *(void *)&long long v48 = v21;
    LOBYTE(v38) = v17;
    *((void *)&v38 + 1) = v16;
    uint64_t v39 = v15;
    *(void *)&long long v40 = v14;
    BYTE8(v40) = v13;
    BYTE9(v40) = v12;
    uint64_t v41 = v11;
    *(void *)&long long v42 = v10;
    char v28 = _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0((unsigned __int8 *)&v44, (uint64_t)&v38);
    BOOL v2 = 0;
    if ((v28 & 1) != 0 && ((v9 ^ v20) & 1) == 0 && ((v8 ^ v19) & 1) == 0 && v18 == v7)
    {
      long long v44 = v37;
      LOBYTE(v45) = v31;
      long long v46 = v36;
      LOBYTE(v47) = v30;
      long long v48 = v35;
      char v49 = v3;
      long long v38 = v34;
      LOBYTE(v39) = v4;
      long long v40 = v33;
      LOBYTE(v41) = v5;
      long long v42 = v32;
      char v43 = v6;
      return _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV15TickLabelColorsV2eeoiySbAI_AItFZ_0((uint64_t)&v44, (uint64_t)&v38);
    }
  }
  return v2;
}

unint64_t sub_2498CFBCC()
{
  unint64_t result = qword_2696DEF60;
  if (!qword_2696DEF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEF60);
  }
  return result;
}

unint64_t sub_2498CFC20()
{
  unint64_t result = qword_2696DEF68;
  if (!qword_2696DEF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEF68);
  }
  return result;
}

unint64_t sub_2498CFC74()
{
  unint64_t result = qword_2696DEF78;
  if (!qword_2696DEF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEF78);
  }
  return result;
}

uint64_t sub_2498CFCC8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 112);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  char v7 = *(unsigned char *)(a1 + 104);
  char v8 = *(unsigned char *)(a1 + 128);
  char v9 = *(unsigned char *)(a1 + 152);
  id v10 = *(id *)(a1 + 32);
  swift_bridgeObjectRetain();
  sub_24988D770(v2, v3, v7);
  sub_24988D770(v4, v5, v8);
  sub_249890C2C(v12, v6, v9);
  return a1;
}

uint64_t sub_2498CFD74(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v4 = *(void *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 112);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v7 = *(void *)(a1 + 144);
  uint64_t v12 = *(void *)(a1 + 136);
  char v8 = *(unsigned char *)(a1 + 104);
  char v9 = *(unsigned char *)(a1 + 128);
  char v10 = *(unsigned char *)(a1 + 152);
  swift_bridgeObjectRelease();

  sub_24988D788(v3, v4, v8);
  sub_24988D788(v5, v6, v9);
  sub_249890C40(v12, v7, v10);
  return a1;
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV08TickTypeI0V2eeoiySbAI_AItFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if (*(void *)a1 != *(void *)a2
    || *(float *)(a1 + 8) != *(float *)(a2 + 8)
    || *(float *)(a1 + 12) != *(float *)(a2 + 12)
    || *(float *)(a1 + 16) != *(float *)(a2 + 16)
    || *(unsigned __int8 *)(a1 + 20) != *(unsigned __int8 *)(a2 + 20))
  {
    return result;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  uint64_t v41 = *(void *)(a1 + 48);
  uint64_t v42 = *(void *)(a1 + 56);
  char v43 = *(unsigned char *)(a1 + 64);
  uint64_t v34 = *(void *)(a1 + 72);
  uint64_t v35 = *(void *)(a1 + 80);
  int v36 = *(unsigned __int8 *)(a1 + 88);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  char v40 = *(unsigned char *)(a2 + 64);
  uint64_t v37 = *(void *)(a2 + 72);
  uint64_t v38 = *(void *)(a2 + 80);
  uint64_t v39 = *(void *)(a2 + 56);
  int v32 = *(unsigned __int8 *)(a1 + 89);
  int v33 = *(unsigned __int8 *)(a2 + 88);
  int v30 = *(unsigned __int8 *)(a1 + 90);
  int v31 = *(unsigned __int8 *)(a2 + 89);
  int v29 = *(unsigned __int8 *)(a2 + 90);
  sub_24988D770(v4, v5, v6);
  sub_24988D770(v8, v7, v9);
  uint64_t v11 = Theme.ColorID.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == Theme.ColorID.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
    sub_24988D788(v8, v7, v9);
    sub_24988D788(v4, v5, v6);
  }
  else
  {
    char v15 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24988D788(v8, v7, v9);
    sub_24988D788(v4, v5, v6);
    uint64_t result = 0;
    if ((v15 & 1) == 0) {
      return result;
    }
  }
  sub_24988D770(v41, v42, v43);
  sub_24988D770(v10, v39, v40);
  uint64_t v16 = Theme.ColorID.rawValue.getter();
  uint64_t v18 = v17;
  if (v16 == Theme.ColorID.rawValue.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    sub_24988D788(v10, v39, v40);
    sub_24988D788(v41, v42, v43);
  }
  else
  {
    char v20 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24988D788(v10, v39, v40);
    sub_24988D788(v41, v42, v43);
    uint64_t result = 0;
    if ((v20 & 1) == 0) {
      return result;
    }
  }
  if (v36 == 255)
  {
    char v21 = v33;
    uint64_t v23 = v34;
    uint64_t v22 = v35;
    if (v33 == 255)
    {
LABEL_21:
      if (v32 != v31) {
        return 0;
      }
      return v30 ^ v29 ^ 1u;
    }
LABEL_20:
    sub_249890C2C(v23, v22, v36);
    sub_249890C2C(v37, v38, v21);
    sub_249890C40(v23, v22, v36);
    sub_249890C40(v37, v38, v21);
    return 0;
  }
  char v21 = v33;
  uint64_t v23 = v34;
  uint64_t v22 = v35;
  if (v33 == 255) {
    goto LABEL_20;
  }
  sub_249890C2C(v34, v35, v36);
  sub_249890C2C(v34, v35, v36);
  sub_249890C2C(v37, v38, v33);
  uint64_t v24 = Theme.ColorID.rawValue.getter();
  uint64_t v26 = v25;
  if (v24 == Theme.ColorID.rawValue.getter() && v26 == v27)
  {
    swift_bridgeObjectRelease_n();
    sub_249890C40(v37, v38, v33);
    sub_249890C40(v34, v35, v36);
    sub_249890C40(v34, v35, v36);
    goto LABEL_21;
  }
  char v28 = sub_249AEE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249890C40(v37, v38, v33);
  sub_249890C40(v34, v35, v36);
  sub_249890C40(v34, v35, v36);
  uint64_t result = 0;
  if ((v28 & 1) != 0 && ((v32 ^ v31) & 1) == 0) {
    return v30 ^ v29 ^ 1u;
  }
  return result;
}

unint64_t sub_2498D02A8()
{
  unint64_t result = qword_2696DEF88;
  if (!qword_2696DEF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEF88);
  }
  return result;
}

unint64_t sub_2498D02FC()
{
  unint64_t result = qword_2696DEF90;
  if (!qword_2696DEF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEF90);
  }
  return result;
}

unint64_t sub_2498D0350()
{
  unint64_t result = qword_2696DEFA0;
  if (!qword_2696DEFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEFA0);
  }
  return result;
}

unint64_t sub_2498D03A4()
{
  unint64_t result = qword_2696DEFB0;
  if (!qword_2696DEFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEFB0);
  }
  return result;
}

uint64_t sub_2498D03F8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  int v4 = *(unsigned __int8 *)(a1 + 184);
  float64x2_t v18 = *(float64x2_t *)(a1 + 192);
  int8x16_t v19 = *(int8x16_t *)(a1 + 168);
  int v5 = *(unsigned __int8 *)(a2 + 184);
  float64x2_t v16 = *(float64x2_t *)(a2 + 192);
  int8x16_t v17 = *(int8x16_t *)(a2 + 168);
  if ((sub_249A01AD8(*(void *)a1, *(void *)a2) & 1) == 0) {
    return 0;
  }
  long long v6 = *(_OWORD *)(a1 + 120);
  v22[6] = *(_OWORD *)(a1 + 104);
  v22[7] = v6;
  v23[0] = *(_OWORD *)(a1 + 136);
  *(_OWORD *)((char *)v23 + 9) = *(_OWORD *)(a1 + 145);
  long long v7 = *(_OWORD *)(a1 + 56);
  v22[2] = *(_OWORD *)(a1 + 40);
  v22[3] = v7;
  long long v8 = *(_OWORD *)(a1 + 88);
  v22[4] = *(_OWORD *)(a1 + 72);
  v22[5] = v8;
  long long v9 = *(_OWORD *)(a1 + 24);
  v22[0] = *(_OWORD *)(a1 + 8);
  v22[1] = v9;
  long long v10 = *(_OWORD *)(a2 + 120);
  v20[6] = *(_OWORD *)(a2 + 104);
  v20[7] = v10;
  v21[0] = *(_OWORD *)(a2 + 136);
  *(_OWORD *)((char *)v21 + 9) = *(_OWORD *)(a2 + 145);
  long long v11 = *(_OWORD *)(a2 + 56);
  v20[2] = *(_OWORD *)(a2 + 40);
  v20[3] = v11;
  long long v12 = *(_OWORD *)(a2 + 88);
  _DWORD v20[4] = *(_OWORD *)(a2 + 72);
  v20[5] = v12;
  long long v13 = *(_OWORD *)(a2 + 24);
  v20[0] = *(_OWORD *)(a2 + 8);
  v20[1] = v13;
  if (!_s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV010TickLabelsI0V2eeoiySbAI_AItFZ_0((uint64_t)v22, (uint64_t)v20))return 0; {
  uint16x4_t v14 = (uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(v19, v19, 8uLL), (float64x2_t)vextq_s8(v17, v17, 8uLL)), (int32x4_t)vceqq_f64(v18, v16))), 0xFuLL));
  }
  v14.i16[0] = vminv_u16(v14);
  return v14.i32[0] & (v4 ^ v5 ^ 1u);
}

unint64_t sub_2498D0578()
{
  unint64_t result = qword_2696DEFC8;
  if (!qword_2696DEFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEFC8);
  }
  return result;
}

unint64_t sub_2498D05CC()
{
  unint64_t result = qword_2696DEFE0;
  if (!qword_2696DEFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEFE0);
  }
  return result;
}

unint64_t sub_2498D0620()
{
  unint64_t result = qword_2696DEFE8;
  if (!qword_2696DEFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEFE8);
  }
  return result;
}

unint64_t sub_2498D0674()
{
  unint64_t result = qword_2696DEFF0;
  if (!qword_2696DEFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DEFF0);
  }
  return result;
}

uint64_t sub_2498D06C8(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DEFD0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498D0744()
{
  unint64_t result = qword_2696DF008;
  if (!qword_2696DF008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF008);
  }
  return result;
}

unint64_t sub_2498D0798()
{
  unint64_t result = qword_2696DF010;
  if (!qword_2696DF010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF010);
  }
  return result;
}

unint64_t sub_2498D07EC()
{
  unint64_t result = qword_2696DF018;
  if (!qword_2696DF018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF018);
  }
  return result;
}

uint64_t sub_2498D0840(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v12 = *(void *)(a1 + 152);
  uint64_t v13 = *(void *)(a1 + 144);
  char v7 = *(unsigned char *)(a1 + 112);
  char v8 = *(unsigned char *)(a1 + 136);
  char v9 = *(unsigned char *)(a1 + 160);
  swift_bridgeObjectRetain();
  id v10 = v2;
  swift_bridgeObjectRetain();
  sub_24988D770(v3, v4, v7);
  sub_24988D770(v5, v6, v8);
  sub_249890C2C(v13, v12, v9);
  return a1;
}

uint64_t sub_2498D08F4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 96);
  uint64_t v4 = *(void *)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 120);
  uint64_t v6 = *(void *)(a1 + 128);
  uint64_t v11 = *(void *)(a1 + 152);
  uint64_t v12 = *(void *)(a1 + 144);
  char v7 = *(unsigned char *)(a1 + 112);
  char v8 = *(unsigned char *)(a1 + 136);
  char v9 = *(unsigned char *)(a1 + 160);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_24988D788(v3, v4, v7);
  sub_24988D788(v5, v6, v8);
  sub_249890C40(v12, v11, v9);
  return a1;
}

unint64_t sub_2498D09AC()
{
  unint64_t result = qword_2696DF020;
  if (!qword_2696DF020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF020);
  }
  return result;
}

uint64_t sub_2498D0A00()
{
  return sub_2498D0A3C(&qword_2696DF028, &qword_2696DF030);
}

uint64_t sub_2498D0A3C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498D0A84()
{
  unint64_t result = qword_2696DF038;
  if (!qword_2696DF038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF038);
  }
  return result;
}

unint64_t sub_2498D0ADC()
{
  unint64_t result = qword_2696DF040;
  if (!qword_2696DF040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF040);
  }
  return result;
}

unint64_t sub_2498D0B34()
{
  unint64_t result = qword_2696DF048;
  if (!qword_2696DF048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF048);
  }
  return result;
}

unint64_t sub_2498D0B8C()
{
  unint64_t result = qword_2696DF050;
  if (!qword_2696DF050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF050);
  }
  return result;
}

uint64_t sub_2498D0BE0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 90);
  return result;
}

unsigned char *sub_2498D0BEC(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 90) = *result;
  return result;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_24988D788(*(void *)(a1 + 96), *(void *)(a1 + 104), *(unsigned char *)(a1 + 112));
  uint64_t result = sub_24988D788(*(void *)(a1 + 120), *(void *)(a1 + 128), *(unsigned char *)(a1 + 136));
  int v3 = *(unsigned __int8 *)(a1 + 160);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 144);
    uint64_t v5 = *(void *)(a1 + 152);
    return sub_24988D788(v4, v5, v3);
  }
  return result;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 104);
  char v9 = *(unsigned char *)(a2 + 112);
  swift_bridgeObjectRetain();
  id v10 = v5;
  swift_bridgeObjectRetain();
  sub_24988D770(v7, v8, v9);
  *(void *)(a1 + 96) = v7;
  *(void *)(a1 + 104) = v8;
  *(unsigned char *)(a1 + 112) = v9;
  uint64_t v11 = *(void *)(a2 + 120);
  uint64_t v12 = *(void *)(a2 + 128);
  LOBYTE(v8) = *(unsigned char *)(a2 + 136);
  sub_24988D770(v11, v12, v8);
  *(void *)(a1 + 120) = v11;
  *(void *)(a1 + 128) = v12;
  *(unsigned char *)(a1 + 136) = v8;
  int v13 = *(unsigned __int8 *)(a2 + 160);
  if (v13 == 255)
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  }
  else
  {
    uint64_t v14 = *(void *)(a2 + 144);
    uint64_t v15 = *(void *)(a2 + 152);
    sub_24988D770(v14, v15, *(unsigned char *)(a2 + 160));
    *(void *)(a1 + 144) = v14;
    *(void *)(a1 + 152) = v15;
    *(unsigned char *)(a1 + 160) = v13;
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  return a1;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void **)(a2 + 40);
  uint64_t v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v4;
  id v6 = v4;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v7 = *(void *)(a2 + 96);
  uint64_t v8 = *(void *)(a2 + 104);
  char v9 = *(unsigned char *)(a2 + 112);
  sub_24988D770(v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 96);
  uint64_t v11 = *(void *)(a1 + 104);
  *(void *)(a1 + 96) = v7;
  *(void *)(a1 + 104) = v8;
  char v12 = *(unsigned char *)(a1 + 112);
  *(unsigned char *)(a1 + 112) = v9;
  sub_24988D788(v10, v11, v12);
  uint64_t v13 = *(void *)(a2 + 120);
  uint64_t v14 = *(void *)(a2 + 128);
  char v15 = *(unsigned char *)(a2 + 136);
  sub_24988D770(v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 120);
  uint64_t v17 = *(void *)(a1 + 128);
  *(void *)(a1 + 120) = v13;
  *(void *)(a1 + 128) = v14;
  char v18 = *(unsigned char *)(a1 + 136);
  *(unsigned char *)(a1 + 136) = v15;
  sub_24988D788(v16, v17, v18);
  int8x16_t v19 = (long long *)(a1 + 144);
  char v20 = (long long *)(a2 + 144);
  int v21 = *(unsigned __int8 *)(a2 + 160);
  if (*(unsigned __int8 *)(a1 + 160) == 255)
  {
    if (v21 == 255)
    {
      long long v30 = *v20;
      *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
      *int8x16_t v19 = v30;
    }
    else
    {
      uint64_t v27 = *(void *)(a2 + 144);
      uint64_t v28 = *(void *)(a2 + 152);
      sub_24988D770(v27, v28, *(unsigned char *)(a2 + 160));
      *(void *)(a1 + 144) = v27;
      *(void *)(a1 + 152) = v28;
      *(unsigned char *)(a1 + 160) = v21;
    }
  }
  else if (v21 == 255)
  {
    sub_2498D0FA4(a1 + 144);
    char v29 = *(unsigned char *)(a2 + 160);
    *int8x16_t v19 = *v20;
    *(unsigned char *)(a1 + 160) = v29;
  }
  else
  {
    uint64_t v22 = *(void *)(a2 + 144);
    uint64_t v23 = *(void *)(a2 + 152);
    sub_24988D770(v22, v23, *(unsigned char *)(a2 + 160));
    uint64_t v24 = *(void *)(a1 + 144);
    uint64_t v25 = *(void *)(a1 + 152);
    *(void *)(a1 + 144) = v22;
    *(void *)(a1 + 152) = v23;
    char v26 = *(unsigned char *)(a1 + 160);
    *(unsigned char *)(a1 + 160) = v21;
    sub_24988D788(v24, v25, v26);
  }
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  return a1;
}

uint64_t sub_2498D0FA4(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy208_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  __n128 result = *(__n128 *)(a2 + 144);
  long long v9 = *(_OWORD *)(a2 + 160);
  long long v10 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v10;
  *(__n128 *)(a1 + 144) = result;
  *(_OWORD *)(a1 + 160) = v9;
  return result;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  long long v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;

  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v7 = *(void *)(a2 + 104);
  char v8 = *(unsigned char *)(a2 + 112);
  uint64_t v9 = *(void *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = v7;
  char v11 = *(unsigned char *)(a1 + 112);
  *(unsigned char *)(a1 + 112) = v8;
  sub_24988D788(v9, v10, v11);
  char v12 = *(unsigned char *)(a2 + 136);
  uint64_t v13 = *(void *)(a1 + 120);
  uint64_t v14 = *(void *)(a1 + 128);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  char v15 = *(unsigned char *)(a1 + 136);
  *(unsigned char *)(a1 + 136) = v12;
  sub_24988D788(v13, v14, v15);
  uint64_t v16 = (_OWORD *)(a2 + 144);
  int v17 = *(unsigned __int8 *)(a1 + 160);
  if (v17 == 255) {
    goto LABEL_5;
  }
  int v18 = *(unsigned __int8 *)(a2 + 160);
  if (v18 == 255)
  {
    sub_2498D0FA4(a1 + 144);
LABEL_5:
    *(_OWORD *)(a1 + 144) = *v16;
    *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
    goto LABEL_6;
  }
  uint64_t v19 = *(void *)(a1 + 144);
  uint64_t v20 = *(void *)(a1 + 152);
  *(_OWORD *)(a1 + 144) = *v16;
  *(unsigned char *)(a1 + 160) = v18;
  sub_24988D788(v19, v20, v17);
LABEL_6:
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 184) = *(unsigned char *)(a2 + 184);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  return a1;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 208)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV23TickLabelsConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_24988D788(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  uint64_t result = sub_24988D788(*(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  int v3 = *(unsigned __int8 *)(a1 + 152);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 136);
    uint64_t v5 = *(void *)(a1 + 144);
    return sub_24988D788(v4, v5, v3);
  }
  return result;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV23TickLabelsConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  uint64_t v6 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 96);
  char v8 = *(unsigned char *)(a2 + 104);
  id v9 = v4;
  swift_bridgeObjectRetain();
  sub_24988D770(v6, v7, v8);
  *(void *)(a1 + 88) = v6;
  *(void *)(a1 + 96) = v7;
  *(unsigned char *)(a1 + 104) = v8;
  uint64_t v10 = *(void *)(a2 + 112);
  uint64_t v11 = *(void *)(a2 + 120);
  LOBYTE(v7) = *(unsigned char *)(a2 + 128);
  sub_24988D770(v10, v11, v7);
  *(void *)(a1 + 112) = v10;
  *(void *)(a1 + 120) = v11;
  *(unsigned char *)(a1 + 128) = v7;
  int v12 = *(unsigned __int8 *)(a2 + 152);
  if (v12 == 255)
  {
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  }
  else
  {
    uint64_t v14 = *(void *)(a2 + 136);
    uint64_t v13 = *(void *)(a2 + 144);
    sub_24988D770(v14, v13, v12);
    *(void *)(a1 + 136) = v14;
    *(void *)(a1 + 144) = v13;
    *(unsigned char *)(a1 + 152) = v12;
  }
  return a1;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV23TickLabelsConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void **)(a2 + 32);
  uint64_t v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v4;
  id v6 = v4;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 96);
  char v9 = *(unsigned char *)(a2 + 104);
  sub_24988D770(v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  char v12 = *(unsigned char *)(a1 + 104);
  *(unsigned char *)(a1 + 104) = v9;
  sub_24988D788(v10, v11, v12);
  uint64_t v13 = *(void *)(a2 + 112);
  uint64_t v14 = *(void *)(a2 + 120);
  char v15 = *(unsigned char *)(a2 + 128);
  sub_24988D770(v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 120);
  *(void *)(a1 + 112) = v13;
  *(void *)(a1 + 120) = v14;
  char v18 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v15;
  sub_24988D788(v16, v17, v18);
  uint64_t v19 = (long long *)(a1 + 136);
  uint64_t v20 = (long long *)(a2 + 136);
  int v21 = *(unsigned __int8 *)(a2 + 152);
  if (*(unsigned __int8 *)(a1 + 152) == 255)
  {
    if (v21 == 255)
    {
      long long v30 = *v20;
      *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
      *uint64_t v19 = v30;
    }
    else
    {
      uint64_t v28 = *(void *)(a2 + 136);
      uint64_t v27 = *(void *)(a2 + 144);
      sub_24988D770(v28, v27, v21);
      *(void *)(a1 + 136) = v28;
      *(void *)(a1 + 144) = v27;
      *(unsigned char *)(a1 + 152) = v21;
    }
  }
  else if (v21 == 255)
  {
    sub_2498D0FA4(a1 + 136);
    char v29 = *(unsigned char *)(a2 + 152);
    *uint64_t v19 = *v20;
    *(unsigned char *)(a1 + 152) = v29;
  }
  else
  {
    uint64_t v23 = *(void *)(a2 + 136);
    uint64_t v22 = *(void *)(a2 + 144);
    sub_24988D770(v23, v22, v21);
    uint64_t v24 = *(void *)(a1 + 136);
    uint64_t v25 = *(void *)(a1 + 144);
    *(void *)(a1 + 136) = v23;
    *(void *)(a1 + 144) = v22;
    char v26 = *(unsigned char *)(a1 + 152);
    *(unsigned char *)(a1 + 152) = v21;
    sub_24988D788(v24, v25, v26);
  }
  return a1;
}

__n128 __swift_memcpy153_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV23TickLabelsConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  long long v5 = *(void **)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;

  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  uint64_t v7 = *(void *)(a2 + 96);
  char v8 = *(unsigned char *)(a2 + 104);
  uint64_t v9 = *(void *)(a1 + 88);
  uint64_t v10 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(void *)(a1 + 96) = v7;
  char v11 = *(unsigned char *)(a1 + 104);
  *(unsigned char *)(a1 + 104) = v8;
  sub_24988D788(v9, v10, v11);
  char v12 = *(unsigned char *)(a2 + 128);
  uint64_t v13 = *(void *)(a1 + 112);
  uint64_t v14 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  char v15 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v12;
  sub_24988D788(v13, v14, v15);
  uint64_t v16 = (_OWORD *)(a2 + 136);
  int v17 = *(unsigned __int8 *)(a1 + 152);
  if (v17 == 255) {
    goto LABEL_5;
  }
  int v18 = *(unsigned __int8 *)(a2 + 152);
  if (v18 == 255)
  {
    sub_2498D0FA4(a1 + 136);
LABEL_5:
    *(_OWORD *)(a1 + 136) = *v16;
    *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
    return a1;
  }
  uint64_t v19 = *(void *)(a1 + 136);
  uint64_t v20 = *(void *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *v16;
  *(unsigned char *)(a1 + 152) = v18;
  sub_24988D788(v19, v20, v17);
  return a1;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV23TickLabelsConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 153)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV23TickLabelsConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 152) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 153) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 153) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelsConfiguration;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration.TickType()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickType;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationVwxx(uint64_t a1)
{
  sub_24988D788(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  uint64_t result = sub_24988D788(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  int v3 = *(unsigned __int8 *)(a1 + 88);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 72);
    uint64_t v5 = *(void *)(a1 + 80);
    return sub_24988D788(v4, v5, v3);
  }
  return result;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  sub_24988D770(v4, v5, v6);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v8 = *(void *)(a2 + 56);
  char v9 = *(unsigned char *)(a2 + 64);
  sub_24988D770(v7, v8, v9);
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 64) = v9;
  int v10 = *(unsigned __int8 *)(a2 + 88);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  }
  else
  {
    uint64_t v11 = *(void *)(a2 + 72);
    uint64_t v12 = *(void *)(a2 + 80);
    sub_24988D770(v11, v12, *(unsigned char *)(a2 + 88));
    *(void *)(a1 + 72) = v11;
    *(void *)(a1 + 80) = v12;
    *(unsigned char *)(a1 + 88) = v10;
  }
  *(_WORD *)(a1 + 89) = *(_WORD *)(a2 + 89);
  return a1;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 32);
  char v6 = *(unsigned char *)(a2 + 40);
  sub_24988D770(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v9 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v6;
  sub_24988D788(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  char v12 = *(unsigned char *)(a2 + 64);
  sub_24988D770(v10, v11, v12);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  char v15 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v12;
  sub_24988D788(v13, v14, v15);
  uint64_t v16 = (long long *)(a1 + 72);
  int v17 = (long long *)(a2 + 72);
  int v18 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v18 == 255)
    {
      long long v27 = *v17;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *uint64_t v16 = v27;
    }
    else
    {
      uint64_t v24 = *(void *)(a2 + 72);
      uint64_t v25 = *(void *)(a2 + 80);
      sub_24988D770(v24, v25, *(unsigned char *)(a2 + 88));
      *(void *)(a1 + 72) = v24;
      *(void *)(a1 + 80) = v25;
      *(unsigned char *)(a1 + 88) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_2498D0FA4(a1 + 72);
    char v26 = *(unsigned char *)(a2 + 88);
    *uint64_t v16 = *v17;
    *(unsigned char *)(a1 + 88) = v26;
  }
  else
  {
    uint64_t v19 = *(void *)(a2 + 72);
    uint64_t v20 = *(void *)(a2 + 80);
    sub_24988D770(v19, v20, *(unsigned char *)(a2 + 88));
    uint64_t v21 = *(void *)(a1 + 72);
    uint64_t v22 = *(void *)(a1 + 80);
    *(void *)(a1 + 72) = v19;
    *(void *)(a1 + 80) = v20;
    char v23 = *(unsigned char *)(a1 + 88);
    *(unsigned char *)(a1 + 88) = v18;
    sub_24988D788(v21, v22, v23);
  }
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  return a1;
}

__n128 __swift_memcpy91_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 75) = *(_OWORD *)(a2 + 75);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 20) = *(unsigned char *)(a2 + 20);
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v7 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v4;
  sub_24988D788(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 64);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  char v11 = *(unsigned char *)(a1 + 64);
  *(unsigned char *)(a1 + 64) = v8;
  sub_24988D788(v9, v10, v11);
  char v12 = (_OWORD *)(a2 + 72);
  int v13 = *(unsigned __int8 *)(a1 + 88);
  if (v13 == 255) {
    goto LABEL_5;
  }
  int v14 = *(unsigned __int8 *)(a2 + 88);
  if (v14 == 255)
  {
    sub_2498D0FA4(a1 + 72);
LABEL_5:
    *(_OWORD *)(a1 + 72) = *v12;
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(a1 + 72);
  uint64_t v16 = *(void *)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *v12;
  *(unsigned char *)(a1 + 88) = v14;
  sub_24988D788(v15, v16, v13);
LABEL_6:
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  return a1;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 91)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 89);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 90) = 0;
    *(_WORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 91) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 91) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 89) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickTypeConfiguration;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV15TickLabelColorsVwxx(uint64_t a1)
{
  sub_24988D788(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  uint64_t result = sub_24988D788(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 56);
    return sub_24988D788(v4, v5, v3);
  }
  return result;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV15TickLabelColorsVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_24988D770(*(void *)a2, v5, v6);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(unsigned char *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a2 + 40);
  sub_24988D770(v7, v8, v9);
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  int v10 = *(unsigned __int8 *)(a2 + 64);
  if (v10 == 255)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    uint64_t v12 = *(void *)(a2 + 48);
    uint64_t v11 = *(void *)(a2 + 56);
    sub_24988D770(v12, v11, v10);
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v11;
    *(unsigned char *)(a1 + 64) = v10;
  }
  return a1;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV15TickLabelColorsVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(unsigned char *)(a2 + 16);
  sub_24988D770(*(void *)a2, v5, v6);
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  char v9 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  sub_24988D788(v7, v8, v9);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v11 = *(void *)(a2 + 32);
  char v12 = *(unsigned char *)(a2 + 40);
  sub_24988D770(v10, v11, v12);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v11;
  char v15 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v12;
  sub_24988D788(v13, v14, v15);
  uint64_t v16 = (long long *)(a1 + 48);
  int v17 = (long long *)(a2 + 48);
  int v18 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v18 == 255)
    {
      long long v27 = *v17;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *uint64_t v16 = v27;
    }
    else
    {
      uint64_t v25 = *(void *)(a2 + 48);
      uint64_t v24 = *(void *)(a2 + 56);
      sub_24988D770(v25, v24, v18);
      *(void *)(a1 + 48) = v25;
      *(void *)(a1 + 56) = v24;
      *(unsigned char *)(a1 + 64) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_2498D0FA4(a1 + 48);
    char v26 = *(unsigned char *)(a2 + 64);
    *uint64_t v16 = *v17;
    *(unsigned char *)(a1 + 64) = v26;
  }
  else
  {
    uint64_t v20 = *(void *)(a2 + 48);
    uint64_t v19 = *(void *)(a2 + 56);
    sub_24988D770(v20, v19, v18);
    uint64_t v21 = *(void *)(a1 + 48);
    uint64_t v22 = *(void *)(a1 + 56);
    *(void *)(a1 + 48) = v20;
    *(void *)(a1 + 56) = v19;
    char v23 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v18;
    sub_24988D788(v21, v22, v23);
  }
  return a1;
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV15TickLabelColorsVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v7 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v4;
  sub_24988D788(v5, v6, v7);
  char v8 = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  char v11 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_24988D788(v9, v10, v11);
  char v12 = (_OWORD *)(a2 + 48);
  int v13 = *(unsigned __int8 *)(a1 + 64);
  if (v13 == 255) {
    goto LABEL_5;
  }
  int v14 = *(unsigned __int8 *)(a2 + 64);
  if (v14 == 255)
  {
    sub_2498D0FA4(a1 + 48);
LABEL_5:
    *(_OWORD *)(a1 + 48) = *v12;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    return a1;
  }
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *v12;
  *(unsigned char *)(a1 + 64) = v14;
  sub_24988D788(v15, v16, v13);
  return a1;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV15TickLabelColorsVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV15TickLabelColorsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors()
{
  return &type metadata for Instrument.GaugeStyle.TicksConfiguration.TickLabelColors;
}

ValueMetadata *_s14descr26FD9EE19O18TicksConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O18TicksConfigurationV10CodingKeysON;
}

unsigned char *_s14descr26FD9EE19O18TicksConfigurationV8TickTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498D20F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O18TicksConfigurationV15TickLabelColorsV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O18TicksConfigurationV15TickLabelColorsV10CodingKeysON;
}

uint64_t _s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *__n128 result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498D228CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O18TicksConfigurationV21TickTypeConfigurationV10CodingKeysON;
}

unsigned char *_s14descr26FD9EE19O18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498D2390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O18TicksConfigurationV23TickLabelsConfigurationV10CodingKeysON;
}

unint64_t sub_2498D23CC()
{
  unint64_t result = qword_2696DF058;
  if (!qword_2696DF058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF058);
  }
  return result;
}

unint64_t sub_2498D2424()
{
  unint64_t result = qword_2696DF060;
  if (!qword_2696DF060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF060);
  }
  return result;
}

unint64_t sub_2498D247C()
{
  unint64_t result = qword_2696DF068;
  if (!qword_2696DF068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF068);
  }
  return result;
}

unint64_t sub_2498D24D4()
{
  unint64_t result = qword_2696DF070;
  if (!qword_2696DF070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF070);
  }
  return result;
}

unint64_t sub_2498D252C()
{
  unint64_t result = qword_2696DF078;
  if (!qword_2696DF078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF078);
  }
  return result;
}

unint64_t sub_2498D2584()
{
  unint64_t result = qword_2696DF080;
  if (!qword_2696DF080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF080);
  }
  return result;
}

unint64_t sub_2498D25DC()
{
  unint64_t result = qword_2696DF088;
  if (!qword_2696DF088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF088);
  }
  return result;
}

unint64_t sub_2498D2634()
{
  unint64_t result = qword_2696DF090;
  if (!qword_2696DF090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF090);
  }
  return result;
}

unint64_t sub_2498D268C()
{
  unint64_t result = qword_2696DF098;
  if (!qword_2696DF098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF098);
  }
  return result;
}

unint64_t sub_2498D26E4()
{
  unint64_t result = qword_2696DF0A0;
  if (!qword_2696DF0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF0A0);
  }
  return result;
}

unint64_t sub_2498D273C()
{
  unint64_t result = qword_2696DF0A8;
  if (!qword_2696DF0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF0A8);
  }
  return result;
}

unint64_t sub_2498D2794()
{
  unint64_t result = qword_2696DF0B0;
  if (!qword_2696DF0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF0B0);
  }
  return result;
}

uint64_t sub_2498D27E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C6562614C78616DLL && a2 == 0xEE00746E756F4373;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7465736E69 && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6562614C6F72657ALL && a2 == 0xEE007465736E496CLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F46736C6562616CLL && a2 == 0xEA0000000000746ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6F756E69746E6F63 && a2 == 0xEE006C6C69467375 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7372694665646968 && a2 == 0xEE006C6562614C74 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x7669446C6562616CLL && a2 == 0xEC00000072656469 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6C6F436C6562616CLL && a2 == 0xEB0000000073726FLL)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_2498D2BF8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x756F43736B636974 && a2 == 0xEA0000000000746ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746469576B636974 && a2 == 0xE900000000000068 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E654C6B636974 && a2 == 0xEA00000000006874 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x65736E496B636974 && a2 == 0xE900000000000074 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x706143656E696CLL && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x437972616D697270 && a2 == 0xEE004449726F6C6FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B150E0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7972616974726574 && a2 == 0xEF4449726F6C6F43 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7372694665646968 && a2 == 0xED00006B63695474 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x6465526465786966 && a2 == 0xEC000000656E696CLL)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_2498D30A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x437972616D697270 && a2 == 0xEE004449726F6C6FLL;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B150E0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7972616974726574 && a2 == 0xEF4449726F6C6F43)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2498D323C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x8000000249B15100 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000249B15120 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B15140)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_2498D3380()
{
  unint64_t result = qword_2696DF0B8;
  if (!qword_2696DF0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF0B8);
  }
  return result;
}

uint64_t destroy for CompassGauge(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(a1 + 56))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t initializeWithCopy for CompassGauge(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  BOOL v7 = (_OWORD *)(a2 + 56);
  uint64_t v6 = *(void *)(a2 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 64);
    uint64_t v9 = *(void *)(a2 + 72);
    *(void *)(a1 + 56) = v6;
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v9;
    *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
    uint64_t v10 = *(void *)(a2 + 96);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = v10;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = v7[1];
    *(_OWORD *)(a1 + 56) = *v7;
    *(_OWORD *)(a1 + 72) = v11;
    *(_OWORD *)(a1 + 88) = v7[2];
  }
  uint64_t v12 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v12;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for CompassGauge(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  long long v4 = (_OWORD *)(a1 + 56);
  uint64_t v6 = (_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 56);
  if (*(void *)(a1 + 56))
  {
    if (v5)
    {
      *(void *)(a1 + 56) = v5;
      swift_retain();
      swift_release();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2498D36BC(a1 + 56);
      long long v8 = *(_OWORD *)(a2 + 72);
      long long v7 = *(_OWORD *)(a2 + 88);
      *long long v4 = *v6;
      *(_OWORD *)(a1 + 72) = v8;
      *(_OWORD *)(a1 + 88) = v7;
    }
  }
  else if (v5)
  {
    *(void *)(a1 + 56) = v5;
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
    *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v6;
    long long v10 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v10;
    *long long v4 = v9;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2498D36BC(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for CompassGauge(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 56);
  if (!*(void *)(a1 + 56)) {
    goto LABEL_5;
  }
  if (!v5)
  {
    sub_2498D36BC(a1 + 56);
LABEL_5:
    long long v8 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v8;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_6;
  }
  *(void *)(a1 + 56) = v5;
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CompassGauge(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CompassGauge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CompassGauge()
{
  return &type metadata for CompassGauge;
}

uint64_t sub_2498D38DC()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2498D38F8@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_2498D64C4((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_2498D3944()
{
  return MEMORY[0x270F047C8]();
}

void (*sub_2498D395C(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_249AEBA78();
  return sub_2498D39CC;
}

void sub_2498D39CC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_2498D3A18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2498D66C4();

  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_2498D3A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2498D66C4();

  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_2498D3AE0(uint64_t a1)
{
  unint64_t v2 = sub_2498D66C4();

  return MEMORY[0x270F047E0](a1, v2);
}

double sub_2498D3B2C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  sub_249AEBC48();
  double v5 = fabs(v4);
  double v7 = fabs(v6);
  if (v7 >= v5) {
    double v8 = v5;
  }
  else {
    double v8 = v7;
  }
  uint64_t v9 = sub_249AECC28();
  uint64_t v38 = v10;
  uint64_t v39 = v9;
  sub_2498D3CFC(a1, (uint64_t)&v40, v8 / 10.0);
  uint64_t v11 = v41;
  uint64_t v37 = v42;
  uint64_t v12 = v43;
  long long v13 = v44;
  char v14 = v45;
  char v15 = v46;
  uint64_t v16 = v48;
  long long v35 = v49;
  long long v36 = v47;
  uint64_t v17 = v50;
  uint64_t v18 = v51;
  char v19 = v52;
  char v34 = v53;
  uint64_t v20 = v40;
  char v21 = sub_249AEC4E8();
  sub_249AEBAB8();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  char v54 = 0;
  sub_249AECC28();
  sub_249AEBBE8();
  uint64_t v30 = v42;
  char v31 = v54;
  char v56 = v41;
  char v55 = v43;
  uint64_t v32 = v40;
  *(void *)a2 = v39;
  *(void *)(a2 + 8) = v38;
  *(void *)(a2 + 16) = v20;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v37;
  *(void *)(a2 + 40) = v12;
  *(_OWORD *)(a2 + 48) = v13;
  *(unsigned char *)(a2 + 64) = v14;
  *(unsigned char *)(a2 + 65) = v15;
  *(_OWORD *)(a2 + 72) = v36;
  *(void *)(a2 + 88) = v16;
  *(_OWORD *)(a2 + 96) = v35;
  *(void *)(a2 + 112) = v17;
  *(void *)(a2 + 120) = v18;
  *(unsigned char *)(a2 + 128) = v19;
  *(unsigned char *)(a2 + 129) = v34;
  *(unsigned char *)(a2 + 136) = v21;
  *(void *)(a2 + 144) = v23;
  *(void *)(a2 + 152) = v25;
  *(void *)(a2 + 160) = v27;
  *(void *)(a2 + 168) = v29;
  *(unsigned char *)(a2 + 176) = v31;
  *(void *)(a2 + 184) = v32;
  *(unsigned char *)(a2 + 192) = v56;
  *(void *)(a2 + 200) = v30;
  *(unsigned char *)(a2 + 208) = v55;
  double result = *(double *)&v44;
  *(_OWORD *)(a2 + 216) = v44;
  return result;
}

uint64_t sub_2498D3CFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  swift_retain();
  sub_249AEBB38();
  uint64_t v6 = sub_249AECC28();
  uint64_t v8 = v7;
  uint64_t v9 = sub_249AEC888();
  *(void *)a2 = v11;
  *(void *)(a2 + 8) = v12;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v14;
  *(void *)(a2 + 32) = v15;
  *(void *)(a2 + 40) = a1;
  *(_WORD *)(a2 + 48) = 256;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v9;
  *(double *)(a2 + 80) = a3;
  *(void *)(a2 + 88) = 0;
  *(double *)(a2 + 96) = -a3;
  *(void *)(a2 + 104) = a1;
  *(_WORD *)(a2 + 112) = 256;

  return swift_retain();
}

uint64_t sub_2498D3DE8@<X0>(double (**a1)@<D0>(uint64_t a1@<X8>)@<X8>)
{
  unint64_t v2 = *v1;
  *a1 = sub_2498D632C;
  a1[1] = v2;
  return swift_retain();
}

uint64_t sub_2498D3E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_249AEC128();
  swift_retain();
  swift_retain();
  uint64_t result = sub_249AECD18();
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = 0;
  *(unsigned char *)(a3 + 16) = 1;
  *(void *)(a3 + 24) = a1;
  *(void *)(a3 + 32) = a2;
  *(void *)(a3 + 40) = 0x400921FB54442D18;
  *(void *)(a3 + 48) = v8;
  *(void *)(a3 + 56) = v9;
  return result;
}

uint64_t sub_2498D3E78@<X0>(uint64_t a1@<X8>)
{
  return sub_2498D3E04(*v1, v1[1], a1);
}

uint64_t sub_2498D3E80()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0E8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  long long v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_degrees);
  sub_249AEB5F8();

  sub_249AEB5E8();
  if (v5 >= 0.0 && v5 <= 22.5)
  {
LABEL_45:
    uint64_t v15 = 78;
    goto LABEL_46;
  }
  if (v5 >= 22.5 && v5 <= 67.5)
  {
    uint64_t v15 = 17742;
LABEL_46:
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return v15;
  }
  if (v5 >= 67.5 && v5 <= 112.5)
  {
    uint64_t v15 = 69;
    goto LABEL_46;
  }
  if (v5 >= 112.5 && v5 <= 157.5)
  {
    uint64_t v15 = 17747;
    goto LABEL_46;
  }
  if (v5 >= 157.5 && v5 <= 202.5)
  {
    uint64_t v15 = 83;
    goto LABEL_46;
  }
  if (v5 >= 202.5 && v5 <= 247.5)
  {
    uint64_t v15 = 22355;
    goto LABEL_46;
  }
  if (v5 >= 247.5 && v5 <= 292.5)
  {
    uint64_t v15 = 87;
    goto LABEL_46;
  }
  if (v5 >= 292.5 && v5 <= 337.5)
  {
    uint64_t v15 = 22350;
    goto LABEL_46;
  }
  if (v5 >= 337.5 && v5 <= 360.0) {
    goto LABEL_45;
  }
  unint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_249AEDA78();
  swift_bridgeObjectRelease();
  unint64_t v17 = 0xD000000000000021;
  unint64_t v18 = 0x8000000249B15170;
  sub_2498D0A3C(&qword_2696DF150, &qword_2696DF0E8);
  sub_249AEDF48();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  uint64_t result = sub_249AEDC58();
  __break(1u);
  return result;
}

uint64_t sub_2498D41A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0C0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0C8);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t *v8 = sub_249AECC28();
  v8[1] = v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0D0);
  sub_2498D438C(a2, a1, (uint64_t)v8 + *(int *)(v14 + 44));
  LOBYTE(a2) = sub_249AEC4E8();
  sub_249AEBAB8();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_2498D6084((uint64_t)v8, (uint64_t)v12, &qword_2696DF0C0);
  uint64_t v23 = &v12[*(int *)(v10 + 44)];
  *uint64_t v23 = a2;
  *((void *)v23 + 1) = v16;
  *((void *)v23 + 2) = v18;
  *((void *)v23 + 3) = v20;
  *((void *)v23 + 4) = v22;
  v23[40] = 0;
  sub_2498D60E8((uint64_t)v8, &qword_2696DF0C0);
  sub_249AEBC48();
  sub_249AEBC48();
  sub_249AECC28();
  sub_249AEBBE8();
  sub_2498D6084((uint64_t)v12, a3, &qword_2696DF0C8);
  uint64_t v24 = (_OWORD *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0D8) + 36));
  long long v25 = v27[1];
  *uint64_t v24 = v27[0];
  v24[1] = v25;
  v24[2] = v27[2];
  return sub_2498D60E8((uint64_t)v12, &qword_2696DF0C8);
}

uint64_t sub_2498D438C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0E0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0E8);
  uint64_t v68 = *(void *)(v11 - 8);
  uint64_t v69 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  long long v62 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  long long v63 = (char *)&v59 - v14;
  uint64_t v15 = sub_249AEBC68();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0F0);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v59 - v23;
  uint64_t v25 = *(void *)(a1 + 24);
  if ((v25 & 0x8000000000000000) == 0)
  {
    long long v64 = v22;
    uint64_t v65 = v21;
    uint64_t v66 = v20;
    uint64_t v67 = a3;
    uint64_t v139 = 0;
    uint64_t v140 = v25;
    swift_getKeyPath();
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v61 = a2;
    v26((char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v15);
    uint64_t v27 = *(unsigned __int8 *)(v16 + 80);
    uint64_t v70 = v24;
    uint64_t v28 = (v27 + 136) & ~v27;
    uint64_t v29 = swift_allocObject();
    long long v30 = *(_OWORD *)(a1 + 80);
    *(_OWORD *)(v29 + 80) = *(_OWORD *)(a1 + 64);
    *(_OWORD *)(v29 + 96) = v30;
    *(_OWORD *)(v29 + 112) = *(_OWORD *)(a1 + 96);
    *(void *)(v29 + 128) = *(void *)(a1 + 112);
    long long v31 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v29 + 16) = *(_OWORD *)a1;
    *(_OWORD *)(v29 + 32) = v31;
    long long v32 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v29 + 48) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v29 + 64) = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v29 + v28, (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v15);
    sub_2498D5554(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0F8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF100);
    sub_2498D57E8();
    sub_2498D58B8();
    sub_249AECB48();
    long long v138 = *(_OWORD *)(a1 + 104);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    sub_2498D5C64((uint64_t)&v138);
    uint64_t v33 = v68;
    char v34 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56);
    if (v142)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF148);
      uint64_t v35 = v69;
      int v36 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v10, v36 ^ 1u, 1, v35);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v10, 1, v35) != 1)
      {
        id v37 = objc_msgSend(self, sel_degrees);
        uint64_t v38 = v62;
        sub_249AEB5F8();

        long long v60 = *(void (**)(char *, uint64_t))(v33 + 8);
        v60(v10, v35);
        uint64_t v15 = (uint64_t)v63;
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v63, v38, v35);
        sub_249AEBC48();
        double v40 = fabs(v39);
        double v42 = fabs(v41);
        if (v42 >= v40) {
          double v3 = v40;
        }
        else {
          double v3 = v42;
        }
        sub_249AEB5E8();
        double v4 = (360.0 - v43) * 0.0174532925;
        uint64_t v10 = *(char **)(a1 + 48);
        uint64_t v44 = qword_2696DD398;
        swift_retain();
        if (v44 == -1) {
          goto LABEL_8;
        }
        goto LABEL_13;
      }
    }
    else
    {
      sub_2498D60E8((uint64_t)&v139, &qword_2696DF130);
      (*v34)(v10, 1, 1, v69);
    }
    sub_2498D60E8((uint64_t)v10, &qword_2696DF0E0);
    sub_2498D5C90(&v111);
    goto LABEL_11;
  }
  __break(1u);
LABEL_13:
  swift_once();
LABEL_8:
  uint64_t v45 = qword_2696DFB00;
  swift_retain();
  sub_249AECC28();
  sub_249AEBBE8();
  uint64_t v46 = v132;
  char v47 = v133;
  char v48 = v135;
  uint64_t v68 = v136;
  uint64_t v61 = v134;
  long long v62 = v137;
  uint64_t v49 = sub_249AEC128();
  sub_2498D4EB8((uint64_t)&v139, v3);
  char v74 = 1;
  char v73 = v141;
  char v72 = v146;
  char v71 = v149;
  v75[0] = v49;
  v75[1] = 0;
  LOBYTE(v76) = 1;
  *((void *)&v76 + 1) = v139;
  *(void *)&long long v77 = v140;
  BYTE8(v77) = v141;
  *(void *)&long long v78 = v142;
  BYTE8(v78) = v143;
  long long v79 = v144;
  long long v80 = v145;
  LOBYTE(v81) = v146;
  *((void *)&v81 + 1) = v147;
  *(void *)&long long v82 = v148;
  BYTE8(v82) = v149;
  uint64_t v83 = v150;
  char v85 = v47;
  char v84 = v48;
  long long v90 = v77;
  long long v91 = v78;
  long long v88 = (unint64_t)v49;
  long long v89 = v76;
  uint64_t v96 = v150;
  long long v94 = v81;
  long long v95 = v82;
  long long v92 = v144;
  long long v93 = v145;
  v97[0] = v49;
  v97[1] = 0;
  char v98 = 1;
  uint64_t v99 = v139;
  uint64_t v100 = v140;
  char v101 = v141;
  uint64_t v102 = v142;
  char v103 = v143;
  long long v104 = v144;
  long long v105 = v145;
  char v106 = v146;
  uint64_t v107 = v147;
  uint64_t v108 = v148;
  char v109 = v149;
  uint64_t v110 = v150;
  swift_retain();
  swift_retain();
  sub_2498D5E9C((uint64_t)v75);
  sub_2498D5F10((uint64_t)v97);
  swift_release();
  swift_release();
  double v120 = v4;
  long long v128 = v93;
  long long v129 = v94;
  long long v130 = v95;
  long long v124 = v89;
  long long v125 = v90;
  long long v126 = v91;
  long long v127 = v92;
  *(void *)&long long v111 = v10;
  *((void *)&v111 + 1) = v45;
  uint64_t v112 = v46;
  char v113 = v47;
  *(_DWORD *)__int16 v114 = *(_DWORD *)v87;
  *(_DWORD *)&v114[3] = *(_DWORD *)&v87[3];
  uint64_t v115 = v61;
  char v116 = v48;
  *(_DWORD *)long long v117 = *(_DWORD *)v86;
  *(_DWORD *)&_DWORD v117[3] = *(_DWORD *)&v86[3];
  uint64_t v118 = v68;
  char v119 = v62;
  uint64_t v122 = 0;
  uint64_t v121 = 0;
  uint64_t v131 = v96;
  long long v123 = v88;
  nullsub_1(&v111);
  v60((char *)v15, v69);
LABEL_11:
  sub_249882788((uint64_t)&v111, (uint64_t)&v139, &qword_2696DF138);
  uint64_t v51 = v64;
  uint64_t v50 = v65;
  char v52 = *(void (**)(uint64_t, char *, uint64_t))(v65 + 16);
  char v53 = v70;
  uint64_t v54 = v66;
  v52((uint64_t)v64, v70, v66);
  sub_249882788((uint64_t)&v139, (uint64_t)&v88, &qword_2696DF138);
  uint64_t v55 = v67;
  v52(v67, v51, v54);
  uint64_t v56 = v55 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF140) + 48);
  sub_249882788((uint64_t)&v88, (uint64_t)v97, &qword_2696DF138);
  sub_249882788((uint64_t)v97, v56, &qword_2696DF138);
  sub_2498D5D6C(v97, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498D5CB4);
  long long v57 = *(void (**)(char *, uint64_t))(v50 + 8);
  v57(v53, v54);
  sub_249882788((uint64_t)&v88, (uint64_t)&v111, &qword_2696DF138);
  sub_2498D5D6C(&v111, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498D5DE8);
  return ((uint64_t (*)(char *, uint64_t))v57)(v51, v54);
}

uint64_t sub_2498D4CC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF128);
  uint64_t result = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = v2[5];
  long long v25 = v2[4];
  long long v26 = v9;
  long long v27 = v2[6];
  uint64_t v28 = *((void *)v2 + 14);
  long long v10 = v2[1];
  long long v21 = *v2;
  long long v22 = v10;
  long long v11 = v2[3];
  long long v23 = v2[2];
  long long v24 = v11;
  double v12 = *(double *)&v21;
  if (*((uint64_t *)&v21 + 1) < 1) {
    goto LABEL_7;
  }
  if (__OFADD__((void)v22, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((void)v22 == -1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1 != 0x8000000000000000 || (void)v22 != -2)
  {
    if (!(a1 % ((uint64_t)v22 + 1)))
    {
      sub_249AEBC48();
      int v13 = 1;
      goto LABEL_9;
    }
LABEL_7:
    sub_249AEBC48();
    int v13 = 0;
LABEL_9:
    double v14 = v12 * (double)a1;
    *(void *)uint64_t v8 = sub_249AEC028();
    *((void *)v8 + 1) = 0;
    v8[16] = 1;
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF160);
    sub_2498D5958(v13, (uint64_t)&v21, &v8[*(int *)(v15 + 44)], 2.0);
    sub_249AECD18();
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    sub_2498D6084((uint64_t)v8, a2, &qword_2696DF128);
    uint64_t v20 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF100) + 36);
    *(double *)uint64_t v20 = v14;
    *(void *)(v20 + 8) = v17;
    *(void *)(v20 + 16) = v19;
    return sub_2498D60E8((uint64_t)v8, &qword_2696DF128);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_2498D4EB8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = sub_249AEC0D8();
  MEMORY[0x270FA5388](v4 - 8);
  sub_2498D5350();
  double v5 = a2 / 5.0;
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_monospacedDigitSystemFontOfSize_weight_, v5, *MEMORY[0x263F81840]);
  uint64_t v8 = *MEMORY[0x263F81788];
  id v9 = objc_msgSend(v7, sel_fontDescriptor);
  id v10 = objc_msgSend(v9, sel_fontDescriptorWithDesign_, v8);

  if (v10)
  {
    objc_msgSend(v7, sel_pointSize);
    objc_msgSend(v6, sel_fontWithDescriptor_size_, v10);
  }
  sub_249AEC5A8();
  sub_249AEC0C8();
  sub_249AEC0B8();
  sub_249AEC0A8();
  swift_bridgeObjectRelease();
  sub_249AEC0B8();
  sub_249AEC0F8();
  uint64_t v11 = sub_249AEC658();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  swift_retain();
  uint64_t v16 = sub_249AEC648();
  uint64_t v18 = v17;
  char v20 = v19;
  swift_release();
  sub_2498D5E8C(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t v46 = sub_249AEC628();
  uint64_t v45 = v21;
  char v43 = v22;
  uint64_t v47 = v23;
  sub_2498D5E8C(v16, v18, v20 & 1);
  swift_bridgeObjectRelease();
  char v44 = sub_249AEC4E8();
  sub_2498D3E80();
  sub_24988CE30();
  uint64_t v24 = sub_249AEC668();
  uint64_t v26 = v25;
  char v28 = v27 & 1;
  swift_retain();
  uint64_t v29 = sub_249AEC648();
  uint64_t v31 = v30;
  char v33 = v32;
  swift_release();
  sub_2498D5E8C(v24, v26, v28);
  swift_bridgeObjectRelease();
  if (qword_2696DD398 != -1) {
    swift_once();
  }
  char v34 = v33 & 1;
  uint64_t v35 = sub_249AEC628();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  char v41 = v40 & 1;
  sub_2498D5E8C(v29, v31, v34);
  swift_bridgeObjectRelease();
  sub_2498D5D5C(v46, v45, v43 & 1);
  swift_bridgeObjectRetain();
  sub_2498D5D5C(v35, v37, v41);
  swift_bridgeObjectRetain();
  swift_release();
  *(void *)a1 = v46;
  *(void *)(a1 + 8) = v45;
  *(unsigned char *)(a1 + 16) = v43 & 1;
  *(void *)(a1 + 24) = v47;
  *(unsigned char *)(a1 + 32) = v44;
  *(void *)(a1 + 40) = 0;
  *(double *)(a1 + 48) = v5 / 2.5;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 0;
  *(void *)(a1 + 80) = v35;
  *(void *)(a1 + 88) = v37;
  *(unsigned char *)(a1 + 96) = v41;
  *(void *)(a1 + 104) = v39;
  sub_2498D5E8C(v35, v37, v41);
  swift_bridgeObjectRelease();
  sub_2498D5E8C(v46, v45, v43 & 1);
  return swift_bridgeObjectRelease();
}

id sub_2498D5350()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08988]), sel_init);
  objc_msgSend(v0, sel_setUnitStyle_, 1);
  id result = objc_msgSend(v0, sel_numberFormatter);
  if (result)
  {
    uint64_t v2 = result;
    objc_msgSend(result, sel_setMaximumFractionDigits_, 0);

    id result = objc_msgSend(v0, sel_numberFormatter);
    if (result)
    {
      double v3 = result;
      objc_msgSend(result, sel_setRoundingMode_, 4);

      sub_2498D5F84();
      uint64_t v4 = sub_249AED838();

      return (id)v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2498D5438@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  long long v3 = *(_OWORD *)(v1 + 80);
  v11[4] = *(_OWORD *)(v1 + 64);
  v11[5] = v3;
  v11[6] = *(_OWORD *)(v1 + 96);
  uint64_t v12 = *(void *)(v1 + 112);
  long long v4 = *(_OWORD *)(v1 + 16);
  v11[0] = *(_OWORD *)v1;
  v11[1] = v4;
  long long v5 = *(_OWORD *)(v1 + 48);
  v11[2] = *(_OWORD *)(v1 + 32);
  v11[3] = v5;
  uint64_t v6 = swift_allocObject();
  long long v7 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(v6 + 80) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(v6 + 96) = v7;
  *(_OWORD *)(v6 + 112) = *(_OWORD *)(v1 + 96);
  *(void *)(v6 + 128) = *(void *)(v1 + 112);
  long long v8 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v6 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v6 + 32) = v8;
  long long v9 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v6 + 64) = v9;
  *a1 = sub_2498D554C;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v6;
  return sub_2498D5554((uint64_t)v11);
}

uint64_t sub_2498D54E0()
{
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 72))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_2498D554C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2498D41A8(a1, v2 + 16, a2);
}

uint64_t sub_2498D5554(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_2498D55E8(v2);
  swift_retain();
  return a1;
}

uint64_t sub_2498D55E8(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2498D5638()
{
  uint64_t v1 = sub_249AEBC68();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release();
  swift_release();
  swift_release();
  if (*(void *)(v0 + 72))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (v3 + 136) & ~v3;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v5, v1);

  return MEMORY[0x270FA0238](v0, v5 + v4, v3 | 7);
}

uint64_t sub_2498D5740@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2498D4CC0(*a1, a2);
}

unint64_t sub_2498D57E8()
{
  unint64_t result = qword_2696DF108;
  if (!qword_2696DF108)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF0F8);
    sub_2498D5864();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF108);
  }
  return result;
}

unint64_t sub_2498D5864()
{
  unint64_t result = qword_2696DF110;
  if (!qword_2696DF110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF110);
  }
  return result;
}

unint64_t sub_2498D58B8()
{
  unint64_t result = qword_2696DF118;
  if (!qword_2696DF118)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF100);
    sub_2498D0A3C(&qword_2696DF120, &qword_2696DF128);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF118);
  }
  return result;
}

uint64_t sub_2498D5958@<X0>(int a1@<W0>, uint64_t a2@<X1>, void *a3@<X8>, double a4@<D0>)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  int v35 = a1;
  uint64_t v5 = sub_249AEBDD8();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  long long v8 = (double *)&v34[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF168);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v34[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF170);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v34[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  char v20 = &v34[-v19];
  MEMORY[0x270FA5388](v18);
  char v22 = &v34[-v21];
  uint64_t v23 = (char *)v8 + *(int *)(v6 + 28);
  uint64_t v24 = *MEMORY[0x263F19860];
  uint64_t v25 = sub_249AEC108();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
  double *v8 = a4 * 0.5;
  v8[1] = a4 * 0.5;
  uint64_t v26 = 40;
  if (v35) {
    uint64_t v26 = 32;
  }
  uint64_t v27 = *(void *)(v36 + v26);
  swift_retain();
  sub_2498D5FC4((uint64_t)v8, (uint64_t)v12);
  *(void *)&v12[*(int *)(v10 + 60)] = v27;
  *(_WORD *)&v12[*(int *)(v10 + 64)] = 256;
  sub_2498D6028((uint64_t)v8);
  sub_249AECC28();
  sub_249AEBBE8();
  sub_2498D6084((uint64_t)v12, (uint64_t)v20, &qword_2696DF168);
  char v28 = &v20[*(int *)(v14 + 44)];
  long long v29 = v39;
  *char v28 = v38;
  v28[1] = v29;
  void v28[2] = v40;
  sub_2498D60E8((uint64_t)v12, &qword_2696DF168);
  sub_249882788((uint64_t)v20, (uint64_t)v22, &qword_2696DF170);
  sub_2498D6084((uint64_t)v22, (uint64_t)v17, &qword_2696DF170);
  uint64_t v30 = v37;
  void *v37 = 0;
  *((unsigned char *)v30 + 8) = 1;
  uint64_t v31 = v30;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF178);
  sub_2498D6084((uint64_t)v17, (uint64_t)v31 + *(int *)(v32 + 48), &qword_2696DF170);
  sub_2498D60E8((uint64_t)v22, &qword_2696DF170);
  return sub_2498D60E8((uint64_t)v17, &qword_2696DF170);
}

uint64_t sub_2498D5C64(uint64_t a1)
{
  return a1;
}

double sub_2498D5C90(_OWORD *a1)
{
  double result = 0.0;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_2498D5CB4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    sub_2498D5D5C(a15, a16, a17 & 1);
    swift_bridgeObjectRetain();
    sub_2498D5D5C(a25, a26, a27 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2498D5D5C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

void *sub_2498D5D6C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23],
    a1[24],
    a1[25],
    a1[26],
    a1[27]);
  return a1;
}

uint64_t sub_2498D5DE8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  if (result)
  {
    swift_release();
    swift_release();
    sub_2498D5E8C(a15, a16, a17 & 1);
    swift_bridgeObjectRelease();
    sub_2498D5E8C(a25, a26, a27 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2498D5E8C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2498D5E9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_2498D5D5C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_2498D5D5C(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2498D5F10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_2498D5E8C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_2498D5E8C(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2498D5F84()
{
  unint64_t result = qword_2696DF158;
  if (!qword_2696DF158)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2696DF158);
  }
  return result;
}

uint64_t sub_2498D5FC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEBDD8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498D6028(uint64_t a1)
{
  uint64_t v2 = sub_249AEBDD8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2498D6084(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2498D60E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for CompassNeedle()
{
  swift_release();

  return swift_release();
}

void *_s14CarPlayAssetUI13CompassNeedleVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CompassNeedle(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CompassNeedle(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CompassNeedle()
{
  return &type metadata for CompassNeedle;
}

uint64_t sub_2498D626C()
{
  return sub_2498D0A3C(&qword_2696DF180, &qword_2696DF188);
}

uint64_t sub_2498D62A8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for CompassNeedlePoint()
{
  return &type metadata for CompassNeedlePoint;
}

uint64_t sub_2498D62D4()
{
  return sub_2498D0A3C(&qword_2696DF190, &qword_2696DF198);
}

uint64_t sub_2498D6310()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2498D632C@<D0>(uint64_t a1@<X8>)
{
  return sub_2498D3B2C(v1, a1);
}

ValueMetadata *type metadata accessor for EquilateralTriangle()
{
  return &type metadata for EquilateralTriangle;
}

uint64_t sub_2498D6344()
{
  return sub_2498D0A3C(&qword_2696DF1A0, &qword_2696DF1A8);
}

uint64_t sub_2498D6380()
{
  return sub_2498D0A3C(&qword_2696DF1B0, &qword_2696DF1B8);
}

unint64_t sub_2498D63C0()
{
  unint64_t result = qword_2696DF1C0;
  if (!qword_2696DF1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF1C0);
  }
  return result;
}

unint64_t sub_2498D6418()
{
  unint64_t result = qword_2696DF1C8;
  if (!qword_2696DF1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF1C8);
  }
  return result;
}

unint64_t sub_2498D6470()
{
  unint64_t result = qword_2696DF1D0;
  if (!qword_2696DF1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF1D0);
  }
  return result;
}

double sub_2498D64C4@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_249AEC618();
  v23.origin.CGFloat x = a2;
  v23.origin.CGFloat y = a3;
  v23.size.width = a4;
  v23.size.height = a5;
  double Width = CGRectGetWidth(v23);
  v24.origin.CGFloat x = a2;
  v24.origin.CGFloat y = a3;
  v24.size.width = a4;
  v24.size.height = a5;
  double Height = CGRectGetHeight(v24);
  if (Height < Width) {
    double Width = Height;
  }
  double v12 = Width * -1.73205081 * 0.5;
  v25.origin.CGFloat x = a2;
  v25.origin.CGFloat y = a3;
  v25.size.width = a4;
  v25.size.height = a5;
  CGFloat v13 = (CGRectGetWidth(v25) - Width) * 0.5;
  v26.origin.CGFloat x = a2;
  v26.origin.CGFloat y = a3;
  v26.size.width = a4;
  v26.size.height = a5;
  CGFloat v14 = (CGRectGetHeight(v26) + v12) * 0.5;
  v27.origin.CGFloat x = a2;
  v27.origin.CGFloat y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  CGRect v28 = CGRectInset(v27, v13, v14);
  CGFloat x = v28.origin.x;
  CGFloat y = v28.origin.y;
  CGFloat v17 = v28.size.width;
  CGFloat v18 = v28.size.height;
  CGRectGetMinX(v28);
  v29.origin.CGFloat x = x;
  v29.origin.CGFloat y = y;
  v29.size.width = v17;
  v29.size.height = v18;
  CGRectGetMaxY(v29);
  sub_249AEC5D8();
  v30.origin.CGFloat x = x;
  v30.origin.CGFloat y = y;
  v30.size.width = v17;
  v30.size.height = v18;
  CGRectGetMidX(v30);
  v31.origin.CGFloat x = x;
  v31.origin.CGFloat y = y;
  v31.size.width = v17;
  v31.size.height = v18;
  CGRectGetMinY(v31);
  sub_249AEC5F8();
  v32.origin.CGFloat x = x;
  v32.origin.CGFloat y = y;
  v32.size.width = v17;
  v32.size.height = v18;
  CGRectGetMaxX(v32);
  v33.origin.CGFloat x = x;
  v33.origin.CGFloat y = y;
  v33.size.width = v17;
  v33.size.height = v18;
  CGRectGetMaxY(v33);
  sub_249AEC5F8();
  v34.origin.CGFloat x = x;
  v34.origin.CGFloat y = y;
  v34.size.width = v17;
  v34.size.height = v18;
  CGRectGetMinX(v34);
  v35.origin.CGFloat x = x;
  v35.origin.CGFloat y = y;
  v35.size.width = v17;
  v35.size.height = v18;
  CGRectGetMaxY(v35);
  sub_249AEC5F8();
  sub_249AEC5C8();
  double result = *(double *)&v20;
  *(_OWORD *)a1 = v20;
  *(_OWORD *)(a1 + 16) = v21;
  *(unsigned char *)(a1 + 32) = v22;
  return result;
}

unint64_t sub_2498D66C4()
{
  unint64_t result = qword_2696DF1D8;
  if (!qword_2696DF1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF1D8);
  }
  return result;
}

uint64_t sub_2498D671C(uint64_t a1, unint64_t a2)
{
  sub_249AED188();
  uint64_t v4 = sub_249AED5F8();
  uint64_t v13 = v4;
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  _OWORD v12[2] = a1;
  v12[3] = a2;
  v12[4] = 0;
  v12[5] = v5;
  uint64_t v6 = sub_249AED208();
  if (v7)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v7;
    do
    {
      sub_249924A90(v12, v8, v9);
      swift_bridgeObjectRelease();
      uint64_t v8 = sub_249AED208();
      uint64_t v9 = v10;
    }
    while (v10);
    uint64_t v4 = v13;
  }
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2498D67DC(uint64_t a1)
{
  uint64_t result = sub_249AED5F8();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_2499248E0(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_2498D6974(uint64_t a1)
{
  sub_2498DB298();
  uint64_t result = sub_249AED5F8();
  int64_t v3 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v21 = result;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v4;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v9) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v17);
    ++v3;
    if (!v18)
    {
      int64_t v3 = v17 + 1;
      if (v17 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v18 = *(void *)(v5 + 8 * v3);
      if (!v18)
      {
        int64_t v3 = v17 + 2;
        if (v17 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v18 = *(void *)(v5 + 8 * v3);
        if (!v18)
        {
          int64_t v3 = v17 + 3;
          if (v17 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v18 = *(void *)(v5 + 8 * v3);
          if (!v18) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v18 - 1) & v18;
    unint64_t v11 = __clz(__rbit64(v18)) + (v3 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(a1 + 56) + 88 * v11;
    long long v13 = *(_OWORD *)(v12 + 16);
    v22[0] = *(_OWORD *)v12;
    v22[1] = v13;
    long long v15 = *(_OWORD *)(v12 + 48);
    long long v14 = *(_OWORD *)(v12 + 64);
    long long v16 = *(_OWORD *)(v12 + 32);
    uint64_t v23 = *(void *)(v12 + 80);
    v22[3] = v15;
    v22[4] = v14;
    v22[2] = v16;
    sub_2498DB2EC((uint64_t)v22);
    sub_249925544((uint64_t)&v20, (uint64_t)v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v19 = v17 + 4;
  if (v19 >= v9)
  {
LABEL_23:
    swift_release();
    return v21;
  }
  unint64_t v18 = *(void *)(v5 + 8 * v19);
  if (v18)
  {
    int64_t v3 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v3 >= v9) {
      goto LABEL_23;
    }
    unint64_t v18 = *(void *)(v5 + 8 * v3);
    ++v19;
    if (v18) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t Pair.init(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = a5 + *(int *)(type metadata accessor for Pair() + 36);
  int64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);

  return v9(v8, a2, a4);
}

uint64_t type metadata accessor for Pair()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2498D6C34(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  long long v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1);
  long long v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  CGRect v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x270FA5388](v10);
  long long v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x270FA5388](v15);
  int64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_249AED668();
  if (!v18) {
    return sub_249AED478();
  }
  uint64_t v19 = v18;
  uint64_t v43 = _s14CarPlayAssetUI10EmptyArrayO7defaultSayxGvgZ_0();
  uint64_t v32 = sub_249AEDBE8();
  sub_249AEDB88();
  uint64_t v36 = v8;
  uint64_t result = sub_249AED658();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    CGRect v34 = (void (**)(char *))(v33 + 2);
    CGRect v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_249AED718();
      char v22 = v12;
      uint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_249AEDBC8();
      sub_249AED688();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t ClosedRange<>.length.getter()
{
  return sub_249AEDC68();
}

uint64_t static Pair<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v20[1] = a6;
  uint64_t v8 = type metadata accessor for Pair();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v14 = (char *)v20 - v13;
  char v15 = sub_249AED088();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v16(v14, a1, v8);
  v16(v12, a2, v8);
  if (v15) {
    char v17 = sub_249AED088();
  }
  else {
    char v17 = 0;
  }
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  v18(v14, v8);
  return v17 & 1;
}

uint64_t Sequence.sorted<A>(by:)()
{
  return sub_249AED318();
}

uint64_t Pair.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Pair.second.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t Pair.subscript.getter()
{
  return swift_getAtKeyPath();
}

{
  return swift_getAtKeyPath();
}

uint64_t sub_2498D72F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Pair<>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8), *(void *)(a4 - 16));
}

uint64_t static Pair<>.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v28[1] = a4;
  void v28[2] = a6;
  uint64_t v9 = type metadata accessor for Pair();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v30 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v29 = (char *)v28 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v17 = (char *)v28 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v28 - v18;
  uint64_t v31 = a5;
  LOBYTE(a5) = sub_249AED008();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v20(v19, a1, v9);
  v20(v17, a2, v9);
  if (a5)
  {
    uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
    v21(v17, v9);
    v21(v19, v9);
    char v22 = 1;
  }
  else
  {
    char v23 = sub_249AED088();
    uint64_t v24 = v29;
    v20(v29, (uint64_t)v19, v9);
    uint64_t v25 = v30;
    v20(v30, (uint64_t)v17, v9);
    if (v23) {
      char v22 = sub_249AED008();
    }
    else {
      char v22 = 0;
    }
    uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v25, v9);
    v26(v24, v9);
    v26(v17, v9);
    v26(v19, v9);
  }
  return v22 & 1;
}

uint64_t sub_2498D75AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Pair<>.< infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8), *(void *)(a4 - 16));
}

uint64_t Pair<>.hash(into:)()
{
  return sub_249AECF28();
}

uint64_t Pair<>.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_2498D768C()
{
  return Pair<>.hashValue.getter();
}

uint64_t sub_2498D7698()
{
  return Pair<>.hash(into:)();
}

uint64_t sub_2498D76A4()
{
  return sub_249AEE388();
}

uint64_t Pair<>.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v26 = a5;
  uint64_t v27 = a4;
  uint64_t v30 = a3;
  uint64_t v25 = *(void *)(a2 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v29 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v13;
  uint64_t v14 = type metadata accessor for Pair();
  uint64_t v24 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v22 - v15;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE408();
  if (v5) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v22 = v14;
  char v23 = v16;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  char v17 = v29;
  sub_249AEDF58();
  uint64_t v18 = v23;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v23, v17, v33);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
  sub_249AEDF58();
  uint64_t v19 = v22;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v18[*(int *)(v22 + 36)], v10, a2);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v31);
  uint64_t v20 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v24 + 16))(v26, v18, v19);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v18, v19);
}

uint64_t Pair<>.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE448();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
  sub_249AEDF78();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v4);
    sub_249AEDF78();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v3);
}

uint64_t sub_2498D7B28@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Pair<>.init(from:)(a1, *(void *)(a2 + 24), *(void *)(a3 - 8), *(void *)(a3 - 24), a4);
}

uint64_t sub_2498D7B50(void *a1)
{
  return Pair<>.encode(to:)(a1);
}

uint64_t ClosedRange<>.doubleValue.getter(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(uint64_t (**)(uint64_t))(a2 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  *(double *)&uint64_t result = COERCE_DOUBLE(v3(v4));
  if (v6)
  {
LABEL_5:
    __break(1u);
    goto LABEL_6;
  }
  double v7 = *(double *)&result;
  *(double *)&uint64_t result = COERCE_DOUBLE(((uint64_t (*)(uint64_t, uint64_t))v3)(v4, a2));
  if ((v8 & 1) == 0)
  {
    if (v7 <= *(double *)&result) {
      return result;
    }
    __break(1u);
    goto LABEL_5;
  }
LABEL_6:
  __break(1u);
  return result;
}

uint64_t Array<A>.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v13 = a2;
  _OWORD v11[8] = a3;
  v11[9] = a4;
  v11[10] = a1;
  sub_249AED4F8();
  swift_getWitnessTable();
  sub_249AED698();
  v11[12] = v14;
  char v12 = v15;
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF1E0);
  return sub_2498D825C((void (*)(char *, char *))sub_2498D9768, (uint64_t)v11, MEMORY[0x263F8E628], a3, v9, a5);
}

uint64_t sub_2498D7D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = sub_249AED8D8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v17 - v12;
  (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v17 - v12, a3);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  uint64_t v15 = sub_249AED4F8();
  return Array<A>.subscript.setter(v10, (uint64_t)v13, v15, v6);
}

uint64_t Array<A>.subscript.setter(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a1;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v29 = sub_249AED8D8();
  uint64_t v8 = *(void *)(v29 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v29);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(v7 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v27 - v16;
  uint64_t v28 = v4;
  uint64_t v36 = *v4;
  uint64_t v33 = v7;
  uint64_t v34 = a4;
  uint64_t v30 = a4;
  uint64_t v31 = a2;
  uint64_t v35 = a2;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_249AED698();
  swift_bridgeObjectRelease();
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v32, v29);
  }
  else
  {
    unint64_t v18 = v37;
    uint64_t v19 = v29;
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v32, v29);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, v7) == 1)
    {
      uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
      v20(v11, v19);
      sub_249AED4E8();
      v20(v32, v19);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v7);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v11, v7);
      uint64_t v21 = v28;
      sub_249AED468();
      uint64_t v22 = *v21;
      sub_2498DA108(v18, *v21);
      char isClassOrObjCExistentialType = _swift_isClassOrObjCExistentialType();
      uint64_t v24 = v22 & 0xFFFFFFFFFFFFFF8;
      if ((isClassOrObjCExistentialType & 1) == 0) {
        uint64_t v24 = v22;
      }
      (*(void (**)(unint64_t, char *, uint64_t))(v12 + 24))(v24+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v18, v17, v7);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v32, v19);
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v7);
    }
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v31, AssociatedTypeWitness);
}

uint64_t sub_2498D825C@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v27 = a5;
  uint64_t v28 = v10;
  uint64_t v11 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v11);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v22 + 16))(v21, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a6, 1, 1, a4);
  }
  uint64_t v25 = v28;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v21, v15);
  v30(v19, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if (v6) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v27, v13, a3);
  }
  return result;
}

void (*Array<A>.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  uint64_t v9 = malloc(0x58uLL);
  *a1 = v9;
  v9[1] = a4;
  void v9[2] = v4;
  *uint64_t v9 = a3;
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = sub_249AED8D8();
  v9[3] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v9[4] = v12;
  size_t v13 = *(void *)(v12 + 64);
  v9[5] = malloc(v13);
  uint64_t v14 = malloc(v13);
  v9[6] = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9[7] = AssociatedTypeWitness;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = v16;
  v9[8] = v16;
  size_t v18 = *(void *)(v16 + 64);
  v9[9] = malloc(v18);
  v9[10] = malloc(v18);
  (*(void (**)(void))(v17 + 16))();
  Array<A>.subscript.getter(a2, *v4, v10, a4, (uint64_t)v14);
  return sub_2498D86B0;
}

void sub_2498D86B0(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  int64_t v3 = (void *)(*a1)[9];
  uint64_t v4 = (void *)(*a1)[10];
  if (a2)
  {
    uint64_t v5 = v2[8];
    uint64_t v7 = (char *)v2[5];
    uint64_t v6 = (char *)v2[6];
    uint64_t v8 = v2[3];
    uint64_t v9 = v2[4];
    uint64_t v10 = v2[1];
    uint64_t v12 = v2[7];
    uint64_t v11 = *v2;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v7, v6, v8);
    (*(void (**)(void *, void *, uint64_t))(v5 + 32))(v3, v4, v12);
    Array<A>.subscript.setter(v7, (uint64_t)v3, v11, v10);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  else
  {
    uint64_t v7 = (char *)v2[5];
    uint64_t v6 = (char *)v2[6];
    Array<A>.subscript.setter(v6, (uint64_t)v4, *v2, v2[1]);
  }
  free(v4);
  free(v3);
  free(v6);
  free(v7);

  free(v2);
}

void Array<A>.move(id:offsetBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_249AED698();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    uint64_t v6 = *v3;
    swift_bridgeObjectRetain();
    if (a2 >= 1 && __OFSUB__(MEMORY[0x24C5AE620](v6, v5), 1)) {
      __break(1u);
    }
    char v7 = sub_249AED6E8();
    swift_bridgeObjectRelease();
    if (v7) {
      Array.move(at:to:)(v8, v8);
    }
  }
}

uint64_t sub_2498D8914()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  int64_t v3 = (char *)&v6 - v2;
  sub_249AEDAA8();
  swift_getAssociatedConformanceWitness();
  char v4 = sub_249AED088();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v4 & 1;
}

Swift::Void __swiftcall Array.move(at:to:)(Swift::Int at, Swift::Int to)
{
}

uint64_t Optional<A>.description.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v8 + 16))(v7, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    uint64_t v12 = 0x6C616E6F6974704FLL;
    unint64_t v13 = 0xE90000000000003CLL;
    sub_249AEE508();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
    return v12;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v7, v1);
    uint64_t v10 = sub_249AEDF48();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return v10;
}

uint64_t sub_2498D8D08(uint64_t a1)
{
  return Optional<A>.description.getter(a1);
}

uint64_t Mirror.values<A>(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEE3E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF1E8);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v13 = (char *)&v19 - v12;
  uint64_t v24 = _s14CarPlayAssetUI10EmptyArrayO7defaultSayxGvgZ_0();
  sub_249AEE3C8();
  uint64_t v14 = sub_249AEE3B8();
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    goto LABEL_6;
  }
  sub_2498DA1A0((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t))(v15 + 88))(v11, v14) != *MEMORY[0x263F8E800])
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v11, v14);
LABEL_6:
    uint64_t v17 = sub_249AEE3D8();
    MEMORY[0x270FA5388](v17);
    *((void *)&v19 - 4) = a2;
    *((void *)&v19 - 3) = a1;
    *((void *)&v19 - 2) = &v24;
    sub_249AEDBF8();
    swift_release();
    goto LABEL_7;
  }
  sub_249AEE3D8();
  sub_2498D9070(&v19);
  swift_release();
  if (v21)
  {
    long long v22 = v19;
    sub_2498DA208(&v20, v23);
    sub_2498DA218((uint64_t)v23, (uint64_t)&v20);
    sub_249AEE398();
    uint64_t v16 = Mirror.values<A>(of:)(a1, a2);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *(void *)&long long v19 = v16;
    sub_249AED4F8();
    swift_getWitnessTable();
    sub_249AED4B8();
    sub_2498D60E8((uint64_t)&v22, qword_2696DF1F8);
  }
  else
  {
    sub_2498D60E8((uint64_t)&v19, &qword_2696DF1F0);
  }
LABEL_7:
  sub_2498D60E8((uint64_t)v13, &qword_2696DF1E8);
  return v24;
}

{
  uint64_t v3;
  uint64_t WitnessTable;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void v9[6];

  v9[5] = Mirror.values<A>(of:)(a1, a2);
  void v9[2] = a2;
  uint64_t v3 = sub_249AED4F8();
  WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_2498D6C34((void (*)(char *, char *))sub_2498DA274, (uint64_t)v9, v3, MEMORY[0x263F8D310], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v5);
  swift_bridgeObjectRelease();
  char v7 = sub_2498DA294(v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_2498D9070@<X0>(_OWORD *a1@<X8>)
{
  swift_getObjectType();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v2 = sub_249AEDAB8();
  swift_getObjectType();
  uint64_t result = sub_249AEDAB8();
  if (v2 == result)
  {
    char v4 = sub_249AEDAC8();
    swift_unknownObjectRelease();
    if (v4)
    {
      uint64_t result = swift_unknownObjectRelease();
      a1[1] = 0u;
      a1[2] = 0u;
      *a1 = 0u;
    }
    else
    {
      sub_249AEDC38();
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_2498D918C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_249AED298();
  }
  else {
    return 0;
  }
}

uint64_t sub_2498D91D4(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a3;
  MEMORY[0x270FA5388](a1);
  long long v19 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_249AEE3E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  size_t v18 = a1;
  uint64_t v12 = (uint64_t)(a1 + 1);
  sub_2498DA218(v12, (uint64_t)v23);
  sub_249AEE398();
  uint64_t v13 = sub_249AEE3A8();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v9 + 8);
  v14(v11, v8);
  if (v13 == a2)
  {
    long long v22 = *v18;
    sub_2498DA218(v12, (uint64_t)v23);
    sub_2498DA208(v23, &v21);
    swift_dynamicCast();
    sub_249AED4F8();
    return sub_249AED4C8();
  }
  else
  {
    sub_2498DA218(v12, (uint64_t)v23);
    sub_249AEE398();
    uint64_t v15 = Mirror.values<A>(of:)(a2, a4);
    v14(v11, v8);
    *(void *)&long long v22 = v15;
    sub_249AED4F8();
    swift_getWitnessTable();
    return sub_249AED4B8();
  }
}

uint64_t sub_2498D94FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_249AED128();
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_2498D95CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(*MEMORY[0x263F8EA20] + *a3 + 8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v13 - v8;
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  char v10 = sub_249AED008();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v4 + 8);
  v11(v7, v3);
  v11(v9, v3);
  return v10 & 1;
}

uint64_t sub_2498D9744(uint64_t a1, uint64_t a2)
{
  return sub_2498D95CC(a1, a2, *(void **)(v2 + 40)) & 1;
}

uint64_t sub_2498D9768@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_249AED518();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a1, 0, 1, v3);
}

uint64_t Dictionary.mapKeys<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = a3;
  void v14[2] = a4;
  void v14[3] = a5;
  v14[4] = a6;
  v14[5] = a7;
  v14[6] = a8;
  v14[7] = a1;
  v14[8] = a2;
  uint64_t v9 = sub_249AECED8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_2498D6C34((void (*)(char *, char *))sub_2498DA32C, (uint64_t)v14, v9, TupleTypeMetadata2, v11, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)&v15);
  if (!v8)
  {
    uint64_t v16 = result;
    sub_249AED4F8();
    swift_getWitnessTable();
    return sub_249AECEB8();
  }
  return result;
}

uint64_t Dictionary.mapKeys<A>(_:uniquingKeysWith:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v25 = a5;
  uint64_t v17 = a6;
  uint64_t v18 = a7;
  uint64_t v19 = a8;
  uint64_t v20 = a9;
  uint64_t v21 = a10;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v11 = sub_249AECED8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB8);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_2498D6C34((void (*)(char *, char *))sub_2498DA32C, (uint64_t)v16, v11, TupleTypeMetadata2, v13, WitnessTable, MEMORY[0x263F8E4E0], (uint64_t)&v24);
  if (!v10)
  {
    uint64_t v25 = result;
    sub_249AED4F8();
    swift_getWitnessTable();
    return sub_249AECEE8();
  }
  return result;
}

uint64_t sub_2498D9ABC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>, void *a7)
{
  v23[1] = a5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v15 = (char *)v23 - v14;
  uint64_t result = a2(a1);
  if (v7)
  {
    *a7 = v7;
  }
  else
  {
    uint64_t v17 = a6 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    uint64_t v18 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v19 = &v15[v18];
    uint64_t v20 = a1 + v18;
    uint64_t v21 = *(void *)(a3 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v15, a1, a3);
    uint64_t v22 = *(void *)(a4 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v19, v20, a4);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 32))(v17, v19, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v15, a3);
  }
  return result;
}

uint64_t Sequence.merge<A, B>()()
{
  sub_249AECE38();
  sub_249AECED8();
  sub_249AED2F8();
  return v1;
}

uint64_t sub_2498D9D54()
{
  return sub_249AECEC8();
}

uint64_t Sequence<>.flatten()()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  sub_249AED478();
  sub_249AED4F8();
  sub_249AED308();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_2498D9EC0()
{
  return sub_249AED738();
}

uint64_t Sequence<>.set.getter(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v1, a1);
  swift_getAssociatedTypeWitness();
  return sub_249AED628();
}

BOOL Optional.isNil.getter(uint64_t a1)
{
  return (*(unsigned int (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 48))(v1, 1) == 1;
}

uint64_t sub_2498DA108(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_2498DA15C()
{
  return sub_2498D8914() & 1;
}

uint64_t sub_2498DA180(long long *a1)
{
  return sub_2498D91D4(a1, v1[3], v1[4], v1[2]);
}

uint64_t sub_2498DA1A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF1E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_2498DA208(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_2498DA218(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2498DA274@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_2498D94FC(a1, a2);
}

uint64_t sub_2498DA294(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_249AED5F8();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_2499248E0(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_2498DA32C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2498DA344(a1, a2, a3);
}

uint64_t sub_2498DA344@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2498D9ABC(a1, *(uint64_t (**)(uint64_t))(v3 + 56), *(void *)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a3, a2);
}

uint64_t sub_2498DA37C()
{
  return sub_2498D9D54();
}

uint64_t sub_2498DA3A0()
{
  return sub_2498D9EC0();
}

uint64_t sub_2498DA3C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2498DA410@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Array<A>.subscript.getter(a2, *a1, *(void *)(a3 + a2 - 16), *(void *)(a3 + a2 - 8), a4);
}

uint64_t sub_2498DA42C()
{
  return 16;
}

__n128 sub_2498DA438(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2498DA444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_2498DA44C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2498DA51C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_2498DA678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_2498DA71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2498DA7C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2498DA86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2498DA914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2498DA9BC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2498DABB4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2498DAE80);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t dispatch thunk of AnyOptional.isNil.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2498DAEBC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2498DB404();
  uint64_t result = sub_249AED5F8();
  uint64_t v10 = result;
  if (v2)
  {
    uint64_t v4 = (char *)(a1 + 48);
    do
    {
      uint64_t v5 = *((void *)v4 - 2);
      uint64_t v6 = *((void *)v4 - 1);
      char v7 = *v4;
      v4 += 24;
      sub_24988D770(v5, v6, v7);
      sub_249924C20((uint64_t)v8, v5, v6, v7);
      sub_24988D788(v8[0], v8[1], v9);
      --v2;
    }
    while (v2);
    return v10;
  }
  return result;
}

uint64_t sub_2498DAF64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_2498DB358();
  uint64_t result = sub_249AED5F8();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = a1 + 32;
    do
    {
      long long v5 = *(_OWORD *)(v4 + 16);
      v8[0] = *(_OWORD *)v4;
      v8[1] = v5;
      uint64_t v8[2] = *(_OWORD *)(v4 + 32);
      uint64_t v9 = *(void *)(v4 + 48);
      sub_2498DB3AC((uint64_t)v8);
      sub_249924EAC((uint64_t)&v6, (uint64_t)v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 56;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_2498DB02C(unint64_t a1)
{
  return sub_2498DB08C(a1, (unint64_t *)&unk_2696E5990, 0x263F31EE0, &qword_2696DF288, (void (*)(id *, uint64_t))sub_24992525C);
}

uint64_t sub_2498DB05C(unint64_t a1)
{
  return sub_2498DB08C(a1, (unint64_t *)&unk_2696E59A0, 0x263F31EE8, &qword_2696DF280, (void (*)(id *, uint64_t))sub_249925240);
}

uint64_t sub_2498DB08C(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_249AEDC78();
    swift_bridgeObjectRelease();
  }
  sub_2498DB20C(0, a2);
  sub_2498DB248(a4, a2);
  uint64_t result = sub_249AED5F8();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_249AEDC78();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = MEMORY[0x24C5AEC50](i, a1);
        a5(&v16, v13);
      }
    }
    else
    {
      size_t v14 = (void **)(a1 + 32);
      do
      {
        BOOL v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_2498DB20C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2498DB248(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_2498DB20C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498DB298()
{
  unint64_t result = qword_2696DF290;
  if (!qword_2696DF290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF290);
  }
  return result;
}

uint64_t sub_2498DB2EC(uint64_t a1)
{
  return a1;
}

unint64_t sub_2498DB358()
{
  unint64_t result = qword_2696DF298;
  if (!qword_2696DF298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF298);
  }
  return result;
}

uint64_t sub_2498DB3AC(uint64_t a1)
{
  return a1;
}

unint64_t sub_2498DB404()
{
  unint64_t result = qword_2696DF2A0;
  if (!qword_2696DF2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF2A0);
  }
  return result;
}

uint64_t sub_2498DB458@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v1 + 32) - 8) + 16))(a1);
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2498DB4DC()
{
  return sub_2498DA15C() & 1;
}

uint64_t EditableTheme.optimize(for:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *v2;
  uint64_t v71 = MEMORY[0x263F8EE80];
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v4 = sub_2498E8DEC(v3);
  swift_bridgeObjectRelease();
  *(void *)&v72[0] = v4;
  long long v5 = 0;
  sub_2498EA964((uint64_t *)v72);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v6 = *(void *)&v72[0];
  uint64_t v7 = *(void *)(*(void *)&v72[0] + 16);
  uint64_t v66 = v3;
  if (v7)
  {
    swift_retain();
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    uint64_t v9 = 32;
    while (1)
    {
      long long v11 = *(_OWORD *)(v6 + v9 + 16);
      long long v10 = *(_OWORD *)(v6 + v9 + 32);
      long long v12 = *(_OWORD *)(v6 + v9);
      uint64_t v73 = *(void *)(v6 + v9 + 48);
      v72[1] = v11;
      v72[2] = v10;
      v72[0] = v12;
      uint64_t v13 = v11;
      sub_2498DB3AC((uint64_t)v72);
      sub_2498DB3AC((uint64_t)v72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v14 = sub_2498EB13C(MEMORY[0x263F8EE80], v13, a1, v72, &v71);
      sub_2498EB45C((uint64_t)v72);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v14 + 16)) {
        break;
      }
      swift_bridgeObjectRelease();
      sub_2498EB45C((uint64_t)v72);
LABEL_4:
      v9 += 56;
      if (!--v7)
      {
        uint64_t v69 = v8;
        swift_release();
        uint64_t v3 = v66;
        goto LABEL_20;
      }
    }
    uint64_t v69 = v5;
    uint64_t v15 = v6;
    uint64_t v16 = *((void *)&v72[0] + 1);
    uint64_t v17 = *(void *)&v72[0];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v70[0] = (uint64_t)v8;
    unint64_t v20 = sub_2498EF018(v17, v16);
    uint64_t v21 = v8[2];
    BOOL v22 = (v19 & 1) == 0;
    uint64_t v23 = v21 + v22;
    if (__OFADD__(v21, v22))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    char v24 = v19;
    if (v8[3] < v23)
    {
      sub_2498E5048(v23, isUniquelyReferenced_nonNull_native, &qword_2696DF4F0);
      uint64_t v25 = sub_2498EF018(v17, v16);
      if ((v24 & 1) != (v26 & 1))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB18);
        sub_249AEE2D8();
        __break(1u);
        swift_release();
        swift_release();
        __break(1u);
        swift_unexpectedError();
        __break(1u);
        swift_release();
        uint64_t result = swift_release();
        __break(1u);
        return result;
      }
      unint64_t v20 = v25;
      uint64_t v8 = (void *)v70[0];
      if ((v24 & 1) == 0) {
        goto LABEL_15;
      }
LABEL_13:
      uint64_t v27 = v8;
      uint64_t v28 = v8[7];
      swift_bridgeObjectRelease();
      *(void *)(v28 + 8 * v20) = v14;
      uint64_t v8 = v27;
LABEL_17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2498EB45C((uint64_t)v72);
      uint64_t v6 = v15;
      long long v5 = v69;
      goto LABEL_4;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v8 = (void *)v70[0];
      if (v19) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_2498E07FC(&qword_2696DF4F0);
      uint64_t v8 = (void *)v70[0];
      if (v24) {
        goto LABEL_13;
      }
    }
LABEL_15:
    v8[(v20 >> 6) + 8] |= 1 << v20;
    uint64_t v29 = (void *)(v8[6] + 16 * v20);
    *uint64_t v29 = v17;
    v29[1] = v16;
    *(void *)(v8[7] + 8 * v20) = v14;
    uint64_t v30 = v8[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_41;
    }
    uint64_t v8[2] = v32;
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  uint64_t v69 = (void *)MEMORY[0x263F8EE80];
LABEL_20:
  swift_release();
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  uint64_t v33 = sub_2498E8DEC(v3);
  swift_bridgeObjectRelease();
  v70[0] = (uint64_t)v33;
  sub_2498EA964(v70);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v34 = v70[0];
  int64_t v35 = *(void *)(v70[0] + 16);
  uint64_t v36 = MEMORY[0x263F8EE78];
  if (v35)
  {
    v70[0] = MEMORY[0x263F8EE78];
    sub_249A22030(0, v35, 0);
    uint64_t v37 = v70[0];
    char v38 = (uint64_t *)(v34 + 64);
    do
    {
      uint64_t v39 = *(v38 - 4);
      uint64_t v40 = *(v38 - 3);
      uint64_t v41 = *(v38 - 1);
      uint64_t v42 = *v38;
      v70[0] = v37;
      unint64_t v44 = *(void *)(v37 + 16);
      unint64_t v43 = *(void *)(v37 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44 >= v43 >> 1)
      {
        sub_249A22030(v43 > 1, v44 + 1, 1);
        uint64_t v37 = v70[0];
      }
      v38 += 7;
      *(void *)(v37 + 16) = v44 + 1;
      uint64_t v45 = (void *)(v37 + 32 * v44);
      v45[4] = v39;
      v45[5] = v40;
      v45[6] = v41;
      v45[7] = v42;
      --v35;
    }
    while (v35);
    swift_release();
    uint64_t v36 = MEMORY[0x263F8EE78];
    if (*(void *)(v37 + 16)) {
      goto LABEL_26;
    }
  }
  else
  {
    swift_release();
    if (*(void *)(MEMORY[0x263F8EE78] + 16))
    {
LABEL_26:
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF2A8);
      uint64_t v46 = sub_249AEDCA8();
      goto LABEL_29;
    }
  }
  uint64_t v46 = MEMORY[0x263F8EE80];
LABEL_29:
  v70[0] = v46;
  uint64_t v47 = (void *)swift_bridgeObjectRetain();
  sub_2498DEBE0(v47, 1, v70, &qword_2696DF2A8);
  swift_bridgeObjectRelease();
  unint64_t v20 = v70[0];
  swift_getKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain();
  char v48 = sub_2498E8DEC(v66);
  swift_bridgeObjectRelease();
  v70[0] = (uint64_t)v48;
  sub_2498EA964(v70);
  swift_bridgeObjectRelease();
  swift_release_n();
  uint64_t v49 = v70[0];
  int64_t v50 = *(void *)(v70[0] + 16);
  if (v50)
  {
    unint64_t v68 = v20;
    v70[0] = v36;
    sub_249A22010(0, v50, 0);
    uint64_t v51 = v70[0];
    char v52 = (uint64_t *)(v49 + 80);
    do
    {
      uint64_t v54 = *(v52 - 6);
      uint64_t v53 = *(v52 - 5);
      uint64_t v55 = *(v52 - 1);
      uint64_t v56 = *v52;
      v70[0] = v51;
      unint64_t v58 = *(void *)(v51 + 16);
      unint64_t v57 = *(void *)(v51 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v58 >= v57 >> 1)
      {
        sub_249A22010(v57 > 1, v58 + 1, 1);
        uint64_t v51 = v70[0];
      }
      v52 += 7;
      *(void *)(v51 + 16) = v58 + 1;
      uint64_t v59 = (void *)(v51 + 32 * v58);
      v59[4] = v54;
      v59[5] = v53;
      v59[6] = v55;
      v59[7] = v56;
      --v50;
    }
    while (v50);
    swift_release();
    unint64_t v20 = v68;
    if (*(void *)(v51 + 16)) {
      goto LABEL_35;
    }
LABEL_37:
    uint64_t v60 = MEMORY[0x263F8EE80];
    goto LABEL_38;
  }
  swift_release();
  if (!*(void *)(MEMORY[0x263F8EE78] + 16)) {
    goto LABEL_37;
  }
LABEL_35:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF2B0);
  uint64_t v60 = sub_249AEDCA8();
LABEL_38:
  v70[0] = v60;
  uint64_t v61 = (void *)swift_bridgeObjectRetain();
  sub_2498DEBE0(v61, 1, v70, &qword_2696DF2B0);
  swift_bridgeObjectRelease();
  uint64_t v8 = (void *)v70[0];
  uint64_t v16 = v71;
  uint64_t v62 = qword_2696DD758;
  swift_bridgeObjectRetain();
  if (v62 != -1) {
LABEL_42:
  }
    swift_once();
  uint64_t v63 = qword_2696E2ED8;
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = 0;
  a2[1] = v63;
  a2[5] = v8;
  a2[6] = 2;
  a2[2] = v16;
  a2[3] = v69;
  a2[4] = v20;
  return result;
}

uint64_t sub_2498DBBD8(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v53 = MEMORY[0x263F8EE78];
  sub_249A220B0(0, v1, 0);
  uint64_t v2 = v53;
  uint64_t result = sub_249A49DE0(a1);
  if (result < 0) {
    goto LABEL_32;
  }
  unint64_t v6 = result;
  if (result >= 1 << *(unsigned char *)(a1 + 32)) {
    goto LABEL_32;
  }
  uint64_t v7 = a1 + 64;
  int64_t v35 = v1;
  uint64_t v8 = 1;
  int v36 = v5;
  uint64_t v37 = a1 + 64;
  while (1)
  {
    unint64_t v9 = v6 >> 6;
    if ((*(void *)(v7 + 8 * (v6 >> 6)) & (1 << v6)) == 0) {
      break;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_28;
    }
    long long v10 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    uint64_t v13 = (long long *)(*(void *)(a1 + 56) + (v6 << 7));
    long long v14 = *v13;
    long long v15 = v13[1];
    long long v16 = v13[3];
    long long v40 = v13[2];
    long long v41 = v16;
    long long v38 = v14;
    long long v39 = v15;
    long long v17 = v13[4];
    long long v18 = v13[5];
    long long v19 = v13[6];
    *(_OWORD *)&v44[9] = *(long long *)((char *)v13 + 105);
    long long v43 = v18;
    *(_OWORD *)unint64_t v44 = v19;
    long long v42 = v17;
    v45[0] = v11;
    v45[1] = v12;
    long long v50 = v17;
    long long v51 = v18;
    v52[0] = v19;
    *(_OWORD *)((char *)v52 + 9) = *(_OWORD *)&v44[9];
    long long v46 = v38;
    long long v47 = v39;
    long long v48 = v40;
    long long v49 = v16;
    sub_24988E364((uint64_t)&v38);
    sub_24988E364((uint64_t)&v38);
    swift_bridgeObjectRetain();
    uint64_t result = sub_2498EC44C((uint64_t)v45);
    uint64_t v53 = v2;
    unint64_t v21 = *(void *)(v2 + 16);
    unint64_t v20 = *(void *)(v2 + 24);
    if (v21 >= v20 >> 1)
    {
      uint64_t result = sub_249A220B0(v20 > 1, v21 + 1, 1);
      uint64_t v2 = v53;
    }
    *(void *)(v2 + 16) = v21 + 1;
    BOOL v22 = (_OWORD *)(v2 + (v21 << 7));
    long long v23 = v38;
    long long v24 = v39;
    long long v25 = v41;
    v22[4] = v40;
    _OWORD v22[5] = v25;
    v22[2] = v23;
    v22[3] = v24;
    long long v26 = v42;
    long long v27 = v43;
    long long v28 = *(_OWORD *)v44;
    *(_OWORD *)((char *)v22 + 137) = *(_OWORD *)&v44[9];
    v22[7] = v27;
    _OWORD v22[8] = v28;
    v22[6] = v26;
    char v29 = *(unsigned char *)(a1 + 32);
    if ((uint64_t)v6 >= 1 << v29) {
      goto LABEL_29;
    }
    uint64_t v7 = a1 + 64;
    uint64_t v30 = *(void *)(v37 + 8 * v9);
    if ((v30 & (1 << v6)) == 0) {
      goto LABEL_30;
    }
    int v5 = v36;
    if (*(_DWORD *)(a1 + 36) != v36) {
      goto LABEL_31;
    }
    unint64_t v31 = v30 & (-2 << (v6 & 0x3F));
    if (v31)
    {
      unint64_t v6 = __clz(__rbit64(v31)) | v6 & 0xFFFFFFFFFFFFFFC0;
      if (v8 == v35) {
        return v2;
      }
    }
    else
    {
      unint64_t v32 = v9 + 1;
      unint64_t v33 = (unint64_t)((1 << v29) + 63) >> 6;
      if (v9 + 1 >= v33) {
        goto LABEL_22;
      }
      unint64_t v34 = *(void *)(v37 + 8 * v32);
      if (!v34)
      {
        while (v33 - 2 != v9)
        {
          unint64_t v34 = *(void *)(a1 + 80 + 8 * v9++);
          if (v34)
          {
            unint64_t v32 = v9 + 1;
            goto LABEL_20;
          }
        }
LABEL_22:
        unint64_t v6 = 1 << v29;
        if (v8 == v35) {
          return v2;
        }
        goto LABEL_23;
      }
LABEL_20:
      unint64_t v6 = __clz(__rbit64(v34)) + (v32 << 6);
      if (v8 == v35) {
        return v2;
      }
    }
LABEL_23:
    if ((v6 & 0x8000000000000000) == 0)
    {
      ++v8;
      if ((uint64_t)v6 < 1 << v29) {
        continue;
      }
    }
    goto LABEL_32;
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_2498DBEA0(uint64_t a1)
{
  uint64_t v30 = sub_249AEE3E8();
  uint64_t v3 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  char v29 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v24 = v1;
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_249A220D0(0, v5, 0);
    uint64_t v7 = type metadata accessor for Layout();
    uint64_t v8 = 0;
    uint64_t v9 = *(void *)(v7 - 8);
    uint64_t v27 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v28 = v7;
    uint64_t v26 = *(void *)(v9 + 72);
    long long v25 = (void (**)(char *, uint64_t))(v3 + 8);
    do
    {
      uint64_t v10 = v27 + v26 * v8;
      uint64_t v34 = v28;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
      sub_2498EC5EC(v10, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for Layout);
      uint64_t v12 = v29;
      sub_249AEE398();
      uint64_t v13 = sub_24996797C();
      (*v25)(v12, v30);
      uint64_t v14 = *(void *)(v13 + 16);
      sub_2498DB404();
      uint64_t v15 = sub_249AED5F8();
      uint64_t v31 = v15;
      if (v14)
      {
        long long v16 = (char *)(v13 + 48);
        do
        {
          uint64_t v18 = *((void *)v16 - 2);
          uint64_t v17 = *((void *)v16 - 1);
          char v19 = *v16;
          v16 += 24;
          sub_24988D770(v18, v17, v19);
          sub_249924C20((uint64_t)v32, v18, v17, v19);
          sub_24988D788(v32[0], v32[1], v33);
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        uint64_t v20 = v31;
      }
      else
      {
        uint64_t v20 = v15;
        swift_bridgeObjectRelease();
      }
      uint64_t v6 = v35;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249A220D0(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v35;
      }
      unint64_t v22 = *(void *)(v6 + 16);
      unint64_t v21 = *(void *)(v6 + 24);
      if (v22 >= v21 >> 1)
      {
        sub_249A220D0(v21 > 1, v22 + 1, 1);
        uint64_t v6 = v35;
      }
      ++v8;
      *(void *)(v6 + 16) = v22 + 1;
      *(void *)(v6 + 8 * v22 + 32) = v20;
    }
    while (v8 != v5);
  }
  return v6;
}

uint64_t sub_2498DC17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v22 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v10 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v9 >= v22) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v21 + 8 * v9);
    if (!v19) {
      break;
    }
LABEL_19:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v11 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_5:
    uint64_t v12 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v11);
    uint64_t v13 = *v12;
    uint64_t v14 = v12[1];
    uint64_t v15 = *(void *)(*(void *)(a2 + 56) + 8 * v11);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_2498DC3A0(MEMORY[0x263F8EE80], v15, a3);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_249883A00(v16, v13, v14, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v20 = v9 + 1;
  if (v9 + 1 >= v22) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v9 + 2;
  if (v9 + 2 >= v22) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v9 + 3;
  if (v9 + 3 >= v22) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v20);
  if (v19) {
    goto LABEL_18;
  }
  int64_t v20 = v9 + 4;
  if (v9 + 4 >= v22)
  {
LABEL_24:
    swift_release();
    return a1;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v20);
  if (v19)
  {
LABEL_18:
    int64_t v9 = v20;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v22) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v21 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_2498DC3A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v91 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v92 = (unint64_t)(v6 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (1)
  {
    if (v8)
    {
      uint64_t v97 = (v8 - 1) & v8;
      unint64_t v13 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v14 >= v92) {
      goto LABEL_66;
    }
    unint64_t v15 = *(void *)(v91 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v92) {
        goto LABEL_66;
      }
      unint64_t v15 = *(void *)(v91 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v92) {
          goto LABEL_66;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v9);
        if (!v15)
        {
          int64_t v9 = v14 + 3;
          if (v14 + 3 >= v92) {
            goto LABEL_66;
          }
          unint64_t v15 = *(void *)(v91 + 8 * v9);
          if (!v15)
          {
            int64_t v16 = v14 + 4;
            if (v16 >= v92)
            {
LABEL_66:
              swift_release();
              return a1;
            }
            unint64_t v15 = *(void *)(v91 + 8 * v16);
            int64_t v9 = v16;
            if (!v15) {
              break;
            }
          }
        }
      }
    }
LABEL_23:
    uint64_t v97 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    uint64_t v21 = *(void *)(a3 + 16);
    swift_bridgeObjectRetain();
    uint64_t v22 = *(void *)(v21 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v22 && (uint64_t v23 = sub_2498EF018(v18, v19), (v24 & 1) != 0))
    {
      uint64_t v84 = v18;
      uint64_t v87 = v4;
      uint64_t v88 = a1;
      long long v25 = (long long *)(*(void *)(v21 + 56) + (v23 << 7));
      long long v27 = v25[2];
      long long v26 = v25[3];
      long long v28 = v25[1];
      long long v98 = *v25;
      long long v99 = v28;
      long long v100 = v27;
      long long v101 = v26;
      long long v29 = v25[4];
      long long v30 = v25[5];
      long long v31 = v25[6];
      *(_OWORD *)&v104[9] = *(long long *)((char *)v25 + 105);
      long long v103 = v30;
      *(_OWORD *)long long v104 = v31;
      long long v102 = v29;
      sub_24988E364((uint64_t)&v98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v32 = (void *)*((void *)&v100 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v118 = v32;
      uint64_t v90 = v20 + 64;
      uint64_t v34 = -1 << *(unsigned char *)(v20 + 32);
      if (-v34 < 64) {
        uint64_t v35 = ~(-1 << -(char)v34);
      }
      else {
        uint64_t v35 = -1;
      }
      unint64_t v36 = v35 & *(void *)(v20 + 64);
      int64_t v37 = (unint64_t)(63 - v34) >> 6;
      swift_bridgeObjectRetain();
      uint64_t v38 = 0;
      int64_t v85 = v9;
      uint64_t v86 = a3;
      while (1)
      {
        char v96 = isUniquelyReferenced_nonNull_native;
        if (v36)
        {
          uint64_t v93 = (v36 - 1) & v36;
          uint64_t v94 = v38;
          unint64_t v40 = __clz(__rbit64(v36)) | (v38 << 6);
          goto LABEL_50;
        }
        int64_t v41 = v38 + 1;
        if (__OFADD__(v38, 1)) {
          goto LABEL_70;
        }
        if (v41 >= v37) {
          goto LABEL_65;
        }
        unint64_t v42 = *(void *)(v90 + 8 * v41);
        uint64_t v43 = v38 + 1;
        if (!v42)
        {
          uint64_t v43 = v38 + 2;
          if (v38 + 2 >= v37) {
            goto LABEL_65;
          }
          unint64_t v42 = *(void *)(v90 + 8 * v43);
          if (!v42)
          {
            uint64_t v43 = v38 + 3;
            if (v38 + 3 >= v37) {
              goto LABEL_65;
            }
            unint64_t v42 = *(void *)(v90 + 8 * v43);
            if (!v42)
            {
              uint64_t v43 = v38 + 4;
              if (v38 + 4 >= v37) {
                goto LABEL_65;
              }
              unint64_t v42 = *(void *)(v90 + 8 * v43);
              if (!v42)
              {
                uint64_t v43 = v38 + 5;
                if (v38 + 5 >= v37) {
                  goto LABEL_65;
                }
                unint64_t v42 = *(void *)(v90 + 8 * v43);
                if (!v42) {
                  break;
                }
              }
            }
          }
        }
LABEL_49:
        uint64_t v93 = (v42 - 1) & v42;
        uint64_t v94 = v43;
        unint64_t v40 = __clz(__rbit64(v42)) + (v43 << 6);
LABEL_50:
        uint64_t v45 = *(void *)(v20 + 48) + 24 * v40;
        uint64_t v47 = *(void *)v45;
        uint64_t v46 = *(void *)(v45 + 8);
        uint64_t v48 = *(unsigned __int8 *)(v45 + 16);
        uint64_t v49 = *(void *)(*(void *)(v20 + 56) + 8 * v40);
        sub_24988D770(*(void *)v45, v46, *(unsigned char *)(v45 + 16));
        swift_bridgeObjectRetain();
        sub_24988D770(v47, v46, v48);
        swift_bridgeObjectRetain();
        sub_24988D788(v47, v46, v48);
        swift_bridgeObjectRelease();
        if (!v49) {
          goto LABEL_65;
        }
        unint64_t v51 = sub_2498EF034(v47, v46, v48);
        uint64_t v52 = v32[2];
        BOOL v53 = (v50 & 1) == 0;
        uint64_t v54 = v52 + v53;
        if (__OFADD__(v52, v53)) {
          goto LABEL_68;
        }
        char v55 = v50;
        if (v32[3] >= v54)
        {
          if (v96)
          {
            unint64_t v32 = v118;
            if (v50) {
              goto LABEL_30;
            }
          }
          else
          {
            sub_2498DFDFC();
            unint64_t v32 = v118;
            if (v55) {
              goto LABEL_30;
            }
          }
        }
        else
        {
          sub_2498E3D54(v54, v96 & 1);
          unint64_t v56 = sub_2498EF034(v47, v46, v48);
          if ((v55 & 1) != (v57 & 1)) {
            goto LABEL_72;
          }
          unint64_t v51 = v56;
          unint64_t v32 = v118;
          if (v55)
          {
LABEL_30:
            sub_24988D788(v47, v46, v48);
            uint64_t v39 = v32[7];
            swift_bridgeObjectRelease();
            *(void *)(v39 + 8 * v51) = v49;
            goto LABEL_31;
          }
        }
        v32[(v51 >> 6) + 8] |= 1 << v51;
        uint64_t v58 = v32[6] + 24 * v51;
        *(void *)uint64_t v58 = v47;
        *(void *)(v58 + 8) = v46;
        *(unsigned char *)(v58 + 16) = v48;
        *(void *)(v32[7] + 8 * v51) = v49;
        uint64_t v59 = v32[2];
        BOOL v60 = __OFADD__(v59, 1);
        uint64_t v61 = v59 + 1;
        if (v60) {
          goto LABEL_69;
        }
        uint64_t v32[2] = v61;
LABEL_31:
        char isUniquelyReferenced_nonNull_native = 1;
        unint64_t v36 = v93;
        uint64_t v38 = v94;
      }
      uint64_t v44 = v38;
      while (v37 - 6 != v44)
      {
        unint64_t v42 = *(void *)(v20 + 112 + 8 * v44++);
        if (v42)
        {
          uint64_t v43 = v44 + 5;
          goto LABEL_49;
        }
      }
LABEL_65:
      swift_bridgeObjectRelease();
      uint64_t v70 = *((void *)&v98 + 1);
      uint64_t v71 = *((void *)&v99 + 1);
      uint64_t v80 = v99;
      uint64_t v81 = v98;
      uint64_t v72 = v101;
      uint64_t v78 = v101;
      uint64_t v79 = v100;
      long long v73 = v102;
      uint64_t v83 = *((void *)&v101 + 1);
      uint64_t v82 = v103;
      long long v74 = *(_OWORD *)v104;
      uint64_t v89 = *(void *)&v104[16];
      char v95 = v104[24];
      char v75 = BYTE8(v103);
      sub_249882CD8();
      swift_bridgeObjectRelease();
      *(void *)&long long v105 = v81;
      *((void *)&v105 + 1) = v70;
      uint64_t v106 = v80;
      uint64_t v107 = v71;
      uint64_t v108 = v79;
      char v109 = v32;
      uint64_t v110 = v72;
      uint64_t v111 = v83;
      long long v112 = v73;
      uint64_t v113 = v82;
      char v114 = v75;
      long long v115 = v74;
      uint64_t v116 = v89;
      char v117 = v95;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24988CD7C(v78, v83, v73, *((uint64_t *)&v73 + 1), v82, v75);
      sub_24988CDF0(*((uint64_t *)&v74 + 1));
      sub_24988E414((uint64_t)&v98);
      char v76 = swift_isUniquelyReferenced_nonNull_native();
      sub_249883B44(&v105, v84, v19, v76);
      a1 = v88;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      a3 = v86;
      uint64_t v4 = v87;
      int64_t v9 = v85;
      unint64_t v8 = v97;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v10 = sub_2498EF018(v18, v19);
      char v12 = v11;
      swift_bridgeObjectRelease();
      if (v12)
      {
        char v62 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v118 = (void *)a1;
        if ((v62 & 1) == 0)
        {
          sub_2498E05E0();
          a1 = (uint64_t)v118;
        }
        swift_bridgeObjectRelease();
        uint64_t v63 = (long long *)(*(void *)(a1 + 56) + (v10 << 7));
        long long v65 = v63[2];
        long long v64 = v63[3];
        long long v66 = v63[1];
        long long v98 = *v63;
        long long v99 = v66;
        long long v100 = v65;
        long long v101 = v64;
        long long v67 = v63[4];
        long long v68 = v63[5];
        long long v69 = v63[6];
        *(_OWORD *)&v104[9] = *(long long *)((char *)v63 + 105);
        long long v103 = v68;
        *(_OWORD *)long long v104 = v69;
        long long v102 = v67;
        sub_24992ABB4(v10, a1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24988E414((uint64_t)&v98);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v8 = v97;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        unint64_t v8 = v97;
      }
    }
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v92) {
      goto LABEL_66;
    }
    unint64_t v15 = *(void *)(v91 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_71:
  __break(1u);
LABEL_72:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

uint64_t sub_2498DCB58(uint64_t (*a1)(_OWORD *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = 0;
  for (uint64_t i = (_OWORD *)(a3 + 32); ; i += 8)
  {
    long long v8 = i[5];
    long long v9 = i[3];
    long long v22 = i[4];
    long long v23 = v8;
    long long v10 = i[5];
    v24[0] = i[6];
    *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)((char *)i + 105);
    long long v11 = i[1];
    v19[0] = *i;
    v19[1] = v11;
    long long v12 = i[3];
    long long v14 = *i;
    long long v13 = i[1];
    long long v20 = i[2];
    long long v21 = v12;
    v17[4] = v22;
    void v17[5] = v10;
    v18[0] = i[6];
    *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)i + 105);
    v17[0] = v14;
    v17[1] = v13;
    v17[2] = v20;
    v17[3] = v9;
    sub_24988E364((uint64_t)v19);
    char v15 = a1(v17);
    sub_24988E414((uint64_t)v19);
    if (v3 || (v15 & 1) != 0) {
      break;
    }
    if (v4 == ++v6) {
      return 0;
    }
  }
  return v6;
}

uint64_t sub_2498DCC5C(uint64_t (*a1)(void *), uint64_t a2, uint64_t a3)
{
  int64_t v16 = a1;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return 0;
  }
  uint64_t v4 = 0;
  for (uint64_t i = (uint64_t *)(a3 + 80); ; i += 7)
  {
    uint64_t v6 = *(i - 5);
    uint64_t v8 = *(i - 4);
    uint64_t v7 = *(i - 3);
    uint64_t v10 = *(i - 2);
    uint64_t v9 = *(i - 1);
    uint64_t v11 = *i;
    v15[0] = *(i - 6);
    v15[1] = v6;
    v15[2] = v8;
    v15[3] = v7;
    v15[4] = v10;
    v15[5] = v9;
    v15[6] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v12 = v16(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v3 || (v12 & 1) != 0) {
      break;
    }
    if (v14 == ++v4) {
      return 0;
    }
  }
  return v4;
}

uint64_t *ResolvedTheme.palettes(for:)(uint64_t *result)
{
  uint64_t v2 = *v1;
  if (v2)
  {
    if (*(void *)(v2 + 16))
    {
      uint64_t v4 = *result;
      uint64_t v3 = result[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_2498EF018(v4, v3);
      if (v6)
      {
        uint64_t v7 = *(void *)(*(void *)(v2 + 56) + 8 * v5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v8 = sub_2498DBBD8(v7);
        swift_bridgeObjectRelease();
        return (uint64_t *)v8;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_2498DCE38(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v71 = *(void *)(a2 + 8);
  uint64_t v82 = *(void *)a2;
  uint64_t v83 = *(void *)(a2 + 16);
  uint64_t v86 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  uint64_t v75 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 56);
  char v9 = *(unsigned char *)(a2 + 64);
  uint64_t v79 = *(void *)(a2 + 72);
  uint64_t v80 = *(void *)(a2 + 24);
  uint64_t v109 = *(void *)(a2 + 80);
  uint64_t v84 = *(void *)(a2 + 88);
  char v76 = *(unsigned char *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 104);
  uint64_t v66 = *(void *)(a2 + 112);
  sub_2498DB3AC((uint64_t)a4);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_2498EAA08(v11, a4);
  sub_2498EB45C((uint64_t)a4);
  swift_bridgeObjectRelease();
  if (!*(void *)(v12 + 16)) {
    return swift_bridgeObjectRelease();
  }
  long long v65 = a1;
  char v78 = v9;
  uint64_t v81 = v8;
  uint64_t v85 = v7;
  uint64_t v13 = sub_2498DBEA0(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
    uint64_t v16 = MEMORY[0x263F8EE88];
    do
    {
      uint64_t v17 = *(void *)(v13 + 8 * v15++ + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v16 = sub_2498DD5D4(v17, v16);
      swift_bridgeObjectRelease();
    }
    while (v14 != v15);
    swift_bridgeObjectRelease();
    uint64_t v18 = v10;
    uint64_t v19 = v80;
  }
  else
  {
    uint64_t v16 = MEMORY[0x263F8EE88];
    uint64_t v18 = v10;
    uint64_t v19 = v80;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v19, v86, v75, v7, v8, v78);
  uint64_t v21 = v109;
  sub_24988CDF0(v109);
  uint64_t v74 = v18;
  swift_retain();
  *(void *)&long long v102 = v82;
  *((void *)&v102 + 1) = v71;
  sub_24988CE30();
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_249AED918();
  uint64_t v67 = v23;
  uint64_t v69 = v22;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v82;
  *(void *)(v24 + 24) = v71;
  *(void *)(v24 + 32) = v83;
  *(void *)(v24 + 40) = v19;
  *(void *)(v24 + 48) = v86;
  *(void *)(v24 + 56) = v75;
  *(void *)(v24 + 64) = v7;
  *(void *)(v24 + 72) = v8;
  *(unsigned char *)(v24 + 80) = v78;
  *(void *)(v24 + 88) = v79;
  *(void *)(v24 + 96) = v21;
  *(void *)(v24 + 104) = v84;
  *(unsigned char *)(v24 + 112) = v76;
  *(void *)(v24 + 120) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v19, v86, v75, v7, v8, v78);
  sub_24988CDF0(v109);
  swift_retain();
  uint64_t v72 = sub_24988D1F4(MEMORY[0x263F8EE80], v16, (void (*)(uint64_t *__return_ptr, void *))sub_2498EC580);
  swift_bridgeObjectRelease();
  swift_release();
  swift_retain();
  sub_24988CD7C(v80, v86, v75, v7, v8, v78);
  uint64_t v25 = v84;
  sub_24988CDF0(v109);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249889FFC(v80, v86, v75, v7, v81, v78);
  sub_24988D7A0(v109);
  swift_release();
  uint64_t v26 = v82;
  v96[0] = v82;
  v96[1] = v71;
  v96[2] = v69;
  v96[3] = v67;
  v96[4] = v18;
  v96[5] = v72;
  v96[6] = v80;
  v96[7] = v86;
  v96[8] = v75;
  v96[9] = v7;
  v96[10] = v81;
  char v97 = v78;
  uint64_t v98 = v79;
  uint64_t v99 = v109;
  uint64_t v100 = v84;
  char v101 = v76;
  uint64_t v27 = *a5;
  uint64_t v28 = *(void *)(*a5 + 16);
  swift_bridgeObjectRetain();
  if (!v28)
  {
    sub_24988E364((uint64_t)v96);
    char v54 = v76;
    uint64_t v51 = v71;
    uint64_t v53 = v18;
    uint64_t v52 = v80;
    uint64_t v50 = v81;
    uint64_t v40 = v7;
    uint64_t v39 = v86;
    uint64_t v41 = v75;
    char v49 = v78;
    uint64_t v55 = v79;
    uint64_t v44 = v109;
LABEL_13:
    uint64_t v47 = v67;
    uint64_t v48 = v72;
    goto LABEL_14;
  }
  uint64_t v29 = sub_2498EF018(v82, v71);
  if ((v30 & 1) == 0)
  {
    sub_24988E364((uint64_t)v96);
    char v54 = v76;
    uint64_t v51 = v71;
    uint64_t v53 = v18;
    uint64_t v52 = v80;
    uint64_t v40 = v7;
    uint64_t v39 = v86;
    uint64_t v41 = v75;
    uint64_t v50 = v81;
    char v49 = v78;
    uint64_t v55 = v79;
    uint64_t v44 = v109;
    uint64_t v25 = v84;
    goto LABEL_13;
  }
  long long v31 = (_OWORD *)(*(void *)(v27 + 56) + (v29 << 7));
  long long v33 = v31[2];
  long long v32 = v31[3];
  long long v34 = v31[1];
  long long v102 = *v31;
  long long v103 = v34;
  long long v104 = v33;
  long long v105 = v32;
  unsigned long long v35 = *(_OWORD *)((char *)v31 + 105);
  long long v37 = v31[5];
  long long v36 = v31[6];
  long long v106 = v31[4];
  long long v107 = v37;
  *(_OWORD *)uint64_t v108 = v36;
  *(_OWORD *)&v108[9] = v35;
  uint64_t v68 = *((void *)&v103 + 1);
  uint64_t v69 = v103;
  uint64_t v38 = *((void *)&v104 + 1);
  uint64_t v63 = *((void *)&v102 + 1);
  uint64_t v64 = v104;
  uint64_t v39 = *((void *)&v105 + 1);
  uint64_t v61 = v102;
  uint64_t v62 = v105;
  uint64_t v40 = *((void *)&v106 + 1);
  uint64_t v41 = v106;
  uint64_t v42 = v37;
  char v43 = BYTE8(v37);
  uint64_t v44 = *(void *)&v108[8];
  uint64_t v60 = v36;
  uint64_t v25 = v35 >> 56;
  char v59 = HIBYTE(v35);
  sub_24988E364((uint64_t)&v102);
  swift_bridgeObjectRetain();
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = v38;
  uint64_t v47 = v68;
  uint64_t v73 = sub_249887060(v45, v46);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v62, v39, v41, v40, v42, v43);
  sub_24988CDF0(v44);
  sub_24988E414((uint64_t)&v102);
  uint64_t v48 = v73;
  char v49 = v43;
  uint64_t v50 = v42;
  uint64_t v52 = v62;
  uint64_t v51 = v63;
  uint64_t v53 = v64;
  char v54 = v59;
  uint64_t v55 = v60;
  uint64_t v26 = v61;
LABEL_14:
  *(void *)&long long v102 = v26;
  *((void *)&v102 + 1) = v51;
  *(void *)&long long v103 = v69;
  *((void *)&v103 + 1) = v47;
  *(void *)&long long v104 = v53;
  *((void *)&v104 + 1) = v48;
  *(void *)&long long v105 = v52;
  *((void *)&v105 + 1) = v39;
  *(void *)&long long v106 = v41;
  *((void *)&v106 + 1) = v40;
  *(void *)&long long v107 = v50;
  BYTE8(v107) = v49;
  *(void *)uint64_t v108 = v55;
  *(void *)&v108[8] = v44;
  *(void *)&v108[16] = v25;
  v108[24] = v54;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v95 = *a5;
  *a5 = 0x8000000000000000;
  sub_249883B44(&v102, v82, v71, isUniquelyReferenced_nonNull_native);
  *a5 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v80, v86, v75, v85, v81, v78);
  uint64_t v57 = v109;
  sub_24988CDF0(v109);
  v87[0] = v82;
  v87[1] = v71;
  v87[2] = v83;
  v87[3] = v80;
  v87[4] = v86;
  v87[5] = v75;
  v87[6] = v85;
  unsigned char v87[7] = v81;
  char v88 = v78;
  uint64_t v89 = v79;
  uint64_t v90 = v57;
  uint64_t v91 = v84;
  char v92 = v76;
  uint64_t v93 = v74;
  uint64_t v94 = v66;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v77 = sub_2498EAC58(v66, (uint64_t)v87);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249889FFC(v80, v86, v75, v85, v81, v78);
  sub_24988D7A0(v109);
  swift_bridgeObjectRelease();
  swift_release();
  char v58 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v95 = *v65;
  *long long v65 = 0x8000000000000000;
  sub_249883C90((uint64_t)v77, v82, v71, v58);
  *long long v65 = v95;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_24988E414((uint64_t)v96);
}

uint64_t sub_2498DD5D4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v5 = result + 56;
  uint64_t v4 = *(void *)(result + 56);
  uint64_t v21 = a2;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v4;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v16 >= v9) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    ++v3;
    if (!v17)
    {
      int64_t v3 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v5 + 8 * v3);
      if (!v17)
      {
        int64_t v3 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v3);
        if (!v17)
        {
          int64_t v3 = v16 + 3;
          if (v16 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v3);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v3 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(v2 + 48) + 24 * v11;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    char v15 = *(unsigned char *)(v12 + 16);
    sub_24988D770(*(void *)v12, v14, v15);
    sub_249924C20((uint64_t)v19, v13, v14, v15);
    uint64_t result = sub_24988D788(v19[0], v19[1], v20);
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    return v21;
  }
  unint64_t v17 = *(void *)(v5 + 8 * v18);
  if (v17)
  {
    int64_t v3 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v3 >= v9) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v3);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_2498DD774()
{
  unint64_t result = 0x73657474656C6170;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x745374756F79616CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498DD818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498EC0B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498DD840(uint64_t a1)
{
  unint64_t v2 = sub_2498EB4B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498DD87C(uint64_t a1)
{
  unint64_t v2 = sub_2498EB4B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ResolvedTheme.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF2B8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v21 = 0;
  uint64_t v22 = qword_2696E2ED8;
  uint64_t v26 = MEMORY[0x263F8EE80];
  uint64_t v27 = 2;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498EB4B0();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF2C8);
    char v20 = 0;
    sub_2498EB504();
    sub_249AEDE08();
    uint64_t v23 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF2E0);
    char v20 = 1;
    sub_2498EB5F8();
    sub_249AEDE08();
    uint64_t v19 = v28;
    uint64_t v24 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF300);
    char v20 = 2;
    sub_2498EB800(&qword_2696DF308, &qword_2696DF300, &qword_2696DDC38, &qword_2696DDB20);
    sub_249AEDE08();
    uint64_t v25 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF310);
    char v20 = 3;
    sub_2498EB800(&qword_2696DF318, &qword_2696DF310, &qword_2696DE460, &qword_2696DE458);
    sub_249AEDE08();
    uint64_t v26 = v28;
    uint64_t v10 = v19;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_2498DC17C(MEMORY[0x263F8EE80], v10, (uint64_t)&v21);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = v22;
    uint64_t v13 = v23;
    uint64_t v14 = v24;
    uint64_t v15 = v25;
    uint64_t v17 = v26;
    uint64_t v16 = v27;
    *a2 = v11;
    a2[1] = v12;
    a2[2] = v13;
    a2[3] = v14;
    a2[4] = v15;
    a2[5] = v17;
    a2[6] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t ResolvedTheme.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF320);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v18 = v1[4];
  uint64_t v19 = v8;
  uint64_t v10 = v1[5];
  uint64_t v16 = v1[6];
  uint64_t v17 = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498EB4B0();
  sub_249AEE468();
  uint64_t v21 = v9;
  char v20 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF2C8);
  sub_2498EB8BC();
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v11 = v18;
    uint64_t v12 = v16;
    uint64_t v21 = v19;
    char v20 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF2E0);
    sub_2498EB9B0();
    sub_249AEDF08();
    uint64_t v21 = v11;
    char v20 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF300);
    sub_2498EBB30(&qword_2696DF348, &qword_2696DF300, &qword_2696DDC00, &qword_2696DDB20);
    sub_249AEDF08();
    uint64_t v13 = swift_bridgeObjectRetain();
    sub_2498DE43C(v13, v12, 3);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2498DDFA0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v12 = a3;
  uint64_t v10 = result;
  uint64_t v11 = a2;
  char v13 = a4;
  if ((qword_249AF6C48[byte_2696E03A8] & a3) == 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3D0);
    if (swift_dynamicCast())
    {
      uint64_t v4 = *((void *)&v8 + 1);
      uint64_t v5 = v9;
      __swift_project_boxed_opaque_existential_2Tm(&v7, *((uint64_t *)&v8 + 1));
      char v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
      uint64_t result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v7);
      if (v6) {
        return result;
      }
    }
    else
    {
      uint64_t v9 = 0;
      long long v7 = 0u;
      long long v8 = 0u;
      sub_2498D60E8((uint64_t)&v7, &qword_2696DF3D8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3E0);
    return sub_249AEDF08();
  }
  return result;
}

uint64_t sub_2498DE0D4(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v10 = a2;
  uint64_t v9 = result;
  char v11 = a3;
  if ((qword_249AF6C48[byte_2696E03A8] & a2) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3D0);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *((void *)&v7 + 1);
      uint64_t v4 = v8;
      __swift_project_boxed_opaque_existential_2Tm(&v6, *((uint64_t *)&v7 + 1));
      char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
      uint64_t result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v6);
      if (v5) {
        return result;
      }
    }
    else
    {
      uint64_t v8 = 0;
      long long v6 = 0u;
      long long v7 = 0u;
      sub_2498D60E8((uint64_t)&v6, &qword_2696DF3D8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3E0);
    return sub_249AEDF08();
  }
  return result;
}

uint64_t sub_2498DE200(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  MEMORY[0x270FA5388](v4);
  long long v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = a2;
  uint64_t v11 = qword_249AF6C48[byte_2696E03A8] & *(void *)(a1 + *(int *)(v8 + 60));
  sub_2498D6084(a1, (uint64_t)v10, &qword_2696DF440);
  if (v11) {
    return sub_2498D60E8((uint64_t)v10, &qword_2696DF440);
  }
  sub_2498D6084((uint64_t)v10, (uint64_t)v6, &qword_2696DF438);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3D0);
  if (!swift_dynamicCast())
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
    sub_2498D60E8((uint64_t)v10, &qword_2696DF440);
    sub_2498D60E8((uint64_t)&v16, &qword_2696DF3D8);
    goto LABEL_7;
  }
  uint64_t v13 = *((void *)&v17 + 1);
  uint64_t v14 = v18;
  __swift_project_boxed_opaque_existential_2Tm(&v16, *((uint64_t *)&v17 + 1));
  char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_2498D60E8((uint64_t)v10, &qword_2696DF440);
  uint64_t result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v16);
  if ((v15 & 1) == 0)
  {
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF448);
    sub_2498EC27C(&qword_2696DF450, &qword_2696DF438);
    return sub_249AEDF08();
  }
  return result;
}

uint64_t sub_2498DE43C(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v10 = result;
  uint64_t v11 = a2;
  char v9 = a3;
  if ((qword_249AF6C48[byte_2696E03A8] & a2) == 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF310);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3D0);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *((void *)&v7 + 1);
      uint64_t v4 = v8;
      __swift_project_boxed_opaque_existential_2Tm(&v6, *((uint64_t *)&v7 + 1));
      char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
      uint64_t result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v6);
      if (v5) {
        return result;
      }
    }
    else
    {
      uint64_t v8 = 0;
      long long v6 = 0u;
      long long v7 = 0u;
      sub_2498D60E8((uint64_t)&v6, &qword_2696DF3D8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF320);
    sub_2498EBB30(&qword_2696DF4C0, &qword_2696DF310, &qword_2696DE498, &qword_2696DE458);
    return sub_249AEDF08();
  }
  return result;
}

uint64_t sub_2498DE598(uint64_t a1, char a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  MEMORY[0x270FA5388](v4);
  long long v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v19 = a2;
  uint64_t v11 = qword_249AF6C48[byte_2696E03A8] & *(void *)(a1 + *(int *)(v8 + 60));
  sub_2498D6084(a1, (uint64_t)v10, &qword_2696DF410);
  if (v11) {
    return sub_2498D60E8((uint64_t)v10, &qword_2696DF410);
  }
  sub_2498D6084((uint64_t)v10, (uint64_t)v6, &qword_2696DF408);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3D0);
  if (!swift_dynamicCast())
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
    sub_2498D60E8((uint64_t)v10, &qword_2696DF410);
    sub_2498D60E8((uint64_t)&v16, &qword_2696DF3D8);
    goto LABEL_7;
  }
  uint64_t v13 = *((void *)&v17 + 1);
  uint64_t v14 = v18;
  __swift_project_boxed_opaque_existential_2Tm(&v16, *((uint64_t *)&v17 + 1));
  char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_2498D60E8((uint64_t)v10, &qword_2696DF410);
  uint64_t result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v16);
  if ((v15 & 1) == 0)
  {
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF418);
    sub_2498EC27C(&qword_2696DF420, &qword_2696DF408);
    return sub_249AEDF08();
  }
  return result;
}

uint64_t sub_2498DE7D4(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v10 = result;
  uint64_t v11 = a2;
  char v9 = a3;
  if ((qword_249AF6C48[byte_2696E03A8] & a2) == 0)
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF458);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3D0);
    if (swift_dynamicCast())
    {
      uint64_t v3 = *((void *)&v7 + 1);
      uint64_t v4 = v8;
      __swift_project_boxed_opaque_existential_2Tm(&v6, *((uint64_t *)&v7 + 1));
      char v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
      uint64_t result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v6);
      if (v5) {
        return result;
      }
    }
    else
    {
      uint64_t v8 = 0;
      long long v6 = 0u;
      long long v7 = 0u;
      sub_2498D60E8((uint64_t)&v6, &qword_2696DF3D8);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF460);
    sub_2498EC370();
    return sub_249AEDF08();
  }
  return result;
}

uint64_t sub_2498DE910@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ResolvedTheme.init(from:)(a1, a2);
}

uint64_t sub_2498DE928(void *a1)
{
  return ResolvedTheme.encode(to:)(a1);
}

uint64_t *ResolvedTheme.defaultWallpaperID(for:)@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 40);
  if (!*(void *)(v4 + 16)) {
    goto LABEL_7;
  }
  uint64_t v6 = *result;
  uint64_t v5 = result[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_2498EF018(v6, v5);
  if ((v8 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    uint64_t result = (uint64_t *)swift_bridgeObjectRelease();
LABEL_7:
    *a2 = 0;
    a2[1] = 0;
    return result;
  }
  char v9 = (void *)(*(void *)(v4 + 56) + 16 * v7);
  uint64_t v10 = v9[1];
  *a2 = *v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  return (uint64_t *)swift_bridgeObjectRelease();
}

unint64_t ResolvedTheme.defaultPalette(for:)@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  long long v5 = *((_OWORD *)v2 + 2);
  uint64_t v6 = v2[4];
  if (!*(void *)(v6 + 16)) {
    goto LABEL_12;
  }
  long long v30 = v5;
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = *v3;
  uint64_t v10 = v3[1];
  long long v29 = *((_OWORD *)v3 + 1);
  uint64_t v11 = v3[6];
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_2498EF018(v8, v7);
  if ((v13 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v14 = (uint64_t *)(*(void *)(v6 + 56) + 16 * v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&long long v33 = v9;
  *((void *)&v33 + 1) = v10;
  long long v34 = v29;
  long long v35 = v30;
  *(void *)&long long v36 = v11;
  uint64_t v31 = v8;
  uint64_t v32 = v7;
  long long v17 = ResolvedTheme.palettes(for:)(&v31);
  if (!v17)
  {
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    sub_2498EBBEC(&v33);
    return sub_249882788((uint64_t)&v33, (uint64_t)a2, &qword_2696DF350);
  }
  uint64_t v18 = (uint64_t)v17;
  uint64_t v31 = v16;
  uint64_t v32 = v15;
  MEMORY[0x270FA5388](v17);
  void v28[2] = &v31;
  unint64_t result = sub_2498DCB58((uint64_t (*)(_OWORD *))sub_249896AEC, (uint64_t)v28, v18);
  if (v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(v18 + 16))
  {
    uint64_t v21 = (_OWORD *)(v18 + (result << 7));
    long long v22 = v21[2];
    long long v23 = v21[3];
    long long v24 = v21[5];
    long long v35 = v21[4];
    long long v36 = v24;
    long long v33 = v22;
    long long v34 = v23;
    long long v25 = v21[6];
    long long v26 = v21[7];
    long long v27 = v21[8];
    *(_OWORD *)&v39[9] = *(_OWORD *)((char *)v21 + 137);
    long long v38 = v26;
    *(_OWORD *)uint64_t v39 = v27;
    long long v37 = v25;
    memmove(a2, v21 + 2, 0x79uLL);
    nullsub_1(a2);
    sub_24988E364((uint64_t)&v33);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_2498DEBE0(void *a1, char a2, void *a3, uint64_t *a4)
{
  uint64_t v6 = a1[2];
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_24;
  }
  uint64_t v8 = a1[6];
  uint64_t v7 = a1[7];
  uint64_t v10 = a1[4];
  uint64_t v9 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v9) {
    goto LABEL_24;
  }
  uint64_t v11 = (void *)*a3;
  unint64_t v13 = sub_2498EF018(v10, v9);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  char v17 = v12;
  if (v11[3] >= v16)
  {
    if (a2)
    {
      if ((v12 & 1) == 0) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_2498DFA34(a4);
      if ((v17 & 1) == 0) {
        goto LABEL_13;
      }
    }
LABEL_10:
    char v20 = (void *)swift_allocError();
    swift_willThrow();
    id v21 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_30;
  }
  sub_2498E35D4(v16, a2 & 1, a4);
  uint64_t v18 = sub_2498EF018(v10, v9);
  if ((v17 & 1) != (v19 & 1))
  {
LABEL_29:
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB18);
    sub_249AEE2D8();
    __break(1u);
LABEL_30:
    sub_249AEDA78();
    sub_249AED1E8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB18);
    sub_249AEDC08();
    sub_249AED1E8();
    sub_249AEDC58();
    __break(1u);
    return;
  }
  unint64_t v13 = v18;
  if (v17) {
    goto LABEL_10;
  }
LABEL_13:
  long long v22 = (void *)*a3;
  *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
  long long v23 = (void *)(v22[6] + 16 * v13);
  *long long v23 = v10;
  v23[1] = v9;
  long long v24 = (void *)(v22[7] + 16 * v13);
  *long long v24 = v8;
  v24[1] = v7;
  uint64_t v25 = v22[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  v22[2] = v27;
  if (v6 != 1)
  {
    uint64_t v28 = a1 + 11;
    unint64_t v29 = 1;
    while (v29 < a1[2])
    {
      uint64_t v31 = *(v28 - 1);
      uint64_t v30 = *v28;
      uint64_t v33 = *(v28 - 3);
      uint64_t v32 = *(v28 - 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v32) {
        goto LABEL_24;
      }
      long long v34 = (void *)*a3;
      unint64_t v35 = sub_2498EF018(v33, v32);
      uint64_t v37 = v34[2];
      BOOL v38 = (v36 & 1) == 0;
      BOOL v26 = __OFADD__(v37, v38);
      uint64_t v39 = v37 + v38;
      if (v26) {
        goto LABEL_26;
      }
      char v40 = v36;
      if (v34[3] < v39)
      {
        sub_2498E35D4(v39, 1, a4);
        unint64_t v35 = sub_2498EF018(v33, v32);
        if ((v40 & 1) != (v41 & 1)) {
          goto LABEL_29;
        }
      }
      if (v40) {
        goto LABEL_10;
      }
      uint64_t v42 = (void *)*a3;
      *(void *)(*a3 + 8 * (v35 >> 6) + 64) |= 1 << v35;
      char v43 = (void *)(v42[6] + 16 * v35);
      void *v43 = v33;
      v43[1] = v32;
      uint64_t v44 = (void *)(v42[7] + 16 * v35);
      *uint64_t v44 = v31;
      v44[1] = v30;
      uint64_t v45 = v42[2];
      BOOL v26 = __OFADD__(v45, 1);
      uint64_t v46 = v45 + 1;
      if (v26) {
        goto LABEL_27;
      }
      ++v29;
      v42[2] = v46;
      v28 += 4;
      if (v6 == v29) {
        goto LABEL_24;
      }
    }
    goto LABEL_28;
  }
LABEL_24:
  swift_bridgeObjectRelease_n();
}

uint64_t sub_2498DEFC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v51 = a1;
  uint64_t v52 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v53 = v8;
  uint64_t v54 = 0;
  uint64_t v55 = v11 & v9;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_249AA5EFC(&v48);
  uint64_t v12 = v50;
  if (!v50) {
    goto LABEL_27;
  }
  long long v13 = v48;
  uint64_t v14 = v49;
  BOOL v15 = (void *)*a5;
  unint64_t v17 = sub_2498EF034(v48, *((uint64_t *)&v48 + 1), v49);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v21 = v16;
  if (v15[3] >= v20)
  {
    if (a4)
    {
      long long v24 = (void *)*a5;
      if (v16) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_2498DFDFC();
      long long v24 = (void *)*a5;
      if (v21) {
        goto LABEL_12;
      }
    }
LABEL_14:
    v24[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v26 = v24[6] + 24 * v17;
    *(_OWORD *)uint64_t v26 = v13;
    *(unsigned char *)(v26 + 16) = v14;
    *(void *)(v24[7] + 8 * v17) = v12;
    uint64_t v27 = v24[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    _OWORD v24[2] = v29;
LABEL_16:
    sub_249AA5EFC(&v48);
    for (uint64_t i = v50; v50; uint64_t i = v50)
    {
      long long v32 = v48;
      uint64_t v33 = v49;
      long long v34 = (void *)*a5;
      unint64_t v36 = sub_2498EF034(v48, *((uint64_t *)&v48 + 1), v49);
      uint64_t v37 = v34[2];
      BOOL v38 = (v35 & 1) == 0;
      uint64_t v39 = v37 + v38;
      if (__OFADD__(v37, v38)) {
        goto LABEL_28;
      }
      char v40 = v35;
      if (v34[3] < v39)
      {
        sub_2498E3D54(v39, 1);
        unint64_t v41 = sub_2498EF034(v32, *((uint64_t *)&v32 + 1), v33);
        if ((v40 & 1) != (v42 & 1)) {
          goto LABEL_30;
        }
        unint64_t v36 = v41;
      }
      char v43 = (void *)*a5;
      if (v40)
      {
        sub_24988D788(v32, *((uint64_t *)&v32 + 1), v33);
        uint64_t v31 = v43[7];
        swift_bridgeObjectRelease();
        *(void *)(v31 + 8 * v36) = i;
      }
      else
      {
        v43[(v36 >> 6) + 8] |= 1 << v36;
        uint64_t v44 = v43[6] + 24 * v36;
        *(_OWORD *)uint64_t v44 = v32;
        *(unsigned char *)(v44 + 16) = v33;
        *(void *)(v43[7] + 8 * v36) = i;
        uint64_t v45 = v43[2];
        BOOL v28 = __OFADD__(v45, 1);
        uint64_t v46 = v45 + 1;
        if (v28) {
          goto LABEL_29;
        }
        v43[2] = v46;
      }
      sub_249AA5EFC(&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_249882CD8();
    return swift_release();
  }
  sub_2498E3D54(v20, a4 & 1);
  unint64_t v22 = sub_2498EF034(v13, *((uint64_t *)&v13 + 1), v14);
  if ((v21 & 1) == (v23 & 1))
  {
    unint64_t v17 = v22;
    long long v24 = (void *)*a5;
    if ((v21 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_24988D788(v13, *((uint64_t *)&v13 + 1), v14);
    uint64_t v25 = v24[7];
    swift_bridgeObjectRelease();
    *(void *)(v25 + 8 * v17) = v12;
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

void *sub_2498DF2EC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF518);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_249882C34(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    char v21 = (void *)(*(void *)(v4 + 48) + v16);
    *char v21 = v19;
    v21[1] = v18;
    sub_249882BCC(v26, *(void *)(v4 + 56) + v20);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2498DF4D8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF510);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    char v24 = *(unsigned char *)(v21 + 16);
    uint64_t v25 = *(void *)(v21 + 24);
    uint64_t v26 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v26 = v19;
    v26[1] = v18;
    uint64_t v27 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v27 = v22;
    *(void *)(v27 + 8) = v23;
    *(unsigned char *)(v27 + 16) = v24;
    *(void *)(v27 + 24) = v25;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498DF6A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498DF860()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v30 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v30 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v30);
    ++v9;
    if (!v31)
    {
      int64_t v9 = v30 + 1;
      if (v30 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v31 = *(void *)(v6 + 8 * v9);
      if (!v31) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v31 - 1) & v31;
    unint64_t v15 = __clz(__rbit64(v31)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 88 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    char v22 = *(unsigned char *)(v21 + 80);
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    long long v24 = *(_OWORD *)v21;
    long long v25 = *(_OWORD *)(v21 + 16);
    long long v26 = *(_OWORD *)(v21 + 32);
    long long v27 = *(_OWORD *)(v21 + 48);
    long long v28 = *(_OWORD *)(v21 + 64);
    *unint64_t v23 = v19;
    v23[1] = v18;
    uint64_t v29 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v29 = v24;
    *(_OWORD *)(v29 + 16) = v25;
    *(_OWORD *)(v29 + 32) = v26;
    *(_OWORD *)(v29 + 48) = v27;
    *(_OWORD *)(v29 + 64) = v28;
    *(unsigned char *)(v29 + 80) = v22;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v32 = v30 + 2;
  if (v32 >= v13) {
    goto LABEL_26;
  }
  unint64_t v31 = *(void *)(v6 + 8 * v32);
  if (v31)
  {
    int64_t v9 = v32;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v31 = *(void *)(v6 + 8 * v9);
    ++v32;
    if (v31) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498DFA34(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_249AEDC88();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v14) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v7 + 8 * v26);
    ++v10;
    if (!v27)
    {
      int64_t v10 = v26 + 1;
      if (v26 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v7 + 8 * v10);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v27 - 1) & v27;
    unint64_t v16 = __clz(__rbit64(v27)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 48) + v17);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    uint64_t v21 = (uint64_t *)(*(void *)(v3 + 56) + v17);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    long long v24 = (void *)(*(void *)(v5 + 48) + v17);
    *long long v24 = v20;
    v24[1] = v19;
    long long v25 = (void *)(*(void *)(v5 + 56) + v17);
    *long long v25 = v22;
    v25[1] = v23;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v14) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v7 + 8 * v28);
  if (v27)
  {
    int64_t v10 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v7 + 8 * v10);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498DFBE8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4E8);
  char v35 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_249AEDC88();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v35 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v32 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v32 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v32);
    ++v8;
    if (!v33)
    {
      int64_t v8 = v32 + 1;
      if (v32 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v33 = *(void *)(v5 + 8 * v8);
      if (!v33) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v33 - 1) & v33;
    unint64_t v14 = __clz(__rbit64(v33)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 72 * v14;
    uint64_t v16 = *(void *)(v1 + 48) + 72 * v14;
    uint64_t v17 = *(void *)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void *)(v16 + 24);
    uint64_t v21 = *(void *)(v16 + 32);
    uint64_t v22 = *(void *)(v16 + 40);
    char v23 = *(unsigned char *)(v16 + 48);
    uint64_t v25 = *(void *)(v16 + 56);
    uint64_t v24 = *(void *)(v16 + 64);
    uint64_t v26 = 16 * v14;
    unint64_t v27 = (uint64_t *)(*(void *)(v1 + 56) + v26);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    uint64_t v30 = *(void *)(v3 + 48) + v15;
    *(void *)uint64_t v30 = v17;
    *(void *)(v30 + 8) = v18;
    *(void *)(v30 + 16) = v19;
    *(void *)(v30 + 24) = v20;
    *(void *)(v30 + 32) = v21;
    *(void *)(v30 + 40) = v22;
    *(unsigned char *)(v30 + 48) = v23;
    *(void *)(v30 + 56) = v25;
    *(void *)(v30 + 64) = v24;
    unint64_t v31 = (void *)(*(void *)(v3 + 56) + v26);
    *unint64_t v31 = v28;
    v31[1] = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v34 = v32 + 2;
  if (v34 >= v12) {
    goto LABEL_26;
  }
  unint64_t v33 = *(void *)(v5 + 8 * v34);
  if (v33)
  {
    int64_t v8 = v34;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v33 = *(void *)(v5 + 8 * v8);
    ++v34;
    if (v33) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498DFDFC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    char v23 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v22 = *(void *)v17;
    *(void *)(v22 + 8) = v19;
    *(unsigned char *)(v22 + 16) = v23;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    sub_24988D770(v18, v19, v23);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498DFFC0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDDF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 24 * v15;
    uint64_t v18 = *(void *)v17;
    char v19 = *(unsigned char *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    uint64_t v21 = 8 * v15;
    uint64_t v22 = *(void *)(*(void *)(v2 + 56) + v21);
    uint64_t v23 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v23 = v18;
    *(unsigned char *)(v23 + 8) = v19;
    *(void *)(v23 + 16) = v20;
    *(void *)(*(void *)(v4 + 56) + v21) = v22;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E0184()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E033C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4D0);
  unint64_t v36 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_249AEDC88();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v35 = v3;
    uint64_t result = (void *)swift_release();
    *unint64_t v36 = v35;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 64);
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v40 = v3;
  if (v6)
  {
    uint64_t result = memmove(result, __src, 8 * v5);
    uint64_t v3 = v40;
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v39 = v1;
  while (1)
  {
    if (v10)
    {
      uint64_t v41 = (v10 - 1) & v10;
      int64_t v42 = v7;
      unint64_t v11 = __clz(__rbit64(v10)) | (v7 << 6);
      uint64_t v12 = v39;
      uint64_t v3 = v40;
      goto LABEL_12;
    }
    int64_t v31 = v7 + 1;
    uint64_t v12 = v39;
    uint64_t v3 = v40;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v38) {
      goto LABEL_26;
    }
    unint64_t v32 = *((void *)__src + v31);
    int64_t v33 = v7 + 1;
    if (!v32)
    {
      int64_t v33 = v7 + 2;
      if (v7 + 2 >= v38) {
        goto LABEL_26;
      }
      unint64_t v32 = *((void *)__src + v33);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    uint64_t v41 = (v32 - 1) & v32;
    int64_t v42 = v33;
    unint64_t v11 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_12:
    uint64_t v13 = *(void *)(v12 + 56);
    uint64_t v14 = 112 * v11;
    uint64_t v15 = *(void *)(v12 + 48) + 112 * v11;
    uint64_t v16 = *(void *)(v15 + 24);
    uint64_t v17 = *(void *)(v15 + 32);
    uint64_t v18 = *(void *)(v15 + 40);
    uint64_t v19 = *(void *)(v15 + 48);
    uint64_t v20 = *(void *)(v15 + 56);
    uint64_t v21 = *(void *)(v15 + 72);
    uint64_t v22 = *(void *)(v15 + 80);
    uint64_t v23 = *(void *)(v15 + 88);
    char v24 = *(unsigned char *)(v15 + 96);
    uint64_t v25 = *(void *)(v15 + 104);
    uint64_t v26 = 8 * v11;
    uint64_t v27 = *(void *)(v13 + v26);
    uint64_t v28 = *(void *)(v3 + 48) + v14;
    long long v29 = *(_OWORD *)(v15 + 8);
    char v30 = *(unsigned char *)(v15 + 64);
    *(void *)uint64_t v28 = *(void *)v15;
    *(_OWORD *)(v28 + 8) = v29;
    *(void *)(v28 + 24) = v16;
    *(void *)(v28 + 32) = v17;
    *(void *)(v28 + 40) = v18;
    *(void *)(v28 + 48) = v19;
    *(void *)(v28 + 56) = v20;
    *(unsigned char *)(v28 + 64) = v30;
    *(void *)(v28 + 72) = v21;
    *(void *)(v28 + 80) = v22;
    *(void *)(v28 + 88) = v23;
    *(unsigned char *)(v28 + 96) = v24;
    *(void *)(v28 + 104) = v25;
    *(void *)(*(void *)(v3 + 56) + v26) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24988CD7C(v16, v17, v18, v19, v20, v30);
    sub_24988CDF0(v22);
    swift_retain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    unint64_t v10 = v41;
    int64_t v7 = v42;
  }
  uint64_t v34 = v7 + 3;
  if (v7 + 3 >= v38) {
    goto LABEL_26;
  }
  unint64_t v32 = *((void *)__src + v34);
  if (v32)
  {
    int64_t v33 = v7 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v38) {
      goto LABEL_26;
    }
    unint64_t v32 = *((void *)__src + v33);
    ++v34;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E05D4()
{
  return sub_2498E07FC(&qword_2696DF3B8);
}

void *sub_2498E05E0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v36 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v36 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v36);
    ++v9;
    if (!v37)
    {
      int64_t v9 = v36 + 1;
      if (v36 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v37 = *(void *)(v6 + 8 * v9);
      if (!v37) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v37 - 1) & v37;
    unint64_t v15 = __clz(__rbit64(v37)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 56);
    uint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    unint64_t v21 = v15 << 7;
    long long v23 = *(_OWORD *)(v17 + v21 + 80);
    long long v22 = *(_OWORD *)(v17 + v21 + 96);
    long long v24 = *(_OWORD *)(v17 + v21 + 64);
    *(_OWORD *)&v45[9] = *(_OWORD *)(v17 + v21 + 105);
    long long v44 = v23;
    *(_OWORD *)uint64_t v45 = v22;
    long long v43 = v24;
    long long v26 = *(_OWORD *)(v17 + v21);
    long long v25 = *(_OWORD *)(v17 + v21 + 16);
    long long v27 = *(_OWORD *)(v17 + v21 + 48);
    long long v41 = *(_OWORD *)(v17 + v21 + 32);
    long long v42 = v27;
    long long v39 = v26;
    long long v40 = v25;
    uint64_t v28 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v28 = v20;
    v28[1] = v19;
    long long v29 = (_OWORD *)(*(void *)(v4 + 56) + v21);
    long long v30 = v39;
    long long v31 = v40;
    long long v32 = v42;
    _OWORD v29[2] = v41;
    v29[3] = v32;
    *long long v29 = v30;
    v29[1] = v31;
    long long v33 = v43;
    long long v34 = v44;
    long long v35 = *(_OWORD *)v45;
    *(_OWORD *)((char *)v29 + 105) = *(_OWORD *)&v45[9];
    v29[5] = v34;
    void v29[6] = v35;
    _OWORD v29[4] = v33;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_24988E364((uint64_t)&v39);
  }
  int64_t v38 = v36 + 2;
  if (v38 >= v13) {
    goto LABEL_26;
  }
  unint64_t v37 = *(void *)(v6 + 8 * v38);
  if (v37)
  {
    int64_t v9 = v38;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v37 = *(void *)(v6 + 8 * v9);
    ++v38;
    if (v37) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E07F0()
{
  return sub_2498E07FC(&qword_2696DF4F8);
}

void *sub_2498E07FC(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_249AEDC88();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    long long v22 = (void *)(*(void *)(v5 + 48) + v17);
    *long long v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E09AC()
{
  uint64_t v1 = type metadata accessor for Component();
  uint64_t v27 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4B8);
  unint64_t v24 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_249AEDC88();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *unint64_t v24 = v6;
    return result;
  }
  uint64_t result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v25 = v4 + 64;
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v4 + 64);
  int64_t v26 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_9:
    uint64_t v15 = 16 * v14;
    unint64_t v16 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = *(void *)(v27 + 72) * v14;
    sub_2498EC5EC(*(void *)(v4 + 56) + v19, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v20 = (void *)(*(void *)(v6 + 48) + v15);
    *uint64_t v20 = v17;
    v20[1] = v18;
    sub_2498EC6B0((uint64_t)v3, *(void *)(v6 + 56) + v19, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_2498E0C30()
{
  return sub_2498E11E8((uint64_t (*)(void))type metadata accessor for RequestContentModel, &qword_2696DF380, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
}

void *sub_2498E0C64()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4A0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_249AEDC88();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v23 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v14) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v25 + 72) * v16;
    sub_2498D6084(*(void *)(v5 + 48) + v17, (uint64_t)v4, &qword_2696DDB10);
    char v18 = *(unsigned char *)(*(void *)(v5 + 56) + v16);
    uint64_t result = (void *)sub_249882788((uint64_t)v4, *(void *)(v7 + 48) + v17, &qword_2696DDB10);
    *(unsigned char *)(*(void *)(v7 + 56) + v16) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2498E0ED4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v37 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  int64_t v36 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4B0);
  long long v33 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_249AEDC88();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v39 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v32 = v39;
    long long v31 = v33;
LABEL_25:
    *long long v31 = v32;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v39;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  uint64_t v38 = v3;
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v34 = v3 + 64;
  int64_t v35 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = (uint64_t)v36;
  uint64_t v14 = v39;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v40 = v9;
      unint64_t v16 = v15 | (v9 << 6);
      uint64_t v17 = v38;
      goto LABEL_9;
    }
    int64_t v27 = v9 + 1;
    uint64_t v17 = v38;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v27 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v27);
    int64_t v29 = v9 + 1;
    if (!v28)
    {
      int64_t v29 = v9 + 2;
      if (v9 + 2 >= v35) {
        goto LABEL_23;
      }
      unint64_t v28 = *(void *)(v34 + 8 * v29);
      if (!v28) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v28 - 1) & v28;
    int64_t v40 = v29;
    unint64_t v16 = __clz(__rbit64(v28)) + (v29 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v37 + 72) * v16;
    sub_2498D6084(*(void *)(v17 + 48) + v18, v13, &qword_2696DDB10);
    uint64_t v19 = *(void *)(v17 + 56);
    uint64_t v20 = 32 * v16;
    int64_t v21 = (uint64_t *)(v19 + 32 * v16);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v24 = v21[2];
    unsigned __int8 v25 = *((unsigned char *)v21 + 24);
    sub_249882788(v13, *(void *)(v14 + 48) + v18, &qword_2696DDB10);
    uint64_t v26 = *(void *)(v14 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(void *)(v26 + 16) = v24;
    *(unsigned char *)(v26 + 24) = v25;
    swift_retain();
    uint64_t result = (void *)sub_2498EC438(v23, v24, v25);
    int64_t v9 = v40;
  }
  uint64_t v30 = v9 + 3;
  if (v9 + 3 >= v35)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    long long v31 = v33;
    uint64_t v32 = v39;
    goto LABEL_25;
  }
  unint64_t v28 = *(void *)(v34 + 8 * v30);
  if (v28)
  {
    int64_t v29 = v9 + 3;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v29 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v29 >= v35) {
      goto LABEL_23;
    }
    unint64_t v28 = *(void *)(v34 + 8 * v29);
    ++v30;
    if (v28) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2498E11B4()
{
  return sub_2498E11E8(type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, &qword_2696DF4A8, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

void *sub_2498E11E8(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3;
  uint64_t v7 = a1(0);
  uint64_t v34 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  int64_t v9 = (char *)&v29 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *v3;
  uint64_t v14 = sub_249AEDC88();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v6 = v15;
    return result;
  }
  uint64_t v30 = v6;
  uint64_t result = (void *)(v14 + 64);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  if (v15 != v13 || (unint64_t)result >= v13 + 64 + 8 * v17) {
    uint64_t result = memmove(result, (const void *)(v13 + 64), 8 * v17);
  }
  int64_t v18 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v19 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & *(void *)(v13 + 64);
  uint64_t v31 = v13 + 64;
  int64_t v32 = (unint64_t)(v19 + 63) >> 6;
  while (1)
  {
    if (v21)
    {
      unint64_t v22 = __clz(__rbit64(v21));
      v21 &= v21 - 1;
      unint64_t v23 = v22 | (v18 << 6);
      goto LABEL_9;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v32) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v26);
    ++v18;
    if (!v27)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v31 + 8 * v18);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v23 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_9:
    unint64_t v24 = *(void *)(v33 + 72) * v23;
    sub_2498D6084(*(void *)(v13 + 48) + v24, (uint64_t)v12, &qword_2696DDB10);
    unint64_t v25 = *(void *)(v34 + 72) * v23;
    sub_2498EC5EC(*(void *)(v13 + 56) + v25, (uint64_t)v9, a3);
    sub_249882788((uint64_t)v12, *(void *)(v15 + 48) + v24, &qword_2696DDB10);
    uint64_t result = (void *)sub_2498EC6B0((uint64_t)v9, *(void *)(v15 + 56) + v25, a3);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v32)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v6 = v30;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v31 + 8 * v28);
  if (v27)
  {
    int64_t v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v32) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v31 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_2498E14F8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF498);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v23 = v19;
    v23[1] = v18;
    unint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *unint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E16B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF490);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2498E1844()
{
  return sub_2498E1FE8(&qword_2696DF480);
}

void *sub_2498E1850()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF488);
  int64_t v32 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_249AEDC88();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *int64_t v32 = v3;
    return result;
  }
  uint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    uint64_t result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v34 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v11 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v12 = v11 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v33) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v29);
    ++v7;
    if (!v30)
    {
      int64_t v7 = v29 + 1;
      if (v29 + 1 >= v33) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v34 + 8 * v7);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v30 - 1) & v30;
    unint64_t v12 = __clz(__rbit64(v30)) + (v7 << 6);
LABEL_12:
    uint64_t v13 = 16 * v12;
    unint64_t v14 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v12);
    uint64_t v16 = *v14;
    uint64_t v15 = v14[1];
    unint64_t v17 = v12 << 6;
    unint64_t v18 = *(void *)(v1 + 56) + v17;
    int64_t v19 = *(void **)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    uint64_t v21 = *(void **)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v23 = *(void *)(v18 + 40);
    uint64_t v24 = *(void *)(v18 + 48);
    char v25 = *(unsigned char *)(v18 + 56);
    unint64_t v26 = (void *)(*(void *)(v3 + 48) + v13);
    char v27 = *(unsigned char *)(v18 + 32);
    *unint64_t v26 = v16;
    v26[1] = v15;
    unint64_t v28 = *(void *)(v3 + 56) + v17;
    *(void *)unint64_t v28 = v19;
    *(void *)(v28 + 8) = v20;
    *(void *)(v28 + 16) = v21;
    *(void *)(v28 + 24) = v22;
    *(unsigned char *)(v28 + 32) = v27;
    *(void *)(v28 + 40) = v23;
    *(void *)(v28 + 48) = v24;
    *(unsigned char *)(v28 + 56) = v25;
    swift_bridgeObjectRetain();
    sub_24988247C(v19, v20, v21, v22, v27);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v33) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v34 + 8 * v31);
  if (v30)
  {
    int64_t v7 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v7 >= v33) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v34 + 8 * v7);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E1A6C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF478);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v22 = *(void *)v21;
    uint64_t v23 = *(void *)(v21 + 8);
    uint64_t v24 = *(void *)(v21 + 16);
    LOBYTE(v21) = *(unsigned char *)(v21 + 24);
    char v25 = (void *)(*(void *)(v4 + 48) + v16);
    *char v25 = v19;
    v25[1] = v18;
    uint64_t v26 = *(void *)(v4 + 56) + v20;
    *(void *)uint64_t v26 = v22;
    *(void *)(v26 + 8) = v23;
    *(void *)(v26 + 16) = v24;
    *(unsigned char *)(v26 + 24) = v21;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E1C3C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF370);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    LOBYTE(v17) = *(unsigned char *)(v17 + 24);
    uint64_t v21 = 16 * v15;
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    long long v23 = *(_OWORD *)(*(void *)(v2 + 56) + v21);
    *(void *)uint64_t v22 = v19;
    *(void *)(v22 + 8) = v18;
    *(void *)(v22 + 16) = v20;
    *(unsigned char *)(v22 + 24) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v21) = v23;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_unknownObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E1E14()
{
  return sub_2498E2598(&qword_2696DF3C0);
}

void *sub_2498E1E20()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    char v22 = *(unsigned char *)(v19 + 16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v23 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v23 = v20;
    *(void *)(v23 + 8) = v21;
    *(unsigned char *)(v23 + 16) = v22;
    uint64_t result = (void *)sub_24988D770(v20, v21, v22);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_2498E1FDC()
{
  return sub_2498E1FE8(&qword_2696DF398);
}

id sub_2498E1FE8(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_249AEDC88();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void **)(*(void *)(v3 + 56) + v20);
    char v22 = (void *)(*(void *)(v5 + 48) + v17);
    *char v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = v21;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E2194()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v27 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v27);
    ++v9;
    if (!v28)
    {
      int64_t v9 = v27 + 1;
      if (v27 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v6 + 8 * v9);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v28 - 1) & v28;
    unint64_t v15 = __clz(__rbit64(v28)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 48 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void **)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    char v22 = *(void **)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 40);
    char v25 = *(unsigned char *)(v19 + 32);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v26 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v26 = v20;
    *(void *)(v26 + 8) = v21;
    *(void *)(v26 + 16) = v22;
    *(void *)(v26 + 24) = v23;
    *(unsigned char *)(v26 + 32) = v25;
    *(void *)(v26 + 40) = v24;
    id result = (void *)sub_24988247C(v20, v21, v22, v23, v25);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v13) {
    goto LABEL_26;
  }
  unint64_t v28 = *(void *)(v6 + 8 * v29);
  if (v28)
  {
    int64_t v9 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v6 + 8 * v9);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E2360()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3A0);
  int64_t v36 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_249AEDC88();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v36 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v5);
  }
  uint64_t v37 = v1 + 64;
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v7 << 6);
      goto LABEL_12;
    }
    int64_t v33 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v11) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v37 + 8 * v33);
    ++v7;
    if (!v34)
    {
      int64_t v7 = v33 + 1;
      if (v33 + 1 >= v11) {
        goto LABEL_26;
      }
      unint64_t v34 = *(void *)(v37 + 8 * v7);
      if (!v34) {
        break;
      }
    }
LABEL_25:
    unint64_t v10 = (v34 - 1) & v34;
    unint64_t v13 = __clz(__rbit64(v34)) + (v7 << 6);
LABEL_12:
    uint64_t v14 = 16 * v13;
    unint64_t v15 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v13);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = 88 * v13;
    uint64_t v19 = *(void *)(v1 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    uint64_t v25 = *(void *)(v19 + 40);
    uint64_t v26 = *(void *)(v19 + 48);
    uint64_t v27 = *(void *)(v19 + 56);
    char v28 = *(unsigned char *)(v19 + 64);
    uint64_t v30 = *(void *)(v19 + 72);
    uint64_t v29 = *(void *)(v19 + 80);
    int64_t v31 = (void *)(*(void *)(v3 + 48) + v14);
    *int64_t v31 = v16;
    v31[1] = v17;
    uint64_t v32 = *(void *)(v3 + 56) + v18;
    *(void *)uint64_t v32 = v20;
    *(void *)(v32 + 8) = v21;
    *(void *)(v32 + 16) = v22;
    *(void *)(v32 + 24) = v23;
    *(void *)(v32 + 32) = v24;
    *(void *)(v32 + 40) = v25;
    *(void *)(v32 + 48) = v26;
    *(void *)(v32 + 56) = v27;
    *(unsigned char *)(v32 + 64) = v28;
    *(void *)(v32 + 72) = v30;
    *(void *)(v32 + 80) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v35 = v33 + 2;
  if (v35 >= v11) {
    goto LABEL_26;
  }
  unint64_t v34 = *(void *)(v37 + 8 * v35);
  if (v34)
  {
    int64_t v7 = v35;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v7 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v7 >= v11) {
      goto LABEL_26;
    }
    unint64_t v34 = *(void *)(v37 + 8 * v7);
    ++v35;
    if (v34) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E258C()
{
  return sub_2498E2598(&qword_2696DF390);
}

void *sub_2498E2598(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_249AEDC88();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = (void *)(*(void *)(v3 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    uint64_t v20 = 8 * v16;
    uint64_t v21 = *(void *)(*(void *)(v3 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v5 + 48) + v17);
    *uint64_t v22 = *v18;
    v22[1] = v19;
    *(void *)(*(void *)(v5 + 56) + v20) = v21;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_2498E2748()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF400);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDC88();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2498E28F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF518);
  char v37 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    int64_t v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    int64_t v25 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v37)
    {
      sub_249882BCC(v25, (uint64_t)v38);
    }
    else
    {
      sub_249882C34((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *unint64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_249882BCC(v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E2C20(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF510);
  char v42 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    uint64_t v23 = v40;
    unint64_t v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = v40[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = v40[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 32 * v21;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    char v43 = *(unsigned char *)(v33 + 16);
    uint64_t v36 = *(void *)(v33 + 24);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(void *)uint64_t v19 = v34;
    *(void *)(v19 + 8) = v35;
    *(unsigned char *)(v19 + 16) = v43;
    *(void *)(v19 + 24) = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  uint64_t v23 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E2F60(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3F8);
  char v36 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E3278(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3F0);
  char v39 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 88 * v21;
    long long v43 = *(_OWORD *)(v33 + 32);
    long long v44 = *(_OWORD *)(v33 + 16);
    long long v42 = *(_OWORD *)(v33 + 48);
    long long v40 = *(_OWORD *)v33;
    long long v41 = *(_OWORD *)(v33 + 64);
    char v34 = *(unsigned char *)(v33 + 80);
    if ((v39 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 88 * v17;
    *(_OWORD *)uint64_t v19 = v40;
    *(_OWORD *)(v19 + 16) = v44;
    *(_OWORD *)(v19 + 32) = v43;
    *(_OWORD *)(v19 + 48) = v42;
    *(_OWORD *)(v19 + 64) = v41;
    *(unsigned char *)(v19 + 80) = v34;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E35D4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v43 = a2;
  uint64_t v7 = sub_249AEDC98();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v42 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  long long v40 = v3;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v23 = v22 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    int64_t v25 = (void *)(v6 + 64);
    unint64_t v26 = *(void *)(v42 + 8 * v24);
    ++v14;
    if (!v26)
    {
      int64_t v14 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v42 + 8 * v14);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v40;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v42 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v14 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v41) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v42 + 8 * v14);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v27;
      }
    }
LABEL_30:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_31:
    uint64_t v32 = 16 * v23;
    uint64_t v33 = (uint64_t *)(*(void *)(v6 + 48) + v32);
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    char v36 = (uint64_t *)(*(void *)(v6 + 56) + v32);
    uint64_t v37 = *v36;
    uint64_t v38 = v36[1];
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v17 == v29;
        if (v17 == v29) {
          unint64_t v17 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 16 * v18;
    unint64_t v20 = (void *)(*(void *)(v8 + 48) + v19);
    *unint64_t v20 = v35;
    v20[1] = v34;
    unint64_t v21 = (void *)(*(void *)(v8 + 56) + v19);
    *unint64_t v21 = v37;
    v21[1] = v38;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v40;
  int64_t v25 = (void *)(v6 + 64);
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v39 = 1 << *(unsigned char *)(v6 + 32);
  if (v39 >= 64) {
    bzero(v25, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v25 = -1 << v39;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2498E3908(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4E8);
  char v53 = a2;
  uint64_t v6 = sub_249AEDC98();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v50 = (void *)(v5 + 64);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v5 + 64);
    long long v48 = v2;
    int64_t v49 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = v6 + 64;
    uint64_t v11 = v6;
    uint64_t result = swift_retain();
    uint64_t v13 = v11;
    int64_t v14 = 0;
    uint64_t v51 = v11;
    uint64_t v52 = v5;
    while (1)
    {
      if (v9)
      {
        uint64_t v54 = (v9 - 1) & v9;
        int64_t v55 = v14;
        unint64_t v21 = __clz(__rbit64(v9)) | (v14 << 6);
      }
      else
      {
        int64_t v22 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v22 >= v49) {
          goto LABEL_35;
        }
        unint64_t v23 = v50[v22];
        int64_t v24 = v14 + 1;
        if (!v23)
        {
          int64_t v24 = v14 + 2;
          if (v14 + 2 >= v49) {
            goto LABEL_35;
          }
          unint64_t v23 = v50[v24];
          if (!v23)
          {
            uint64_t v25 = v14 + 3;
            if (v14 + 3 >= v49)
            {
LABEL_35:
              uint64_t v46 = v13;
              swift_release();
              uint64_t v3 = v48;
              if (v53)
              {
                uint64_t v47 = 1 << *(unsigned char *)(v5 + 32);
                if (v47 >= 64) {
                  bzero(v50, ((unint64_t)(v47 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v50 = -1 << v47;
                }
                *(void *)(v5 + 16) = 0;
              }
              goto LABEL_41;
            }
            unint64_t v23 = v50[v25];
            if (!v23)
            {
              while (1)
              {
                int64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_43;
                }
                if (v24 >= v49) {
                  goto LABEL_35;
                }
                unint64_t v23 = v50[v24];
                ++v25;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v24 = v14 + 3;
          }
        }
LABEL_21:
        uint64_t v54 = (v23 - 1) & v23;
        int64_t v55 = v24;
        unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
      }
      uint64_t v26 = *(void *)(v5 + 56);
      uint64_t v27 = *(void *)(v5 + 48) + 72 * v21;
      uint64_t v28 = *(void *)v27;
      uint64_t v29 = *(void *)(v27 + 8);
      uint64_t v31 = *(void *)(v27 + 16);
      uint64_t v30 = *(void *)(v27 + 24);
      uint64_t v33 = *(void *)(v27 + 32);
      uint64_t v32 = *(void *)(v27 + 40);
      char v34 = *(unsigned char *)(v27 + 48);
      uint64_t v35 = *(void *)(v27 + 64);
      uint64_t v58 = *(void *)(v27 + 56);
      char v36 = (uint64_t *)(v26 + 16 * v21);
      uint64_t v37 = v36[1];
      uint64_t v56 = *v36;
      if ((v53 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v13 = v51;
      }
      uint64_t v57 = v37;
      uint64_t v38 = v13;
      sub_249AEE338();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE358();
      sub_249AEE358();
      if (v35)
      {
        swift_bridgeObjectRetain();
        sub_249AECF78();
        swift_bridgeObjectRelease();
      }
      uint64_t result = sub_249AEE388();
      uint64_t v13 = v38;
      uint64_t v39 = -1 << *(unsigned char *)(v38 + 32);
      unint64_t v40 = result & ~v39;
      unint64_t v41 = v40 >> 6;
      if (((-1 << v40) & ~*(void *)(v10 + 8 * (v40 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v40) & ~*(void *)(v10 + 8 * (v40 >> 6)))) | v40 & 0x7FFFFFFFFFFFFFC0;
        uint64_t v16 = v31;
        uint64_t v17 = v57;
        uint64_t v18 = v28;
      }
      else
      {
        char v42 = 0;
        unint64_t v43 = (unint64_t)(63 - v39) >> 6;
        uint64_t v16 = v31;
        uint64_t v17 = v57;
        uint64_t v18 = v28;
        do
        {
          if (++v41 == v43 && (v42 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v44 = v41 == v43;
          if (v41 == v43) {
            unint64_t v41 = 0;
          }
          v42 |= v44;
          uint64_t v45 = *(void *)(v10 + 8 * v41);
        }
        while (v45 == -1);
        unint64_t v15 = __clz(__rbit64(~v45)) + (v41 << 6);
      }
      *(void *)(v10 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v19 = *(void *)(v38 + 48) + 72 * v15;
      *(void *)uint64_t v19 = v18;
      *(void *)(v19 + 8) = v29;
      *(void *)(v19 + 16) = v16;
      *(void *)(v19 + 24) = v30;
      *(void *)(v19 + 32) = v33;
      *(void *)(v19 + 40) = v32;
      *(unsigned char *)(v19 + 48) = v34;
      *(void *)(v19 + 56) = v58;
      *(void *)(v19 + 64) = v35;
      unint64_t v20 = (void *)(*(void *)(v38 + 56) + 16 * v15);
      *unint64_t v20 = v56;
      v20[1] = v17;
      ++*(void *)(v38 + 16);
      uint64_t v5 = v52;
      unint64_t v9 = v54;
      int64_t v14 = v55;
    }
  }
  uint64_t v46 = v6;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v46;
  return result;
}

uint64_t sub_2498E3D54(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4E0);
  char v38 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(v5 + 48) + 24 * v20;
    uint64_t v31 = *(void *)v29;
    uint64_t v30 = *(void *)(v29 + 8);
    char v32 = *(unsigned char *)(v29 + 16);
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      sub_24988D770(*(void *)v29, *(void *)(v29 + 8), *(unsigned char *)(v29 + 16));
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    Theme.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v7 + 48) + 24 * v17;
    *(void *)uint64_t v18 = v31;
    *(void *)(v18 + 8) = v30;
    *(unsigned char *)(v18 + 16) = v32;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E40A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDDF0);
  char v38 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_43;
  }
  if (v17 >= v36)
  {
    swift_release();
    uint64_t v3 = v2;
    uint64_t v18 = (void *)(v5 + 64);
    if (v38)
    {
LABEL_38:
      uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
      if (v34 >= 64) {
        bzero(v18, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *uint64_t v18 = -1 << v34;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v37 + 8 * v17);
    ++v12;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v12 = v17 + 1;
    if (v17 + 1 >= v36) {
      goto LABEL_35;
    }
    unint64_t v19 = *(void *)(v37 + 8 * v12);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_22:
      uint64_t v21 = *(void *)(v5 + 48) + 24 * v16;
      uint64_t v22 = *(void *)v21;
      int v23 = *(unsigned __int8 *)(v21 + 8);
      uint64_t v24 = *(void *)(v21 + 16);
      uint64_t v25 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      if ((v38 & 1) == 0) {
        swift_retain();
      }
      sub_249AEE338();
      if (!v23) {
        sub_249AEDF48();
      }
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE348();
      uint64_t v26 = sub_249AEE388();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = v26 & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      while (++v29 != v31 || (v30 & 1) == 0)
      {
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
        if (v33 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v33)) + (v29 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          uint64_t v14 = *(void *)(v7 + 48) + 24 * v13;
          *(void *)uint64_t v14 = v22;
          *(unsigned char *)(v14 + 8) = v23;
          *(void *)(v14 + 16) = v24;
          *(void *)(*(void *)(v7 + 56) + 8 * v13) = v25;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x2498E44F4);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v36)
    {
      unint64_t v19 = *(void *)(v37 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v12 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_44;
          }
          if (v12 >= v36) {
            goto LABEL_35;
          }
          unint64_t v19 = *(void *)(v37 + 8 * v12);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v20;
      goto LABEL_21;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = v2;
    if (v38) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E4510(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA8);
  char v36 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_2498E4828(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4D0);
  char v36 = a2;
  uint64_t v37 = (void *)sub_249AEDC98();
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v34 = (void *)(v4 + 64);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v4 + 64);
    int64_t v33 = (unint64_t)(v5 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v9 = 0;
    uint64_t v35 = v4;
    while (1)
    {
      if (v7)
      {
        uint64_t v38 = (v7 - 1) & v7;
        int64_t v39 = v9;
        unint64_t v11 = __clz(__rbit64(v7)) | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v12 >= v33) {
          goto LABEL_23;
        }
        unint64_t v13 = v34[v12];
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v33) {
            goto LABEL_23;
          }
          unint64_t v13 = v34[v14];
          if (!v13)
          {
            uint64_t v15 = v9 + 3;
            if (v9 + 3 >= v33)
            {
LABEL_23:
              swift_release();
              if (v36)
              {
                uint64_t v31 = 1 << *(unsigned char *)(v4 + 32);
                if (v31 > 63) {
                  bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v34 = -1 << v31;
                }
                *(void *)(v4 + 16) = 0;
              }
              break;
            }
            unint64_t v13 = v34[v15];
            if (!v13)
            {
              while (1)
              {
                int64_t v14 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_30;
                }
                if (v14 >= v33) {
                  goto LABEL_23;
                }
                unint64_t v13 = v34[v14];
                ++v15;
                if (v13) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v14 = v9 + 3;
          }
        }
LABEL_20:
        uint64_t v38 = (v13 - 1) & v13;
        int64_t v39 = v14;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
      }
      uint64_t v16 = *(void *)(v4 + 56);
      uint64_t v17 = *(void *)(v4 + 48) + 112 * v11;
      uint64_t v18 = *(void *)v17;
      long long v19 = *(_OWORD *)(v17 + 8);
      uint64_t v20 = *(void *)(v17 + 24);
      uint64_t v21 = *(void *)(v17 + 32);
      uint64_t v23 = *(void *)(v17 + 40);
      uint64_t v22 = *(void *)(v17 + 48);
      uint64_t v24 = *(void *)(v17 + 56);
      char v25 = *(unsigned char *)(v17 + 64);
      uint64_t v26 = *(void *)(v17 + 72);
      uint64_t v27 = *(void *)(v17 + 80);
      uint64_t v28 = *(void *)(v17 + 88);
      char v29 = *(unsigned char *)(v17 + 96);
      uint64_t v30 = *(void *)(v17 + 104);
      uint64_t v41 = v26;
      uint64_t v42 = *(void *)(v16 + 8 * v11);
      long long v43 = v19;
      uint64_t v40 = *(void *)v17;
      if ((v36 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_24988CD7C(v20, v21, v23, v22, v24, v25);
        sub_24988CDF0(v27);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v18 = v40;
        uint64_t v26 = v41;
        long long v19 = v43;
      }
      uint64_t v45 = v18;
      long long v46 = v19;
      uint64_t v47 = v20;
      uint64_t v48 = v21;
      uint64_t v49 = v23;
      uint64_t v50 = v22;
      uint64_t v51 = v24;
      char v52 = v25;
      uint64_t v53 = v26;
      uint64_t v54 = v27;
      uint64_t v55 = v28;
      char v56 = v29;
      uint64_t v57 = v30;
      sub_249AEE338();
      ColorSet.hash(into:)((uint64_t)v44);
      sub_249AEE388();
      unint64_t result = sub_249AED9B8();
      *(void *)((char *)v37 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v10 = v37[6] + 112 * result;
      *(void *)uint64_t v10 = v40;
      *(_OWORD *)(v10 + 8) = v43;
      *(void *)(v10 + 24) = v20;
      *(void *)(v10 + 32) = v21;
      *(void *)(v10 + 40) = v23;
      *(void *)(v10 + 48) = v22;
      *(void *)(v10 + 56) = v24;
      *(unsigned char *)(v10 + 64) = v25;
      *(void *)(v10 + 72) = v41;
      *(void *)(v10 + 80) = v27;
      int64_t v9 = v39;
      *(void *)(v10 + 88) = v28;
      *(unsigned char *)(v10 + 96) = v29;
      *(void *)(v10 + 104) = v30;
      *(void *)(v37[7] + 8 * result) = v42;
      ++v37[2];
      uint64_t v4 = v35;
      unint64_t v7 = v38;
    }
  }
  unint64_t result = swift_release();
  *uint64_t v32 = v37;
  return result;
}

uint64_t sub_2498E4BC8(uint64_t a1, char a2)
{
  return sub_2498E5048(a1, a2, &qword_2696DF3B8);
}

uint64_t sub_2498E4BD4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3B0);
  char v48 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    long long v46 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v45 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v18 = v17 | (v13 << 6);
        if (v48) {
          goto LABEL_10;
        }
      }
      else
      {
        int64_t v26 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v26 >= v45) {
          goto LABEL_33;
        }
        unint64_t v27 = v46[v26];
        ++v13;
        if (!v27)
        {
          int64_t v13 = v26 + 1;
          if (v26 + 1 >= v45) {
            goto LABEL_33;
          }
          unint64_t v27 = v46[v13];
          if (!v27)
          {
            int64_t v28 = v26 + 2;
            if (v28 >= v45)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v48)
              {
                uint64_t v44 = 1 << *(unsigned char *)(v5 + 32);
                if (v44 >= 64) {
                  bzero(v46, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v46 = -1 << v44;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v27 = v46[v28];
            if (!v27)
            {
              while (1)
              {
                int64_t v13 = v28 + 1;
                if (__OFADD__(v28, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v45) {
                  goto LABEL_33;
                }
                unint64_t v27 = v46[v13];
                ++v28;
                if (v27) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v13 = v28;
          }
        }
LABEL_22:
        unint64_t v10 = (v27 - 1) & v27;
        unint64_t v18 = __clz(__rbit64(v27)) + (v13 << 6);
        if (v48)
        {
LABEL_10:
          long long v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
          uint64_t v20 = *v19;
          uint64_t v21 = v19[1];
          unint64_t v22 = *(void *)(v5 + 56) + (v18 << 7);
          uint64_t v23 = *(void *)(v22 + 8);
          uint64_t v24 = *(void *)(v22 + 24);
          uint64_t v51 = *(void *)(v22 + 32);
          uint64_t v52 = *(void *)(v22 + 16);
          uint64_t v60 = *(void *)(v22 + 48);
          uint64_t v58 = *(void *)(v22 + 56);
          uint64_t v55 = *(void *)(v22 + 64);
          uint64_t v53 = *(void *)(v22 + 40);
          uint64_t v54 = *(void *)(v22 + 72);
          uint64_t v49 = *(void *)v22;
          uint64_t v50 = *(void *)(v22 + 80);
          char v25 = *(unsigned char *)(v22 + 88);
          long long v57 = *(_OWORD *)(v22 + 96);
          uint64_t v56 = *(void *)(v22 + 112);
          char v59 = *(unsigned char *)(v22 + 120);
          goto LABEL_24;
        }
      }
      char v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v18);
      uint64_t v20 = *v29;
      uint64_t v21 = v29[1];
      uint64_t v30 = (long long *)(*(void *)(v5 + 56) + (v18 << 7));
      long long v32 = v30[2];
      long long v31 = v30[3];
      long long v33 = *v30;
      long long v62 = v30[1];
      long long v63 = v32;
      long long v61 = v33;
      long long v35 = v30[5];
      long long v34 = v30[6];
      long long v36 = v30[4];
      *(_OWORD *)&v67[9] = *(long long *)((char *)v30 + 105);
      long long v66 = v35;
      *(_OWORD *)uint64_t v67 = v34;
      long long v64 = v31;
      long long v65 = v36;
      char v59 = v67[24];
      uint64_t v56 = *(void *)&v67[16];
      long long v57 = v34;
      uint64_t v58 = *((void *)&v31 + 1);
      uint64_t v60 = v31;
      uint64_t v54 = *((void *)&v36 + 1);
      uint64_t v55 = v36;
      char v25 = BYTE8(v35);
      uint64_t v24 = *((void *)&v62 + 1);
      uint64_t v50 = v35;
      uint64_t v51 = v63;
      uint64_t v23 = *((void *)&v61 + 1);
      uint64_t v52 = v62;
      uint64_t v53 = *((void *)&v63 + 1);
      uint64_t v49 = v61;
      swift_bridgeObjectRetain();
      sub_24988E364((uint64_t)&v61);
LABEL_24:
      sub_249AEE338();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      uint64_t result = sub_249AEE388();
      uint64_t v37 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v38 = result & ~v37;
      unint64_t v39 = v38 >> 6;
      if (((-1 << v38) & ~*(void *)(v11 + 8 * (v38 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v38) & ~*(void *)(v11 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v40 = 0;
        unint64_t v41 = (unint64_t)(63 - v37) >> 6;
        do
        {
          if (++v39 == v41 && (v40 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v42 = v39 == v41;
          if (v39 == v41) {
            unint64_t v39 = 0;
          }
          v40 |= v42;
          uint64_t v43 = *(void *)(v11 + 8 * v39);
        }
        while (v43 == -1);
        unint64_t v14 = __clz(__rbit64(~v43)) + (v39 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *uint64_t v15 = v20;
      v15[1] = v21;
      unint64_t v16 = *(void *)(v7 + 56) + (v14 << 7);
      *(void *)unint64_t v16 = v49;
      *(void *)(v16 + 8) = v23;
      *(void *)(v16 + 16) = v52;
      *(void *)(v16 + 24) = v24;
      *(void *)(v16 + 32) = v51;
      *(void *)(v16 + 40) = v53;
      *(void *)(v16 + 48) = v60;
      *(void *)(v16 + 56) = v58;
      *(void *)(v16 + 64) = v55;
      *(void *)(v16 + 72) = v54;
      *(void *)(v16 + 80) = v50;
      *(unsigned char *)(v16 + 88) = v25;
      *(_OWORD *)(v16 + 96) = v57;
      *(void *)(v16 + 112) = v56;
      *(unsigned char *)(v16 + 120) = v59;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E503C(uint64_t a1, char a2)
{
  return sub_2498E5048(a1, a2, &qword_2696DF4F8);
}

uint64_t sub_2498E5048(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_249AEDC98();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    uint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    long long v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *long long v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2498E536C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Component();
  uint64_t v42 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4B8);
  int v43 = a2;
  uint64_t v9 = sub_249AEDC98();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  unint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  unint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    char v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_2498EC6B0(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Component);
    }
    else
    {
      sub_2498EC5EC(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Component);
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    long long v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    *long long v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_2498EC6B0((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t (*)(void))type metadata accessor for Component);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_2498E574C(uint64_t a1, int a2)
{
  return sub_2498E5FD4(a1, a2, (uint64_t (*)(void))type metadata accessor for RequestContentModel, &qword_2696DF380, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
}

uint64_t sub_2498E5780(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4A0);
  int v40 = a2;
  uint64_t v9 = sub_249AEDC98();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  BOOL v36 = v2;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    int64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v39 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v40) {
      sub_249882788(v26, (uint64_t)v7, &qword_2696DDB10);
    }
    else {
      sub_2498D6084(v26, (uint64_t)v7, &qword_2696DDB10);
    }
    char v27 = *(unsigned char *)(*(void *)(v8 + 56) + v20);
    sub_249AEE338();
    sub_249AEB808();
    sub_2498EC32C(&qword_2696DF388);
    sub_249AECF28();
    uint64_t result = sub_249AEE388();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_249882788((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, &qword_2696DDB10);
    *(unsigned char *)(*(void *)(v10 + 56) + v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_2498E5B64(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v47 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4B0);
  int v48 = a2;
  uint64_t v9 = sub_249AEDC98();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int64_t v45 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int v43 = v2;
  int64_t v44 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  for (i = v8; ; uint64_t v8 = i)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v44) {
      break;
    }
    unint64_t v23 = v45;
    unint64_t v24 = v45[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v24 = v45[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v43;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v45[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v44) {
              goto LABEL_34;
            }
            unint64_t v24 = v45[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v47 + 72);
    uint64_t v27 = *(void *)(v8 + 48) + v26 * v21;
    uint64_t v28 = 32 * v21;
    int64_t v50 = v17;
    if (v48)
    {
      sub_249882788(v27, (uint64_t)v7, &qword_2696DDB10);
      uint64_t v29 = *(void *)(v8 + 56) + v28;
      uint64_t v30 = *(void *)(v29 + 8);
      uint64_t v49 = *(void *)v29;
      uint64_t v31 = *(void *)(v29 + 16);
      unsigned __int8 v32 = *(unsigned char *)(v29 + 24);
    }
    else
    {
      sub_2498D6084(v27, (uint64_t)v7, &qword_2696DDB10);
      uint64_t v33 = *(void *)(v8 + 56) + v28;
      uint64_t v30 = *(void *)(v33 + 8);
      uint64_t v31 = *(void *)(v33 + 16);
      unsigned __int8 v32 = *(unsigned char *)(v33 + 24);
      uint64_t v49 = *(void *)v33;
      swift_retain();
      sub_2498EC438(v30, v31, v32);
    }
    sub_249AEE338();
    sub_249AEB808();
    sub_2498EC32C(&qword_2696DF388);
    sub_249AECF28();
    uint64_t result = sub_249AEE388();
    uint64_t v34 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v15 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v35) & ~*(void *)(v15 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v15 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v18 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_249882788((uint64_t)v7, *(void *)(v10 + 48) + v26 * v18, &qword_2696DDB10);
    uint64_t v19 = *(void *)(v10 + 56) + 32 * v18;
    int64_t v17 = v50;
    *(void *)uint64_t v19 = v49;
    *(void *)(v19 + 8) = v30;
    *(void *)(v19 + 16) = v31;
    *(unsigned char *)(v19 + 24) = v32;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v43;
  unint64_t v23 = v45;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v8 + 32);
  if (v41 >= 64) {
    bzero(v23, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v41;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_2498E5FA0(uint64_t a1, int a2)
{
  return sub_2498E5FD4(a1, a2, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, &qword_2696DF4A8, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

uint64_t sub_2498E5FD4(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4, uint64_t (*a5)(void))
{
  int64_t v50 = a5;
  uint64_t v7 = v5;
  uint64_t v9 = a3(0);
  uint64_t v46 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v49 = (uint64_t)&v42 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v47 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v48 = a2;
  uint64_t v15 = sub_249AEDC98();
  uint64_t v16 = v15;
  if (!*(void *)(v14 + 16)) {
    goto LABEL_41;
  }
  uint64_t v17 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v18 = *(void *)(v14 + 64);
  int64_t v45 = (void *)(v14 + 64);
  if (v17 < 64) {
    uint64_t v19 = ~(-1 << v17);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v18;
  int v43 = v5;
  int64_t v44 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v21 = v15 + 64;
  uint64_t result = swift_retain();
  int64_t v23 = 0;
  while (1)
  {
    if (v20)
    {
      unint64_t v25 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v26 = v25 | (v23 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v23 + 1;
    if (__OFADD__(v23, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v44) {
      break;
    }
    uint64_t v28 = v45;
    unint64_t v29 = v45[v27];
    ++v23;
    if (!v29)
    {
      int64_t v23 = v27 + 1;
      if (v27 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v29 = v45[v23];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v44)
        {
LABEL_34:
          swift_release();
          uint64_t v7 = v43;
          if ((v48 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v45[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v23 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v23 >= v44) {
              goto LABEL_34;
            }
            unint64_t v29 = v45[v23];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v23 = v30;
      }
    }
LABEL_21:
    unint64_t v20 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v23 << 6);
LABEL_22:
    uint64_t v31 = *(void *)(v47 + 72);
    uint64_t v32 = *(void *)(v14 + 48) + v31 * v26;
    if (v48)
    {
      sub_249882788(v32, (uint64_t)v13, &qword_2696DDB10);
      uint64_t v33 = *(void *)(v46 + 72);
      sub_2498EC6B0(*(void *)(v14 + 56) + v33 * v26, v49, v50);
    }
    else
    {
      sub_2498D6084(v32, (uint64_t)v13, &qword_2696DDB10);
      uint64_t v33 = *(void *)(v46 + 72);
      sub_2498EC5EC(*(void *)(v14 + 56) + v33 * v26, v49, v50);
    }
    sub_249AEE338();
    sub_249AEB808();
    sub_2498EC32C(&qword_2696DF388);
    sub_249AECF28();
    uint64_t result = sub_249AEE388();
    uint64_t v34 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v21 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v35) & ~*(void *)(v21 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v21 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v24 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v21 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    sub_249882788((uint64_t)v13, *(void *)(v16 + 48) + v31 * v24, &qword_2696DDB10);
    uint64_t result = sub_2498EC6B0(v49, *(void *)(v16 + 56) + v33 * v24, v50);
    ++*(void *)(v16 + 16);
  }
  swift_release();
  uint64_t v7 = v43;
  uint64_t v28 = v45;
  if ((v48 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v14 + 32);
  if (v41 >= 64) {
    bzero(v28, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v41;
  }
  *(void *)(v14 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v7 = v16;
  return result;
}

uint64_t sub_2498E646C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF498);
  char v42 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    unint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E6794(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF490);
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v32 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v33;
          if ((v32 & 1) == 0) {
            goto LABEL_38;
          }
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_40;
            }
            if (v14 >= v11) {
              goto LABEL_31;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_249AEE338();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v23;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v32 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E6A9C(uint64_t a1, char a2)
{
  return sub_2498E77E8(a1, a2, &qword_2696DF480);
}

uint64_t sub_2498E6AA8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF488);
  char v45 = a2;
  uint64_t v50 = sub_249AEDC98();
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
  int v43 = (void *)(v5 + 64);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v5 + 64);
  uint64_t v41 = v2;
  int64_t v42 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = v50 + 64;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  uint64_t v44 = v5;
  while (1)
  {
    if (v8)
    {
      uint64_t v46 = (v8 - 1) & v8;
      int64_t v47 = v11;
      unint64_t v20 = __clz(__rbit64(v8)) | (v11 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    char v22 = v43;
    unint64_t v23 = v43[v21];
    int64_t v24 = v11 + 1;
    if (!v23)
    {
      int64_t v24 = v11 + 2;
      if (v11 + 2 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v24];
      if (!v23)
      {
        uint64_t v25 = v11 + 3;
        if (v11 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v42) {
              goto LABEL_33;
            }
            unint64_t v23 = v43[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v11 + 3;
      }
    }
LABEL_30:
    uint64_t v46 = (v23 - 1) & v23;
    int64_t v47 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v30;
    uint64_t v32 = v30[1];
    unint64_t v33 = *(void *)(v5 + 56) + (v20 << 6);
    uint64_t v34 = *(void **)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    uint64_t v36 = *(void **)(v33 + 16);
    uint64_t v37 = *(void *)(v33 + 24);
    char v38 = *(unsigned char *)(v33 + 32);
    uint64_t v39 = *(void *)(v33 + 48);
    uint64_t v49 = *(void *)(v33 + 40);
    char v48 = *(unsigned char *)(v33 + 56);
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      sub_24988247C(v34, v35, v36, v37, v38);
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v12 = -1 << *(unsigned char *)(v50 + 32);
    unint64_t v13 = result & ~v12;
    unint64_t v14 = v13 >> 6;
    if (((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v13) & ~*(void *)(v9 + 8 * (v13 >> 6)))) | v13 & 0x7FFFFFFFFFFFFFC0;
      char v16 = v38;
      unint64_t v17 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v12) >> 6;
      char v16 = v38;
      unint64_t v17 = v34;
      do
      {
        if (++v14 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v14 == v27;
        if (v14 == v27) {
          unint64_t v14 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v9 + 8 * v14);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v14 << 6);
    }
    *(void *)(v9 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    int64_t v18 = (void *)(*(void *)(v50 + 48) + 16 * v15);
    *int64_t v18 = v31;
    v18[1] = v32;
    unint64_t v19 = *(void *)(v50 + 56) + (v15 << 6);
    *(void *)unint64_t v19 = v17;
    *(void *)(v19 + 8) = v35;
    *(void *)(v19 + 16) = v36;
    *(void *)(v19 + 24) = v37;
    *(unsigned char *)(v19 + 32) = v16;
    *(void *)(v19 + 40) = v49;
    *(void *)(v19 + 48) = v39;
    *(unsigned char *)(v19 + 56) = v48;
    ++*(void *)(v50 + 16);
    uint64_t v5 = v44;
    unint64_t v8 = v46;
    int64_t v11 = v47;
  }
  swift_release();
  uint64_t v3 = v41;
  char v22 = v43;
  if ((v45 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v22 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v50;
  return result;
}

uint64_t sub_2498E6E5C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF478);
  char v42 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v38 = v2;
  int64_t v39 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v39) {
      break;
    }
    unint64_t v23 = v40;
    unint64_t v24 = v40[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v24 = v40[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v40[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v39) {
              goto LABEL_33;
            }
            unint64_t v24 = v40[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 32 * v21;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    uint64_t v43 = *(void *)(v33 + 16);
    char v36 = *(unsigned char *)(v33 + 24);
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    int64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *int64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 32 * v17;
    *(void *)uint64_t v19 = v34;
    *(void *)(v19 + 8) = v35;
    *(void *)(v19 + 16) = v43;
    *(unsigned char *)(v19 + 24) = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  unint64_t v23 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v23, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E719C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF370);
  char v38 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      return result;
    }
    if (v18 >= v36) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v36) {
        goto LABEL_35;
      }
      unint64_t v20 = *(void *)(v37 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_35:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_42;
          }
          goto LABEL_38;
        }
        unint64_t v20 = *(void *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_44;
            }
            if (v13 >= v36) {
              goto LABEL_35;
            }
            unint64_t v20 = *(void *)(v37 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = *(void *)(v5 + 48) + 32 * v17;
    uint64_t v24 = *(void *)v22;
    uint64_t v23 = *(void *)(v22 + 8);
    uint64_t v25 = *(void *)(v22 + 16);
    int v26 = *(unsigned __int8 *)(v22 + 24);
    long long v39 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v17);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
    }
    sub_249AEE338();
    sub_249AEE358();
    if (!v26) {
      sub_249AEE348();
    }
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = *(void *)(v7 + 48) + 32 * v14;
    *(void *)uint64_t v15 = v24;
    *(void *)(v15 + 8) = v23;
    *(void *)(v15 + 16) = v25;
    *(unsigned char *)(v15 + 24) = v26;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v14) = v39;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_38:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E74F4(uint64_t a1, char a2)
{
  return sub_2498E81BC(a1, a2, &qword_2696DF3C0);
}

uint64_t sub_2498E7500(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3E8);
  char v37 = a2;
  uint64_t result = sub_249AEDC98();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    uint64_t v34 = v3;
    int64_t v8 = 0;
    int64_t v36 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v9;
    uint64_t v33 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v35) {
          goto LABEL_33;
        }
        unint64_t v21 = v36[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v21 = v36[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v35)
            {
LABEL_33:
              if ((v37 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero(v36, 8 * v35);
              }
              else {
                *int64_t v36 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v36[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v21 = v36[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      uint64_t v29 = *(void *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      char v31 = *(unsigned char *)(v28 + 16);
      if ((v37 & 1) == 0) {
        sub_24988D770(v29, v30, v31);
      }
      uint64_t result = sub_249AEE328();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(void *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(unsigned char *)(v17 + 16) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E77DC(uint64_t a1, char a2)
{
  return sub_2498E77E8(a1, a2, &qword_2696DF398);
}

uint64_t sub_2498E77E8(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v7 = sub_249AEDC98();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    char v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  char v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2498E7AF4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4D8);
  char v40 = a2;
  uint64_t result = sub_249AEDC98();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v36 = v3;
    int64_t v8 = 0;
    uint64_t v38 = (uint64_t *)(v5 + 64);
    uint64_t v39 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = -1 << v9;
    uint64_t v35 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v20 >= v37) {
          goto LABEL_33;
        }
        unint64_t v21 = v38[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v21 = v38[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_40;
              }
              if (v35 >= 64) {
                bzero(v38, 8 * v37);
              }
              else {
                *uint64_t v38 = v34;
              }
              uint64_t v3 = v36;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v21 = v38[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 48 * v19;
      uint64_t v29 = *(void **)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      uint64_t v31 = *(void **)(v28 + 16);
      uint64_t v32 = *(void *)(v28 + 24);
      char v33 = *(unsigned char *)(v28 + 32);
      uint64_t v41 = *(void *)(v28 + 40);
      if ((v40 & 1) == 0) {
        sub_24988247C(v29, v30, v31, v32, v33);
      }
      uint64_t result = sub_249AEE328();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 48 * v16;
      *(void *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(void *)(v17 + 16) = v31;
      *(void *)(v17 + 24) = v32;
      *(unsigned char *)(v17 + 32) = v33;
      *(void *)(v17 + 40) = v41;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v39;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E7DF4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3A0);
  char v45 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v43 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v41 = v3;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v44 = v5;
  while (1)
  {
    if (v10)
    {
      uint64_t v46 = (v10 - 1) & v10;
      int64_t v47 = v13;
      unint64_t v20 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v42) {
      break;
    }
    int64_t v22 = v43;
    unint64_t v23 = v43[v21];
    int64_t v24 = v13 + 1;
    if (!v23)
    {
      int64_t v24 = v13 + 2;
      if (v13 + 2 >= v42) {
        goto LABEL_33;
      }
      unint64_t v23 = v43[v24];
      if (!v23)
      {
        uint64_t v25 = v13 + 3;
        if (v13 + 3 >= v42)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v41;
          if ((v45 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v43[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v42) {
              goto LABEL_33;
            }
            unint64_t v23 = v43[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v13 + 3;
      }
    }
LABEL_30:
    uint64_t v46 = (v23 - 1) & v23;
    int64_t v47 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(v5 + 56);
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = (uint64_t *)(v30 + 88 * v20);
    uint64_t v35 = v34[1];
    uint64_t v36 = v34[3];
    uint64_t v37 = v34[5];
    uint64_t v52 = v34[4];
    uint64_t v53 = v34[2];
    uint64_t v38 = v34[7];
    uint64_t v51 = v34[6];
    char v50 = *((unsigned char *)v34 + 64);
    uint64_t v39 = v34[10];
    uint64_t v48 = *v34;
    uint64_t v49 = v34[9];
    if ((v45 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v32;
    v18[1] = v33;
    uint64_t v19 = *(void *)(v7 + 56) + 88 * v17;
    *(void *)uint64_t v19 = v48;
    *(void *)(v19 + 8) = v35;
    *(void *)(v19 + 16) = v53;
    *(void *)(v19 + 24) = v36;
    *(void *)(v19 + 32) = v52;
    *(void *)(v19 + 40) = v37;
    *(void *)(v19 + 48) = v51;
    *(void *)(v19 + 56) = v38;
    *(unsigned char *)(v19 + 64) = v50;
    *(void *)(v19 + 72) = v49;
    *(void *)(v19 + 80) = v39;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v44;
    unint64_t v10 = v46;
    int64_t v13 = v47;
  }
  swift_release();
  uint64_t v3 = v41;
  int64_t v22 = v43;
  if ((v45 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v40 = 1 << *(unsigned char *)(v5 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v40;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E81B0(uint64_t a1, char a2)
{
  return sub_2498E81BC(a1, a2, &qword_2696DF390);
}

uint64_t sub_2498E81BC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v37 = a2;
  uint64_t v7 = sub_249AEDC98();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v35 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v23 = (void *)(v6 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_2498E84D0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF400);
  char v37 = a2;
  uint64_t v6 = sub_249AEDC98();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + 16 * v18);
    *uint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_2498E87D8(unint64_t a1, uint64_t a2, uint64_t a3, long long *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v6 = (void *)(a5[6] + 16 * a1);
  *uint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_249882BCC(a4, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_2498E8848(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = (void *)(a8[6] + 16 * result);
  void *v8 = a2;
  v8[1] = a3;
  uint64_t v9 = a8[7] + 32 * result;
  *(void *)uint64_t v9 = a4;
  *(void *)(v9 + 8) = a5;
  *(unsigned char *)(v9 + 16) = a6 & 1;
  *(void *)(v9 + 24) = a7;
  uint64_t v10 = a8[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a8[2] = v12;
  }
  return result;
}

unint64_t sub_2498E88A0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a5[7] + 88 * result;
  long long v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  *(unsigned char *)(v6 + 80) = *(unsigned char *)(a4 + 80);
  long long v8 = *(_OWORD *)(a4 + 64);
  long long v9 = *(_OWORD *)(a4 + 32);
  *(_OWORD *)(v6 + 48) = *(_OWORD *)(a4 + 48);
  *(_OWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 32) = v9;
  uint64_t v10 = a5[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a5[2] = v12;
  }
  return result;
}

unint64_t sub_2498E890C(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 72 * result;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v5 + 48) = v6;
  *(void *)(v5 + 64) = *(void *)(a2 + 64);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v7;
  long long v8 = (void *)(a5[7] + 16 * result);
  void *v8 = a3;
  v8[1] = a4;
  uint64_t v9 = a5[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a5[2] = v11;
  }
  return result;
}

unint64_t sub_2498E8974(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  long long v6 = (_OWORD *)(a5[7] + (result << 7));
  long long v7 = a4[1];
  *long long v6 = *a4;
  v6[1] = v7;
  long long v8 = a4[3];
  v6[2] = a4[2];
  v6[3] = v8;
  *(_OWORD *)((char *)v6 + 105) = *(_OWORD *)((char *)a4 + 105);
  long long v9 = a4[6];
  long long v10 = a4[4];
  v6[5] = a4[5];
  v6[6] = v9;
  v6[4] = v10;
  uint64_t v11 = a5[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a5[2] = v13;
  }
  return result;
}

unint64_t sub_2498E89E4(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_2498E8A2C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_2498E8C04(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for RequestContentModel, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
}

uint64_t sub_2498E8A58(unint64_t a1, uint64_t a2, char a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t result = sub_249882788(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, &qword_2696DDB10);
  *(unsigned char *)(a4[7] + a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_2498E8B04(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  a7[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v14 = a7[6];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t result = sub_249882788(a2, v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, &qword_2696DDB10);
  uint64_t v17 = a7[7] + 32 * a1;
  *(void *)uint64_t v17 = a3;
  *(void *)(v17 + 8) = a4;
  *(void *)(v17 + 16) = a5;
  *(unsigned char *)(v17 + 24) = a6;
  uint64_t v18 = a7[2];
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    a7[2] = v20;
  }
  return result;
}

uint64_t sub_2498E8BD8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_2498E8C04(a1, a2, a3, a4, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

uint64_t sub_2498E8C04(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v12 = a4[6];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  sub_249882788(a2, v12 + *(void *)(*(void *)(v13 - 8) + 72) * a1, &qword_2696DDB10);
  uint64_t v14 = a4[7];
  uint64_t v15 = a5(0);
  uint64_t result = sub_2498EC6B0(a3, v14 + *(void *)(*(void *)(v15 - 8) + 72) * a1, a6);
  uint64_t v17 = a4[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    a4[2] = v19;
  }
  return result;
}

unint64_t sub_2498E8CEC(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2 & 1;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_2498E8D34(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  BOOL v5 = (void *)(a5[6] + 16 * result);
  void *v5 = a2;
  v5[1] = a3;
  uint64_t v6 = (_OWORD *)(a5[7] + (result << 6));
  long long v7 = a4[1];
  *uint64_t v6 = *a4;
  v6[1] = v7;
  v6[2] = a4[2];
  *(_OWORD *)((char *)v6 + 41) = *(_OWORD *)((char *)a4 + 41);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_2498E8D94(unint64_t result, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  uint64_t v4 = (_OWORD *)(a4[7] + 48 * result);
  long long v5 = a3[1];
  *uint64_t v4 = *a3;
  v4[1] = v5;
  v4[2] = a3[2];
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

void *sub_2498E8DEC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF508);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 56);
  long long v5 = sub_2499B0808(&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_249882CD8();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_2498E8EE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4C8);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 120);
  uint64_t v5 = sub_2499B0A74((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_249882CD8();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_2498E8FE0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF378);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 1;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 5);
  uint64_t v6 = sub_2499B0DA8((uint64_t)&v8, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_249882CD8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_2498E90C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_2499B0FB8((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_249882CD8();
  if (v5 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_2498E91BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE328);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_2499B11C8((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_249882CD8();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_2498E92A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3A8);
  uint64_t v3 = swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 + 95;
  }
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * (v5 >> 7);
  uint64_t v6 = sub_2499B13C8(&v8, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_249882CD8();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

uint64_t sub_2498E938C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return MEMORY[0x263F8EE78];
    }
    if (v5 <= 0)
    {
      uint64_t v8 = (void *)MEMORY[0x263F8EE78];
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 40 * a3;
        if (v10 < (unint64_t)&v8[5 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 40 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return (uint64_t)v8;
      }
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3C8);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = _swift_stdlib_malloc_size(v8);
      uint64_t v8[2] = v5;
      _OWORD v8[3] = 2 * ((uint64_t)(v9 - 32) / 40);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498E9518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 24);
  *(void *)a2 = *(void *)a1;
  *(void *)(a2 + 8) = v2;
  char v5 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v4;
  sub_24988D770(v3, v2, v5);

  return swift_bridgeObjectRetain();
}

uint64_t sub_2498E9568(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_249AEE0D8() & 1;
  }
}

uint64_t sub_2498E95C0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  char v5 = __src;
  uint64_t v6 = a2 - __src;
  uint64_t v7 = (a2 - __src) / 56;
  uint64_t v8 = a3 - (void)a2;
  uint64_t v9 = (uint64_t)(a3 - (void)a2) / 56;
  uint64_t v46 = __src;
  char v45 = __dst;
  if (v7 >= v9)
  {
    if (v8 >= -55)
    {
      if (__dst != a2 || &a2[56 * v9] <= __dst)
      {
        BOOL v18 = a2;
        memmove(__dst, a2, 56 * v9);
        a2 = v18;
      }
      uint64_t v19 = &v4[56 * v9];
      uint64_t v44 = v19;
      uint64_t v46 = a2;
      if (v5 < a2 && v8 >= 56)
      {
        unint64_t v20 = a3 - 56;
        unint64_t v21 = a2;
        char v37 = v4;
        do
        {
          uint64_t v39 = a2;
          int64_t v35 = v19;
          v19 -= 56;
          v21 -= 56;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v42 == v40 && v43 == v41) {
            char v31 = 0;
          }
          else {
            char v31 = sub_249AEE0D8();
          }
          int64_t v22 = (char *)(v20 + 56);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31)
          {
            unint64_t v23 = v37;
            uint64_t v19 = v35;
            if (v22 != v39 || v20 >= (unint64_t)v39)
            {
              long long v24 = *(_OWORD *)v21;
              long long v25 = *((_OWORD *)v21 + 1);
              long long v26 = *((_OWORD *)v21 + 2);
              *(void *)(v20 + 48) = *((void *)v21 + 6);
              *(_OWORD *)(v20 + 16) = v25;
              *(_OWORD *)(v20 + 32) = v26;
              *(_OWORD *)unint64_t v20 = v24;
            }
            uint64_t v46 = v21;
          }
          else
          {
            uint64_t v44 = v19;
            unint64_t v23 = v37;
            unint64_t v21 = v39;
            if (v22 < v35 || v20 >= (unint64_t)v35 || v22 != v35)
            {
              long long v27 = *(_OWORD *)v19;
              long long v28 = *((_OWORD *)v19 + 1);
              long long v29 = *((_OWORD *)v19 + 2);
              *(void *)(v20 + 48) = *((void *)v19 + 6);
              *(_OWORD *)(v20 + 16) = v28;
              *(_OWORD *)(v20 + 32) = v29;
              *(_OWORD *)unint64_t v20 = v27;
            }
          }
          if (v21 <= v5) {
            break;
          }
          v20 -= 56;
          a2 = v21;
        }
        while (v19 > v23);
      }
      goto LABEL_45;
    }
  }
  else if (v6 >= -55)
  {
    if (__dst != __src || &__src[56 * v7] <= __dst)
    {
      unint64_t v10 = a2;
      memmove(__dst, __src, 56 * v7);
      a2 = v10;
    }
    uint64_t v32 = &v4[56 * v7];
    uint64_t v44 = v32;
    if ((unint64_t)a2 < a3 && v6 >= 56)
    {
      do
      {
        uint64_t v36 = v4;
        uint64_t v38 = a2;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_getAtKeyPath();
        swift_getAtKeyPath();
        if (v42 == v40 && v43 == v41) {
          char v34 = 0;
        }
        else {
          char v34 = sub_249AEE0D8();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v34)
        {
          uint64_t v11 = v38 + 56;
          if (v5 < v38 || v5 >= v11 || v5 != v38)
          {
            long long v12 = *(_OWORD *)v38;
            long long v13 = *((_OWORD *)v38 + 1);
            long long v14 = *((_OWORD *)v38 + 2);
            *((void *)v5 + 6) = *((void *)v38 + 6);
            *((_OWORD *)v5 + 1) = v13;
            *((_OWORD *)v5 + 2) = v14;
            *(_OWORD *)char v5 = v12;
          }
        }
        else
        {
          if (v5 != v4)
          {
            long long v15 = *(_OWORD *)v4;
            long long v16 = *((_OWORD *)v4 + 1);
            long long v17 = *((_OWORD *)v4 + 2);
            *((void *)v5 + 6) = *((void *)v4 + 6);
            *((_OWORD *)v5 + 1) = v16;
            *((_OWORD *)v5 + 2) = v17;
            *(_OWORD *)char v5 = v15;
          }
          v4 += 56;
          char v45 = v36 + 56;
          uint64_t v11 = v38;
        }
        v5 += 56;
        if (v4 >= v32) {
          break;
        }
        a2 = v11;
      }
      while ((unint64_t)v11 < a3);
      uint64_t v46 = v5;
    }
LABEL_45:
    sub_24998EC78((void **)&v46, (const void **)&v45, &v44);
    return 1;
  }
  swift_release();
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2498E9B48(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v16 = result;
  if (a3 != a2)
  {
    uint64_t v18 = *a4;
    uint64_t v4 = (void *)(*a4 + 56 * a3 + 48);
LABEL_5:
    uint64_t v19 = a3;
    uint64_t v20 = v16;
    long long v17 = v4;
    while (1)
    {
      char v5 = v4 - 13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v23 == v21 && v24 == v22) {
        char v6 = 0;
      }
      else {
        char v6 = sub_249AEE0D8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v6 & 1) == 0)
      {
LABEL_4:
        a3 = v19 + 1;
        uint64_t v4 = v17 + 7;
        if (v19 + 1 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v18) {
        break;
      }
      uint64_t v7 = *(v4 - 7);
      *(v4 - 7) = *v4;
      v4 -= 7;
      uint64_t v8 = v4[1];
      uint64_t v9 = v4[2];
      uint64_t v11 = v4[3];
      uint64_t v10 = v4[4];
      uint64_t v13 = v4[5];
      uint64_t v12 = v4[6];
      long long v14 = *((_OWORD *)v5 + 1);
      *(_OWORD *)(v5 + 7) = *(_OWORD *)v5;
      *(_OWORD *)(v5 + 9) = v14;
      *(_OWORD *)(v5 + 11) = *((_OWORD *)v5 + 2);
      v5[13] = v7;
      *(v4 - 6) = v8;
      *(v4 - 5) = v9;
      *(v4 - 4) = v11;
      *(v4 - 3) = v10;
      *(v4 - 2) = v13;
      *(v4 - 1) = v12;
      if (v19 == ++v20) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2498E9D94(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  swift_retain_n();
  uint64_t v4 = sub_249AEDF38();
  if (v4 >= v3)
  {
    if (v3 < 0) {
      goto LABEL_149;
    }
    if (v3)
    {
      swift_retain();
      sub_2498E9B48(0, v3, 1, a1);
    }
    swift_release_n();
    return swift_release();
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_157;
  }
  uint64_t v112 = v3;
  uint64_t v107 = v4;
  uint64_t v115 = v1;
  long long v104 = a1;
  if (v3 < 2)
  {
    char v114 = (char *)(MEMORY[0x263F8EE78] + 32);
    uint64_t v106 = MEMORY[0x263F8EE78];
    if (v3 == 1) {
      goto LABEL_13;
    }
    uint64_t v9 = (char *)MEMORY[0x263F8EE78];
    unint64_t v11 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_113:
    uint64_t v110 = v9;
    if (v11 >= 2)
    {
      uint64_t v95 = *v104;
      do
      {
        unint64_t v96 = v11 - 2;
        if (v11 < 2) {
          goto LABEL_144;
        }
        if (!v95) {
          goto LABEL_156;
        }
        uint64_t v97 = *(void *)&v110[16 * v96 + 32];
        uint64_t v98 = *(void *)&v110[16 * v11 + 24];
        uint64_t v99 = (char *)(v95 + 56 * *(void *)&v110[16 * v11 + 16]);
        swift_retain();
        sub_2498E95C0((char *)(v95 + 56 * v97), v99, v95 + 56 * v98, v114);
        if (v115) {
          goto LABEL_110;
        }
        swift_release();
        if (v98 < v97) {
          goto LABEL_145;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v110 = sub_24998EF90((uint64_t)v110);
        }
        if (v96 >= *((void *)v110 + 2)) {
          goto LABEL_146;
        }
        uint64_t v100 = &v110[16 * v96 + 32];
        *(void *)uint64_t v100 = v97;
        *((void *)v100 + 1) = v98;
        unint64_t v101 = *((void *)v110 + 2);
        if (v11 > v101) {
          goto LABEL_147;
        }
        memmove(&v110[16 * v11 + 16], &v110[16 * v11 + 32], 16 * (v101 - v11));
        *((void *)v110 + 2) = v101 - 1;
        unint64_t v11 = v101 - 1;
      }
      while (v101 > 2);
    }
    swift_bridgeObjectRelease();
    *(void *)(v106 + 16) = 0;
LABEL_125:
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  uint64_t v6 = v5 >> 1;
  uint64_t v7 = sub_249AED488();
  *(void *)(v7 + 16) = v6;
  uint64_t v106 = v7;
  char v114 = (char *)(v7 + 32);
LABEL_13:
  uint64_t v8 = 0;
  uint64_t v105 = *a1 + 80;
  uint64_t v103 = *a1 + 48;
  uint64_t v9 = (char *)MEMORY[0x263F8EE78];
  uint64_t v10 = v112;
  uint64_t v116 = *a1;
  while (1)
  {
    uint64_t v12 = v8;
    uint64_t v13 = v8 + 1;
    uint64_t v111 = v8;
    if (v8 + 1 < v10)
    {
      uint64_t v109 = v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_getAtKeyPath();
      swift_getAtKeyPath();
      if (v125 == v123 && v126 == v124) {
        int v121 = 0;
      }
      else {
        int v121 = sub_249AEE0D8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v111;
      uint64_t v10 = v112;
      uint64_t v13 = v111 + 2;
      if (v111 + 2 < v112)
      {
        uint64_t v14 = v105 + 56 * v111;
        while (1)
        {
          uint64_t v117 = v13;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v125 != v123) {
            goto LABEL_26;
          }
          if (v126 == v124) {
            int v122 = 0;
          }
          else {
LABEL_26:
          }
            int v122 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v121 ^ v122)) {
            break;
          }
          ++v13;
          v14 += 56;
          uint64_t v10 = v112;
          if (v112 == v117 + 1)
          {
            uint64_t v13 = v112;
            goto LABEL_32;
          }
        }
        uint64_t v10 = v112;
LABEL_32:
        uint64_t v12 = v111;
      }
      uint64_t v9 = v109;
      if (v121)
      {
        if (v13 < v12) {
          goto LABEL_150;
        }
        if (v12 < v13)
        {
          uint64_t v15 = 56 * v13;
          uint64_t v16 = v13;
          uint64_t v17 = v12;
          uint64_t v18 = 56 * v12;
          do
          {
            if (v17 != --v16)
            {
              if (!v116) {
                goto LABEL_155;
              }
              uint64_t v19 = v116 + v18;
              uint64_t v20 = *(void *)(v116 + v18);
              uint64_t v21 = v116 + v15;
              long long v22 = *(_OWORD *)(v116 + v18 + 24);
              uint64_t v23 = *(void *)(v116 + v18 + 40);
              uint64_t v24 = *(void *)(v116 + v18 + 48);
              long long v25 = *(_OWORD *)(v116 + v18 + 8);
              long long v26 = *(_OWORD *)(v116 + v15 - 40);
              long long v27 = *(_OWORD *)(v116 + v15 - 24);
              long long v28 = *(_OWORD *)(v116 + v15 - 56);
              *(void *)(v19 + 48) = *(void *)(v116 + v15 - 8);
              *(_OWORD *)(v19 + 16) = v26;
              *(_OWORD *)(v19 + 32) = v27;
              *(_OWORD *)uint64_t v19 = v28;
              *(void *)(v21 - 56) = v20;
              *(_OWORD *)(v21 - 48) = v25;
              *(_OWORD *)(v21 - 32) = v22;
              *(void *)(v21 - 16) = v23;
              *(void *)(v21 - 8) = v24;
            }
            ++v17;
            v15 -= 56;
            v18 += 56;
          }
          while (v17 < v16);
        }
      }
    }
    if (v13 < v10)
    {
      if (__OFSUB__(v13, v12)) {
        goto LABEL_148;
      }
      if (v13 - v12 < v107) {
        break;
      }
    }
LABEL_63:
    if (v13 < v12) {
      goto LABEL_143;
    }
    uint64_t v119 = v13;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v9 = sub_24998EB7C(0, *((void *)v9 + 2) + 1, 1, v9);
    }
    unint64_t v42 = *((void *)v9 + 2);
    unint64_t v41 = *((void *)v9 + 3);
    unint64_t v11 = v42 + 1;
    uint64_t v43 = v116;
    if (v42 >= v41 >> 1)
    {
      uint64_t v9 = sub_24998EB7C((char *)(v41 > 1), v42 + 1, 1, v9);
      uint64_t v43 = v116;
    }
    *((void *)v9 + 2) = v11;
    uint64_t v44 = v9 + 32;
    char v45 = &v9[16 * v42 + 32];
    *(void *)char v45 = v12;
    *((void *)v45 + 1) = v119;
    if (v42)
    {
      while (1)
      {
        unint64_t v46 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v51 = &v44[16 * v11];
          uint64_t v52 = *((void *)v51 - 8);
          uint64_t v53 = *((void *)v51 - 7);
          BOOL v57 = __OFSUB__(v53, v52);
          uint64_t v54 = v53 - v52;
          if (v57) {
            goto LABEL_132;
          }
          uint64_t v56 = *((void *)v51 - 6);
          uint64_t v55 = *((void *)v51 - 5);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v49 = v55 - v56;
          char v50 = v57;
          if (v57) {
            goto LABEL_133;
          }
          unint64_t v58 = v11 - 2;
          char v59 = &v44[16 * v11 - 32];
          uint64_t v61 = *(void *)v59;
          uint64_t v60 = *((void *)v59 + 1);
          BOOL v57 = __OFSUB__(v60, v61);
          uint64_t v62 = v60 - v61;
          if (v57) {
            goto LABEL_135;
          }
          BOOL v57 = __OFADD__(v49, v62);
          uint64_t v63 = v49 + v62;
          if (v57) {
            goto LABEL_138;
          }
          if (v63 >= v54)
          {
            uint64_t v81 = &v44[16 * v46];
            uint64_t v83 = *(void *)v81;
            uint64_t v82 = *((void *)v81 + 1);
            BOOL v57 = __OFSUB__(v82, v83);
            uint64_t v84 = v82 - v83;
            if (v57) {
              goto LABEL_142;
            }
            BOOL v74 = v49 < v84;
            goto LABEL_100;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v75 = *((void *)v9 + 4);
            uint64_t v76 = *((void *)v9 + 5);
            BOOL v57 = __OFSUB__(v76, v75);
            uint64_t v68 = v76 - v75;
            char v69 = v57;
            goto LABEL_94;
          }
          uint64_t v48 = *((void *)v9 + 4);
          uint64_t v47 = *((void *)v9 + 5);
          BOOL v57 = __OFSUB__(v47, v48);
          uint64_t v49 = v47 - v48;
          char v50 = v57;
        }
        if (v50) {
          goto LABEL_134;
        }
        unint64_t v58 = v11 - 2;
        long long v64 = &v44[16 * v11 - 32];
        uint64_t v66 = *(void *)v64;
        uint64_t v65 = *((void *)v64 + 1);
        BOOL v67 = __OFSUB__(v65, v66);
        uint64_t v68 = v65 - v66;
        char v69 = v67;
        if (v67) {
          goto LABEL_137;
        }
        uint64_t v70 = &v44[16 * v46];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v57 = __OFSUB__(v71, v72);
        uint64_t v73 = v71 - v72;
        if (v57) {
          goto LABEL_140;
        }
        if (__OFADD__(v68, v73)) {
          goto LABEL_141;
        }
        if (v68 + v73 >= v49)
        {
          BOOL v74 = v49 < v73;
LABEL_100:
          if (v74) {
            unint64_t v46 = v58;
          }
          goto LABEL_102;
        }
LABEL_94:
        if (v69) {
          goto LABEL_136;
        }
        long long v77 = &v44[16 * v46];
        uint64_t v79 = *(void *)v77;
        uint64_t v78 = *((void *)v77 + 1);
        BOOL v57 = __OFSUB__(v78, v79);
        uint64_t v80 = v78 - v79;
        if (v57) {
          goto LABEL_139;
        }
        if (v80 < v68) {
          goto LABEL_15;
        }
LABEL_102:
        unint64_t v85 = v46 - 1;
        if (v46 - 1 >= v11)
        {
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
          goto LABEL_152;
        }
        if (!v43) {
          goto LABEL_154;
        }
        uint64_t v86 = &v44[16 * v85];
        uint64_t v87 = *(void *)v86;
        unint64_t v88 = v46;
        uint64_t v89 = &v44[16 * v46];
        uint64_t v90 = *((void *)v89 + 1);
        uint64_t v91 = (char *)(v43 + 56 * *(void *)v86);
        long long v127 = (char *)(v43 + 56 * *(void *)v89);
        unint64_t v92 = v43 + 56 * v90;
        swift_retain();
        sub_2498E95C0(v91, v127, v92, v114);
        if (v115)
        {
LABEL_110:
          swift_bridgeObjectRelease();
          swift_release();
          *(void *)(v106 + 16) = 0;
          goto LABEL_125;
        }
        swift_release();
        if (v90 < v87) {
          goto LABEL_129;
        }
        if (v88 > *((void *)v9 + 2)) {
          goto LABEL_130;
        }
        unint64_t v93 = v88;
        *(void *)uint64_t v86 = v87;
        uint64_t v44 = v9 + 32;
        *(void *)&v9[16 * v85 + 40] = v90;
        unint64_t v94 = *((void *)v9 + 2);
        if (v93 >= v94) {
          goto LABEL_131;
        }
        unint64_t v11 = v94 - 1;
        memmove(v89, v89 + 16, 16 * (v94 - 1 - v93));
        *((void *)v9 + 2) = v94 - 1;
        uint64_t v43 = v116;
        if (v94 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    uint64_t v10 = v112;
    uint64_t v8 = v119;
    if (v119 >= v112) {
      goto LABEL_113;
    }
  }
  if (__OFADD__(v12, v107)) {
    goto LABEL_151;
  }
  if (v12 + v107 >= v10) {
    uint64_t v29 = v10;
  }
  else {
    uint64_t v29 = v12 + v107;
  }
  if (v29 >= v12)
  {
    if (v13 != v29)
    {
      uint64_t v108 = v29;
      uint64_t v30 = (void *)(v103 + 56 * v13);
      do
      {
        uint64_t v118 = v13;
        uint64_t v113 = v30;
        do
        {
          uint64_t v120 = v12;
          char v31 = v30 - 13;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_getAtKeyPath();
          swift_getAtKeyPath();
          if (v125 == v123 && v126 == v124) {
            char v32 = 0;
          }
          else {
            char v32 = sub_249AEE0D8();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v32 & 1) == 0) {
            break;
          }
          if (!v116) {
            goto LABEL_153;
          }
          uint64_t v33 = *(v30 - 7);
          *(v30 - 7) = *v30;
          v30 -= 7;
          uint64_t v34 = v30[1];
          uint64_t v35 = v30[2];
          uint64_t v37 = v30[3];
          uint64_t v36 = v30[4];
          uint64_t v39 = v30[5];
          uint64_t v38 = v30[6];
          long long v40 = *((_OWORD *)v31 + 1);
          *(_OWORD *)(v31 + 7) = *(_OWORD *)v31;
          *(_OWORD *)(v31 + 9) = v40;
          *(_OWORD *)(v31 + 11) = *((_OWORD *)v31 + 2);
          v31[13] = v33;
          *(v30 - 6) = v34;
          *(v30 - 5) = v35;
          *(v30 - 4) = v37;
          *(v30 - 3) = v36;
          uint64_t v12 = v120 + 1;
          *(v30 - 2) = v39;
          *(v30 - 1) = v38;
        }
        while (v13 != v120 + 1);
        ++v13;
        uint64_t v30 = v113 + 7;
        uint64_t v12 = v111;
      }
      while (v118 + 1 != v108);
      uint64_t v13 = v108;
    }
    goto LABEL_63;
  }
LABEL_152:
  __break(1u);
LABEL_153:
  swift_release_n();
  __break(1u);
LABEL_154:
  swift_release_n();
  __break(1u);
LABEL_155:
  swift_release_n();
  __break(1u);
LABEL_156:
  swift_release_n();
  __break(1u);
LABEL_157:
  swift_release_n();
  uint64_t result = sub_249AEDC48();
  __break(1u);
  return result;
}

uint64_t sub_2498EA964(uint64_t *a1)
{
  uint64_t v2 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24998EFA4(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  swift_retain();
  sub_2498E9D94(v5);
  swift_release();
  *a1 = v2;
  return swift_release_n();
}

uint64_t sub_2498EAA08(uint64_t a1, void *a2)
{
  uint64_t v23 = a2;
  uint64_t v4 = type metadata accessor for Layout();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v21 - v9;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    v21[1] = v2;
    uint64_t v13 = *(void *)(v8 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v14 = a1 + v22;
    uint64_t v15 = MEMORY[0x263F8EE78];
    while (1)
    {
      sub_2498EC5EC(v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Layout);
      uint64_t v16 = &v10[*(int *)(v4 + 28)];
      uint64_t v17 = *((void *)v16 + 1);
      if (v17)
      {
        BOOL v18 = *(void *)v16 == *v23 && v17 == v23[1];
        if (v18 || (sub_249AEE0D8() & 1) != 0)
        {
          sub_2498EC6B0((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Layout);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_249A220F0(0, *(void *)(v15 + 16) + 1, 1);
          }
          uint64_t v15 = v24;
          unint64_t v20 = *(void *)(v24 + 16);
          unint64_t v19 = *(void *)(v24 + 24);
          if (v20 >= v19 >> 1)
          {
            sub_249A220F0(v19 > 1, v20 + 1, 1);
            uint64_t v15 = v24;
          }
          *(void *)(v15 + 16) = v20 + 1;
          sub_2498EC6B0((uint64_t)v6, v15 + v22 + v20 * v13, (uint64_t (*)(void))type metadata accessor for Layout);
          goto LABEL_5;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_2498EC654((uint64_t)v10);
LABEL_5:
      v14 += v13;
      if (!--v12) {
        return v24;
      }
    }
  }
  return result;
}

void *sub_2498EAC58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4E0);
  uint64_t result = (void *)sub_249AEDC88();
  int64_t v5 = 0;
  uint64_t v47 = result;
  uint64_t v48 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v44 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v43 = v3;
  int64_t v45 = (unint64_t)(v7 + 63) >> 6;
  unint64_t v46 = result + 8;
  if ((v8 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v10 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v5 << 6))
  {
    uint64_t v15 = *(void *)(v48 + 48) + 24 * i;
    uint64_t v17 = *(void *)v15;
    uint64_t v16 = *(void *)(v15 + 8);
    char v18 = *(unsigned char *)(v15 + 16);
    unint64_t v19 = (uint64_t *)(*(void *)(v48 + 56) + 24 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v22 = v19[2];
    if (v21 < 0)
    {
      uint64_t v52 = v19[1];
      uint64_t v34 = v3;
      uint64_t v35 = v17;
      uint64_t v36 = v17;
      uint64_t v37 = v16;
      char v38 = v18;
      sub_24988D770(v35, v16, v18);
      sub_249890CB0(v20, v52);
      uint64_t result = v47;
    }
    else
    {
      unint64_t v51 = v9;
      int64_t v53 = v5;
      uint64_t v23 = *(void *)(v3 + 16);
      uint64_t v49 = v16;
      char v50 = v18;
      sub_24988D770(v17, v16, v18);
      if (!v23) {
        goto LABEL_40;
      }
      LOBYTE(v56[0]) = v21 & 1;
      unint64_t v24 = sub_2498EEF60(v20, v21 & 1, v22);
      if ((v25 & 1) == 0) {
        goto LABEL_40;
      }
      uint64_t v55 = *(void *)(*(void *)(v3 + 56) + 8 * v24);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF500);
      long long v26 = (void *)sub_249AEDCA8();
      unint64_t v27 = sub_2498EF500(0.0);
      if (v28) {
        goto LABEL_36;
      }
      v26[(v27 >> 6) + 8] |= 1 << v27;
      uint64_t v29 = 8 * v27;
      *(void *)(v26[6] + v29) = 0;
      *(void *)(v26[7] + v29) = v55;
      uint64_t v30 = v26[2];
      BOOL v12 = __OFADD__(v30, 1);
      uint64_t v31 = v30 + 1;
      if (v12) {
        goto LABEL_37;
      }
      long long v26[2] = v31;
      swift_retain_n();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA0);
      swift_arrayDestroy();
      uint64_t v32 = sub_249A01E48((uint64_t)v26);
      swift_release();
      if (*(void *)(v32 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA8);
        uint64_t v33 = sub_249AEDCA8();
      }
      else
      {
        uint64_t v33 = MEMORY[0x263F8EE80];
      }
      v56[0] = v33;
      uint64_t v39 = (void *)swift_bridgeObjectRetain();
      sub_249A05944(v39, 1, v56);
      if (v54) {
        goto LABEL_41;
      }
      swift_release();
      swift_bridgeObjectRelease();
      sub_249890CBC(v20, v21);
      uint64_t v20 = v56[0];
      uint64_t result = v47;
      uint64_t v34 = v43;
      unint64_t v9 = v51;
      int64_t v5 = v53;
      char v38 = v50;
      uint64_t v36 = v17;
      uint64_t v37 = v49;
    }
    *(void *)((char *)v46 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v40 = result[6] + 24 * i;
    *(void *)uint64_t v40 = v36;
    *(void *)(v40 + 8) = v37;
    *(unsigned char *)(v40 + 16) = v38;
    *(void *)(result[7] + 8 * i) = v20;
    uint64_t v41 = result[2];
    BOOL v12 = __OFADD__(v41, 1);
    uint64_t v42 = v41 + 1;
    if (v12)
    {
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    result[2] = v42;
    uint64_t v3 = v34;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v12 = __OFADD__(v5++, 1);
    if (v12) {
      goto LABEL_38;
    }
    if (v5 >= v45) {
      return result;
    }
    unint64_t v13 = *(void *)(v44 + 8 * v5);
    if (!v13) {
      break;
    }
LABEL_15:
    unint64_t v9 = (v13 - 1) & v13;
  }
  int64_t v14 = v5 + 1;
  if (v5 + 1 >= v45) {
    return result;
  }
  unint64_t v13 = *(void *)(v44 + 8 * v14);
  if (v13) {
    goto LABEL_14;
  }
  int64_t v14 = v5 + 2;
  if (v5 + 2 >= v45) {
    return result;
  }
  unint64_t v13 = *(void *)(v44 + 8 * v14);
  if (v13) {
    goto LABEL_14;
  }
  int64_t v14 = v5 + 3;
  if (v5 + 3 >= v45) {
    return result;
  }
  unint64_t v13 = *(void *)(v44 + 8 * v14);
  if (v13)
  {
LABEL_14:
    int64_t v5 = v14;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v45) {
      return result;
    }
    unint64_t v13 = *(void *)(v44 + 8 * v5);
    ++v14;
    if (v13) {
      goto LABEL_15;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  v56[0] = 0;
  v56[1] = 0xE000000000000000;
  sub_249AEDA78();
  sub_249AED1E8();
  sub_249AEDC08();
  sub_249AED1E8();
  sub_249AEDF48();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AEDC58();
  __break(1u);
LABEL_41:
  uint64_t result = (void *)swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_2498EB13C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t *a5)
{
  uint64_t v47 = a1;
  uint64_t v28 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a2 + 64);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v34 = (v7 - 1) & v7;
  int64_t v35 = v9;
  for (unint64_t i = __clz(__rbit64(v7)) | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v12 << 6))
  {
    uint64_t v15 = *(void *)(a2 + 48) + 112 * i;
    uint64_t v17 = *(void *)(v15 + 16);
    uint64_t v16 = *(void *)(v15 + 24);
    uint64_t v19 = *(void *)(v15 + 32);
    uint64_t v18 = *(void *)(v15 + 40);
    uint64_t v20 = *(void *)(v15 + 48);
    uint64_t v21 = *(void *)(v15 + 56);
    char v22 = *(unsigned char *)(v15 + 64);
    uint64_t v23 = *(void *)(v15 + 72);
    uint64_t v24 = *(void *)(v15 + 80);
    uint64_t v25 = *(void *)(v15 + 88);
    char v26 = *(unsigned char *)(v15 + 96);
    uint64_t v27 = *(void *)(v15 + 104);
    uint64_t v36 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v37 = *(void *)(v15 + 8);
    v39[0] = *(void *)v15;
    v39[1] = v37;
    v39[2] = v17;
    v39[3] = v16;
    v39[4] = v19;
    v39[5] = v18;
    v39[6] = v20;
    v39[7] = v21;
    char v40 = v22;
    uint64_t v41 = v23;
    uint64_t v42 = v24;
    uint64_t v43 = v25;
    char v44 = v26;
    uint64_t v45 = v27;
    uint64_t v46 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24988CD7C(v16, v19, v18, v20, v21, v22);
    sub_24988CDF0(v24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2498DCE38(&v47, (uint64_t)v39, a3, a4, a5);
    if (v38)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249889FFC(v16, v19, v18, v20, v21, v22);
      sub_24988D7A0(v24);
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249889FFC(v16, v19, v18, v20, v21, v22);
    sub_24988D7A0(v24);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    unint64_t v7 = v34;
    int64_t v9 = v35;
    if (v34) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v11 = __OFADD__(v9, 1);
    int64_t v12 = v9 + 1;
    if (v11)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v12 >= v29) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v12);
    if (!v13) {
      break;
    }
LABEL_17:
    uint64_t v34 = (v13 - 1) & v13;
    int64_t v35 = v12;
  }
  int64_t v14 = v12 + 1;
  if (v12 + 1 >= v29) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v12 + 2;
  if (v12 + 2 >= v29) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v12 + 3;
  if (v12 + 3 >= v29) {
    goto LABEL_26;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v12 + 4;
  if (v12 + 4 >= v29)
  {
LABEL_26:
    swift_release();
    return v47;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v12 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v12 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v12 >= v29) {
      goto LABEL_26;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v12);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_2498EB45C(uint64_t a1)
{
  return a1;
}

unint64_t sub_2498EB4B0()
{
  unint64_t result = qword_2696DF2C0;
  if (!qword_2696DF2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF2C0);
  }
  return result;
}

unint64_t sub_2498EB504()
{
  unint64_t result = qword_2696DF2D0;
  if (!qword_2696DF2D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF2C8);
    sub_2498B4CA0(&qword_2696DDC38, &qword_2696DDB20);
    sub_2498EB5A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF2D0);
  }
  return result;
}

unint64_t sub_2498EB5A4()
{
  unint64_t result = qword_2696DF2D8;
  if (!qword_2696DF2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF2D8);
  }
  return result;
}

unint64_t sub_2498EB5F8()
{
  unint64_t result = qword_2696DF2E8;
  if (!qword_2696DF2E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF2E0);
    sub_2498B4CA0(&qword_2696DE450, &qword_2696DDB18);
    sub_2498EB698();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF2E8);
  }
  return result;
}

unint64_t sub_2498EB698()
{
  unint64_t result = qword_2696DF2F0;
  if (!qword_2696DF2F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF2F8);
    sub_2498B4CA0(&qword_2696DDC38, &qword_2696DDB20);
    sub_2498EB778(&qword_2696DDC40, (void (*)(void))sub_24988E268, (void (*)(void))sub_24988E2BC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF2F0);
  }
  return result;
}

uint64_t sub_2498EB778(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDC08);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2498EB800(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2498B4CA0(&qword_2696DE450, &qword_2696DDB18);
    sub_2498B4CA0(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498EB8BC()
{
  unint64_t result = qword_2696DF328;
  if (!qword_2696DF328)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF2C8);
    sub_2498B4CA0(&qword_2696DDC00, &qword_2696DDB20);
    sub_2498EB95C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF328);
  }
  return result;
}

unint64_t sub_2498EB95C()
{
  unint64_t result = qword_2696DF330;
  if (!qword_2696DF330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF330);
  }
  return result;
}

unint64_t sub_2498EB9B0()
{
  unint64_t result = qword_2696DF338;
  if (!qword_2696DF338)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF2E0);
    sub_2498B4CA0(&qword_2696DE490, &qword_2696DDB18);
    sub_2498EBA50();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF338);
  }
  return result;
}

unint64_t sub_2498EBA50()
{
  unint64_t result = qword_2696DF340;
  if (!qword_2696DF340)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF2F8);
    sub_2498B4CA0(&qword_2696DDC00, &qword_2696DDB20);
    sub_2498EB778(&qword_2696DDC10, (void (*)(void))sub_24988E104, (void (*)(void))sub_24988E158);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF340);
  }
  return result;
}

uint64_t sub_2498EBB30(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2498B4CA0(&qword_2696DE490, &qword_2696DDB18);
    sub_2498B4CA0(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_2498EBBEC(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 105) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t destroy for ResolvedTheme()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ResolvedTheme(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ResolvedTheme(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  return a1;
}

uint64_t assignWithTake for ResolvedTheme(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for InstrumentFont(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InstrumentFont(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResolvedTheme()
{
  return &type metadata for ResolvedTheme;
}

unsigned char *storeEnumTagSinglePayload for ResolvedTheme.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498EBF74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ResolvedTheme.CodingKeys()
{
  return &type metadata for ResolvedTheme.CodingKeys;
}

unint64_t sub_2498EBFB0()
{
  unint64_t result = qword_2696DF358;
  if (!qword_2696DF358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF358);
  }
  return result;
}

unint64_t sub_2498EC008()
{
  unint64_t result = qword_2696DF360;
  if (!qword_2696DF360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF360);
  }
  return result;
}

unint64_t sub_2498EC060()
{
  unint64_t result = qword_2696DF368;
  if (!qword_2696DF368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF368);
  }
  return result;
}

uint64_t sub_2498EC0B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73657474656C6170 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x745374756F79616CLL && a2 == 0xEC00000073656C79 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B151A0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000249B151C0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2498EC27C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2498EC32C(&qword_2696DF428);
    sub_2498EC32C(&qword_2696DF430);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2498EC32C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_249AEB808();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498EC370()
{
  unint64_t result = qword_2696DF468;
  if (!qword_2696DF468)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF458);
    sub_2498EC3E4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF468);
  }
  return result;
}

unint64_t sub_2498EC3E4()
{
  unint64_t result = qword_2696DF470;
  if (!qword_2696DF470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF470);
  }
  return result;
}

uint64_t sub_2498EC438(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2498EC44C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v9 = *(void *)(a1 + 120);
  uint64_t v8 = *(void *)(a1 + 64);
  char v6 = *(unsigned char *)(a1 + 104);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_249889FFC(v8, v2, v3, v4, v5, v6);
  sub_24988D7A0(v9);
  return a1;
}

uint64_t sub_2498EC510()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249889FFC(*(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  if (*(void *)(v0 + 96))
  {
    swift_release();
    swift_release();
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, 128, 7);
}

uint64_t sub_2498EC580@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_249893F4C(a1, (long long *)(v2 + 16), a2);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_2498EC5EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2498EC654(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Layout();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2498EC6B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

NSFileWrapper_optional __swiftcall NSFileWrapper.directory(at:creatingIntermediateDirectories:)(Swift::String at, Swift::Bool creatingIntermediateDirectories)
{
  uint64_t v4 = (void *)sub_249AED0A8();
  id v5 = objc_msgSend(v4, sel_pathComponents);

  uint64_t v6 = sub_249AED428();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    id v8 = v2;
    uint64_t v9 = (uint64_t *)(v6 + 40);
    while (1)
    {
      uint64_t v12 = *(v9 - 1);
      uint64_t v11 = *v9;
      swift_bridgeObjectRetain();
      if (!objc_msgSend(v8, sel_isDirectory))
      {
LABEL_13:
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_19;
      }
      id v13 = objc_msgSend(v8, sel_fileWrappers);
      if (v13)
      {
        int64_t v14 = v13;
        sub_24987BE44();
        uint64_t v15 = sub_249AECE98();

        if (*(void *)(v15 + 16))
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = sub_2498F0930(v12, v11, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
          if (v17)
          {
            id v10 = *(id *)(*(void *)(v15 + 56) + 8 * v16);

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
      }
      if (!creatingIntermediateDirectories) {
        goto LABEL_13;
      }
      id v18 = objc_allocWithZone(MEMORY[0x263F08870]);
      sub_24987BE44();
      uint64_t v19 = (void *)sub_249AECE78();
      id v10 = objc_msgSend(v18, sel_initDirectoryWithFileWrappers_, v19);

      uint64_t v20 = (void *)sub_249AED0A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v10, sel_setPreferredFilename_, v20);

LABEL_4:
      id v8 = v10;
      v9 += 2;
      if (!--v7) {
        goto LABEL_15;
      }
    }
  }
  id v8 = v2;
LABEL_15:
  swift_bridgeObjectRelease();
  if (!objc_msgSend(v8, sel_isDirectory))
  {

    goto LABEL_19;
  }
  sub_24987BE44();
  id v22 = v8;
  char v23 = sub_249AED888();

  if (v23)
  {

LABEL_19:
    id v22 = 0;
  }
  uint64_t v24 = (objc_class *)v22;
  result.value.super.isa = v24;
  result.is_nil = v21;
  return result;
}

Swift::Void __swiftcall NSFileWrapper.remove(named:)(Swift::String named)
{
  uint64_t v2 = v1;
  object = named._object;
  uint64_t countAndFlagsBits = named._countAndFlagsBits;
  id v5 = objc_msgSend(v2, sel_fileWrappers);
  if (!v5) {
    return;
  }
  uint64_t v6 = v5;
  sub_24987BE44();
  uint64_t v7 = sub_249AECE98();

  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2498F0930(countAndFlagsBits, (uint64_t)object, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
    if (v9)
    {
      id v10 = *(id *)(*(void *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      objc_msgSend(v2, sel_removeFileWrapper_, v10);

      return;
    }
    swift_bridgeObjectRelease();
  }

  swift_bridgeObjectRelease();
}

unint64_t sub_2498ECB24(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF530);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF538);
  uint64_t v6 = sub_249AEDCA8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2498D6084(v12, (uint64_t)v5, &qword_2696DF530);
    unint64_t result = sub_2498EF234((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_249AEDC28();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    unint64_t result = (unint64_t)sub_2498DA208(v9, (_OWORD *)(v7[7] + 32 * v16));
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498ECD24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF370);
  uint64_t v2 = (void *)sub_249AEDCA8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 3);
    uint64_t v7 = *((void *)v4 - 2);
    char v8 = *((unsigned char *)v4 - 8);
    long long v15 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_2498EF298(v5, v6, v7, v8);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = v2[6] + 32 * result;
    *(void *)uint64_t v11 = v5;
    *(void *)(v11 + 8) = v6;
    *(void *)(v11 + 16) = v7;
    *(unsigned char *)(v11 + 24) = v8;
    *(_OWORD *)(v2[7] + 16 * result) = v15;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498ECE6C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF590);
  uint64_t v2 = sub_249AEDCA8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2498D6084(v6, (uint64_t)&v15, &qword_2696DF598);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2498F0930(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_2498DA208(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498ECFB8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF518);
  uint64_t v2 = sub_249AEDCA8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2498D6084(v6, (uint64_t)&v15, &qword_2696DF5A0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2498F0930(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_249882BCC(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498ED110(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF560);
  uint64_t v2 = (void *)sub_249AEDCA8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_2498EF358((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498ED21C(uint64_t a1)
{
  return sub_2498ED26C(a1, &qword_2696DF550, &qword_2696DF558, (uint64_t (*)(uint64_t))sub_2498EF358);
}

unint64_t sub_2498ED244(uint64_t a1)
{
  return sub_2498ED26C(a1, &qword_2696DF540, &qword_2696DF548, (uint64_t (*)(uint64_t))sub_2498EF3E8);
}

unint64_t sub_2498ED26C(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = sub_249AEDCA8();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2498D6084(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_2498DA208(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    uint64_t v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498ED39C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF480);
  uint64_t v2 = (void *)sub_249AEDCA8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_2498F0930(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498ED4CC(uint64_t a1)
{
  return sub_2498ED640(a1, &qword_2696DF580, &qword_2696DF380, (uint64_t (*)(void))type metadata accessor for RequestContentModel, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
}

unint64_t sub_2498ED508(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF490);
  uint64_t v2 = (void *)sub_249AEDCA8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    char v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_2498EF5FC(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498ED604(uint64_t a1)
{
  return sub_2498ED640(a1, &qword_2696DF578, &qword_2696DF4A8, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

unint64_t sub_2498ED640(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    BOOL v13 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v12 = sub_249AEDCA8();
  BOOL v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = (uint64_t)&v11[*(int *)(v8 + 48)];
  uint64_t v16 = v12 + 64;
  unint64_t v17 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v30[1] = a1;
  uint64_t v18 = a1 + v17;
  uint64_t v19 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    sub_2498D6084(v18, (uint64_t)v11, a2);
    unint64_t result = sub_2498EF548((uint64_t)v11);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v16 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[6];
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    sub_2498F101C((uint64_t)v11, v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22);
    uint64_t v25 = v13[7];
    uint64_t v26 = v31(0);
    unint64_t result = sub_2498F1084(v15, v25 + *(void *)(*(void *)(v26 - 8) + 72) * v22, v32);
    uint64_t v27 = v13[2];
    BOOL v28 = __OFADD__(v27, 1);
    uint64_t v29 = v27 + 1;
    if (v28) {
      goto LABEL_11;
    }
    _OWORD v13[2] = v29;
    v18 += v19;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498ED84C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF570);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4A0);
  uint64_t v6 = sub_249AEDCA8();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_2498D6084(v12, (uint64_t)v5, &qword_2696DF570);
    unint64_t result = sub_2498EF548((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    unint64_t result = sub_2498F101C((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16);
    *(unsigned char *)(v7[7] + v16) = v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498EDA30(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF498);
  uint64_t v2 = (void *)sub_249AEDCA8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2498F0930(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498EDB68(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3B8);
  uint64_t v2 = (void *)sub_249AEDCA8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2498EF1B0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498EDC84(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_11;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3B0);
  uint64_t v2 = (void *)sub_249AEDCA8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = *(_OWORD *)(a1 + 144);
  long long v37 = *(_OWORD *)(a1 + 128);
  v38[0] = v4;
  *(_OWORD *)((char *)v38 + 9) = *(_OWORD *)(a1 + 153);
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v31 = *(_OWORD *)(a1 + 32);
  long long v32 = v5;
  long long v6 = *(_OWORD *)(a1 + 80);
  long long v33 = *(_OWORD *)(a1 + 64);
  long long v34 = v6;
  long long v7 = *(_OWORD *)(a1 + 112);
  long long v35 = *(_OWORD *)(a1 + 96);
  long long v36 = v7;
  uint64_t v9 = *((void *)&v31 + 1);
  uint64_t v8 = v31;
  sub_2498F0870((uint64_t)&v31);
  unint64_t result = sub_2498EF1B0(v8, v9);
  if (v11)
  {
LABEL_8:
    __break(1u);
LABEL_9:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v12 = 176;
  while (1)
  {
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v8;
    v13[1] = v9;
    BOOL v14 = (_OWORD *)(v2[7] + (result << 7));
    long long v15 = v32;
    long long v16 = v33;
    long long v17 = v35;
    void v14[2] = v34;
    void v14[3] = v17;
    *BOOL v14 = v15;
    v14[1] = v16;
    long long v18 = v36;
    long long v19 = v37;
    long long v20 = v38[0];
    *(_OWORD *)((char *)v14 + 105) = *(_OWORD *)((char *)v38 + 9);
    v14[5] = v19;
    v14[6] = v20;
    v14[4] = v18;
    uint64_t v21 = v2[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      break;
    }
    v2[2] = v23;
    if (!--v3) {
      goto LABEL_9;
    }
    uint64_t v24 = v12 + 144;
    uint64_t v25 = (long long *)(a1 + v12);
    long long v26 = v25[7];
    long long v37 = v25[6];
    v38[0] = v26;
    *(_OWORD *)((char *)v38 + 9) = *(long long *)((char *)v25 + 121);
    long long v27 = v25[1];
    long long v31 = *v25;
    long long v32 = v27;
    long long v28 = v25[3];
    long long v33 = v25[2];
    long long v34 = v28;
    long long v29 = v25[5];
    long long v35 = v25[4];
    long long v36 = v29;
    uint64_t v9 = *((void *)&v31 + 1);
    uint64_t v8 = v31;
    sub_2498F0870((uint64_t)&v31);
    unint64_t result = sub_2498EF1B0(v8, v9);
    uint64_t v12 = v24;
    if (v30) {
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2498EDE40(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF510);
  uint64_t v2 = (void *)sub_249AEDCA8();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = (void *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *(v4 - 5);
    uint64_t v6 = *(v4 - 4);
    uint64_t v8 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    char v9 = *((unsigned char *)v4 - 8);
    uint64_t v10 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2498F0930(v5, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
    if (v12) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v13 = v5;
    v13[1] = v6;
    uint64_t v14 = v2[7] + 32 * result;
    *(void *)uint64_t v14 = v8;
    *(void *)(v14 + 8) = v7;
    *(unsigned char *)(v14 + 16) = v9;
    *(void *)(v14 + 24) = v10;
    uint64_t v15 = v2[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v4 += 6;
    v2[2] = v17;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498EDF94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF528);
  uint64_t v2 = sub_249AEDCA8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v21 = v2 + 64;
  swift_retain();
  uint64_t v5 = a1 + 48;
  while (1)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(void *)(v5 - 16);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void **)v5;
    uint64_t v9 = *(void *)(v5 + 8);
    uint64_t v10 = *(void **)(v5 + 16);
    uint64_t v11 = *(void *)(v5 + 24);
    char v12 = *(unsigned char *)(v5 + 32);
    uint64_t v13 = *(void *)(v5 + 40);
    char v23 = *(unsigned char *)(v5 + 48);
    swift_bridgeObjectRetain();
    sub_24988247C(v8, v9, v10, v11, v12);
    unint64_t result = sub_2498F0930(v6, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v16 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v16 = v6;
    v16[1] = v7;
    uint64_t v17 = v3[7] + 56 * result;
    *(void *)uint64_t v17 = v8;
    *(void *)(v17 + 8) = v9;
    *(void *)(v17 + 16) = v10;
    *(void *)(v17 + 24) = v11;
    *(unsigned char *)(v17 + 32) = v12;
    *(void *)(v17 + 40) = v13;
    *(unsigned char *)(v17 + 48) = v23;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v3[2] = v20;
    v5 += 72;
    uint64_t v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_2498EE124(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3A0);
  uint64_t v2 = sub_249AEDCA8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v21 = v2 + 64;
  swift_retain();
  uint64_t v5 = (void *)(a1 + 128);
  while (1)
  {
    uint64_t v22 = v4;
    uint64_t v6 = *(v5 - 12);
    uint64_t v7 = *(v5 - 11);
    uint64_t v9 = *(v5 - 10);
    uint64_t v8 = *(v5 - 9);
    uint64_t v10 = *(v5 - 7);
    uint64_t v11 = *(v5 - 5);
    uint64_t v26 = *(v5 - 6);
    uint64_t v27 = *(v5 - 8);
    uint64_t v12 = *(v5 - 3);
    uint64_t v25 = *(v5 - 4);
    char v24 = *((unsigned char *)v5 - 16);
    uint64_t v13 = *v5;
    uint64_t v23 = *(v5 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_2498F0930(v6, v7, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
    if (v15) {
      break;
    }
    *(void *)(v21 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v16 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v16 = v6;
    v16[1] = v7;
    uint64_t v17 = v3[7] + 88 * result;
    *(void *)uint64_t v17 = v9;
    *(void *)(v17 + 8) = v8;
    *(void *)(v17 + 16) = v27;
    *(void *)(v17 + 24) = v10;
    *(void *)(v17 + 32) = v26;
    *(void *)(v17 + 40) = v11;
    *(void *)(v17 + 48) = v25;
    *(void *)(v17 + 56) = v12;
    *(unsigned char *)(v17 + 64) = v24;
    *(void *)(v17 + 72) = v23;
    *(void *)(v17 + 80) = v13;
    uint64_t v18 = v3[2];
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_11;
    }
    v3[2] = v20;
    v5 += 13;
    uint64_t v4 = v22 - 1;
    if (v22 == 1)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

NSFileWrapper_optional __swiftcall NSFileWrapper.child(at:)(Swift::String at)
{
  uint64_t v2 = (void *)sub_249AED0A8();
  id v3 = objc_msgSend(v2, sel_pathComponents);

  uint64_t v4 = sub_249AED428();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    id v6 = v1;
    uint64_t v7 = (uint64_t *)(v4 + 40);
    while (1)
    {
      uint64_t v9 = *(v7 - 1);
      uint64_t v8 = *v7;
      swift_bridgeObjectRetain();
      if (!objc_msgSend(v6, sel_isDirectory))
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
      id v10 = objc_msgSend(v6, sel_fileWrappers);
      if (!v10) {
        break;
      }
      uint64_t v11 = v10;
      sub_24987BE44();
      uint64_t v12 = sub_249AECE98();

      if (!*(void *)(v12 + 16)
        || (uint64_t v13 = sub_2498F0930(v9, v8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C), (v14 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      v7 += 2;
      id v15 = *(id *)(*(void *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      id v6 = v15;
      if (!--v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
  }
  else
  {
    id v15 = v1;
    swift_bridgeObjectRelease();
LABEL_10:
    sub_24987BE44();
    id v6 = v15;
    char v16 = sub_249AED888();

    if ((v16 & 1) == 0) {
      goto LABEL_18;
    }
  }

LABEL_17:
  id v6 = 0;
LABEL_18:
  uint64_t v18 = (objc_class *)v6;
  result.value.super.isa = v18;
  result.is_nil = v17;
  return result;
}

uint64_t NSFileWrapper.addRegularFile(withContents:fileName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  v23[1] = a2;
  uint64_t v8 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_249AEB4E8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = objc_msgSend(v5, sel_fileWrappers);
  if (v13)
  {
    char v14 = v13;
    v23[0] = v10;
    sub_24987BE44();
    uint64_t v15 = sub_249AECE98();

    if (*(void *)(v15 + 16))
    {
      swift_bridgeObjectRetain();
      sub_2498F0930(a3, a4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
      char v17 = v16;
      swift_bridgeObjectRelease();
      if (v17)
      {
        swift_bridgeObjectRelease();
        sub_249AEB4B8();
        sub_2498F0724(MEMORY[0x263F8EE78]);
        sub_2498F0F74((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
        sub_249AEB708();
        sub_249AEB458();
        (*(void (**)(char *, uint64_t))(v23[0] + 8))(v12, v9);
        return swift_willThrow();
      }
    }
    swift_bridgeObjectRelease();
  }
  BOOL v19 = (void *)sub_249AEB788();
  uint64_t v20 = (void *)sub_249AED0A8();
  id v21 = objc_msgSend(v5, sel_addRegularFileWithContents_preferredFilename_, v19, v20);

  uint64_t v22 = sub_249AED0D8();
  return v22;
}

NSFileWrapper_optional __swiftcall NSFileWrapper.fileWrapper(named:)(Swift::String named)
{
  object = named._object;
  uint64_t countAndFlagsBits = named._countAndFlagsBits;
  id v4 = objc_msgSend(v1, sel_fileWrappers);
  if (v4)
  {
    id v6 = v4;
    sub_24987BE44();
    uint64_t v7 = sub_249AECE98();

    if (*(void *)(v7 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_2498F0930(countAndFlagsBits, (uint64_t)object, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
      if (v9)
      {
        uint64_t v10 = *(void **)(*(void *)(v7 + 56) + 8 * v8);
        id v11 = v10;
      }
      else
      {
        uint64_t v10 = 0;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 0;
  }
  uint64_t v12 = (objc_class *)v10;
  result.value.super.isa = v12;
  result.is_nil = v5;
  return result;
}

Swift::String __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> NSFileWrapper.checkedAddFileWrapper(_:)(NSFileWrapper a1)
{
  id v3 = v1;
  uint64_t v5 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v6 = sub_249AEB4E8();
  uint64_t v7 = *(void *)(v6 - 8);
  *(void *)&double v8 = MEMORY[0x270FA5388](v6).n128_u64[0];
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [(objc_class *)a1.super.isa preferredFilename];
  if (!v11)
  {
    sub_249AEB4C8();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    goto LABEL_7;
  }
  uint64_t v12 = v11;
  uint64_t v36 = v2;
  uint64_t v33 = v7;
  uint64_t v13 = sub_249AED0D8();
  uint64_t v15 = v14;

  id v16 = objc_msgSend(v3, sel_fileWrappers);
  if (!v16)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v3, sel_addFileWrapper_, a1.super.isa);
    uint64_t v28 = sub_249AED0D8();
    char v30 = v29;

    uint64_t v25 = v28;
    uint64_t v26 = v30;
    goto LABEL_10;
  }
  char v17 = v16;
  sub_24987BE44();
  uint64_t v18 = sub_249AECE98();

  if (!*(void *)(v18 + 16)
    || (swift_bridgeObjectRetain(),
        sub_2498F0930(v13, v15, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C),
        char v20 = v19,
        swift_bridgeObjectRelease(),
        (v20 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  sub_249AEB4B8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF520);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  *(void *)(inited + 32) = sub_249AED0D8();
  *(void *)(inited + 40) = v22;
  uint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  sub_249AEDA78();
  swift_bridgeObjectRelease();
  uint64_t v34 = 0x2220656C6946;
  unint64_t v35 = 0xE600000000000000;
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  uint64_t v23 = v34;
  unint64_t v24 = v35;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v23;
  *(void *)(inited + 56) = v24;
  sub_2498ECE6C(inited);
  uint64_t v7 = v33;
LABEL_7:
  sub_2498F0F74((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
  sub_249AEB708();
  sub_249AEB458();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  uint64_t v25 = swift_willThrow();
LABEL_10:
  result._object = v26;
  result._uint64_t countAndFlagsBits = v25;
  return result;
}

void NSFileWrapper.data(contentsOf:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_249AEB4E8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_msgSend(v3, sel_fileWrappers);
  if (!v11) {
    goto LABEL_9;
  }
  uint64_t v12 = v11;
  sub_24987BE44();
  uint64_t v13 = sub_249AECE98();

  if (!*(void *)(v13 + 16))
  {
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_9:
    sub_249AEB468();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_2498F0F74((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_willThrow();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_2498F0930(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
  if ((v15 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  id v16 = *(id *)(*(void *)(v13 + 56) + 8 * v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v16, sel_regularFileContents);
  if (v17)
  {
    uint64_t v18 = v17;
    sub_249AEB798();
  }
  else
  {
    sub_249AEB4A8();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_2498F0F74((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_willThrow();
  }
}

unint64_t sub_2498EEF60(uint64_t a1, char a2, uint64_t a3)
{
  sub_249AEE338();
  ColorSet.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE348();
  uint64_t v6 = sub_249AEE388();

  return sub_2498EF690(a1, a2 & 1, a3, v6);
}

uint64_t sub_2498EF01C(uint64_t a1, uint64_t a2)
{
  return sub_2498F0930(a1, a2, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498EFA1C);
}

unint64_t sub_2498EF034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_249AEE338();
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_249AEE388();

  return sub_2498EFB00(a1, a2, a3, v6);
}

unint64_t sub_2498EF0DC(long long *a1)
{
  long long v2 = a1[5];
  long long v12 = a1[4];
  long long v13 = v2;
  long long v14 = a1[6];
  long long v3 = a1[1];
  long long v8 = *a1;
  long long v9 = v3;
  long long v4 = a1[3];
  long long v10 = a1[2];
  long long v11 = v4;
  sub_249AEE338();
  ColorSet.hash(into:)((uint64_t)v7);
  uint64_t v5 = sub_249AEE388();

  return sub_2498EFC80(a1, v5);
}

unint64_t sub_2498EF16C(uint64_t a1)
{
  uint64_t v2 = sub_249AEE328();

  return sub_2498EFD98(a1, v2);
}

unint64_t sub_2498EF1B0(uint64_t a1, uint64_t a2)
{
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_249AEE388();
  return sub_2498EFA1C(a1, a2, v4);
}

unint64_t sub_2498EF234(uint64_t a1)
{
  sub_249AEDC28();
  uint64_t v2 = sub_249AECF18();

  return sub_2498EFE34(a1, v2);
}

unint64_t sub_2498EF298(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  char v8 = a4 & 1;
  sub_249AEE338();
  sub_249AEE358();
  if ((a4 & 1) == 0) {
    sub_249AEE348();
  }
  sub_249AECF78();
  uint64_t v9 = sub_249AEE388();

  return sub_2498EFFCC(a1, a2, a3, v8, v9);
}

unint64_t sub_2498EF358(uint64_t a1)
{
  sub_249AED0D8();
  sub_249AEE338();
  sub_249AECF78();
  uint64_t v2 = sub_249AEE388();
  swift_bridgeObjectRelease();
  return sub_2498F00BC(a1, v2);
}

unint64_t sub_2498EF3E8(uint64_t a1)
{
  sub_249AED0D8();
  sub_249AEE338();
  sub_249AECF78();
  uint64_t v2 = sub_249AEE388();
  swift_bridgeObjectRelease();

  return sub_2498F00BC(a1, v2);
}

unint64_t sub_2498EF47C(uint64_t *a1)
{
  sub_249AEE338();
  AvocadoWidgetInfo.hash(into:)();
  uint64_t v2 = sub_249AEE388();

  return sub_2498F0234(a1, v2);
}

unint64_t sub_2498EF500(double a1)
{
  uint64_t v2 = sub_249AEE328();

  return sub_2498F03F0(v2, a1);
}

unint64_t sub_2498EF548(uint64_t a1)
{
  sub_249AEE338();
  sub_249AEB808();
  sub_2498F0F74(&qword_2696DF388, MEMORY[0x263F07508]);
  sub_249AECF28();
  uint64_t v2 = sub_249AEE388();

  return sub_2498F0488(a1, v2);
}

unint64_t sub_2498EF5FC(char a1)
{
  sub_249AEE338();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_249AEE388();

  return sub_2498F0624(a1 & 1, v2);
}

unint64_t sub_2498EF690(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = v4;
    uint64_t v24 = ~v6;
    do
    {
      uint64_t v11 = *(void *)(v8 + 48) + 24 * v7;
      uint64_t v12 = *(void *)(v11 + 16);
      if (*(unsigned char *)(v11 + 8) == 1)
      {
        unint64_t v13 = 0x8000000249B14380;
        uint64_t v14 = 0xD000000000000013;
        switch(*(void *)v11)
        {
          case 1:
            uint64_t v14 = 0x7373416465657073;
            unint64_t v13 = 0xEB00000000747369;
            if (a2) {
              goto LABEL_11;
            }
            goto LABEL_21;
          case 2:
            uint64_t v14 = 0xD000000000000015;
            unint64_t v13 = 0x8000000249B14360;
            if (a2) {
              goto LABEL_11;
            }
            goto LABEL_21;
          case 3:
            unint64_t v13 = 0xE800000000000000;
            uint64_t v14 = 0x6574617453776F6CLL;
            if (a2) {
              goto LABEL_11;
            }
            goto LABEL_21;
          case 4:
            uint64_t v14 = 0x6C61636974697263;
            unint64_t v13 = 0xED00006574617453;
            if (a2) {
              goto LABEL_11;
            }
            goto LABEL_21;
          case 5:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x656E696C646572;
            break;
          case 6:
            uint64_t v14 = 0xD000000000000019;
            unint64_t v13 = 0x8000000249B14340;
            if (a2) {
              goto LABEL_11;
            }
            goto LABEL_21;
          default:
            break;
        }
        if ((a2 & 1) == 0)
        {
LABEL_21:
          uint64_t v17 = sub_249AEDF48();
          unint64_t v16 = v18;
          goto LABEL_30;
        }
      }
      else
      {
        uint64_t v14 = sub_249AEDF48();
        unint64_t v13 = v15;
        if ((a2 & 1) == 0) {
          goto LABEL_21;
        }
      }
LABEL_11:
      unint64_t v16 = 0x8000000249B14380;
      uint64_t v17 = 0xD000000000000013;
      switch(a1)
      {
        case 1:
          uint64_t v17 = 0x7373416465657073;
          unint64_t v16 = 0xEB00000000747369;
          break;
        case 2:
          uint64_t v17 = 0xD000000000000015;
          uint64_t v19 = "homologatedSecondaryLabel";
          goto LABEL_29;
        case 3:
          unint64_t v16 = 0xE800000000000000;
          uint64_t v17 = 0x6574617453776F6CLL;
          break;
        case 4:
          uint64_t v17 = 0x6C61636974697263;
          unint64_t v16 = 0xED00006574617453;
          break;
        case 5:
          unint64_t v16 = 0xE700000000000000;
          uint64_t v17 = 0x656E696C646572;
          break;
        case 6:
          uint64_t v17 = 0xD000000000000019;
          uint64_t v19 = "representedColorScheme";
LABEL_29:
          unint64_t v16 = (unint64_t)v19 | 0x8000000000000000;
          break;
        default:
          break;
      }
LABEL_30:
      if (v14 == v17 && v13 == v16)
      {
        swift_bridgeObjectRelease_n();
LABEL_4:
        if (v12 == a3) {
          return v7;
        }
        goto LABEL_5;
      }
      char v21 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v21) {
        goto LABEL_4;
      }
LABEL_5:
      unint64_t v7 = (v7 + 1) & v24;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_2498EFA1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    long long v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_249AEE0D8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        unint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_249AEE0D8() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_2498EFB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = v4;
    uint64_t v19 = ~v6;
    while (1)
    {
      uint64_t v9 = *(void *)(v8 + 48) + 24 * v7;
      uint64_t v10 = *(void *)v9;
      uint64_t v11 = *(void *)(v9 + 8);
      char v12 = *(unsigned char *)(v9 + 16);
      sub_24988D770(*(void *)v9, v11, v12);
      uint64_t v13 = Theme.ColorID.rawValue.getter();
      uint64_t v15 = v14;
      if (v13 == Theme.ColorID.rawValue.getter() && v15 == v16) {
        break;
      }
      char v17 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24988D788(v10, v11, v12);
      if ((v17 & 1) == 0)
      {
        unint64_t v7 = (v7 + 1) & v19;
        if ((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7)) {
          continue;
        }
      }
      return v7;
    }
    swift_bridgeObjectRelease_n();
    sub_24988D788(v10, v11, v12);
  }
  return v7;
}

unint64_t sub_2498EFC80(_OWORD *a1, uint64_t a2)
{
  long long v3 = a1[5];
  v26[4] = a1[4];
  v26[5] = v3;
  v26[6] = a1[6];
  long long v4 = a1[1];
  v26[0] = *a1;
  v26[1] = v4;
  long long v5 = a1[3];
  long long v26[2] = a1[2];
  v26[3] = v5;
  uint64_t v6 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v7 = a2 & ~v6;
  if ((*(void *)(v2 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    uint64_t v8 = ~v6;
    do
    {
      uint64_t v9 = *(void *)(v2 + 48) + 112 * v7;
      uint64_t v10 = *(void *)(v9 + 56);
      char v11 = *(unsigned char *)(v9 + 64);
      uint64_t v12 = *(void *)(v9 + 88);
      char v13 = *(unsigned char *)(v9 + 96);
      uint64_t v14 = *(void *)(v9 + 104);
      uint64_t v16 = *(void *)v9;
      long long v17 = *(_OWORD *)(v9 + 8);
      long long v18 = *(_OWORD *)(v9 + 24);
      long long v19 = *(_OWORD *)(v9 + 40);
      uint64_t v20 = v10;
      char v21 = v11;
      long long v22 = *(_OWORD *)(v9 + 72);
      uint64_t v23 = v12;
      char v24 = v13;
      uint64_t v25 = v14;
      if (_s14CarPlayAssetUI8ColorSetV2eeoiySbAC_ACtFZ_0((uint64_t)&v16, (uint64_t)v26)) {
        break;
      }
      unint64_t v7 = (v7 + 1) & v8;
    }
    while (((*(void *)(v2 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_2498EFD98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2498EFE34(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v4 = sub_249AEDC28();
  __n128 v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v21 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v13 = v14;
    uint64_t v15 = *(void *)(v12 + 56);
    uint64_t v16 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      uint64_t v17 = v12;
      v13(v8, *(void *)(v23 + 48) + v15 * v10, v4, v6);
      char v18 = sub_249AED088();
      (*v16)(v8, v4);
      if (v18) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      uint64_t v12 = v17;
    }
    while (((*(void *)(v21 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_2498EFFCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = v5 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = a5 & ~v7;
  if ((*(void *)(v5 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v13 = ~v7;
    uint64_t v14 = *(void *)(v5 + 48);
    do
    {
      uint64_t v15 = v14 + 32 * v8;
      uint64_t v16 = *(void *)(v15 + 16);
      char v17 = *(unsigned char *)(v15 + 24);
      BOOL v18 = *(void *)v15 == a1 && *(void *)(v15 + 8) == a2;
      if (v18 || (sub_249AEE0D8() & 1) != 0)
      {
        if (v17)
        {
          if (a4) {
            return v8;
          }
        }
        else if ((a4 & 1) == 0 && v16 == a3)
        {
          return v8;
        }
      }
      unint64_t v8 = (v8 + 1) & v13;
    }
    while (((*(void *)(v6 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_2498F00BC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_249AED0D8();
    uint64_t v8 = v7;
    if (v6 == sub_249AED0D8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_249AED0D8();
          uint64_t v15 = v14;
          if (v13 == sub_249AED0D8() && v15 == v16) {
            break;
          }
          char v18 = sub_249AEE0D8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_2498F0234(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  uint64_t v27 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v25 = ~v3;
    uint64_t v26 = *(void *)(v2 + 48);
    uint64_t v5 = *a1;
    uint64_t v6 = a1[1];
    uint64_t v28 = a1[3];
    uint64_t v29 = a1[2];
    uint64_t v23 = a1[5];
    uint64_t v24 = a1[4];
    int v22 = *((unsigned __int8 *)a1 + 48);
    uint64_t v20 = a1[7];
    uint64_t v21 = a1[8];
    do
    {
      uint64_t v7 = v26 + 72 * v4;
      uint64_t v9 = *(void *)(v7 + 16);
      uint64_t v8 = *(void *)(v7 + 24);
      uint64_t v11 = *(void *)(v7 + 32);
      uint64_t v10 = *(void *)(v7 + 40);
      int v12 = *(unsigned __int8 *)(v7 + 48);
      uint64_t v13 = *(void *)(v7 + 56);
      uint64_t v14 = *(void *)(v7 + 64);
      BOOL v15 = *(void *)v7 == v5 && *(void *)(v7 + 8) == v6;
      if (v15 || (sub_249AEE0D8() & 1) != 0)
      {
        BOOL v16 = v9 == v29 && v8 == v28;
        if (v16 || (sub_249AEE0D8() & 1) != 0)
        {
          BOOL v17 = v11 == v24 && v10 == v23;
          if (v17 || (sub_249AEE0D8()) && ((v22 ^ v12) & 1) == 0)
          {
            if (v14)
            {
              if (v21)
              {
                BOOL v18 = v13 == v20 && v14 == v21;
                if (v18 || (sub_249AEE0D8() & 1) != 0) {
                  return v4;
                }
              }
            }
            else if (!v21)
            {
              return v4;
            }
          }
        }
      }
      unint64_t v4 = (v4 + 1) & v25;
    }
    while (((*(void *)(v27 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_2498F03F0(uint64_t a1, double a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a1 & ~v4;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v6 = *(void *)(v2 + 48);
    if (*(double *)(v6 + 8 * result) != a2)
    {
      uint64_t v7 = ~v4;
      for (unint64_t result = (result + 1) & v7;
            ((*(void *)(v3 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v7)
      {
        if (*(double *)(v6 + 8 * result) == a2) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_2498F0488(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    sub_249AEB808();
    uint64_t v12 = *(void *)(v6 + 72);
    do
    {
      sub_2498D6084(*(void *)(v3 + 48) + v12 * v10, (uint64_t)v8, &qword_2696DDB10);
      sub_2498F0F74((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v13 = sub_249AED088();
      sub_2498F0FBC((uint64_t)v8);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_2498F0624(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x32656E6F7ALL;
    }
    else {
      uint64_t v6 = 0x31656E6F7ALL;
    }
    while (1)
    {
      uint64_t v7 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x32656E6F7ALL : 0x31656E6F7ALL;
      if (v7 == v6) {
        break;
      }
      char v8 = sub_249AEE0D8();
      swift_bridgeObjectRelease_n();
      if ((v8 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_2498F0724(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF590);
  uint64_t v2 = sub_249AEDCA8();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_2498D6084(v6, (uint64_t)&v15, &qword_2696DF598);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_2498F0930(v15, v16, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2498F09B4);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_2498DA208(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_2498F0870(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 72);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v5 = *(void *)(a1 + 96);
  uint64_t v9 = *(void *)(a1 + 120);
  uint64_t v8 = *(void *)(a1 + 64);
  char v6 = *(unsigned char *)(a1 + 104);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988CD7C(v8, v2, v3, v4, v5, v6);
  sub_24988CDF0(v9);
  return a1;
}

uint64_t sub_2498F0930(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_249AEE338();
  sub_249AECF78();
  uint64_t v5 = sub_249AEE388();

  return a3(a1, a2, v5);
}

unint64_t sub_2498F09B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_249AEE0D8() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      unint64_t i = (i + 1) & v12;
      if ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
      {
        BOOL v13 = (void *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_249AEE0D8() & 1) == 0)
        {
          for (unint64_t i = (i + 1) & v12; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v12)
          {
            uint64_t v15 = (void *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2) {
              break;
            }
            if (sub_249AEE0D8()) {
              break;
            }
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_2498F0AFC(double *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF500);
  uint64_t v3 = (void *)sub_249AEDCA8();
  double v4 = a1[4];
  double v5 = a1[5];
  unint64_t result = sub_2498EF500(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(double *)(v3[6] + v9) = v4;
    *(double *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v13 = v8 + 2;
    double v4 = *(v8 - 1);
    double v14 = *v8;
    swift_retain();
    unint64_t result = sub_2498EF500(v4);
    uint64_t v8 = v13;
    double v5 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2498F0C0C(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF588);
  uint64_t v3 = (void *)sub_249AEDCA8();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_2498EF16C(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    BOOL v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_retain();
    unint64_t result = sub_2498EF16C(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2498F0D0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4D8);
  uint64_t v3 = (void *)sub_249AEDCA8();
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(void **)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  char v9 = *(unsigned char *)(a1 + 72);
  uint64_t v10 = *(void *)(a1 + 80);
  unint64_t result = sub_2498EF16C(v5);
  if (v12)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  BOOL v13 = (void *)(a1 + 136);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v5;
    uint64_t v14 = v3[7] + 48 * result;
    *(void *)uint64_t v14 = v4;
    *(void *)(v14 + 8) = v6;
    *(void *)(v14 + 16) = v7;
    *(void *)(v14 + 24) = v8;
    *(unsigned char *)(v14 + 32) = v9;
    *(void *)(v14 + 40) = v10;
    uint64_t v15 = v3[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      break;
    }
    v3[2] = v17;
    sub_24988247C(v4, v6, v7, v8, v9);
    if (!--v1) {
      return (unint64_t)v3;
    }
    uint64_t v5 = *(v13 - 6);
    long long v19 = (void *)*(v13 - 5);
    uint64_t v6 = *(v13 - 4);
    char v7 = (void *)*(v13 - 3);
    uint64_t v8 = *(v13 - 2);
    char v9 = *((unsigned char *)v13 - 8);
    uint64_t v10 = *v13;
    unint64_t result = sub_2498EF16C(v5);
    v13 += 7;
    uint64_t v4 = v19;
    if (v18) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_2498F0E5C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3E8);
  uint64_t v3 = (void *)sub_249AEDCA8();
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  unint64_t result = sub_2498EF16C(v5);
  if (v9)
  {
LABEL_7:
    __break(1u);
    return MEMORY[0x263F8EE80];
  }
  uint64_t v10 = (char *)(a1 + 88);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v5;
    uint64_t v11 = v3[7] + 24 * result;
    *(void *)uint64_t v11 = v4;
    *(void *)(v11 + 8) = v6;
    *(unsigned char *)(v11 + 16) = v7;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      break;
    }
    v3[2] = v14;
    sub_24988D770(v4, v6, v7);
    if (!--v1) {
      return (unint64_t)v3;
    }
    uint64_t v5 = *((void *)v10 - 3);
    uint64_t v4 = *((void *)v10 - 2);
    uint64_t v6 = *((void *)v10 - 1);
    char v7 = *v10;
    unint64_t result = sub_2498EF16C(v5);
    v10 += 32;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2498F0F74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2498F0FBC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2498F101C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498F1084(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2498F10EC(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 121;
  }
  else {
    uint64_t v2 = 120;
  }
  if (a2) {
    uint64_t v3 = 121;
  }
  else {
    uint64_t v3 = 120;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2498F1150(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x70616373646E616CLL;
    }
    else {
      uint64_t v3 = 0x706172676F706F74;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000065;
    }
    else {
      unint64_t v4 = 0xEA00000000007968;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x70616373646E616CLL;
      }
      else {
        uint64_t v6 = 0x706172676F706F74;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000065;
      }
      else {
        unint64_t v7 = 0xEA00000000007968;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE800000000000000;
    uint64_t v3 = 0x746E656964617267;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE800000000000000;
  if (v3 != 0x746E656964617267)
  {
LABEL_21:
    char v8 = sub_249AEE0D8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2498F127C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x657361656C6572;
  }
  else {
    uint64_t v3 = 0x6775626564;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x657361656C6572;
  }
  else {
    uint64_t v5 = 0x6775626564;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F1320(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x8000000249B13BF0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v6 = "accessoryContentVersion";
      goto LABEL_9;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E6F6973726576;
      break;
    case 3:
      unint64_t v5 = 0x696669746E656469;
      goto LABEL_11;
    case 4:
      unint64_t v5 = 0xD00000000000001BLL;
      unint64_t v6 = "minimumCompatibilityVersion";
      goto LABEL_9;
    case 5:
      unint64_t v6 = "minimumSDKVersion";
      goto LABEL_9;
    case 6:
      unint64_t v5 = 0x707954646C697562;
      unint64_t v3 = 0xE900000000000065;
      break;
    case 7:
      unint64_t v5 = 0xD00000000000001DLL;
      unint64_t v6 = "removeDisclaimerLabelOverride";
LABEL_9:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 8:
      unint64_t v5 = 0x6D69616C63736964;
LABEL_11:
      unint64_t v3 = 0xEA00000000007265;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x8000000249B13BF0;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000017;
      char v8 = "accessoryContentVersion";
      goto LABEL_22;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x6E6F6973726576) {
        goto LABEL_28;
      }
      goto LABEL_24;
    case 3:
      uint64_t v9 = 0x696669746E656469;
      goto LABEL_27;
    case 4:
      unint64_t v2 = 0xD00000000000001BLL;
      char v8 = "minimumCompatibilityVersion";
      goto LABEL_22;
    case 5:
      char v8 = "minimumSDKVersion";
      goto LABEL_22;
    case 6:
      unint64_t v7 = 0xE900000000000065;
      if (v5 != 0x707954646C697562) {
        goto LABEL_28;
      }
      goto LABEL_24;
    case 7:
      unint64_t v2 = 0xD00000000000001DLL;
      char v8 = "removeDisclaimerLabelOverride";
LABEL_22:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_23;
    case 8:
      uint64_t v9 = 0x6D69616C63736964;
LABEL_27:
      unint64_t v7 = 0xEA00000000007265;
      if (v5 != v9) {
        goto LABEL_28;
      }
      goto LABEL_24;
    default:
LABEL_23:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_24:
      if (v3 == v7) {
        char v10 = 1;
      }
      else {
LABEL_28:
      }
        char v10 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_2498F1598()
{
  uint64_t v0 = ColorSet.ColorID.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == ColorSet.ColorID.rawValue.getter() && v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_2498F1644(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6F437265746E6563;
    }
    else {
      uint64_t v3 = 0x65676E6573736170;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xED0000656C6F736ELL;
    }
    else {
      unint64_t v4 = 0xE900000000000072;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6F437265746E6563;
      }
      else {
        uint64_t v6 = 0x65676E6573736170;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xED0000656C6F736ELL;
      }
      else {
        unint64_t v7 = 0xE900000000000072;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x72657473756C63;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x72657473756C63)
  {
LABEL_21:
    char v8 = sub_249AEE0D8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2498F1780()
{
  uint64_t v0 = Theme.ColorID.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == Theme.ColorID.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_2498F1820(uint64_t a1, uint64_t a2)
{
  return sub_2498F18F8(a1, a2, (uint64_t (*)(void))Theme.MapsMediaColorID.rawValue.getter);
}

uint64_t sub_2498F1838(uint64_t a1, uint64_t a2)
{
  return sub_2498F18F8(a1, a2, Theme.ModularColorID.rawValue.getter);
}

uint64_t sub_2498F1850(uint64_t a1, uint64_t a2)
{
  return sub_2498F18F8(a1, a2, (uint64_t (*)(void))Theme.RadialColorID.rawValue.getter);
}

uint64_t sub_2498F1868(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x32656E6F7ALL;
  }
  else {
    uint64_t v2 = 0x31656E6F7ALL;
  }
  if (a2) {
    uint64_t v3 = 0x32656E6F7ALL;
  }
  else {
    uint64_t v3 = 0x31656E6F7ALL;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2498F18E0(uint64_t a1, uint64_t a2)
{
  return sub_2498F18F8(a1, a2, (uint64_t (*)(void))InstrumentDataIdentifier.rawValue.getter);
}

uint64_t sub_2498F18F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4 = a3();
  uint64_t v6 = v5;
  if (v4 == a3() && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_2498F199C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7261646E6F636573;
    }
    else {
      uint64_t v3 = 0x61636972656D756ELL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000079;
    }
    else {
      unint64_t v4 = 0xED0000796C6E4F6CLL;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7261646E6F636573;
      }
      else {
        uint64_t v6 = 0x61636972656D756ELL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000079;
      }
      else {
        unint64_t v7 = 0xED0000796C6E4F6CLL;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x7972616D697270;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x7972616D697270)
  {
LABEL_21:
    char v8 = sub_249AEE0D8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2498F1AD8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x676E696B636F6C62;
  }
  else {
    uint64_t v3 = 0x746C7561666564;
  }
  if (v2) {
    unint64_t v4 = 0xE700000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x676E696B636F6C62;
  }
  else {
    uint64_t v5 = 0x746C7561666564;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F1B80(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x636170736F6E6F6DLL;
    }
    else {
      uint64_t v3 = 0x656D754E74666F73;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEF74696769446465;
    }
    else {
      unint64_t v4 = 0xEB00000000636972;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x636170736F6E6F6DLL;
      }
      else {
        uint64_t v6 = 0x656D754E74666F73;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEF74696769446465;
      }
      else {
        unint64_t v7 = 0xEB00000000636972;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    uint64_t v3 = 0x6D6574737973;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x6D6574737973)
  {
LABEL_21:
    char v8 = sub_249AEE0D8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2498F1CC0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 4539209;
  }
  else {
    uint64_t v3 = 22085;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xE300000000000000;
  }
  if (a2) {
    uint64_t v5 = 4539209;
  }
  else {
    uint64_t v5 = 22085;
  }
  if (a2) {
    unint64_t v6 = 0xE300000000000000;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F1D54(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x79616C7265766FLL;
  }
  else {
    uint64_t v2 = 0x7972616D697270;
  }
  if (a2) {
    uint64_t v3 = 0x79616C7265766FLL;
  }
  else {
    uint64_t v3 = 0x7972616D697270;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_2498F1DD4(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x647261436E727574;
  }
  else {
    uint64_t v3 = 7364973;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x647261436E727574;
  }
  else {
    uint64_t v5 = 7364973;
  }
  if (a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F1E74(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E65644961746164;
  }
  else {
    uint64_t v3 = 0x696669746E656469;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007265;
  }
  else {
    unint64_t v4 = 0xEE00726569666974;
  }
  if (a2) {
    uint64_t v5 = 0x6E65644961746164;
  }
  else {
    uint64_t v5 = 0x696669746E656469;
  }
  if (a2) {
    unint64_t v6 = 0xEE00726569666974;
  }
  else {
    unint64_t v6 = 0xEA00000000007265;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F1F2C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000017;
  }
  else {
    unint64_t v3 = 0x696669746E656469;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007265;
  }
  else {
    unint64_t v4 = 0x8000000249B13580;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000017;
  }
  else {
    unint64_t v5 = 0x696669746E656469;
  }
  if (a2) {
    unint64_t v6 = 0x8000000249B13580;
  }
  else {
    unint64_t v6 = 0xEA00000000007265;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F1FDC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEE00726569666974;
  uint64_t v3 = 0x6E65644961746164;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x656C797473;
    }
    else {
      uint64_t v5 = 0x72756769666E6F63;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE500000000000000;
    }
    else {
      unint64_t v6 = 0xED00006E6F697461;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6E65644961746164;
  unint64_t v6 = 0xEE00726569666974;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x656C797473;
    }
    else {
      uint64_t v3 = 0x72756769666E6F63;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xE500000000000000;
    }
    else {
      unint64_t v2 = 0xED00006E6F697461;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2498F2118(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x72756769666E6F63;
  }
  else {
    uint64_t v3 = 0x6E6F697461636F6CLL;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0xED00006E6F697461;
  }
  if (a2) {
    uint64_t v5 = 0x72756769666E6F63;
  }
  else {
    uint64_t v5 = 0x6E6F697461636F6CLL;
  }
  if (a2) {
    unint64_t v6 = 0xED00006E6F697461;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F21CC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA0000000000656CLL;
  uint64_t v3 = 0x7974536567756167;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7974536567756167;
  unint64_t v6 = 0xEA0000000000656CLL;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x4C737265646E6572;
      unint64_t v6 = 0xEE00796C6C61636FLL;
      break;
    case 2:
      uint64_t v5 = 0x756F72676B636162;
      unint64_t v6 = 0xEE0072756C42646ELL;
      break;
    case 3:
      uint64_t v5 = 0x72756769666E6F63;
      unint64_t v6 = 0xED00006E6F697461;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEE00796C6C61636FLL;
      if (v5 == 0x4C737265646E6572) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x756F72676B636162;
      unint64_t v2 = 0xEE0072756C42646ELL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xED00006E6F697461;
      if (v5 == 0x72756769666E6F63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2498F23AC(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006E6FLL;
  uint64_t v3 = 0x697461676976616ELL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x697461676976616ELL;
  unint64_t v6 = 0xEA00000000006E6FLL;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      unint64_t v5 = 0x6567756167;
      break;
    case 2:
      unint64_t v5 = 0x6F74616369646E69;
      unint64_t v6 = 0xE900000000000072;
      break;
    case 3:
      unint64_t v5 = 0x7274537475706E69;
      unint64_t v6 = 0xEB000000006D6165;
      break;
    case 4:
      unint64_t v5 = 0x72685468636E7570;
      unint64_t v6 = 0xEC0000006867756FLL;
      break;
    case 5:
      unint64_t v6 = 0x8000000249B13550;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 6:
      unint64_t v6 = 0xE400000000000000;
      unint64_t v5 = 1970169197;
      break;
    case 7:
      unint64_t v5 = 0x6F50746567646977;
      unint64_t v6 = 0xED00007265766F70;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE500000000000000;
      if (v5 == 0x6567756167) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v2 = 0xE900000000000072;
      if (v5 != 0x6F74616369646E69) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v2 = 0xEB000000006D6165;
      if (v5 != 0x7274537475706E69) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v2 = 0xEC0000006867756FLL;
      if (v5 != 0x72685468636E7570) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v2 = 0x8000000249B13550;
      if (v5 != 0xD000000000000010) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1970169197;
      goto LABEL_21;
    case 7:
      unint64_t v2 = 0xED00007265766F70;
      if (v5 != 0x6F50746567646977) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v3) {
        goto LABEL_25;
      }
LABEL_22:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_2498F2670(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6F6C6F43746E6974;
    }
    else {
      uint64_t v3 = 0x6E656D6E67696C61;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEC00000073444972;
    }
    else {
      unint64_t v4 = 0xE900000000000074;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6F6C6F43746E6974;
      }
      else {
        uint64_t v6 = 0x6E656D6E67696C61;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEC00000073444972;
      }
      else {
        unint64_t v7 = 0xE900000000000074;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x6567616D69;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x6567616D69)
  {
LABEL_21:
    char v8 = sub_249AEE0D8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2498F279C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x7261646E6F636573;
    }
    else {
      uint64_t v3 = 0x7972616974726574;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000079;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x7261646E6F636573;
      }
      else {
        uint64_t v6 = 0x7972616974726574;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000079;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE700000000000000;
    uint64_t v3 = 0x7972616D697270;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE700000000000000;
  if (v3 != 0x7972616D697270)
  {
LABEL_21:
    char v8 = sub_249AEE0D8();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_2498F28C0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1953394534;
  }
  else {
    uint64_t v3 = 0x6567616D69;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1953394534;
  }
  else {
    uint64_t v5 = 0x6567616D69;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F295C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x546567616B636170;
  }
  else {
    uint64_t v3 = 0x696669746E656469;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007265;
  }
  else {
    unint64_t v4 = 0xEB00000000657079;
  }
  if (a2) {
    uint64_t v5 = 0x546567616B636170;
  }
  else {
    uint64_t v5 = 0x696669746E656469;
  }
  if (a2) {
    unint64_t v6 = 0xEB00000000657079;
  }
  else {
    unint64_t v6 = 0xEA00000000007265;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F2A10(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7475626972747461;
  }
  else {
    uint64_t v3 = 0x696669746E656469;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007265;
  }
  else {
    unint64_t v4 = 0xEA00000000007365;
  }
  if (a2) {
    uint64_t v5 = 0x7475626972747461;
  }
  else {
    uint64_t v5 = 0x696669746E656469;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000007365;
  }
  else {
    unint64_t v6 = 0xEA00000000007265;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F2ABC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x736567616D69;
  }
  else {
    uint64_t v3 = 0x696669746E656469;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000007265;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x736567616D69;
  }
  else {
    uint64_t v5 = 0x696669746E656469;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xEA00000000007265;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_2498F2B64(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v22 = MEMORY[0x263F8EE78];
    sub_249A21F10(0, v5, 0);
    uint64_t v6 = v22;
    for (unint64_t i = (unsigned char *)(a3 + 56); ; i += 32)
    {
      uint64_t v9 = *((void *)i - 2);
      uint64_t v10 = *((void *)i - 1);
      char v11 = *i;
      v19[0] = *((void *)i - 3);
      v19[1] = v9;
      uint64_t v19[2] = v10;
      char v20 = v11;
      swift_bridgeObjectRetain();
      a1(v21, v19);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      swift_bridgeObjectRelease();
      uint64_t v13 = v21[0];
      uint64_t v12 = v21[1];
      uint64_t v22 = v6;
      unint64_t v15 = *(void *)(v6 + 16);
      unint64_t v14 = *(void *)(v6 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_249A21F10(v14 > 1, v15 + 1, 1);
        uint64_t v6 = v22;
      }
      *(void *)(v6 + 16) = v15 + 1;
      uint64_t v16 = v6 + 16 * v15;
      *(void *)(v16 + 32) = v13;
      *(void *)(v16 + 40) = v12;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_2498F2C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = type metadata accessor for Component();
  uint64_t v5 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  char v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (v8)
  {
    v23[1] = v2;
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_249A22110(0, v8, 0);
    uint64_t v9 = v26;
    unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + *(int *)(type metadata accessor for Zone() + 24);
    uint64_t v13 = *(void *)(v5 + 72);
    unint64_t v24 = v10;
    do
    {
      sub_2498F93E4(v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Component);
      double v14 = *(double *)(v12 + 16);
      double v15 = *(double *)(v12 + 24);
      uint64_t v16 = (double *)&v7[*(int *)(v25 + 28)];
      double v17 = *v16;
      double v18 = v16[1];
      *uint64_t v16 = v14;
      v16[1] = v15;
      if (v14 != v17 || v15 != v18)
      {
        sub_2499BDAA0(v14 / v17, v15 / v18);
        unint64_t v10 = v24;
      }
      uint64_t v26 = v9;
      unint64_t v21 = *(void *)(v9 + 16);
      unint64_t v20 = *(void *)(v9 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_249A22110(v20 > 1, v21 + 1, 1);
        unint64_t v10 = v24;
        uint64_t v9 = v26;
      }
      *(void *)(v9 + 16) = v21 + 1;
      sub_2498FDFB0((uint64_t)v7, v9 + v10 + v21 * v13, (uint64_t (*)(void))type metadata accessor for Component);
      v11 += v13;
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_2498F2E90(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_249A21F10(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = type metadata accessor for Component();
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    do
    {
      char v7 = (uint64_t *)(v5 + *(int *)(v4 + 24));
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1) {
        sub_249A21F10(v11 > 1, v10 + 1, 1);
      }
      v5 += v6;
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v12 = v14 + 16 * v10;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_2498F2FD4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2498F3018(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for Slot, (void (*)(BOOL, unint64_t, uint64_t))sub_249A22130, (uint64_t (*)(void))type metadata accessor for Slot);
}

uint64_t sub_2498F3018(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(BOOL, unint64_t, uint64_t), uint64_t (*a7)(void))
{
  uint64_t v25 = a7;
  uint64_t v26 = a1;
  uint64_t v9 = v7;
  uint64_t v27 = a2;
  uint64_t v11 = a5(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v22 - v13;
  unint64_t v15 = *(void *)(a3 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v15)
  {
    uint64_t v28 = MEMORY[0x263F8EE78];
    uint64_t v23 = a6;
    a6(0, v15, 0);
    uint64_t v16 = v28;
    unint64_t v24 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v17 = a3 + v24;
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v26(v17);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      uint64_t v28 = v16;
      unint64_t v20 = *(void *)(v16 + 16);
      unint64_t v19 = *(void *)(v16 + 24);
      if (v20 >= v19 >> 1)
      {
        v23(v19 > 1, v20 + 1, 1);
        uint64_t v16 = v28;
      }
      *(void *)(v16 + 16) = v20 + 1;
      sub_2498FDFB0((uint64_t)v14, v16 + v24 + v20 * v18, v25);
      v17 += v18;
      if (!--v15) {
        return v16;
      }
    }
    swift_release();
  }
  return v16;
}

uint64_t sub_2498F31C4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2498F3018(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for Zone, (void (*)(BOOL, unint64_t, uint64_t))sub_249A22150, (uint64_t (*)(void))type metadata accessor for Zone);
}

void static Zone.ZoneType.Single.default.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
}

void sub_2498F3218(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 2;
}

uint64_t Zone.ZoneType.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v5 = *(void *)v2;
  uint64_t v4 = *(void *)(v2 + 8);
  int v6 = *(unsigned __int8 *)(v2 + 16);
  if (v6)
  {
    if (v6 == 1)
    {
      sub_249AEE348();
      if (v5)
      {
        sub_249AEE358();
        swift_bridgeObjectRetain();
        sub_24988BFC8(a1, v5);
        return sub_249884EC8(v5, v4, 1u);
      }
      else
      {
        return sub_249AEE358();
      }
    }
    else
    {
      return sub_249AEE348();
    }
  }
  else
  {
    sub_249AEE348();
    sub_249AEE358();
    if (v5)
    {
      swift_bridgeObjectRetain();
      sub_24988BFC8(a1, v5);
      sub_249884EC8(v5, v4, 0);
    }
    return sub_249AEE378();
  }
}

uint64_t sub_2498F3328()
{
  uint64_t v1 = 0x6964654D7370616DLL;
  if (*v0 != 1) {
    uint64_t v1 = 6382436;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C676E6973;
  }
}

uint64_t sub_2498F337C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498FADA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498F33A4(uint64_t a1)
{
  unint64_t v2 = sub_2498F8C5C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498F33E0(uint64_t a1)
{
  unint64_t v2 = sub_2498F8C5C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498F341C(uint64_t a1)
{
  unint64_t v2 = sub_2498F8CB0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498F3458(uint64_t a1)
{
  unint64_t v2 = sub_2498F8CB0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498F3494()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_2498F34B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498FAEEC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498F34D8(uint64_t a1)
{
  unint64_t v2 = sub_2498F8D58();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498F3514(uint64_t a1)
{
  unint64_t v2 = sub_2498F8D58();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498F3550(uint64_t a1)
{
  unint64_t v2 = sub_2498F8DAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498F358C(uint64_t a1)
{
  unint64_t v2 = sub_2498F8DAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Zone.ZoneType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF5A8);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v26 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF5B0);
  uint64_t v25 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v27 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF5B8);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF5C0);
  uint64_t v32 = *(void *)(v10 - 8);
  uint64_t v33 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *v1;
  uint64_t v13 = v1[1];
  int v14 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498F8C5C();
  sub_249AEE468();
  if (v14)
  {
    if (v14 == 1)
    {
      LOBYTE(v36) = 2;
      sub_2498F8CB0();
      unint64_t v15 = v26;
      uint64_t v16 = v33;
      sub_249AEDE48();
      uint64_t v36 = v31;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF5D8);
      sub_2498F8E00(&qword_2696DF5E0, (void (*)(void))sub_2498F8D04);
      uint64_t v17 = v29;
      sub_249AEDEA8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v17);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v16);
    }
    else
    {
      LOBYTE(v36) = 0;
      sub_2498F8DAC();
      uint64_t v24 = v33;
      sub_249AEDE48();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v24);
    }
  }
  else
  {
    uint64_t v19 = v25;
    LOBYTE(v36) = 1;
    sub_2498F8D58();
    unint64_t v20 = v27;
    uint64_t v21 = v33;
    sub_249AEDE48();
    uint64_t v36 = v31;
    char v35 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF5D8);
    sub_2498F8E00(&qword_2696DF5E0, (void (*)(void))sub_2498F8D04);
    uint64_t v22 = v30;
    uint64_t v23 = v34;
    sub_249AEDEA8();
    if (!v23)
    {
      uint64_t v36 = v13;
      char v35 = 1;
      sub_24988E51C();
      sub_249AEDF08();
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v20, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v12, v21);
  }
}

uint64_t Zone.ZoneType.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 16);
  long long v4 = *v0;
  char v5 = v1;
  sub_249AEE338();
  Zone.ZoneType.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

uint64_t Zone.ZoneType.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF600);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  uint64_t v38 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v41 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF608);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  uint64_t v36 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF610);
  uint64_t v40 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF618);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v42 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v17);
  sub_2498F8C5C();
  uint64_t v18 = v43;
  sub_249AEE428();
  if (!v18)
  {
    uint64_t v19 = v40;
    unint64_t v20 = v41;
    uint64_t v34 = v10;
    uint64_t v43 = v14;
    uint64_t v21 = sub_249AEDE18();
    if (*(void *)(v21 + 16) == 1)
    {
      if (*(unsigned char *)(v21 + 32))
      {
        if (*(unsigned char *)(v21 + 32) == 1)
        {
          LOBYTE(v46) = 1;
          sub_2498F8D58();
          sub_249AEDD38();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF5D8);
          LOBYTE(v45) = 0;
          sub_2498F8E00(&qword_2696DF620, (void (*)(void))sub_2498F8E7C);
          uint64_t v22 = v35;
          sub_249AEDDA8();
          uint64_t v28 = v46;
          char v44 = 1;
          sub_24988E570();
          sub_249AEDE08();
          uint64_t v29 = v43;
          uint64_t v41 = 0;
          (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v22);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v13);
          char v31 = 0;
          uint64_t v32 = v45;
          uint64_t v33 = (uint64_t)v42;
LABEL_12:
          uint64_t v30 = v39;
          *uint64_t v39 = v28;
          v30[1] = v32;
          *((unsigned char *)v30 + 16) = v31;
          return __swift_destroy_boxed_opaque_existential_2Tm(v33);
        }
        LOBYTE(v46) = 2;
        sub_2498F8CB0();
        sub_249AEDD38();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF5D8);
        sub_2498F8E00(&qword_2696DF620, (void (*)(void))sub_2498F8E7C);
        uint64_t v27 = v37;
        sub_249AEDDA8();
        (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v27);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v13);
        uint64_t v32 = 0;
        uint64_t v28 = v46;
        char v31 = 1;
      }
      else
      {
        LOBYTE(v46) = 0;
        sub_2498F8DAC();
        sub_249AEDD38();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v12, v34);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v13);
        uint64_t v28 = 0;
        uint64_t v32 = 0;
        char v31 = 2;
      }
      uint64_t v33 = (uint64_t)v42;
      goto LABEL_12;
    }
    uint64_t v23 = sub_249AEDB08();
    swift_allocError();
    uint64_t v25 = v24;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v25 = &type metadata for Zone.ZoneType;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCB0], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v16, v13);
  }
  uint64_t v33 = (uint64_t)v42;
  return __swift_destroy_boxed_opaque_existential_2Tm(v33);
}

uint64_t sub_2498F4270@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Zone.ZoneType.init(from:)(a1, a2);
}

uint64_t sub_2498F4288(void *a1)
{
  return Zone.ZoneType.encode(to:)(a1);
}

uint64_t sub_2498F42A0()
{
  char v1 = *((unsigned char *)v0 + 16);
  long long v4 = *v0;
  char v5 = v1;
  sub_249AEE338();
  Zone.ZoneType.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

uint64_t sub_2498F42F8()
{
  char v1 = *((unsigned char *)v0 + 16);
  long long v4 = *v0;
  char v5 = v1;
  sub_249AEE338();
  Zone.ZoneType.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

uint64_t Zone.ZoneShape.isCircular.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

double Zone.ZoneShape.cornerRadius.getter()
{
  double result = *(double *)v0;
  if (*(unsigned char *)(v0 + 8)) {
    return 0.0;
  }
  return result;
}

uint64_t static Zone.ZoneShape.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3 = *(unsigned __int8 *)(a1 + 8);
  unsigned int v4 = *(unsigned __int8 *)(a2 + 8);
  uint64_t result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t Zone.ZoneShape.hash(into:)()
{
  if (*(unsigned char *)(v0 + 8)) {
    return sub_249AEE348();
  }
  sub_249AEE348();
  return sub_249AEE378();
}

uint64_t sub_2498F43EC(uint64_t a1)
{
  unint64_t v2 = sub_2498F8F78();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498F4428(uint64_t a1)
{
  unint64_t v2 = sub_2498F8F78();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498F4464()
{
  if (*v0) {
    return 0x75676E6174636572;
  }
  else {
    return 0x72616C7563726963;
  }
}

uint64_t sub_2498F44A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498FAFB0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498F44D0(uint64_t a1)
{
  unint64_t v2 = sub_2498F8ED0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498F450C(uint64_t a1)
{
  unint64_t v2 = sub_2498F8ED0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2498F4548()
{
  return 0x615272656E726F63;
}

uint64_t sub_2498F4568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2498F4618(uint64_t a1)
{
  unint64_t v2 = sub_2498F8F24();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498F4654(uint64_t a1)
{
  unint64_t v2 = sub_2498F8F24();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Zone.ZoneShape.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF630);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v3);
  unint64_t v20 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF638);
  uint64_t v18 = *(void *)(v5 - 8);
  uint64_t v19 = v5;
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF640);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  char v13 = *((unsigned char *)v1 + 8);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498F8ED0();
  sub_249AEE468();
  if (v13)
  {
    char v23 = 0;
    sub_2498F8F78();
    sub_249AEDE48();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v7, v19);
  }
  else
  {
    char v25 = 1;
    sub_2498F8F24();
    uint64_t v15 = v20;
    sub_249AEDE48();
    uint64_t v24 = v12;
    sub_24988E51C();
    uint64_t v16 = v22;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v15, v16);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t Zone.ZoneShape.hashValue.getter()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 1) == 0) {
    sub_249AEE378();
  }
  return sub_249AEE388();
}

uint64_t Zone.ZoneShape.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF660);
  uint64_t v27 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF668);
  uint64_t v26 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF670);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v29 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  sub_2498F8ED0();
  uint64_t v13 = v30;
  sub_249AEE428();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v29);
  }
  uint64_t v30 = v9;
  uint64_t v14 = sub_249AEDE18();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v16 = sub_249AEDB08();
    swift_allocError();
    uint64_t v18 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v18 = &type metadata for Zone.ZoneShape;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v16 - 8) + 104))(v18, *MEMORY[0x263F8DCB0], v16);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v29);
  }
  uint64_t v24 = v14;
  char v15 = *(unsigned char *)(v14 + 32);
  if (v15)
  {
    char v33 = 1;
    sub_2498F8F24();
    sub_249AEDD38();
    sub_24988E570();
    uint64_t v20 = v25;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v20);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    uint64_t v21 = v31;
  }
  else
  {
    char v32 = 0;
    sub_2498F8F78();
    sub_249AEDD38();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v8);
    uint64_t v21 = 0;
  }
  char v23 = v28;
  uint64_t v22 = (uint64_t)v29;
  *uint64_t v28 = v21;
  *((unsigned char *)v23 + 8) = v15 ^ 1;
  return __swift_destroy_boxed_opaque_existential_2Tm(v22);
}

uint64_t sub_2498F4EBC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Zone.ZoneShape.init(from:)(a1, a2);
}

uint64_t sub_2498F4ED4(void *a1)
{
  return Zone.ZoneShape.encode(to:)(a1);
}