uint64_t sub_2498F4EEC(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0) {
    return *(double *)a1 == *(double *)a2;
  }
  return result;
}

uint64_t sub_2498F4F20()
{
  if (*(unsigned char *)(v0 + 8)) {
    return sub_249AEE348();
  }
  sub_249AEE348();
  return sub_249AEE378();
}

uint64_t sub_2498F4F70()
{
  char v1 = *(unsigned char *)(v0 + 8);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 1) == 0) {
    sub_249AEE378();
  }
  return sub_249AEE388();
}

CarPlayAssetUI::Zone::ZoneRegion_optional __swiftcall Zone.ZoneRegion.init(rawValue:)(Swift::String rawValue)
{
  v2 = v1;
  uint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

uint64_t Zone.ZoneRegion.rawValue.getter()
{
  if (*v0) {
    return 0x32656E6F7ALL;
  }
  else {
    return 0x31656E6F7ALL;
  }
}

uint64_t sub_2498F506C(char *a1, char *a2)
{
  return sub_2498F1868(*a1, *a2);
}

CarPlayAssetUI::Zone::ZoneRegion_optional sub_2498F5078(Swift::String *a1)
{
  return Zone.ZoneRegion.init(rawValue:)(*a1);
}

void sub_2498F5084(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x31656E6F7ALL;
  if (*v1) {
    uint64_t v2 = 0x32656E6F7ALL;
  }
  *a1 = v2;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_2498F50B4()
{
  return sub_249AED3A8();
}

uint64_t sub_2498F5114()
{
  return sub_249AED348();
}

uint64_t sub_2498F5164()
{
  return sub_249AEE388();
}

uint64_t sub_2498F51D4()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498F5228()
{
  return sub_249AEE388();
}

uint64_t Zone.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2498D6084(v1, a1, &qword_2696DDB10);
}

uint64_t Zone.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Zone() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Zone.displayName.setter(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)(v2 + *(int *)(type metadata accessor for Zone() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *char v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Zone.displayName.modify())(void)
{
  return nullsub_1;
}

double Zone.frame.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Zone() + 24));
}

uint64_t sub_2498F53B8(double *a1, uint64_t a2)
{
  double v3 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  double v5 = a1[2];
  double v6 = a1[3];
  uint64_t result = type metadata accessor for Zone();
  uint64_t v8 = a2 + *(int *)(result + 24);
  double v9 = *(double *)(v8 + 16);
  double v10 = *(double *)(v8 + 24);
  *(double *)uint64_t v8 = v3;
  *(void *)(v8 + 8) = v4;
  *(double *)(v8 + 16) = v5;
  *(double *)(v8 + 24) = v6;
  if (v5 != v9 || v6 != v10)
  {
    uint64_t v12 = *(int *)(result + 28);
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_2498F2C9C(v13, a2);
    uint64_t result = swift_bridgeObjectRelease_n();
    *(void *)(a2 + v12) = v14;
  }
  return result;
}

uint64_t Zone.frame.setter(double a1, double a2, double a3, double a4)
{
  uint64_t result = type metadata accessor for Zone();
  double v10 = (double *)(v4 + *(int *)(result + 24));
  double v11 = v10[2];
  double v12 = v10[3];
  *double v10 = a1;
  v10[1] = a2;
  v10[2] = a3;
  v10[3] = a4;
  if (v11 != a3 || v12 != a4)
  {
    uint64_t v14 = *(int *)(result + 28);
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_2498F2C9C(v15, v4);
    uint64_t result = swift_bridgeObjectRelease_n();
    *(void *)(v4 + v14) = v16;
  }
  return result;
}

void (*Zone.frame.modify(void *a1))(_OWORD **a1, char a2)
{
  double v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = type metadata accessor for Zone();
  v3[7] = v4;
  uint64_t v5 = *(int *)(v4 + 24);
  *((_DWORD *)v3 + 16) = v5;
  double v6 = (_OWORD *)(v1 + v5);
  long long v7 = v6[1];
  *(_OWORD *)double v3 = *v6;
  *((_OWORD *)v3 + 1) = v7;
  return sub_2498F557C;
}

void sub_2498F557C(_OWORD **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *((void *)*a1 + 6) + *((int *)*a1 + 16);
  double v4 = *((double *)*a1 + 2);
  double v5 = *((double *)*a1 + 3);
  double v6 = *(double *)(v3 + 16);
  double v7 = *(double *)(v3 + 24);
  *(_OWORD *)uint64_t v3 = **a1;
  *(double *)(v3 + 16) = v4;
  *(double *)(v3 + 24) = v5;
  BOOL v8 = v4 == v6;
  if (v5 != v7) {
    BOOL v8 = 0;
  }
  if (a2)
  {
    if (v8) {
      goto LABEL_8;
    }
  }
  else if (v8)
  {
    goto LABEL_8;
  }
  uint64_t v9 = v2[6];
  uint64_t v10 = *(int *)(v2[7] + 28);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_2498F2C9C(v11, v9);
  swift_bridgeObjectRelease_n();
  *(void *)(v9 + v10) = v12;
LABEL_8:

  free(v2);
}

uint64_t Zone.components.getter()
{
  type metadata accessor for Zone();

  return swift_bridgeObjectRetain();
}

uint64_t Zone.components.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Zone() + 28);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Zone.components.modify())(void)
{
  return nullsub_1;
}

uint64_t Zone.type.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Zone() + 32);
  uint64_t v4 = *(void *)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  unsigned __int8 v6 = *(unsigned char *)(v3 + 16);
  *(unsigned char *)(a1 + 16) = v6;

  return sub_2498EC438(v4, v5, v6);
}

uint64_t Zone.type.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t v5 = v1 + *(int *)(type metadata accessor for Zone() + 32);
  uint64_t result = sub_249884EC8(*(void *)v5, *(void *)(v5 + 8), *(unsigned char *)(v5 + 16));
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = v3;
  *(unsigned char *)(v5 + 16) = v4;
  return result;
}

uint64_t (*Zone.type.modify())(void)
{
  return nullsub_1;
}

uint64_t Zone.zoneShape.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = type metadata accessor for Zone();
  char v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  uint64_t v5 = *v4;
  char v6 = *((unsigned char *)v4 + 8);
  LOBYTE(v4) = *((unsigned char *)v4 + 9);
  *(void *)a1 = v5;
  *(unsigned char *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 9) = (_BYTE)v4;
  return result;
}

uint64_t Zone.zoneShape.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char v3 = *((unsigned char *)a1 + 8);
  char v4 = *((unsigned char *)a1 + 9);
  uint64_t result = type metadata accessor for Zone();
  uint64_t v6 = v1 + *(int *)(result + 36);
  *(void *)uint64_t v6 = v2;
  *(unsigned char *)(v6 + 8) = v3;
  *(unsigned char *)(v6 + 9) = v4;
  return result;
}

uint64_t (*Zone.zoneShape.modify())(void)
{
  return nullsub_1;
}

uint64_t Zone.zoneRegion.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Zone();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t Zone.zoneRegion.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for Zone();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*Zone.zoneRegion.modify())(void)
{
  return nullsub_1;
}

uint64_t Zone.backgroundPlatter.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Zone() + 44));
}

uint64_t Zone.backgroundPlatter.setter(char a1)
{
  uint64_t result = type metadata accessor for Zone();
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*Zone.backgroundPlatter.modify())(void)
{
  return nullsub_1;
}

uint64_t Zone.init(id:displayName:frame:components:zoneType:zoneRegion:zoneShape:backgroundPlatter:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t *a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>)
{
  uint64_t v39 = *(void *)a5;
  uint64_t v40 = *(void *)(a5 + 8);
  unsigned __int8 v41 = *(unsigned char *)(a5 + 16);
  char v38 = *a6;
  uint64_t v37 = *a7;
  char v35 = *((unsigned char *)a7 + 9);
  char v36 = *((unsigned char *)a7 + 8);
  v21 = (int *)type metadata accessor for Zone();
  uint64_t v22 = v21[11];
  *(unsigned char *)(a9 + v22) = 0;
  uint64_t v23 = sub_2498F2E90(a4);
  uint64_t v24 = swift_bridgeObjectRetain();
  uint64_t v25 = sub_2498DA294(v24);
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v25 + 16);
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v23 + 16);
  swift_bridgeObjectRelease();
  if (v26 == v27)
  {
    uint64_t v28 = v21[10];
    uint64_t v29 = a9 + v21[9];
    uint64_t result = sub_249882788(a1, a9, &qword_2696DDB10);
    v31 = (void *)(a9 + v21[5]);
    void *v31 = a2;
    v31[1] = a3;
    v32 = (double *)(a9 + v21[6]);
    double *v32 = a10;
    v32[1] = a11;
    v32[2] = a12;
    v32[3] = a13;
    *(void *)(a9 + v21[7]) = a4;
    uint64_t v33 = a9 + v21[8];
    *(void *)uint64_t v33 = v39;
    *(void *)(v33 + 8) = v40;
    *(unsigned char *)(v33 + 16) = v41;
    *(unsigned char *)(a9 + v28) = v38;
    *(void *)uint64_t v29 = v37;
    *(unsigned char *)(v29 + 8) = v36;
    *(unsigned char *)(v29 + 9) = v35;
    *(unsigned char *)(a9 + v22) = a8 & 1;
  }
  else
  {
    sub_249884EC8(v39, v40, v41);
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    sub_2498F2E90(a4);
    MEMORY[0x24C5AE5B0]();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  return result;
}

uint64_t Zone.updating(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v6 - 8);
  BOOL v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (int *)type metadata accessor for Zone();
  uint64_t v10 = *(void *)(a1 + v9[7]);
  uint64_t v29 = v3;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2498F3018((void (*)(uint64_t))sub_2498F9018, (uint64_t)v28, v10, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for Component, (void (*)(BOOL, unint64_t, uint64_t))sub_249A22110, (uint64_t (*)(void))type metadata accessor for Component);
  swift_bridgeObjectRelease();
  sub_2498D6084(v3, (uint64_t)v8, &qword_2696DDB10);
  uint64_t v12 = (uint64_t *)(v3 + v9[5]);
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  uint64_t v15 = (double *)(a1 + v9[6]);
  double v16 = *v15;
  double v17 = v15[1];
  double v18 = v15[2];
  double v19 = v15[3];
  uint64_t v20 = v9[9];
  uint64_t v21 = a1 + v9[8];
  uint64_t v23 = *(void *)(v21 + 8);
  unsigned __int8 v24 = *(unsigned char *)(v21 + 16);
  v34[0] = *(void *)v21;
  uint64_t v22 = v34[0];
  v34[1] = v23;
  unsigned __int8 v35 = v24;
  uint64_t v25 = v9[11];
  char v33 = *(unsigned char *)(a1 + v9[10]);
  char v26 = *(unsigned char *)(a1 + v20 + 8);
  LOBYTE(v21) = *(unsigned char *)(a1 + v20 + 9);
  uint64_t v30 = *(void *)(a1 + v20);
  char v31 = v26;
  char v32 = v21;
  LOBYTE(a1) = *(unsigned char *)(a1 + v25);
  swift_bridgeObjectRetain();
  sub_2498EC438(v22, v23, v24);
  return Zone.init(id:displayName:frame:components:zoneType:zoneRegion:zoneShape:backgroundPlatter:)((uint64_t)v8, v13, v14, v11, (uint64_t)v34, &v33, &v30, a1, a2, v16, v17, v18, v19);
}

uint64_t sub_2498F5E38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v49 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for Component();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v51 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v48 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v53 = (uint64_t)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v50 = (uint64_t)&v48 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v55 = (uint64_t)&v48 - v20;
  uint64_t v21 = *(void *)(a2 + *(int *)(type metadata accessor for Zone() + 28));
  uint64_t v22 = *(void *)(v21 + 16);
  uint64_t v56 = v10;
  v54 = v3;
  uint64_t v52 = a3;
  if (v22)
  {
    uint64_t v23 = v10;
    uint64_t v24 = v21 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    sub_249AEB808();
    uint64_t v25 = *(void *)(v23 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2498F93E4(v24, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Component);
      sub_2498F9604((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      if (sub_249AED088()) {
        break;
      }
      sub_2498FC978((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Component);
      v24 += v25;
      if (!--v22) {
        goto LABEL_7;
      }
    }
    uint64_t v26 = v55;
    sub_2498FDFB0((uint64_t)v14, v55, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v27 = v56;
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v56 + 56);
    v28(v26, 0, 1, v9);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_7:
    uint64_t v26 = v55;
    uint64_t v27 = v56;
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, int *))(v56 + 56);
    v28(v55, 1, 1, v9);
  }
  swift_bridgeObjectRelease();
  uint64_t v29 = v53;
  sub_2498D6084(v26, v53, &qword_2696DF7F0);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v27 + 48);
  uint64_t v31 = v30(v29, 1, v9);
  if (v31 == 1)
  {
    sub_2498D60E8(v26, &qword_2696DF7F0);
    sub_2498D60E8(v29, &qword_2696DF7F0);
    uint64_t v32 = 1;
    uint64_t v34 = v50;
    uint64_t v33 = (uint64_t)v51;
  }
  else
  {
    uint64_t v35 = *(void *)(a1 + v9[8]);
    MEMORY[0x270FA5388](v31);
    *(&v48 - 2) = v29;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_2498F3018((void (*)(uint64_t))sub_2498FE018, (uint64_t)(&v48 - 4), v35, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for Slot, (void (*)(BOOL, unint64_t, uint64_t))sub_249A22130, (uint64_t (*)(void))type metadata accessor for Slot);
    v54 = v28;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v38 = v49;
    sub_2498D6084(v29, v49, qword_2696DF810);
    uint64_t v39 = v9[6];
    char v57 = *(unsigned char *)(a1 + v9[5]);
    uint64_t v41 = *(void *)(a1 + v39);
    uint64_t v40 = *(void *)(a1 + v39 + 8);
    v42 = (double *)(a1 + v9[7]);
    double v43 = *v42;
    double v44 = v42[1];
    swift_bridgeObjectRetain();
    uint64_t v45 = v40;
    uint64_t v34 = v50;
    uint64_t v46 = v37;
    uint64_t v28 = v54;
    Component.init(id:type:name:size:slots:)(v38, &v57, v41, v45, v46, v50, v43, v44);
    sub_2498D60E8(v55, &qword_2696DF7F0);
    sub_2498FC978(v29, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v32 = 0;
    uint64_t v33 = (uint64_t)v51;
  }
  v28(v34, v32, 1, v9);
  sub_2498F93E4(a1, v33, (uint64_t (*)(void))type metadata accessor for Component);
  if (v30(v34, 1, v9) == 1)
  {
    sub_2498FDFB0(v33, v52, (uint64_t (*)(void))type metadata accessor for Component);
    return sub_2498D60E8(v34, &qword_2696DF7F0);
  }
  else
  {
    sub_2498FC978(v33, (uint64_t (*)(void))type metadata accessor for Component);
    return sub_2498FDFB0(v34, v52, (uint64_t (*)(void))type metadata accessor for Component);
  }
}

unint64_t sub_2498F63F4(char a1)
{
  unint64_t result = 25705;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x4E79616C70736964;
      break;
    case 2:
      unint64_t result = 0x656D617266;
      break;
    case 3:
      unint64_t result = 0x6E656E6F706D6F63;
      break;
    case 4:
      unint64_t result = 1701869940;
      break;
    case 5:
      unint64_t result = 0x70616853656E6F7ALL;
      break;
    case 6:
      unint64_t result = 0x69676552656E6F7ALL;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2498F64FC()
{
  return sub_2498F63F4(*v0);
}

uint64_t sub_2498F6504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2498FB0BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2498F652C(uint64_t a1)
{
  unint64_t v2 = sub_2498F9038();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2498F6568(uint64_t a1)
{
  unint64_t v2 = sub_2498F9038();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Zone.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF678);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2498F9038();
  sub_249AEE468();
  LOBYTE(v20) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  sub_2498F9188(&qword_2696DF688);
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for Zone();
    LOBYTE(v20) = 1;
    sub_249AEDEB8();
    uint64_t v10 = (long long *)(v3 + v9[6]);
    long long v11 = v10[1];
    long long v20 = *v10;
    long long v21 = v11;
    char v19 = 2;
    type metadata accessor for CGRect(0);
    sub_2498F9604(&qword_2696DF690, type metadata accessor for CGRect);
    sub_249AEDF08();
    *(void *)&long long v20 = *(void *)(v3 + v9[7]);
    char v19 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF698);
    sub_2498F9254(&qword_2696DF6A0, &qword_2696DF6A8);
    sub_249AEDF08();
    uint64_t v12 = (long long *)(v3 + v9[8]);
    char v13 = *((unsigned char *)v12 + 16);
    long long v20 = *v12;
    LOBYTE(v21) = v13;
    char v19 = 4;
    sub_2498F908C();
    sub_249AEDF08();
    uint64_t v14 = (uint64_t *)(v3 + v9[9]);
    uint64_t v15 = *v14;
    char v16 = *((unsigned char *)v14 + 8);
    LOBYTE(v14) = *((unsigned char *)v14 + 9);
    *(void *)&long long v20 = v15;
    BYTE8(v20) = v16;
    BYTE9(v20) = (_BYTE)v14;
    char v19 = 5;
    sub_2498F90E0();
    sub_249AEDEA8();
    LOBYTE(v20) = *(unsigned char *)(v3 + v9[10]);
    char v19 = 6;
    sub_2498F9134();
    sub_249AEDEA8();
    LOBYTE(v20) = *(unsigned char *)(v3 + v9[11]);
    char v19 = 7;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Zone.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF6C8);
  uint64_t v34 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Zone();
  uint64_t v7 = (int *)MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = &v9[v7[9]];
  *(void *)uint64_t v10 = 0;
  *((_WORD *)v10 + 4) = 256;
  uint64_t v11 = v7[10];
  v9[v11] = 2;
  uint64_t v12 = v7[11];
  v9[v12] = 0;
  uint64_t v13 = a1[3];
  uint64_t v39 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  sub_2498F9038();
  uint64_t v38 = v5;
  uint64_t v14 = v40;
  sub_249AEE428();
  if (v14) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v39);
  }
  uint64_t v40 = v10;
  uint64_t v31 = v12;
  uint64_t v32 = v11;
  uint64_t v15 = (int *)v6;
  uint64_t v16 = v34;
  LOBYTE(v41) = 0;
  sub_2498F9188(&qword_2696DF6D0);
  uint64_t v17 = (uint64_t)v36;
  uint64_t v18 = v37;
  sub_249AEDE08();
  sub_249882788(v17, (uint64_t)v9, &qword_2696DDB10);
  LOBYTE(v41) = 1;
  uint64_t v19 = sub_249AEDDB8();
  long long v20 = (uint64_t *)&v9[v15[5]];
  *long long v20 = v19;
  v20[1] = v21;
  type metadata accessor for CGRect(0);
  char v43 = 2;
  sub_2498F9604(&qword_2696DF6D8, type metadata accessor for CGRect);
  sub_249AEDE08();
  uint64_t v22 = &v9[v15[6]];
  long long v23 = v42;
  *(_OWORD *)uint64_t v22 = v41;
  *((_OWORD *)v22 + 1) = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF698);
  char v43 = 3;
  sub_2498F9254(&qword_2696DF6E0, &qword_2696DF6E8);
  sub_249AEDE08();
  *(void *)&v9[v15[7]] = v41;
  char v43 = 4;
  sub_2498F92E8();
  sub_249AEDE08();
  char v24 = v42;
  uint64_t v25 = &v9[v15[8]];
  *(_OWORD *)uint64_t v25 = v41;
  v25[16] = v24;
  char v43 = 5;
  sub_2498F933C();
  sub_249AEDDA8();
  uint64_t v26 = v40;
  char v27 = BYTE8(v41);
  char v28 = BYTE9(v41);
  *(void *)uint64_t v40 = v41;
  v26[8] = v27;
  v26[9] = v28;
  char v43 = 6;
  sub_2498F9390();
  sub_249AEDDA8();
  v9[v32] = v41;
  LOBYTE(v41) = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DEB18);
  sub_2498C715C();
  sub_249AEDDA8();
  uint64_t v29 = (uint64_t)v39;
  LOBYTE(v15) = v43 & 1;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v38, v18);
  v9[v31] = (char)v15;
  sub_2498F93E4((uint64_t)v9, v33, (uint64_t (*)(void))type metadata accessor for Zone);
  __swift_destroy_boxed_opaque_existential_2Tm(v29);
  return sub_2498FC978((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Zone);
}

uint64_t sub_2498F6FF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Zone.init(from:)(a1, a2);
}

uint64_t sub_2498F7010(void *a1)
{
  return Zone.encode(to:)(a1);
}

uint64_t sub_2498F7028@<X0>(uint64_t a1@<X8>)
{
  return sub_2498D6084(v1, a1, &qword_2696DDB10);
}

uint64_t Zone.componentIndex(by:)()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Zone() + 28));
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = *(void *)(type metadata accessor for Component() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  sub_249AEB808();
  uint64_t v5 = *(void *)(v3 + 72);
  sub_2498F9604((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  while ((sub_249AED088() & 1) == 0)
  {
    ++v6;
    v4 += v5;
    if (v2 == v6)
    {
      uint64_t v6 = 0;
      break;
    }
  }
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t Zone.component(by:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Component();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + *(int *)(type metadata accessor for Zone() + 28));
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v14 = a1;
    uint64_t v9 = v7 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    sub_249AEB808();
    uint64_t v10 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2498F93E4(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Component);
      sub_2498F9604((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      if (sub_249AED088()) {
        break;
      }
      sub_2498FC978((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Component);
      v9 += v10;
      if (!--v8)
      {
        uint64_t v11 = 1;
        a1 = v14;
        goto LABEL_8;
      }
    }
    a1 = v14;
    sub_2498FDFB0((uint64_t)v6, v14, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v11 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = 1;
  }
LABEL_8:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v11, 1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t Zone.primaryComponents.getter()
{
  uint64_t v19 = type metadata accessor for Component();
  uint64_t v1 = *(void *)(v19 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = *(void *)(v0 + *(int *)(type metadata accessor for Zone() + 28));
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v18 = v9;
  if (!v9)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return v8;
  }
  unint64_t v11 = 0;
  while (v11 < *(void *)(v7 + 16))
  {
    unint64_t v12 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    uint64_t v13 = *(void *)(v1 + 72);
    sub_2498F93E4(v7 + v12 + v13 * v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Component);
    if ((v6[*(int *)(v19 + 20)] & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      sub_2498FDFB0((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Component);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_249A22110(0, *(void *)(v8 + 16) + 1, 1);
      }
      uint64_t v8 = v20;
      unint64_t v16 = *(void *)(v20 + 16);
      unint64_t v15 = *(void *)(v20 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_249A22110(v15 > 1, v16 + 1, 1);
        uint64_t v8 = v20;
      }
      *(void *)(v8 + 16) = v16 + 1;
      uint64_t result = sub_2498FDFB0((uint64_t)v4, v8 + v12 + v16 * v13, (uint64_t (*)(void))type metadata accessor for Component);
      goto LABEL_4;
    }
    char v14 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_10;
    }
    uint64_t result = sub_2498FC978((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Component);
LABEL_4:
    if (v18 == ++v11)
    {
      uint64_t v8 = v20;
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t Zone.componentsByCarplayIdentifier.getter()
{
  v3[0] = *(void *)(v0 + *(int *)(type metadata accessor for Zone() + 28));
  v3[1] = (uint64_t)sub_2498F7708;
  v3[2] = 0;
  v3[3] = (uint64_t)sub_2498F8768;
  v3[4] = 0;
  v3[5] = (uint64_t)sub_2498F87D0;
  v3[6] = 0;
  uint64_t v2 = MEMORY[0x263F8EE80];
  swift_bridgeObjectRetain_n();
  sub_2498F7D10(v3, 1, &v2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_2498F7708@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for Component() + 32));
  if (!*(void *)(v7 + 16)) {
    goto LABEL_11;
  }
  uint64_t v8 = type metadata accessor for Slot();
  sub_2498D6084(v7+ *(int *)(v8 + 36)+ ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80)), (uint64_t)v6, &qword_2696DE540);
  uint64_t v9 = type metadata accessor for Instrument();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9) == 1)
  {
    sub_2498D60E8((uint64_t)v6, &qword_2696DE540);
  }
  else
  {
    sub_2498A4990((uint64_t)&v6[*(int *)(v9 + 20)], (uint64_t)v21);
    sub_2498FC9D8(v21, sub_2498FB4B4);
    sub_2498FC978((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Instrument);
    sub_2498A4990((uint64_t)v21, (uint64_t)v22);
    int v10 = sub_2498B8790((uint64_t)v22);
    if (v10 == 7)
    {
      uint64_t v14 = sub_2498B87AC((uint64_t)v22);
      unint64_t v12 = (uint64_t *)(v14 + 56);
      uint64_t v13 = (uint64_t *)(v14 + 64);
    }
    else
    {
      if (v10 != 6)
      {
        sub_2498FC9D8(v21, sub_2498FCAAC);
        goto LABEL_11;
      }
      uint64_t v11 = sub_2498B87AC((uint64_t)v22);
      unint64_t v12 = (uint64_t *)(v11 + 16);
      uint64_t v13 = (uint64_t *)(v11 + 24);
    }
    uint64_t v15 = *v13;
    uint64_t v16 = *v12;
    swift_bridgeObjectRetain();
    sub_2498FC9D8(v21, sub_2498FCAAC);
    if (v15)
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF808);
      uint64_t v18 = (uint64_t)a2 + *(int *)(v17 + 48);
      *a2 = v16;
      a2[1] = v15;
      sub_2498F93E4(a1, v18, (uint64_t (*)(void))type metadata accessor for Component);
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 0, 1, v17);
    }
  }
LABEL_11:
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF808);
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 1, 1, v20);
}

uint64_t Zone.overlayComponents.getter()
{
  uint64_t v19 = type metadata accessor for Component();
  uint64_t v1 = *(void *)(v19 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v19);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = *(void *)(v0 + *(int *)(type metadata accessor for Zone() + 28));
  uint64_t v8 = MEMORY[0x263F8EE78];
  uint64_t v20 = MEMORY[0x263F8EE78];
  uint64_t v9 = *(void *)(v7 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v18 = v9;
  if (!v9)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v8;
  }
  unint64_t v11 = 0;
  while (v11 < *(void *)(v7 + 16))
  {
    unint64_t v12 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    uint64_t v13 = *(void *)(v1 + 72);
    sub_2498F93E4(v7 + v12 + v13 * v11, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Component);
    if (v6[*(int *)(v19 + 20)] == 1)
    {
      swift_bridgeObjectRelease();
LABEL_9:
      sub_2498FDFB0((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for Component);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_249A22110(0, *(void *)(v8 + 16) + 1, 1);
      }
      uint64_t v8 = v20;
      unint64_t v16 = *(void *)(v20 + 16);
      unint64_t v15 = *(void *)(v20 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_249A22110(v15 > 1, v16 + 1, 1);
        uint64_t v8 = v20;
      }
      *(void *)(v8 + 16) = v16 + 1;
      uint64_t result = sub_2498FDFB0((uint64_t)v4, v8 + v12 + v16 * v13, (uint64_t (*)(void))type metadata accessor for Component);
      goto LABEL_4;
    }
    char v14 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v14) {
      goto LABEL_9;
    }
    uint64_t result = sub_2498FC978((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Component);
LABEL_4:
    if (v18 == ++v11)
    {
      uint64_t v8 = v20;
      goto LABEL_15;
    }
  }
  __break(1u);
  return result;
}

BOOL Zone.isMapsMedia.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Zone() + 32) + 16) == 0;
}

BOOL Zone.isDCA.getter()
{
  return *(unsigned char *)(v0 + *(int *)(type metadata accessor for Zone() + 32) + 16) == 1;
}

BOOL Zone.isCarousel.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Zone() + 32) + 16) < 2u;
}

void sub_2498F7D10(uint64_t *a1, int a2, void *a3)
{
  v81 = a3;
  int v78 = a2;
  uint64_t v91 = type metadata accessor for Component();
  uint64_t v4 = *(void *)(v91 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v91);
  v79 = &v69[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v5);
  v83 = &v69[-v7];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  v94 = &v69[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = &v69[-v11];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F8);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  v77 = &v69[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = &v69[-v17];
  MEMORY[0x270FA5388](v16);
  v74 = &v69[-v19];
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF800);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  v71 = &v69[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = &v69[-v25];
  MEMORY[0x270FA5388](v24);
  v75 = (uint64_t *)&v69[-v27];
  uint64_t v28 = *a1;
  v82 = (void (*)(unsigned char *))a1[1];
  uint64_t v29 = a1[2];
  v86 = (uint64_t (*)(unsigned char *))a1[3];
  uint64_t v101 = v28;
  uint64_t v30 = a1[4];
  v70 = (void (*)(unsigned char *))a1[5];
  uint64_t v31 = a1[6];
  uint64_t v93 = v28;
  unint64_t v92 = *(void *)(v28 + 16);
  sub_2498FB45C((uint64_t)&v101);
  uint64_t v84 = v29;
  uint64_t v85 = v4;
  v89 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v90 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v32 = v20;
  v95 = (void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v33 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48);
  swift_retain();
  uint64_t v87 = v30;
  swift_retain();
  uint64_t v72 = v31;
  swift_retain();
  unint64_t v34 = 0;
  v76 = v12;
  uint64_t v88 = v32;
  while (2)
  {
    uint64_t v35 = (uint64_t)v94;
    while (1)
    {
      if (v34 == v92)
      {
        uint64_t v36 = 1;
        unint64_t v34 = v92;
      }
      else
      {
        if (v34 >= *(void *)(v93 + 16))
        {
          __break(1u);
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        sub_2498F93E4(v93+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v34, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v36 = 0;
        ++v34;
      }
      uint64_t v37 = v91;
      (*v90)(v12, v36, 1, v91);
      sub_249882788((uint64_t)v12, v35, &qword_2696DF7F0);
      if ((*v89)(v35, 1, v37) == 1)
      {
        uint64_t v38 = *v95;
        (*v95)(v18, 1, 1, v32);
      }
      else
      {
        uint64_t v39 = v35;
        uint64_t v40 = v83;
        sub_2498FDFB0(v39, (uint64_t)v83, (uint64_t (*)(void))type metadata accessor for Component);
        v82(v40);
        sub_2498FC978((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v38 = *v95;
        (*v95)(v18, 0, 1, v32);
      }
      long long v41 = *v33;
      if ((*v33)(v18, 1, v32) == 1)
      {
        sub_2498D60E8((uint64_t)v18, &qword_2696DF7F8);
        uint64_t v42 = 1;
        char v43 = v74;
        goto LABEL_15;
      }
      sub_249882788((uint64_t)v18, (uint64_t)v26, &qword_2696DF800);
      if (v86(v26)) {
        break;
      }
      sub_2498D60E8((uint64_t)v26, &qword_2696DF800);
      uint64_t v35 = (uint64_t)v94;
      uint64_t v32 = v88;
    }
    char v43 = v74;
    sub_249882788((uint64_t)v26, (uint64_t)v74, &qword_2696DF800);
    uint64_t v42 = 0;
    uint64_t v32 = v88;
LABEL_15:
    v38(v43, v42, 1, v32);
    double v44 = v77;
    sub_249882788((uint64_t)v43, (uint64_t)v77, &qword_2696DF7F8);
    if (v41(v44, 1, v32) == 1)
    {
      uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF808);
      uint64_t v46 = v75;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v75, 1, 1, v45);
    }
    else
    {
      v47 = v71;
      sub_249882788((uint64_t)v44, (uint64_t)v71, &qword_2696DF800);
      uint64_t v46 = v75;
      v70(v47);
      uint64_t v32 = v88;
      sub_2498D60E8((uint64_t)v47, &qword_2696DF800);
      uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF808);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v46, 0, 1, v48);
    }
    unint64_t v12 = v76;
    uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF808);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v46, 1, v49) == 1)
    {
      sub_2498FB488((uint64_t)&v101);
      swift_release();
      swift_release();
      swift_release();
      sub_2498FB488((uint64_t)&v101);
      swift_release();
      swift_release();
      swift_release();
      return;
    }
    uint64_t v50 = (uint64_t)v46 + *(int *)(v49 + 48);
    uint64_t v51 = *v46;
    uint64_t v52 = v46[1];
    uint64_t v99 = v51;
    uint64_t v100 = v52;
    sub_2498FDFB0(v50, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v53 = (void *)*v81;
    uint64_t v80 = v52;
    unint64_t v55 = sub_2498EF01C(v51, v52);
    uint64_t v56 = v53[2];
    BOOL v57 = (v54 & 1) == 0;
    uint64_t v58 = v56 + v57;
    if (__OFADD__(v56, v57)) {
      goto LABEL_34;
    }
    if (v53[3] >= v58)
    {
      if (v78)
      {
        if (v54) {
          goto LABEL_29;
        }
      }
      else
      {
        int v73 = v54;
        sub_2498E09AC();
        if (v73) {
          goto LABEL_29;
        }
      }
LABEL_26:
      v61 = (void *)*v81;
      *(void *)(*v81 + 8 * (v55 >> 6) + 64) |= 1 << v55;
      v62 = (uint64_t *)(v61[6] + 16 * v55);
      uint64_t v63 = v80;
      uint64_t *v62 = v51;
      v62[1] = v63;
      sub_2498FDFB0((uint64_t)v79, v61[7] + *(void *)(v85 + 72) * v55, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v64 = v61[2];
      BOOL v65 = __OFADD__(v64, 1);
      uint64_t v66 = v64 + 1;
      if (!v65)
      {
        v61[2] = v66;
        int v78 = 1;
        continue;
      }
      goto LABEL_35;
    }
    break;
  }
  int v73 = v54;
  sub_2498E536C(v58, v78 & 1);
  uint64_t v59 = sub_2498EF01C(v51, v80);
  if ((v73 & 1) != (v60 & 1))
  {
LABEL_36:
    sub_249AEE2D8();
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v55 = v59;
  if ((v73 & 1) == 0) {
    goto LABEL_26;
  }
LABEL_29:
  v67 = (void *)swift_allocError();
  swift_willThrow();
  id v98 = v67;
  id v68 = v67;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB8);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_2498FB488((uint64_t)&v101);
    swift_release();
    swift_release();
    swift_release();
    sub_2498FC978((uint64_t)v79, (uint64_t (*)(void))type metadata accessor for Component);
    swift_bridgeObjectRelease();
    sub_2498FB488((uint64_t)&v101);
    swift_release();
    swift_release();
    swift_release();

    return;
  }
LABEL_37:
  uint64_t v96 = 0;
  unint64_t v97 = 0xE000000000000000;
  sub_249AEDA78();
  sub_249AED1E8();
  sub_249AEDC08();
  sub_249AED1E8();
  sub_249AEDC58();
  __break(1u);
}

BOOL sub_2498F8768(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF808);
  return (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2) != 1;
}

uint64_t sub_2498F87D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF800);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(a1, (uint64_t)v6, &qword_2696DF800);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF808);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result != 1) {
    return sub_249882788((uint64_t)v6, a2, &qword_2696DF808);
  }
  __break(1u);
  return result;
}

uint64_t _s14CarPlayAssetUI4ZoneV0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(uint64_t *)(a1 + 8);
  int v4 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v6 = *(void *)a2;
  uint64_t v5 = *(uint64_t *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (v4 == 1)
    {
      if (v7 == 1)
      {
        if (v3)
        {
          if (v6)
          {
            uint64_t v8 = 1;
            sub_2498EC438(*(void *)a1, v2, 1u);
            sub_2498EC438(v6, v5, 1u);
            sub_2498EC438(v3, v2, 1u);
            sub_2498EC438(v6, v5, 1u);
            sub_2498EC438(v3, v2, 1u);
            char v9 = sub_2499FED68(v3, v6);
            sub_249884EC8(v3, v2, 1u);
            sub_249884EC8(v6, v5, 1u);
            sub_249884EC8(v6, v5, 1u);
            sub_249884EC8(v3, v2, 1u);
            sub_249884EC8(v3, v2, 1u);
            if (v9) {
              return v8;
            }
            return 0;
          }
          sub_2498EC438(0, *(void *)(a2 + 8), 1u);
          sub_2498EC438(v3, v2, 1u);
        }
        else
        {
          uint64_t v16 = swift_bridgeObjectRetain();
          uint64_t v8 = 1;
          sub_2498EC438(v16, v5, 1u);
          sub_2498EC438(0, v2, 1u);
          sub_249884EC8(0, v2, 1u);
          sub_249884EC8(v6, v5, 1u);
          if (!v6) {
            return v8;
          }
        }
        sub_249884EC8(v3, v2, 1u);
        uint64_t v12 = v6;
        uint64_t v13 = v5;
        unsigned __int8 v14 = 1;
LABEL_18:
        sub_249884EC8(v12, v13, v14);
        return 0;
      }
    }
    else if (v7 == 2 && (v5 | v6) == 0)
    {
      sub_249884EC8(*(void *)a1, v2, 2u);
      sub_249884EC8(0, 0, 2u);
      return 1;
    }
LABEL_17:
    sub_2498EC438(*(void *)a2, *(void *)(a2 + 8), v7);
    sub_2498EC438(v3, v2, v4);
    sub_249884EC8(v3, v2, v4);
    uint64_t v12 = v6;
    uint64_t v13 = v5;
    unsigned __int8 v14 = v7;
    goto LABEL_18;
  }
  if (*(unsigned char *)(a2 + 16)) {
    goto LABEL_17;
  }
  if (!v3)
  {
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_2498EC438(v17, v5, 0);
    sub_2498EC438(0, v2, 0);
    sub_249884EC8(0, v2, 0);
    sub_249884EC8(v6, v5, 0);
    if (!v6) {
      return *(double *)&v2 == *(double *)&v5;
    }
    sub_249884EC8(0, v2, 0);
    uint64_t v12 = v6;
LABEL_30:
    uint64_t v13 = v5;
    unsigned __int8 v14 = 0;
    goto LABEL_18;
  }
  if (!v6)
  {
    sub_2498EC438(0, *(void *)(a2 + 8), 0);
    sub_2498EC438(v3, v2, 0);
    sub_249884EC8(v3, v2, 0);
    uint64_t v12 = 0;
    goto LABEL_30;
  }
  sub_2498EC438(*(void *)a1, v2, 0);
  sub_2498EC438(v6, v5, 0);
  sub_2498EC438(v3, v2, 0);
  sub_2498EC438(v6, v5, 0);
  sub_2498EC438(v3, v2, 0);
  char v10 = sub_2499FED68(v3, v6);
  sub_249884EC8(v3, v2, 0);
  sub_249884EC8(v6, v5, 0);
  sub_249884EC8(v6, v5, 0);
  sub_249884EC8(v3, v2, 0);
  sub_249884EC8(v3, v2, 0);
  uint64_t v8 = 0;
  if (v10) {
    return *(double *)&v2 == *(double *)&v5;
  }
  return v8;
}

unint64_t sub_2498F8C5C()
{
  unint64_t result = qword_2696DF5C8;
  if (!qword_2696DF5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF5C8);
  }
  return result;
}

unint64_t sub_2498F8CB0()
{
  unint64_t result = qword_2696DF5D0;
  if (!qword_2696DF5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF5D0);
  }
  return result;
}

unint64_t sub_2498F8D04()
{
  unint64_t result = qword_2696DF5E8;
  if (!qword_2696DF5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF5E8);
  }
  return result;
}

unint64_t sub_2498F8D58()
{
  unint64_t result = qword_2696DF5F0;
  if (!qword_2696DF5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF5F0);
  }
  return result;
}

unint64_t sub_2498F8DAC()
{
  unint64_t result = qword_2696DF5F8;
  if (!qword_2696DF5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF5F8);
  }
  return result;
}

uint64_t sub_2498F8E00(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF5D8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498F8E7C()
{
  unint64_t result = qword_2696DF628;
  if (!qword_2696DF628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF628);
  }
  return result;
}

unint64_t sub_2498F8ED0()
{
  unint64_t result = qword_2696DF648;
  if (!qword_2696DF648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF648);
  }
  return result;
}

unint64_t sub_2498F8F24()
{
  unint64_t result = qword_2696DF650;
  if (!qword_2696DF650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF650);
  }
  return result;
}

unint64_t sub_2498F8F78()
{
  unint64_t result = qword_2696DF658;
  if (!qword_2696DF658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF658);
  }
  return result;
}

uint64_t type metadata accessor for Zone()
{
  uint64_t result = qword_2696DF728;
  if (!qword_2696DF728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2498F9018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2498F5E38(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_2498F9038()
{
  unint64_t result = qword_2696DF680;
  if (!qword_2696DF680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF680);
  }
  return result;
}

unint64_t sub_2498F908C()
{
  unint64_t result = qword_2696DF6B0;
  if (!qword_2696DF6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF6B0);
  }
  return result;
}

unint64_t sub_2498F90E0()
{
  unint64_t result = qword_2696DF6B8;
  if (!qword_2696DF6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF6B8);
  }
  return result;
}

unint64_t sub_2498F9134()
{
  unint64_t result = qword_2696DF6C0;
  if (!qword_2696DF6C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF6C0);
  }
  return result;
}

uint64_t sub_2498F9188(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDB10);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F07508];
    sub_2498F9604(&qword_2696DF428, MEMORY[0x263F07508]);
    sub_2498F9604(&qword_2696DF430, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2498F9254(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF698);
    sub_2498F9604(a2, (void (*)(uint64_t))type metadata accessor for Component);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2498F92E8()
{
  unint64_t result = qword_2696DF6F0;
  if (!qword_2696DF6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF6F0);
  }
  return result;
}

unint64_t sub_2498F933C()
{
  unint64_t result = qword_2696DF6F8;
  if (!qword_2696DF6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF6F8);
  }
  return result;
}

unint64_t sub_2498F9390()
{
  unint64_t result = qword_2696DF700;
  if (!qword_2696DF700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF700);
  }
  return result;
}

uint64_t sub_2498F93E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_2498F9458()
{
  unint64_t result = qword_2696DF708;
  if (!qword_2696DF708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF708);
  }
  return result;
}

unint64_t sub_2498F94B0()
{
  unint64_t result = qword_2696DF710;
  if (!qword_2696DF710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF710);
  }
  return result;
}

unint64_t sub_2498F9508()
{
  unint64_t result = qword_2696DF718;
  if (!qword_2696DF718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF718);
  }
  return result;
}

unint64_t sub_2498F9560()
{
  unint64_t result = qword_2696DF720;
  if (!qword_2696DF720)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DDB10);
    sub_2498F9604(&qword_2696DF388, MEMORY[0x263F07508]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF720);
  }
  return result;
}

uint64_t sub_2498F9604(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 sub_2498F964C@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for Zone() + 24);
  __n128 result = *(__n128 *)v3;
  long long v5 = *(_OWORD *)(v3 + 16);
  *a2 = *(_OWORD *)v3;
  a2[1] = v5;
  return result;
}

uint64_t sub_2498F968C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = type metadata accessor for Zone();
  *a2 = *(unsigned char *)(a1 + *(int *)(result + 44));
  return result;
}

uint64_t sub_2498F96C4(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t result = type metadata accessor for Zone();
  *(unsigned char *)(a2 + *(int *)(result + 44)) = v3;
  return result;
}

void *initializeBufferWithCopyOfBuffer for Zone(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *a1 = *a2;
    a1 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_249AEB808();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (_OWORD *)((char *)a1 + v9);
    unsigned __int8 v14 = (_OWORD *)((char *)a2 + v9);
    long long v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = *(void *)((char *)a2 + v16);
    uint64_t v19 = *(void *)((char *)a2 + v16 + 8);
    unsigned __int8 v20 = *((unsigned char *)a2 + v16 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2498EC438(v18, v19, v20);
    *(void *)uint64_t v17 = v18;
    *((void *)v17 + 1) = v19;
    v17[16] = v20;
    uint64_t v21 = a3[9];
    uint64_t v22 = a3[10];
    uint64_t v23 = (char *)a1 + v21;
    uint64_t v24 = (char *)a2 + v21;
    *(void *)uint64_t v23 = *(void *)v24;
    *((_WORD *)v23 + 4) = *((_WORD *)v24 + 4);
    *((unsigned char *)a1 + v22) = *((unsigned char *)a2 + v22);
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  }
  return a1;
}

uint64_t destroy for Zone(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 32);
  uint64_t v6 = *(void *)v5;
  uint64_t v7 = *(void *)(v5 + 8);
  unsigned __int8 v8 = *(unsigned char *)(v5 + 16);

  return sub_249884EC8(v6, v7, v8);
}

uint64_t initializeWithCopy for Zone(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (_OWORD *)(a1 + v8);
  uint64_t v13 = (_OWORD *)(a2 + v8);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = *(void *)(a2 + v15);
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  unsigned __int8 v19 = *(unsigned char *)(a2 + v15 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2498EC438(v17, v18, v19);
  *(void *)uint64_t v16 = v17;
  *(void *)(v16 + 8) = v18;
  *(unsigned char *)(v16 + 16) = v19;
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = a1 + v20;
  uint64_t v23 = a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  *(_WORD *)(v22 + 8) = *(_WORD *)(v23 + 8);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithCopy for Zone(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  v11[2] = v12[2];
  v11[3] = v12[3];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = *(void *)v15;
  uint64_t v17 = *(void *)(v15 + 8);
  unsigned __int8 v18 = *(unsigned char *)(v15 + 16);
  sub_2498EC438(*(void *)v15, v17, v18);
  uint64_t v19 = *(void *)v14;
  uint64_t v20 = *(void *)(v14 + 8);
  *(void *)uint64_t v14 = v16;
  *(void *)(v14 + 8) = v17;
  unsigned __int8 v21 = *(unsigned char *)(v14 + 16);
  *(unsigned char *)(v14 + 16) = v18;
  sub_249884EC8(v19, v20, v21);
  uint64_t v22 = a3[9];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(_WORD *)(v23 + 8) = *((_WORD *)v24 + 4);
  *(void *)uint64_t v23 = v25;
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t initializeWithTake for Zone(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  *(unsigned char *)(v12 + 16) = *(unsigned char *)(v13 + 16);
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  *(_WORD *)(v16 + 8) = *(_WORD *)(v17 + 8);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for Zone(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (_OWORD *)(a1 + v12);
  uint64_t v15 = (_OWORD *)(a2 + v12);
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  char v20 = *(unsigned char *)(v19 + 16);
  uint64_t v21 = *(void *)v18;
  uint64_t v22 = *(void *)(v18 + 8);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  unsigned __int8 v23 = *(unsigned char *)(v18 + 16);
  *(unsigned char *)(v18 + 16) = v20;
  sub_249884EC8(v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(void *)uint64_t v26 = *(void *)v27;
  *(_WORD *)(v26 + 8) = *(_WORD *)(v27 + 8);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  return a1;
}

uint64_t getEnumTagSinglePayload for Zone(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2498F9D64);
}

uint64_t sub_2498F9D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Zone(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2498F9E40);
}

uint64_t sub_2498F9E40(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2498F9F04()
{
  uint64_t result = sub_249AEB808();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Zone.ZoneType(uint64_t a1)
{
  return sub_249884EC8(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s14CarPlayAssetUI4ZoneV8ZoneTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2498EC438(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Zone.ZoneType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_2498EC438(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_249884EC8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Zone.ZoneType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_249884EC8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Zone.ZoneType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Zone.ZoneType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2498FA178(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 1u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_2498FA190(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Zone.ZoneType()
{
  return &type metadata for Zone.ZoneType;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.Single()
{
  return &type metadata for Zone.ZoneType.Single;
}

ValueMetadata *type metadata accessor for Zone.ZoneShape()
{
  return &type metadata for Zone.ZoneShape;
}

ValueMetadata *type metadata accessor for Zone.ZoneRegion()
{
  return &type metadata for Zone.ZoneRegion;
}

unsigned char *storeEnumTagSinglePayload for Zone.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498FA2B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Zone.CodingKeys()
{
  return &type metadata for Zone.CodingKeys;
}

ValueMetadata *type metadata accessor for Zone.ZoneShape.CodingKeys()
{
  return &type metadata for Zone.ZoneShape.CodingKeys;
}

ValueMetadata *type metadata accessor for Zone.ZoneShape.CircularCodingKeys()
{
  return &type metadata for Zone.ZoneShape.CircularCodingKeys;
}

ValueMetadata *type metadata accessor for Zone.ZoneShape.RectangularCodingKeys()
{
  return &type metadata for Zone.ZoneShape.RectangularCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Zone.ZoneType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498FA3F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.CodingKeys()
{
  return &type metadata for Zone.ZoneType.CodingKeys;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.SingleCodingKeys()
{
  return &type metadata for Zone.ZoneType.SingleCodingKeys;
}

unsigned char *_s14CarPlayAssetUI4ZoneV10ZoneRegionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498FA504);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.MapsMediaCodingKeys()
{
  return &type metadata for Zone.ZoneType.MapsMediaCodingKeys;
}

unsigned char *_s14CarPlayAssetUI4ZoneV9ZoneShapeO21RectangularCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2498FA5D8);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Zone.ZoneType.DcaCodingKeys()
{
  return &type metadata for Zone.ZoneType.DcaCodingKeys;
}

unint64_t sub_2498FA614()
{
  unint64_t result = qword_2696DF738;
  if (!qword_2696DF738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF738);
  }
  return result;
}

unint64_t sub_2498FA66C()
{
  unint64_t result = qword_2696DF740;
  if (!qword_2696DF740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF740);
  }
  return result;
}

unint64_t sub_2498FA6C4()
{
  unint64_t result = qword_2696DF748;
  if (!qword_2696DF748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF748);
  }
  return result;
}

unint64_t sub_2498FA71C()
{
  unint64_t result = qword_2696DF750;
  if (!qword_2696DF750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF750);
  }
  return result;
}

unint64_t sub_2498FA774()
{
  unint64_t result = qword_2696DF758;
  if (!qword_2696DF758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF758);
  }
  return result;
}

unint64_t sub_2498FA7CC()
{
  unint64_t result = qword_2696DF760;
  if (!qword_2696DF760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF760);
  }
  return result;
}

unint64_t sub_2498FA824()
{
  unint64_t result = qword_2696DF768;
  if (!qword_2696DF768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF768);
  }
  return result;
}

unint64_t sub_2498FA87C()
{
  unint64_t result = qword_2696DF770;
  if (!qword_2696DF770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF770);
  }
  return result;
}

unint64_t sub_2498FA8D4()
{
  unint64_t result = qword_2696DF778;
  if (!qword_2696DF778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF778);
  }
  return result;
}

unint64_t sub_2498FA92C()
{
  unint64_t result = qword_2696DF780;
  if (!qword_2696DF780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF780);
  }
  return result;
}

unint64_t sub_2498FA984()
{
  unint64_t result = qword_2696DF788;
  if (!qword_2696DF788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF788);
  }
  return result;
}

unint64_t sub_2498FA9DC()
{
  unint64_t result = qword_2696DF790;
  if (!qword_2696DF790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF790);
  }
  return result;
}

unint64_t sub_2498FAA34()
{
  unint64_t result = qword_2696DF798;
  if (!qword_2696DF798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF798);
  }
  return result;
}

unint64_t sub_2498FAA8C()
{
  unint64_t result = qword_2696DF7A0;
  if (!qword_2696DF7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7A0);
  }
  return result;
}

unint64_t sub_2498FAAE4()
{
  unint64_t result = qword_2696DF7A8;
  if (!qword_2696DF7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7A8);
  }
  return result;
}

unint64_t sub_2498FAB3C()
{
  unint64_t result = qword_2696DF7B0;
  if (!qword_2696DF7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7B0);
  }
  return result;
}

unint64_t sub_2498FAB94()
{
  unint64_t result = qword_2696DF7B8;
  if (!qword_2696DF7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7B8);
  }
  return result;
}

unint64_t sub_2498FABEC()
{
  unint64_t result = qword_2696DF7C0;
  if (!qword_2696DF7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7C0);
  }
  return result;
}

unint64_t sub_2498FAC44()
{
  unint64_t result = qword_2696DF7C8;
  if (!qword_2696DF7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7C8);
  }
  return result;
}

unint64_t sub_2498FAC9C()
{
  unint64_t result = qword_2696DF7D0;
  if (!qword_2696DF7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7D0);
  }
  return result;
}

unint64_t sub_2498FACF4()
{
  unint64_t result = qword_2696DF7D8;
  if (!qword_2696DF7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7D8);
  }
  return result;
}

unint64_t sub_2498FAD4C()
{
  unint64_t result = qword_2696DF7E0;
  if (!qword_2696DF7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7E0);
  }
  return result;
}

uint64_t sub_2498FADA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C676E6973 && a2 == 0xE600000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6964654D7370616DLL && a2 == 0xE900000000000061 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 6382436 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2498FAEEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2498FAFB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72616C7563726963 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75676E6174636572 && a2 == 0xEB0000000072616CLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2498FB0BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x70616853656E6F7ALL && a2 == 0xE900000000000065 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x69676552656E6F7ALL && a2 == 0xEA00000000006E6FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B15230)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

unint64_t sub_2498FB408()
{
  unint64_t result = qword_2696DF7E8;
  if (!qword_2696DF7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF7E8);
  }
  return result;
}

uint64_t sub_2498FB45C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2498FB488(uint64_t a1)
{
  return a1;
}

void sub_2498FB4B4(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61,uint64_t a62,unint64_t a63)
{
  switch(a63 >> 60)
  {
    case 1uLL:
      sub_2498FB8D8(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23,
        a24,
        a25,
        a26,
        a27,
        a28,
        a29,
        a30,
        a31,
        a32,
        a33,
        a34,
        a35,
        a36,
        a37,
        a38,
        a39,
        a40,
        a41,
        a42,
        a43,
        a44,
        a45,
        a46,
        a47,
        a48,
        a49,
        a50,
        a51,
        a52,
        a53,
        a54,
        a55,
        a56,
        a57,
        a58,
        a59,
        a60,
        a61);
      goto LABEL_9;
    case 2uLL:
      sub_2498FDE64(a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, (int)a6, a7, a8, (uint64_t)a9, (uint64_t)a10, (uint64_t)a11, a12, a13, (void (*)(void))sub_24988247C);
      return;
    case 3uLL:
    case 6uLL:
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 4uLL:
      goto LABEL_9;
    case 7uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_9:
      swift_bridgeObjectRetain();
      break;
    case 8uLL:
      sub_2498FC8BC(a1, a2, a3, (uint64_t)a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13);
      break;
    default:
      return;
  }
}

uint64_t sub_2498FB8D8(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61)
{
  uint64_t result = a37;
  switch((a61 >> 57) & 7)
  {
    case 0uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 1uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24989CD14(a19, a20, a21);
      sub_24989CD14(a26, a27, a28);
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 2uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_5:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3uLL:
      unint64_t v64 = a61 & 0xF1FFFFFFFFFFFFFFLL;
      uint64_t result = sub_2498FBD8C(a1, a2, a3, a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 (char)a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 a28,
                 a29,
                 a30,
                 a31,
                 a32,
                 a33,
                 a34,
                 a35,
                 a36,
                 a37,
                 a38,
                 a39,
                 a40,
                 a41,
                 a42,
                 a43,
                 a44,
                 a45,
                 a46,
                 a47,
                 a48,
                 a49,
                 a50,
                 a51,
                 a52,
                 a53,
                 a54,
                 a55,
                 a56,
                 a57,
                 a58,
                 a59,
                 a60,
                 v64);
      break;
    case 4uLL:
      uint64_t result = sub_2498FC204(a1, a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 (uint64_t)a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 (uint64_t)a28,
                 (uint64_t)a29,
                 a30,
                 a31,
                 a32,
                 a33,
                 a34,
                 a35,
                 a36,
                 a37,
                 a38,
                 a39,
                 a40,
                 a41,
                 a42);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498FBD8C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61)
{
  uint64_t result = a31;
  switch(a61 >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:
      id v62 = a4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24988D770(a12, a13, a14);
      sub_24988D770(a15, a16, a17);
      sub_24988D770(a18, a19, a20);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24989CD14(a26, a27, a28);
      goto LABEL_3;
    case 2uLL:
      id v63 = a4;
      swift_bridgeObjectRetain();
      sub_24988D770(a9, a10, a11);
      sub_24988D770(a12, a13, a14);
      uint64_t result = sub_2498FC1B4(a15, a16);
      break;
    case 4uLL:
      sub_24989CBC0(a2, (uint64_t)a3, (uint64_t)a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
        a21,
        a22,
        a23,
        a24,
        a25,
        a26,
        a27,
        (uint64_t)a28,
        a29);
      sub_24988D770(a38, a39, a40);
      sub_24988D770(a41, a42, a43);
      sub_24988D770(a44, a45, a46);
      sub_24988D770(a47, a48, a49);
      sub_24988D770(a50, a51, a52);
      sub_24988D770(a53, a54, a55);
      sub_24988D770(a56, a57, a58);
      sub_24988D770(a59, a60, a61);
LABEL_3:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 5uLL:
      id v64 = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_24988D770(a10, a11, a12);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498FC1B4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2498FC204(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42)
{
  switch((a42 >> 47) & 1 | (a42 >> 53) & 6 | (a42 >> 59) & 8)
  {
    case 0uLL:
      swift_bridgeObjectRetain();
      sub_2498FC674(a2);
      sub_2498FC674(a12);
      swift_bridgeObjectRetain();
      sub_2498FC674(a23);
      uint64_t v42 = a33;
      goto LABEL_7;
    case 1uLL:
    case 0xAuLL:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 2uLL:
      uint64_t result = sub_2498FC6B8(a8, a9, a10, a11, a12);
      break;
    case 3uLL:
    case 5uLL:
      swift_bridgeObjectRetain();
      sub_2498FC674(a2);
      uint64_t v42 = a12;
LABEL_7:
      uint64_t result = sub_2498FC674(v42);
      break;
    case 6uLL:
      unint64_t v47 = a42 & 0xBF3F7FFFFFFFFFFFLL;
      uint64_t result = sub_2498FC748(result, a2, a3, a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 a28,
                 a29,
                 a30,
                 a31,
                 a32,
                 a33,
                 a34,
                 a35,
                 a36,
                 a37,
                 a38,
                 a39,
                 a40,
                 a41,
                 v47);
      break;
    case 7uLL:
      uint64_t result = sub_24988D770((uint64_t)a6, a7, a8);
      break;
    case 8uLL:
    case 9uLL:
      swift_bridgeObjectRetain();
      id v44 = a6;
      swift_bridgeObjectRetain();
      sub_24988D770(a13, a14, a15);
      sub_24988D770(a16, a17, a18);
      uint64_t result = sub_249890C2C(a19, a20, a21);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498FC674(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2498FC6B8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5 = a5 >> 62;
  if (a5 >> 62)
  {
    if (v5 == 2)
    {
      id v6 = a3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else if (v5 != 1)
    {
      return result;
    }
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_2498FC748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  swift_bridgeObjectRetain();
  if (a42 < 0)
  {
    sub_2498FC674(a3);
    sub_2498FC674(a13);
    swift_bridgeObjectRetain();
    sub_2498FC674(a24);
    a12 = a34;
  }
  else
  {
    sub_2498FC674(a2);
  }

  return sub_2498FC674(a12);
}

void sub_2498FC8BC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, char a13)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_24988247C(a3, a4, a5, a6, a7);
    sub_249882468(a9, a10, a11, a12, a13);
  }
}

uint64_t sub_2498FC978(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

#error "2498FCA8C: call analysis failed (funcsize=53)"

void sub_2498FCAAC(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, void *a9, void *a10, void *a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61,uint64_t a62,unint64_t a63)
{
  switch(a63 >> 60)
  {
    case 1uLL:
      sub_2498FCED0(a1, a2, a3, a4, a5, a6, a7, a8, (uint64_t)a9, a10, (uint64_t)a11, a12, a13, a14, a15, a16, a17, a18, a19,
        a20,
        a21,
        a22,
        a23,
        a24,
        a25,
        a26,
        a27,
        a28,
        a29,
        a30,
        a31,
        a32,
        a33,
        a34,
        a35,
        a36,
        a37,
        a38,
        a39,
        a40,
        a41,
        a42,
        a43,
        a44,
        a45,
        a46,
        a47,
        a48,
        a49,
        a50,
        a51,
        a52,
        a53,
        a54,
        a55,
        a56,
        a57,
        a58,
        a59,
        a60,
        a61);
      goto LABEL_9;
    case 2uLL:
      sub_2498FDE64(a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, (int)a6, a7, a8, (uint64_t)a9, (uint64_t)a10, (uint64_t)a11, a12, a13, (void (*)(void))sub_2498826E4);
      return;
    case 3uLL:
    case 6uLL:
      swift_bridgeObjectRelease();
      goto LABEL_9;
    case 4uLL:
      goto LABEL_9;
    case 7uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      swift_bridgeObjectRelease();
      break;
    case 8uLL:
      sub_2498FDEF4(a1, a2, a3, (uint64_t)a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13);
      break;
    default:
      return;
  }
}

uint64_t sub_2498FCED0(uint64_t result, uint64_t a2, void *a3, void *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61)
{
  switch((a61 >> 57) & 7)
  {
    case 0uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 1uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24989CF3C(a19, a20, a21);
      sub_24989CF3C(a26, a27, a28);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    case 2uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3uLL:
      unint64_t v62 = a61 & 0xF1FFFFFFFFFFFFFFLL;
      uint64_t result = sub_2498FD37C(result, a2, a3, a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 (char)a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 a28,
                 a29,
                 a30,
                 a31,
                 a32,
                 a33,
                 a34,
                 a35,
                 a36,
                 a37,
                 a38,
                 a39,
                 a40,
                 a41,
                 a42,
                 a43,
                 a44,
                 a45,
                 a46,
                 a47,
                 a48,
                 a49,
                 a50,
                 a51,
                 a52,
                 a53,
                 a54,
                 a55,
                 a56,
                 a57,
                 a58,
                 a59,
                 a60,
                 v62);
      break;
    case 4uLL:
      uint64_t result = sub_2498FD7F0(result, a2, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 (uint64_t)a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 (uint64_t)a28,
                 (uint64_t)a29,
                 a30,
                 a31,
                 a32,
                 a33,
                 a34,
                 a35,
                 a36,
                 a37,
                 a38,
                 a39,
                 a40,
                 a41,
                 a42);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498FD37C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,void *a28,void *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,uint64_t a42,char a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,char a49,uint64_t a50,uint64_t a51,char a52,uint64_t a53,uint64_t a54,char a55,uint64_t a56,uint64_t a57,char a58,uint64_t a59,uint64_t a60,unint64_t a61)
{
  uint64_t result = a31;
  switch(a61 >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 3uLL:
    case 6uLL:
    case 7uLL:
    case 8uLL:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24988D788(a12, a13, a14);
      sub_24988D788(a15, a16, a17);
      sub_24988D788(a18, a19, a20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24989CF3C(a26, a27, a28);
      goto LABEL_3;
    case 2uLL:

      swift_bridgeObjectRelease();
      sub_24988D788(a9, a10, a11);
      sub_24988D788(a12, a13, a14);
      uint64_t result = sub_2498FD7A0(a15, a16);
      break;
    case 4uLL:
      sub_24989CDE8(a2, (uint64_t)a3, (uint64_t)a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
        a21,
        a22,
        a23,
        a24,
        a25,
        a26,
        a27,
        (uint64_t)a28,
        a29);
      sub_24988D788(a38, a39, a40);
      sub_24988D788(a41, a42, a43);
      sub_24988D788(a44, a45, a46);
      sub_24988D788(a47, a48, a49);
      sub_24988D788(a50, a51, a52);
      sub_24988D788(a53, a54, a55);
      sub_24988D788(a56, a57, a58);
      sub_24988D788(a59, a60, a61);
LABEL_3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 5uLL:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24988D788(a10, a11, a12);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498FD7A0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2498FD7F0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,unint64_t a42)
{
  switch((a42 >> 47) & 1 | (a42 >> 53) & 6 | (a42 >> 59) & 8)
  {
    case 0uLL:
      swift_bridgeObjectRelease();
      sub_249882B2C(a2);
      sub_249882B2C(a12);
      swift_bridgeObjectRelease();
      sub_249882B2C(a23);
      uint64_t v42 = a33;
      goto LABEL_7;
    case 1uLL:
    case 0xAuLL:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 2uLL:
      uint64_t result = sub_2498FDC60(a8, a9, a10, a11, a12);
      break;
    case 3uLL:
    case 5uLL:
      swift_bridgeObjectRelease();
      sub_249882B2C(a2);
      uint64_t v42 = a12;
LABEL_7:
      uint64_t result = sub_249882B2C(v42);
      break;
    case 6uLL:
      unint64_t v46 = a42 & 0xBF3F7FFFFFFFFFFFLL;
      uint64_t result = sub_2498FDCF0(result, a2, a3, a4, a5, (uint64_t)a6, a7, a8, a9, (uint64_t)a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
                 a20,
                 a21,
                 a22,
                 a23,
                 a24,
                 a25,
                 a26,
                 a27,
                 a28,
                 a29,
                 a30,
                 a31,
                 a32,
                 a33,
                 a34,
                 a35,
                 a36,
                 a37,
                 a38,
                 a39,
                 a40,
                 a41,
                 v46);
      break;
    case 7uLL:
      uint64_t result = sub_24988D788((uint64_t)a6, a7, a8);
      break;
    case 8uLL:
    case 9uLL:
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_24988D788(a13, a14, a15);
      sub_24988D788(a16, a17, a18);
      uint64_t result = sub_249890C40(a19, a20, a21);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2498FDC60(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  unint64_t v5 = a5 >> 62;
  if (a5 >> 62)
  {
    if (v5 == 2)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else if (v5 != 1)
    {
      return result;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_2498FDCF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  swift_bridgeObjectRelease();
  if (a42 < 0)
  {
    sub_249882B2C(a3);
    sub_249882B2C(a13);
    swift_bridgeObjectRelease();
    sub_249882B2C(a24);
    a12 = a34;
  }
  else
  {
    sub_249882B2C(a2);
  }

  return sub_249882B2C(a12);
}

void sub_2498FDE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void (*a13)(void))
{
  if ((~a5 & 0xFELL) != 0)
  {
    a13();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a13)(a7, a8, a9, a10, a11);
  }
}

void sub_2498FDEF4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, char a7, uint64_t a8, void *a9, uint64_t a10, void *a11, uint64_t a12, char a13)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_2498826E4(a3, a4, a5, a6, a7);
    sub_2498826D0(a9, a10, a11, a12, a13);
  }
}

uint64_t sub_2498FDFB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2498FE018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2499BE100(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_2498FE03C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WeakBox();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v6 = MEMORY[0x24C5B0220](v8);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = v6;
  return result;
}

void WeakBox.base.getter()
{
}

uint64_t WeakBox.init(_:)()
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_2498FE14C()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_2498FE15C()
{
  return 8;
}

void *sub_2498FE168(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2498FE174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t getEnumTagSinglePayload for BackgroundConfiguration.BlurConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BackgroundConfiguration.BlurConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

uint64_t type metadata accessor for WeakBox()
{
  return __swift_instantiateGenericMetadata();
}

BOOL static CPFontError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t CPFontError.hash(into:)()
{
  return sub_249AEE348();
}

uint64_t CPFontError.hashValue.getter()
{
  return sub_249AEE388();
}

unint64_t sub_2498FE280()
{
  unint64_t result = qword_2696DF898;
  if (!qword_2696DF898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF898);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CPFontError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2498FE3B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CPFontError()
{
  return &type metadata for CPFontError;
}

uint64_t sub_2498FE3E8(void **a1)
{
  unint64_t v1 = *a1;
  sub_249AED0D8();
  uint64_t v2 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v1, sel_objectForKey_, v2);

  if (v3)
  {
    sub_249AED968();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_2498FE678((uint64_t)&v8, (uint64_t)v10);
  if (!v11) {
    goto LABEL_13;
  }
  if ((swift_dynamicCast() & 1) == 0 || v7 != 6) {
    return 0;
  }
  sub_249AED0D8();
  unsigned int v4 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(v1, sel_objectForKey_, v4);

  if (v5)
  {
    sub_249AED968();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v8 = 0u;
    long long v9 = 0u;
  }
  sub_2498FE678((uint64_t)&v8, (uint64_t)v10);
  if (v11)
  {
    if (swift_dynamicCast()) {
      return 0;
    }
  }
  else
  {
LABEL_13:
    sub_2498FE6E0((uint64_t)v10);
  }
  return 0;
}

id sub_2498FE588()
{
  id v1 = objc_msgSend(v0, sel_fontDescriptor);
  id v2 = objc_msgSend(v1, sel_fontDescriptorWithSymbolicTraits_, 1);

  if (v2)
  {
    id v3 = v2;
    objc_msgSend(v7, sel_pointSize);
    id v5 = objc_msgSend(self, sel_fontWithDescriptor_size_, v3, v4);

    if (v5) {
      return v5;
    }
  }

  return v7;
}

uint64_t sub_2498FE678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2498FE6E0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t WidgetHostViewControllerWrapperView.init(identifier:widget:configurationIdentifier:metrics:metricsDefineSize:size:clipsToCornerRadius:viewControllerHandler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, char a8@<W7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13)
{
  *(void *)a9 = result;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(void *)(a9 + 32) = a5;
  *(void *)(a9 + 40) = a6;
  *(unsigned char *)(a9 + 48) = a7;
  *(double *)(a9 + 56) = a10;
  *(double *)(a9 + 64) = a11;
  *(unsigned char *)(a9 + 72) = a8;
  *(void *)(a9 + 80) = a12;
  *(void *)(a9 + 88) = a13;
  return result;
}

id WidgetHostViewControllerWrapperView.makeUIViewController(context:)()
{
  double v2 = *v0;
  uint64_t v1 = *((void *)v0 + 1);
  id v3 = (void *)*((void *)v0 + 2);
  uint64_t v5 = *((void *)v0 + 4);
  uint64_t v4 = (void *)*((void *)v0 + 5);
  uint64_t v6 = *((unsigned __int8 *)v0 + 48);
  double v7 = v0[7];
  double v8 = v0[8];
  int v26 = *((unsigned __int8 *)v0 + 72);
  uint64_t v27 = (void (*)(id))*((void *)v0 + 10);
  long long v9 = (objc_class *)type metadata accessor for WidgetHostViewController();
  unint64_t v10 = (char *)objc_allocWithZone(v9);
  uint64_t v11 = &v10[OBJC_IVAR____TtC14CarPlayAssetUI24WidgetHostViewController_identifier];
  *(double *)uint64_t v11 = v2;
  *((void *)v11 + 1) = v1;
  id v12 = v3;
  id v13 = v4;
  swift_bridgeObjectRetain();
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = (void *)sub_249AED0A8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
  }
  v28.receiver = v10;
  v28.super_class = v9;
  id v15 = objc_msgSendSuper2(&v28, sel_initWithWidget_metrics_widgetConfigurationIdentifier_, v3, v4, v14);

  objc_msgSend(v15, sel_setVisibleEntryShouldSnapshot_, 1);
  objc_msgSend(v15, sel_setContentType_, 0);
  objc_msgSend(v15, sel_setCanAppearInSecureEnvironment_, 1);
  objc_msgSend(v15, sel_setColorScheme_, 2);
  id v16 = objc_allocWithZone(MEMORY[0x263F31EF8]);
  id v17 = v15;
  id v18 = objc_msgSend(v16, sel_initWithRenderingMode_backgroundViewPolicy_, 1, 1);
  objc_msgSend(v17, sel_setRenderScheme_, v18);

  objc_msgSend(v17, sel_setVisibility_, 2);
  objc_msgSend(v17, sel_setMetricsDefineSize_, v6);
  objc_msgSend(v17, sel_setShowsWidgetLabel_, 0);
  objc_msgSend(v17, sel_setInteractionDisabled_, 1);
  id result = objc_msgSend(v17, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_13;
  }
  char v20 = result;
  objc_msgSend(result, sel_setFrame_, 0.0, 0.0, v7, v8);

  id result = objc_msgSend(v17, sel_view);
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v21 = result;
  id v22 = objc_msgSend(result, sel_layer);

  objc_msgSend(v22, sel_setCornerCurve_, *MEMORY[0x263F15A20]);
  id result = objc_msgSend(v17, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  unsigned __int8 v23 = result;
  id v24 = objc_msgSend(result, sel_layer);

  double v25 = 0.0;
  if ((v26 & v6) == 1) {
    objc_msgSend(v4, sel__effectiveCornerRadius, 0.0);
  }
  objc_msgSend(v24, sel_setCornerRadius_, v25);

  objc_msgSend(v17, sel_setPresentationMode_, 2);
  if (v27) {
    v27(v17);
  }
  return v17;
}

id WidgetHostViewControllerWrapperView.updateUIViewController(_:context:)(void *a1)
{
  id v3 = *(void **)(v1 + 40);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 48);
  double v5 = *(double *)(v1 + 56);
  double v6 = *(double *)(v1 + 64);
  int v7 = *(unsigned __int8 *)(v1 + 72);
  double v8 = *(uint64_t (**)(void *))(v1 + 80);
  objc_msgSend(a1, sel_setWidget_, *(void *)(v1 + 16));
  objc_msgSend(a1, sel_setVisibleEntryShouldSnapshot_, 1);
  objc_msgSend(a1, sel_setContentType_, 0);
  objc_msgSend(a1, sel_setCanAppearInSecureEnvironment_, 1);
  objc_msgSend(a1, sel_setColorScheme_, 2);
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F31EF8]), sel_initWithRenderingMode_backgroundViewPolicy_, 1, 1);
  objc_msgSend(a1, sel_setRenderScheme_, v9);

  objc_msgSend(a1, sel_setMetricsDefineSize_, v4);
  objc_msgSend(a1, sel_setVisibility_, 2);
  objc_msgSend(a1, sel_setInteractionDisabled_, 1);
  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v11 = result;
  objc_msgSend(result, sel_setFrame_, 0.0, 0.0, v5, v6);

  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  id v12 = result;
  id v13 = objc_msgSend(result, sel_layer);

  objc_msgSend(v13, sel_setCornerCurve_, *MEMORY[0x263F15A20]);
  id result = objc_msgSend(a1, sel_view);
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v14 = result;
  id v15 = objc_msgSend(result, sel_layer);

  double v16 = 0.0;
  if ((v7 & v4) == 1) {
    objc_msgSend(v3, sel__effectiveCornerRadius, 0.0);
  }
  objc_msgSend(v15, sel_setCornerRadius_, v16);

  id result = objc_msgSend(a1, sel_setPresentationMode_, 2);
  if (v8) {
    return (id)v8(a1);
  }
  return result;
}

uint64_t sub_2498FED1C()
{
  return sub_249AEC438();
}

uint64_t sub_2498FED58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2498FF270();

  return MEMORY[0x270F02710](a1, a2, a3, v6);
}

uint64_t sub_2498FEDBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2498FF270();

  return MEMORY[0x270F026D8](a1, a2, a3, v6);
}

void sub_2498FEE20()
{
}

unint64_t sub_2498FEE4C()
{
  unint64_t result = qword_2696DF8A8;
  if (!qword_2696DF8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF8A8);
  }
  return result;
}

uint64_t sub_2498FEEA0()
{
  return MEMORY[0x263F1BB58];
}

void destroy for WidgetHostViewControllerWrapperView(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 80))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for WidgetHostViewControllerWrapperView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unint64_t v6 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v5;
  int v7 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  id v9 = (_OWORD *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  id v10 = v6;
  swift_bridgeObjectRetain();
  id v11 = v7;
  if (v8)
  {
    uint64_t v12 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v8;
    *(void *)(a1 + 88) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *v9;
  }
  return a1;
}

uint64_t assignWithCopy for WidgetHostViewControllerWrapperView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v7 = *(void **)(a2 + 40);
  uint64_t v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  id v9 = v7;

  uint64_t v10 = *(void *)(a1 + 80);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v11 = *(void *)(a2 + 80);
  if (!v10)
  {
    if (v11)
    {
      uint64_t v13 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v11;
      *(void *)(a1 + 88) = v13;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v11)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v12 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for WidgetHostViewControllerWrapperView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  long long v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  uint64_t v6 = *(void *)(a2 + 80);
  uint64_t v7 = *(void *)(a1 + 80);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  if (!v7)
  {
    if (v6)
    {
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 80) = v6;
      *(void *)(a1 + 88) = v9;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = v6;
  *(void *)(a1 + 88) = v8;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetHostViewControllerWrapperView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetHostViewControllerWrapperView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetHostViewControllerWrapperView()
{
  return &type metadata for WidgetHostViewControllerWrapperView;
}

unint64_t sub_2498FF270()
{
  unint64_t result = qword_2696DF8B0;
  if (!qword_2696DF8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF8B0);
  }
  return result;
}

uint64_t sub_2498FF2C4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ZoneModel.deinit()
{
  sub_249902A70(v0 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t (*)(void))type metadata accessor for Zone);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel__carouselModel;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t ZoneModel.__deallocating_deinit()
{
  sub_249902A70(v0 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t (*)(void))type metadata accessor for Zone);
  uint64_t v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel__carouselModel;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2498FF48C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ZoneModel();
  uint64_t result = sub_249AEB978();
  *a1 = result;
  return result;
}

uint64_t ZoneView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v45 = (uint64_t)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Zone();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8D0);
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8D8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8E0);
  MEMORY[0x270FA5388](v13 - 8);
  id v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8E8);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v1[1];
  uint64_t v47 = *v1;
  uint64_t v20 = v47;
  uint64_t v48 = v21;
  sub_2498FFA24((uint64_t)v12);
  uint64_t v22 = sub_249AECC28();
  sub_24990034C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, INFINITY, 0, v22, v23, (uint64_t)&qword_2696DF8D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2498D6084, &qword_2696DF8E0);
  sub_2498D60E8((uint64_t)v12, &qword_2696DF8D8);
  uint64_t v42 = v21 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone;
  sub_249902C1C(v21 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Zone);
  swift_retain();
  uint64_t v24 = Zone.overlayComponents.getter();
  sub_249902A70((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Zone);
  uint64_t v47 = v24;
  swift_getKeyPath();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v20;
  *(void *)(v25 + 24) = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF698);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8F0);
  sub_2498D0A3C(&qword_2696DF8F8, &qword_2696DF698);
  sub_249901DB8();
  sub_249901E5C();
  sub_249AECB48();
  uint64_t v26 = sub_249AECC28();
  uint64_t v28 = v27;
  uint64_t v29 = &v19[*(int *)(v17 + 44)];
  uint64_t v31 = v43;
  uint64_t v30 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v29, v9, v44);
  uint64_t v32 = (uint64_t *)&v29[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF920) + 36)];
  uint64_t *v32 = v26;
  v32[1] = v28;
  sub_2498D6084((uint64_t)v15, (uint64_t)v19, &qword_2696DF8E0);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v30);
  sub_2498D60E8((uint64_t)v15, &qword_2696DF8E0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v34 = v45;
  sub_2498D6084(v42, v45, &qword_2696DDB10);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF928);
  uint64_t v37 = v46;
  uint64_t v38 = (uint64_t *)(v46 + *(int *)(v36 + 36));
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF930);
  sub_2498D6084(v34, (uint64_t)v38 + *(int *)(v39 + 28), &qword_2696DF8C8);
  *uint64_t v38 = KeyPath;
  sub_2498D6084((uint64_t)v19, v37, &qword_2696DF8E8);
  sub_2498D60E8(v34, &qword_2696DF8C8);
  return sub_2498D60E8((uint64_t)v19, &qword_2696DF8E8);
}

uint64_t sub_2498FFA24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  *(void *)&long long v71 = a1;
  uint64_t v3 = type metadata accessor for Component();
  uint64_t v67 = *(void *)(v3 - 8);
  uint64_t v68 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v66 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  id v63 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  BOOL v65 = (char *)&v61 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8F0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  id v64 = (uint64_t *)((char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v61 - v12;
  uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF990);
  uint64_t v14 = MEMORY[0x270FA5388](v72);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v61 - v17;
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA80);
  MEMORY[0x270FA5388](v70);
  uint64_t v20 = (char *)&v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Zone();
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v61 - v25;
  uint64_t v27 = v2[1];
  uint64_t v69 = *v2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  if ((void)v73)
  {
    sub_249902C1C(v27 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v28 = &v26[*(int *)(v21 + 36)];
    if (v28[9])
    {
      uint64_t v29 = &v26[*(int *)(v21 + 32)];
      if (v29[16])
      {
        uint64_t v30 = 0;
        LODWORD(v68) = 0;
        uint64_t v31 = 0x3FF3333333333333;
        double v32 = 0.0;
        unint64_t v33 = 0x4026000000000000;
      }
      else
      {
        double v32 = *((double *)v29 + 1) * -0.5;
        LODWORD(v68) = 1;
        uint64_t v31 = 0x3FFCCCCCCCCCCCCDLL;
        unint64_t v33 = 0xC024000000000000;
        uint64_t v30 = 0x4022000000000000;
      }
    }
    else
    {
      double v32 = 0.0;
      if (v28[8])
      {
        uint64_t v30 = 0;
        unint64_t v33 = 0;
        uint64_t v31 = 0;
        LODWORD(v68) = 255;
      }
      else
      {
        LODWORD(v68) = 0;
        uint64_t v30 = *(void *)v28;
        uint64_t v31 = 0x3FF3333333333333;
        unint64_t v33 = 0x4026000000000000;
      }
    }
    swift_retain();
    sub_249902A70((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v69;
    *(void *)(v59 + 24) = v27;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA88);
    sub_2498D0A3C(&qword_2696DFA90, &qword_2696DFA88);
    *(void *)uint64_t v20 = sub_249AEBD48();
    *((void *)v20 + 1) = v60;
    *((void *)v20 + 2) = sub_249902AD0;
    *((void *)v20 + 3) = v59;
    *((void *)v20 + 4) = v30;
    *((void *)v20 + 5) = v33;
    *((double *)v20 + 6) = v32;
    *((void *)v20 + 7) = v31;
    v20[64] = v68;
    swift_storeEnumTagMultiPayload();
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF980);
    sub_2498D0A3C(&qword_2696DF978, &qword_2696DF980);
    sub_2499023E0();
    sub_249AEC248();
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v35 = v67;
    uint64_t v34 = v68;
    v61 = v13;
    unint64_t v62 = v16;
    uint64_t v36 = (uint64_t)v65;
    uint64_t v37 = v66;
    sub_249902C1C(v27 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v38 = Zone.primaryComponents.getter();
    sub_249902A70((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Zone);
    if (*(void *)(v38 + 16))
    {
      uint64_t v39 = v36;
      sub_249902C1C(v38 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80)), v36, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v40 = 0;
    }
    else
    {
      uint64_t v40 = 1;
      uint64_t v39 = v36;
    }
    uint64_t v41 = (uint64_t)v37;
    uint64_t v42 = v34;
    uint64_t v43 = (uint64_t)v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56))(v39, v40, 1, v42);
    swift_bridgeObjectRelease();
    sub_2498D6084(v39, v43, &qword_2696DF7F0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v43, 1, v42) == 1)
    {
      sub_2498D60E8(v43, &qword_2696DF7F0);
      uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF918);
      uint64_t v45 = (uint64_t)v64;
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v64, 1, 1, v44);
    }
    else
    {
      sub_249902A08(v43, v41, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v47 = sub_249AECC28();
      uint64_t v48 = v64;
      *id v64 = v47;
      v48[1] = v49;
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF9F8);
      sub_249901228(v41, v27, (char *)v48 + *(int *)(v50 + 44));
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF918);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v48, 0, 1, v51);
      uint64_t v52 = v41;
      uint64_t v45 = (uint64_t)v48;
      sub_249902A70(v52, (uint64_t (*)(void))type metadata accessor for Component);
    }
    uint64_t v46 = (uint64_t)v61;
    sub_249882788(v45, (uint64_t)v61, &qword_2696DF8F0);
    sub_2498D60E8(v39, &qword_2696DF7F0);
    uint64_t v53 = sub_249AECC28();
    uint64_t v55 = v54;
    sub_249900F20(v27, (uint64_t *)&v73);
    long long v71 = v73;
    uint64_t v56 = (uint64_t)v62;
    sub_2498D6084(v46, (uint64_t)v62, &qword_2696DF8F0);
    uint64_t v57 = v56 + *(int *)(v72 + 36);
    *(_OWORD *)uint64_t v57 = v71;
    *(void *)(v57 + 16) = v53;
    *(void *)(v57 + 24) = v55;
    sub_2498D60E8(v46, &qword_2696DF8F0);
    sub_249882788(v56, (uint64_t)v18, &qword_2696DF990);
    sub_2498D6084((uint64_t)v18, (uint64_t)v20, &qword_2696DF990);
    swift_storeEnumTagMultiPayload();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF980);
    sub_2498D0A3C(&qword_2696DF978, &qword_2696DF980);
    sub_2499023E0();
    sub_249AEC248();
    return sub_2498D60E8((uint64_t)v18, &qword_2696DF990);
  }
}

double sub_2499002D4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24990034C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for NotificationView, (void (*)(uint64_t, uint64_t, uint64_t))sub_249902C1C, &qword_2696DFAC0).n128_u64[0];
  return result;
}

__n128 sub_24990034C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, void (*a17)(uint64_t, uint64_t, uint64_t), uint64_t *a18)
{
  uint64_t v20 = a17;
  uint64_t v21 = a18;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  int v24 = a8 & 1;
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (v24) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_249AED7C8();
    uint64_t v31 = (void *)sub_249AEC4A8();
    sub_249AEB898();

    uint64_t v21 = a18;
    uint64_t v20 = a17;
  }
  sub_249AEBDF8();
  v20(v18, a9, a16);
  double v32 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v21) + 36));
  v32[4] = v38;
  v32[5] = v39;
  v32[6] = v40;
  _OWORD *v32 = v34;
  v32[1] = v35;
  __n128 result = v37;
  v32[2] = v36;
  v32[3] = v37;
  return result;
}

double sub_249900530@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24990034C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for UserInteractiveView, (void (*)(uint64_t, uint64_t, uint64_t))sub_249902C1C, &qword_2696DF9E8).n128_u64[0];
  return result;
}

double sub_2499005A8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24990034C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2696DF9C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2498D6084, &qword_2696DF9D0).n128_u64[0];
  return result;
}

double sub_249900618@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24990034C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2696DF9B8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2498D6084, &qword_2696DF9C0).n128_u64[0];
  return result;
}

double sub_249900688@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24990034C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2696DF9D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_2498D6084, &qword_2696DF9E0).n128_u64[0];
  return result;
}

double sub_2499006F8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24990034C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2696DFAF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_2498D6084, &qword_2696DFAF8).n128_u64[0];
  return result;
}

double sub_249900768@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24990034C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2696DFAD0, (void (*)(uint64_t, uint64_t, uint64_t))sub_2498D6084, &qword_2696DFAD8).n128_u64[0];
  return result;
}

double sub_2499007D8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24990034C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)&unk_2696DFAE0, (void (*)(uint64_t, uint64_t, uint64_t))sub_2498D6084, &qword_2696DFAE8).n128_u64[0];
  return result;
}

double sub_249900848@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_24990034C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, (uint64_t)type metadata accessor for SingleSelectMenuView, (void (*)(uint64_t, uint64_t, uint64_t))sub_249902C1C, &qword_2696DFAC8).n128_u64[0];
  return result;
}

uint64_t sub_2499008C0()
{
  return sub_249AEBFF8();
}

uint64_t sub_249900900(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2498D6084(a1, (uint64_t)&v9 - v6, &qword_2696DF8C8);
  sub_2498D6084((uint64_t)v7, (uint64_t)v5, &qword_2696DF8C8);
  sub_249902780();
  sub_249AEC008();
  return sub_2498D60E8((uint64_t)v7, &qword_2696DF8C8);
}

uint64_t sub_2499009EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a3;
  v35[1] = a2;
  uint64_t v37 = a1;
  uint64_t v41 = a4;
  uint64_t v36 = sub_249AECBE8();
  MEMORY[0x270FA5388](v36);
  v35[2] = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Zone();
  MEMORY[0x270FA5388](v40);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Component();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v35 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8F0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (void *)((char *)v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v35 - v21;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA98);
  MEMORY[0x270FA5388](v38);
  int v24 = (char *)v35 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249902C1C(v37, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Component);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
  sub_2498D6084((uint64_t)v16, (uint64_t)v14, &qword_2696DF7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
  {
    sub_2498D60E8((uint64_t)v14, &qword_2696DF7F0);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF918);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v20, 1, 1, v25);
    uint64_t v26 = v39;
  }
  else
  {
    sub_249902A08((uint64_t)v14, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Component);
    *uint64_t v20 = sub_249AECC28();
    v20[1] = v27;
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF9F8);
    uint64_t v26 = v39;
    sub_249901228((uint64_t)v10, v39, (char *)v20 + *(int *)(v28 + 44));
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF918);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v20, 0, 1, v29);
    sub_249902A70((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Component);
  }
  sub_249882788((uint64_t)v20, (uint64_t)v22, &qword_2696DF8F0);
  sub_2498D60E8((uint64_t)v16, &qword_2696DF7F0);
  sub_249902C1C(v26 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Zone);
  int v30 = v6[*(int *)(v40 + 44)];
  swift_retain();
  sub_249902A70((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Zone);
  if (v30 == 1) {
    sub_249AECBD8();
  }
  else {
    uint64_t v42 = sub_249AEC898();
  }
  uint64_t v31 = sub_249AEBBF8();
  swift_release();
  char v32 = sub_249AEC4E8();
  sub_2498D6084((uint64_t)v22, (uint64_t)v24, &qword_2696DF8F0);
  unint64_t v33 = &v24[*(int *)(v38 + 36)];
  *(void *)unint64_t v33 = v31;
  v33[8] = v32;
  sub_2498D60E8((uint64_t)v22, &qword_2696DF8F0);
  return sub_249882788((uint64_t)v24, v41, &qword_2696DFA98);
}

uint64_t sub_249900F20@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_249AECBE8();
  MEMORY[0x270FA5388](v4);
  uint64_t v5 = type metadata accessor for Zone();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_249AEBDD8();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (uint64_t **)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = a1 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone;
  uint64_t v12 = a1 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone + *(int *)(v5 + 36);
  if (*(unsigned char *)(v12 + 9))
  {
    sub_249902AD8();
    swift_retain();
  }
  else
  {
    if (*(unsigned char *)(v12 + 8))
    {
      sub_249902B2C();
    }
    else
    {
      uint64_t v13 = *(void *)v12;
      uint64_t v14 = *(int *)(v8 + 20);
      uint64_t v22 = a2;
      uint64_t v15 = (char *)v10 + v14;
      uint64_t v16 = *MEMORY[0x263F19860];
      uint64_t v17 = sub_249AEC108();
      a2 = v22;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v15, v16, v17);
      *uint64_t v10 = v13;
      v10[1] = v13;
      sub_249902BD4(&qword_2696DFAB8, MEMORY[0x263F19048]);
    }
    swift_retain();
    uint64_t v23 = sub_249AECB78();
    sub_249902B80();
  }
  uint64_t v18 = sub_249AECB78();
  sub_249902C1C(v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
  int v19 = v7[*(int *)(v5 + 44)];
  sub_249902A70((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
  if (v19 == 1) {
    sub_249AECBD8();
  }
  else {
    uint64_t v23 = sub_249AEC898();
  }
  uint64_t v20 = sub_249AEBBF8();
  uint64_t result = swift_release();
  *a2 = v18;
  a2[1] = v20;
  return result;
}

uint64_t sub_249901228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v28 = a2;
  int v30 = a3;
  uint64_t v4 = sub_249AEB808();
  uint64_t v25 = *(void *)(v4 - 8);
  uint64_t v26 = v4;
  MEMORY[0x270FA5388](v4);
  int v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Zone();
  MEMORY[0x270FA5388](v27);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA00);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v29 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v31 = *(void *)(a1 + *(int *)(type metadata accessor for Component() + 32));
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA08);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA10);
  sub_2498D0A3C(&qword_2696DFA18, &qword_2696DFA08);
  sub_2499027D4();
  sub_249902BD4(&qword_2696DFA68, (void (*)(uint64_t))type metadata accessor for Slot);
  sub_249AECB58();
  id v14 = 0;
  if (sub_2499BD0F0())
  {
    sub_249902C1C(v28 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
    int v15 = v7[*(int *)(v27 + 32) + 16];
    sub_249902A70((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
    if (v15 == 1)
    {
      uint64_t v31 = 0x3A706D6F63;
      unint64_t v32 = 0xE500000000000000;
      (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v24, a1, v26);
      sub_249AED128();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15768]), sel_init);
      uint64_t v16 = (void *)sub_249AED0A8();
      swift_bridgeObjectRelease();
      objc_msgSend(v14, sel_setIdentifier_, v16);

      objc_msgSend(v14, sel_setCornerRadius_, 0.0);
    }
    else
    {
      id v14 = 0;
    }
  }
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v18 = v29;
  v17(v29, v13, v8);
  int v19 = v30;
  v17(v30, v18, v8);
  *(void *)&v19[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA70) + 48)] = v14;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  id v21 = v14;
  v20(v13, v8);

  return ((uint64_t (*)(char *, uint64_t))v20)(v18, v8);
}

uint64_t sub_249901694@<X0>(double *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v3 = type metadata accessor for Slot();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SlotView();
  uint64_t v7 = v6 - 8;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA40);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA30);
  uint64_t v18 = v17 - 8;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249902C1C((uint64_t)a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Slot);
  *(void *)uint64_t v10 = swift_getKeyPath();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  *((void *)v10 + 3) = swift_getKeyPath();
  v10[32] = 0;
  id v21 = (uint64_t *)&v10[*(int *)(v7 + 32)];
  uint64_t *v21 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA78);
  swift_storeEnumTagMultiPayload();
  sub_249902A08((uint64_t)v5, (uint64_t)&v10[*(int *)(v7 + 36)], (uint64_t (*)(void))type metadata accessor for Slot);
  sub_249902A08((uint64_t)v10, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SlotView);
  CGFloat v22 = a1[6];
  CGFloat v23 = a1[7];
  CGFloat v24 = a1[8];
  CGFloat v25 = a1[9];
  v43.origin.x = v22;
  v43.origin.y = v23;
  v43.size.width = v24;
  v43.size.height = v25;
  CGRectGetWidth(v43);
  v44.origin.x = v22;
  v44.origin.y = v23;
  v44.size.width = v24;
  v44.size.height = v25;
  CGRectGetHeight(v44);
  sub_249AECC28();
  sub_249AEBBE8();
  sub_249902C1C((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for SlotView);
  uint64_t v26 = &v16[*(int *)(v14 + 44)];
  long long v27 = v41;
  *(_OWORD *)uint64_t v26 = v40;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v42;
  sub_249902A70((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for SlotView);
  CGFloat v28 = a1[6];
  CGFloat v29 = a1[7];
  CGFloat v30 = a1[8];
  CGFloat v31 = a1[9];
  v45.origin.x = v28;
  v45.origin.y = v29;
  v45.size.width = v30;
  v45.size.height = v31;
  CGFloat MidX = CGRectGetMidX(v45);
  v46.origin.x = v28;
  v46.origin.y = v29;
  v46.size.width = v30;
  v46.size.height = v31;
  CGFloat MidY = CGRectGetMidY(v46);
  sub_2498D6084((uint64_t)v16, (uint64_t)v20, &qword_2696DFA40);
  long long v34 = (CGFloat *)&v20[*(int *)(v18 + 44)];
  *long long v34 = MidX;
  v34[1] = MidY;
  sub_2498D60E8((uint64_t)v16, &qword_2696DFA40);
  double v35 = (double)*((uint64_t *)a1 + 14);
  uint64_t v36 = v39;
  sub_2498D6084((uint64_t)v20, v39, &qword_2696DFA30);
  *(double *)(v36 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA10) + 36)) = v35;
  return sub_2498D60E8((uint64_t)v20, &qword_2696DFA30);
}

uint64_t sub_249901A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v5 = type metadata accessor for Component();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8F0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v23 - v16;
  sub_249902C1C(a1, (uint64_t)&v23 - v16, (uint64_t (*)(void))type metadata accessor for Component);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
  sub_2498D6084((uint64_t)v17, (uint64_t)v15, &qword_2696DF7F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5) == 1)
  {
    sub_2498D60E8((uint64_t)v15, &qword_2696DF7F0);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF918);
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 1, 1, v18);
  }
  else
  {
    sub_249902A08((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Component);
    *uint64_t v11 = sub_249AECC28();
    v11[1] = v19;
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF9F8);
    sub_249901228((uint64_t)v8, a2, (char *)v11 + *(int *)(v20 + 44));
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF918);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v11, 0, 1, v21);
    sub_249902A70((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Component);
  }
  sub_249882788((uint64_t)v11, v24, &qword_2696DF8F0);
  return sub_2498D60E8((uint64_t)v17, &qword_2696DF7F0);
}

uint64_t sub_249901D78()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_249901DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249901A58(a1, *(void *)(v2 + 24), a2);
}

unint64_t sub_249901DB8()
{
  unint64_t result = qword_2696DF900;
  if (!qword_2696DF900)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2696DF810);
    sub_249902BD4(&qword_2696DF388, MEMORY[0x263F07508]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF900);
  }
  return result;
}

unint64_t sub_249901E5C()
{
  unint64_t result = qword_2696DF908;
  if (!qword_2696DF908)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF8F0);
    sub_2498D0A3C(&qword_2696DF910, &qword_2696DF918);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF908);
  }
  return result;
}

uint64_t sub_249901EF4()
{
  return sub_249AEBFF8();
}

uint64_t sub_249901F38()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t sub_249901F44()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249901F64()
{
  return type metadata accessor for ZoneModel();
}

uint64_t type metadata accessor for ZoneModel()
{
  uint64_t result = qword_2696DF938;
  if (!qword_2696DF938) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_249901FB8()
{
  type metadata accessor for Zone();
  if (v0 <= 0x3F)
  {
    sub_24990209C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for ZoneModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ZoneModel);
}

void sub_24990209C()
{
  if (!qword_2696DF948)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF950);
    unint64_t v0 = sub_249AEBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696DF948);
    }
  }
}

void *assignWithCopy for ZoneView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for ZoneView(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ZoneView()
{
  return &type metadata for ZoneView;
}

unint64_t sub_249902184()
{
  unint64_t result = qword_2696DF958;
  if (!qword_2696DF958)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF928);
    sub_249902224();
    sub_2498D0A3C(&qword_2696DF9B0, &qword_2696DF930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF958);
  }
  return result;
}

unint64_t sub_249902224()
{
  unint64_t result = qword_2696DF960;
  if (!qword_2696DF960)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF8E8);
    sub_2499022C4();
    sub_2498D0A3C(&qword_2696DF9A8, &qword_2696DF920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF960);
  }
  return result;
}

unint64_t sub_2499022C4()
{
  unint64_t result = qword_2696DF968;
  if (!qword_2696DF968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF8E0);
    sub_249902340();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF968);
  }
  return result;
}

unint64_t sub_249902340()
{
  unint64_t result = qword_2696DF970;
  if (!qword_2696DF970)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF8D8);
    sub_2498D0A3C(&qword_2696DF978, &qword_2696DF980);
    sub_2499023E0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF970);
  }
  return result;
}

unint64_t sub_2499023E0()
{
  unint64_t result = qword_2696DF988;
  if (!qword_2696DF988)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF990);
    sub_249901E5C();
    sub_2498D0A3C(&qword_2696DF998, &qword_2696DF9A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF988);
  }
  return result;
}

uint64_t sub_249902480@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_249902504()
{
  return sub_249AEB9F8();
}

uint64_t sub_249902584(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel__carouselModel;
  uint64_t v21 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF950);
  sub_249AEB9A8();
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v10, v9, v6);
  sub_249902C1C(a1, v3 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, (uint64_t (*)(void))type metadata accessor for Zone);
  uint64_t v11 = *(void *)(a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  if (*(void *)(v11 + 16) && (unint64_t v12 = sub_2498EF548(a1), (v13 & 1) != 0))
  {
    uint64_t v14 = *(void *)(v11 + 56) + 32 * v12;
    uint64_t v15 = *(void *)v14;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    unsigned __int8 v18 = *(unsigned char *)(v14 + 24);
    swift_retain();
    sub_2498EC438(v16, v17, v18);
    sub_249884EC8(v16, v17, v18);
  }
  else
  {
    uint64_t v15 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v21 = v15;
  swift_retain();
  sub_249AEB9F8();
  sub_249902A70(a1, (uint64_t (*)(void))type metadata accessor for Zone);
  return v3;
}

unint64_t sub_249902780()
{
  unint64_t result = qword_2696DF9F0;
  if (!qword_2696DF9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF9F0);
  }
  return result;
}

unint64_t sub_2499027D4()
{
  unint64_t result = qword_2696DFA20;
  if (!qword_2696DFA20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFA10);
    sub_249902874();
    sub_2498D0A3C(&qword_2696DFA58, &qword_2696DFA60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFA20);
  }
  return result;
}

unint64_t sub_249902874()
{
  unint64_t result = qword_2696DFA28;
  if (!qword_2696DFA28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFA30);
    sub_2499028F0();
    sub_24990299C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFA28);
  }
  return result;
}

unint64_t sub_2499028F0()
{
  unint64_t result = qword_2696DFA38;
  if (!qword_2696DFA38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFA40);
    sub_249902BD4(&qword_2696DFA48, (void (*)(uint64_t))type metadata accessor for SlotView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFA38);
  }
  return result;
}

unint64_t sub_24990299C()
{
  unint64_t result = qword_2696DFA50;
  if (!qword_2696DFA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFA50);
  }
  return result;
}

uint64_t sub_249902A08(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249902A70(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249902AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2499009EC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_249902AD8()
{
  unint64_t result = qword_2696DFAA0;
  if (!qword_2696DFAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFAA0);
  }
  return result;
}

unint64_t sub_249902B2C()
{
  unint64_t result = qword_2696DFAA8;
  if (!qword_2696DFAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFAA8);
  }
  return result;
}

unint64_t sub_249902B80()
{
  unint64_t result = qword_2696DFAB0;
  if (!qword_2696DFAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFAB0);
  }
  return result;
}

uint64_t sub_249902BD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249902C1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t static Color.multiGaugePrimary.getter()
{
  return sub_249903350(&qword_2696DD398);
}

uint64_t static Color.multiGaugeSecondary.getter()
{
  return sub_249903350(&qword_2696DD3A0);
}

uint64_t static Color.multiGaugeClear.getter()
{
  return sub_249903350(&qword_2696DD3C0);
}

uint64_t sub_249902CF4(uint64_t a1)
{
  return sub_249902E04(a1, &qword_2696DFB00);
}

uint64_t sub_249902D08(uint64_t a1)
{
  return sub_249903238(0.207843137, 0.196078431, 0.2, a1, &qword_2696DFB08);
}

uint64_t sub_249902D2C(uint64_t a1)
{
  return sub_249903238(0.0980392157, 0.0980392157, 0.101960784, a1, &qword_2696DFB10);
}

uint64_t static Color.multiGaugeTertiary.getter()
{
  return sub_249903350(&qword_2696DD3A8);
}

uint64_t sub_249902D70(uint64_t a1)
{
  return sub_249903238(0.0666666667, 0.0666666667, 0.0705882353, a1, &qword_2696DFB18);
}

uint64_t static Color.multiGaugeBackground.getter()
{
  return sub_249903350(&qword_2696DD3B0);
}

uint64_t sub_249902DB8(uint64_t a1)
{
  return sub_249902E04(a1, &qword_2696DFB20);
}

uint64_t static Color.multiGaugeBlack.getter()
{
  return sub_249903350(&qword_2696DD3B8);
}

uint64_t sub_249902DF0(uint64_t a1)
{
  return sub_249902E04(a1, &qword_2696DFB28);
}

uint64_t sub_249902E04(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_249AEC838();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F1B388]);
  uint64_t result = sub_249AEC928();
  *a2 = result;
  return result;
}

uint64_t sub_249902EE4(uint64_t a1)
{
  return sub_249903238(0.0, 0.48627451, 1.0, a1, &qword_2696DFB30);
}

uint64_t static Color.multiGaugeBlue.getter()
{
  return sub_249903350(&qword_2696DD3C8);
}

uint64_t sub_249902F28(uint64_t a1)
{
  return sub_249903238(0.0, 0.890196078, 0.447058824, a1, &qword_2696DFB38);
}

uint64_t static Color.multiGaugeGreen.getter()
{
  return sub_249903350(&qword_2696DD3D0);
}

uint64_t sub_249902F70(uint64_t a1)
{
  return sub_249903238(0.337254902, 0.792156863, 0.992156863, a1, &qword_2696DFB40);
}

uint64_t static Color.multiGaugeCyan.getter()
{
  return sub_249903350(&qword_2696DD3D8);
}

uint64_t sub_249902FB8(uint64_t a1)
{
  return sub_249903238(1.0, 0.592156863, 0.0, a1, &qword_2696DFB48);
}

uint64_t static Color.multiGaugeOrange.getter()
{
  return sub_249903350(&qword_2696DD3E0);
}

uint64_t sub_249902FF8(uint64_t a1)
{
  return sub_249903238(1.0, 0.176470588, 0.345098039, a1, &qword_2696DFB50);
}

uint64_t static Color.multiGaugePink.getter()
{
  return sub_249903350(&qword_2696DD3E8);
}

uint64_t sub_24990303C(uint64_t a1)
{
  return sub_249903238(0.478431373, 0.490196078, 1.0, a1, &qword_2696DFB58);
}

uint64_t static Color.multiGaugePurple.getter()
{
  return sub_249903350(&qword_2696DD3F0);
}

uint64_t sub_249903080(uint64_t a1)
{
  return sub_249903238(1.0, 0.215686275, 0.168627451, a1, &qword_2696DFB60);
}

uint64_t static Color.multiGaugeRed.getter()
{
  return sub_249903350(&qword_2696DD3F8);
}

uint64_t sub_2499030C4(uint64_t a1)
{
  return sub_249903238(0.0, 0.980392157, 0.937254902, a1, &qword_2696DFB68);
}

uint64_t static Color.multiGaugeTeal.getter()
{
  return sub_249903350(&qword_2696DD400);
}

uint64_t sub_249903108(uint64_t a1)
{
  return sub_249903238(1.0, 0.91372549, 0.105882353, a1, &qword_2696DFB70);
}

uint64_t static Color.multiGaugeYellow.getter()
{
  return sub_249903350(&qword_2696DD408);
}

uint64_t sub_24990314C(uint64_t a1)
{
  return sub_249903238(0.0, 0.82745098, 0.294117647, a1, &qword_2696DFB78);
}

uint64_t static Color.gaugeGreen.getter()
{
  return sub_249903350(&qword_2696DD410);
}

uint64_t sub_249903190(uint64_t a1)
{
  return sub_249903238(0.22745098, 0.22745098, 0.235294118, a1, &qword_2696DFB80);
}

uint64_t static Color.gaugeSecondary.getter()
{
  return sub_249903350(&qword_2696DD418);
}

uint64_t sub_2499031D8(uint64_t a1)
{
  return sub_249903238(0.819607843, 0.819607843, 0.839215686, a1, &qword_2696DFB88);
}

uint64_t static Color.gaugeLightGray.getter()
{
  return sub_249903350(&qword_2696DD420);
}

uint64_t sub_24990321C(uint64_t a1)
{
  return sub_249903238(0.62745098, 0.62745098, 0.62745098, a1, &qword_2696DFB90);
}

uint64_t sub_249903238(double a1, double a2, double a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9 = sub_249AEC838();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void))(v12 + 104))(v11, *MEMORY[0x263F1B388]);
  uint64_t result = MEMORY[0x24C5ADA90](v11, a1, a2, a3, 1.0);
  *a5 = result;
  return result;
}

uint64_t static Color.gaugeGray.getter()
{
  return sub_249903350(&qword_2696DD428);
}

uint64_t sub_249903350(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_24990339C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RequestContentModel();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_2498D60E8(a1, &qword_2696DFBB8);
    sub_24992A540(a2, (uint64_t (*)(void))type metadata accessor for RequestContentModel, (uint64_t (*)(void))type metadata accessor for RequestContentModel, (void (*)(unint64_t, uint64_t))sub_24992AD94, (void (*)(void))sub_2498E0C30, (uint64_t)v8);
    sub_2498D60E8(a2, &qword_2696DDB10);
    uint64_t v13 = (uint64_t)v8;
    uint64_t v14 = &qword_2696DFBB8;
  }
  else
  {
    sub_24992F668(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_249883DD4((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;
    swift_bridgeObjectRelease();
    uint64_t v14 = &qword_2696DDB10;
    uint64_t v13 = a2;
  }
  return sub_2498D60E8(v13, v14);
}

uint64_t sub_2499035B8(uint64_t a1)
{
  return sub_2499035D0(a1);
}

uint64_t sub_2499035D0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_249A21F10(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = *(void *)(type metadata accessor for Slot() - 8);
    uint64_t v5 = *(void *)(v4 + 72);
    uint64_t v6 = (uint64_t *)(((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
                   + a1
                   + 128);
    do
    {
      uint64_t v8 = *(v6 - 1);
      uint64_t v7 = *v6;
      unint64_t v10 = *(void *)(v13 + 16);
      unint64_t v9 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v9 >> 1) {
        sub_249A21F10(v9 > 1, v10 + 1, 1);
      }
      *(void *)(v13 + 16) = v10 + 1;
      uint64_t v11 = v13 + 16 * v10;
      *(void *)(v11 + 32) = v8;
      *(void *)(v11 + 40) = v7;
      uint64_t v6 = (uint64_t *)((char *)v6 + v5);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_249903700(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v68 = MEMORY[0x263F8EE78];
    sub_249A22170(0, v1, 0);
    uint64_t v53 = v68;
    int64_t v4 = v1 - 1;
    uint64_t v5 = (uint64_t *)(a1 + 48);
    while (1)
    {
      uint64_t v7 = *(v5 - 2);
      uint64_t v6 = *(v5 - 1);
      uint64_t v8 = *v5;
      uint64_t v9 = v5[1];
      uint64_t v10 = v5[2];
      uint64_t v11 = v5[3];
      unint64_t v12 = v5[4];
      uint64_t v13 = v5[5];
      uint64_t v14 = v5[6];
      v5 += 9;
      switch(v12 >> 62)
      {
        case 1uLL:
          uint64_t v54 = v7;
          uint64_t v55 = v6;
          uint64_t v56 = (void *)v8;
          uint64_t v57 = v9;
          uint64_t v58 = v10;
          uint64_t v59 = v11;
          char v60 = v12 & 1;
          uint64_t v61 = v13;
          uint64_t v62 = v14;
          unint64_t v50 = v12;
          uint64_t v52 = v9;
          uint64_t v15 = v8;
          sub_2498A4A50(&v54);
          goto LABEL_6;
        case 2uLL:
          int64_t v47 = v4;
          unint64_t v51 = v12;
          uint64_t v16 = v8;
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0C8);
          uint64_t v43 = swift_allocObject();
          *(_OWORD *)(v43 + 16) = xmmword_249AF0A70;
          uint64_t v48 = v10;
          swift_beginAccess();
          LOBYTE(v65[0]) = byte_2696DE830;
          HIDWORD(v65[0]) = dword_2696DE834;
          v65[1] = 1056964608;
          v65[3] = 0;
          v65[4] = 0;
          v65[2] = 0x3FB999999999999ALL;
          v65[5] = 0x3FF0000000000000;
          v65[6] = 1056964608;
          v65[8] = 0;
          v65[9] = 0;
          v65[7] = 0x3FB999999999999ALL;
          v65[10] = 0x3FF0000000000000;
          sub_2498A4888(v65);
          sub_249890C54((uint64_t)v65, v43 + 32);
          sub_2498A48A4(v7, v6, v16, v9, v10, v11, v51);
          uint64_t v44 = v16;
          uint64_t v45 = v6;
          uint64_t v17 = v6;
          uint64_t v18 = (void *)v43;
          uint64_t v46 = v11;
          sub_2498A48A4(v7, v17, v16, v9, v10, v11, v51);
          swift_bridgeObjectRetain();
          sub_249890C54(v43 + 32, (uint64_t)v63);
          sub_249890C54((uint64_t)v63, (uint64_t)v64);
          int v19 = sub_2498C4E8C(v64);
          uint64_t v20 = (void *)MEMORY[0x263F8EE78];
          uint64_t v2 = v53;
          if (v19 == 4)
          {
            uint64_t v21 = sub_2498C4EA0(v64);
            char v22 = *(unsigned char *)v21;
            int v23 = *((_DWORD *)v21 + 1);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v20 = sub_2498AB754(0, *(void *)(MEMORY[0x263F8EE78] + 16) + 1, 1, MEMORY[0x263F8EE78]);
            }
            unint64_t v25 = v20[2];
            unint64_t v24 = v20[3];
            if (v25 >= v24 >> 1) {
              uint64_t v20 = sub_2498AB754((void *)(v24 > 1), v25 + 1, 1, v20);
            }
            v20[2] = v25 + 1;
            uint64_t v26 = &v20[v25];
            *((unsigned char *)v26 + 32) = v22;
            *((_DWORD *)v26 + 9) = v23;
          }
          swift_bridgeObjectRelease();
          uint64_t v27 = v20[2];
          swift_bridgeObjectRelease();
          if (v27)
          {
            uint64_t v28 = v44;
            uint64_t v29 = v45;
            uint64_t v30 = v7;
            uint64_t v31 = v45;
            uint64_t v32 = v9;
            uint64_t v33 = v48;
            uint64_t v34 = v46;
            unint64_t v35 = v51;
          }
          else
          {
            char v49 = byte_2696DE830;
            int v36 = dword_2696DE834;
            uint64_t v37 = (void *)v43;
            uint64_t v29 = v45;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v37 = sub_2498AB630(0, *(void *)(v43 + 16) + 1, 1, (void *)v43);
            }
            unint64_t v39 = v37[2];
            unint64_t v38 = v37[3];
            if (v39 >= v38 >> 1) {
              uint64_t v37 = sub_2498AB630((void *)(v38 > 1), v39 + 1, 1, v37);
            }
            LOBYTE(v66[0]) = v49;
            HIDWORD(v66[0]) = v36;
            v66[1] = 1056964608;
            v66[3] = 0;
            v66[4] = 0;
            v66[2] = 0x3FB999999999999ALL;
            v66[5] = 0x3FF0000000000000;
            v66[6] = 1056964608;
            v66[8] = 0;
            v66[9] = 0;
            v66[7] = 0x3FB999999999999ALL;
            v66[10] = 0x3FF0000000000000;
            sub_2498A4888(v66);
            v37[2] = v39 + 1;
            sub_249890C54((uint64_t)v66, (uint64_t)&v37[17 * v39 + 4]);
            uint64_t v28 = v44;
            uint64_t v30 = v7;
            uint64_t v31 = v45;
            uint64_t v32 = v9;
            uint64_t v33 = v48;
            uint64_t v18 = v37;
            uint64_t v34 = v46;
            unint64_t v35 = v51;
          }
          sub_2498A58D4(v30, v31, v28, v32, v33, v34, v35);
          int64_t v4 = v47;
          uint64_t v54 = v7;
          uint64_t v55 = v29;
          uint64_t v56 = v18;
          sub_2498A492C(&v54);
          sub_2498A4990((uint64_t)&v54, (uint64_t)v66);
          nullsub_1(v66);
          sub_249882788((uint64_t)v66, (uint64_t)v67, &qword_2696DE0C0);
          goto LABEL_23;
        case 3uLL:
          sub_2498A47C8((uint64_t)v66);
          goto LABEL_16;
        default:
          uint64_t v54 = v7;
          uint64_t v55 = v6;
          uint64_t v56 = (void *)v8;
          uint64_t v57 = v9;
          unint64_t v50 = v12;
          uint64_t v52 = v9;
          uint64_t v15 = v8;
          sub_2498A49EC(&v54);
LABEL_6:
          sub_2498A4990((uint64_t)&v54, (uint64_t)v66);
          nullsub_1(v66);
          sub_2498A48A4(v7, v6, v15, v52, v10, v11, v50);
LABEL_16:
          sub_249882788((uint64_t)v66, (uint64_t)v67, &qword_2696DE0C0);
          uint64_t v2 = v53;
LABEL_23:
          uint64_t v68 = v2;
          unint64_t v41 = *(void *)(v2 + 16);
          unint64_t v40 = *(void *)(v2 + 24);
          if (v41 >= v40 >> 1)
          {
            sub_249A22170(v40 > 1, v41 + 1, 1);
            uint64_t v2 = v68;
          }
          *(void *)(v2 + 16) = v41 + 1;
          sub_249882788((uint64_t)v67, v2 + (v41 << 9) + 32, &qword_2696DE0C0);
          if (!v4) {
            return v2;
          }
          uint64_t v53 = v2;
          --v4;
          break;
      }
    }
  }
  return v2;
}

uint64_t sub_249903C9C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v69 = (uint64_t)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for Component();
  MEMORY[0x270FA5388](v68);
  uint64_t v67 = (char *)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF0);
  uint64_t v5 = MEMORY[0x270FA5388](v66);
  uint64_t v65 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v64 = (uint64_t)&v59 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v63 = (char *)&v59 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v62 = (uint64_t)&v59 - v11;
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v60 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v61 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v70 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v18 = (void *)MEMORY[0x263F8EE78];
  uint64_t v19 = (uint64_t)v63;
  v75 = (void *)MEMORY[0x263F8EE78];
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v73 = (v15 - 1) & v15;
  int64_t v74 = v17;
  for (unint64_t i = __clz(__rbit64(v15)) | (v17 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v23 << 6))
  {
    uint64_t v25 = v70;
    uint64_t v26 = *(void *)(v70 + 48);
    uint64_t v27 = v26
        + *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10) - 8) + 72) * i;
    uint64_t v28 = v62;
    sub_2498D6084(v27, v62, &qword_2696DDB10);
    uint64_t v29 = *(void *)(v25 + 56) + 32 * i;
    uint64_t v30 = *(void *)(v29 + 8);
    uint64_t v31 = *(void *)(v29 + 16);
    uint64_t v32 = v66;
    uint64_t v33 = v28 + *(int *)(v66 + 48);
    unsigned __int8 v34 = *(unsigned char *)(v29 + 24);
    *(void *)uint64_t v33 = *(void *)v29;
    *(void *)(v33 + 8) = v30;
    *(void *)(v33 + 16) = v31;
    *(unsigned char *)(v33 + 24) = v34;
    sub_249882788(v28, v19, &qword_2696DFDF0);
    uint64_t v35 = *(int *)(v32 + 48);
    uint64_t v36 = v64;
    uint64_t v37 = v64 + v35;
    uint64_t v38 = v19 + v35;
    sub_2498D6084(v19, v64, &qword_2696DDB10);
    *(void *)uint64_t v37 = *(void *)v38;
    char v39 = *(unsigned char *)(v38 + 24);
    *(_OWORD *)(v37 + 8) = *(_OWORD *)(v38 + 8);
    *(unsigned char *)(v37 + 24) = v39;
    swift_retain();
    sub_2498EC438(v30, v31, v34);
    uint64_t v40 = sub_249AEB7D8();
    uint64_t v71 = v41;
    uint64_t v72 = v40;
    sub_2498D60E8(v36, &qword_2696DDB10);
    uint64_t v42 = *(int *)(v32 + 48);
    uint64_t v43 = v65;
    uint64_t v44 = v65 + v42;
    uint64_t v45 = sub_2498D6084(v19, v65, &qword_2696DDB10);
    *(void *)uint64_t v44 = *(void *)v38;
    char v46 = *(unsigned char *)(v38 + 24);
    *(_OWORD *)(v44 + 8) = *(_OWORD *)(v38 + 8);
    *(unsigned char *)(v44 + 24) = v46;
    MEMORY[0x270FA5388](v45);
    uint64_t v47 = v68;
    *(&v59 - 2) = v68;
    uint64_t v48 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
    *(&v59 - 1) = v48;
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    *(&v59 - 2) = v47;
    *(&v59 - 1) = v48;
    swift_getKeyPath();
    swift_retain();
    uint64_t v50 = (uint64_t)v67;
    sub_249AEB9E8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v51 = v69;
    sub_2498D6084(v50, v69, qword_2696DF810);
    sub_24992EC88(v50, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v52 = sub_249AEB7D8();
    uint64_t v54 = v53;
    sub_2498D60E8(v51, qword_2696DF810);
    sub_2498D60E8(v43, &qword_2696DDB10);
    sub_2498D60E8(v19, &qword_2696DFDF0);
    uint64_t v18 = v75;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2498ABC28(0, v18[2] + 1, 1, v18);
      uint64_t v18 = (void *)result;
    }
    unint64_t v56 = v18[2];
    unint64_t v55 = v18[3];
    if (v56 >= v55 >> 1)
    {
      uint64_t result = (uint64_t)sub_2498ABC28((void *)(v55 > 1), v56 + 1, 1, v18);
      uint64_t v18 = (void *)result;
    }
    v18[2] = v56 + 1;
    uint64_t v57 = &v18[4 * v56];
    unint64_t v15 = v73;
    uint64_t v58 = v71;
    v57[4] = v72;
    v57[5] = v58;
    v57[6] = v52;
    v57[7] = v54;
    int64_t v17 = v74;
    v75 = v18;
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v61) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v60 + 8 * v21);
    int64_t v23 = v17 + 1;
    if (!v22)
    {
      int64_t v23 = v17 + 2;
      if (v17 + 2 >= v61) {
        goto LABEL_27;
      }
      unint64_t v22 = *(void *)(v60 + 8 * v23);
      if (!v22)
      {
        int64_t v23 = v17 + 3;
        if (v17 + 3 >= v61) {
          goto LABEL_27;
        }
        unint64_t v22 = *(void *)(v60 + 8 * v23);
        if (!v22)
        {
          int64_t v23 = v17 + 4;
          if (v17 + 4 >= v61) {
            goto LABEL_27;
          }
          unint64_t v22 = *(void *)(v60 + 8 * v23);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_20:
    uint64_t v73 = (v22 - 1) & v22;
    int64_t v74 = v23;
  }
  uint64_t v24 = v17 + 5;
  if (v17 + 5 >= v61)
  {
LABEL_27:
    swift_release();
    return (uint64_t)v18;
  }
  unint64_t v22 = *(void *)(v60 + 8 * v24);
  if (v22)
  {
    int64_t v23 = v17 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v61) {
      goto LABEL_27;
    }
    unint64_t v22 = *(void *)(v60 + 8 * v23);
    ++v24;
    if (v22) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

unint64_t sub_2499042B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_249AEB808();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v1, (uint64_t)v12, &qword_2696DFCA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    v15[0] = 0;
    v15[1] = 0xE000000000000000;
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    return 0xD000000000000028;
  }
  else
  {
    sub_249882788((uint64_t)v12, (uint64_t)v9, &qword_2696DFCB0);
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v9, v2);
    uint64_t v13 = sub_249AED128();
    sub_2498D60E8((uint64_t)v9, &qword_2696DFCB0);
  }
  return v13;
}

uint64_t sub_249904508(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Zone();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x263F8EE78];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_24992ECE8(a3 + v16 + v13 * v14, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Zone);
      char v17 = a1(v12);
      if (v3)
      {
        sub_24992EC88((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Zone);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_24992F668((uint64_t)v12, v23, (uint64_t (*)(void))type metadata accessor for Zone);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_249A22150(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_249A22150(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_24992F668(v23, v15 + v16 + v19 * v13, (uint64_t (*)(void))type metadata accessor for Zone);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_24992EC88((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Zone);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_2499047A0()
{
  uint64_t v0 = sub_249AEB908();
  __swift_allocate_value_buffer(v0, qword_26972C6E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26972C6E8);
  return sub_249AEB8F8();
}

uint64_t sub_24990481C@<X0>(void *a1@<X8>)
{
  return sub_24990670C(a1);
}

uint64_t sub_249904830()
{
  return sub_24990679C();
}

uint64_t sub_249904844()
{
  return sub_249906828();
}

uint64_t sub_249904860()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent, &qword_2696DFBA0);
}

uint64_t sub_249904874@<X0>(void *a1@<X8>)
{
  return sub_24990670C(a1);
}

uint64_t sub_249904888()
{
  return sub_24990679C();
}

uint64_t sub_24990489C()
{
  return sub_249906828();
}

uint64_t sub_2499048B8()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder, &qword_2696DFBB0);
}

uint64_t sub_2499048CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for Zone();
  int v12 = *(unsigned __int8 *)(a1 + *(int *)(result + 40));
  if (v12 != 2)
  {
    uint64_t v13 = result;
    if (v12)
    {
      char v14 = sub_249AEE0D8();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return result;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v15 = type metadata accessor for Layout();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v10, 1, v15))
    {
      sub_2498D60E8((uint64_t)v10, &qword_2696DFC48);
      int v16 = 0;
    }
    else
    {
      uint64_t v17 = *(void *)&v10[*(int *)(v15 + 24)];
      swift_bridgeObjectRetain();
      sub_2498D60E8((uint64_t)v10, &qword_2696DFC48);
      uint64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        v23[0] = v2;
        uint64_t v19 = *(void *)(v13 - 8);
        uint64_t v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
        sub_249AEB808();
        v23[5] = v17;
        uint64_t v21 = *(void *)(v19 + 72);
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        swift_bridgeObjectRetain();
        while ((sub_249AED088() & 1) == 0)
        {
          v20 += v21;
          if (!--v18)
          {
            swift_bridgeObjectRelease_n();
            int v16 = 0;
            goto LABEL_14;
          }
        }
        swift_bridgeObjectRelease_n();
        int v16 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        int v16 = 0;
      }
    }
LABEL_14:
    uint64_t v22 = a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent;
    swift_beginAccess();
    sub_2498D6084(v22, (uint64_t)v7, &qword_2696DFBB8);
    sub_249911BB0((uint64_t)v7, a1, v16);
    return sub_2498D60E8((uint64_t)v7, &qword_2696DFBB8);
  }
  return result;
}

uint64_t sub_249904C34@<X0>(uint64_t a1@<X8>)
{
  return sub_24990513C(&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent, a1);
}

uint64_t sub_249904C40(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(a1, (uint64_t)v12, &qword_2696DFBB8);
  uint64_t v13 = *a2;
  uint64_t v14 = v13 + *a5;
  swift_beginAccess();
  sub_24992F6D0((uint64_t)v12, v14);
  swift_endAccess();
  uint64_t v15 = *(void *)(v13 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zones);
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v17 = *(void *)(type metadata accessor for Zone() - 8);
    uint64_t v18 = v15 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v19 = *(void *)(v17 + 72);
    swift_bridgeObjectRetain();
    do
    {
      a6(v18, v13);
      v18 += v19;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  return sub_2498D60E8((uint64_t)v12, &qword_2696DFBB8);
}

uint64_t sub_249904DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for Zone();
  int v12 = *(unsigned __int8 *)(a1 + *(int *)(result + 40));
  if (v12 != 2)
  {
    uint64_t v13 = result;
    if (v12)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v14 = sub_249AEE0D8();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        return result;
      }
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v15 = type metadata accessor for Layout();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v10, 1, v15))
    {
      sub_2498D60E8((uint64_t)v10, &qword_2696DFC48);
      int v16 = 0;
    }
    else
    {
      uint64_t v17 = *(void *)&v10[*(int *)(v15 + 24)];
      swift_bridgeObjectRetain();
      sub_2498D60E8((uint64_t)v10, &qword_2696DFC48);
      uint64_t v18 = *(void *)(v17 + 16);
      if (v18)
      {
        v23[0] = v2;
        uint64_t v19 = *(void *)(v13 - 8);
        uint64_t v20 = v17 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
        sub_249AEB808();
        v23[5] = v17;
        uint64_t v21 = *(void *)(v19 + 72);
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        swift_bridgeObjectRetain();
        while ((sub_249AED088() & 1) == 0)
        {
          v20 += v21;
          if (!--v18)
          {
            swift_bridgeObjectRelease_n();
            int v16 = 0;
            goto LABEL_15;
          }
        }
        swift_bridgeObjectRelease_n();
        int v16 = 1;
      }
      else
      {
        swift_bridgeObjectRelease();
        int v16 = 0;
      }
    }
LABEL_15:
    uint64_t v22 = a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent;
    swift_beginAccess();
    sub_2498D6084(v22, (uint64_t)v7, &qword_2696DFBB8);
    sub_249911BB0((uint64_t)v7, a1, v16);
    return sub_2498D60E8((uint64_t)v7, &qword_2696DFBB8);
  }
  return result;
}

uint64_t sub_249905130@<X0>(uint64_t a1@<X8>)
{
  return sub_24990513C(&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent, a1);
}

uint64_t sub_24990513C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_2498D6084(v4, a2, &qword_2696DFBB8);
}

uint64_t sub_249905194@<X0>(unsigned char *a1@<X8>)
{
  return sub_249905F7C(a1);
}

uint64_t sub_2499051A8()
{
  return sub_24990600C();
}

uint64_t sub_2499051BC()
{
  return sub_249906090();
}

uint64_t sub_2499051D8()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent, &qword_2696DFBC8);
}

uint64_t sub_2499051EC@<X0>(void *a1@<X8>)
{
  return sub_24990670C(a1);
}

uint64_t sub_249905200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499053B0(a1, a2, a3, a4, (uint64_t)&unk_249AF7E28, (uint64_t)&unk_249AF7E50, (uint64_t (*)(uint64_t))sub_249905228);
}

uint64_t sub_249905228()
{
  return sub_249AEB9F8();
}

uint64_t sub_2499052EC()
{
  return sub_249906828();
}

uint64_t sub_249905308()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions, &qword_2696DFBD8);
}

uint64_t sub_24990531C@<X0>(unsigned char *a1@<X8>)
{
  return sub_249905F7C(a1);
}

uint64_t sub_249905330()
{
  return sub_24990600C();
}

uint64_t sub_249905344()
{
  return sub_249906090();
}

uint64_t sub_249905360()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent, &qword_2696DFBC8);
}

uint64_t sub_249905374@<X0>(void *a1@<X8>)
{
  return sub_24990670C(a1);
}

uint64_t sub_249905388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499053B0(a1, a2, a3, a4, (uint64_t)&unk_249AF7EB8, (uint64_t)&unk_249AF7EE0, (uint64_t (*)(uint64_t))sub_249905440);
}

uint64_t sub_2499053B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t))
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v8 = sub_249AEB9F8();
  return a7(v8);
}

uint64_t sub_249905440()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_249AEB9F8();
  uint64_t v1 = sub_2499086E0();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(type metadata accessor for Zone() - 8);
    uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v5 = *(void *)(v3 + 72);
    do
    {
      sub_249905598(v4, v0);
      v4 += v5;
      --v2;
    }
    while (v2);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_249905598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v62 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v63 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Component();
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v61 = (uint64_t)&v60 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE18);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v60 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  uint64_t v19 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v66 = (uint64_t)&v60 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v64 = a2;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v21 = v68[0];
  if (*(void *)(v68[0] + 16))
  {
    unint64_t v22 = sub_2498EF548(a1);
    uint64_t v23 = a1;
    if (v24)
    {
      sub_24992ECE8(*(void *)(v21 + 56) + *(void *)(v19 + 72) * v22, (uint64_t)v18, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
      uint64_t v25 = 0;
    }
    else
    {
      uint64_t v25 = 1;
    }
  }
  else
  {
    uint64_t v25 = 1;
    uint64_t v23 = a1;
  }
  uint64_t v26 = v67;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v18, v25, 1, v67);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v26) == 1) {
    return sub_2498D60E8((uint64_t)v18, &qword_2696DFE18);
  }
  uint64_t v28 = (uint64_t)v18;
  uint64_t v29 = v66;
  sub_24992F668(v28, v66, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  uint64_t v30 = *(void *)(v64 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  if (*(void *)(v30 + 16) && (unint64_t v31 = sub_2498EF548(v23), (v32 & 1) != 0))
  {
    uint64_t v33 = *(void *)(v30 + 56) + 32 * v31;
    uint64_t v35 = *(void *)v33;
    uint64_t v34 = *(void *)(v33 + 8);
    uint64_t v36 = *(void *)(v33 + 16);
    unsigned __int8 v37 = *(unsigned char *)(v33 + 24);
    swift_retain();
    sub_2498EC438(v34, v36, v37);
    sub_249884EC8(v34, v36, v37);
    uint64_t v38 = (uint64_t *)(v35 + *(void *)(*(void *)v35 + 144));
    swift_beginAccess();
    uint64_t v39 = *v38;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v40 = *(void *)(v39 + 16);
    if (v40)
    {
      uint64_t v60 = v23;
      uint64_t v41 = v39 + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
      uint64_t v42 = *(void *)(v65 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_24992ECE8(v41, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v43 = *(void *)&v14[*(int *)(v11 + 32)];
        if (*(void *)(v43 + 16))
        {
          uint64_t v44 = type metadata accessor for Slot();
          sub_2498D6084(v43+ *(int *)(v44 + 36)+ ((*(unsigned __int8 *)(*(void *)(v44 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v44 - 8) + 80)), (uint64_t)v8, &qword_2696DE540);
          uint64_t v45 = type metadata accessor for Instrument();
          int v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v8, 1, v45);
          sub_2498D60E8((uint64_t)v8, &qword_2696DE540);
          if (v46 == 1)
          {
            swift_bridgeObjectRelease();
            uint64_t v47 = v63;
            sub_24992F668((uint64_t)v14, v63, (uint64_t (*)(void))type metadata accessor for Component);
            uint64_t v48 = 0;
            uint64_t v23 = v60;
            goto LABEL_22;
          }
        }
        sub_24992EC88((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Component);
        v41 += v42;
        --v40;
      }
      while (v40);
      swift_bridgeObjectRelease();
      uint64_t v48 = 1;
      uint64_t v23 = v60;
    }
    else
    {
      uint64_t v48 = 1;
    }
    uint64_t v47 = v63;
LABEL_22:
    uint64_t v49 = v65;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v47, v48, 1, v11);
    swift_bridgeObjectRelease();
    int v50 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48))(v47, 1, v11);
    uint64_t v29 = v66;
    if (v50 != 1)
    {
      uint64_t v51 = v47;
      uint64_t v52 = v61;
      sub_24992F668(v51, v61, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v53 = v62;
      sub_2498D6084(v23, v62, &qword_2696DDB10);
      sub_249AEB808();
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v54 = sub_249AED088();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v55 = v29;
      unint64_t v56 = (void (*)(void *, void))sub_249AEB9D8();
      uint64_t v58 = v57;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v69 = *v58;
      *uint64_t v58 = 0x8000000000000000;
      sub_249883F70((v54 & 1) == 0, v53, isUniquelyReferenced_nonNull_native);
      *uint64_t v58 = v69;
      swift_bridgeObjectRelease();
      sub_2498D60E8(v53, &qword_2696DDB10);
      v56(v68, 0);
      swift_release();
      swift_release();
      sub_24992EC88(v52, (uint64_t (*)(void))type metadata accessor for Component);
      return sub_24992EC88(v55, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    }
  }
  else
  {
    uint64_t v47 = v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 56))(v63, 1, 1, v11);
  }
  sub_24992EC88(v29, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  return sub_2498D60E8(v47, &qword_2696DF7F0);
}

uint64_t sub_249905DE4()
{
  return sub_249906828();
}

uint64_t sub_249905E00()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions, &qword_2696DFBF0);
}

uint64_t sub_249905E14()
{
  return sub_24990612C();
}

uint64_t sub_249905E28(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2498D6084(a1, (uint64_t)&v9 - v6, &qword_2696DFC48);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v7, (uint64_t)v5, &qword_2696DFC48);
  swift_retain();
  sub_249AEB9F8();
  return sub_2498D60E8((uint64_t)v7, &qword_2696DFC48);
}

uint64_t sub_249905F38()
{
  return sub_24990666C();
}

uint64_t sub_249905F54()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout, &qword_2696DFC00);
}

uint64_t sub_249905F68@<X0>(unsigned char *a1@<X8>)
{
  return sub_249905F7C(a1);
}

uint64_t sub_249905F7C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_249905FF8()
{
  return sub_24990600C();
}

uint64_t sub_24990600C()
{
  return sub_249AEB9F8();
}

uint64_t sub_24990607C()
{
  return sub_249906090();
}

uint64_t sub_249906090()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_249906104()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout, &qword_2696DFBC8);
}

uint64_t sub_249906118()
{
  return sub_24990612C();
}

uint64_t sub_24990612C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();

  return swift_release();
}

uint64_t sub_2499061A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC40);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2498D6084(a1, (uint64_t)&v9 - v6, &qword_2696DFC40);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2498D6084((uint64_t)v7, (uint64_t)v5, &qword_2696DFC40);
  swift_retain();
  sub_249AEB9F8();
  sub_2499062B8();
  return sub_2498D60E8((uint64_t)v7, &qword_2696DFC40);
}

uint64_t sub_2499062B8()
{
  uint64_t v0 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = &v19[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC40);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = &v19[-v11];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v13 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v1 + 48);
  int v14 = v13(v12, 1, v0);
  sub_2498D60E8((uint64_t)v12, &qword_2696DFC40);
  if (v14 == 1)
  {
    BOOL v15 = 0;
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    if (v13(v10, 1, v0))
    {
      sub_2498D60E8((uint64_t)v10, &qword_2696DFC40);
      uint64_t v16 = type metadata accessor for Layout();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
      BOOL v15 = 0;
    }
    else
    {
      sub_24992ECE8((uint64_t)v10, (uint64_t)v3, type metadata accessor for ClusterTransitionCoordinator.LayoutTransition);
      sub_2498D60E8((uint64_t)v10, &qword_2696DFC40);
      sub_2498D6084((uint64_t)&v3[*(int *)(v0 + 24)], (uint64_t)v6, &qword_2696DFC48);
      sub_24992EC88((uint64_t)v3, type metadata accessor for ClusterTransitionCoordinator.LayoutTransition);
      uint64_t v17 = type metadata accessor for Layout();
      BOOL v15 = (*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v6, 1, v17) != 1;
    }
    sub_2498D60E8((uint64_t)v6, &qword_2696DFC48);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  v19[15] = v15;
  swift_retain();
  return sub_249AEB9F8();
}

uint64_t sub_249906658()
{
  return sub_24990666C();
}

uint64_t sub_24990666C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();

  return swift_release();
}

uint64_t sub_2499066E4()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition, &qword_2696DFC18);
}

uint64_t sub_2499066F8@<X0>(void *a1@<X8>)
{
  return sub_24990670C(a1);
}

uint64_t sub_24990670C@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_249906788()
{
  return sub_24990679C();
}

uint64_t sub_24990679C()
{
  return sub_249AEB9F8();
}

uint64_t sub_249906814()
{
  return sub_249906828();
}

uint64_t sub_249906828()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_24990689C()
{
  return sub_249AEB9F8();
}

void (*sub_24990690C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_249AEB9D8();
  return sub_249906998;
}

void sub_249906998(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_249906A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return swift_endAccess();
}

uint64_t sub_249906A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  BOOL v15 = (char *)&v18 - v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_249AEB9C8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_249906BEC()
{
  return sub_249906C00((uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment, &qword_2696DFC28);
}

uint64_t sub_249906C00(uint64_t a1, uint64_t *a2)
{
  return swift_endAccess();
}

uint64_t sub_249906C68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC30);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC28);
  sub_249AEB9C8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_249906D94(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC30);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC28);
  sub_249AEB9B8();
  swift_endAccess();
  return sub_249906EA4;
}

void sub_249906EA4(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_249AEB9C8();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_249AEB9C8();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

uint64_t sub_249907014@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_2499357A8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_2498B9AA8(v4);
}

uint64_t sub_2499070B4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_2499357B4;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_2498B9AA8(v3);
  sub_2498B9AA8((uint64_t)v6);
  sub_2498B9AB8(v8);
  sub_249907198();
  return sub_2498B9AB8((uint64_t)v6);
}

uint64_t sub_249907198()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE30);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v39 - v5;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v40 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  int64_t v39 = v41 - 1;
  uint64_t v42 = v7;
  uint64_t v43 = v0;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v11) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v23 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  unint64_t v24 = v23 | (v13 << 6);
  while (2)
  {
    uint64_t v25 = v42;
    uint64_t v26 = *(void *)(v42 + 48);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    sub_2498D6084(v26 + *(void *)(*(void *)(v27 - 8) + 72) * v24, (uint64_t)v4, &qword_2696DDB10);
    uint64_t v28 = *(void *)(v25 + 56) + 32 * v24;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF0);
    uint64_t v30 = &v4[*(int *)(v29 + 48)];
    uint64_t v31 = *(void *)(v28 + 8);
    uint64_t v32 = *(void *)(v28 + 16);
    unsigned __int8 v33 = *(unsigned char *)(v28 + 24);
    *(void *)uint64_t v30 = *(void *)v28;
    *((void *)v30 + 1) = v31;
    *((void *)v30 + 2) = v32;
    v30[24] = v33;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v4, 0, 1, v29);
    swift_retain();
    sub_2498EC438(v31, v32, v33);
    while (1)
    {
      sub_249882788((uint64_t)v4, (uint64_t)v6, &qword_2696DFE30);
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v6, 1, v38) == 1) {
        return swift_release();
      }
      uint64_t v14 = &v6[*(int *)(v38 + 48)];
      uint64_t v16 = *(void *)v14;
      uint64_t v15 = *((void *)v14 + 1);
      uint64_t v17 = *((void *)v14 + 2);
      unsigned __int8 v18 = v14[24];
      swift_retain();
      sub_2498EC438(v15, v17, v18);
      sub_249884EC8(v15, v17, v18);
      swift_retain();
      sub_2498EC438(v15, v17, v18);
      swift_release();
      uint64_t v19 = swift_allocObject();
      swift_weakInit();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = v15;
      *(void *)(v20 + 32) = v17;
      *(unsigned char *)(v20 + 40) = v18;
      uint64_t v21 = (uint64_t *)(v16 + *(void *)(*(void *)v16 + 128));
      swift_beginAccess();
      uint64_t v22 = *v21;
      uint64_t *v21 = (uint64_t)sub_249935764;
      v21[1] = v20;
      sub_2498B9AB8(v22);
      swift_release();
      sub_249884EC8(v15, v17, v18);
      swift_release();
      uint64_t result = sub_2498D60E8((uint64_t)v6, &qword_2696DDB10);
      if (v11) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v34 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v34 < v41)
      {
        unint64_t v35 = *(void *)(v40 + 8 * v34);
        if (v35) {
          goto LABEL_11;
        }
        int64_t v36 = v13 + 2;
        ++v13;
        if (v34 + 1 < v41)
        {
          unint64_t v35 = *(void *)(v40 + 8 * v36);
          if (v35) {
            goto LABEL_14;
          }
          int64_t v13 = v34 + 1;
          if (v34 + 2 < v41)
          {
            unint64_t v35 = *(void *)(v40 + 8 * (v34 + 2));
            if (v35)
            {
              v34 += 2;
              goto LABEL_11;
            }
            int64_t v36 = v34 + 3;
            int64_t v13 = v34 + 2;
            if (v34 + 3 < v41) {
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v4, 1, 1, v37);
      unint64_t v11 = 0;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v36);
    if (v35)
    {
LABEL_14:
      int64_t v34 = v36;
LABEL_11:
      unint64_t v11 = (v35 - 1) & v35;
      unint64_t v24 = __clz(__rbit64(v35)) + (v34 << 6);
      int64_t v13 = v34;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v34 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v34 >= v41)
    {
      int64_t v13 = v39;
      goto LABEL_25;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v34);
    ++v36;
    if (v35) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_249907638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v23[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Instrument();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v23[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + *(int *)(type metadata accessor for Component() + 32));
  if (!*(void *)(v16 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    return sub_2498D60E8((uint64_t)v11, &qword_2696DE540);
  }
  uint64_t v17 = type metadata accessor for Slot();
  sub_2498D6084(v16+ *(int *)(v17 + 36)+ ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80)), (uint64_t)v11, &qword_2696DE540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_2498D60E8((uint64_t)v11, &qword_2696DE540);
  }
  sub_24992F668((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Instrument);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = (uint64_t *)(Strong + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
    swift_beginAccess();
    uint64_t v20 = (void (*)(char *, void *))*v19;
    sub_2498B9AA8(*v19);
    swift_release();
    if (v20)
    {
      v23[0] = a3;
      v23[1] = a4;
      char v24 = a5;
      v20(v15, v23);
      sub_2498B9AB8((uint64_t)v20);
    }
  }
  return sub_24992EC88((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Instrument);
}

uint64_t sub_2499078DC()
{
  return sub_249908504(&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
}

uint64_t sub_2499078E8(uint64_t a1, uint64_t a2)
{
  return sub_24990857C(a1, a2, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear, (void (*)(uint64_t))sub_249907198);
}

uint64_t (*sub_249907908(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_249907968;
}

uint64_t sub_249907968(uint64_t a1, char a2)
{
  return sub_24990868C(a1, a2, (uint64_t (*)(uint64_t))sub_249907198);
}

uint64_t sub_249907980@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillDisappear);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_2499357A8;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_2498B9AA8(v4);
}

uint64_t sub_249907A20(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_2499357B4;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillDisappear);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_2498B9AA8(v3);
  return sub_2498B9AB8(v8);
}

uint64_t sub_249907AE8()
{
  return sub_249908504(&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillDisappear);
}

uint64_t sub_249907AF4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillDisappear);
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_2498B9AB8(v6);
}

uint64_t (*sub_249907B54())()
{
  return j__swift_endAccess;
}

uint64_t sub_249907BB0@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
  swift_beginAccess();
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  if (v4)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v4;
    *(void *)(v6 + 24) = v5;
    uint64_t v7 = sub_249934748;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())v6;
  return sub_2498B9AA8(v4);
}

uint64_t sub_249907C50(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_249934720;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = (uint64_t *)(*a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
  swift_beginAccess();
  uint64_t v8 = *v7;
  *uint64_t v7 = (uint64_t)v6;
  v7[1] = v5;
  sub_2498B9AA8(v3);
  sub_2498B9AA8((uint64_t)v6);
  sub_2498B9AB8(v8);
  sub_249907D34();
  return sub_2498B9AB8((uint64_t)v6);
}

uint64_t sub_249907D34()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE30);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v39 - v5;
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v40 = v7 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v41 = (unint64_t)(v9 + 63) >> 6;
  int64_t v39 = v41 - 1;
  uint64_t v42 = v7;
  uint64_t v43 = v0;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v11) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v23 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  unint64_t v24 = v23 | (v13 << 6);
  while (2)
  {
    uint64_t v25 = v42;
    uint64_t v26 = *(void *)(v42 + 48);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    sub_2498D6084(v26 + *(void *)(*(void *)(v27 - 8) + 72) * v24, (uint64_t)v4, &qword_2696DDB10);
    uint64_t v28 = *(void *)(v25 + 56) + 32 * v24;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF0);
    uint64_t v30 = &v4[*(int *)(v29 + 48)];
    uint64_t v31 = *(void *)(v28 + 8);
    uint64_t v32 = *(void *)(v28 + 16);
    unsigned __int8 v33 = *(unsigned char *)(v28 + 24);
    *(void *)uint64_t v30 = *(void *)v28;
    *((void *)v30 + 1) = v31;
    *((void *)v30 + 2) = v32;
    v30[24] = v33;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v4, 0, 1, v29);
    swift_retain();
    sub_2498EC438(v31, v32, v33);
    while (1)
    {
      sub_249882788((uint64_t)v4, (uint64_t)v6, &qword_2696DFE30);
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v6, 1, v38) == 1) {
        return swift_release();
      }
      uint64_t v14 = &v6[*(int *)(v38 + 48)];
      uint64_t v16 = *(void *)v14;
      uint64_t v15 = *((void *)v14 + 1);
      uint64_t v17 = *((void *)v14 + 2);
      unsigned __int8 v18 = v14[24];
      swift_retain();
      sub_2498EC438(v15, v17, v18);
      sub_249884EC8(v15, v17, v18);
      swift_retain();
      sub_2498EC438(v15, v17, v18);
      swift_release();
      uint64_t v19 = swift_allocObject();
      swift_weakInit();
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = v19;
      *(void *)(v20 + 24) = v15;
      *(void *)(v20 + 32) = v17;
      *(unsigned char *)(v20 + 40) = v18;
      uint64_t v21 = (uint64_t *)(v16 + *(void *)(*(void *)v16 + 136));
      swift_beginAccess();
      uint64_t v22 = *v21;
      uint64_t *v21 = (uint64_t)sub_24993570C;
      v21[1] = v20;
      sub_2498B9AB8(v22);
      swift_release();
      sub_249884EC8(v15, v17, v18);
      swift_release();
      uint64_t result = sub_2498D60E8((uint64_t)v6, &qword_2696DDB10);
      if (v11) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v34 = v13 + 1;
      if (__OFADD__(v13, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v34 < v41)
      {
        unint64_t v35 = *(void *)(v40 + 8 * v34);
        if (v35) {
          goto LABEL_11;
        }
        int64_t v36 = v13 + 2;
        ++v13;
        if (v34 + 1 < v41)
        {
          unint64_t v35 = *(void *)(v40 + 8 * v36);
          if (v35) {
            goto LABEL_14;
          }
          int64_t v13 = v34 + 1;
          if (v34 + 2 < v41)
          {
            unint64_t v35 = *(void *)(v40 + 8 * (v34 + 2));
            if (v35)
            {
              v34 += 2;
              goto LABEL_11;
            }
            int64_t v36 = v34 + 3;
            int64_t v13 = v34 + 2;
            if (v34 + 3 < v41) {
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v4, 1, 1, v37);
      unint64_t v11 = 0;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v36);
    if (v35)
    {
LABEL_14:
      int64_t v34 = v36;
LABEL_11:
      unint64_t v11 = (v35 - 1) & v35;
      unint64_t v24 = __clz(__rbit64(v35)) + (v34 << 6);
      int64_t v13 = v34;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v34 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v34 >= v41)
    {
      int64_t v13 = v39;
      goto LABEL_25;
    }
    unint64_t v35 = *(void *)(v40 + 8 * v34);
    ++v36;
    if (v35) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2499081D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)&v26[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Instrument();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v26[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + *(int *)(type metadata accessor for Component() + 32));
  if (!*(void *)(v16 + 16))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    return sub_2498D60E8((uint64_t)v11, &qword_2696DE540);
  }
  uint64_t v17 = type metadata accessor for Slot();
  sub_2498D6084(v16+ *(int *)(v17 + 36)+ ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80)), (uint64_t)v11, &qword_2696DE540);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_2498D60E8((uint64_t)v11, &qword_2696DE540);
  }
  sub_24992F668((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Instrument);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = (uint64_t *)(Strong + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillDisappear);
    swift_beginAccess();
    uint64_t v20 = (void (*)(char *, void *))*v19;
    sub_2498B9AA8(*v19);
    swift_release();
    if (v20)
    {
      v28[0] = a3;
      v28[1] = a4;
      char v29 = a5;
      v20(v15, v28);
      sub_2498B9AB8((uint64_t)v20);
    }
  }
  swift_beginAccess();
  uint64_t v21 = swift_weakLoadStrong();
  if (v21)
  {
    uint64_t v22 = (uint64_t *)(v21 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
    swift_beginAccess();
    unint64_t v23 = (void (*)(char *, void *))*v22;
    sub_2498B9AA8(*v22);
    swift_release();
    if (v23)
    {
      v26[0] = a3;
      v26[1] = a4;
      char v27 = a5;
      v23(v15, v26);
      sub_2498B9AB8((uint64_t)v23);
    }
  }
  return sub_24992EC88((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Instrument);
}

uint64_t sub_2499084F8()
{
  return sub_249908504(&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
}

uint64_t sub_249908504(void *a1)
{
  uint64_t v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  uint64_t v3 = *v2;
  sub_2498B9AA8(*v2);
  return v3;
}

uint64_t sub_24990855C(uint64_t a1, uint64_t a2)
{
  return sub_24990857C(a1, a2, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear, (void (*)(uint64_t))sub_249907D34);
}

uint64_t sub_24990857C(uint64_t a1, uint64_t a2, void *a3, void (*a4)(uint64_t))
{
  uint64_t v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  *uint64_t v8 = a1;
  v8[1] = a2;
  sub_2498B9AA8(a1);
  uint64_t v10 = sub_2498B9AB8(v9);
  a4(v10);
  return sub_2498B9AB8(a1);
}

uint64_t (*sub_249908614(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_249908674;
}

uint64_t sub_249908674(uint64_t a1, char a2)
{
  return sub_24990868C(a1, a2, (uint64_t (*)(uint64_t))sub_249907D34);
}

uint64_t sub_24990868C(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t result = swift_endAccess();
  if ((a2 & 1) == 0) {
    return a3(result);
  }
  return result;
}

uint64_t ClusterTransitionCoordinator.carouselModels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2499086E0()
{
  uint64_t v1 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator____lazy_storage___mapsMediaZones;
  if (*(void *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator____lazy_storage___mapsMediaZones))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator____lazy_storage___mapsMediaZones);
  }
  else
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_24992D270(v3);
    swift_bridgeObjectRelease();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t ClusterTransitionCoordinator.__allocating_init(zones:additionalDynamicListItems:additionalMapsMediaItems:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ClusterTransitionCoordinator.init(zones:additionalDynamicListItems:additionalMapsMediaItems:)(a1);
  return v2;
}

uint64_t ClusterTransitionCoordinator.init(zones:additionalDynamicListItems:additionalMapsMediaItems:)(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x270FA5388](a1);
  uint64_t v383 = v3;
  uint64_t v384 = v4;
  *(void *)&long long v416 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC38);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v390 = (uint64_t)&v373 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_249AEB8C8();
  uint64_t v378 = *(void *)(v7 - 8);
  uint64_t v379 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  v375 = (char *)&v373 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v377 = (char *)&v373 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v414 = (uint64_t)&v373 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v413 = (uint64_t)&v373 - v14;
  uint64_t v428 = type metadata accessor for Component();
  uint64_t v410 = *(void *)(v428 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v428);
  v386 = (char *)&v373 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v399 = (uint64_t)&v373 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v397 = (uint64_t)&v373 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  MEMORY[0x270FA5388](v20 - 8);
  v398 = (char *)&v373 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v420 = (uint64_t)&v373 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  v424 = (char *)&v373 - v25;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  v431 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v373 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  v422 = (char *)&v373 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v421 = (uint64_t)&v373 - v31;
  uint64_t v433 = type metadata accessor for Slot();
  uint64_t v432 = *(void *)(v433 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v433);
  uint64_t v385 = (uint64_t)&v373 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v425 = (uint64_t)&v373 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v426 = (char *)&v373 - v37;
  MEMORY[0x270FA5388](v36);
  uint64_t v423 = (uint64_t)&v373 - v38;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v39 - 8);
  v415 = (char *)&v373 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v374 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v380 = *(void *)(v374 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v374);
  uint64_t v389 = (uint64_t)&v373 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  v427 = (uint64_t *)((char *)&v373 - v43);
  uint64_t v417 = type metadata accessor for Zone();
  uint64_t v381 = *(void *)(v417 - 8);
  MEMORY[0x270FA5388](v417);
  v429 = (char *)&v373 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v418 = (void (**)(char *, uint64_t, uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC28);
  uint64_t v412 = (uint64_t)*(v418 - 1);
  MEMORY[0x270FA5388](v418);
  v411 = (char *)&v373 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC18);
  uint64_t v408 = *(void *)(v46 - 8);
  uint64_t v409 = v46;
  MEMORY[0x270FA5388](v46);
  v407 = (char *)&v373 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC40);
  uint64_t v48 = MEMORY[0x270FA5388](v406);
  v405 = (uint64_t *)((char *)&v373 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v48);
  v404 = (_OWORD *)((char *)&v373 - v50);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC00);
  v402 = *(void (***)(char *, uint64_t, uint64_t))(v51 - 8);
  unint64_t v403 = v51;
  MEMORY[0x270FA5388](v51);
  *(void *)&long long v401 = (char *)&v373 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v400 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  uint64_t v53 = MEMORY[0x270FA5388](v400);
  v396 = (void (**)(char *, uint64_t, uint64_t))((char *)&v373 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v53);
  *(void *)&long long v395 = (char *)&v373 - v55;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBF0);
  uint64_t v393 = *(void *)(v56 - 8);
  v394 = (uint64_t *)v56;
  MEMORY[0x270FA5388](v56);
  v392 = (char *)&v373 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v391 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBD8);
  unint64_t v388 = *(void *)(v391 - 8);
  MEMORY[0x270FA5388](v391);
  v387 = (char *)&v373 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v419 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBC8);
  v430 = *(unsigned char **)(v419 - 8);
  MEMORY[0x270FA5388](v419);
  v382 = (char *)&v373 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB0);
  uint64_t v61 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v63 = (char *)&v373 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBA0);
  uint64_t v65 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v67 = (char *)&v373 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = (uint64_t)v1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent;
  uint64_t v69 = MEMORY[0x263F8EE78];
  uint64_t v439 = sub_2498ED4CC(MEMORY[0x263F8EE78]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC50);
  sub_249AEB9A8();
  uint64_t v70 = v67;
  uint64_t v71 = v416;
  (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))(v68, v70, v64);
  uint64_t v72 = v1;
  uint64_t v73 = (uint64_t)v1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder;
  uint64_t v439 = v69;
  uint64_t v74 = v69;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC58);
  sub_249AEB9A8();
  (*(void (**)(uint64_t, char *, uint64_t))(v61 + 32))(v73, v63, v60);
  v75 = (char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent;
  uint64_t v76 = type metadata accessor for RequestContentModel();
  v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56);
  v77(v75, 1, 1, v76);
  v77((char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent, 1, 1, v76);
  int v78 = (char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent;
  LOBYTE(v439) = 0;
  v79 = v382;
  sub_249AEB9A8();
  uint64_t v81 = (uint64_t)(v430 + 32);
  uint64_t v80 = (void (*)(char *, char *, uint64_t))*((void *)v430 + 4);
  uint64_t v82 = v419;
  v80(v78, v79, v419);
  v430 = (unsigned char *)v81;
  v83 = (char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions;
  uint64_t v84 = v74;
  uint64_t v439 = sub_2498ED508(v74);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC60);
  uint64_t v85 = v387;
  sub_249AEB9A8();
  (*(void (**)(char *, char *, uint64_t))(v388 + 32))(v83, v85, v391);
  v86 = (char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent;
  LOBYTE(v439) = 0;
  sub_249AEB9A8();
  v80(v86, v79, v82);
  uint64_t v87 = (char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions;
  uint64_t v439 = sub_2498ED604(v84);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC68);
  uint64_t v88 = v392;
  sub_249AEB9A8();
  (*(void (**)(char *, char *, uint64_t *))(v393 + 32))(v87, v88, v394);
  v89 = (char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout;
  uint64_t v90 = type metadata accessor for Layout();
  uint64_t v91 = v395;
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 56))(v395, 1, 1, v90);
  sub_2498D6084(v91, (uint64_t)v396, &qword_2696DFC48);
  uint64_t v92 = v401;
  sub_249AEB9A8();
  sub_2498D60E8(v91, &qword_2696DFC48);
  v402[4](v89, v92, v403);
  uint64_t v93 = (char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout;
  LOBYTE(v439) = 0;
  sub_249AEB9A8();
  v94 = v79;
  v95 = v72;
  v80(v93, v94, v419);
  uint64_t v96 = (char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition;
  uint64_t v97 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  uint64_t v98 = (uint64_t)v404;
  (*(void (**)(_OWORD *, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v404, 1, 1, v97);
  sub_2498D6084(v98, (uint64_t)v405, &qword_2696DFC40);
  uint64_t v99 = v407;
  sub_249AEB9A8();
  sub_2498D60E8(v98, &qword_2696DFC40);
  (*(void (**)(char *, char *, uint64_t))(v408 + 32))(v96, v99, v409);
  uint64_t v100 = (char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment;
  uint64_t v439 = sub_2498ED84C(MEMORY[0x263F8EE78]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC70);
  uint64_t v101 = v411;
  sub_249AEB9A8();
  (*(void (**)(char *, char *, void (**)(char *, uint64_t, uint64_t, uint64_t)))(v412 + 32))(v100, v101, v418);
  uint64_t v102 = v381;
  uint64_t v103 = v410;
  v104 = (uint64_t *)((char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
  void *v104 = 0;
  v104[1] = 0;
  v105 = (uint64_t *)((char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillDisappear);
  void *v105 = 0;
  v105[1] = 0;
  v106 = (uint64_t *)((char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
  void *v106 = 0;
  v106[1] = 0;
  *(uint64_t *)((char *)v72
             + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator____lazy_storage___mapsMediaZones) = 0;
  *(uint64_t *)((char *)v72 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zones) = v71;
  uint64_t v107 = *(void *)(v71 + 16);
  v394 = v72;
  if (v107)
  {
    uint64_t v108 = v71 + ((*(unsigned __int8 *)(v102 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80));
    uint64_t v109 = *(void *)(v102 + 72);
    v418 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v103 + 56);
    swift_bridgeObjectRetain_n();
    uint64_t v110 = MEMORY[0x263F8EE80];
    uint64_t v111 = (uint64_t)v429;
    *(void *)&long long v419 = v109;
    do
    {
      sub_24992ECE8(v108, v111, (uint64_t (*)(void))type metadata accessor for Zone);
      uint64_t v113 = v111 + *(int *)(v417 + 32);
      uint64_t v114 = *(void *)v113;
      uint64_t v115 = *(void *)(v113 + 8);
      int v116 = *(unsigned __int8 *)(v113 + 16);
      uint64_t v117 = v115 | *(void *)v113;
      if (v116 == 2 && v117 == 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v112 = v110;
      }
      else
      {
        v119 = (uint64_t (**)(void, void, void))v427;
        sub_2498D6084(v111, (uint64_t)v427, &qword_2696DDB10);
        swift_bridgeObjectRetain();
        v430 = (unsigned char *)Zone.primaryComponents.getter();
        v120 = v415;
        (*v418)(v415, 1, 1, v428);
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA88);
        swift_allocObject();
        uint64_t v121 = (uint64_t)v120;
        uint64_t v111 = (uint64_t)v429;
        v430 = (unsigned char *)sub_24991BC2C((uint64_t)v430, v121, v116 == 0, 0.8);
        sub_2498EC438(v114, v115, v116);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v439 = v110;
        sub_2498840D8((uint64_t)v430, v114, v115, v116, (uint64_t)v119, isUniquelyReferenced_nonNull_native);
        uint64_t v112 = v439;
        swift_bridgeObjectRelease();
        uint64_t v123 = (uint64_t)v119;
        uint64_t v109 = v419;
        sub_2498D60E8(v123, &qword_2696DDB10);
      }
      sub_24992EC88(v111, (uint64_t (*)(void))type metadata accessor for Zone);
      swift_bridgeObjectRelease();
      v108 += v109;
      uint64_t v110 = v112;
      --v107;
    }
    while (v107);
    uint64_t v71 = v416;
    uint64_t v124 = swift_bridgeObjectRelease();
    v95 = v394;
  }
  else
  {
    uint64_t v124 = swift_bridgeObjectRetain();
    uint64_t v112 = MEMORY[0x263F8EE80];
  }
  *(uint64_t *)((char *)v95 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels) = v112;
  MEMORY[0x270FA5388](v124);
  uint64_t v125 = swift_bridgeObjectRetain();
  uint64_t v126 = 0;
  sub_24992CA44(v125, (void (*)(char *, uint64_t, char *))sub_24992CA3C);
  swift_bridgeObjectRelease();
  uint64_t v127 = sub_24992D4E4(v71);
  swift_bridgeObjectRelease();
  uint64_t v128 = v420;
  uint64_t v129 = v421;
  v130 = v424;
  uint64_t v131 = (uint64_t)v426;
  uint64_t v376 = v127;
  if (!v383)
  {
LABEL_66:
    if (v384)
    {
      uint64_t v209 = sub_2499086E0();
      uint64_t v397 = *(void *)(v209 + 16);
      if (v397)
      {
        uint64_t v210 = 0;
        unint64_t v211 = (*(unsigned __int8 *)(v381 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v381 + 80);
        uint64_t v391 = v209;
        *(void *)&long long v395 = v209 + v211;
        v396 = (void (**)(char *, uint64_t, uint64_t))OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels;
        uint64_t v393 = *(void *)(v381 + 72);
        v404 = (_OWORD *)(v131 + 80);
        v405 = (void *)(v131 + 48);
        v430 = v441;
        v402 = (void (**)(char *, uint64_t, uint64_t))(v410 + 56);
        long long v401 = xmmword_249AF0A70;
        do
        {
          uint64_t v212 = *(uint64_t *)((char *)v396 + (void)v394);
          if (*(void *)(v212 + 16))
          {
            unint64_t v400 = v210;
            unint64_t v403 = v395 + v210 * v393;
            unint64_t v213 = sub_2498EF548(v403);
            if (v214)
            {
              uint64_t v215 = *(void *)(v212 + 56) + 32 * v213;
              uint64_t v216 = *(void *)(v215 + 8);
              uint64_t v217 = *(void *)(v215 + 16);
              int v218 = *(unsigned __int8 *)(v215 + 24);
              v422 = *(char **)v215;
              swift_retain();
              uint64_t v412 = v216;
              sub_2498EC438(v216, v217, v218);
              uint64_t v219 = sub_249903700(v384);
              v411 = *(char **)(v219 + 16);
              if (v411)
              {
                uint64_t v220 = (uint64_t)v130;
                uint64_t v221 = v129;
                LODWORD(v408) = v218;
                uint64_t v409 = v217;
                v427 = (void *)v126;
                uint64_t v406 = v403 + *(int *)(v417 + 24);
                v407 = (char *)(v219 + 32);
                v392 = (char *)v219;
                swift_bridgeObjectRetain();
                uint64_t v222 = 0;
                while (1)
                {
                  uint64_t v423 = v222;
                  sub_249882788((uint64_t)&v407[512 * v222], (uint64_t)v445, &qword_2696DE0C0);
                  uint64_t v223 = *(void *)(v406 + 16);
                  uint64_t v224 = *(void *)(v406 + 24);
                  uint64_t v225 = type metadata accessor for Instrument();
                  *(void *)&long long v419 = *(void *)(v225 - 8);
                  v226 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v419 + 56);
                  v227 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v419 + 56);
                  uint64_t v228 = v221;
                  v227(v221, 1, 1, v225);
                  uint64_t v229 = v433;
                  uint64_t v230 = v131 + *(int *)(v433 + 36);
                  v429 = (char *)v225;
                  v418 = v226;
                  *(void *)&long long v416 = v227;
                  v227(v230, 1, 1, v225);
                  v231 = (void *)(v131 + *(int *)(v229 + 40));
                  void *v231 = 0;
                  v231[1] = 0;
                  uint64_t v232 = *(int *)(v229 + 44);
                  sub_24992F4A0(v445, sub_2498FB4B4);
                  uint64_t v233 = v220;
                  sub_249AEB7F8();
                  uint64_t v234 = v220;
                  uint64_t v235 = v420;
                  sub_2498D6084(v234, v420, &qword_2696DF408);
                  if (qword_2696DD758 != -1) {
                    swift_once();
                  }
                  uint64_t v236 = v131 + v232;
                  uint64_t v237 = qword_2696E2ED8;
                  sub_2498D60E8(v233, &qword_2696DF408);
                  sub_249882788(v235, v236, &qword_2696DF408);
                  *(void *)(v236 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v237;
                  *(void *)(v131 + 120) = 12620;
                  *(void *)(v131 + 128) = 0xE200000000000000;
                  *(_OWORD *)uint64_t v131 = 0u;
                  *(_OWORD *)(v131 + 16) = 0u;
                  *(void *)(v131 + 32) = 0;
                  *(void *)(v131 + 40) = 1;
                  v238 = v405;
                  void *v405 = 0;
                  v238[1] = 0;
                  *(void *)(v131 + 64) = v223;
                  *(void *)(v131 + 72) = v224;
                  v239 = v404;
                  _OWORD *v404 = 0u;
                  v239[1] = 0u;
                  *((void *)v239 + 4) = 0;
                  sub_24992ED50(v228, v230);
                  swift_bridgeObjectRelease();
                  void *v231 = 0;
                  v231[1] = 0;
                  uint64_t v240 = sub_24992F668(v131, v425, (uint64_t (*)(void))type metadata accessor for Slot);
                  MEMORY[0x270FA5388](v240);
                  sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
                  uint64_t KeyPath = swift_getKeyPath();
                  MEMORY[0x270FA5388](KeyPath);
                  swift_getKeyPath();
                  sub_249AEB9E8();
                  swift_release();
                  swift_release();
                  uint64_t v242 = *(void *)(v439 + 16);
                  if (v242)
                  {
                    uint64_t v243 = v410;
                    unint64_t v244 = v439
                         + ((*(unsigned __int8 *)(v410 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v410 + 80));
                    uint64_t v413 = v439;
                    swift_bridgeObjectRetain();
                    uint64_t v245 = *(void *)(v243 + 72);
                    v246 = (unsigned int (**)(uint64_t, uint64_t, char *))(v419 + 48);
                    uint64_t v247 = v242 - 1;
                    uint64_t v248 = v428;
                    uint64_t v249 = (uint64_t)v431;
                    while (1)
                    {
                      uint64_t v250 = *(void *)(v244 + *(int *)(v248 + 32));
                      if (!*(void *)(v250 + 16)) {
                        goto LABEL_86;
                      }
                      sub_2498D6084(v250+ ((*(unsigned __int8 *)(v432 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v432 + 80))+ *(int *)(v433 + 36), v249, &qword_2696DE540);
                      v251 = v429;
                      if ((*v246)(v249, 1, v429) == 1) {
                        break;
                      }
                      sub_2498A4990(v249 + *((int *)v251 + 5), (uint64_t)v438);
                      sub_24992F574(v438, sub_2498FB4B4);
                      sub_24992EC88(v249, (uint64_t (*)(void))type metadata accessor for Instrument);
                      sub_2498A4990((uint64_t)v438, (uint64_t)v442);
                      nullsub_1(v442);
                      sub_249882788((uint64_t)v442, (uint64_t)v437, &qword_2696DE0C0);
                      sub_249882788((uint64_t)v445, (uint64_t)&v439, &qword_2696DE0C0);
                      if (sub_24992EE28((uint64_t)&v439) == 1)
                      {
                        sub_2498A4990((uint64_t)v437, (uint64_t)v436);
                        sub_24992F574(v438, sub_2498FB4B4);
                        sub_24992F574(v436, sub_2498FCAAC);
                        goto LABEL_81;
                      }
                      sub_249882788((uint64_t)v445, (uint64_t)v435, &qword_2696DE0C0);
                      sub_2498A4990((uint64_t)v435, (uint64_t)v434);
                      sub_24992F574(v438, sub_2498FB4B4);
                      char v252 = _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v437);
                      sub_2498A4990((uint64_t)v437, (uint64_t)v436);
                      sub_24992F574(v436, sub_2498FCAAC);
                      sub_24992F574(v438, sub_2498FCAAC);
                      if (v252)
                      {
                        swift_bridgeObjectRelease_n();
                        v130 = v424;
                        uint64_t v269 = v425;
                        uint64_t v129 = v421;
                        uint64_t v131 = (uint64_t)v426;
                        goto LABEL_116;
                      }
                      uint64_t v248 = v428;
                      uint64_t v249 = (uint64_t)v431;
                      if (!v247)
                      {
LABEL_91:
                        swift_bridgeObjectRelease_n();
                        uint64_t v129 = v421;
                        v130 = v424;
                        goto LABEL_93;
                      }
LABEL_82:
                      v244 += v245;
                      --v247;
                    }
                    sub_2498D60E8(v249, &qword_2696DE540);
LABEL_86:
                    sub_249882788((uint64_t)v445, (uint64_t)&v439, &qword_2696DE0C0);
                    if (sub_24992EE28((uint64_t)&v439) == 1)
                    {
                      swift_bridgeObjectRelease_n();
                      uint64_t v129 = v421;
                      uint64_t v269 = v425;
                      uint64_t v131 = (uint64_t)v426;
                      v130 = v424;
                      goto LABEL_116;
                    }
                    sub_2498A47C8((uint64_t)v442);
LABEL_81:
                    sub_249882788((uint64_t)v442, (uint64_t)&v443, &qword_2696DE0C0);
                    sub_249882788((uint64_t)&v443, (uint64_t)&v439, &qword_2696DE0C0);
                    sub_249882788((uint64_t)v445, (uint64_t)v430, &qword_2696DE0C0);
                    sub_24992F4A0(v445, sub_2498FB4B4);
                    sub_24992EE3C(&v439);
                    uint64_t v249 = (uint64_t)v431;
                    if (!v247) {
                      goto LABEL_91;
                    }
                    goto LABEL_82;
                  }
                  uint64_t v129 = v228;
                  swift_bridgeObjectRelease();
                  v130 = v424;
LABEL_93:
                  unint64_t v253 = v403 + *(int *)(v417 + 32);
                  unsigned int v254 = *(unsigned __int8 *)(v253 + 16);
                  uint64_t v131 = (uint64_t)v426;
                  if (v254 < 2) {
                    break;
                  }
                  sub_249882788((uint64_t)v445, (uint64_t)&v443, &qword_2696DE0C0);
                  int v266 = sub_24992EE28((uint64_t)&v443);
                  v267 = v429;
                  if (v266 == 1)
                  {
LABEL_101:
                    uint64_t v268 = v425;
                    goto LABEL_110;
                  }
                  sub_2498A4990((uint64_t)&v443, (uint64_t)&v439);
LABEL_109:
                  sub_2498A4990((uint64_t)&v439, (uint64_t)v442);
                  sub_249882788((uint64_t)v445, (uint64_t)&v443, &qword_2696DE0C0);
                  sub_24992F574(&v443, sub_2498FB4B4);
                  uint64_t v270 = (uint64_t)v398;
                  sub_249AEB7F8();
                  uint64_t v271 = sub_249AEC888();
                  Instrument.init(id:kind:backgroundColor:shadowID:)(v270, (uint64_t)v442, v271, 0, 0, v129);
                  ((void (*)(uint64_t, void, uint64_t, char *))v416)(v129, 0, 1, v267);
                  uint64_t v268 = v425;
                  sub_24992ED50(v129, v425 + *(int *)(v433 + 36));
LABEL_110:
                  sub_249AEB7F8();
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
                  unint64_t v272 = (*(unsigned __int8 *)(v432 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v432 + 80);
                  uint64_t v192 = swift_allocObject();
                  *(_OWORD *)(v192 + 16) = v401;
                  sub_24992ECE8(v268, v192 + v272, (uint64_t (*)(void))type metadata accessor for Slot);
                  v273 = v427;
                  uint64_t v274 = sub_2499035D0(v192);
                  v427 = v273;
                  uint64_t v275 = *(void *)(v274 + 16);
                  uint64_t v276 = sub_249AED5F8();
                  v442[0] = v276;
                  if (v275)
                  {
                    v277 = (uint64_t *)(v274 + 40);
                    do
                    {
                      uint64_t v278 = *(v277 - 1);
                      uint64_t v279 = *v277;
                      swift_bridgeObjectRetain();
                      sub_2499248E0(&v443, v278, v279);
                      swift_bridgeObjectRelease();
                      v277 += 2;
                      --v275;
                    }
                    while (v275);
                    uint64_t v276 = v442[0];
                    v130 = v424;
                    uint64_t v131 = (uint64_t)v426;
                  }
                  uint64_t v280 = *(void *)(v276 + 16);
                  swift_bridgeObjectRelease();
                  uint64_t v281 = *(void *)(v274 + 16);
                  swift_bridgeObjectRelease();
                  if (v280 != v281) {
                    goto LABEL_166;
                  }
                  uint64_t v282 = v399;
                  sub_249882788(v414, v399, qword_2696DF810);
                  v283 = (int *)v428;
                  *(unsigned char *)(v282 + *(int *)(v428 + 20)) = 0;
                  v284 = (void *)(v282 + v283[6]);
                  void *v284 = 0x746E65746E6F43;
                  v284[1] = 0xE700000000000000;
                  v285 = (void *)(v282 + v283[7]);
                  void *v285 = v223;
                  v285[1] = v224;
                  *(void *)(v282 + v283[8]) = v192;
                  uint64_t v286 = (uint64_t)v415;
                  (*v402)(v415, 1, 1);
                  sub_24991D394(v282, v286);
                  sub_2498D60E8(v286, &qword_2696DF7F0);
                  sub_24992EC88(v282, (uint64_t (*)(void))type metadata accessor for Component);
                  uint64_t v269 = v425;
LABEL_116:
                  uint64_t v287 = v412;
                  uint64_t v288 = v409;
                  unsigned __int8 v289 = v408;
                  uint64_t v222 = v423 + 1;
                  sub_24992EC88(v269, (uint64_t (*)(void))type metadata accessor for Slot);
                  sub_24992F4A0(v445, sub_2498FCAAC);
                  if ((char *)v222 == v411)
                  {
                    swift_bridgeObjectRelease_n();
                    swift_release();
                    sub_249884EC8(v287, v288, v289);
                    uint64_t v126 = (uint64_t)v427;
                    goto LABEL_70;
                  }
                  uint64_t v220 = (uint64_t)v130;
                  uint64_t v221 = v129;
                }
                uint64_t v255 = *(void *)v253;
                uint64_t v256 = *(void *)(v253 + 8);
                sub_249882788((uint64_t)v445, (uint64_t)&v443, &qword_2696DE0C0);
                if (sub_24992EE28((uint64_t)&v443) == 1) {
                  goto LABEL_101;
                }
                sub_2498A4990((uint64_t)&v443, (uint64_t)v442);
                if (sub_2498B8790((uint64_t)v442) != 6) {
                  goto LABEL_104;
                }
                v257 = (uint64_t *)sub_2498B87AC((uint64_t)v442);
                if (v255)
                {
                  if (*(void *)(v255 + 16))
                  {
                    uint64_t v259 = *v257;
                    uint64_t v258 = v257[1];
                    sub_2498EC438(v255, v256, v254);
                    swift_bridgeObjectRetain();
                    uint64_t v260 = sub_2498EF01C(v259, v258);
                    if (v261)
                    {
                      uint64_t v262 = *(void *)(v255 + 56) + 32 * v260;
                      long long v419 = *(_OWORD *)v262;
                      uint64_t v263 = *(void *)(v262 + 16);
                      uint64_t v264 = *(void *)(v262 + 24);
                      sub_249884EC8(v255, v256, v254);
                      swift_bridgeObjectRelease();
                      uint64_t v265 = v425;
                      *(_OWORD *)(v425 + 80) = v419;
                      *(void *)(v265 + 96) = v263;
                      *(void *)(v265 + 104) = v264;
                    }
                    else
                    {
                      sub_249884EC8(v255, v256, v254);
                      swift_bridgeObjectRelease();
                    }
                    sub_249882788((uint64_t)v445, (uint64_t)v438, &qword_2696DE0C0);
                    sub_2498A4990((uint64_t)v438, (uint64_t)&v439);
                    v130 = v424;
                    uint64_t v131 = (uint64_t)v426;
                    goto LABEL_108;
                  }
LABEL_104:
                  sub_249882788((uint64_t)v445, (uint64_t)v438, &qword_2696DE0C0);
                }
                else
                {
                  sub_249882788((uint64_t)v445, (uint64_t)v438, &qword_2696DE0C0);
                  sub_2498EC438(0, v256, v254);
                }
                sub_2498A4990((uint64_t)v438, (uint64_t)&v439);
LABEL_108:
                v267 = v429;
                goto LABEL_109;
              }
              swift_bridgeObjectRelease();
              swift_release();
              sub_249884EC8(v412, v217, v218);
            }
LABEL_70:
            uint64_t v210 = v400;
          }
          ++v210;
        }
        while (v210 != v397);
        swift_bridgeObjectRelease();
        v95 = v394;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    unint64_t v290 = (unint64_t)v377;
    if (qword_2696DD430 != -1) {
      goto LABEL_165;
    }
LABEL_125:
    v427 = (void *)v126;
    uint64_t v291 = sub_249AEB908();
    __swift_project_value_buffer(v291, (uint64_t)qword_26972C6E8);
    swift_retain_n();
    sub_249AEB8B8();
    v292 = sub_249AEB8E8();
    os_signpost_type_t v293 = sub_249AED828();
    if (sub_249AED8B8())
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v378 + 16))(v375, v290, v379);
      uint64_t v294 = swift_slowAlloc();
      uint64_t v295 = swift_slowAlloc();
      v445[0] = v295;
      *(_DWORD *)uint64_t v294 = 136315394;
      v296 = self;
      id v297 = objc_msgSend(v296, sel_standardUserDefaults);
      v298 = (void *)sub_249AED0A8();
      id v299 = objc_msgSend(v297, sel_stringForKey_, v298);

      if (v299)
      {
        unint64_t v300 = sub_249AED0D8();
        unint64_t v302 = v301;
      }
      else
      {
        uint64_t v439 = 0;
        unint64_t v440 = 0xE000000000000000;
        sub_249AEDA78();
        swift_bridgeObjectRelease();
        unint64_t v302 = 0x8000000249B15340;
        unint64_t v300 = 0xD000000000000015;
      }
      uint64_t v439 = sub_249924094(v300, v302, v445);
      sub_249AED8F8();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v294 + 12) = 2080;
      id v303 = objc_msgSend(v296, sel_standardUserDefaults);
      v304 = (void *)sub_249AED0A8();
      id v305 = objc_msgSend(v303, sel_stringForKey_, v304);

      v306 = v377;
      if (v305)
      {
        unint64_t v307 = sub_249AED0D8();
        unint64_t v309 = v308;
      }
      else
      {
        uint64_t v439 = 0;
        unint64_t v440 = 0xE000000000000000;
        sub_249AEDA78();
        swift_bridgeObjectRelease();
        unint64_t v309 = 0x8000000249B15340;
        unint64_t v307 = 0xD000000000000015;
      }
      uint64_t v439 = sub_249924094(v307, v309, v445);
      sub_249AED8F8();
      swift_bridgeObjectRelease();
      v95 = v394;
      swift_release_n();
      v310 = v375;
      os_signpost_id_t v311 = sub_249AEB8A8();
      _os_signpost_emit_with_name_impl(&dword_249878000, v292, v293, v311, "Selecting previous session active carousel items: ", "DCA: %s, MapsMedia: %s", (uint8_t *)v294, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x24C5B0110](v295, -1, -1);
      MEMORY[0x24C5B0110](v294, -1, -1);

      uint64_t v312 = v379;
      v313 = *(void (**)(char *, uint64_t))(v378 + 8);
      v313(v306, v379);
      v313(v310, v312);
    }
    else
    {

      swift_release_n();
      (*(void (**)(unint64_t, uint64_t))(v378 + 8))(v290, v379);
    }
    v314 = self;
    id v315 = objc_msgSend(v314, sel_standardUserDefaults);
    v316 = (void *)sub_249AED0A8();
    id v317 = objc_msgSend(v315, sel_stringForKey_, v316);

    if (v317)
    {
      uint64_t v318 = sub_249AED0D8();
      uint64_t v320 = v319;
    }
    else
    {
      uint64_t v318 = 0;
      uint64_t v320 = 0;
    }
    swift_retain();
    unint64_t v321 = sub_24992CCDC(v376, (uint64_t)v95);
    swift_release();
    swift_bridgeObjectRelease();
    sub_24992DEC4(v318, v320, v321, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v322 = objc_msgSend(v314, sel_standardUserDefaults);
    v323 = (void *)sub_249AED0A8();
    id v324 = objc_msgSend(v322, sel_stringForKey_, v323);

    if (v324)
    {
      uint64_t v325 = sub_249AED0D8();
      uint64_t v327 = v326;
    }
    else
    {
      uint64_t v325 = 0;
      uint64_t v327 = 0;
    }
    uint64_t v328 = sub_2499086E0();
    swift_retain();
    unint64_t v329 = sub_24992CCDC(v328, (uint64_t)v95);
    swift_release();
    swift_bridgeObjectRelease();
    sub_24992DEC4(v325, v327, v329, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v330 = sub_2499086E0();
    uint64_t v331 = *(void *)(v330 + 16);
    if (!v331)
    {
LABEL_162:
      swift_bridgeObjectRelease();
      return (uint64_t)v95;
    }
    unint64_t v332 = (*(unsigned __int8 *)(v381 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v381 + 80);
    v424 = (char *)v330;
    uint64_t v333 = v330 + v332;
    v334 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 + 56);
    uint64_t v335 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels;
    v427 = (void *)(v432 + 48);
    v336 = *(char **)(v381 + 72);
    uint64_t v337 = v390;
    v430 = (unsigned char *)OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels;
    v431 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v432 + 56);
    v429 = v336;
    while (1)
    {
      uint64_t v338 = *(uint64_t *)((char *)v95 + v335);
      if (!*(void *)(v338 + 16)) {
        break;
      }
      unint64_t v339 = sub_2498EF548(v333);
      if ((v340 & 1) == 0) {
        break;
      }
      uint64_t v341 = *(void *)(v338 + 56) + 32 * v339;
      uint64_t v342 = *(void *)(v341 + 8);
      uint64_t v343 = *(void *)(v341 + 16);
      unsigned __int8 v344 = *(unsigned char *)(v341 + 24);
      swift_retain();
      sub_2498EC438(v342, v343, v344);
      uint64_t v345 = sub_249884EC8(v342, v343, v344);
      MEMORY[0x270FA5388](v345);
      uint64_t v346 = v428;
      sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
      uint64_t v347 = swift_getKeyPath();
      MEMORY[0x270FA5388](v347);
      swift_getKeyPath();
      uint64_t v348 = (uint64_t)v386;
      sub_249AEB9E8();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v349 = *(void *)(v348 + *(int *)(v346 + 32));
      swift_bridgeObjectRetain();
      sub_24992EC88(v348, (uint64_t (*)(void))type metadata accessor for Component);
      if (*(void *)(v349 + 16))
      {
        uint64_t v337 = v390;
        sub_24992ECE8(v349 + ((*(unsigned __int8 *)(v432 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v432 + 80)), v390, (uint64_t (*)(void))type metadata accessor for Slot);
        uint64_t v350 = 0;
      }
      else
      {
        uint64_t v350 = 1;
        uint64_t v337 = v390;
      }
      v334 = v431;
      uint64_t v351 = v433;
      (*v431)(v337, v350, 1, v433);
      swift_bridgeObjectRelease();
      int v352 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))*v427)(v337, 1, v351);
      v336 = v429;
      uint64_t v335 = (uint64_t)v430;
      if (v352 == 1) {
        goto LABEL_143;
      }
      uint64_t v353 = v385;
      sub_24992F668(v337, v385, (uint64_t (*)(void))type metadata accessor for Slot);
      uint64_t v354 = v389;
      sub_2498D6084(v333, v389, &qword_2696DDB10);
      uint64_t v355 = v353 + *(int *)(v433 + 36);
      uint64_t v356 = type metadata accessor for Instrument();
      int v357 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v356 - 8) + 48))(v355, 1, v356);
      uint64_t v358 = swift_getKeyPath();
      swift_getKeyPath();
      v426 = (char *)v358;
      uint64_t v425 = sub_249AEB9D8();
      v95 = v359;
      uint64_t v126 = swift_isUniquelyReferenced_nonNull_native();
      v445[0] = *v95;
      uint64_t v360 = v445[0];
      uint64_t *v95 = 0x8000000000000000;
      unint64_t v290 = sub_2498EF548(v354);
      uint64_t v362 = *(void *)(v360 + 16);
      BOOL v363 = (v361 & 1) == 0;
      uint64_t v364 = v362 + v363;
      if (__OFADD__(v362, v363))
      {
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        swift_once();
        goto LABEL_125;
      }
      char v365 = v361;
      if (*(void *)(v360 + 24) >= v364)
      {
        if ((v126 & 1) == 0) {
          sub_2498E0C64();
        }
      }
      else
      {
        sub_2498E5780(v364, v126);
        unint64_t v366 = sub_2498EF548(v389);
        if ((v365 & 1) != (v367 & 1)) {
          goto LABEL_167;
        }
        unint64_t v290 = v366;
      }
      v368 = (void *)v445[0];
      if (v365)
      {
        *(unsigned char *)(*(void *)(v445[0] + 56) + v290) = v357 != 1;
      }
      else
      {
        uint64_t v126 = v357 != 1;
        *(void *)(v445[0] + 8 * (v290 >> 6) + 64) |= 1 << v290;
        sub_2498D6084(v389, v368[6] + *(void *)(v380 + 72) * v290, &qword_2696DDB10);
        *(unsigned char *)(v368[7] + v290) = v126;
        uint64_t v369 = v368[2];
        BOOL v370 = __OFADD__(v369, 1);
        uint64_t v371 = v369 + 1;
        if (v370) {
          goto LABEL_164;
        }
        v368[2] = v371;
      }
      uint64_t *v95 = (uint64_t)v368;
      swift_bridgeObjectRelease();
      sub_2498D60E8(v389, &qword_2696DDB10);
      ((void (*)(uint64_t *, void))v425)(&v439, 0);
      swift_release();
      swift_release();
      sub_24992EC88(v385, (uint64_t (*)(void))type metadata accessor for Slot);
      v95 = v394;
      uint64_t v337 = v390;
      uint64_t v335 = (uint64_t)v430;
      v334 = v431;
      v336 = v429;
LABEL_144:
      v333 += (uint64_t)v336;
      if (!--v331) {
        goto LABEL_162;
      }
    }
    (*v334)(v337, 1, 1, v433);
LABEL_143:
    sub_2498D60E8(v337, &qword_2696DFC38);
    goto LABEL_144;
  }
  v392 = *(char **)(v127 + 16);
  if (!v392)
  {
LABEL_65:
    swift_bridgeObjectRelease();
    goto LABEL_66;
  }
  unint64_t v388 = v127 + ((*(unsigned __int8 *)(v381 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v381 + 80));
  uint64_t v391 = OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels;
  v387 = *(char **)(v381 + 72);
  v402 = (void (**)(char *, uint64_t, uint64_t))(v426 + 48);
  *(void *)&long long v401 = v426 + 80;
  v430 = v441;
  v396 = (void (**)(char *, uint64_t, uint64_t))(v410 + 56);
  swift_bridgeObjectRetain();
  uint64_t v132 = 0;
  long long v395 = xmmword_249AF0A70;
  while (1)
  {
    uint64_t v133 = *(uint64_t *)((char *)v394 + v391);
    if (!*(void *)(v133 + 16)) {
      goto LABEL_17;
    }
    uint64_t v393 = v132;
    unint64_t v400 = v388 + v132 * (void)v387;
    unint64_t v134 = sub_2498EF548(v400);
    if (v135) {
      break;
    }
LABEL_16:
    uint64_t v132 = v393;
LABEL_17:
    if ((char *)++v132 == v392)
    {
      swift_bridgeObjectRelease();
      v95 = v394;
      goto LABEL_65;
    }
  }
  uint64_t v136 = (uint64_t)v130;
  uint64_t v137 = *(void *)(v133 + 56) + 32 * v134;
  v139 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))v137;
  uint64_t v138 = *(void *)(v137 + 8);
  uint64_t v140 = *(void *)(v137 + 16);
  int v141 = *(unsigned __int8 *)(v137 + 24);
  swift_retain();
  sub_2498EC438(v138, v140, v141);
  uint64_t v142 = sub_249903700(v383);
  uint64_t v408 = *(void *)(v142 + 16);
  if (!v408)
  {
    swift_bridgeObjectRelease();
    swift_release();
    sub_249884EC8(v138, v140, v141);
    uint64_t v132 = v393;
    v130 = (char *)v136;
    goto LABEL_17;
  }
  v143 = (char *)v138;
  uint64_t v144 = v131;
  uint64_t v145 = v129;
  v418 = v139;
  LODWORD(v405) = v141;
  uint64_t v406 = v140;
  v407 = v143;
  v427 = (void *)v126;
  unint64_t v403 = v400 + *(int *)(v417 + 24);
  v404 = (_OWORD *)(v142 + 32);
  v382 = (char *)v142;
  swift_bridgeObjectRetain();
  uint64_t v146 = 0;
  while (1)
  {
    *(void *)&long long v419 = v146;
    sub_249882788((uint64_t)&v404[32 * v146], (uint64_t)v445, &qword_2696DE0C0);
    uint64_t v147 = *(void *)(v403 + 16);
    uint64_t v148 = *(void *)(v403 + 24);
    uint64_t v149 = type metadata accessor for Instrument();
    *(void *)&long long v416 = *(void *)(v149 - 8);
    uint64_t v150 = v416 + 56;
    v151 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v416 + 56);
    v151(v145, 1, 1, v149);
    uint64_t v152 = v433;
    uint64_t v153 = v144;
    uint64_t v154 = v144 + *(int *)(v433 + 36);
    v429 = (char *)v149;
    v411 = (char *)v151;
    uint64_t v412 = v150;
    v151(v154, 1, 1, v149);
    v155 = (void *)(v153 + *(int *)(v152 + 40));
    void *v155 = 0;
    v155[1] = 0;
    uint64_t v156 = *(int *)(v152 + 44);
    sub_24992F4A0(v445, sub_2498FB4B4);
    sub_249AEB7F8();
    sub_2498D6084(v136, v128, &qword_2696DF408);
    if (qword_2696DD758 != -1) {
      swift_once();
    }
    uint64_t v157 = v153 + v156;
    uint64_t v158 = qword_2696E2ED8;
    sub_2498D60E8(v136, &qword_2696DF408);
    sub_249882788(v128, v157, &qword_2696DF408);
    *(void *)(v157 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v158;
    *(void *)(v153 + 120) = 12620;
    *(void *)(v153 + 128) = 0xE200000000000000;
    *(_OWORD *)uint64_t v153 = 0u;
    *(_OWORD *)(v153 + 16) = 0u;
    *(void *)(v153 + 32) = 0;
    *(void *)(v153 + 40) = 1;
    v159 = v402;
    *v402 = 0;
    v159[1] = 0;
    *(void *)(v153 + 64) = v147;
    *(void *)(v153 + 72) = v148;
    uint64_t v160 = v401;
    *(_OWORD *)long long v401 = 0u;
    *(_OWORD *)(v160 + 16) = 0u;
    *(void *)(v160 + 32) = 0;
    uint64_t v129 = v421;
    sub_24992ED50(v421, v154);
    swift_bridgeObjectRelease();
    void *v155 = 0;
    v155[1] = 0;
    uint64_t v161 = sub_24992F668(v153, v423, (uint64_t (*)(void))type metadata accessor for Slot);
    MEMORY[0x270FA5388](v161);
    sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
    uint64_t v162 = swift_getKeyPath();
    MEMORY[0x270FA5388](v162);
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v163 = *(void *)(v439 + 16);
    if (v163)
    {
      uint64_t v164 = v410;
      unint64_t v165 = v439 + ((*(unsigned __int8 *)(v410 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v410 + 80));
      uint64_t v409 = v439;
      swift_bridgeObjectRetain();
      uint64_t v166 = *(void *)(v164 + 72);
      v167 = (unsigned int (**)(uint64_t, uint64_t, char *))(v416 + 48);
      uint64_t v168 = v163 - 1;
      uint64_t v169 = v428;
      uint64_t v170 = (uint64_t)v422;
      while (1)
      {
        uint64_t v171 = *(void *)(v165 + *(int *)(v169 + 32));
        if (!*(void *)(v171 + 16)) {
          goto LABEL_32;
        }
        sub_2498D6084(v171+ ((*(unsigned __int8 *)(v432 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v432 + 80))+ *(int *)(v433 + 36), v170, &qword_2696DE540);
        v172 = v429;
        if ((*v167)(v170, 1, v429) == 1) {
          break;
        }
        sub_2498A4990(v170 + *((int *)v172 + 5), (uint64_t)v438);
        sub_24992F574(v438, sub_2498FB4B4);
        sub_24992EC88(v170, (uint64_t (*)(void))type metadata accessor for Instrument);
        sub_2498A4990((uint64_t)v438, (uint64_t)v442);
        nullsub_1(v442);
        sub_249882788((uint64_t)v442, (uint64_t)v437, &qword_2696DE0C0);
        sub_249882788((uint64_t)v445, (uint64_t)&v439, &qword_2696DE0C0);
        if (sub_24992EE28((uint64_t)&v439) == 1)
        {
          sub_2498A4990((uint64_t)v437, (uint64_t)v436);
          sub_24992F574(v438, sub_2498FB4B4);
          sub_24992F574(v436, sub_2498FCAAC);
          goto LABEL_27;
        }
        sub_249882788((uint64_t)v445, (uint64_t)v435, &qword_2696DE0C0);
        sub_2498A4990((uint64_t)v435, (uint64_t)v434);
        sub_24992F574(v438, sub_2498FB4B4);
        char v173 = _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v437);
        sub_2498A4990((uint64_t)v437, (uint64_t)v436);
        sub_24992F574(v436, sub_2498FCAAC);
        sub_24992F574(v438, sub_2498FCAAC);
        if (v173)
        {
LABEL_44:
          swift_bridgeObjectRelease_n();
          uint64_t v128 = v420;
          uint64_t v129 = v421;
          uint64_t v131 = (uint64_t)v426;
          uint64_t v176 = v423;
          goto LABEL_61;
        }
        uint64_t v169 = v428;
        uint64_t v170 = (uint64_t)v422;
        if (!v168)
        {
LABEL_37:
          swift_bridgeObjectRelease_n();
          uint64_t v129 = v421;
          goto LABEL_39;
        }
LABEL_28:
        v165 += v166;
        --v168;
      }
      sub_2498D60E8(v170, &qword_2696DE540);
LABEL_32:
      sub_249882788((uint64_t)v445, (uint64_t)&v439, &qword_2696DE0C0);
      if (sub_24992EE28((uint64_t)&v439) == 1) {
        goto LABEL_44;
      }
      sub_2498A47C8((uint64_t)v442);
LABEL_27:
      sub_249882788((uint64_t)v442, (uint64_t)&v443, &qword_2696DE0C0);
      sub_249882788((uint64_t)&v443, (uint64_t)&v439, &qword_2696DE0C0);
      sub_249882788((uint64_t)v445, (uint64_t)v430, &qword_2696DE0C0);
      sub_24992F4A0(v445, sub_2498FB4B4);
      sub_24992EE3C(&v439);
      if (!v168) {
        goto LABEL_37;
      }
      goto LABEL_28;
    }
    swift_bridgeObjectRelease();
LABEL_39:
    unint64_t v174 = v400 + *(int *)(v417 + 32);
    unsigned int v175 = *(unsigned __int8 *)(v174 + 16);
    uint64_t v131 = (uint64_t)v426;
    uint64_t v176 = v423;
    v177 = v429;
    if (v175 < 2)
    {
      uint64_t v178 = *(void *)v174;
      uint64_t v179 = *(void *)(v174 + 8);
      sub_249882788((uint64_t)v445, (uint64_t)&v443, &qword_2696DE0C0);
      if (sub_24992EE28((uint64_t)&v443) == 1)
      {
        v180 = v427;
        goto LABEL_55;
      }
      sub_2498A4990((uint64_t)&v443, (uint64_t)v442);
      if (sub_2498B8790((uint64_t)v442) == 6)
      {
        v182 = (void *)sub_2498B87AC((uint64_t)v442);
        if (!v178)
        {
          sub_249882788((uint64_t)v445, (uint64_t)v438, &qword_2696DE0C0);
          sub_2498EC438(0, v179, v175);
LABEL_53:
          sub_2498A4990((uint64_t)v438, (uint64_t)&v439);
          v180 = v427;
          goto LABEL_54;
        }
        if (*(void *)(v178 + 16))
        {
          uint64_t v183 = v182[1];
          *(void *)&long long v416 = *v182;
          sub_2498EC438(v178, v179, v175);
          swift_bridgeObjectRetain();
          uint64_t v184 = sub_2498EF01C(v416, v183);
          if (v185)
          {
            uint64_t v186 = *(void *)(v178 + 56) + 32 * v184;
            long long v416 = *(_OWORD *)v186;
            uint64_t v187 = *(void *)(v186 + 16);
            uint64_t v188 = *(void *)(v186 + 24);
            sub_249884EC8(v178, v179, v175);
            swift_bridgeObjectRelease();
            *(_OWORD *)(v176 + 80) = v416;
            *(void *)(v176 + 96) = v187;
            *(void *)(v176 + 104) = v188;
          }
          else
          {
            sub_249884EC8(v178, v179, v175);
            swift_bridgeObjectRelease();
          }
        }
      }
      sub_249882788((uint64_t)v445, (uint64_t)v438, &qword_2696DE0C0);
      goto LABEL_53;
    }
    sub_249882788((uint64_t)v445, (uint64_t)&v443, &qword_2696DE0C0);
    int v181 = sub_24992EE28((uint64_t)&v443);
    v180 = v427;
    if (v181 == 1) {
      goto LABEL_55;
    }
    sub_2498A4990((uint64_t)&v443, (uint64_t)&v439);
LABEL_54:
    sub_2498A4990((uint64_t)&v439, (uint64_t)v442);
    sub_249882788((uint64_t)v445, (uint64_t)&v443, &qword_2696DE0C0);
    sub_24992F574(&v443, sub_2498FB4B4);
    uint64_t v189 = (uint64_t)v398;
    sub_249AEB7F8();
    uint64_t v190 = sub_249AEC888();
    Instrument.init(id:kind:backgroundColor:shadowID:)(v189, (uint64_t)v442, v190, 0, 0, v129);
    ((void (*)(uint64_t, void, uint64_t, char *))v411)(v129, 0, 1, v177);
    sub_24992ED50(v129, v176 + *(int *)(v433 + 36));
LABEL_55:
    sub_249AEB7F8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
    unint64_t v191 = (*(unsigned __int8 *)(v432 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v432 + 80);
    uint64_t v192 = swift_allocObject();
    *(_OWORD *)(v192 + 16) = v395;
    sub_24992ECE8(v176, v192 + v191, (uint64_t (*)(void))type metadata accessor for Slot);
    uint64_t v193 = sub_2499035D0(v192);
    v427 = v180;
    uint64_t v194 = *(void *)(v193 + 16);
    uint64_t v195 = sub_249AED5F8();
    v442[0] = v195;
    if (v194)
    {
      v196 = (uint64_t *)(v193 + 40);
      do
      {
        uint64_t v198 = *(v196 - 1);
        uint64_t v197 = *v196;
        swift_bridgeObjectRetain();
        sub_2499248E0(&v443, v198, v197);
        swift_bridgeObjectRelease();
        v196 += 2;
        --v194;
      }
      while (v194);
      uint64_t v195 = v442[0];
      uint64_t v131 = (uint64_t)v426;
      uint64_t v176 = v423;
    }
    uint64_t v199 = *(void *)(v195 + 16);
    swift_bridgeObjectRelease();
    uint64_t v200 = *(void *)(v193 + 16);
    swift_bridgeObjectRelease();
    if (v199 != v200) {
      break;
    }
    uint64_t v201 = v397;
    sub_249882788(v413, v397, qword_2696DF810);
    v202 = (int *)v428;
    *(unsigned char *)(v201 + *(int *)(v428 + 20)) = 0;
    v203 = (void *)(v201 + v202[6]);
    void *v203 = 0x746E65746E6F43;
    v203[1] = 0xE700000000000000;
    v204 = (void *)(v201 + v202[7]);
    void *v204 = v147;
    v204[1] = v148;
    *(void *)(v201 + v202[8]) = v192;
    uint64_t v205 = (uint64_t)v415;
    (*v396)(v415, 1, 1);
    sub_24991D394(v201, v205);
    sub_2498D60E8(v205, &qword_2696DF7F0);
    sub_24992EC88(v201, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v128 = v420;
LABEL_61:
    uint64_t v207 = v406;
    uint64_t v206 = (uint64_t)v407;
    unsigned __int8 v208 = v405;
    uint64_t v146 = v419 + 1;
    sub_24992EC88(v176, (uint64_t (*)(void))type metadata accessor for Slot);
    sub_24992F4A0(v445, sub_2498FCAAC);
    if (v146 == v408)
    {
      swift_bridgeObjectRelease_n();
      swift_release();
      sub_249884EC8(v206, v207, v208);
      uint64_t v126 = (uint64_t)v427;
      v130 = v424;
      goto LABEL_16;
    }
    uint64_t v144 = v131;
    uint64_t v145 = v129;
    uint64_t v136 = (uint64_t)v424;
  }
LABEL_166:
  uint64_t v443 = 0;
  unint64_t v444 = 0xE000000000000000;
  sub_249AEDA78();
  swift_bridgeObjectRelease();
  uint64_t v443 = 0xD000000000000023;
  unint64_t v444 = 0x8000000249B15360;
  sub_2499035D0(v192);
  MEMORY[0x24C5AE5B0]();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249AEDC58();
  __break(1u);
LABEL_167:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

uint64_t sub_24990BE3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v25 = a4;
  uint64_t v26 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)a3;
  uint64_t v13 = *(void *)(a3 + 8);
  LOBYTE(a3) = *(unsigned char *)(a3 + 16);
  swift_retain();
  sub_2498EC438(v14, v13, a3);
  sub_249884EC8(v14, v13, a3);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  sub_2498D6084(a1, (uint64_t)v12, &qword_2696DDB10);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v15;
  sub_249882788((uint64_t)v12, v17 + v16, &qword_2696DDB10);
  *(void *)(v17 + ((v16 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a5;
  uint64_t v18 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 112));
  uint64_t v19 = *v18;
  *uint64_t v18 = (uint64_t)sub_249935284;
  v18[1] = v17;
  swift_bridgeObjectRetain();
  sub_2498B9AB8(v19);
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  sub_2498D6084(v26, (uint64_t)v12, &qword_2696DDB10);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  sub_249882788((uint64_t)v12, v21 + v16, &qword_2696DDB10);
  uint64_t v22 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 120));
  uint64_t v23 = *v22;
  *uint64_t v22 = (uint64_t)sub_24993540C;
  v22[1] = v21;
  sub_2498B9AB8(v23);
  return swift_release();
}

uint64_t sub_24990C0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = type metadata accessor for Zone();
  uint64_t v7 = *(void *)(v50 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v50);
  uint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v46 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v46 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v51 = a4;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v21 = type metadata accessor for Layout();
    int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v18, 1, v21);
    uint64_t v49 = a1;
    if (v22)
    {
      sub_2498D60E8((uint64_t)v18, &qword_2696DFC48);
    }
    else
    {
      uint64_t v48 = v20;
      uint64_t v26 = *(void *)&v18[*(int *)(v21 + 24)];
      swift_bridgeObjectRetain();
      sub_2498D60E8((uint64_t)v18, &qword_2696DFC48);
      uint64_t v27 = *(void *)(v26 + 16);
      if (v27)
      {
        uint64_t v47 = v15;
        uint64_t v28 = v26 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
        sub_249AEB808();
        uint64_t v29 = *(void *)(v7 + 72);
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        swift_bridgeObjectRetain();
        while ((sub_249AED088() & 1) == 0)
        {
          v28 += v29;
          if (!--v27)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v15 = v47;
            uint64_t v20 = v48;
            goto LABEL_4;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v20 = v48;
        sub_24990C71C(a3, v49);
        uint64_t v15 = v47;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = v48;
      }
    }
LABEL_4:
    uint64_t v23 = *(void *)(v51 + 16);
    if (!v23) {
      return swift_release();
    }
    uint64_t v24 = v51 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    sub_249AEB808();
    uint64_t v25 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24992ECE8(v24, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Zone);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      if (sub_249AED088()) {
        break;
      }
      sub_24992EC88((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Zone);
      v24 += v25;
      if (!--v23)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
    }
    swift_bridgeObjectRelease();
    sub_24992F668((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Zone);
    sub_24992F668((uint64_t)v13, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Zone);
    if (v15[*(int *)(v50 + 32) + 16])
    {
      if (v15[*(int *)(v50 + 32) + 16] == 1)
      {
        Component.stableIdentifier.getter();
        uint64_t v31 = v30;
        id v32 = objc_msgSend(self, sel_standardUserDefaults);
        if (v31)
        {
          uint64_t v33 = sub_249AED0A8();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v33 = 0;
        }
        uint64_t v38 = (void *)sub_249AED0A8();
        objc_msgSend(v32, sel_setObject_forKey_, v33, v38);

        swift_unknownObjectRelease();
        MEMORY[0x270FA5388](v39);
        *(&v46 - 2) = (uint64_t)v15;
        uint64_t v40 = v51;
        swift_bridgeObjectRetain();
        uint64_t v41 = sub_249904508((uint64_t (*)(char *))sub_2499356E8, (uint64_t)(&v46 - 4), v40);
        swift_retain();
        unint64_t v42 = sub_24992CCDC(v41, v20);
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v43 = Component.stableIdentifier.getter();
        sub_24992DEC4(v43, v44, v42, 0);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return sub_24992EC88((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Zone);
      }
    }
    else
    {
      Component.stableIdentifier.getter();
      uint64_t v35 = v34;
      id v36 = objc_msgSend(self, sel_standardUserDefaults);
      if (v35)
      {
        uint64_t v37 = sub_249AED0A8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v37 = 0;
      }
      uint64_t v45 = (void *)sub_249AED0A8();
      objc_msgSend(v36, sel_setObject_forKey_, v37, v45);

      swift_unknownObjectRelease();
    }
    swift_release();
    return sub_24992EC88((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Zone);
  }
  return result;
}

uint64_t sub_24990C71C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE18);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v69 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v59 - v9;
  uint64_t v11 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v73 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v68 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v59 - v14;
  uint64_t v16 = sub_249AEB808();
  uint64_t v66 = *(void *)(v16 - 8);
  uint64_t v67 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v74 = (uint64_t)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v65 = (uint64_t)&v59 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v59 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v27 = MEMORY[0x270FA5388](v26 - 8);
  uint64_t v29 = (char *)&v59 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v59 - v30;
  if (qword_2696DD648 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_249AEB938();
  __swift_project_value_buffer(v32, (uint64_t)qword_26972C778);
  uint64_t v70 = a2;
  sub_2498D6084(a2, (uint64_t)v31, qword_2696DF810);
  uint64_t v71 = a1;
  sub_2498D6084(a1, (uint64_t)v25, &qword_2696DDB10);
  uint64_t v33 = sub_249AEB918();
  os_log_type_t v34 = sub_249AED7D8();
  int v35 = v34;
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v63 = v15;
    uint64_t v37 = v36;
    uint64_t v61 = swift_slowAlloc();
    uint64_t v76 = v61;
    *(_DWORD *)uint64_t v37 = 136315394;
    uint64_t v62 = v10;
    uint64_t v59 = v37 + 4;
    sub_2498D6084((uint64_t)v31, (uint64_t)v29, qword_2696DF810);
    uint64_t v64 = v3;
    os_log_t v60 = v33;
    uint64_t v38 = v67;
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v66 + 16);
    v39(v18, v29, v67);
    uint64_t v40 = sub_249AED128();
    LODWORD(v66) = v35;
    uint64_t v41 = v40;
    unint64_t v43 = v42;
    sub_2498D60E8((uint64_t)v29, qword_2696DF810);
    uint64_t v75 = sub_249924094(v41, v43, &v76);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    sub_2498D60E8((uint64_t)v31, qword_2696DF810);
    *(_WORD *)(v37 + 12) = 2080;
    uint64_t v44 = v65;
    sub_2498D6084((uint64_t)v25, v65, &qword_2696DDB10);
    v39(v18, (char *)v44, v38);
    uint64_t v45 = sub_249AED128();
    unint64_t v47 = v46;
    sub_2498D60E8(v44, &qword_2696DDB10);
    uint64_t v75 = sub_249924094(v45, v47, &v76);
    sub_249AED8F8();
    uint64_t v10 = v62;
    swift_bridgeObjectRelease();
    sub_2498D60E8((uint64_t)v25, &qword_2696DDB10);
    uint64_t v33 = v60;
    _os_log_impl(&dword_249878000, v60, (os_log_type_t)v66, "Starting component %s transition on zone %s", (uint8_t *)v37, 0x16u);
    uint64_t v48 = v61;
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v48, -1, -1);
    uint64_t v49 = v37;
    uint64_t v15 = v63;
    MEMORY[0x24C5B0110](v49, -1, -1);
  }
  else
  {
    sub_2498D60E8((uint64_t)v31, qword_2696DF810);
    sub_2498D60E8((uint64_t)v25, &qword_2696DDB10);
  }

  uint64_t v50 = v73;
  sub_2498D6084(v70, (uint64_t)&v15[*(int *)(v73 + 20)], qword_2696DF810);
  sub_249AEB7F8();
  uint64_t v51 = v74;
  sub_2498D6084(v71, v74, &qword_2696DDB10);
  sub_24992ECE8((uint64_t)v15, (uint64_t)v10, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  uint64_t v52 = v72;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v10, 0, 1, v50);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v53 = v76;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v10, 1, v50) == 1)
  {
    sub_2498D60E8((uint64_t)v10, &qword_2696DFE18);
    uint64_t v54 = v69;
    sub_24992A540(v51, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, (void (*)(unint64_t, uint64_t))sub_24992B110, (void (*)(void))sub_2498E11B4, v69);
    sub_2498D60E8(v51, &qword_2696DDB10);
    sub_2498D60E8(v54, &qword_2696DFE18);
    uint64_t v55 = v76;
  }
  else
  {
    uint64_t v56 = v68;
    sub_24992F668((uint64_t)v10, v68, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v75 = v53;
    sub_24988428C(v56, v51, isUniquelyReferenced_nonNull_native);
    uint64_t v55 = v75;
    swift_bridgeObjectRelease();
    sub_2498D60E8(v51, &qword_2696DDB10);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v75 = v55;
  swift_retain();
  sub_249AEB9F8();
  sub_249905440();
  return sub_24992EC88((uint64_t)v15, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

uint64_t sub_24990CEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Zone();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)v19 - v9;
  uint64_t v11 = *(int *)(v8 + 48);
  int v12 = *(unsigned __int8 *)(a1 + v11);
  int v13 = *(unsigned __int8 *)(a2 + v11);
  if (v12 == 2)
  {
    if (v13 == 2) {
      goto LABEL_14;
    }
  }
  else if (v13 != 2)
  {
    if (v12) {
      uint64_t v15 = 0x32656E6F7ALL;
    }
    else {
      uint64_t v15 = 0x31656E6F7ALL;
    }
    if (v13) {
      uint64_t v16 = 0x32656E6F7ALL;
    }
    else {
      uint64_t v16 = 0x31656E6F7ALL;
    }
    if (v15 != v16)
    {
      char v18 = sub_249AEE0D8();
      swift_bridgeObjectRelease_n();
      sub_24992ECE8(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Zone);
      sub_24992ECE8(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
      char v14 = 0;
      if ((v18 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_15;
    }
    swift_bridgeObjectRelease_n();
LABEL_14:
    sub_24992ECE8(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Zone);
    sub_24992ECE8(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
LABEL_15:
    sub_249AEB808();
    sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
    char v14 = sub_249AED088() ^ 1;
    goto LABEL_16;
  }
  sub_24992ECE8(a1, (uint64_t)v19 - v9, (uint64_t (*)(void))type metadata accessor for Zone);
  sub_24992ECE8(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
  char v14 = 0;
LABEL_16:
  sub_24992EC88((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
  sub_24992EC88((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Zone);
  return v14 & 1;
}

uint64_t sub_24990D14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v9 = type metadata accessor for Layout();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
    {
      sub_2498D60E8((uint64_t)v7, &qword_2696DFC48);
    }
    else
    {
      uint64_t v10 = *(void *)&v7[*(int *)(v9 + 24)];
      swift_bridgeObjectRetain();
      sub_2498D60E8((uint64_t)v7, &qword_2696DFC48);
      uint64_t v11 = *(void *)(v10 + 16);
      if (v11)
      {
        uint64_t v12 = *(void *)(type metadata accessor for Zone() - 8);
        uint64_t v13 = v10 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
        sub_249AEB808();
        uint64_t v14 = *(void *)(v12 + 72);
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        swift_bridgeObjectRetain();
        while ((sub_249AED088() & 1) == 0)
        {
          v13 += v14;
          if (!--v11)
          {
            swift_bridgeObjectRelease_n();
            return swift_release();
          }
        }
        swift_bridgeObjectRelease_n();
        sub_24990D3D8(a3, a1);
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24990D3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v91 = a1;
  uint64_t v3 = sub_249AECD28();
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  MEMORY[0x270FA5388](v3);
  v83 = (char *)v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_249AECD48();
  uint64_t v82 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v81 = (char *)v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_249AECD68();
  uint64_t v80 = *(void *)(v90 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v90);
  uint64_t v76 = (char *)v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  v79 = (char *)v68 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE18);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  uint64_t v88 = *(void **)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v78 = (uint64_t)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v89 = (uint64_t)v68 - v15;
  uint64_t v16 = sub_249AEB808();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v74 = *(void *)(v20 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v87 = (uint64_t)v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)v68 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v28 = (char *)v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)v68 - v29;
  if (qword_2696DD648 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_249AEB938();
  __swift_project_value_buffer(v31, (uint64_t)qword_26972C778);
  sub_2498D6084(a2, (uint64_t)v30, qword_2696DF810);
  sub_2498D6084(v91, (uint64_t)v24, &qword_2696DDB10);
  uint64_t v32 = sub_249AEB918();
  os_log_type_t v33 = sub_249AED7D8();
  int v34 = v33;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v73 = (uint64_t)v11;
    uint64_t v36 = v35;
    uint64_t v71 = swift_slowAlloc();
    aBlock[0] = v71;
    *(_DWORD *)uint64_t v36 = 136315394;
    v68[1] = v36 + 4;
    sub_2498D6084((uint64_t)v30, (uint64_t)v28, qword_2696DF810);
    uint64_t v72 = v12;
    os_log_t v70 = v32;
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
    v37(v19, v28, v16);
    uint64_t v38 = sub_249AED128();
    int v69 = v34;
    uint64_t v39 = v38;
    unint64_t v41 = v40;
    sub_2498D60E8((uint64_t)v28, qword_2696DF810);
    uint64_t v92 = sub_249924094(v39, v41, aBlock);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    sub_2498D60E8((uint64_t)v30, qword_2696DF810);
    *(_WORD *)(v36 + 12) = 2080;
    uint64_t v42 = v87;
    sub_2498D6084((uint64_t)v24, v87, &qword_2696DDB10);
    v37(v19, (char *)v42, v16);
    uint64_t v12 = v72;
    uint64_t v43 = sub_249AED128();
    unint64_t v45 = v44;
    sub_2498D60E8(v42, &qword_2696DDB10);
    uint64_t v92 = sub_249924094(v43, v45, aBlock);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    sub_2498D60E8((uint64_t)v24, &qword_2696DDB10);
    uint64_t v32 = v70;
    _os_log_impl(&dword_249878000, v70, (os_log_type_t)v69, "Ending component %s transition on zone %s", (uint8_t *)v36, 0x16u);
    uint64_t v46 = v71;
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v46, -1, -1);
    uint64_t v47 = v36;
    uint64_t v11 = (char *)v73;
    MEMORY[0x24C5B0110](v47, -1, -1);
  }
  else
  {
    sub_2498D60E8((uint64_t)v30, qword_2696DF810);
    sub_2498D60E8((uint64_t)v24, &qword_2696DDB10);
  }

  uint64_t v48 = v88;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v49 = aBlock[0];
  if (*(void *)(aBlock[0] + 16) && (unint64_t v50 = sub_2498EF548(v91), (v51 & 1) != 0))
  {
    sub_24992ECE8(*(void *)(v49 + 56) + v48[9] * v50, (uint64_t)v11, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
    uint64_t v52 = 0;
  }
  else
  {
    uint64_t v52 = 1;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48[7])(v11, v52, 1, v12);
  swift_bridgeObjectRelease();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v48[6])(v11, 1, v12) == 1) {
    return sub_2498D60E8((uint64_t)v11, &qword_2696DFE18);
  }
  uint64_t v54 = v89;
  sub_24992F668((uint64_t)v11, v89, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  sub_2498DB20C(0, (unint64_t *)&qword_2696DFDD8);
  uint64_t v73 = sub_249AED808();
  uint64_t v55 = v76;
  sub_249AECD58();
  uint64_t v56 = v79;
  MEMORY[0x24C5ADF20](v55, 0.1);
  uint64_t v88 = *(void **)(v80 + 8);
  ((void (*)(char *, uint64_t))v88)(v55, v90);
  uint64_t v57 = swift_allocObject();
  swift_weakInit();
  uint64_t v58 = v87;
  sub_2498D6084(v91, v87, &qword_2696DDB10);
  uint64_t v59 = v78;
  sub_24992ECE8(v54, v78, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  unint64_t v60 = (*(unsigned __int8 *)(v74 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  unint64_t v61 = (v75 + *((unsigned __int8 *)v48 + 80) + v60) & ~(unint64_t)*((unsigned __int8 *)v48 + 80);
  uint64_t v62 = swift_allocObject();
  *(void *)(v62 + 16) = v57;
  sub_249882788(v58, v62 + v60, &qword_2696DDB10);
  sub_24992F668(v59, v62 + v61, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  aBlock[4] = (uint64_t)sub_249935614;
  aBlock[5] = v62;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_2499D0768;
  aBlock[3] = (uint64_t)&block_descriptor_232;
  uint64_t v63 = _Block_copy(aBlock);
  swift_release();
  uint64_t v64 = v81;
  sub_249AECD38();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_249934F8C((unint64_t *)&qword_2696E5800, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDD0);
  sub_249934FD4();
  uint64_t v65 = v83;
  uint64_t v66 = v86;
  sub_249AED998();
  uint64_t v67 = (void *)v73;
  MEMORY[0x24C5AE960](v56, v64, v65, v63);
  _Block_release(v63);

  (*(void (**)(char *, uint64_t))(v85 + 8))(v65, v66);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v64, v84);
  ((void (*)(char *, uint64_t))v88)(v56, v90);
  return sub_24992EC88(v89, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
}

uint64_t sub_24990DF14(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  uint64_t v29 = a1;
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_249924768((uint64_t)sub_24992F648, (uint64_t)v28, v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_249903C9C(v3);
  swift_release();
  uint64_t v5 = (void *)sub_2498EDA30(MEMORY[0x263F8EE78]);
  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = (uint64_t *)(v4 + 56);
  while (1)
  {
    uint64_t v10 = *(v7 - 3);
    uint64_t v9 = *(v7 - 2);
    uint64_t v11 = *(v7 - 1);
    uint64_t v12 = *v7;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = v5;
    unint64_t v15 = sub_2498EF01C(v10, v9);
    uint64_t v16 = v5[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      break;
    }
    char v19 = v14;
    if (v5[3] >= v18)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v5 = v30;
        if (v14) {
          goto LABEL_3;
        }
      }
      else
      {
        sub_2498E14F8();
        uint64_t v5 = v30;
        if (v19) {
          goto LABEL_3;
        }
      }
    }
    else
    {
      sub_2498E646C(v18, isUniquelyReferenced_nonNull_native);
      uint64_t v20 = sub_2498EF01C(v10, v9);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_20;
      }
      unint64_t v15 = v20;
      uint64_t v5 = v30;
      if (v19)
      {
LABEL_3:
        uint64_t v8 = (void *)(v5[7] + 16 * v15);
        swift_bridgeObjectRelease();
        *uint64_t v8 = v11;
        v8[1] = v12;
        goto LABEL_4;
      }
    }
    v5[(v15 >> 6) + 8] |= 1 << v15;
    uint64_t v22 = (uint64_t *)(v5[6] + 16 * v15);
    *uint64_t v22 = v10;
    v22[1] = v9;
    uint64_t v23 = (void *)(v5[7] + 16 * v15);
    *uint64_t v23 = v11;
    v23[1] = v12;
    uint64_t v24 = v5[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_19;
    }
    v5[2] = v26;
    swift_bridgeObjectRetain();
LABEL_4:
    v7 += 4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

BOOL sub_24990E160(uint64_t a1, uint64_t *a2, char *a3)
{
  uint64_t v38 = a3;
  uint64_t v37 = type metadata accessor for Zone();
  uint64_t v39 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC90);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v36 = (uint64_t)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF0);
  uint64_t v10 = v9 - 8;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)v35 - v14;
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  uint64_t v18 = a2[2];
  unsigned __int8 v19 = *((unsigned char *)a2 + 24);
  sub_2498D6084(a1, (uint64_t)v35 - v14, &qword_2696DDB10);
  uint64_t v20 = *(int *)(v10 + 56);
  char v21 = &v15[v20];
  *(void *)char v21 = v16;
  *((void *)v21 + 1) = v17;
  *((void *)v21 + 2) = v18;
  v21[24] = v19;
  uint64_t v22 = *(void *)&v38[*(int *)(type metadata accessor for Layout() + 24)];
  uint64_t v23 = &v13[v20];
  uint64_t v38 = v15;
  sub_2498D6084((uint64_t)v15, (uint64_t)v13, &qword_2696DDB10);
  *(void *)uint64_t v23 = v16;
  *((void *)v23 + 1) = v17;
  *((void *)v23 + 2) = v18;
  v23[24] = v19;
  uint64_t v24 = *(void *)(v22 + 16);
  if (v24)
  {
    unint64_t v25 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    v35[1] = v22;
    uint64_t v26 = v22 + v25;
    sub_249AEB808();
    swift_retain();
    sub_2498EC438(v17, v18, v19);
    swift_retain();
    sub_2498EC438(v17, v18, v19);
    uint64_t v27 = v39;
    uint64_t v28 = *(void *)(v39 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24992ECE8(v26, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Zone);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      if (sub_249AED088()) {
        break;
      }
      sub_24992EC88((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Zone);
      v26 += v28;
      if (!--v24)
      {
        uint64_t v29 = 1;
        uint64_t v30 = v37;
        uint64_t v31 = v36;
        goto LABEL_8;
      }
    }
    uint64_t v31 = v36;
    sub_24992F668((uint64_t)v6, v36, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v29 = 0;
    uint64_t v30 = v37;
  }
  else
  {
    swift_retain();
    sub_2498EC438(v17, v18, v19);
    swift_retain();
    sub_2498EC438(v17, v18, v19);
    swift_bridgeObjectRetain();
    uint64_t v29 = 1;
    uint64_t v30 = v37;
    uint64_t v27 = v39;
    uint64_t v31 = v36;
  }
LABEL_8:
  uint64_t v32 = (uint64_t)v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v31, v29, 1, v30);
  swift_bridgeObjectRelease();
  sub_2498D60E8(v32, &qword_2696DFDF0);
  sub_2498D60E8((uint64_t)v13, &qword_2696DFDF0);
  BOOL v33 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(v31, 1, v30) != 1;
  sub_2498D60E8(v31, &qword_2696DFC90);
  return v33;
}

uint64_t sub_24990E570(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_249AEB8C8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v46 - v9;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_24992CE6C(v11, v1, a1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (!v12[2])
  {
LABEL_9:
    return swift_bridgeObjectRelease();
  }
  uint64_t v51 = 0;
  uint64_t v52 = v8;
  uint64_t v53 = v4;
  uint64_t v13 = v12[4];
  uint64_t v14 = v12[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v15 = self;
  swift_bridgeObjectRetain();
  id v16 = objc_msgSend(v15, sel_standardUserDefaults);
  uint64_t v17 = (void *)sub_249AED0A8();
  id v18 = objc_msgSend(v16, sel_stringForKey_, v17);

  if (v18)
  {
    uint64_t v19 = sub_249AED0D8();
    uint64_t v21 = v20;

    if (v13 == v19 && v14 == v21) {
      return swift_bridgeObjectRelease_n();
    }
    char v23 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v50 = v5;
  swift_bridgeObjectRetain();
  id v24 = objc_msgSend(v15, sel_standardUserDefaults);
  uint64_t v49 = v13;
  unint64_t v25 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  uint64_t v26 = (void *)sub_249AED0A8();
  objc_msgSend(v24, sel_setObject_forKey_, v25, v26);

  if (qword_2696DD430 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_249AEB908();
  __swift_project_value_buffer(v27, (uint64_t)qword_26972C6E8);
  swift_retain_n();
  sub_249AEB8B8();
  uint64_t v28 = sub_249AEB8E8();
  int v29 = sub_249AED828();
  char v30 = sub_249AED8B8();
  uint64_t v31 = v53;
  if (v30)
  {
    int v48 = v29;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v52, v10, v53);
    uint64_t v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v56 = v47;
    *(_DWORD *)uint64_t v32 = 136315138;
    id v33 = objc_msgSend(v15, sel_standardUserDefaults);
    int v34 = (void *)sub_249AED0A8();
    id v35 = objc_msgSend(v33, sel_stringForKey_, v34);

    if (v35)
    {
      unint64_t v36 = sub_249AED0D8();
      unint64_t v38 = v37;
    }
    else
    {
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      unint64_t v36 = 0xD000000000000015;
      unint64_t v38 = 0x8000000249B15340;
    }
    uint64_t v54 = sub_249924094(v36, v38, &v56);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    swift_release_n();
    uint64_t v39 = v52;
    os_signpost_id_t v40 = sub_249AEB8A8();
    _os_signpost_emit_with_name_impl(&dword_249878000, v28, (os_signpost_type_t)v48, v40, "Setting new active DCA carousel item: ", "%s", v32, 0xCu);
    uint64_t v41 = v47;
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v41, -1, -1);
    MEMORY[0x24C5B0110](v32, -1, -1);

    uint64_t v42 = *(void (**)(char *, uint64_t))(v50 + 8);
    v42(v10, v31);
    v42(v39, v31);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v10, v31);
  }
  uint64_t v43 = swift_bridgeObjectRetain();
  uint64_t v44 = sub_24992D4E4(v43);
  swift_bridgeObjectRelease();
  swift_retain();
  unint64_t v45 = sub_24992CCDC(v44, v2);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24992DEC4(v49, v14, v45, 0);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24990EB88@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v66 = a2;
  uint64_t v6 = type metadata accessor for Component();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  uint64_t v58 = v7;
  MEMORY[0x270FA5388](v6);
  unint64_t v55 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v67 = (uint64_t)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v56 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDE8);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v59 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_249AEB808();
  uint64_t v61 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v60 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC90);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v68 = (uint64_t)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for Zone();
  uint64_t v19 = *(void *)(v69 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v69);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  id v24 = (char *)&v55 - v23;
  uint64_t v25 = *(void *)(a1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zones);
  uint64_t v26 = *(void *)(v25 + 16);
  if (v26)
  {
    uint64_t v64 = a3;
    uint64_t v65 = (char *)&v55 - v23;
    uint64_t v62 = v25;
    uint64_t v63 = v3;
    uint64_t v27 = v25 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    uint64_t v28 = *(void *)(v19 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24992ECE8(v27, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Zone);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      if (sub_249AED088()) {
        break;
      }
      sub_24992EC88((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Zone);
      v27 += v28;
      if (!--v26)
      {
        uint64_t v29 = 1;
        a3 = v64;
        id v24 = v65;
        uint64_t v30 = v69;
        uint64_t v31 = v68;
        goto LABEL_8;
      }
    }
    uint64_t v32 = (uint64_t)v22;
    uint64_t v31 = v68;
    sub_24992F668(v32, v68, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v29 = 0;
    a3 = v64;
    id v24 = v65;
    uint64_t v30 = v69;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = 1;
    uint64_t v30 = v69;
    uint64_t v31 = v68;
  }
LABEL_8:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v31, v29, 1, v30);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v31, 1, v30) == 1)
  {
    id v33 = &qword_2696DFC90;
LABEL_10:
    uint64_t result = sub_2498D60E8(v31, v33);
LABEL_16:
    *a3 = 0;
    a3[1] = 0;
    return result;
  }
  sub_24992F668(v31, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Zone);
  uint64_t v35 = sub_249AEB7D8();
  if (!*(void *)(v66 + 16) || (sub_2498EF01C(v35, v36), (v37 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_24992EC88((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Zone);
    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = (uint64_t)v59;
  sub_249AEB7C8();
  swift_bridgeObjectRelease();
  uint64_t v38 = v61;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v61 + 48))(v31, 1, v15) == 1)
  {
    sub_24992EC88((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for Zone);
    id v33 = &qword_2696DFDE8;
    goto LABEL_10;
  }
  uint64_t v39 = v31;
  os_signpost_id_t v40 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v60, v39, v15);
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v67, v40, v15);
  uint64_t v41 = *(int *)(v30 + 28);
  uint64_t v65 = v24;
  uint64_t v42 = *(void *)&v24[v41];
  uint64_t v43 = *(void *)(v42 + 16);
  if (v43)
  {
    uint64_t v64 = a3;
    uint64_t v44 = v42 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
    uint64_t v45 = *(void *)(v58 + 72);
    swift_bridgeObjectRetain();
    uint64_t v46 = (uint64_t)v55;
    while (1)
    {
      sub_24992ECE8(v44, v46, (uint64_t (*)(void))type metadata accessor for Component);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      if (sub_249AED088()) {
        break;
      }
      sub_24992EC88(v46, (uint64_t (*)(void))type metadata accessor for Component);
      v44 += v45;
      if (!--v43)
      {
        uint64_t v47 = 1;
        a3 = v64;
        uint64_t v49 = v56;
        uint64_t v48 = v57;
        goto LABEL_24;
      }
    }
    uint64_t v49 = v56;
    sub_24992F668(v46, v56, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v47 = 0;
    a3 = v64;
    uint64_t v48 = v57;
LABEL_24:
    uint64_t v38 = v61;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v47 = 1;
    uint64_t v49 = v56;
    uint64_t v48 = v57;
  }
  uint64_t v50 = (uint64_t)v65;
  uint64_t v51 = v58;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 56))(v49, v47, 1, v48);
  swift_bridgeObjectRelease();
  sub_2498D60E8(v67, qword_2696DF810);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v49, 1, v48) == 1)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v60, v15);
    sub_24992EC88(v50, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t result = sub_2498D60E8(v49, &qword_2696DF7F0);
    goto LABEL_16;
  }
  uint64_t v52 = Component.stableIdentifier.getter();
  uint64_t v54 = v53;
  (*(void (**)(char *, uint64_t))(v38 + 8))(v60, v15);
  sub_24992EC88(v50, (uint64_t (*)(void))type metadata accessor for Zone);
  uint64_t result = sub_24992EC88(v49, (uint64_t (*)(void))type metadata accessor for Component);
  if (!v54) {
    goto LABEL_16;
  }
  *a3 = v52;
  a3[1] = v54;
  return result;
}

uint64_t sub_24990F3C0(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x270FA5388](a1);
  uint64_t v4 = v3;
  uint64_t v109 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v121 = (char *)v107 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v136 = (uint64_t)v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Component();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v120 = (uint64_t)v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v115 = (char *)v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)v107 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v117 = (char *)v107 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  id v24 = (char *)v107 - v23;
  uint64_t v144 = type metadata accessor for Slot();
  uint64_t v146 = *(void *)(v144 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v144);
  uint64_t v27 = (char *)v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v25);
  uint64_t v30 = (char *)v107 - v29;
  uint64_t v111 = *(void *)(v4 + 16);
  if (v111)
  {
    char v135 = v24;
    uint64_t v126 = v19;
    uint64_t v122 = type metadata accessor for Zone();
    uint64_t v31 = *(void *)(v122 - 8);
    uint64_t v113 = v4 + ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
    uint64_t v32 = *(void *)(v1 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
    uint64_t v112 = *(void *)(v31 + 72);
    uint64_t v124 = v27 + 80;
    uint64_t v125 = v27 + 48;
    uint64_t v148 = &v156;
    uint64_t v116 = v10;
    v119 = (void (**)(char *, uint64_t, uint64_t))(v10 + 56);
    v107[1] = v4;
    swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    uint64_t v139 = 0;
    long long v118 = xmmword_249AF0A70;
    uint64_t v34 = v111;
    uint64_t v145 = (int *)v9;
    uint64_t v137 = v27;
    uint64_t v138 = v17;
    v143 = v30;
    uint64_t v108 = v32;
    do
    {
      if (*(void *)(v32 + 16))
      {
        uint64_t v114 = v33;
        uint64_t v123 = v113 + v112 * v33;
        unint64_t v35 = sub_2498EF548(v123);
        if (v36)
        {
          uint64_t v37 = *(void *)(v32 + 56) + 32 * v35;
          uint64_t v39 = *(void *)v37;
          uint64_t v38 = *(void *)(v37 + 8);
          uint64_t v40 = *(void *)(v37 + 16);
          int v41 = *(unsigned __int8 *)(v37 + 24);
          swift_retain();
          sub_2498EC438(v38, v40, v41);
          uint64_t v42 = v139;
          uint64_t v43 = sub_249903700(v109);
          uint64_t v139 = v42;
          uint64_t v131 = *(void *)(v43 + 16);
          if (v131)
          {
            uint64_t v141 = v39;
            int v128 = v41;
            uint64_t v129 = v40;
            uint64_t v130 = v38;
            uint64_t v127 = v43 + 32;
            uint64_t v44 = v123 + *(int *)(v122 + 24);
            uint64_t v45 = *(void *)(v44 + 16);
            uint64_t v46 = *(void *)(v44 + 24);
            uint64_t v110 = v43;
            swift_bridgeObjectRetain();
            uint64_t v47 = 0;
            uint64_t v48 = (int *)v144;
            while (1)
            {
              uint64_t v142 = v47;
              sub_249882788(v127 + (v47 << 9), (uint64_t)v160, &qword_2696DE0C0);
              uint64_t v50 = type metadata accessor for Instrument();
              uint64_t v140 = *(void *)(v50 - 8);
              uint64_t v51 = v140 + 56;
              uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v140 + 56);
              uint64_t v53 = (uint64_t)v135;
              v52(v135, 1, 1, v50);
              uint64_t v54 = (uint64_t)&v27[v48[9]];
              uint64_t v147 = v50;
              uint64_t v133 = v52;
              uint64_t v134 = v51;
              v52((char *)v54, 1, 1, v50);
              unint64_t v55 = &v27[v48[10]];
              *(void *)unint64_t v55 = 0;
              *((void *)v55 + 1) = 0;
              uint64_t v56 = v48[11];
              sub_24992F4A0(v160, sub_2498FB4B4);
              uint64_t v57 = (uint64_t)v126;
              sub_249AEB7F8();
              sub_2498D6084(v57, (uint64_t)v17, &qword_2696DF408);
              if (qword_2696DD758 != -1) {
                swift_once();
              }
              uint64_t v58 = (uint64_t)&v27[v56];
              uint64_t v59 = qword_2696E2ED8;
              sub_2498D60E8(v57, &qword_2696DF408);
              sub_249882788((uint64_t)v17, v58, &qword_2696DF408);
              *(void *)(v58 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v59;
              *((void *)v27 + 15) = 12620;
              *((void *)v27 + 16) = 0xE200000000000000;
              *(_OWORD *)uint64_t v27 = 0u;
              *((_OWORD *)v27 + 1) = 0u;
              *((void *)v27 + 4) = 0;
              *((void *)v27 + 5) = 1;
              unint64_t v60 = v125;
              *uint64_t v125 = 0;
              v60[1] = 0;
              *((void *)v27 + 8) = v45;
              *((void *)v27 + 9) = v46;
              uint64_t v61 = v124;
              *uint64_t v124 = 0u;
              v61[1] = 0u;
              *((void *)v61 + 4) = 0;
              sub_24992ED50(v53, v54);
              swift_bridgeObjectRelease();
              *(void *)unint64_t v55 = 0;
              *((void *)v55 + 1) = 0;
              uint64_t v62 = sub_24992F668((uint64_t)v27, (uint64_t)v143, (uint64_t (*)(void))type metadata accessor for Slot);
              MEMORY[0x270FA5388](v62);
              sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
              uint64_t KeyPath = swift_getKeyPath();
              MEMORY[0x270FA5388](KeyPath);
              swift_getKeyPath();
              sub_249AEB9E8();
              swift_release();
              swift_release();
              uint64_t v64 = *(void *)(v155[0] + 16);
              if (v64)
              {
                uint64_t v65 = v116;
                unint64_t v66 = v155[0]
                    + ((*(unsigned __int8 *)(v116 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80));
                uint64_t v132 = v155[0];
                swift_bridgeObjectRetain();
                *(void *)&long long v149 = *(void *)(v65 + 72);
                uint64_t v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
                uint64_t v68 = v64 - 1;
                uint64_t v48 = (int *)v144;
                uint64_t v69 = v145;
                uint64_t v70 = (uint64_t)v117;
                while (1)
                {
                  uint64_t v71 = *(void *)(v66 + v69[8]);
                  if (!*(void *)(v71 + 16)) {
                    goto LABEL_19;
                  }
                  sub_2498D6084(v71+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ v48[9], v70, &qword_2696DE540);
                  uint64_t v72 = v147;
                  if ((*v67)(v70, 1, v147) == 1) {
                    break;
                  }
                  sub_2498A4990(v70 + *(int *)(v72 + 20), (uint64_t)v154);
                  sub_24992F574(v154, sub_2498FB4B4);
                  sub_24992EC88(v70, (uint64_t (*)(void))type metadata accessor for Instrument);
                  sub_2498A4990((uint64_t)v154, (uint64_t)v157);
                  nullsub_1(v157);
                  sub_249882788((uint64_t)v157, (uint64_t)v153, &qword_2696DE0C0);
                  sub_249882788((uint64_t)v160, (uint64_t)v155, &qword_2696DE0C0);
                  if (sub_24992EE28((uint64_t)v155) == 1)
                  {
                    sub_2498A4990((uint64_t)v153, (uint64_t)v152);
                    sub_24992F574(v154, sub_2498FB4B4);
                    sub_24992F574(v152, sub_2498FCAAC);
                    sub_249882788((uint64_t)v157, (uint64_t)&v158, &qword_2696DE0C0);
                    goto LABEL_21;
                  }
                  sub_249882788((uint64_t)v160, (uint64_t)v151, &qword_2696DE0C0);
                  sub_2498A4990((uint64_t)v151, (uint64_t)&v150);
                  sub_24992F574(v154, sub_2498FB4B4);
                  char v73 = _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v153);
                  sub_2498A4990((uint64_t)v153, (uint64_t)v152);
                  sub_24992F574(v152, sub_2498FCAAC);
                  sub_24992F574(v154, sub_2498FCAAC);
                  if (v73)
                  {
                    swift_bridgeObjectRelease_n();
                    uint64_t v17 = v138;
                    uint64_t v48 = (int *)v144;
                    goto LABEL_10;
                  }
                  uint64_t v48 = (int *)v144;
                  uint64_t v69 = v145;
                  if (!v68)
                  {
LABEL_27:
                    swift_bridgeObjectRelease_n();
                    goto LABEL_29;
                  }
LABEL_22:
                  v66 += v149;
                  --v68;
                }
                sub_2498D60E8(v70, &qword_2696DE540);
LABEL_19:
                sub_249882788((uint64_t)v160, (uint64_t)v155, &qword_2696DE0C0);
                if (sub_24992EE28((uint64_t)v155) == 1)
                {
                  swift_bridgeObjectRelease_n();
                  uint64_t v17 = v138;
LABEL_10:
                  uint64_t v27 = v137;
                  uint64_t v49 = (uint64_t)v143;
                  goto LABEL_11;
                }
                sub_2498A47C8((uint64_t)v157);
                sub_249882788((uint64_t)v157, (uint64_t)&v158, &qword_2696DE0C0);
LABEL_21:
                sub_249882788((uint64_t)&v158, (uint64_t)v155, &qword_2696DE0C0);
                sub_249882788((uint64_t)v160, (uint64_t)v148, &qword_2696DE0C0);
                sub_24992F4A0(v160, sub_2498FB4B4);
                sub_24992EE3C(v155);
                if (!v68) {
                  goto LABEL_27;
                }
                goto LABEL_22;
              }
              swift_bridgeObjectRelease();
LABEL_29:
              uint64_t v74 = v123 + *(int *)(v122 + 32);
              unsigned int v75 = *(unsigned __int8 *)(v74 + 16);
              uint64_t v27 = v137;
              uint64_t v17 = v138;
              uint64_t v49 = (uint64_t)v143;
              uint64_t v76 = v147;
              if (v75 < 2) {
                break;
              }
              sub_249882788((uint64_t)v160, (uint64_t)&v158, &qword_2696DE0C0);
              int v80 = sub_24992EE28((uint64_t)&v158);
              uint64_t v79 = v139;
              if (v80 == 1) {
                goto LABEL_45;
              }
              sub_2498A4990((uint64_t)&v158, (uint64_t)v155);
LABEL_44:
              sub_2498A4990((uint64_t)v155, (uint64_t)v157);
              sub_249882788((uint64_t)v160, (uint64_t)&v158, &qword_2696DE0C0);
              sub_24992F574(&v158, sub_2498FB4B4);
              uint64_t v89 = (uint64_t)v115;
              sub_249AEB7F8();
              uint64_t v90 = sub_249AEC888();
              uint64_t v91 = (uint64_t)v135;
              Instrument.init(id:kind:backgroundColor:shadowID:)(v89, (uint64_t)v157, v90, 0, 0, (uint64_t)v135);
              v133((char *)v91, 0, 1, v76);
              sub_24992ED50(v91, v49 + *(int *)(v144 + 36));
LABEL_45:
              sub_249AEB7F8();
              __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
              unint64_t v92 = (*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80);
              uint64_t v93 = swift_allocObject();
              *(_OWORD *)(v93 + 16) = v118;
              sub_24992ECE8(v49, v93 + v92, (uint64_t (*)(void))type metadata accessor for Slot);
              uint64_t v94 = sub_2499035D0(v93);
              uint64_t v139 = v79;
              uint64_t v95 = *(void *)(v94 + 16);
              uint64_t v96 = sub_249AED5F8();
              v157[0] = v96;
              if (v95)
              {
                uint64_t v97 = (uint64_t *)(v94 + 40);
                do
                {
                  uint64_t v99 = *(v97 - 1);
                  uint64_t v98 = *v97;
                  swift_bridgeObjectRetain();
                  sub_2499248E0(&v158, v99, v98);
                  swift_bridgeObjectRelease();
                  v97 += 2;
                  --v95;
                }
                while (v95);
                uint64_t v96 = v157[0];
                uint64_t v27 = v137;
                uint64_t v17 = v138;
                uint64_t v49 = (uint64_t)v143;
              }
              uint64_t v100 = *(void *)(v96 + 16);
              swift_bridgeObjectRelease();
              uint64_t v101 = *(void *)(v94 + 16);
              swift_bridgeObjectRelease();
              if (v100 != v101)
              {
                uint64_t v158 = 0;
                unint64_t v159 = 0xE000000000000000;
                sub_249AEDA78();
                swift_bridgeObjectRelease();
                uint64_t v158 = 0xD000000000000023;
                unint64_t v159 = 0x8000000249B15360;
                sub_2499035D0(v93);
                MEMORY[0x24C5AE5B0]();
                sub_249AED1E8();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t result = sub_249AEDC58();
                __break(1u);
                return result;
              }
              uint64_t v102 = v120;
              sub_249882788(v136, v120, qword_2696DF810);
              uint64_t v103 = v145;
              *(unsigned char *)(v102 + v145[5]) = 0;
              v104 = (void *)(v102 + v103[6]);
              void *v104 = 0x746E65746E6F43;
              v104[1] = 0xE700000000000000;
              v105 = (void *)(v102 + v103[7]);
              void *v105 = v45;
              v105[1] = v46;
              *(void *)(v102 + v103[8]) = v93;
              uint64_t v106 = (uint64_t)v121;
              (*v119)(v121, 1, 1);
              sub_24991D394(v102, v106);
              sub_2498D60E8(v106, &qword_2696DF7F0);
              sub_24992EC88(v102, (uint64_t (*)(void))type metadata accessor for Component);
              uint64_t v48 = (int *)v144;
LABEL_11:
              uint64_t v47 = v142 + 1;
              sub_24992EC88(v49, (uint64_t (*)(void))type metadata accessor for Slot);
              sub_24992F4A0(v160, sub_2498FCAAC);
              uint64_t v38 = v130;
              uint64_t v40 = v129;
              LOBYTE(v41) = v128;
              if (v47 == v131)
              {
                swift_release();
                swift_bridgeObjectRelease_n();
                goto LABEL_53;
              }
            }
            uint64_t v77 = *(void *)v74;
            uint64_t v78 = *(void *)(v74 + 8);
            sub_249882788((uint64_t)v160, (uint64_t)&v158, &qword_2696DE0C0);
            if (sub_24992EE28((uint64_t)&v158) == 1)
            {
              uint64_t v79 = v139;
              goto LABEL_45;
            }
            sub_2498A4990((uint64_t)&v158, (uint64_t)v157);
            if (sub_2498B8790((uint64_t)v157) == 6)
            {
              uint64_t v81 = (uint64_t *)sub_2498B87AC((uint64_t)v157);
              if (v77)
              {
                if (*(void *)(v77 + 16))
                {
                  uint64_t v83 = *v81;
                  uint64_t v82 = v81[1];
                  sub_2498EC438(v77, v78, v75);
                  swift_bridgeObjectRetain();
                  uint64_t v84 = sub_2498EF01C(v83, v82);
                  if (v85)
                  {
                    uint64_t v86 = *(void *)(v77 + 56) + 32 * v84;
                    long long v149 = *(_OWORD *)v86;
                    uint64_t v87 = *(void *)(v86 + 16);
                    uint64_t v88 = *(void *)(v86 + 24);
                    sub_249884EC8(v77, v78, v75);
                    swift_bridgeObjectRelease();
                    *(_OWORD *)(v49 + 80) = v149;
                    *(void *)(v49 + 96) = v87;
                    *(void *)(v49 + 104) = v88;
                  }
                  else
                  {
                    sub_249884EC8(v77, v78, v75);
                    swift_bridgeObjectRelease();
                  }
                }
                goto LABEL_42;
              }
              sub_249882788((uint64_t)v160, (uint64_t)v154, &qword_2696DE0C0);
              sub_2498EC438(0, v78, v75);
            }
            else
            {
LABEL_42:
              sub_249882788((uint64_t)v160, (uint64_t)v154, &qword_2696DE0C0);
            }
            sub_2498A4990((uint64_t)v154, (uint64_t)v155);
            uint64_t v79 = v139;
            goto LABEL_44;
          }
          swift_release();
          swift_bridgeObjectRelease();
LABEL_53:
          sub_249884EC8(v38, v40, v41);
          uint64_t v34 = v111;
          uint64_t v32 = v108;
        }
        uint64_t v33 = v114;
      }
      ++v33;
    }
    while (v33 != v34);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249910428(uint64_t *a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  uint64_t result = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v59 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  uint64_t v9 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v11 = a1[3];
  uint64_t v13 = a1[4];
  uint64_t v14 = a1[5];
  unint64_t v16 = a1[6];
  uint64_t v15 = a1[7];
  uint64_t v17 = a1[8];
  switch(v16 >> 62)
  {
    case 1uLL:
      uint64_t v66 = v10;
      uint64_t v67 = v9;
      uint64_t v68 = v12;
      uint64_t v69 = v11;
      uint64_t v70 = v13;
      uint64_t v71 = v14;
      char v72 = v16 & 1;
      uint64_t v73 = v15;
      uint64_t v74 = v17;
      sub_2498A4A50(&v66);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 2uLL:
      uint64_t v63 = v13;
      uint64_t v64 = v15;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0C8);
      uint64_t v18 = swift_allocObject();
      unint64_t v60 = (void *)v18;
      *(_OWORD *)(v18 + 16) = xmmword_249AF0A70;
      uint64_t v58 = v18 + 32;
      swift_beginAccess();
      LOBYTE(v65[0]) = byte_2696DE830;
      HIDWORD(v65[0]) = dword_2696DE834;
      v65[1] = 1056964608;
      v65[2] = 0x3FB999999999999ALL;
      v65[3] = 0;
      v65[4] = 0;
      v65[5] = 0x3FF0000000000000;
      v65[6] = 1056964608;
      v65[7] = 0x3FB999999999999ALL;
      v65[8] = 0;
      v65[9] = 0;
      v65[10] = 0x3FF0000000000000;
      sub_2498A4888(v65);
      sub_249890C54((uint64_t)v65, v58);
      sub_2498A48A4(v10, v9, v12, v11, v63, v14, v16);
      VisibilityConfiguration.init(arrayLiteral:)(v60, v75);
      uint64_t v66 = v10;
      uint64_t v67 = v9;
      uint64_t v68 = v75[0];
      sub_2498A492C(&v66);
      goto LABEL_5;
    case 3uLL:
      return result;
    default:
      uint64_t v66 = v10;
      uint64_t v67 = v9;
      uint64_t v68 = v12;
      uint64_t v69 = v11;
      sub_2498A49EC(&v66);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_5:
      sub_2498A4990((uint64_t)&v66, (uint64_t)v75);
      uint64_t v19 = v62;
      sub_2498A4990((uint64_t)v75, (uint64_t)&v66);
      uint64_t v20 = v53;
      uint64_t v21 = *(void *)(v53 + 16);
      if (!v21) {
        return sub_24992F574(v75, sub_2498FCAAC);
      }
      uint64_t v22 = *(void *)(type metadata accessor for Zone() - 8);
      unint64_t v52 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
      uint64_t v23 = v20 + v52;
      uint64_t v24 = *(void *)(v61 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
      uint64_t v25 = *(void *)(v22 + 72);
      swift_bridgeObjectRetain();
      uint64_t v54 = v5;
      uint64_t v55 = v21;
      uint64_t v26 = v25;
      uint64_t v27 = 0;
      uint64_t v56 = v23;
      uint64_t v57 = v25;
      uint64_t v58 = v24;
      break;
  }
  do
  {
    if (*(void *)(v24 + 16))
    {
      unint64_t v28 = sub_2498EF548(v23 + v27 * v26);
      if (v29)
      {
        uint64_t v63 = v27;
        uint64_t v30 = *(void *)(v24 + 56) + 32 * v28;
        uint64_t v31 = *(void *)(v30 + 8);
        uint64_t v32 = *(void *)(v30 + 16);
        unsigned __int8 v33 = *(unsigned char *)(v30 + 24);
        swift_retain();
        sub_2498EC438(v31, v32, v33);
        sub_249884EC8(v31, v32, v33);
        swift_getKeyPath();
        swift_getKeyPath();
        uint64_t v34 = (uint64_t)v59;
        sub_249AEB9E8();
        swift_release();
        swift_release();
        uint64_t v35 = type metadata accessor for Layout();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
        {
          sub_2498D60E8(v34, &qword_2696DFC48);
          int v36 = 0;
        }
        else
        {
          uint64_t v37 = *(void *)(v34 + *(int *)(v35 + 24));
          swift_bridgeObjectRetain();
          sub_2498D60E8(v34, &qword_2696DFC48);
          uint64_t v38 = *(void *)(v37 + 16);
          if (v38)
          {
            uint64_t v39 = v37 + v52;
            sub_249AEB808();
            sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
            swift_bridgeObjectRetain();
            while ((sub_249AED088() & 1) == 0)
            {
              v39 += v26;
              if (!--v38)
              {
                swift_bridgeObjectRelease_n();
                int v36 = 0;
                goto LABEL_21;
              }
            }
            swift_bridgeObjectRelease_n();
            int v36 = 1;
LABEL_21:
            uint64_t v21 = v55;
            uint64_t v23 = v56;
          }
          else
          {
            swift_bridgeObjectRelease();
            int v36 = 0;
            uint64_t v23 = v56;
          }
        }
        uint64_t v27 = v63;
        swift_beginAccess();
        sub_24992F574(v75, sub_2498FB4B4);
        uint64_t v40 = swift_bridgeObjectRetain();
        uint64_t v41 = sub_24992D72C(v40, (uint64_t)&v66);
        sub_24992F574(v75, sub_2498FCAAC);
        uint64_t v42 = (void *)v41;
        swift_bridgeObjectRelease();
        uint64_t v43 = *(void *)(v41 + 16);
        if (v43)
        {
          uint64_t v62 = v19;
          uint64_t v64 = type metadata accessor for Component();
          uint64_t v44 = *(void *)(v64 - 8);
          uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56);
          unint64_t v46 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
          unint64_t v60 = v42;
          uint64_t v47 = (uint64_t)v42 + v46;
          uint64_t v48 = *(void *)(v44 + 72);
          int v49 = v36;
          uint64_t v50 = (uint64_t)v54;
          do
          {
            v45(v50, 1, 1, v64);
            sub_24991F668(v47, v50, v49);
            sub_2498D60E8(v50, &qword_2696DF7F0);
            v47 += v48;
            --v43;
          }
          while (v43);
          swift_bridgeObjectRelease();
          uint64_t v19 = v62;
          uint64_t v27 = v63;
          uint64_t v21 = v55;
          uint64_t v23 = v56;
          uint64_t v26 = v57;
          uint64_t v24 = v58;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v26 = v57;
          uint64_t v24 = v58;
        }
        swift_release();
      }
    }
    ++v27;
  }
  while (v27 != v21);
  swift_bridgeObjectRelease();
  return sub_24992F574(v75, sub_2498FCAAC);
}

uint64_t sub_249910AD0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC90);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v36 = (uint64_t)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Zone();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (uint64_t)&v33 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Layout();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v34 = v0;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_2498D60E8((uint64_t)v11, &qword_2696DFC48);
  }
  sub_24992F668((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Layout);
  uint64_t v17 = *(void *)&v15[*(int *)(v12 + 24)];
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = v17 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v20 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24992ECE8(v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
      uint64_t v21 = &v7[*(int *)(v3 + 32)];
      if (v21[16] != 2 || *(_OWORD *)v21 != 0) {
        break;
      }
      sub_24992EC88((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
      v19 += v20;
      if (!--v18) {
        goto LABEL_11;
      }
    }
    uint64_t v22 = v36;
    sub_24992F668((uint64_t)v7, v36, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v23 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v23 = 1;
    uint64_t v22 = v36;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v22, v23, 1, v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v22, 1, v3) == 1)
  {
    sub_24992EC88((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Layout);
    return sub_2498D60E8(v22, &qword_2696DFC90);
  }
  else
  {
    uint64_t v24 = (uint64_t)v15;
    uint64_t v25 = v35;
    sub_24992F668(v22, v35, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v26 = *(void *)(v34 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
    if (*(void *)(v26 + 16))
    {
      unint64_t v27 = sub_2498EF548(v25);
      if (v28)
      {
        uint64_t v29 = *(void *)(v26 + 56) + 32 * v27;
        uint64_t v30 = *(void *)(v29 + 8);
        uint64_t v31 = *(void *)(v29 + 16);
        unsigned __int8 v32 = *(unsigned char *)(v29 + 24);
        swift_retain();
        sub_2498EC438(v30, v31, v32);
        sub_249884EC8(v30, v31, v32);
        sub_249923104();
        swift_release();
      }
    }
    sub_24992EC88(v25, (uint64_t (*)(void))type metadata accessor for Zone);
    return sub_24992EC88(v24, (uint64_t (*)(void))type metadata accessor for Layout);
  }
}

uint64_t sub_249910F78()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC90);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v36 = (uint64_t)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Zone();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v35 = (uint64_t)&v33 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Layout();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v34 = v0;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_2498D60E8((uint64_t)v11, &qword_2696DFC48);
  }
  sub_24992F668((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Layout);
  uint64_t v17 = *(void *)&v15[*(int *)(v12 + 24)];
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v19 = v17 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v20 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_24992ECE8(v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
      uint64_t v21 = &v7[*(int *)(v3 + 32)];
      if (v21[16] != 2 || *(_OWORD *)v21 != 0) {
        break;
      }
      sub_24992EC88((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Zone);
      v19 += v20;
      if (!--v18) {
        goto LABEL_11;
      }
    }
    uint64_t v22 = v36;
    sub_24992F668((uint64_t)v7, v36, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v23 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_11:
    uint64_t v23 = 1;
    uint64_t v22 = v36;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v22, v23, 1, v3);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v22, 1, v3) == 1)
  {
    sub_24992EC88((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Layout);
    return sub_2498D60E8(v22, &qword_2696DFC90);
  }
  else
  {
    uint64_t v24 = (uint64_t)v15;
    uint64_t v25 = v35;
    sub_24992F668(v22, v35, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v26 = *(void *)(v34 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
    if (*(void *)(v26 + 16))
    {
      unint64_t v27 = sub_2498EF548(v25);
      if (v28)
      {
        uint64_t v29 = *(void *)(v26 + 56) + 32 * v27;
        uint64_t v30 = *(void *)(v29 + 8);
        uint64_t v31 = *(void *)(v29 + 16);
        unsigned __int8 v32 = *(unsigned char *)(v29 + 24);
        swift_retain();
        sub_2498EC438(v30, v31, v32);
        sub_249884EC8(v30, v31, v32);
        sub_2499237FC(0.0);
        swift_release();
      }
    }
    sub_24992EC88(v25, (uint64_t (*)(void))type metadata accessor for Zone);
    return sub_24992EC88(v24, (uint64_t (*)(void))type metadata accessor for Layout);
  }
}

uint64_t sub_249911424(uint64_t a1, unsigned char *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v61 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (char *)&v53 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v53 - v17;
  if (*a2)
  {
    sub_2498D6084(a1, (uint64_t)v13, &qword_2696DFBB8);
    uint64_t v19 = v2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent;
    swift_beginAccess();
    uint64_t v60 = v19;
    sub_24992F6D0((uint64_t)v13, v19);
    swift_endAccess();
    uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zones);
    uint64_t v21 = *(void *)(v20 + 16);
    if (!v21)
    {
      uint64_t v18 = v13;
      return sub_2498D60E8((uint64_t)v18, &qword_2696DFBB8);
    }
    unint64_t v54 = (unint64_t)v13;
    uint64_t v22 = type metadata accessor for Zone();
    uint64_t v23 = *(void *)(v22 - 8);
    unint64_t v56 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v24 = v20 + v56;
    uint64_t v25 = *(void *)(v23 + 72);
    uint64_t v55 = v20;
    swift_bridgeObjectRetain();
    uint64_t v26 = 0;
    uint64_t v57 = v16;
    uint64_t v58 = v2;
    uint64_t v59 = v24;
    while (1)
    {
      uint64_t v28 = v24 + v26 * v25;
      int v29 = *(unsigned __int8 *)(v28 + *(int *)(v22 + 40));
      if (v29 == 2) {
        goto LABEL_7;
      }
      if (v29)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        char v30 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0) {
          goto LABEL_7;
        }
      }
      uint64_t v31 = v22;
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v32 = (uint64_t)v61;
      sub_249AEB9E8();
      swift_release();
      swift_release();
      uint64_t v33 = type metadata accessor for Layout();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33))
      {
        sub_2498D60E8(v32, &qword_2696DFC48);
      }
      else
      {
        uint64_t v34 = *(void *)(v32 + *(int *)(v33 + 24));
        swift_bridgeObjectRetain();
        sub_2498D60E8(v32, &qword_2696DFC48);
        uint64_t v35 = *(void *)(v34 + 16);
        if (v35)
        {
          uint64_t v36 = v34 + v56;
          sub_249AEB808();
          sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
          swift_bridgeObjectRetain();
          while ((sub_249AED088() & 1) == 0)
          {
            v36 += v25;
            if (!--v35)
            {
              swift_bridgeObjectRelease_n();
              int v27 = 0;
              goto LABEL_21;
            }
          }
          swift_bridgeObjectRelease_n();
          int v27 = 1;
LABEL_21:
          unint64_t v16 = v57;
          goto LABEL_6;
        }
        swift_bridgeObjectRelease();
      }
      int v27 = 0;
LABEL_6:
      uint64_t v22 = v31;
      uint64_t v24 = v59;
      sub_2498D6084(v60, (uint64_t)v16, &qword_2696DFBB8);
      sub_249911BB0((uint64_t)v16, v28, v27);
      sub_2498D60E8((uint64_t)v16, &qword_2696DFBB8);
LABEL_7:
      if (++v26 == v21)
      {
        uint64_t v18 = (char *)v54;
        goto LABEL_42;
      }
    }
  }
  sub_2498D6084(a1, (uint64_t)&v53 - v17, &qword_2696DFBB8);
  uint64_t v37 = v2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent;
  swift_beginAccess();
  sub_24992F6D0((uint64_t)v18, v37);
  swift_endAccess();
  uint64_t v38 = *(void *)(v2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zones);
  uint64_t v60 = *(void *)(v38 + 16);
  if (!v60) {
    return sub_2498D60E8((uint64_t)v18, &qword_2696DFBB8);
  }
  uint64_t v53 = v18;
  uint64_t v61 = (char *)type metadata accessor for Zone();
  uint64_t v39 = *((void *)v61 - 1);
  unint64_t v54 = (*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v40 = v38 + v54;
  uint64_t v41 = *(void *)(v39 + 72);
  uint64_t v55 = v38;
  swift_bridgeObjectRetain();
  uint64_t v42 = 0;
  uint64_t v43 = v60;
  uint64_t v58 = v2;
  uint64_t v59 = v40;
  unint64_t v56 = v37;
  uint64_t v57 = v16;
  do
  {
    uint64_t v45 = v40 + v42 * v41;
    int v46 = *(unsigned __int8 *)(v45 + *((int *)v61 + 10));
    if (v46 == 2) {
      goto LABEL_26;
    }
    if (v46)
    {
      char v47 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      if ((v47 & 1) == 0) {
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v48 = type metadata accessor for Layout();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v9, 1, v48))
    {
      sub_2498D60E8((uint64_t)v9, &qword_2696DFC48);
      int v44 = 0;
    }
    else
    {
      uint64_t v49 = *(void *)&v9[*(int *)(v48 + 24)];
      swift_bridgeObjectRetain();
      sub_2498D60E8((uint64_t)v9, &qword_2696DFC48);
      uint64_t v50 = *(void *)(v49 + 16);
      if (v50)
      {
        uint64_t v51 = v49 + v54;
        sub_249AEB808();
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        swift_bridgeObjectRetain();
        while ((sub_249AED088() & 1) == 0)
        {
          v51 += v41;
          if (!--v50)
          {
            swift_bridgeObjectRelease_n();
            int v44 = 0;
            goto LABEL_39;
          }
        }
        swift_bridgeObjectRelease_n();
        int v44 = 1;
LABEL_39:
        unint64_t v16 = v57;
        uint64_t v37 = v56;
      }
      else
      {
        swift_bridgeObjectRelease();
        int v44 = 0;
        uint64_t v37 = v56;
      }
    }
    uint64_t v43 = v60;
    sub_2498D6084(v37, (uint64_t)v16, &qword_2696DFBB8);
    sub_249911BB0((uint64_t)v16, v45, v44);
    sub_2498D60E8((uint64_t)v16, &qword_2696DFBB8);
    uint64_t v40 = v59;
LABEL_26:
    ++v42;
  }
  while (v42 != v43);
  uint64_t v18 = v53;
LABEL_42:
  swift_bridgeObjectRelease();
  return sub_2498D60E8((uint64_t)v18, &qword_2696DFBB8);
}

uint64_t sub_249911BB0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v95 = a2;
  int v94 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFD48);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v92 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for PopoverModel(0);
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v81 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Zone();
  uint64_t v85 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v86 = v8;
  uint64_t v82 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v91 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for Component();
  uint64_t v90 = *(void *)(v89 - 8);
  uint64_t v11 = *(void *)(v90 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v89);
  uint64_t v84 = (uint64_t)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v61 - v13;
  uint64_t v15 = type metadata accessor for RequestContentModel();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  uint64_t v83 = *(void *)(v19 - 8);
  uint64_t v20 = *(void *)(v83 + 64);
  uint64_t v21 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v61 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v93 = (uint64_t)&v61 - v25;
  sub_2498D6084(a1, (uint64_t)&v61 - v25, &qword_2696DFBB8);
  sub_2498D6084(a1, (uint64_t)v24, &qword_2696DFBB8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v24, 1, v15) == 1)
  {
    sub_2498D60E8((uint64_t)v24, &qword_2696DFBB8);
    uint64_t v26 = 0;
    int v27 = 0;
    uint64_t v28 = v95;
    char v29 = v94;
LABEL_3:
    uint64_t v30 = v93;
    goto LABEL_9;
  }
  uint64_t v76 = v20;
  uint64_t v77 = (uint64_t)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = (uint64_t)v91;
  uint64_t v79 = v14;
  uint64_t v32 = v90;
  uint64_t v80 = v11;
  uint64_t v78 = v16;
  uint64_t v75 = a1;
  uint64_t v33 = (uint64_t)v92;
  sub_24992ECE8((uint64_t)v24, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_24992EC88((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
LABEL_8:
    char v29 = v94;
    uint64_t v30 = v93;
    sub_24992EC88((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
    uint64_t v26 = 0;
    int v27 = 0;
    uint64_t v28 = v95;
    goto LABEL_9;
  }
  uint64_t v34 = *((void *)v18 + 1);
  uint64_t v35 = *((void *)v18 + 3);
  uint64_t v66 = *((void *)v18 + 4);
  uint64_t v70 = *((void *)v18 + 5);
  uint64_t v71 = *((void *)v18 + 6);
  uint64_t v68 = *((void *)v18 + 7);
  uint64_t v72 = *((void *)v18 + 8);
  uint64_t v73 = *((void *)v18 + 9);
  unint64_t v36 = *((void *)v18 + 11);
  uint64_t v69 = *((void *)v18 + 10);
  uint64_t v74 = *((void *)v18 + 12);
  uint64_t v67 = *((void *)v18 + 13);
  if (v18[112])
  {
    swift_bridgeObjectRelease();
    sub_2498B9AB8(v35);
    sub_2498A58D4(v70, v71, v68, v72, v73, v69, v36);
    goto LABEL_8;
  }
  uint64_t v63 = v15;
  uint64_t v38 = *(void *)v18;
  char v39 = v18[17];
  char v40 = v18[16];
  uint64_t v41 = v34;
  sub_24992EC88((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
  uint64_t v62 = v38;
  *(void *)&long long v96 = v38;
  *((void *)&v96 + 1) = v41;
  uint64_t v64 = v41;
  char v97 = v40;
  char v98 = v39;
  uint64_t v99 = v35;
  uint64_t v100 = v66;
  uint64_t v101 = v70;
  uint64_t v102 = v71;
  uint64_t v103 = v68;
  uint64_t v104 = v72;
  uint64_t v105 = v73;
  uint64_t v106 = v69;
  unint64_t v65 = v36;
  unint64_t v107 = v36;
  uint64_t v108 = v74;
  uint64_t v109 = v67;
  char v110 = 0;
  uint64_t v28 = v95;
  sub_249917744(v95, (uint64_t)&v96, v31);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v31, 1, v89) != 1)
  {
    swift_bridgeObjectRelease();
    sub_2498B9AB8(v35);
    sub_2498A58D4(v70, v71, v68, v72, v73, v69, v65);
    uint64_t v47 = v31;
    uint64_t v48 = (uint64_t)v79;
    sub_24992F668(v47, (uint64_t)v79, (uint64_t (*)(void))type metadata accessor for Component);
    unint64_t v92 = (char *)swift_allocObject();
    swift_weakInit();
    uint64_t v49 = v77;
    sub_2498D6084(v75, v77, &qword_2696DFBB8);
    uint64_t v50 = v82;
    sub_24992ECE8(v28, v82, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v51 = v84;
    sub_24992F668(v48, v84, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v52 = v32;
    unint64_t v53 = (*(unsigned __int8 *)(v83 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v83 + 80);
    unint64_t v54 = (v76 + *(unsigned __int8 *)(v85 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80);
    unint64_t v55 = (v86 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v56 = (*(unsigned __int8 *)(v52 + 80) + v55 + 8) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
    uint64_t v57 = v56 + v80;
    int v27 = (void (*)(uint64_t))swift_allocObject();
    sub_249882788(v49, (uint64_t)v27 + v53, &qword_2696DFBB8);
    uint64_t v58 = (uint64_t)v27 + v54;
    uint64_t v28 = v95;
    sub_24992F668(v50, v58, (uint64_t (*)(void))type metadata accessor for Zone);
    *(void *)((char *)v27 + v55) = v92;
    sub_24992F668(v51, (uint64_t)v27 + v56, (uint64_t (*)(void))type metadata accessor for Component);
    char v29 = v94;
    *((unsigned char *)v27 + v57) = v94 & 1;
    uint64_t v26 = sub_249934E0C;
    goto LABEL_3;
  }
  sub_2498D60E8(v31, &qword_2696DF7F0);
  *(void *)&long long v96 = v62;
  *((void *)&v96 + 1) = v64;
  char v97 = v40;
  char v98 = v39;
  uint64_t v42 = v35;
  uint64_t v99 = v35;
  uint64_t v100 = v66;
  uint64_t v101 = v70;
  uint64_t v102 = v71;
  uint64_t v43 = v68;
  uint64_t v103 = v68;
  uint64_t v104 = v72;
  uint64_t v44 = v69;
  uint64_t v105 = v73;
  uint64_t v106 = v69;
  unint64_t v107 = v65;
  uint64_t v108 = v74;
  uint64_t v109 = v67;
  char v110 = 0;
  sub_249917DE4(&v96, v33);
  uint64_t v30 = v93;
  sub_2498D60E8(v93, &qword_2696DFBB8);
  swift_bridgeObjectRelease();
  sub_2498B9AB8(v42);
  sub_2498A58D4(v70, v71, v43, v72, v73, v44, v65);
  int v45 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v33, 1, v88);
  char v29 = v94;
  uint64_t v46 = v78;
  if (v45 == 1)
  {
    sub_2498D60E8(v33, &qword_2696DFD48);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v30, 1, 1, v63);
  }
  else
  {
    uint64_t v59 = v81;
    sub_24992F668(v33, v81, type metadata accessor for PopoverModel);
    sub_24992F668(v59, v30, type metadata accessor for PopoverModel);
    uint64_t v60 = v63;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v30, 0, 1, v60);
  }
  uint64_t v26 = 0;
  int v27 = 0;
LABEL_9:
  sub_249914F3C(v30, v28, (void (*)(uint64_t))v26, v27, v29 & 1);
  sub_2498B9AB8((uint64_t)v26);
  return sub_2498D60E8(v30, &qword_2696DFBB8);
}

uint64_t sub_2499126D8(uint64_t a1, NSObject *a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v5) = a5;
  uint64_t v46 = a4;
  uint64_t v9 = type metadata accessor for ClusterTransitionCoordinator.ListDirection(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v47 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_249AEB8C8();
  uint64_t v11 = *(void *)(v50 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v50);
  uint64_t v49 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = type metadata accessor for Zone();
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v42 - v23;
  uint64_t v48 = a3 + 16;
  if (qword_2696DD430 != -1) {
    swift_once();
  }
  uint64_t v25 = sub_249AEB908();
  __swift_project_value_buffer(v25, (uint64_t)qword_26972C6E8);
  sub_2498D6084(a1, (uint64_t)v24, &qword_2696DFBB8);
  sub_24992ECE8((uint64_t)a2, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Zone);
  sub_249AEB8B8();
  uint64_t v26 = sub_249AEB8E8();
  int v45 = sub_249AED828();
  if ((sub_249AED8B8() & 1) == 0)
  {

    sub_24992EC88((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Zone);
    sub_2498D60E8((uint64_t)v24, &qword_2696DFBB8);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v50);
    goto LABEL_16;
  }
  uint64_t v43 = a2;
  int v44 = v5;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v49, v15, v50);
  uint64_t v5 = swift_slowAlloc();
  uint64_t v42 = swift_slowAlloc();
  uint64_t v51 = v42;
  *(_DWORD *)uint64_t v5 = 136315394;
  sub_2498D6084((uint64_t)v24, (uint64_t)v22, &qword_2696DFBB8);
  uint64_t v27 = type metadata accessor for RequestContentModel();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v22, 1, v27) == 1)
  {
    sub_2498D60E8((uint64_t)v22, &qword_2696DFBB8);
LABEL_8:
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    unint64_t v30 = 0x8000000249B15340;
    unint64_t v28 = 0xD000000000000015;
    goto LABEL_9;
  }
  unint64_t v28 = RequestContentModel.displayName.getter();
  unint64_t v30 = v29;
  sub_24992EC88((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
  if (!v30) {
    goto LABEL_8;
  }
LABEL_9:
  uint64_t v52 = sub_249924094(v28, v30, &v51);
  sub_249AED8F8();
  swift_bridgeObjectRelease();
  sub_2498D60E8((uint64_t)v24, &qword_2696DFBB8);
  *(_WORD *)(v5 + 12) = 2080;
  int v31 = v18[*(int *)(v16 + 40)];
  if (v31 == 2)
  {
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    unint64_t v32 = 0x8000000249B15340;
    uint64_t v33 = 0xD000000000000015;
  }
  else
  {
    if (v31) {
      uint64_t v33 = 0x32656E6F7ALL;
    }
    else {
      uint64_t v33 = 0x31656E6F7ALL;
    }
    unint64_t v32 = 0xE500000000000000;
  }
  uint64_t v52 = sub_249924094(v33, v32, &v51);
  sub_249AED8F8();
  swift_bridgeObjectRelease();
  sub_24992EC88((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for Zone);
  uint64_t v34 = v49;
  os_signpost_id_t v35 = sub_249AEB8A8();
  _os_signpost_emit_with_name_impl(&dword_249878000, v26, (os_signpost_type_t)v45, v35, "RequestContent transition - rotation: ", "newContent: %s, ZoneRegion: %s", (uint8_t *)v5, 0x16u);
  uint64_t v36 = v42;
  swift_arrayDestroy();
  MEMORY[0x24C5B0110](v36, -1, -1);
  MEMORY[0x24C5B0110](v5, -1, -1);

  uint64_t v37 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v38 = v50;
  v37(v15, v50);
  v37(v34, v38);
  LOBYTE(v5) = v44;
  a2 = v43;
LABEL_16:
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v40 = v47;
    sub_2498D6084(v46, v47, qword_2696DF810);
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v40, 0, 2, v41);
    ClusterTransitionCoordinator.rotateCarousel(zone:direction:dismissRequestContent:animated:)(a2, v40, 0, v5 & 1);
    swift_release();
    return sub_24992EC88(v40, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  }
  return result;
}

uint64_t ClusterTransitionCoordinator.rotateCarousel(zone:direction:dismissRequestContent:animated:)(NSObject *a1, uint64_t a2, int a3, int a4)
{
  int v259 = a4;
  int v252 = a3;
  uint64_t v282 = a2;
  os_log_t v283 = a1;
  uint64_t v5 = sub_249AEB8C8();
  uint64_t v266 = *(void *)(v5 - 8);
  uint64_t v267 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v263 = (char *)&v242 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v265 = (char *)&v242 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v276 = (uint64_t)&v242 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = type metadata accessor for RequestContentModel();
  uint64_t v275 = *(void *)(v271 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v271);
  uint64_t v251 = (uint64_t)&v242 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v253 = (uint64_t)&v242 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v254 = (uint64_t)&v242 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v262 = (char *)&v242 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v255 = (uint64_t)&v242 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v260 = (unint64_t)&v242 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v261 = (uint64_t)&v242 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v273 = (uint64_t)&v242 - v25;
  uint64_t v281 = sub_249AEB808();
  uint64_t v277 = *(void *)(v281 - 8);
  MEMORY[0x270FA5388](v281);
  uint64_t v270 = (char *)&v242 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v269 = (uint64_t)&v242 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for ClusterTransitionCoordinator.ListDirection(0);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  uint64_t v257 = (uint64_t)&v242 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v242 - v32;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC98);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v256 = (uint64_t)&v242 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v258 = (uint64_t (*)(void))((char *)&v242 - v38);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v242 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v242 - v42;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v44 - 8);
  uint64_t v46 = (char *)&v242 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Component();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v268 = (char *)&v242 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v264 = (uint64_t)&v242 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v274 = (char *)&v242 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v272 = (uint64_t)&v242 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v278 = (uint64_t *)((char *)&v242 - v58);
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v279 = (uint64_t)&v242 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v280 = (uint64_t)&v242 - v62;
  MEMORY[0x270FA5388](v61);
  uint64_t v64 = (char *)&v242 - v63;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v65 - 8);
  uint64_t v67 = (char *)&v242 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084((uint64_t)v283, (uint64_t)v67, &qword_2696DDB10);
  os_log_t v283 = v4;
  uint64_t v68 = *(uint64_t *)((char *)&v4->isa + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  if (!*(void *)(v68 + 16) || (unint64_t v69 = sub_2498EF548((uint64_t)v67), (v70 & 1) == 0))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v48 + 56))(v46, 1, 1, v47);
LABEL_7:
    sub_2498D60E8((uint64_t)v67, &qword_2696DDB10);
    uint64_t v79 = &qword_2696DF7F0;
    uint64_t v80 = (uint64_t)v46;
    return sub_2498D60E8(v80, v79);
  }
  uint64_t v249 = v64;
  uint64_t v250 = v67;
  uint64_t v247 = v68;
  uint64_t v71 = *(void *)(v68 + 56) + 32 * v69;
  uint64_t v72 = *(void *)(v71 + 8);
  uint64_t v73 = *(void *)(v71 + 16);
  unsigned __int8 v74 = *(unsigned char *)(v71 + 24);
  swift_retain();
  sub_2498EC438(v72, v73, v74);
  sub_249884EC8(v72, v73, v74);
  sub_24992ECE8(v282, (uint64_t)v33, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v248 = *(void *)(v75 - 8);
  uint64_t v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v248 + 48);
  int v77 = v76(v33, 2, v75);
  uint64_t v246 = v75;
  if (v77)
  {
    uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v248 + 56);
    if (v77 == 1) {
      v78(v41, 1, 2, v75);
    }
    else {
      v78(v41, 2, 2, v75);
    }
  }
  else
  {
    sub_249882788((uint64_t)v33, (uint64_t)v41, qword_2696DF810);
    uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v248 + 56);
    v78(v41, 0, 2, v75);
  }
  sub_249882788((uint64_t)v41, (uint64_t)v43, &qword_2696DFC98);
  sub_24991C928((uint64_t)v43, (uint64_t)v46);
  swift_release();
  sub_2498D60E8((uint64_t)v43, &qword_2696DFC98);
  int v82 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47);
  uint64_t v67 = v250;
  if (v82 == 1) {
    goto LABEL_7;
  }
  sub_24992F668((uint64_t)v46, (uint64_t)v249, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v83 = v247;
  if (!*(void *)(v247 + 16) || (unint64_t v84 = sub_2498EF548((uint64_t)v67), (v85 & 1) == 0))
  {
    sub_24992EC88((uint64_t)v249, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v79 = &qword_2696DDB10;
    uint64_t v80 = (uint64_t)v67;
    return sub_2498D60E8(v80, v79);
  }
  uint64_t v86 = *(void *)(v83 + 56) + 32 * v84;
  uint64_t v87 = *(void *)(v86 + 8);
  uint64_t v88 = *(void *)(v86 + 16);
  unsigned __int8 v89 = *(unsigned char *)(v86 + 24);
  swift_retain();
  sub_2498EC438(v87, v88, v89);
  uint64_t v90 = sub_249884EC8(v87, v88, v89);
  MEMORY[0x270FA5388](v90);
  sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  swift_getKeyPath();
  uint64_t v92 = v279;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v93 = v280;
  sub_24992F668(v92, v280, (uint64_t (*)(void))type metadata accessor for Component);
  sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  uint64_t v94 = (uint64_t)v249;
  if (sub_249AED088())
  {
    sub_24992EC88(v93, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v95 = v94;
LABEL_63:
    sub_24992EC88(v95, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v79 = &qword_2696DDB10;
    uint64_t v80 = (uint64_t)v250;
    return sub_2498D60E8(v80, v79);
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  if (v284 == 1)
  {
    if (qword_2696DD648 != -1) {
      swift_once();
    }
    uint64_t v96 = sub_249AEB938();
    __swift_project_value_buffer(v96, (uint64_t)qword_26972C778);
    uint64_t v97 = (uint64_t)v249;
    char v98 = (void (*)(void, void, void))v278;
    sub_24992ECE8((uint64_t)v249, (uint64_t)v278, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v99 = sub_249AEB918();
    os_log_type_t v100 = sub_249AED7B8();
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = swift_slowAlloc();
      uint64_t v102 = swift_slowAlloc();
      *(_DWORD *)uint64_t v101 = 136315138;
      os_log_t v283 = (os_log_t)(v101 + 4);
      uint64_t v284 = v102;
      uint64_t v103 = v269;
      sub_2498D6084((uint64_t)v98, v269, qword_2696DF810);
      (*(void (**)(char *, uint64_t, uint64_t))(v277 + 16))(v270, v103, v281);
      uint64_t v104 = sub_249AED128();
      unint64_t v106 = v105;
      sub_2498D60E8(v103, qword_2696DF810);
      uint64_t v286 = sub_249924094(v104, v106, &v284);
      sub_249AED8F8();
      swift_bridgeObjectRelease();
      sub_24992EC88((uint64_t)v278, (uint64_t (*)(void))type metadata accessor for Component);
      _os_log_impl(&dword_249878000, v99, v100, "In an active layout transition. Preventing component transition %s", (uint8_t *)v101, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5B0110](v102, -1, -1);
      MEMORY[0x24C5B0110](v101, -1, -1);

      sub_24992EC88(v280, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v95 = (uint64_t)v249;
    }
    else
    {

      sub_24992EC88((uint64_t)v98, (uint64_t (*)(void))type metadata accessor for Component);
      sub_24992EC88(v93, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v95 = v97;
    }
    goto LABEL_63;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v107 = v284;
  if (*(void *)(v284 + 16))
  {
    unint64_t v108 = sub_2498EF548((uint64_t)v250);
    uint64_t v109 = v273;
    char v110 = v274;
    uint64_t v111 = v271;
    if (v112)
    {
      sub_24992ECE8(*(void *)(v107 + 56) + *(void *)(v275 + 72) * v108, v276, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      uint64_t v113 = 0;
    }
    else
    {
      uint64_t v113 = 1;
    }
  }
  else
  {
    uint64_t v113 = 1;
    uint64_t v109 = v273;
    char v110 = v274;
    uint64_t v111 = v271;
  }
  uint64_t v115 = v275;
  uint64_t v114 = v276;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v275 + 56))(v276, v113, 1, v111);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v114, 1, v111) == 1)
  {
    sub_2498D60E8(v114, &qword_2696DFBB8);
    goto LABEL_30;
  }
  sub_24992F668(v114, v109, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
  uint64_t v137 = v261;
  sub_24992ECE8(v109, v261, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v139 = (uint64_t (*)(void))type metadata accessor for RequestContentModel;
  uint64_t v140 = (uint64_t)v262;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v139 = type metadata accessor for PopoverModel;
      goto LABEL_53;
    case 2:
    case 3:
LABEL_53:
      sub_24992EC88(v137, v139);
      goto LABEL_54;
    case 4:
LABEL_54:
      if (qword_2696DD648 != -1) {
        swift_once();
      }
      uint64_t v173 = sub_249AEB938();
      __swift_project_value_buffer(v173, (uint64_t)qword_26972C778);
      uint64_t v174 = v260;
      sub_24992ECE8(v109, v260, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      unsigned int v175 = sub_249AEB918();
      os_log_type_t v176 = sub_249AED7B8();
      BOOL v177 = os_log_type_enabled(v175, v176);
      uint64_t v178 = (uint64_t)v249;
      if (v177)
      {
        uint64_t v179 = v93;
        v180 = (uint8_t *)swift_slowAlloc();
        uint64_t v181 = swift_slowAlloc();
        uint64_t v286 = v181;
        *(_DWORD *)v180 = 136315138;
        uint64_t v182 = RequestContentModel.displayName.getter();
        if (v183)
        {
          uint64_t v184 = v182;
          unint64_t v185 = v183;
        }
        else
        {
          uint64_t v184 = 0xD000000000000015;
          uint64_t v284 = 0;
          unint64_t v285 = 0xE000000000000000;
          sub_249AEDA78();
          swift_bridgeObjectRelease();
          unint64_t v185 = 0x8000000249B15340;
        }
        uint64_t v284 = sub_249924094(v184, v185, &v286);
        sub_249AED8F8();
        swift_bridgeObjectRelease();
        sub_24992EC88(v174, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        _os_log_impl(&dword_249878000, v175, v176, "Preventing carousel rotation. Showing floating content. %s", v180, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5B0110](v181, -1, -1);
        MEMORY[0x24C5B0110](v180, -1, -1);

        sub_24992EC88(v273, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        uint64_t v186 = v179;
      }
      else
      {

        sub_24992EC88(v174, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        sub_24992EC88(v109, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        uint64_t v186 = v93;
      }
      sub_24992EC88(v186, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v95 = v178;
      goto LABEL_63;
    default:
      sub_24992EC88(v137, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      uint64_t v141 = v255;
      sub_24992ECE8(v109, v255, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_24992EC88(v141, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
LABEL_66:
        sub_24992ECE8(v109, v140, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        uint64_t v118 = (uint64_t)v268;
        goto LABEL_67;
      }
      uint64_t v187 = *(void *)(v141 + 8);
      uint64_t v188 = *(void (**)(void))(v141 + 24);
      uint64_t v189 = *(void *)(v141 + 32);
      uint64_t v190 = *(void *)(v141 + 40);
      uint64_t v191 = *(void *)(v141 + 48);
      uint64_t v193 = *(void **)(v141 + 56);
      uint64_t v192 = *(void *)(v141 + 64);
      uint64_t v194 = *(NSObject **)(v141 + 72);
      unint64_t v195 = *(void *)(v141 + 88);
      uint64_t v196 = *(void *)(v141 + 96);
      uint64_t v197 = *(void *)(v141 + 104);
      char v198 = *(unsigned char *)(v141 + 112);
      uint64_t v245 = *(void *)(v141 + 80);
      os_log_t v283 = v194;
      uint64_t v278 = v193;
      uint64_t v279 = v192;
      uint64_t v275 = v190;
      uint64_t v276 = v191;
      uint64_t v261 = v189;
      if (v198)
      {
        uint64_t v199 = (uint64_t)v188;
        swift_bridgeObjectRelease();
        sub_2498B9AB8(v199);
        sub_2498A58D4(v275, v276, (uint64_t)v278, v279, (uint64_t)v283, v245, v195);
        goto LABEL_66;
      }
      unint64_t v260 = v195;
      uint64_t v242 = v196;
      uint64_t v243 = v188;
      uint64_t v244 = v197;
      char v226 = *(unsigned char *)(v141 + 16);
      uint64_t v227 = v187;
      sub_24992ECE8(v109, v140, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      uint64_t v255 = v227;
      uint64_t v118 = (uint64_t)v268;
      if (v227)
      {
        sub_24992EC88(v140, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        unint64_t v215 = v260;
        if (v226) {
          goto LABEL_71;
        }
LABEL_79:
        if (qword_2696DD648 != -1) {
          swift_once();
        }
        uint64_t v228 = sub_249AEB938();
        __swift_project_value_buffer(v228, (uint64_t)qword_26972C778);
        uint64_t v229 = v253;
        sub_24992ECE8(v109, v253, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        uint64_t v230 = sub_249AEB918();
        os_log_type_t v231 = sub_249AED7B8();
        if (os_log_type_enabled(v230, v231))
        {
          uint64_t v232 = (uint8_t *)swift_slowAlloc();
          uint64_t v233 = swift_slowAlloc();
          uint64_t v286 = v233;
          *(_DWORD *)uint64_t v232 = 136315138;
          uint64_t v234 = RequestContentModel.displayName.getter();
          if (v235)
          {
            uint64_t v236 = v234;
            unint64_t v237 = v235;
          }
          else
          {
            uint64_t v236 = 0xD000000000000015;
            uint64_t v284 = 0;
            unint64_t v285 = 0xE000000000000000;
            sub_249AEDA78();
            swift_bridgeObjectRelease();
            unint64_t v237 = 0x8000000249B15340;
          }
          uint64_t v284 = sub_249924094(v236, v237, &v286);
          sub_249AED8F8();
          swift_bridgeObjectRelease();
          sub_24992EC88(v253, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
          _os_log_impl(&dword_249878000, v230, v231, "Preventing carousel rotation. non-dismissible content is active.  %s", v232, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5B0110](v233, -1, -1);
          MEMORY[0x24C5B0110](v232, -1, -1);

          swift_bridgeObjectRelease();
          sub_2498B9AB8((uint64_t)v243);
          sub_2498A58D4(v275, v276, (uint64_t)v278, v279, (uint64_t)v283, v245, v215);
          uint64_t v239 = v273;
        }
        else
        {

          swift_bridgeObjectRelease();
          sub_2498B9AB8((uint64_t)v243);
          sub_2498A58D4(v275, v276, (uint64_t)v278, v279, (uint64_t)v283, v245, v215);
          sub_24992EC88(v229, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
          uint64_t v239 = v273;
        }
        sub_24992EC88(v239, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        uint64_t v172 = v280;
        goto LABEL_50;
      }
LABEL_67:
      uint64_t v200 = v254;
      sub_24992ECE8(v140, v254, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_24992EC88(v200, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
LABEL_85:
        sub_24992EC88(v140, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        sub_24992EC88(v109, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        uint64_t v93 = v280;
        uint64_t v116 = (uint64_t)v110;
        uint64_t v117 = v264;
        goto LABEL_31;
      }
      uint64_t v201 = *(void *)(v200 + 8);
      v203 = *(void (**)(void))(v200 + 24);
      uint64_t v202 = *(void *)(v200 + 32);
      uint64_t v204 = *(void *)(v200 + 40);
      uint64_t v205 = *(void *)(v200 + 48);
      uint64_t v207 = *(void **)(v200 + 56);
      uint64_t v206 = *(void *)(v200 + 64);
      unsigned __int8 v208 = *(NSObject **)(v200 + 72);
      uint64_t v209 = *(void *)(v200 + 80);
      uint64_t v210 = *(void *)(v200 + 96);
      unint64_t v260 = *(void *)(v200 + 88);
      uint64_t v211 = *(void *)(v200 + 104);
      char v212 = *(unsigned char *)(v200 + 112);
      os_log_t v283 = v208;
      uint64_t v278 = v207;
      uint64_t v279 = v206;
      uint64_t v275 = v204;
      uint64_t v276 = v205;
      uint64_t v261 = v202;
      if ((v212 & 1) == 0)
      {
        uint64_t v238 = (uint64_t)v203;
        swift_bridgeObjectRelease();
        sub_2498B9AB8(v238);
        sub_2498A58D4(v275, v276, (uint64_t)v278, v279, (uint64_t)v283, v209, v260);
        uint64_t v118 = (uint64_t)v268;
        goto LABEL_85;
      }
      uint64_t v242 = v210;
      uint64_t v255 = v201;
      uint64_t v243 = v203;
      uint64_t v244 = v211;
      uint64_t v245 = v209;
      uint64_t v213 = v140;
      char v214 = *(unsigned char *)(v200 + 16);
      sub_24992EC88(v213, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      unint64_t v215 = v260;
      if ((v214 & 1) == 0) {
        goto LABEL_79;
      }
LABEL_71:
      if (v252)
      {
        unint64_t v260 = v215;
        if (qword_2696DD648 != -1) {
          swift_once();
        }
        uint64_t v216 = sub_249AEB938();
        __swift_project_value_buffer(v216, (uint64_t)qword_26972C778);
        uint64_t v217 = v251;
        sub_24992ECE8(v109, v251, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        int v218 = sub_249AEB918();
        os_log_type_t v219 = sub_249AED7B8();
        if (os_log_type_enabled(v218, v219))
        {
          uint64_t v220 = (uint8_t *)swift_slowAlloc();
          uint64_t v221 = swift_slowAlloc();
          uint64_t v286 = v221;
          *(_DWORD *)uint64_t v220 = 136315138;
          uint64_t v222 = RequestContentModel.displayName.getter();
          if (v223)
          {
            uint64_t v224 = v222;
            unint64_t v225 = v223;
          }
          else
          {
            uint64_t v224 = 0xD000000000000015;
            uint64_t v284 = 0;
            unint64_t v285 = 0xE000000000000000;
            sub_249AEDA78();
            swift_bridgeObjectRelease();
            unint64_t v225 = 0x8000000249B15340;
          }
          uint64_t v284 = sub_249924094(v224, v225, &v286);
          sub_249AED8F8();
          swift_bridgeObjectRelease();
          sub_24992EC88(v251, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
          _os_log_impl(&dword_249878000, v218, v219, "Rotation requested while widget content is active. Turning off Request Content. %s", v220, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x24C5B0110](v221, -1, -1);
          MEMORY[0x24C5B0110](v220, -1, -1);
        }
        else
        {
          sub_24992EC88(v217, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        }

        uint64_t v240 = v243;
        if (v243)
        {
          v243();
          swift_bridgeObjectRelease();
          uint64_t v241 = (uint64_t)v240;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v241 = 0;
        }
        sub_2498B9AB8(v241);
        sub_2498A58D4(v275, v276, (uint64_t)v278, v279, (uint64_t)v283, v245, v260);
        sub_24992EC88(v273, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        uint64_t v93 = v280;
        uint64_t v118 = (uint64_t)v268;
        uint64_t v117 = v264;
        uint64_t v116 = (uint64_t)v274;
        goto LABEL_31;
      }
      sub_24992EC88(v109, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      swift_bridgeObjectRelease();
      sub_2498B9AB8((uint64_t)v243);
      sub_2498A58D4(v275, v276, (uint64_t)v278, v279, (uint64_t)v283, v245, v215);
      uint64_t v93 = v280;
LABEL_30:
      uint64_t v116 = (uint64_t)v110;
      uint64_t v117 = v264;
      uint64_t v118 = (uint64_t)v268;
LABEL_31:
      uint64_t v119 = v272;
      if (qword_2696DD430 != -1) {
        swift_once();
      }
      uint64_t v120 = sub_249AEB908();
      __swift_project_value_buffer(v120, (uint64_t)qword_26972C6E8);
      sub_24992ECE8(v93, v119, (uint64_t (*)(void))type metadata accessor for Component);
      sub_24992ECE8(v93, v116, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v121 = (uint64_t)v249;
      sub_24992ECE8((uint64_t)v249, v117, (uint64_t (*)(void))type metadata accessor for Component);
      sub_24992ECE8(v121, v118, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v122 = v265;
      sub_249AEB8B8();
      uint64_t v123 = sub_249AEB8E8();
      int v124 = sub_249AED828();
      if (sub_249AED8B8())
      {
        LODWORD(v279) = v124;
        os_log_t v283 = v123;
        (*(void (**)(char *, char *, uint64_t))(v266 + 16))(v263, v122, v267);
        uint64_t v125 = swift_slowAlloc();
        uint64_t v275 = swift_slowAlloc();
        uint64_t v286 = v275;
        *(_DWORD *)uint64_t v125 = 136315906;
        uint64_t v276 = v125 + 4;
        uint64_t v126 = v272;
        uint64_t v127 = v269;
        sub_2498D6084(v272, v269, qword_2696DF810);
        int v128 = *(void **)(v277 + 16);
        v277 += 16;
        uint64_t v278 = v128;
        ((void (*)(char *, uint64_t, uint64_t))v128)(v270, v127, v281);
        uint64_t v129 = sub_249AED128();
        unint64_t v131 = v130;
        uint64_t v132 = (uint64_t)v274;
        sub_2498D60E8(v127, qword_2696DF810);
        uint64_t v284 = sub_249924094(v129, v131, &v286);
        sub_249AED8F8();
        swift_bridgeObjectRelease();
        sub_24992EC88(v126, (uint64_t (*)(void))type metadata accessor for Component);
        *(_WORD *)(v125 + 12) = 2080;
        uint64_t v133 = Component.stableIdentifier.getter();
        if (v134)
        {
          uint64_t v135 = v133;
          unint64_t v136 = v134;
        }
        else
        {
          uint64_t v135 = 0xD000000000000015;
          uint64_t v284 = 0;
          unint64_t v285 = 0xE000000000000000;
          sub_249AEDA78();
          swift_bridgeObjectRelease();
          unint64_t v136 = 0x8000000249B15340;
        }
        uint64_t v284 = sub_249924094(v135, v136, &v286);
        sub_249AED8F8();
        swift_bridgeObjectRelease();
        sub_24992EC88(v132, (uint64_t (*)(void))type metadata accessor for Component);
        *(_WORD *)(v125 + 22) = 2080;
        uint64_t v276 = v125 + 24;
        uint64_t v142 = v264;
        uint64_t v143 = v269;
        sub_2498D6084(v264, v269, qword_2696DF810);
        ((void (*)(char *, uint64_t, uint64_t))v278)(v270, v143, v281);
        uint64_t v144 = sub_249AED128();
        unint64_t v146 = v145;
        sub_2498D60E8(v143, qword_2696DF810);
        uint64_t v284 = sub_249924094(v144, v146, &v286);
        sub_249AED8F8();
        swift_bridgeObjectRelease();
        sub_24992EC88(v142, (uint64_t (*)(void))type metadata accessor for Component);
        *(_WORD *)(v125 + 32) = 2080;
        uint64_t v147 = (uint64_t)v268;
        uint64_t v148 = Component.stableIdentifier.getter();
        if (v149)
        {
          uint64_t v150 = v148;
          unint64_t v151 = v149;
        }
        else
        {
          uint64_t v150 = 0xD000000000000015;
          uint64_t v284 = 0;
          unint64_t v285 = 0xE000000000000000;
          sub_249AEDA78();
          swift_bridgeObjectRelease();
          unint64_t v151 = 0x8000000249B15340;
        }
        uint64_t v152 = v280;
        uint64_t v153 = v275;
        uint64_t v284 = sub_249924094(v150, v151, &v286);
        sub_249AED8F8();
        swift_bridgeObjectRelease();
        sub_24992EC88(v147, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v154 = v263;
        os_signpost_id_t v155 = sub_249AEB8A8();
        os_log_t v156 = v283;
        _os_signpost_emit_with_name_impl(&dword_249878000, v283, (os_signpost_type_t)v279, v155, "Dynamic Content area transition started.", "Starting Component: %s, Starting Instrument kind: %s, Target Component: %s, Target Instrument kind: %s", (uint8_t *)v125, 0x2Au);
        swift_arrayDestroy();
        MEMORY[0x24C5B0110](v153, -1, -1);
        MEMORY[0x24C5B0110](v125, -1, -1);

        uint64_t v157 = v267;
        uint64_t v158 = *(void (**)(char *, uint64_t))(v266 + 8);
        v158(v265, v267);
        v158(v154, v157);
        uint64_t v93 = v152;
      }
      else
      {

        sub_24992EC88(v118, (uint64_t (*)(void))type metadata accessor for Component);
        sub_24992EC88(v117, (uint64_t (*)(void))type metadata accessor for Component);
        sub_24992EC88(v116, (uint64_t (*)(void))type metadata accessor for Component);
        sub_24992EC88(v272, (uint64_t (*)(void))type metadata accessor for Component);
        (*(void (**)(char *, uint64_t))(v266 + 8))(v122, v267);
      }
      uint64_t v159 = v247;
      uint64_t v160 = (uint64_t)v250;
      if (*(void *)(v247 + 16))
      {
        unint64_t v161 = sub_2498EF548((uint64_t)v250);
        if (v162)
        {
          uint64_t v163 = *(void *)(v159 + 56) + 32 * v161;
          uint64_t v164 = *(void *)(v163 + 8);
          uint64_t v165 = *(void *)(v163 + 16);
          unsigned __int8 v166 = *(unsigned char *)(v163 + 24);
          swift_retain();
          sub_2498EC438(v164, v165, v166);
          sub_249884EC8(v164, v165, v166);
          uint64_t v167 = v257;
          sub_24992ECE8(v282, v257, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
          uint64_t v168 = v246;
          uint64_t v169 = v76((char *)v167, 2, v246);
          uint64_t v170 = v256;
          if (!v169) {
            sub_249882788(v167, v256, qword_2696DF810);
          }
          v78((char *)v170, v169, 2, v168);
          uint64_t v171 = v258;
          sub_249882788(v170, (uint64_t)v258, &qword_2696DFC98);
          sub_2499225B0(v171, v259 & 1);
          swift_release();
          sub_2498D60E8((uint64_t)v171, &qword_2696DFC98);
          uint64_t v172 = v93;
LABEL_50:
          sub_24992EC88(v172, (uint64_t (*)(void))type metadata accessor for Component);
          uint64_t v95 = (uint64_t)v249;
          goto LABEL_63;
        }
      }
      sub_24992EC88(v93, (uint64_t (*)(void))type metadata accessor for Component);
      sub_24992EC88((uint64_t)v249, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v79 = &qword_2696DDB10;
      uint64_t v80 = v160;
      return sub_2498D60E8(v80, v79);
  }
}

uint64_t sub_249914F3C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), void (*a4)(uint64_t), int a5)
{
  int v137 = a5;
  unint64_t v134 = (void (*)(uint64_t))a4;
  unint64_t v136 = a3;
  uint64_t v148 = a2;
  uint64_t v150 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v133 = (uint64_t)&v119 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = type metadata accessor for Zone();
  uint64_t v124 = *(void *)(v132 - 8);
  MEMORY[0x270FA5388](v132);
  uint64_t v125 = v8;
  uint64_t v126 = (uint64_t)&v119 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_249AEC408();
  uint64_t v128 = *(void *)(v129 - 8);
  MEMORY[0x270FA5388](v129);
  uint64_t v127 = (char *)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFD48);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v145 = (char *)&v119 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PopoverModel(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v143 = v12;
  uint64_t v144 = v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v123 = (uint64_t)&v119 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v122 = (uint64_t)&v119 - v16;
  uint64_t v17 = type metadata accessor for RequestContentModel();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v130 = (uint64_t)&v119 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v142 = (char *)&v119 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v119 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFD50);
  MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v119 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  uint64_t v29 = MEMORY[0x270FA5388](v28 - 8);
  uint64_t v131 = (uint64_t)&v119 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  unint64_t v146 = (uint64_t *)((char *)&v119 - v32);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v139 = (uint64_t)&v119 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v140 = (uint64_t)&v119 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v141 = (uint64_t)&v119 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v149 = (uint64_t)&v119 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v119 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)&v119 - v44;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v147 = v5;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v46 = v151;
  if (*(void *)(v151 + 16))
  {
    unint64_t v47 = sub_2498EF548(v148);
    uint64_t v49 = v18;
    if (v48)
    {
      sub_24992ECE8(*(void *)(v46 + 56) + *(void *)(v18 + 72) * v47, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
      uint64_t v51 = v45;
      uint64_t v52 = 0;
    }
    else
    {
      uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
      uint64_t v51 = v45;
      uint64_t v52 = 1;
    }
    uint64_t v138 = v50;
    v50(v51, v52, 1, v17);
  }
  else
  {
    uint64_t v138 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v138(v45, 1, 1, v17);
    uint64_t v49 = v18;
  }
  swift_bridgeObjectRelease();
  uint64_t v53 = (uint64_t)&v27[*(int *)(v25 + 48)];
  sub_2498D6084((uint64_t)v45, (uint64_t)v27, &qword_2696DFBB8);
  sub_2498D6084(v150, v53, &qword_2696DFBB8);
  uint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v54((uint64_t)v27, 1, v17) == 1)
  {
    sub_2498D60E8((uint64_t)v45, &qword_2696DFBB8);
    if (v54(v53, 1, v17) == 1) {
      return sub_2498D60E8((uint64_t)v27, &qword_2696DFBB8);
    }
    goto LABEL_12;
  }
  sub_2498D6084((uint64_t)v27, (uint64_t)v43, &qword_2696DFBB8);
  if (v54(v53, 1, v17) == 1)
  {
    sub_2498D60E8((uint64_t)v45, &qword_2696DFBB8);
    sub_24992EC88((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
LABEL_12:
    sub_2498D60E8((uint64_t)v27, &qword_2696DFD50);
    goto LABEL_13;
  }
  sub_24992F668(v53, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
  char v63 = _s14CarPlayAssetUI19RequestContentModelO2eeoiySbAC_ACtFZ_0((uint64_t)v43, (uint64_t)v24);
  sub_24992EC88((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
  sub_2498D60E8((uint64_t)v45, &qword_2696DFBB8);
  sub_24992EC88((uint64_t)v43, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
  uint64_t result = sub_2498D60E8((uint64_t)v27, &qword_2696DFBB8);
  if ((v63 & 1) == 0)
  {
LABEL_13:
    uint64_t v152 = 0;
    uint64_t v153 = 0;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = 0;
    uint64_t v120 = (void (**)(uint64_t))(v56 + 16);
    uint64_t v135 = v56;
    *(void *)(v56 + 24) = 0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v57 = v151;
    if (*(void *)(v151 + 16))
    {
      unint64_t v58 = sub_2498EF548(v148);
      uint64_t v59 = v149;
      uint64_t v60 = v143;
      if (v61)
      {
        sub_24992ECE8(*(void *)(v57 + 56) + *(void *)(v49 + 72) * v58, v149, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        uint64_t v62 = 0;
      }
      else
      {
        uint64_t v62 = 1;
      }
    }
    else
    {
      uint64_t v62 = 1;
      uint64_t v59 = v149;
      uint64_t v60 = v143;
    }
    uint64_t v64 = v138;
    v138((char *)v59, v62, 1, v17);
    swift_bridgeObjectRelease();
    uint64_t v65 = v140;
    sub_2498D6084(v59, v140, &qword_2696DFBB8);
    uint64_t v66 = v139;
    sub_2498D6084(v150, v139, &qword_2696DFBB8);
    if (v54(v65, 1, v17) == 1)
    {
      uint64_t v67 = v66;
      uint64_t v68 = v141;
      sub_249882788(v67, v141, &qword_2696DFBB8);
      uint64_t v69 = v68;
      sub_2498D60E8(v65, &qword_2696DFBB8);
      unsigned int v70 = v54(v68, 1, v17);
      uint64_t v71 = (uint64_t)v145;
      uint64_t v72 = (uint64_t)v142;
      if (v70 == 1)
      {
        sub_2498D60E8(v69, &qword_2696DFBB8);
        int v73 = 0;
        uint64_t v74 = (uint64_t)v146;
        goto LABEL_31;
      }
    }
    else
    {
      sub_2498D60E8(v66, &qword_2696DFBB8);
      uint64_t v69 = v141;
      sub_24992F668(v65, v141, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      v64((char *)v69, 0, 1, v17);
      uint64_t v71 = (uint64_t)v145;
      uint64_t v72 = (uint64_t)v142;
    }
    sub_24992ECE8(v69, v72, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
    unsigned int v75 = swift_getEnumCaseMultiPayload() - 1;
    uint64_t v74 = (uint64_t)v146;
    if (v75 >= 3)
    {
      sub_24992EC88(v72, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      sub_24992EC88(v69, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      int v73 = 0;
    }
    else
    {
      sub_24992EC88(v72, (uint64_t (*)(void))*(&off_26FDA7D68 + (int)v75));
      sub_24992EC88(v69, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      if (qword_2696DD648 != -1) {
        swift_once();
      }
      uint64_t v76 = sub_249AEB938();
      __swift_project_value_buffer(v76, (uint64_t)qword_26972C778);
      int v77 = sub_249AEB918();
      os_log_type_t v78 = sub_249AED7D8();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v79 = 0;
        _os_log_impl(&dword_249878000, v77, v78, "RequestContent - Either presenting or dismissing floating content.", v79, 2u);
        uint64_t v80 = v79;
        uint64_t v74 = (uint64_t)v146;
        MEMORY[0x24C5B0110](v80, -1, -1);
      }

      int v73 = v137;
    }
LABEL_31:
    sub_2498D6084(v149, v74, &qword_2696DFBB8);
    if (v54(v74, 1, v17) == 1)
    {
      sub_2498D60E8(v74, &qword_2696DFBB8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v71, 1, 1, v60);
    }
    else
    {
      uint64_t v81 = v74;
      uint64_t v82 = v130;
      sub_24992ECE8(v81, v130, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v84 = v144;
      if (EnumCaseMultiPayload == 1)
      {
        sub_24992F668(v82, v71, type metadata accessor for PopoverModel);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v71, 0, 1, v60);
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56))(v71, 1, 1, v60);
        sub_24992EC88(v82, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      }
      sub_24992EC88((uint64_t)v146, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v71, 1, v60) != 1)
      {
        int v137 = v73;
        uint64_t v86 = v122;
        sub_24992F668(v71, v122, type metadata accessor for PopoverModel);
        uint64_t v87 = v123;
        sub_24992ECE8(v86, v123, type metadata accessor for PopoverModel);
        unint64_t v88 = (*(unsigned __int8 *)(v84 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
        uint64_t v89 = swift_allocObject();
        *(void *)(v89 + 16) = v147;
        sub_24992F668(v87, v89 + v88, type metadata accessor for PopoverModel);
        uint64_t v90 = v152;
        swift_retain();
        uint64_t v91 = (uint64_t)v90;
        uint64_t v92 = v147;
        sub_2498B9AB8(v91);
        uint64_t v152 = sub_249934308;
        uint64_t v153 = v89;
        sub_24992F668(v86, v87, type metadata accessor for PopoverModel);
        uint64_t v93 = swift_allocObject();
        *(void *)(v93 + 16) = v92;
        sub_24992F668(v87, v93 + v88, type metadata accessor for PopoverModel);
        uint64_t v94 = v135;
        uint64_t v95 = *(void *)(v135 + 16);
        *(void *)(v135 + 16) = sub_249934504;
        *(void *)(v94 + 24) = v93;
        swift_retain();
        uint64_t v96 = v95;
        LOBYTE(v95) = v137;
        sub_2498B9AB8(v96);
        if (v95) {
          goto LABEL_38;
        }
        goto LABEL_41;
      }
    }
    sub_2498D60E8(v71, &qword_2696DFD48);
    if (v73)
    {
LABEL_38:
      int v85 = *(unsigned __int8 *)(v148 + *(int *)(v132 + 40));
      if (v85 == 2)
      {
        sub_2498D60E8(v149, &qword_2696DFBB8);
        swift_release();
      }
      else
      {
        char v106 = v85 & 1;
        if (qword_2696DD848 != -1) {
          swift_once();
        }
        unint64_t v145 = (char *)qword_26972C810;
        uint64_t v107 = v127;
        uint64_t v108 = sub_249AEC3F8();
        unint64_t v146 = &v119;
        MEMORY[0x270FA5388](v108);
        uint64_t v110 = v147;
        uint64_t v109 = v148;
        *(&v119 - 6) = v147;
        *((unsigned char *)&v119 - 40) = v106;
        *(&v119 - 4) = v150;
        *(&v119 - 3) = v109;
        *(&v119 - 2) = (uint64_t)&v152;
        uint64_t v111 = v126;
        sub_24992ECE8(v109, v126, (uint64_t (*)(void))type metadata accessor for Zone);
        unint64_t v112 = (*(unsigned __int8 *)(v124 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
        uint64_t v113 = v112 + v125;
        unint64_t v114 = (v112 + v125) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v115 = swift_allocObject();
        *(void *)(v115 + 16) = v110;
        sub_24992F668(v111, v115 + v112, (uint64_t (*)(void))type metadata accessor for Zone);
        *(unsigned char *)(v115 + v113) = v106;
        *(void *)(v114 + v115 + 8) = v135;
        uint64_t v116 = (void (**)(uint64_t))(v115 + ((v114 + 23) & 0xFFFFFFFFFFFFFFF8));
        uint64_t v117 = (uint64_t)v136;
        uint64_t v118 = v134;
        *uint64_t v116 = v136;
        v116[1] = v118;
        swift_retain();
        swift_retain();
        sub_2498B9AA8(v117);
        sub_249AEBCA8();
        swift_release();
        (*(void (**)(char *, uint64_t))(v128 + 8))(v107, v129);
        sub_2498D60E8(v149, &qword_2696DFBB8);
        swift_release();
      }
      uint64_t v105 = (uint64_t)v152;
      return sub_2498B9AB8(v105);
    }
LABEL_41:
    uint64_t v97 = v133;
    sub_2498D6084(v148, v133, &qword_2696DDB10);
    uint64_t v98 = v131;
    sub_2498D6084(v150, v131, &qword_2696DFBB8);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v99 = (void (*)(uint64_t *, void))sub_249AEB9D8();
    sub_24990339C(v98, v97);
    v99(&v151, 0);
    swift_release();
    uint64_t v100 = swift_release();
    uint64_t v101 = v152;
    if (v152)
    {
      uint64_t v102 = swift_retain();
      ((void (*)(uint64_t))v101)(v102);
      uint64_t v100 = sub_2498B9AB8((uint64_t)v101);
    }
    uint64_t v103 = *v120;
    if (*v120)
    {
      uint64_t v104 = swift_retain();
      v103(v104);
      uint64_t v100 = sub_2498B9AB8((uint64_t)v103);
    }
    if (v136) {
      v136(v100);
    }
    sub_2498D60E8(v149, &qword_2696DFBB8);
    swift_release();
    uint64_t v105 = (uint64_t)v101;
    return sub_2498B9AB8(v105);
  }
  return result;
}

uint64_t sub_2499160C8(uint64_t a1, uint64_t a2, const char *a3, void *a4)
{
  if (qword_2696DD648 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_249AEB938();
  __swift_project_value_buffer(v8, (uint64_t)qword_26972C778);
  uint64_t v9 = sub_249AEB918();
  os_log_type_t v10 = sub_249AED7D8();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v11 = 0;
    _os_log_impl(&dword_249878000, v9, v10, a3, v11, 2u);
    MEMORY[0x24C5B0110](v11, -1, -1);
  }

  uint64_t v12 = (void (**)(uint64_t, void *))(a1 + *a4);
  uint64_t result = swift_beginAccess();
  uint64_t v14 = *v12;
  if (*v12)
  {
    v15[0] = 0;
    v15[1] = 0;
    char v16 = 2;
    swift_retain();
    v14(a2, v15);
    return sub_2498B9AB8((uint64_t)v14);
  }
  return result;
}

uint64_t sub_24991621C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void (**a5)(uint64_t))
{
  uint64_t v99 = a5;
  uint64_t v107 = a4;
  unint64_t v7 = 0x32656E6F7ALL;
  int v8 = a2 & 1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v100 = (uint64_t)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_249AEB8C8();
  uint64_t v104 = *(void *)(v11 - 8);
  uint64_t v105 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v97 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v111 = (char *)&v90 - v14;
  uint64_t v15 = type metadata accessor for Zone();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v109 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v98 = (uint64_t)&v90 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v92 = (uint64_t)&v90 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v91 = (uint64_t)&v90 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  unint64_t v103 = (unint64_t)&v90 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v90 - v26;
  uint64_t v108 = type metadata accessor for RequestContentModel();
  uint64_t v106 = *(void *)(v108 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v108);
  uint64_t v90 = (uint64_t)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v93 = (uint64_t)&v90 - v30;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v32 = swift_getKeyPath();
  uint64_t v110 = a1;
  uint64_t v96 = (unsigned int (*)(char *, uint64_t, uint64_t))KeyPath;
  uint64_t v95 = v32;
  uint64_t v94 = (void (*)(uint64_t *, void))sub_249AEB9D8();
  uint64_t v34 = v33;
  uint64_t v35 = *v33;
  uint64_t v36 = *((void *)*v33 + 2);
  int v101 = v8;
  uint64_t v102 = a3;
  if (v36)
  {
    if (v8) {
      a3 = 0x32656E6F7ALL;
    }
    else {
      a3 = 0x31656E6F7ALL;
    }
    swift_bridgeObjectRetain();
    unint64_t v37 = 0;
    uint64_t v38 = 0x32656E6F7ALL;
    while (1)
    {
      if (v35[v37 + 32]) {
        uint64_t v39 = 0x32656E6F7ALL;
      }
      else {
        uint64_t v39 = 0x31656E6F7ALL;
      }
      if (v39 == a3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v35 = (char *)0xE500000000000000;
        goto LABEL_16;
      }
      char v40 = sub_249AEE0D8();
      swift_bridgeObjectRelease_n();
      if (v40) {
        break;
      }
      ++v37;
      uint64_t v38 = 0x32656E6F7ALL;
      if (v36 == v37)
      {
        swift_bridgeObjectRelease();
        int64_t v41 = *((void *)*v34 + 2);
        uint64_t v35 = v111;
        goto LABEL_40;
      }
    }
    uint64_t v38 = 0x32656E6F7ALL;
LABEL_16:
    swift_bridgeObjectRelease();
    int64_t v41 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      goto LABEL_80;
    }
    uint64_t v42 = *v34;
    unint64_t v43 = *((void *)*v34 + 2);
    if (v41 != v43)
    {
      unint64_t v44 = v37 + 33;
      uint64_t v35 = v111;
      while (1)
      {
        unint64_t v7 = v44 - 32;
        if (v44 - 32 >= v43)
        {
          __break(1u);
LABEL_74:
          __break(1u);
          goto LABEL_75;
        }
        if (v42[v44]) {
          uint64_t v47 = 0x32656E6F7ALL;
        }
        else {
          uint64_t v47 = 0x31656E6F7ALL;
        }
        if (v47 == a3)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          uint64_t v38 = sub_249AEE0D8();
          swift_bridgeObjectRelease_n();
          if (v38)
          {
            uint64_t v38 = 0x32656E6F7ALL;
          }
          else
          {
            if (v7 != v37)
            {
              if ((v37 & 0x8000000000000000) != 0)
              {
                __break(1u);
LABEL_78:
                __break(1u);
LABEL_79:
                __break(1u);
LABEL_80:
                __break(1u);
LABEL_81:
                uint64_t v35 = sub_2498ABF58(0, *((void *)v35 + 2) + 1, 1, v35);
                *(void *)a3 = v35;
LABEL_45:
                unint64_t v56 = *((void *)v35 + 2);
                unint64_t v55 = *((void *)v35 + 3);
                if (v56 >= v55 >> 1)
                {
                  uint64_t v35 = sub_2498ABF58((char *)(v55 > 1), v56 + 1, 1, v35);
                  *(void *)a3 = v35;
                }
                a3 = v102;
                *((void *)v35 + 2) = v56 + 1;
                v35[v56 + 32] = v101;
                ((void (*)(uint64_t *, void))v38)(&v112, 0);
                swift_release();
                swift_release();
                sub_24992EC88(v93, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
                uint64_t v35 = v111;
                uint64_t v38 = v109;
                goto LABEL_49;
              }
              uint64_t v35 = *v34;
              unint64_t v48 = *((void *)*v34 + 2);
              if (v37 >= v48) {
                goto LABEL_78;
              }
              if (v7 >= v48) {
                goto LABEL_79;
              }
              char v49 = v35[v37 + 32];
              unint64_t v7 = v35[v44];
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *uint64_t v34 = v35;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                uint64_t v35 = sub_24997000C((uint64_t)v35);
                *uint64_t v34 = v35;
              }
              v35[v37 + 32] = v7;
              (*v34)[v44] = v49;
              uint64_t v35 = v111;
            }
            BOOL v51 = __OFADD__(v37++, 1);
            uint64_t v38 = 0x32656E6F7ALL;
            if (v51) {
              goto LABEL_74;
            }
          }
        }
        uint64_t v42 = *v34;
        unint64_t v43 = *((void *)*v34 + 2);
        unint64_t v45 = v44 + 1;
        unint64_t v46 = v44 - 31;
        ++v44;
        if (v46 == v43)
        {
          int64_t v41 = v45 - 32;
          uint64_t v36 = v37;
          goto LABEL_40;
        }
      }
    }
    uint64_t v36 = v37;
    uint64_t v35 = v111;
LABEL_40:
    a3 = v102;
    uint64_t v38 = v109;
    if (v41 < v36)
    {
LABEL_75:
      __break(1u);
LABEL_76:
      swift_once();
      goto LABEL_50;
    }
  }
  else
  {
    int64_t v41 = 0;
    uint64_t v35 = v111;
    uint64_t v38 = v109;
  }
  sub_249934590(v36, v41);
  v94(&v112, 0);
  swift_release();
  swift_release();
  sub_2498D6084(a3, (uint64_t)v27, &qword_2696DFBB8);
  uint64_t v96 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v106 + 48);
  if (v96(v27, 1, v108) == 1)
  {
    sub_2498D60E8((uint64_t)v27, &qword_2696DFBB8);
  }
  else
  {
    uint64_t v52 = v93;
    sub_24992F668((uint64_t)v27, v93, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
    if (RequestContentModel.isFocusable.getter())
    {
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v38 = sub_249AEB9D8();
      a3 = (uint64_t)v53;
      uint64_t v35 = *v53;
      char v54 = swift_isUniquelyReferenced_nonNull_native();
      *(void *)a3 = v35;
      if ((v54 & 1) == 0) {
        goto LABEL_81;
      }
      goto LABEL_45;
    }
    sub_24992EC88(v52, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
  }
LABEL_49:
  unint64_t v7 = v103;
  if (qword_2696DD430 != -1) {
    goto LABEL_76;
  }
LABEL_50:
  uint64_t v57 = sub_249AEB908();
  __swift_project_value_buffer(v57, (uint64_t)qword_26972C6E8);
  sub_2498D6084(a3, v7, &qword_2696DFBB8);
  sub_24992ECE8(v107, v38, (uint64_t (*)(void))type metadata accessor for Zone);
  swift_retain_n();
  sub_249AEB8B8();
  unint64_t v58 = sub_249AEB8E8();
  LODWORD(v95) = sub_249AED828();
  if (sub_249AED8B8())
  {
    (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v97, v35, v105);
    uint64_t v59 = swift_slowAlloc();
    uint64_t v60 = swift_slowAlloc();
    uint64_t v114 = v60;
    *(_DWORD *)uint64_t v59 = 136315650;
    uint64_t v61 = v7;
    uint64_t v62 = v91;
    sub_2498D6084(v61, v91, &qword_2696DFBB8);
    if (v96((char *)v62, 1, v108) == 1)
    {
      sub_2498D60E8(v62, &qword_2696DFBB8);
    }
    else
    {
      unint64_t v64 = RequestContentModel.displayName.getter();
      unint64_t v66 = v65;
      sub_24992EC88(v62, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      if (v66) {
        goto LABEL_56;
      }
    }
    uint64_t v112 = 0;
    unint64_t v113 = 0xE000000000000000;
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    unint64_t v66 = 0x8000000249B15340;
    unint64_t v64 = 0xD000000000000015;
LABEL_56:
    uint64_t v112 = sub_249924094(v64, v66, &v114);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    sub_2498D60E8(v103, &qword_2696DFBB8);
    *(_WORD *)(v59 + 12) = 2080;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v67 = v112;
    if (*(void *)(v112 + 16))
    {
      unint64_t v68 = sub_2498EF548(v109);
      uint64_t v69 = v92;
      if (v70)
      {
        sub_24992ECE8(*(void *)(v67 + 56) + *(void *)(v106 + 72) * v68, v92, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
        uint64_t v71 = 0;
      }
      else
      {
        uint64_t v71 = 1;
      }
    }
    else
    {
      uint64_t v71 = 1;
      uint64_t v69 = v92;
    }
    uint64_t v72 = v108;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v106 + 56))(v69, v71, 1, v108);
    swift_bridgeObjectRelease();
    if (v96((char *)v69, 1, v72))
    {
      sub_2498D60E8(v69, &qword_2696DFBB8);
      int v73 = v101;
    }
    else
    {
      uint64_t v76 = v90;
      sub_24992ECE8(v69, v90, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      sub_2498D60E8(v69, &qword_2696DFBB8);
      uint64_t v77 = RequestContentModel.displayName.getter();
      unint64_t v74 = v78;
      sub_24992EC88(v76, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      int v73 = v101;
      if (v74)
      {
        uint64_t v75 = v77;
        goto LABEL_66;
      }
    }
    uint64_t v112 = 0;
    unint64_t v113 = 0xE000000000000000;
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    unint64_t v74 = 0x8000000249B15340;
    uint64_t v75 = 0xD000000000000015;
LABEL_66:
    uint64_t v112 = sub_249924094(v75, v74, &v114);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    swift_release_n();
    sub_24992EC88(v109, (uint64_t (*)(void))type metadata accessor for Zone);
    *(_WORD *)(v59 + 22) = 2080;
    if (v73) {
      uint64_t v79 = 0x32656E6F7ALL;
    }
    else {
      uint64_t v79 = 0x31656E6F7ALL;
    }
    char v63 = v73;
    uint64_t v112 = sub_249924094(v79, 0xE500000000000000, &v114);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    uint64_t v80 = v97;
    os_signpost_id_t v81 = sub_249AEB8A8();
    _os_signpost_emit_with_name_impl(&dword_249878000, v58, (os_signpost_type_t)v95, v81, "RequestContent transition started: ", "newContent: %s activeContent: %s, ZoneRegion: %s", (uint8_t *)v59, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v60, -1, -1);
    MEMORY[0x24C5B0110](v59, -1, -1);

    uint64_t v82 = v105;
    uint64_t v83 = *(void (**)(char *, uint64_t))(v104 + 8);
    v83(v111, v105);
    v83(v80, v82);
    a3 = v102;
    goto LABEL_70;
  }

  swift_release_n();
  sub_24992EC88(v38, (uint64_t (*)(void))type metadata accessor for Zone);
  sub_2498D60E8(v7, &qword_2696DFBB8);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v35, v105);
  char v63 = v101;
LABEL_70:
  uint64_t v84 = *v99;
  if (*v99)
  {
    uint64_t v85 = swift_retain();
    v84(v85);
    sub_2498B9AB8((uint64_t)v84);
  }
  uint64_t v86 = v100;
  sub_2498D6084(v107, v100, &qword_2696DDB10);
  uint64_t v87 = v98;
  sub_2498D6084(a3, v98, &qword_2696DFBB8);
  swift_getKeyPath();
  swift_getKeyPath();
  unint64_t v88 = (void (*)(uint64_t *, void))sub_249AEB9D8();
  sub_24990339C(v87, v86);
  v88(&v112, 0);
  swift_release();
  swift_release();
  LOBYTE(v112) = v63;
  return sub_24991876C((unsigned __int8 *)&v112, 0);
}

uint64_t sub_24991704C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v55 = a6;
  uint64_t v57 = a5;
  int v56 = a3 & 1;
  uint64_t v9 = type metadata accessor for RequestContentModel();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v53 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_249AEB8C8();
  uint64_t v15 = *(void *)(v59 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v59);
  unint64_t v58 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v48 - v18;
  uint64_t v20 = type metadata accessor for Zone();
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_2696DD430 != -1) {
    swift_once();
  }
  uint64_t v54 = a4;
  uint64_t v23 = (void (**)(void))(a4 + 16);
  uint64_t v24 = sub_249AEB908();
  __swift_project_value_buffer(v24, (uint64_t)qword_26972C6E8);
  sub_24992ECE8(a2, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Zone);
  swift_retain_n();
  sub_249AEB8B8();
  uint64_t v25 = sub_249AEB8E8();
  int v26 = sub_249AED828();
  if ((sub_249AED8B8() & 1) == 0)
  {

    swift_release_n();
    sub_24992EC88((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Zone);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v19, v59);
    uint64_t v33 = v57;
    LOBYTE(v30) = v56;
    goto LABEL_18;
  }
  int v49 = v26;
  os_log_t v50 = v25;
  BOOL v51 = v23;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v58, v19, v59);
  uint64_t v27 = swift_slowAlloc();
  uint64_t v48 = swift_slowAlloc();
  uint64_t v60 = v48;
  *(_DWORD *)uint64_t v27 = 136315394;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v52 = a1;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v28 = v61[0];
  if (*(void *)(v61[0] + 16))
  {
    unint64_t v29 = sub_2498EF548((uint64_t)v22);
    int v30 = v56;
    if (v31)
    {
      sub_24992ECE8(*(void *)(v28 + 56) + *(void *)(v10 + 72) * v29, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      uint64_t v32 = 0;
    }
    else
    {
      uint64_t v32 = 1;
    }
  }
  else
  {
    uint64_t v32 = 1;
    int v30 = v56;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v14, v32, 1, v9);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v14, 1, v9))
  {
    sub_2498D60E8((uint64_t)v14, &qword_2696DFBB8);
    uint64_t v33 = v57;
  }
  else
  {
    uint64_t v36 = v53;
    sub_24992ECE8((uint64_t)v14, v53, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
    sub_2498D60E8((uint64_t)v14, &qword_2696DFBB8);
    unint64_t v35 = RequestContentModel.displayName.getter();
    unint64_t v34 = v37;
    sub_24992EC88(v36, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
    uint64_t v33 = v57;
    if (v34) {
      goto LABEL_14;
    }
  }
  v61[0] = 0;
  v61[1] = 0xE000000000000000;
  sub_249AEDA78();
  swift_bridgeObjectRelease();
  unint64_t v34 = 0x8000000249B15340;
  unint64_t v35 = 0xD000000000000015;
LABEL_14:
  v61[0] = sub_249924094(v35, v34, &v60);
  sub_249AED8F8();
  swift_bridgeObjectRelease();
  swift_release_n();
  sub_24992EC88((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Zone);
  *(_WORD *)(v27 + 12) = 2080;
  if (v30) {
    uint64_t v38 = 0x32656E6F7ALL;
  }
  else {
    uint64_t v38 = 0x31656E6F7ALL;
  }
  v61[0] = sub_249924094(v38, 0xE500000000000000, &v60);
  sub_249AED8F8();
  swift_bridgeObjectRelease();
  uint64_t v39 = v58;
  os_signpost_id_t v40 = sub_249AEB8A8();
  os_log_t v41 = v50;
  _os_signpost_emit_with_name_impl(&dword_249878000, v50, (os_signpost_type_t)v49, v40, "RequestContent transition ended: ", "activeContent: %s, ZoneRegion: %s", (uint8_t *)v27, 0x16u);
  uint64_t v42 = v48;
  swift_arrayDestroy();
  MEMORY[0x24C5B0110](v42, -1, -1);
  MEMORY[0x24C5B0110](v27, -1, -1);

  unint64_t v43 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v44 = v59;
  v43(v19, v59);
  v43(v39, v44);
  uint64_t v23 = v51;
LABEL_18:
  LOBYTE(v61[0]) = v30;
  sub_24991876C((unsigned __int8 *)v61, 1);
  uint64_t result = swift_beginAccess();
  unint64_t v46 = *v23;
  if (v46)
  {
    uint64_t v47 = swift_retain();
    v46(v47);
    uint64_t result = sub_2498B9AB8((uint64_t)v46);
  }
  if (v33) {
    return v33(result);
  }
  return result;
}

Swift::Void __swiftcall ClusterTransitionCoordinator.settleRequestContentTransition(zoneRegion:)(CarPlayAssetUI::Zone::ZoneRegion zoneRegion)
{
  unsigned __int8 v1 = *(unsigned char *)zoneRegion;
  sub_24991876C(&v1, 1);
}

uint64_t sub_249917744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v49 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Component();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)v49 - v21;
  int v23 = *(unsigned __int8 *)(a2 + 17);
  uint64_t v24 = *(void *)(a2 + 88) >> 62;
  if (v24 != 1)
  {
    if (!v24)
    {
      uint64_t v25 = (uint64_t *)(a2 + 56);
      uint64_t v26 = *(void *)(a2 + 64);
      if (v26) {
        goto LABEL_4;
      }
    }
LABEL_10:
    uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    return v42(a3, 1, 1, v16);
  }
  uint64_t v25 = (uint64_t *)(a2 + 96);
  uint64_t v26 = *(void *)(a2 + 104);
  if (!v26) {
    goto LABEL_10;
  }
LABEL_4:
  uint64_t v27 = *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  if (*(void *)(v27 + 16))
  {
    int v51 = v23;
    uint64_t v52 = *v25;
    uint64_t v53 = v20;
    swift_bridgeObjectRetain();
    unint64_t v28 = sub_2498EF548(a1);
    if (v29)
    {
      v49[0] = v10;
      uint64_t v50 = a3;
      uint64_t v30 = *(void *)(v27 + 56) + 32 * v28;
      uint64_t v32 = *(void *)v30;
      uint64_t v31 = *(void *)(v30 + 8);
      uint64_t v33 = *(void *)(v30 + 16);
      unsigned __int8 v34 = *(unsigned char *)(v30 + 24);
      swift_retain();
      sub_2498EC438(v31, v33, v34);
      sub_249884EC8(v31, v33, v34);
      uint64_t v35 = *(void *)(*(void *)v32 + 144);
      v49[1] = v32;
      uint64_t v36 = (uint64_t *)(v32 + v35);
      swift_beginAccess();
      v55[0] = *v36;
      v55[1] = (uint64_t)sub_249918C00;
      v55[2] = 0;
      v55[3] = (uint64_t)sub_2498F8768;
      v55[4] = 0;
      v55[5] = (uint64_t)sub_2498F87D0;
      v55[6] = 0;
      uint64_t v54 = MEMORY[0x263F8EE80];
      swift_bridgeObjectRetain_n();
      sub_2498F7D10(v55, 1, &v54);
      swift_bridgeObjectRelease();
      uint64_t v37 = v54;
      uint64_t v38 = v49[0];
      if (*(void *)(v54 + 16) && (uint64_t v39 = sub_2498EF01C(v52, v26), (v40 & 1) != 0))
      {
        sub_24992ECE8(*(void *)(v37 + 56) + *(void *)(v53 + 72) * v39, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Component);
        os_log_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
        v41(v15, 0, 1, v16);
      }
      else
      {
        os_log_t v41 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56);
        v41(v15, 1, 1, v16);
      }
      swift_bridgeObjectRelease();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v15, 1, v16) == 1)
      {
        swift_release();
        sub_2498D60E8((uint64_t)v15, &qword_2696DF7F0);
      }
      else
      {
        sub_24992F668((uint64_t)v15, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v44 = sub_2498D6084((uint64_t)v22, (uint64_t)v12, qword_2696DF810);
        MEMORY[0x270FA5388](v44);
        v49[-2] = v16;
        uint64_t v45 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
        v49[-1] = v45;
        uint64_t KeyPath = swift_getKeyPath();
        MEMORY[0x270FA5388](KeyPath);
        v49[-2] = v16;
        v49[-1] = v45;
        swift_getKeyPath();
        sub_249AEB9E8();
        swift_release();
        swift_release();
        sub_2498D6084((uint64_t)v19, v38, qword_2696DF810);
        sub_24992EC88((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for Component);
        sub_249AEB808();
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        char v47 = sub_249AED088();
        swift_release();
        sub_2498D60E8(v38, qword_2696DF810);
        sub_2498D60E8((uint64_t)v12, qword_2696DF810);
        if ((v47 & 1) != 0 || (v51 & 1) == 0)
        {
          uint64_t v48 = v50;
          sub_24992F668((uint64_t)v22, v50, (uint64_t (*)(void))type metadata accessor for Component);
          return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v41)(v48, 0, 1, v16);
        }
        sub_24992EC88((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Component);
      }
      a3 = v50;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = v53;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(a3, 1, 1, v16);
}

void *sub_249917DE4@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v61 = *MEMORY[0x263EF8340];
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Instrument();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v9 = a1[3];
  long long v55 = a1[2];
  long long v56 = v9;
  long long v10 = a1[5];
  long long v57 = a1[4];
  long long v58 = v10;
  long long v59 = a1[6];
  char v60 = *((unsigned char *)a1 + 112);
  long long v11 = a1[1];
  long long v53 = *a1;
  long long v54 = v11;
  uint64_t v12 = *((void *)&v55 + 1);
  long long v14 = v56;
  uint64_t v13 = v57;
  unint64_t v15 = *((void *)&v58 + 1);
  switch(*((void *)&v58 + 1) >> 62)
  {
    case 1:
      goto LABEL_4;
    case 2:
      uint64_t v29 = *((void *)&v57 + 1);
      uint64_t v37 = v58;
      uint64_t v38 = v59;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0C8);
      uint64_t v30 = swift_allocObject();
      *(_OWORD *)(v30 + 16) = xmmword_249AF0A70;
      uint64_t v39 = v30 + 32;
      swift_beginAccess();
      LOBYTE(v43) = byte_2696DE830;
      HIDWORD(v43) = dword_2696DE834;
      *(void *)&long long v44 = 1056964608;
      *((void *)&v44 + 1) = 0x3FB999999999999ALL;
      uint64_t v45 = 0;
      uint64_t v46 = 0;
      uint64_t v47 = 0x3FF0000000000000;
      uint64_t v48 = 1056964608;
      uint64_t v49 = 0x3FB999999999999ALL;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      uint64_t v52 = 0x3FF0000000000000;
      sub_2498A4888(&v43);
      sub_249890C54((uint64_t)&v43, v39);
      sub_2498A48A4(v12, v14, *((uint64_t *)&v14 + 1), v13, v29, v37, v15);
      VisibilityConfiguration.init(arrayLiteral:)((void *)v30, &v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t v31 = type metadata accessor for PopoverModel(0);
      uint64_t result = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v40, 1, 1, v31);
      break;
    case 3:
      uint64_t v32 = type metadata accessor for PopoverModel(0);
      uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
      uint64_t v34 = v32;
      uint64_t v35 = v40;
      uint64_t result = (void *)v33(v35, 1, 1, v34);
      break;
    default:
      unint64_t v43 = *((void *)&v55 + 1);
      long long v44 = v56;
      uint64_t v36 = *((void *)&v57 + 1);
      uint64_t v45 = v57;
      uint64_t v37 = v58;
      uint64_t v38 = v59;
      sub_2498A49EC(&v43);
      sub_2498A4990((uint64_t)&v43, (uint64_t)v42);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      sub_249AEB7F8();
      uint64_t v16 = sub_249AEC888();
      Instrument.init(id:kind:backgroundColor:shadowID:)((uint64_t)v5, (uint64_t)v42, v16, 0, 0, (uint64_t)v8);
      sub_2498A58D4(v12, v14, *((uint64_t *)&v14 + 1), v13, v36, v37, v15);
      char v17 = v54;
      uint64_t v18 = swift_allocObject();
      swift_weakInit();
      uint64_t v19 = swift_allocObject();
      long long v20 = v58;
      *(_OWORD *)(v19 + 80) = v57;
      *(_OWORD *)(v19 + 96) = v20;
      *(_OWORD *)(v19 + 112) = v59;
      *(unsigned char *)(v19 + 128) = v60;
      long long v21 = v54;
      *(_OWORD *)(v19 + 16) = v53;
      *(_OWORD *)(v19 + 32) = v21;
      long long v22 = v56;
      *(_OWORD *)(v19 + 48) = v55;
      *(_OWORD *)(v19 + 64) = v22;
      uint64_t v23 = (uint64_t)v8;
      uint64_t v24 = v40;
      sub_24992F668(v23, v40, (uint64_t (*)(void))type metadata accessor for Instrument);
      uint64_t v25 = (int *)type metadata accessor for PopoverModel(0);
      *(unsigned char *)(v24 + v25[5]) = v17;
      uint64_t v26 = (uint64_t (**)(uint64_t))(v24 + v25[6]);
      *uint64_t v26 = sub_249933F70;
      v26[1] = (uint64_t (*)(uint64_t))v18;
      uint64_t v27 = (uint64_t (**)())(v24 + v25[7]);
      *uint64_t v27 = sub_249933FE4;
      v27[1] = (uint64_t (*)())v19;
      (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v25 - 1) + 56))(v24, 0, 1, v25);
      uint64_t result = sub_249934014(&v53);
      break;
  }
  return result;
}

uint64_t sub_2499182D0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = (uint64_t *)(result + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear);
    swift_beginAccess();
    uint64_t v4 = (void (*)(uint64_t, void *))*v3;
    sub_2498B9AA8(*v3);
    uint64_t result = swift_release();
    if (v4)
    {
      v5[0] = 0;
      v5[1] = 0;
      char v6 = 2;
      v4(a1, v5);
      return sub_2498B9AB8((uint64_t)v4);
    }
  }
  return result;
}

uint64_t ClusterTransitionCoordinator.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_2498D60E8(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent, &qword_2696DFBB8);
  sub_2498D60E8(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent, &qword_2696DFBB8);
  uint64_t v5 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBC8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  v7(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent, v6);
  uint64_t v10 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  v7(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout, v6);
  uint64_t v14 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC18);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  sub_2498B9AB8(*(void *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillAppear));
  sub_2498B9AB8(*(void *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillDisappear));
  sub_2498B9AB8(*(void *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ClusterTransitionCoordinator.__deallocating_deinit()
{
  ClusterTransitionCoordinator.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_24991872C@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ClusterTransitionCoordinator(0);
  uint64_t result = sub_249AEB978();
  *a1 = result;
  return result;
}

uint64_t sub_24991876C(unsigned __int8 *a1, char a2)
{
  unint64_t v3 = *a1;
  if (qword_2696DD648 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_249AEB938();
  __swift_project_value_buffer(v4, (uint64_t)qword_26972C778);
  uint64_t v5 = sub_249AEB918();
  os_log_type_t v6 = sub_249AED7D8();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v28 = v8;
    *(_DWORD *)uint64_t v7 = 136315394;
    if (a2) {
      uint64_t v9 = 0x64656C74746573;
    }
    else {
      uint64_t v9 = 0x64657472617473;
    }
    sub_249924094(v9, 0xE700000000000000, &v28);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v10 = sub_249AED128();
    sub_249924094(v10, v11, &v28);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_249878000, v5, v6, "RequestContent - %s transition on zone: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v8, -1, -1);
    MEMORY[0x24C5B0110](v7, -1, -1);
  }

  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v12 = v28;
  if (*(void *)(v28 + 16))
  {
    unint64_t v13 = sub_2498EF5FC(v3);
    if (v14)
    {
      uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 8 * v13);
      swift_bridgeObjectRelease();
      if ((a2 & 1) == 0)
      {
        uint64_t v16 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
          goto LABEL_25;
        }
LABEL_16:
        swift_getKeyPath();
        swift_getKeyPath();
        if (v16 > 0)
        {
          sub_249AEB9E8();
          swift_release();
          swift_release();
          uint64_t v20 = v28;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v28 = v20;
          sub_249884428(v16, v3, isUniquelyReferenced_nonNull_native);
          uint64_t v22 = v28;
          swift_bridgeObjectRelease();
          swift_getKeyPath();
          swift_getKeyPath();
          uint64_t v28 = v22;
          goto LABEL_18;
        }
        sub_249AEB9E8();
        swift_release();
        swift_release();
        uint64_t v24 = v28;
        swift_bridgeObjectRetain();
        unint64_t v3 = sub_2498EF5FC(v3);
        char v26 = v25;
        swift_bridgeObjectRelease();
        if ((v26 & 1) == 0)
        {
LABEL_23:
          swift_getKeyPath();
          swift_getKeyPath();
          uint64_t v28 = v24;
          swift_retain();
          goto LABEL_19;
        }
        char v27 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v28 = v24;
        if (v27)
        {
LABEL_22:
          sub_24992B48C(v3, v24);
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
LABEL_25:
        sub_2498E16B4();
        uint64_t v24 = v28;
        goto LABEL_22;
      }
      uint64_t v16 = v15 - 1;
      if (!__OFSUB__(v15, 1)) {
        goto LABEL_16;
      }
      __break(1u);
    }
  }
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v17 = v28;
  char v18 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v28 = v17;
  sub_249884428(1, v3, v18);
  uint64_t v19 = v28;
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v28 = v19;
LABEL_18:
  swift_retain();
LABEL_19:
  sub_249AEB9F8();
  return sub_249905228();
}

uint64_t sub_249918C00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v4 - 8);
  os_log_type_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = *(void *)(a1 + *(int *)(type metadata accessor for Component() + 32));
  if (!*(void *)(v7 + 16)) {
    goto LABEL_11;
  }
  uint64_t v8 = type metadata accessor for Slot();
  sub_2498D6084(v7+ *(int *)(v8 + 36)+ ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80)), (uint64_t)v6, &qword_2696DE540);
  uint64_t v9 = type metadata accessor for Instrument();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9) == 1)
  {
    sub_2498D60E8((uint64_t)v6, &qword_2696DE540);
  }
  else
  {
    sub_2498A4990((uint64_t)&v6[*(int *)(v9 + 20)], (uint64_t)v21);
    sub_24992F574(v21, sub_2498FB4B4);
    sub_24992EC88((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Instrument);
    sub_2498A4990((uint64_t)v21, (uint64_t)v22);
    int v10 = sub_2498B8790((uint64_t)v22);
    if (v10 == 7)
    {
      uint64_t v14 = sub_2498B87AC((uint64_t)v22);
      uint64_t v12 = (uint64_t *)(v14 + 56);
      unint64_t v13 = (uint64_t *)(v14 + 64);
    }
    else
    {
      if (v10 != 6)
      {
        sub_24992F574(v21, sub_2498FCAAC);
        goto LABEL_11;
      }
      uint64_t v11 = sub_2498B87AC((uint64_t)v22);
      uint64_t v12 = (uint64_t *)(v11 + 16);
      unint64_t v13 = (uint64_t *)(v11 + 24);
    }
    uint64_t v15 = *v13;
    uint64_t v16 = *v12;
    swift_bridgeObjectRetain();
    sub_24992F574(v21, sub_2498FCAAC);
    if (v15)
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF808);
      uint64_t v18 = (uint64_t)a2 + *(int *)(v17 + 48);
      *a2 = v16;
      a2[1] = v15;
      sub_24992ECE8(a1, v18, (uint64_t (*)(void))type metadata accessor for Component);
      return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 0, 1, v17);
    }
  }
LABEL_11:
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF808);
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a2, 1, 1, v20);
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_249AEB808();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.description.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
  MEMORY[0x270FA5388](v4 - 8);
  os_log_type_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0x203A74756F79614CLL;
  v12[1] = 0xE800000000000000;
  uint64_t v7 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  sub_2498D6084(v0 + *(int *)(v7 + 24), (uint64_t)v3, &qword_2696DFC48);
  uint64_t v8 = type metadata accessor for Layout();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v3, 1, v8) == 1)
  {
    sub_2498D60E8((uint64_t)v3, &qword_2696DFC48);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  else
  {
    sub_2498D6084((uint64_t)v3, (uint64_t)v6, &qword_2696DFCB0);
    sub_24992EC88((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for Layout);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
  }
  sub_2499042B8();
  sub_2498D60E8((uint64_t)v6, &qword_2696DFCA8);
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  return v12[0];
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.oldLayout.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24991A568(type metadata accessor for ClusterTransitionCoordinator.LayoutTransition, &qword_2696DFC48, a1);
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.newLayout.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  return sub_2498D6084(v1 + *(int *)(v3 + 24), a1, &qword_2696DFC48);
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.fadeInNewLayout.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0) + 28));
}

uint64_t ClusterTransitionCoordinator.LayoutTransition.fadeOutOldLayout.getter()
{
  return *(unsigned __int8 *)(v0
                            + *(int *)(type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0) + 32));
}

uint64_t sub_24991922C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_249AEB808();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

void ClusterTransitionCoordinator.startLayoutTransition(to:fadeInNewLayout:fadeOutOldLayout:)(uint64_t a1, int a2, int a3)
{
  int v64 = a3;
  LODWORD(v63) = a2;
  uint64_t v67 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v56 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_249AEB8C8();
  uint64_t v58 = *(void *)(v62 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v62);
  long long v57 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v61 = (char *)&v56 - v7;
  uint64_t v8 = type metadata accessor for Layout();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v59 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v60 = (uint64_t)&v56 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC40);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v56 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v65 = (uint64_t)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v56 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v66 = (uint64_t)&v56 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v56 - v27;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  if ((v69 & 1) != 0
    || (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_249AEB9E8(),
        swift_release(),
        swift_release(),
        v69 == 1))
  {
    if (qword_2696DD648 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_249AEB938();
    __swift_project_value_buffer(v29, (uint64_t)qword_26972C778);
    sub_2498D6084(v67, (uint64_t)v28, &qword_2696DFC48);
    uint64_t v30 = sub_249AEB918();
    os_log_type_t v31 = sub_249AED7D8();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v69 = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      sub_2498D6084((uint64_t)v28, v66, &qword_2696DFC48);
      uint64_t v34 = sub_249AED128();
      uint64_t v68 = sub_249924094(v34, v35, &v69);
      sub_249AED8F8();
      swift_bridgeObjectRelease();
      sub_2498D60E8((uint64_t)v28, &qword_2696DFC48);
      _os_log_impl(&dword_249878000, v30, v31, "In an active transition. Preventing layout change to: %s", v32, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5B0110](v33, -1, -1);
      MEMORY[0x24C5B0110](v32, -1, -1);
    }
    else
    {
      sub_2498D60E8((uint64_t)v28, &qword_2696DFC48);
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v36 = (int *)type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v37 = v67;
    sub_2498D6084(v67, (uint64_t)&v18[v36[6]], &qword_2696DFC48);
    sub_249AEB7F8();
    v18[v36[7]] = v63 & 1;
    v18[v36[8]] = v64 & 1;
    (*(void (**)(char *, void, uint64_t, int *))(*((void *)v36 - 1) + 56))(v18, 0, 1, v36);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)v18, (uint64_t)v16, &qword_2696DFC40);
    swift_retain();
    sub_249AEB9F8();
    sub_2499062B8();
    sub_2498D60E8((uint64_t)v18, &qword_2696DFC40);
    sub_2498D6084(v37, (uint64_t)v24, &qword_2696DFC48);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v24, 1, v8) == 1)
    {
      sub_2498D60E8((uint64_t)v24, &qword_2696DFC48);
    }
    else
    {
      uint64_t v38 = v60;
      sub_24992F668((uint64_t)v24, v60, (uint64_t (*)(void))type metadata accessor for Layout);
      if (qword_2696DD430 != -1) {
        swift_once();
      }
      uint64_t v39 = sub_249AEB908();
      __swift_project_value_buffer(v39, (uint64_t)qword_26972C6E8);
      uint64_t v40 = v59;
      sub_24992ECE8(v38, v59, (uint64_t (*)(void))type metadata accessor for Layout);
      uint64_t v41 = v61;
      sub_249AEB8B8();
      uint64_t v42 = sub_249AEB8E8();
      int v43 = sub_249AED828();
      if (sub_249AED8B8())
      {
        uint64_t v44 = v58;
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v57, v41, v62);
        uint64_t v45 = (uint8_t *)swift_slowAlloc();
        uint64_t v46 = swift_slowAlloc();
        uint64_t v69 = v46;
        int v64 = v43;
        *(_DWORD *)uint64_t v45 = 136315138;
        char v63 = v45 + 4;
        uint64_t v47 = v56;
        sub_2498D6084(v40, v56, &qword_2696DFCB0);
        uint64_t v48 = sub_249AEB7D8();
        unint64_t v50 = v49;
        sub_2498D60E8(v47, &qword_2696DFCB0);
        uint64_t v68 = sub_249924094(v48, v50, &v69);
        sub_249AED8F8();
        swift_bridgeObjectRelease();
        sub_24992EC88(v59, (uint64_t (*)(void))type metadata accessor for Layout);
        uint64_t v51 = v57;
        os_signpost_id_t v52 = sub_249AEB8A8();
        _os_signpost_emit_with_name_impl(&dword_249878000, v42, (os_signpost_type_t)v64, v52, "Layout transition started.", "Target Layout: %s", v45, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24C5B0110](v46, -1, -1);
        MEMORY[0x24C5B0110](v45, -1, -1);

        long long v53 = *(void (**)(char *, uint64_t))(v44 + 8);
        uint64_t v54 = v62;
        v53(v61, v62);
        sub_24992EC88(v60, (uint64_t (*)(void))type metadata accessor for Layout);
        v53(v51, v54);
      }
      else
      {

        sub_24992EC88(v40, (uint64_t (*)(void))type metadata accessor for Layout);
        (*(void (**)(char *, uint64_t))(v58 + 8))(v41, v62);
        sub_24992EC88(v38, (uint64_t (*)(void))type metadata accessor for Layout);
      }
    }
    uint64_t v55 = v66;
    sub_2498D6084(v67, v66, &qword_2696DFC48);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084(v55, v65, &qword_2696DFC48);
    swift_retain();
    sub_249AEB9F8();
    sub_2498D60E8(v55, &qword_2696DFC48);
  }
}

Swift::Void __swiftcall ClusterTransitionCoordinator.endLayoutTransition()()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v50 = (uint64_t)&v46 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_249AEB8C8();
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v51 = (char *)&v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v54 = (char *)&v46 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Layout();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v52 = (uint64_t)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (uint64_t)&v46 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC40);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v57 = (uint64_t)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v46 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v46 - v20;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v22 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  uint64_t v23 = *(void *)(v22 - 8);
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
  sub_2498D60E8((uint64_t)v21, &qword_2696DFC40);
  if (v24 == 1)
  {
    if (qword_2696DD648 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_249AEB938();
    __swift_project_value_buffer(v25, (uint64_t)qword_26972C778);
    uint64_t v26 = sub_249AEB918();
    os_log_type_t v27 = sub_249AED7D8();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_249878000, v26, v27, "No layout transition to end.", v28, 2u);
      MEMORY[0x24C5B0110](v28, -1, -1);
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_2498D60E8((uint64_t)v8, &qword_2696DFC48);
    }
    else
    {
      uint64_t v29 = v53;
      sub_24992F668((uint64_t)v8, v53, (uint64_t (*)(void))type metadata accessor for Layout);
      if (qword_2696DD430 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_249AEB908();
      __swift_project_value_buffer(v30, (uint64_t)qword_26972C6E8);
      uint64_t v31 = v52;
      sub_24992ECE8(v29, v52, (uint64_t (*)(void))type metadata accessor for Layout);
      uint64_t v32 = v54;
      sub_249AEB8B8();
      uint64_t v33 = sub_249AEB8E8();
      int v34 = sub_249AED828();
      if (sub_249AED8B8())
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v51, v32, v56);
        unint64_t v35 = (uint8_t *)swift_slowAlloc();
        uint64_t v49 = swift_slowAlloc();
        uint64_t v59 = v49;
        uint64_t v48 = v35;
        int v47 = v34;
        *(_DWORD *)unint64_t v35 = 136315138;
        uint64_t v46 = v35 + 4;
        uint64_t v36 = v50;
        sub_2498D6084(v31, v50, &qword_2696DFCB0);
        uint64_t v37 = sub_249AEB7D8();
        unint64_t v39 = v38;
        sub_2498D60E8(v36, &qword_2696DFCB0);
        uint64_t v58 = sub_249924094(v37, v39, &v59);
        sub_249AED8F8();
        swift_bridgeObjectRelease();
        sub_24992EC88(v52, (uint64_t (*)(void))type metadata accessor for Layout);
        uint64_t v40 = v51;
        os_signpost_id_t v41 = sub_249AEB8A8();
        uint64_t v42 = v48;
        _os_signpost_emit_with_name_impl(&dword_249878000, v33, (os_signpost_type_t)v47, v41, "Layout transition ended.", "Active Layout: %s", v48, 0xCu);
        uint64_t v43 = v49;
        swift_arrayDestroy();
        MEMORY[0x24C5B0110](v43, -1, -1);
        MEMORY[0x24C5B0110](v42, -1, -1);

        uint64_t v44 = *(void (**)(char *, uint64_t))(v55 + 8);
        uint64_t v45 = v56;
        v44(v54, v56);
        sub_24992EC88(v53, (uint64_t (*)(void))type metadata accessor for Layout);
        v44(v40, v45);
      }
      else
      {

        sub_24992EC88(v31, (uint64_t (*)(void))type metadata accessor for Layout);
        (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v56);
        sub_24992EC88(v29, (uint64_t (*)(void))type metadata accessor for Layout);
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v19, 1, 1, v22);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2498D6084((uint64_t)v19, v57, &qword_2696DFC40);
    swift_retain();
    sub_249AEB9F8();
    sub_2499062B8();
    sub_2498D60E8((uint64_t)v19, &qword_2696DFC40);
  }
}

uint64_t ClusterTransitionCoordinator.ComponentTransition.description.getter()
{
  uint64_t v1 = sub_249AEB808();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7[0] = 0x203A6D657449;
  v7[1] = 0xE600000000000000;
  uint64_t v5 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0 + *(int *)(v5 + 20), v1);
  sub_249AED128();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t ClusterTransitionCoordinator.ComponentTransition.componentId.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24991A568(type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, qword_2696DF810, a1);
}

uint64_t sub_24991A568@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = a1(0);
  return sub_2498D6084(v3 + *(int *)(v6 + 20), a3, a2);
}

uint64_t static ClusterTransitionCoordinator.ComponentTransition.== infix(_:_:)()
{
  if ((sub_249AEB7E8() & 1) == 0) {
    return 0;
  }
  type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  sub_249AEB808();
  sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  return sub_249AED088() & 1;
}

uint64_t sub_24991A664(uint64_t a1)
{
  uint64_t v3 = sub_249AEB808();
  MEMORY[0x270FA5388](v3);
  v7[0] = 0x203A6D657449;
  v7[1] = 0xE600000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v1 + *(int *)(a1 + 20), v3);
  sub_249AED128();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  return v7[0];
}

uint64_t sub_24991A764()
{
  if ((sub_249AEB7E8() & 1) == 0) {
    return 0;
  }
  sub_249AEB808();
  sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  return sub_249AED088() & 1;
}

uint64_t CarouselModel.Direction<>.init(direction:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v8 = *(void *)(v4 - 8);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 2, v4);
  if (!v5) {
    sub_249882788(a1, a2, qword_2696DF810);
  }
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);

  return v6(a2, v5, 2, v4);
}

uint64_t sub_24991A8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v110 = a3;
  uint64_t v111 = a2;
  uint64_t v105 = sub_249AEB808();
  uint64_t v97 = *(void *)(v105 - 8);
  MEMORY[0x270FA5388](v105);
  uint64_t v96 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v95 = (uint64_t)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_249AEB8C8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  int v101 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v102 = (char *)&v93 - v10;
  uint64_t v98 = type metadata accessor for Component();
  uint64_t v11 = MEMORY[0x270FA5388](v98);
  uint64_t v104 = (uint64_t)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v100 = (uint64_t)&v93 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v99 = (char *)&v93 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v103 = (uint64_t)&v93 - v17;
  uint64_t v18 = type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0);
  uint64_t v19 = *(void **)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v106 = (uint64_t)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE20);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE18);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  uint64_t v107 = (uint64_t)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v109 = (uint64_t)&v93 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v93 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v93 - v32;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v35 = result;
  uint64_t v93 = v7;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v108 = v35;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v36 = v112;
  uint64_t v37 = *(void *)(v112 + 16);
  uint64_t v94 = v6;
  if (v37)
  {
    uint64_t v38 = v111;
    unint64_t v39 = sub_2498EF548(v111);
    if (v40)
    {
      sub_24992ECE8(*(void *)(v36 + 56) + v19[9] * v39, (uint64_t)v33, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
      os_signpost_id_t v41 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v19[7];
      v41(v33, 0, 1, v18);
    }
    else
    {
      os_signpost_id_t v41 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v19[7];
      v41(v33, 1, 1, v18);
    }
  }
  else
  {
    os_signpost_id_t v41 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v19[7];
    v41(v33, 1, 1, v18);
    uint64_t v38 = v111;
  }
  swift_bridgeObjectRelease();
  sub_24992ECE8(v110, (uint64_t)v31, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
  v41(v31, 0, 1, v18);
  uint64_t v42 = (uint64_t)&v23[*(int *)(v21 + 48)];
  sub_2498D6084((uint64_t)v33, (uint64_t)v23, &qword_2696DFE18);
  sub_2498D6084((uint64_t)v31, v42, &qword_2696DFE18);
  uint64_t v43 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v19[6];
  if (v43((uint64_t)v23, 1, v18) != 1)
  {
    uint64_t v81 = v109;
    sub_2498D6084((uint64_t)v23, v109, &qword_2696DFE18);
    int v82 = v43(v42, 1, v18);
    uint64_t v45 = v108;
    if (v82 != 1)
    {
      uint64_t v85 = v106;
      sub_24992F668(v42, v106, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
      if (sub_249AEB7E8())
      {
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        char v86 = sub_249AED088();
        sub_24992EC88(v85, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
        sub_2498D60E8((uint64_t)v31, &qword_2696DFE18);
        sub_2498D60E8((uint64_t)v33, &qword_2696DFE18);
        sub_24992EC88(v81, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
        sub_2498D60E8((uint64_t)v23, &qword_2696DFE18);
        if (v86) {
          goto LABEL_10;
        }
        return swift_release();
      }
      sub_24992EC88(v85, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
      sub_2498D60E8((uint64_t)v31, &qword_2696DFE18);
      sub_2498D60E8((uint64_t)v33, &qword_2696DFE18);
      sub_24992EC88(v81, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
      uint64_t v84 = (uint64_t)v23;
      uint64_t v83 = &qword_2696DFE18;
LABEL_20:
      sub_2498D60E8(v84, v83);
      return swift_release();
    }
    sub_2498D60E8((uint64_t)v31, &qword_2696DFE18);
    sub_2498D60E8((uint64_t)v33, &qword_2696DFE18);
    sub_24992EC88(v81, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition);
LABEL_19:
    uint64_t v83 = &qword_2696DFE20;
    uint64_t v84 = (uint64_t)v23;
    goto LABEL_20;
  }
  sub_2498D60E8((uint64_t)v31, &qword_2696DFE18);
  sub_2498D60E8((uint64_t)v33, &qword_2696DFE18);
  int v44 = v43(v42, 1, v18);
  uint64_t v45 = v108;
  if (v44 != 1) {
    goto LABEL_19;
  }
  sub_2498D60E8((uint64_t)v23, &qword_2696DFE18);
LABEL_10:
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v46 = v107;
  sub_24992A540(v38, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, type metadata accessor for ClusterTransitionCoordinator.ComponentTransition, (void (*)(unint64_t, uint64_t))sub_24992B110, (void (*)(void))sub_2498E11B4, v107);
  sub_2498D60E8(v46, &qword_2696DFE18);
  uint64_t v47 = v112;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v114 = v47;
  swift_retain();
  sub_249AEB9F8();
  sub_249905440();
  uint64_t v48 = *(void *)(v45 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
  if (!*(void *)(v48 + 16)) {
    return swift_release();
  }
  unint64_t v49 = sub_2498EF548(v38);
  if ((v50 & 1) == 0) {
    return swift_release();
  }
  uint64_t v51 = *(void *)(v48 + 56) + 32 * v49;
  uint64_t v52 = *(void *)(v51 + 8);
  uint64_t v53 = *(void *)(v51 + 16);
  unsigned __int8 v54 = *(unsigned char *)(v51 + 24);
  swift_retain();
  sub_2498EC438(v52, v53, v54);
  uint64_t v55 = sub_249884EC8(v52, v53, v54);
  MEMORY[0x270FA5388](v55);
  uint64_t v56 = v98;
  *(&v93 - 2) = v98;
  uint64_t v57 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  *(&v93 - 1) = v57;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v93 - 2) = v56;
  *(&v93 - 1) = v57;
  swift_getKeyPath();
  uint64_t v59 = (uint64_t)v99;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v60 = v103;
  sub_24992F668(v59, v103, (uint64_t (*)(void))type metadata accessor for Component);
  if (qword_2696DD430 != -1) {
    swift_once();
  }
  uint64_t v61 = sub_249AEB908();
  __swift_project_value_buffer(v61, (uint64_t)qword_26972C6E8);
  uint64_t v62 = v100;
  sub_24992ECE8(v60, v100, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v63 = v104;
  sub_24992ECE8(v60, v104, (uint64_t (*)(void))type metadata accessor for Component);
  int v64 = v102;
  sub_249AEB8B8();
  uint64_t v65 = sub_249AEB8E8();
  int v66 = sub_249AED828();
  char v67 = sub_249AED8B8();
  uint64_t v68 = v93;
  if (v67)
  {
    LODWORD(v111) = v66;
    (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v101, v64, v94);
    uint64_t v69 = swift_slowAlloc();
    uint64_t v110 = swift_slowAlloc();
    uint64_t v114 = v110;
    *(_DWORD *)uint64_t v69 = 136315394;
    uint64_t v70 = v62;
    uint64_t v71 = v62;
    uint64_t v72 = v95;
    sub_2498D6084(v70, v95, qword_2696DF810);
    (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v96, v72, v105);
    uint64_t v73 = sub_249AED128();
    unint64_t v75 = v74;
    sub_2498D60E8(v72, qword_2696DF810);
    uint64_t v76 = v73;
    uint64_t v77 = v104;
    uint64_t v112 = sub_249924094(v76, v75, &v114);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    sub_24992EC88(v71, (uint64_t (*)(void))type metadata accessor for Component);
    *(_WORD *)(v69 + 12) = 2080;
    unint64_t v78 = Component.stableIdentifier.getter();
    if (v79)
    {
      unint64_t v80 = v79;
    }
    else
    {
      uint64_t v112 = 0;
      unint64_t v113 = 0xE000000000000000;
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      unint64_t v80 = 0x8000000249B15340;
      unint64_t v78 = 0xD000000000000015;
    }
    uint64_t v87 = v103;
    uint64_t v112 = sub_249924094(v78, v80, &v114);
    sub_249AED8F8();
    swift_bridgeObjectRelease();
    sub_24992EC88(v77, (uint64_t (*)(void))type metadata accessor for Component);
    unint64_t v88 = v101;
    os_signpost_id_t v89 = sub_249AEB8A8();
    _os_signpost_emit_with_name_impl(&dword_249878000, v65, (os_signpost_type_t)v111, v89, "Dynamic Content area transition animation settled.", "Current Component: %s. Current Instrument kind: %s", (uint8_t *)v69, 0x16u);
    uint64_t v90 = v110;
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v90, -1, -1);
    MEMORY[0x24C5B0110](v69, -1, -1);

    swift_release();
    uint64_t v91 = *(void (**)(char *, uint64_t))(v93 + 8);
    uint64_t v92 = v94;
    v91(v64, v94);
    sub_24992EC88(v87, (uint64_t (*)(void))type metadata accessor for Component);
    return ((uint64_t (*)(char *, uint64_t))v91)(v88, v92);
  }
  else
  {

    swift_release();
    sub_24992EC88(v63, (uint64_t (*)(void))type metadata accessor for Component);
    sub_24992EC88(v62, (uint64_t (*)(void))type metadata accessor for Component);
    (*(void (**)(char *, uint64_t))(v68 + 8))(v64, v94);
    return sub_24992EC88(v60, (uint64_t (*)(void))type metadata accessor for Component);
  }
}

uint64_t ClusterTransitionCoordinator.ListDirection.init(iterateDirection:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3 = *a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  if (v3) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = 2;
  }

  return v5(a2, v6, 2, v4);
}

uint64_t sub_24991B798()
{
  return sub_2499D0FF4();
}

uint64_t sub_24991B7BC(uint64_t a1)
{
  return sub_2499DC4FC(a1);
}

uint64_t sub_24991B7E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v34 - v8;
  uint64_t v10 = type metadata accessor for Component();
  uint64_t v35 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v34 - v15;
  uint64_t v46 = v14;
  uint64_t v17 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  uint64_t v47 = v17;
  swift_getKeyPath();
  uint64_t v44 = v10;
  uint64_t v45 = v17;
  swift_getKeyPath();
  uint64_t v37 = a1;
  sub_24992ECE8(a1, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Component);
  swift_retain();
  sub_249AEB9F8();
  uint64_t v42 = v10;
  uint64_t v43 = v17;
  swift_getKeyPath();
  uint64_t v40 = v10;
  uint64_t v41 = v17;
  uint64_t v36 = v17;
  swift_getKeyPath();
  uint64_t v18 = (uint64_t)v13;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v19 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 144));
  swift_beginAccess();
  uint64_t v20 = *v19;
  uint64_t v21 = *(void *)(*v19 + 16);
  uint64_t v38 = v10;
  uint64_t v39 = v2;
  if (v21)
  {
    uint64_t v22 = v35;
    uint64_t v23 = v20 + ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80));
    uint64_t v24 = v20;
    sub_249AEB808();
    uint64_t v25 = *(void *)(v22 + 72);
    uint64_t v35 = v24;
    swift_bridgeObjectRetain();
    uint64_t v26 = 0;
    while (1)
    {
      sub_2498D6084(v23, (uint64_t)v9, qword_2696DF810);
      sub_2498D6084(v18, (uint64_t)v7, qword_2696DF810);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v27 = sub_249AED088();
      sub_2498D60E8((uint64_t)v7, qword_2696DF810);
      sub_2498D60E8((uint64_t)v9, qword_2696DF810);
      if (v27) {
        break;
      }
      ++v26;
      v23 += v25;
      if (v21 == v26)
      {
        uint64_t v26 = 0;
        break;
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = 0;
  }
  uint64_t v28 = v36;
  uint64_t v29 = v37;
  uint64_t v30 = sub_24992EC88(v18, (uint64_t (*)(void))type metadata accessor for Component);
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = v38;
  *(&v34 - 2) = v38;
  *(&v34 - 1) = v28;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v34 - 2) = v31;
  *(&v34 - 1) = v28;
  swift_getKeyPath();
  uint64_t v48 = v26;
  swift_retain();
  sub_249AEB9F8();
  return sub_24992EC88(v29, (uint64_t (*)(void))type metadata accessor for Component);
}

uint64_t sub_24991BC2C(uint64_t a1, uint64_t a2, int a3, double a4)
{
  int v85 = a3;
  uint64_t v93 = a2;
  uint64_t v89 = a1;
  uint64_t v90 = type metadata accessor for Component();
  uint64_t v92 = *(void *)(v90 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v90);
  uint64_t v94 = (uint64_t)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v83 = (uint64_t)&v81 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v84 = (uint64_t)&v81 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v95 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v81 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v81 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v82 = (uint64_t)&v81 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v86 = (uint64_t)&v81 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v81 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v87 = (uint64_t)&v81 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v91 = (uint64_t)&v81 - v29;
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBC8);
  uint64_t v96 = *(void *)(v30 - 8);
  uint64_t v97 = v30;
  MEMORY[0x270FA5388](v30);
  uint64_t v32 = (char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE28);
  uint64_t v34 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)&v81 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = (void *)(v4 + *(void *)(*(void *)v4 + 112));
  *uint64_t v37 = 0;
  v37[1] = 0;
  uint64_t v38 = (void *)(v4 + *(void *)(*(void *)v4 + 120));
  *uint64_t v38 = 0;
  v38[1] = 0;
  uint64_t v39 = (void *)(v4 + *(void *)(*(void *)v4 + 128));
  *uint64_t v39 = 0;
  v39[1] = 0;
  uint64_t v40 = (void *)(v4 + *(void *)(*(void *)v4 + 136));
  *uint64_t v40 = 0;
  v40[1] = 0;
  uint64_t v41 = v4 + *(void *)(*(void *)v4 + 160);
  uint64_t v99 = 0;
  sub_249AEB9A8();
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))(v41, v36, v33);
  uint64_t v42 = v4 + *(void *)(*(void *)v4 + 176);
  LOBYTE(v99) = 0;
  sub_249AEB9A8();
  uint64_t v43 = v97;
  uint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v96 + 32);
  v44(v42, v32, v97);
  uint64_t v45 = v4 + *(void *)(*(void *)v4 + 184);
  LOBYTE(v99) = 0;
  uint64_t v46 = v4;
  sub_249AEB9A8();
  v44(v45, v32, v43);
  uint64_t v47 = v89;
  uint64_t v48 = *(void *)(*(void *)v4 + 192);
  *(void *)(v4 + v48) = sub_249AECC48();
  *(void *)(v4 + *(void *)(*(void *)v4 + 200)) = 0;
  if (*(void *)(v47 + 16))
  {
    uint64_t v49 = v93;
    uint64_t v50 = v91;
    sub_2498D6084(v93, v91, &qword_2696DF7F0);
    uint64_t v51 = v92;
    uint64_t v52 = v90;
    uint64_t v96 = *(void *)(v92 + 48);
    uint64_t v97 = v92 + 48;
    int v53 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v96)(v50, 1, v90);
    uint64_t v54 = v50;
    uint64_t v48 = v87;
    sub_2498D6084(v54, v87, &qword_2696DF7F0);
    BOOL v55 = v53 == 1;
    uint64_t v56 = v52;
    uint64_t v43 = v51;
    uint64_t v88 = v46;
    if (v55) {
      goto LABEL_12;
    }
    uint64_t v57 = v47;
    uint64_t v58 = *(void *)(v47 + 16);
    if (v58)
    {
      uint64_t v43 = v56;
      uint64_t v59 = v57 + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80));
      uint64_t v60 = *(void *)(v92 + 72);
      swift_bridgeObjectRetain();
      uint64_t v61 = v48;
      do
      {
        sub_2498D6084(v59, (uint64_t)v18, qword_2696DF810);
        sub_2498D6084(v61, (uint64_t)v26, &qword_2696DF7F0);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v96)(v26, 1, v43) == 1) {
          goto LABEL_26;
        }
        sub_2498D6084((uint64_t)v26, (uint64_t)v16, qword_2696DF810);
        sub_24992EC88((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for Component);
        sub_249AEB808();
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        char v62 = sub_249AED088();
        sub_2498D60E8((uint64_t)v16, qword_2696DF810);
        sub_2498D60E8((uint64_t)v18, qword_2696DF810);
        if (v62) {
          goto LABEL_11;
        }
        v59 += v60;
        --v58;
        uint64_t v61 = v48;
      }
      while (v58);
      swift_bridgeObjectRelease();
    }
    sub_2498D60E8(v48, &qword_2696DF7F0);
  }
  while (1)
  {
    sub_249AEDC58();
    __break(1u);
LABEL_11:
    uint64_t v47 = v89;
    swift_bridgeObjectRelease();
    uint64_t v46 = v88;
    uint64_t v56 = v43;
    uint64_t v43 = v92;
    uint64_t v49 = v93;
LABEL_12:
    sub_2498D60E8(v48, &qword_2696DF7F0);
    sub_2498D60E8(v91, &qword_2696DF7F0);
    *(void *)(v46 + *(void *)(*(void *)v46 + 144)) = v47;
    swift_beginAccess();
    uint64_t v98 = v47;
    swift_bridgeObjectRetain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF698);
    sub_249AEB9A8();
    swift_endAccess();
    uint64_t v63 = v86;
    sub_2498D6084(v49, v86, &qword_2696DF7F0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v96)(v63, 1, v56) != 1) {
      break;
    }
    if (*(void *)(v47 + 16))
    {
      uint64_t v64 = v82;
      sub_24992ECE8(v47 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80)), v82, (uint64_t (*)(void))type metadata accessor for Component);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v43 + 56))(v64, 0, 1, v56);
      swift_bridgeObjectRelease();
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v96)(v64, 1, v56) != 1)
      {
        uint64_t v65 = v84;
        sub_24992F668(v64, v84, (uint64_t (*)(void))type metadata accessor for Component);
        sub_2498D60E8(v63, &qword_2696DF7F0);
        goto LABEL_17;
      }
    }
    else
    {
      __break(1u);
LABEL_26:
      __break(1u);
    }
    __break(1u);
  }
  swift_bridgeObjectRelease();
  uint64_t v65 = v84;
  sub_24992F668(v63, v84, (uint64_t (*)(void))type metadata accessor for Component);
LABEL_17:
  swift_beginAccess();
  sub_24992ECE8(v65, v83, (uint64_t (*)(void))type metadata accessor for Component);
  sub_249AEB9A8();
  sub_24992EC88(v65, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v66 = swift_endAccess();
  *(unsigned char *)(v46 + *(void *)(*(void *)v46 + 104)) = v85 & 1;
  *(double *)(v46 + *(void *)(*(void *)v46 + 152)) = a4;
  MEMORY[0x270FA5388](v66);
  uint64_t v67 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v69 = (uint64_t *)(v46 + *(void *)(*(void *)v46 + 144));
  swift_beginAccess();
  uint64_t v70 = *v69;
  uint64_t v71 = *(void *)(*v69 + 16);
  if (v71)
  {
    uint64_t v97 = v67;
    uint64_t v72 = v70 + ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80));
    sub_249AEB808();
    uint64_t v73 = *(void *)(v43 + 72);
    uint64_t v96 = v70;
    swift_bridgeObjectRetain();
    uint64_t v74 = 0;
    uint64_t v75 = v94;
    uint64_t v76 = (uint64_t)v95;
    while (1)
    {
      sub_2498D6084(v72, (uint64_t)v16, qword_2696DF810);
      sub_2498D6084(v75, v76, qword_2696DF810);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v77 = sub_249AED088();
      sub_2498D60E8(v76, qword_2696DF810);
      sub_2498D60E8((uint64_t)v16, qword_2696DF810);
      if (v77) {
        break;
      }
      ++v74;
      v72 += v73;
      if (v71 == v74)
      {
        uint64_t v74 = 0;
        break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v46 = v88;
    uint64_t v49 = v93;
  }
  else
  {
    uint64_t v74 = 0;
  }
  uint64_t v78 = sub_24992EC88(v94, (uint64_t (*)(void))type metadata accessor for Component);
  MEMORY[0x270FA5388](v78);
  uint64_t v79 = swift_getKeyPath();
  MEMORY[0x270FA5388](v79);
  swift_getKeyPath();
  uint64_t v98 = v74;
  swift_retain();
  sub_249AEB9F8();
  sub_2498D60E8(v49, &qword_2696DF7F0);
  return v46;
}

uint64_t sub_24991C928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v60 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC98);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v59 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v61 = (uint64_t)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v53 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v53 - v11;
  uint64_t v13 = type metadata accessor for Component();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v53 - v19;
  uint64_t v69 = v18;
  uint64_t v21 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  uint64_t v70 = v21;
  swift_getKeyPath();
  uint64_t v67 = v13;
  uint64_t v68 = v21;
  swift_getKeyPath();
  char v62 = v20;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v65 = v13;
  uint64_t v66 = v21;
  swift_getKeyPath();
  uint64_t v63 = v13;
  uint64_t v64 = v21;
  uint64_t v56 = v21;
  swift_getKeyPath();
  uint64_t v57 = v2;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v22 = *(void *)(v71 + 16);
  if (v22)
  {
    int v53 = v17;
    uint64_t v54 = v13;
    uint64_t v23 = v71 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    sub_249AEB808();
    uint64_t v24 = 0;
    uint64_t v55 = v14;
    uint64_t v25 = *(void *)(v14 + 72);
    while (1)
    {
      sub_2498D6084(v23, (uint64_t)v12, qword_2696DF810);
      sub_2498D6084((uint64_t)v62, (uint64_t)v10, qword_2696DF810);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v26 = sub_249AED088();
      sub_2498D60E8((uint64_t)v10, qword_2696DF810);
      sub_2498D60E8((uint64_t)v12, qword_2696DF810);
      if (v26) {
        break;
      }
      ++v24;
      v23 += v25;
      if (v22 == v24)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = 0;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v28 = v60;
    uint64_t v13 = v54;
    uint64_t v27 = v55;
    uint64_t v17 = v53;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = 0;
    uint64_t v27 = v14;
    uint64_t v28 = v60;
  }
  sub_24992EC88((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v29 = v59;
  sub_2498D6084(v58, v59, &qword_2696DFC98);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v29, 2, v30);
  if (result)
  {
    if (result == 1)
    {
      MEMORY[0x270FA5388](result);
      uint64_t v32 = (char *)v56;
      *(&v53 - 2) = (char *)v13;
      *(&v53 - 1) = v32;
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      *(&v53 - 2) = (char *)v13;
      *(&v53 - 1) = v32;
      swift_getKeyPath();
      if (v24)
      {
        sub_249AEB9E8();
        swift_release();
        uint64_t result = swift_release();
        if ((unint64_t)(v24 - 1) < *(void *)(v71 + 16))
        {
          sub_24992ECE8(v71+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * (v24 - 1), v28, (uint64_t (*)(void))type metadata accessor for Component);
          swift_bridgeObjectRelease();
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v13);
        }
        goto LABEL_38;
      }
      sub_249AEB9E8();
      swift_release();
      swift_release();
      uint64_t v50 = *(void *)(v71 + 16);
      if (v50)
      {
        sub_24992ECE8(v71+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * (v50 - 1), v28, (uint64_t (*)(void))type metadata accessor for Component);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v28, 0, 1, v13);
        return swift_bridgeObjectRelease();
      }
      uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
      uint64_t v52 = v28;
      goto LABEL_34;
    }
    unint64_t v42 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    MEMORY[0x270FA5388](result);
    uint64_t v43 = (char *)v56;
    *(&v53 - 2) = (char *)v13;
    *(&v53 - 1) = v43;
    uint64_t v44 = swift_getKeyPath();
    MEMORY[0x270FA5388](v44);
    *(&v53 - 2) = (char *)v13;
    *(&v53 - 1) = v43;
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v45 = *(void *)(v71 + 16);
    uint64_t v46 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v46);
    *(&v53 - 2) = (char *)v13;
    *(&v53 - 1) = v43;
    uint64_t v47 = swift_getKeyPath();
    MEMORY[0x270FA5388](v47);
    *(&v53 - 2) = (char *)v13;
    *(&v53 - 1) = v43;
    swift_getKeyPath();
    if ((uint64_t)v42 >= v45)
    {
      sub_249AEB9E8();
      swift_release();
      swift_release();
      uint64_t v49 = v60;
      if (*(void *)(v71 + 16))
      {
        sub_24992ECE8(v71 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80)), v60, (uint64_t (*)(void))type metadata accessor for Component);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v49, 0, 1, v13);
        return swift_bridgeObjectRelease();
      }
      uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
      uint64_t v52 = v60;
LABEL_34:
      v51(v52, 1, 1, v13);
      return swift_bridgeObjectRelease();
    }
    sub_249AEB9E8();
    swift_release();
    uint64_t result = swift_release();
    uint64_t v48 = v60;
    if ((v42 & 0x8000000000000000) != 0)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v42 >= *(void *)(v71 + 16))
    {
LABEL_40:
      __break(1u);
      return result;
    }
    sub_24992ECE8(v71+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v42, v60, (uint64_t (*)(void))type metadata accessor for Component);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v48, 0, 1, v13);
  }
  else
  {
    uint64_t v34 = sub_249882788(v29, v61, qword_2696DF810);
    MEMORY[0x270FA5388](v34);
    uint64_t v35 = (char *)v56;
    *(&v53 - 2) = (char *)v13;
    *(&v53 - 1) = v35;
    uint64_t v36 = swift_getKeyPath();
    MEMORY[0x270FA5388](v36);
    *(&v53 - 2) = (char *)v13;
    *(&v53 - 1) = v35;
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v37 = *(void *)(v71 + 16);
    if (v37)
    {
      uint64_t v54 = v13;
      uint64_t v38 = v71 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
      sub_249AEB808();
      uint64_t v55 = v27;
      uint64_t v39 = *(void *)(v27 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_24992ECE8(v38, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for Component);
        sub_2498D6084((uint64_t)v17, (uint64_t)v12, qword_2696DF810);
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        char v40 = sub_249AED088();
        sub_2498D60E8((uint64_t)v12, qword_2696DF810);
        if (v40) {
          break;
        }
        sub_24992EC88((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for Component);
        v38 += v39;
        if (!--v37)
        {
          swift_bridgeObjectRelease();
          uint64_t v41 = 1;
          uint64_t v13 = v54;
          uint64_t v27 = v55;
          uint64_t v28 = v60;
          goto LABEL_31;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v28 = v60;
      sub_24992F668((uint64_t)v17, v60, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v41 = 0;
      uint64_t v13 = v54;
      uint64_t v27 = v55;
    }
    else
    {
      uint64_t v41 = 1;
    }
LABEL_31:
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v28, v41, 1, v13);
    swift_bridgeObjectRelease();
    return sub_2498D60E8(v61, qword_2696DF810);
  }
}

uint64_t sub_24991D394(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v235 = a1;
  uint64_t v245 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF8);
  uint64_t v5 = MEMORY[0x270FA5388](v245);
  uint64_t v228 = (char *)&v219 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v219 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE00);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v230 = (uint64_t)&v219 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v233 = (uint64_t)&v219 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v232 = (uint64_t)&v219 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v238 = (uint64_t)&v219 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v239 = (uint64_t)&v219 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v248 = (uint64_t)&v219 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDC8);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v221 = (uint64_t)&v219 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v250 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v23 = *(unint64_t **)(v250 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v250);
  uint64_t v251 = (char *)&v219 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v253 = (uint64_t)&v219 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v27 - 8);
  uint64_t v29 = (char *)&v219 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Component();
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v227 = (char *)&v219 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v242 = (uint64_t)&v219 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v226 = (uint64_t)&v219 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v225 = (uint64_t)&v219 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v220 = (uint64_t)&v219 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v234 = (uint64_t)&v219 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v240 = (uint64_t)&v219 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v243 = (uint64_t)&v219 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v223 = (uint64_t)&v219 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v51 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v219 - v50);
  MEMORY[0x270FA5388](v49);
  int v53 = (uint64_t *)((char *)&v219 - v52);
  uint64_t v55 = v54;
  sub_2498D6084(a2, (uint64_t)v29, &qword_2696DF7F0);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  uint64_t v237 = v30;
  int v57 = v56(v29, 1, v30);
  uint64_t v236 = v3;
  uint64_t v224 = v55;
  uint64_t v249 = v8;
  if (v57 == 1)
  {
    sub_2498D60E8((uint64_t)v29, &qword_2696DF7F0);
    uint64_t v58 = v3 & 0xFFFFFFFFFFFFLL | 0x6AE1000000000000;
    goto LABEL_14;
  }
  sub_24992F668((uint64_t)v29, (uint64_t)v53, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v58 = v3 & 0xFFFFFFFFFFFFLL | 0x6AE1000000000000;
  uint64_t v59 = v3 + *(void *)(*(void *)v3 + 144);
  swift_beginAccess();
  uint64_t v60 = *(void *)v59;
  uint64_t v61 = *(void *)(*(void *)v59 + 16);
  if (!v61) {
    goto LABEL_8;
  }
  uint64_t v241 = v59;
  uint64_t v246 = v23;
  uint64_t v247 = v51;
  int v252 = v53;
  uint64_t v231 = v3 & 0xFFFFFFFFFFFFLL | 0x6AE1000000000000;
  uint64_t v62 = *(unsigned __int8 *)(v55 + 80);
  uint64_t v229 = v62;
  uint64_t v244 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((v62 + 32) & ~v62);
  uint64_t v63 = (uint64_t)v244 + v60;
  sub_249AEB808();
  uint64_t v254 = *(void *)(v55 + 72);
  swift_bridgeObjectRetain();
  unint64_t v64 = 0;
  uint64_t v65 = v253;
  uint64_t v66 = (uint64_t)v251;
  do
  {
    sub_2498D6084(v63, v65, qword_2696DF810);
    sub_2498D6084((uint64_t)v252, v66, qword_2696DF810);
    sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
    char v67 = sub_249AED088();
    sub_2498D60E8(v66, qword_2696DF810);
    sub_2498D60E8(v65, qword_2696DF810);
    if (v67)
    {
      uint64_t v68 = swift_bridgeObjectRelease();
      MEMORY[0x270FA5388](v68);
      uint64_t v69 = v237;
      *(&v219 - 2) = v237;
      uint64_t v70 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
      *(&v219 - 1) = v70;
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      *(&v219 - 2) = v69;
      *(&v219 - 1) = v70;
      swift_getKeyPath();
      sub_249AEB9E8();
      swift_release();
      swift_release();
      uint64_t v72 = *(void *)(v256 + 16);
      if (!v72)
      {
LABEL_13:
        swift_bridgeObjectRelease();
        sub_24992EC88((uint64_t)v252, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v3 = v236;
        uint64_t v58 = v231;
        uint64_t v55 = v224;
        uint64_t v23 = v246;
        goto LABEL_14;
      }
      uint64_t v222 = v70;
      unint64_t v73 = 0;
      uint64_t v219 = v256;
      uint64_t v74 = (uint64_t)v244 + v256;
      uint64_t v75 = v253;
      uint64_t v76 = (uint64_t)v251;
      while (1)
      {
        sub_2498D6084(v74, v75, qword_2696DF810);
        sub_2498D6084((uint64_t)v252, v76, qword_2696DF810);
        char v77 = sub_249AED088();
        sub_2498D60E8(v76, qword_2696DF810);
        sub_2498D60E8(v75, qword_2696DF810);
        if (v77) {
          break;
        }
        v74 += v254;
        if (v72 == ++v73) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v170 = v241;
      uint64_t result = swift_beginAccess();
      if (*(void *)(*(void *)v170 + 16) < v64) {
        goto LABEL_96;
      }
      uint64_t v171 = v235;
      uint64_t v172 = v221;
      sub_24992ECE8(v235, v221, (uint64_t (*)(void))type metadata accessor for Component);
      sub_24992BA38(v64, v64, v172);
      uint64_t v173 = swift_endAccess();
      MEMORY[0x270FA5388](v173);
      uint64_t v174 = v237;
      uint64_t v175 = v222;
      *(&v219 - 2) = v237;
      *(&v219 - 1) = v175;
      uint64_t v176 = swift_getKeyPath();
      MEMORY[0x270FA5388](v176);
      *(&v219 - 2) = v174;
      *(&v219 - 1) = v175;
      swift_getKeyPath();
      sub_249AEB9E8();
      swift_release();
      swift_release();
      uint64_t v177 = *(void *)v170;
      uint64_t v178 = *(void *)(*(void *)v170 + 16);
      if (v178)
      {
        uint64_t v179 = (uint64_t)v244 + v177;
        uint64_t v250 = v177;
        swift_bridgeObjectRetain();
        uint64_t v180 = 0;
        uint64_t v181 = v253;
        uint64_t v182 = (uint64_t)v251;
        do
        {
          sub_2498D6084(v179, v181, qword_2696DF810);
          sub_2498D6084((uint64_t)v247, v182, qword_2696DF810);
          char v183 = sub_249AED088();
          sub_2498D60E8(v182, qword_2696DF810);
          sub_2498D60E8(v181, qword_2696DF810);
          if (v183) {
            goto LABEL_73;
          }
          ++v180;
          v179 += v254;
        }
        while (v178 != v180);
        uint64_t v180 = 0;
LABEL_73:
        swift_bridgeObjectRelease();
        uint64_t v153 = v236;
        uint64_t v171 = v235;
      }
      else
      {
        uint64_t v180 = 0;
        uint64_t v153 = v236;
      }
      uint64_t v208 = v223;
      uint64_t v209 = sub_24992EC88((uint64_t)v247, (uint64_t (*)(void))type metadata accessor for Component);
      MEMORY[0x270FA5388](v209);
      uint64_t v210 = v237;
      uint64_t v211 = v222;
      *(&v219 - 2) = v237;
      *(&v219 - 1) = v211;
      uint64_t v212 = swift_getKeyPath();
      MEMORY[0x270FA5388](v212);
      *(&v219 - 2) = v210;
      *(&v219 - 1) = v211;
      swift_getKeyPath();
      uint64_t v256 = v180;
      swift_retain();
      sub_249AEB9F8();
      uint64_t v213 = sub_24992ECE8(v171, v208, (uint64_t (*)(void))type metadata accessor for Component);
      MEMORY[0x270FA5388](v213);
      *(&v219 - 2) = v210;
      *(&v219 - 1) = v211;
      uint64_t v214 = swift_getKeyPath();
      MEMORY[0x270FA5388](v214);
      *(&v219 - 2) = v210;
      *(&v219 - 1) = v211;
      swift_getKeyPath();
      uint64_t result = sub_249AEB9D8();
      if (*(void *)(*(void *)v215 + 16) < v73) {
        goto LABEL_97;
      }
      uint64_t v216 = v208;
      uint64_t v217 = (void (*)(uint64_t *, void))result;
      uint64_t v218 = v221;
      sub_24992F668(v216, v221, (uint64_t (*)(void))type metadata accessor for Component);
      sub_24992BA38(v73, v73, v218);
      v217(&v256, 0);
      swift_release();
      swift_release();
      sub_24992EC88((uint64_t)v252, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v143 = v237;
LABEL_57:
      uint64_t v154 = (uint64_t *)(v153 + *(void *)(*(void *)v153 + 144));
      uint64_t v155 = swift_beginAccess();
      if (*(void *)(*v154 + 16) == 1)
      {
        uint64_t v156 = v223;
        sub_24992ECE8(v235, v223, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v155 = sub_24991B7E0(v156);
      }
      MEMORY[0x270FA5388](v155);
      *(&v219 - 2) = v143;
      uint64_t v157 = (void *)sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
      *(&v219 - 1) = (uint64_t)v157;
      uint64_t v158 = swift_getKeyPath();
      MEMORY[0x270FA5388](v158);
      *(&v219 - 2) = v143;
      *(&v219 - 1) = (uint64_t)v157;
      swift_getKeyPath();
      sub_249AEB9E8();
      swift_release();
      swift_release();
      uint64_t v159 = *v154;
      uint64_t v160 = *(void *)(v159 + 16);
      if (v160)
      {
        int v252 = v157;
        uint64_t v161 = v159 + ((v229 + 32) & ~(unint64_t)v229);
        sub_249AEB808();
        swift_bridgeObjectRetain();
        uint64_t v162 = 0;
        uint64_t v163 = v253;
        uint64_t v164 = (uint64_t)v251;
        while (1)
        {
          sub_2498D6084(v161, v163, qword_2696DF810);
          sub_2498D6084(v243, v164, qword_2696DF810);
          sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
          char v165 = sub_249AED088();
          sub_2498D60E8(v164, qword_2696DF810);
          sub_2498D60E8(v163, qword_2696DF810);
          if (v165) {
            break;
          }
          ++v162;
          v161 += v254;
          if (v160 == v162)
          {
            uint64_t v162 = 0;
            break;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v166 = v237;
        uint64_t v157 = v252;
      }
      else
      {
        uint64_t v162 = 0;
        uint64_t v166 = v237;
      }
      uint64_t v167 = sub_24992EC88(v243, (uint64_t (*)(void))type metadata accessor for Component);
      MEMORY[0x270FA5388](v167);
      *(&v219 - 2) = v166;
      *(&v219 - 1) = (uint64_t)v157;
      uint64_t v168 = swift_getKeyPath();
      MEMORY[0x270FA5388](v168);
      *(&v219 - 2) = v166;
      *(&v219 - 1) = (uint64_t)v157;
      swift_getKeyPath();
      uint64_t v255 = v162;
      swift_retain();
      return sub_249AEB9F8();
    }
    ++v64;
    v63 += v254;
  }
  while (v61 != v64);
  swift_bridgeObjectRelease();
  uint64_t v3 = v236;
  uint64_t v58 = v231;
  uint64_t v55 = v224;
  int v53 = v252;
  uint64_t v23 = v246;
LABEL_8:
  sub_24992EC88((uint64_t)v53, (uint64_t (*)(void))type metadata accessor for Component);
LABEL_14:
  uint64_t v78 = *(void *)v3;
  uint64_t v231 = v58;
  uint64_t v79 = (unint64_t *)(v3 + *(void *)(v78 + 144));
  swift_beginAccess();
  uint64_t v246 = v79;
  uint64_t v80 = *v79;
  uint64_t v81 = *(void *)(*v79 + 16);
  if (!v81)
  {
LABEL_41:
    uint64_t v119 = v235;
    uint64_t v120 = v226;
    sub_24992ECE8(v235, v226, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v121 = v246;
    swift_beginAccess();
    unint64_t v122 = *v121;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v121 = v122;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v122 = sub_2498AB974(0, *(void *)(v122 + 16) + 1, 1, v122);
      *uint64_t v246 = v122;
    }
    uint64_t v124 = v237;
    unint64_t v126 = *(void *)(v122 + 16);
    unint64_t v125 = *(void *)(v122 + 24);
    if (v126 >= v125 >> 1)
    {
      unint64_t v122 = sub_2498AB974(v125 > 1, v126 + 1, 1, v122);
      *uint64_t v246 = v122;
    }
    *(void *)(v122 + 16) = v126 + 1;
    uint64_t v229 = *(unsigned __int8 *)(v55 + 80);
    uint64_t v127 = (void *)((v229 + 32) & ~v229);
    uint64_t v254 = *(void *)(v55 + 72);
    sub_24992F668(v120, (uint64_t)v127 + v122 + v254 * v126, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v128 = swift_endAccess();
    MEMORY[0x270FA5388](v128);
    *(&v219 - 2) = v124;
    uint64_t v129 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
    *(&v219 - 1) = v129;
    uint64_t v130 = swift_getKeyPath();
    MEMORY[0x270FA5388](v130);
    *(&v219 - 2) = v124;
    *(&v219 - 1) = v129;
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    unint64_t v131 = *v246;
    uint64_t v132 = *(void *)(*v246 + 16);
    int v252 = v127;
    if (v132)
    {
      uint64_t v250 = v129;
      uint64_t v133 = (uint64_t)v127 + v131;
      sub_249AEB808();
      swift_bridgeObjectRetain();
      uint64_t v134 = 0;
      uint64_t v135 = v253;
      uint64_t v136 = (uint64_t)v251;
      while (1)
      {
        sub_2498D6084(v133, v135, qword_2696DF810);
        sub_2498D6084(v242, v136, qword_2696DF810);
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        char v137 = sub_249AED088();
        sub_2498D60E8(v136, qword_2696DF810);
        sub_2498D60E8(v135, qword_2696DF810);
        if (v137) {
          break;
        }
        ++v134;
        v133 += v254;
        if (v132 == v134)
        {
          uint64_t v134 = 0;
          break;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v138 = v236;
      uint64_t v119 = v235;
      uint64_t v139 = (uint64_t)v227;
      uint64_t v129 = v250;
    }
    else
    {
      uint64_t v134 = 0;
      uint64_t v138 = v236;
      uint64_t v139 = (uint64_t)v227;
    }
    uint64_t v140 = sub_24992EC88(v242, (uint64_t (*)(void))type metadata accessor for Component);
    MEMORY[0x270FA5388](v140);
    uint64_t v141 = v237;
    *(&v219 - 2) = v237;
    *(&v219 - 1) = v129;
    uint64_t v142 = swift_getKeyPath();
    MEMORY[0x270FA5388](v142);
    *(&v219 - 2) = v141;
    *(&v219 - 1) = v129;
    swift_getKeyPath();
    uint64_t v256 = v134;
    uint64_t v143 = v141;
    swift_retain();
    sub_249AEB9F8();
    uint64_t v144 = sub_24992ECE8(v119, v139, (uint64_t (*)(void))type metadata accessor for Component);
    MEMORY[0x270FA5388](v144);
    *(&v219 - 2) = v141;
    *(&v219 - 1) = v129;
    uint64_t v145 = swift_getKeyPath();
    MEMORY[0x270FA5388](v145);
    *(&v219 - 2) = v141;
    *(&v219 - 1) = v129;
    swift_getKeyPath();
    unint64_t v146 = (void (*)(uint64_t *, void))sub_249AEB9D8();
    uint64_t v148 = v147;
    unint64_t v149 = *v147;
    char v150 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v148 = v149;
    if ((v150 & 1) == 0)
    {
      unint64_t v149 = sub_2498AB974(0, *(void *)(v149 + 16) + 1, 1, v149);
      *uint64_t v148 = v149;
    }
    unint64_t v152 = *(void *)(v149 + 16);
    unint64_t v151 = *(void *)(v149 + 24);
    if (v152 >= v151 >> 1)
    {
      unint64_t v149 = sub_2498AB974(v151 > 1, v152 + 1, 1, v149);
      *uint64_t v148 = v149;
    }
    *(void *)(v149 + 16) = v152 + 1;
    sub_24992F668(v139, (uint64_t)v252 + v149 + v152 * v254, (uint64_t (*)(void))type metadata accessor for Component);
    v146(&v256, 0);
    swift_release();
    swift_release();
    uint64_t v153 = v138;
    goto LABEL_57;
  }
  uint64_t v82 = *(unsigned __int8 *)(v55 + 80);
  uint64_t v229 = v82;
  uint64_t v241 = (v82 + 32) & ~v82;
  uint64_t v83 = v80 + v241;
  uint64_t v254 = *(void *)(v55 + 72);
  int v252 = v23 + 7;
  uint64_t v222 = v80;
  swift_bridgeObjectRetain();
  uint64_t v84 = v239;
  uint64_t v244 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 6);
  uint64_t v85 = (uint64_t)v249;
  while (1)
  {
    uint64_t v86 = v248;
    sub_2498D6084(v83, v248, qword_2696DF810);
    uint64_t v87 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))*v252;
    uint64_t v88 = 1;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))*v252)(v86, 0, 1, v250);
    uint64_t v89 = *(void *)(*v246 + 16);
    if (v89)
    {
      uint64_t v90 = v240;
      sub_24992ECE8(*v246 + v241 + (v89 - 1) * v254, v240, (uint64_t (*)(void))type metadata accessor for Component);
      sub_2498D6084(v90, v84, qword_2696DF810);
      sub_24992EC88(v90, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v88 = 0;
    }
    uint64_t v91 = v250;
    uint64_t v247 = v87;
    v87(v84, v88, 1, v250);
    uint64_t v92 = v85 + *(int *)(v245 + 48);
    sub_2498D6084(v86, v85, &qword_2696DFE00);
    sub_2498D6084(v84, v92, &qword_2696DFE00);
    uint64_t v93 = *v244;
    if ((*v244)(v85, 1, v91) == 1) {
      break;
    }
    uint64_t v94 = v238;
    sub_2498D6084(v85, v238, &qword_2696DFE00);
    if (v93(v92, 1, v91) == 1)
    {
      uint64_t v95 = v239;
      sub_2498D60E8(v239, &qword_2696DFE00);
      sub_2498D60E8(v248, &qword_2696DFE00);
      uint64_t v96 = v94;
      uint64_t v84 = v95;
      sub_2498D60E8(v96, qword_2696DF810);
      goto LABEL_17;
    }
    uint64_t v97 = v253;
    sub_249882788(v92, v253, qword_2696DF810);
    sub_249AEB808();
    sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
    char v98 = sub_249AED088();
    sub_2498D60E8(v97, qword_2696DF810);
    uint64_t v99 = v239;
    sub_2498D60E8(v239, &qword_2696DFE00);
    sub_2498D60E8(v248, &qword_2696DFE00);
    uint64_t v100 = v94;
    uint64_t v84 = v99;
    sub_2498D60E8(v100, qword_2696DF810);
    sub_2498D60E8(v85, &qword_2696DFE00);
    if (v98) {
      goto LABEL_28;
    }
LABEL_18:
    v83 += v254;
    if (!--v81) {
      goto LABEL_40;
    }
  }
  sub_2498D60E8(v84, &qword_2696DFE00);
  sub_2498D60E8(v86, &qword_2696DFE00);
  if (v93(v92, 1, v91) != 1)
  {
LABEL_17:
    sub_2498D60E8((uint64_t)v249, &qword_2696DFDF8);
    goto LABEL_18;
  }
  sub_2498D60E8((uint64_t)v249, &qword_2696DFE00);
LABEL_28:
  uint64_t v101 = swift_bridgeObjectRelease();
  MEMORY[0x270FA5388](v101);
  uint64_t v102 = v237;
  *(&v219 - 2) = v237;
  uint64_t v103 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  *(&v219 - 1) = v103;
  uint64_t v104 = swift_getKeyPath();
  MEMORY[0x270FA5388](v104);
  *(&v219 - 2) = v102;
  *(&v219 - 1) = v103;
  uint64_t v240 = v103;
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v249 = *(char **)(v256 + 16);
  if (!v249)
  {
LABEL_40:
    swift_bridgeObjectRelease();
    uint64_t v55 = v224;
    goto LABEL_41;
  }
  uint64_t v105 = 0;
  uint64_t v239 = v256;
  uint64_t v106 = v256 + v241;
  uint64_t v107 = (uint64_t)v228;
  uint64_t v108 = v233;
  uint64_t v109 = v232;
  uint64_t v110 = v250;
  while (1)
  {
    sub_2498D6084(v106, v109, qword_2696DF810);
    uint64_t v111 = 1;
    v247(v109, 0, 1, v110);
    uint64_t v112 = *(void *)(*v246 + 16);
    if (v112)
    {
      uint64_t v113 = v234;
      sub_24992ECE8(*v246 + v241 + (v112 - 1) * v254, v234, (uint64_t (*)(void))type metadata accessor for Component);
      sub_2498D6084(v113, v108, qword_2696DF810);
      sub_24992EC88(v113, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v111 = 0;
    }
    v247(v108, v111, 1, v110);
    uint64_t v114 = v107 + *(int *)(v245 + 48);
    sub_2498D6084(v109, v107, &qword_2696DFE00);
    sub_2498D6084(v108, v114, &qword_2696DFE00);
    if (v93(v107, 1, v110) == 1) {
      break;
    }
    uint64_t v115 = v110;
    uint64_t v116 = v230;
    sub_2498D6084(v107, v230, &qword_2696DFE00);
    if (v93(v114, 1, v115) == 1)
    {
      uint64_t v108 = v233;
      sub_2498D60E8(v233, &qword_2696DFE00);
      uint64_t v109 = v232;
      sub_2498D60E8(v232, &qword_2696DFE00);
      sub_2498D60E8(v116, qword_2696DF810);
      uint64_t v110 = v250;
      goto LABEL_31;
    }
    uint64_t v117 = v253;
    sub_249882788(v114, v253, qword_2696DF810);
    sub_249AEB808();
    sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
    LODWORD(v248) = sub_249AED088();
    uint64_t v118 = v117;
    uint64_t v107 = (uint64_t)v228;
    sub_2498D60E8(v118, qword_2696DF810);
    uint64_t v108 = v233;
    sub_2498D60E8(v233, &qword_2696DFE00);
    uint64_t v109 = v232;
    sub_2498D60E8(v232, &qword_2696DFE00);
    sub_2498D60E8(v116, qword_2696DF810);
    sub_2498D60E8(v107, &qword_2696DFE00);
    uint64_t v110 = v250;
    if (v248) {
      goto LABEL_75;
    }
LABEL_32:
    ++v105;
    v106 += v254;
    if (v249 == (char *)v105) {
      goto LABEL_40;
    }
  }
  sub_2498D60E8(v108, &qword_2696DFE00);
  sub_2498D60E8(v109, &qword_2696DFE00);
  if (v93(v114, 1, v110) != 1)
  {
LABEL_31:
    sub_2498D60E8(v107, &qword_2696DFDF8);
    goto LABEL_32;
  }
  sub_2498D60E8(v107, &qword_2696DFE00);
LABEL_75:
  swift_bridgeObjectRelease();
  uint64_t v184 = v220;
  sub_24992ECE8(v235, v220, (uint64_t (*)(void))type metadata accessor for Component);
  unint64_t v185 = v246;
  swift_beginAccess();
  unint64_t v186 = *v185;
  char v187 = swift_isUniquelyReferenced_nonNull_native();
  *unint64_t v185 = v186;
  if ((v187 & 1) == 0)
  {
    unint64_t v186 = sub_2498AB974(0, *(void *)(v186 + 16) + 1, 1, v186);
    *uint64_t v246 = v186;
  }
  uint64_t v143 = v237;
  uint64_t v188 = v240;
  unint64_t v190 = *(void *)(v186 + 16);
  unint64_t v189 = *(void *)(v186 + 24);
  uint64_t v238 = v105;
  if (v190 >= v189 >> 1)
  {
    unint64_t v186 = sub_2498AB974(v189 > 1, v190 + 1, 1, v186);
    *uint64_t v246 = v186;
  }
  *(void *)(v186 + 16) = v190 + 1;
  uint64_t v191 = v241;
  sub_24992F668(v184, v186 + v241 + v190 * v254, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v192 = swift_endAccess();
  MEMORY[0x270FA5388](v192);
  *(&v219 - 2) = v143;
  *(&v219 - 1) = v188;
  uint64_t v193 = swift_getKeyPath();
  MEMORY[0x270FA5388](v193);
  *(&v219 - 2) = v143;
  *(&v219 - 1) = v188;
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v194 = *(void *)(*v246 + 16);
  if (v194)
  {
    uint64_t v195 = *v246 + v191;
    sub_249AEB808();
    swift_bridgeObjectRetain();
    uint64_t v196 = 0;
    uint64_t v197 = v253;
    uint64_t v198 = (uint64_t)v251;
    while (1)
    {
      sub_2498D6084(v195, v197, qword_2696DF810);
      sub_2498D6084(v225, v198, qword_2696DF810);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v199 = sub_249AED088();
      sub_2498D60E8(v198, qword_2696DF810);
      sub_2498D60E8(v197, qword_2696DF810);
      if (v199) {
        break;
      }
      ++v196;
      v195 += v254;
      if (v194 == v196)
      {
        uint64_t v196 = 0;
        break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v200 = v235;
    uint64_t v188 = v240;
  }
  else
  {
    uint64_t v196 = 0;
    uint64_t v200 = v235;
  }
  uint64_t v201 = sub_24992EC88(v225, (uint64_t (*)(void))type metadata accessor for Component);
  MEMORY[0x270FA5388](v201);
  *(&v219 - 2) = v143;
  *(&v219 - 1) = v188;
  uint64_t v202 = swift_getKeyPath();
  MEMORY[0x270FA5388](v202);
  *(&v219 - 2) = v143;
  *(&v219 - 1) = v188;
  swift_getKeyPath();
  uint64_t v256 = v196;
  uint64_t v153 = v236;
  swift_retain();
  sub_249AEB9F8();
  uint64_t result = sub_24992ECE8(v200, v223, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v203 = v238 + 1;
  if (__OFADD__(v238, 1))
  {
    __break(1u);
    goto LABEL_94;
  }
  MEMORY[0x270FA5388](result);
  *(&v219 - 2) = v143;
  *(&v219 - 1) = v188;
  uint64_t v204 = swift_getKeyPath();
  MEMORY[0x270FA5388](v204);
  *(&v219 - 2) = v143;
  *(&v219 - 1) = v188;
  swift_getKeyPath();
  uint64_t result = sub_249AEB9D8();
  if (*(void *)(*(void *)v205 + 16) < v203)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  if ((v203 & 0x8000000000000000) == 0)
  {
    uint64_t v206 = (void (*)(uint64_t *, void))result;
    uint64_t v207 = v221;
    sub_24992F668(v223, v221, (uint64_t (*)(void))type metadata accessor for Component);
    sub_24992BA38(v203, v203, v207);
    v206(&v256, 0);
    swift_release();
    swift_release();
    goto LABEL_57;
  }
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
  return result;
}

uint64_t sub_24991F668(uint64_t a1, uint64_t a2, int a3)
{
  int v73 = a3;
  uint64_t v86 = a2;
  uint64_t v5 = sub_249AEC408();
  uint64_t v75 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v77 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Component();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v87 = (uint64_t)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v74 = (uint64_t)&v68 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC98);
  uint64_t v84 = *(void *)(v15 - 8);
  uint64_t v85 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v78 = (uint64_t (*)(void))((char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDE0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v83 = (uint64_t)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v68 - v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v68 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v68 - v26;
  uint64_t v28 = v3 + *(void *)(*(void *)v3 + 144);
  uint64_t result = swift_beginAccess();
  uint64_t v82 = v28;
  uint64_t v30 = *(void *)v28;
  uint64_t v31 = *(void *)(*(void *)v28 + 16);
  if (v31)
  {
    uint64_t v69 = v7;
    uint64_t v70 = v5;
    uint64_t v76 = v10;
    uint64_t v79 = v21;
    uint64_t v80 = v3;
    unint64_t v71 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v32 = v30 + v71;
    uint64_t v33 = v30;
    sub_249AEB808();
    uint64_t v72 = v11;
    uint64_t v88 = *(void *)(v11 + 72);
    uint64_t v81 = v33;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2498D6084(v32, (uint64_t)v27, qword_2696DF810);
      uint64_t v34 = a1;
      sub_2498D6084(a1, (uint64_t)v25, qword_2696DF810);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v35 = sub_249AED088();
      sub_2498D60E8((uint64_t)v25, qword_2696DF810);
      sub_2498D60E8((uint64_t)v27, qword_2696DF810);
      if (v35) {
        break;
      }
      v32 += v88;
      if (!--v31) {
        return swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t)v79;
    uint64_t v37 = v80;
    sub_249920178(v86, v80, a1, (uint64_t)v79);
    uint64_t v38 = v83;
    sub_2498D6084(v36, v83, &qword_2696DFDE0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v38, 1, v85) == 1)
    {
      uint64_t v39 = sub_2498D60E8(v38, &qword_2696DFDE0);
      MEMORY[0x270FA5388](v39);
      *(&v68 - 2) = a1;
      uint64_t v40 = v82;
      swift_beginAccess();
      uint64_t result = sub_24992BC58((uint64_t (*)(unint64_t))sub_249935078);
      uint64_t v86 = 0;
      int64_t v41 = *(void *)(*(void *)v40 + 16);
      if (v41 < result)
      {
        __break(1u);
      }
      else
      {
        sub_24992DCDC(result, v41);
        uint64_t v42 = swift_endAccess();
        MEMORY[0x270FA5388](v42);
        uint64_t v43 = v76;
        *(&v68 - 2) = v76;
        uint64_t v44 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
        *(&v68 - 1) = v44;
        uint64_t KeyPath = swift_getKeyPath();
        MEMORY[0x270FA5388](KeyPath);
        *(&v68 - 2) = v43;
        *(&v68 - 1) = v44;
        uint64_t v85 = v44;
        swift_getKeyPath();
        sub_249AEB9E8();
        swift_release();
        swift_release();
        uint64_t v46 = *(void *)(*(void *)v82 + 16);
        if (v46)
        {
          uint64_t v47 = *(void *)v82 + v71;
          uint64_t v84 = *(void *)v82;
          swift_bridgeObjectRetain();
          uint64_t v48 = 0;
          while (1)
          {
            sub_2498D6084(v47, (uint64_t)v27, qword_2696DF810);
            sub_2498D6084(v87, (uint64_t)v25, qword_2696DF810);
            char v49 = sub_249AED088();
            sub_2498D60E8((uint64_t)v25, qword_2696DF810);
            sub_2498D60E8((uint64_t)v27, qword_2696DF810);
            if (v49) {
              break;
            }
            ++v48;
            v47 += v88;
            if (v46 == v48)
            {
              uint64_t v48 = 0;
              break;
            }
          }
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v48 = 0;
        }
        uint64_t v55 = sub_24992EC88(v87, (uint64_t (*)(void))type metadata accessor for Component);
        MEMORY[0x270FA5388](v55);
        uint64_t v56 = v76;
        uint64_t v57 = v85;
        *(&v68 - 2) = v76;
        *(&v68 - 1) = v57;
        uint64_t v58 = swift_getKeyPath();
        MEMORY[0x270FA5388](v58);
        *(&v68 - 2) = v56;
        *(&v68 - 1) = v57;
        swift_getKeyPath();
        v89[0] = v48;
        swift_retain();
        uint64_t v59 = sub_249AEB9F8();
        uint64_t v60 = MEMORY[0x270FA5388](v59);
        *(&v68 - 2) = a1;
        MEMORY[0x270FA5388](v60);
        *(&v68 - 2) = v56;
        *(&v68 - 1) = v57;
        uint64_t v61 = swift_getKeyPath();
        MEMORY[0x270FA5388](v61);
        *(&v68 - 2) = v56;
        *(&v68 - 1) = v57;
        swift_getKeyPath();
        uint64_t v62 = (void (*)(uint64_t *, void))sub_249AEB9D8();
        uint64_t v64 = v63;
        uint64_t result = sub_24992BC58((uint64_t (*)(unint64_t))sub_249935774);
        int64_t v65 = *(void *)(*(void *)v64 + 16);
        if (v65 >= result)
        {
          sub_24992DCDC(result, v65);
          v62(v89, 0);
          swift_release();
          swift_release();
          return sub_2498D60E8((uint64_t)v79, &qword_2696DFDE0);
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v50 = v78;
      sub_249882788(v38, (uint64_t)v78, &qword_2696DFC98);
      uint64_t v51 = v77;
      sub_249921378(v50, v77);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v51, 1, v76) == 1)
      {
        sub_2498D60E8((uint64_t)v50, &qword_2696DFC98);
        sub_2498D60E8(v36, &qword_2696DFDE0);
        return sub_2498D60E8(v51, &qword_2696DF7F0);
      }
      else
      {
        uint64_t v52 = v74;
        uint64_t v53 = sub_24992F668(v51, v74, (uint64_t (*)(void))type metadata accessor for Component);
        char v54 = v73;
        if (v73) {
          uint64_t v53 = swift_retain();
        }
        uint64_t v66 = v75;
        MEMORY[0x270FA5388](v53);
        *(&v68 - 4) = v34;
        *((unsigned char *)&v68 - 24) = v54 & 1;
        *(&v68 - 2) = v37;
        *(&v68 - 1) = v52;
        swift_allocObject();
        swift_weakInit();
        swift_retain();
        char v67 = v69;
        sub_249AEC3E8();
        sub_249AEBCA8();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v66 + 8))(v67, v70);
        sub_2498D60E8((uint64_t)v50, &qword_2696DFC98);
        sub_2498D60E8((uint64_t)v79, &qword_2696DFDE0);
        sub_24992EC88(v52, (uint64_t (*)(void))type metadata accessor for Component);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_249920178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v54 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v60 = (uint64_t)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v54 - v16;
  uint64_t v18 = type metadata accessor for Component();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v61 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v54 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)v54 - v24;
  uint64_t v27 = v26;
  sub_2498D6084(a1, (uint64_t)v17, &qword_2696DF7F0);
  uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  uint64_t v63 = v18;
  uint64_t v59 = v28;
  if (v28((uint64_t)v17, 1, v18) == 1)
  {
    sub_2498D60E8((uint64_t)v17, &qword_2696DF7F0);
    uint64_t v29 = a4;
    uint64_t v30 = v62;
  }
  else
  {
    uint64_t v57 = v27 + 48;
    sub_24992F668((uint64_t)v17, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v31 = *(void *)(*(void *)a2 + 144);
    uint64_t v56 = a2;
    uint64_t v32 = (uint64_t *)(a2 + v31);
    swift_beginAccess();
    uint64_t v33 = *v32;
    uint64_t v34 = *(void *)(*v32 + 16);
    uint64_t v58 = a4;
    if (v34)
    {
      uint64_t v35 = v33 + ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80));
      sub_249AEB808();
      v54[1] = v33;
      uint64_t v55 = v27;
      uint64_t v36 = *(void *)(v27 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_24992ECE8(v35, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Component);
        sub_2498D6084((uint64_t)v23, (uint64_t)v12, qword_2696DF810);
        sub_2498D6084((uint64_t)v25, (uint64_t)v10, qword_2696DF810);
        sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        char v37 = sub_249AED088();
        sub_2498D60E8((uint64_t)v10, qword_2696DF810);
        sub_2498D60E8((uint64_t)v12, qword_2696DF810);
        if (v37) {
          break;
        }
        sub_24992EC88((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for Component);
        v35 += v36;
        if (!--v34)
        {
          uint64_t v38 = 1;
          uint64_t v30 = v62;
          uint64_t v39 = v60;
          goto LABEL_10;
        }
      }
      uint64_t v39 = v60;
      sub_24992F668((uint64_t)v23, v60, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v38 = 0;
      uint64_t v30 = v62;
LABEL_10:
      uint64_t v27 = v55;
      uint64_t v40 = v59;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = 1;
      uint64_t v30 = v62;
      uint64_t v40 = v59;
      uint64_t v39 = v60;
    }
    uint64_t v41 = v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56))(v39, v38, 1, v63);
    swift_bridgeObjectRelease();
    LODWORD(v41) = v40(v39, 1, v41);
    sub_2498D60E8(v39, &qword_2696DF7F0);
    if (v41 == 1)
    {
      sub_24992EC88((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v29 = v58;
    }
    else
    {
      sub_2498D6084((uint64_t)v25, (uint64_t)v12, qword_2696DF810);
      sub_2498D6084(v30, (uint64_t)v10, qword_2696DF810);
      sub_249AEB808();
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v42 = sub_249AED088();
      sub_2498D60E8((uint64_t)v10, qword_2696DF810);
      sub_2498D60E8((uint64_t)v12, qword_2696DF810);
      uint64_t v29 = v58;
      if ((v42 & 1) == 0)
      {
        sub_2498D6084((uint64_t)v25, v58, qword_2696DF810);
        sub_24992EC88((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v29, 0, 2, v52);
        goto LABEL_19;
      }
      sub_24992EC88((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Component);
    }
  }
  uint64_t v43 = sub_2498D6084(v30, (uint64_t)v12, qword_2696DF810);
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = v63;
  v54[-2] = v63;
  uint64_t v45 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  v54[-1] = v45;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  v54[-2] = v44;
  v54[-1] = v45;
  swift_getKeyPath();
  uint64_t v47 = (uint64_t)v61;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  sub_2498D6084(v47, (uint64_t)v10, qword_2696DF810);
  sub_24992EC88(v47, (uint64_t (*)(void))type metadata accessor for Component);
  sub_249AEB808();
  sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  char v48 = sub_249AED088();
  sub_2498D60E8((uint64_t)v10, qword_2696DF810);
  sub_2498D60E8((uint64_t)v12, qword_2696DF810);
  if ((v48 & 1) == 0)
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v29, 1, 1, v50);
  }
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v29, 2, 2, v49);
LABEL_19:
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC98);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v29, 0, 1, v53);
}

uint64_t sub_249920998(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v11 - v8;
  sub_2498D6084(a1, (uint64_t)&v11 - v8, qword_2696DF810);
  sub_2498D6084(a2, (uint64_t)v7, qword_2696DF810);
  sub_249AEB808();
  sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  LOBYTE(a2) = sub_249AED088();
  sub_2498D60E8((uint64_t)v7, qword_2696DF810);
  sub_2498D60E8((uint64_t)v9, qword_2696DF810);
  return a2 & 1;
}

uint64_t sub_249920AD8(uint64_t a1, int a2, uint64_t *a3, uint64_t a4)
{
  int v67 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v61 - v12;
  uint64_t v14 = type metadata accessor for Component();
  uint64_t v62 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v68 = (char *)&v61 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v61 - v20;
  sub_24992ECE8(a4, (uint64_t)&v61 - v20, (uint64_t (*)(void))type metadata accessor for Component);
  sub_24991B7E0((uint64_t)v21);
  uint64_t v71 = a1;
  uint64_t v22 = (uint64_t *)((char *)a3 + *(void *)(*a3 + 144));
  swift_beginAccess();
  uint64_t result = sub_24992BC58((uint64_t (*)(unint64_t))sub_249935774);
  int64_t v24 = *(void *)(*v22 + 16);
  if (v24 < result)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    return result;
  }
  uint64_t v64 = v4;
  uint64_t v65 = a1;
  uint64_t v63 = v17;
  sub_24992DCDC(result, v24);
  uint64_t v25 = swift_endAccess();
  MEMORY[0x270FA5388](v25);
  *(&v61 - 2) = v14;
  uint64_t v26 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  *(&v61 - 1) = v26;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  uint64_t v69 = v26;
  uint64_t v70 = v14;
  *(&v61 - 2) = v14;
  *(&v61 - 1) = v26;
  swift_getKeyPath();
  uint64_t v28 = (uint64_t)v68;
  uint64_t v66 = a3;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v29 = *v22;
  uint64_t v73 = *(void *)(*v22 + 16);
  if (v73)
  {
    uint64_t v30 = v62;
    uint64_t v31 = v29 + ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80));
    sub_249AEB808();
    uint64_t v32 = *(void *)(v30 + 72);
    uint64_t v62 = v29;
    swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    while (1)
    {
      sub_2498D6084(v31, (uint64_t)v13, qword_2696DF810);
      uint64_t v34 = v28;
      sub_2498D6084(v28, (uint64_t)v11, qword_2696DF810);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v35 = sub_249AED088();
      sub_2498D60E8((uint64_t)v11, qword_2696DF810);
      sub_2498D60E8((uint64_t)v13, qword_2696DF810);
      if (v35) {
        break;
      }
      ++v33;
      v31 += v32;
      uint64_t v28 = v34;
      if (v73 == v33)
      {
        uint64_t v33 = 0;
        goto LABEL_9;
      }
    }
    uint64_t v28 = v34;
LABEL_9:
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = 0;
  }
  uint64_t v36 = v66;
  uint64_t v37 = v70;
  uint64_t v38 = sub_24992EC88(v28, (uint64_t (*)(void))type metadata accessor for Component);
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = v69;
  *(&v61 - 2) = v37;
  *(&v61 - 1) = v39;
  uint64_t v40 = swift_getKeyPath();
  MEMORY[0x270FA5388](v40);
  *(&v61 - 2) = v37;
  *(&v61 - 1) = v39;
  swift_getKeyPath();
  v72[0] = v33;
  swift_retain();
  uint64_t v41 = sub_249AEB9F8();
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  *(&v61 - 2) = v65;
  MEMORY[0x270FA5388](v42);
  *(&v61 - 2) = v37;
  *(&v61 - 1) = v39;
  uint64_t v43 = swift_getKeyPath();
  MEMORY[0x270FA5388](v43);
  *(&v61 - 2) = v37;
  *(&v61 - 1) = v39;
  swift_getKeyPath();
  uint64_t v44 = (void (*)(uint64_t *, void))sub_249AEB9D8();
  uint64_t v46 = v45;
  uint64_t result = sub_24992BC58((uint64_t (*)(unint64_t))sub_249935774);
  int64_t v47 = *(void *)(*(void *)v46 + 16);
  if (v47 < result) {
    goto LABEL_19;
  }
  sub_24992DCDC(result, v47);
  v44(v72, 0);
  swift_release();
  uint64_t v48 = swift_release();
  char v49 = 0;
  char v50 = v67;
  if (v67) {
    char v49 = *((unsigned char *)v36 + *(void *)(*v36 + 104)) ^ 1;
  }
  MEMORY[0x270FA5388](v48);
  uint64_t v52 = v69;
  uint64_t v51 = v70;
  *(&v61 - 2) = v70;
  *(&v61 - 1) = v52;
  uint64_t v53 = swift_getKeyPath();
  MEMORY[0x270FA5388](v53);
  *(&v61 - 2) = v51;
  *(&v61 - 1) = v52;
  swift_getKeyPath();
  LOBYTE(v72[0]) = v49 & 1;
  swift_retain();
  uint64_t v54 = sub_249AEB9F8();
  MEMORY[0x270FA5388](v54);
  *(&v61 - 2) = v51;
  *(&v61 - 1) = v52;
  uint64_t v55 = swift_getKeyPath();
  MEMORY[0x270FA5388](v55);
  *(&v61 - 2) = v51;
  *(&v61 - 1) = v52;
  swift_getKeyPath();
  LOBYTE(v72[0]) = v50 & 1;
  swift_retain();
  uint64_t v56 = sub_249AEB9F8();
  MEMORY[0x270FA5388](v56);
  *(&v61 - 2) = v51;
  *(&v61 - 1) = v52;
  uint64_t v57 = swift_getKeyPath();
  MEMORY[0x270FA5388](v57);
  *(&v61 - 2) = v51;
  *(&v61 - 1) = v52;
  swift_getKeyPath();
  uint64_t v58 = (uint64_t)v63;
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v59 = *v36;
  if (*(uint64_t *)((char *)v36 + *(void *)(*v36 + 200)))
  {
    swift_retain();
    sub_249AECD88();
    swift_release();
    uint64_t v59 = *v36;
  }
  uint64_t v60 = *(void (**)(uint64_t))((char *)v36 + *(void *)(v59 + 112));
  if (v60)
  {
    swift_retain();
    v60(v58);
    sub_2498B9AB8((uint64_t)v60);
  }
  return sub_24992EC88(v58, (uint64_t (*)(void))type metadata accessor for Component);
}

uint64_t sub_249921378@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v128 = a1;
  uint64_t v121 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDC8);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v124 = (uint64_t)&v119 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC98);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v120 = (uint64_t)&v119 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v133 = (unint64_t)&v119 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v119 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v119 - v13;
  uint64_t v15 = type metadata accessor for Component();
  unint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v130 = (uint64_t)&v119 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v129 = (uint64_t)&v119 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v123 = (uint64_t)&v119 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v122 = (uint64_t)&v119 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v126 = (uint64_t)&v119 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v119 - v28;
  uint64_t v137 = v27;
  uint64_t v30 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  uint64_t v138 = v30;
  swift_getKeyPath();
  uint64_t v135 = v15;
  uint64_t v136 = v30;
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  unint64_t v31 = *(void *)(v139[0] + 16);
  uint64_t v32 = swift_bridgeObjectRelease();
  if (v31 < 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v121, 1, 1, v15);
  }
  MEMORY[0x270FA5388](v32);
  *(&v119 - 2) = v15;
  *(&v119 - 1) = v30;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v119 - 2) = v15;
  *(&v119 - 1) = v30;
  swift_getKeyPath();
  uint64_t v134 = v29;
  sub_249AEB9E8();
  swift_release();
  uint64_t v34 = swift_release();
  MEMORY[0x270FA5388](v34);
  *(&v119 - 2) = v15;
  *(&v119 - 1) = v30;
  uint64_t v35 = swift_getKeyPath();
  MEMORY[0x270FA5388](v35);
  unint64_t v125 = (void *)v15;
  *(&v119 - 2) = v15;
  *(&v119 - 1) = v30;
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v36 = *(void *)(v139[0] + 16);
  uint64_t v127 = v2;
  unint64_t v131 = v16;
  uint64_t v132 = v30;
  if (v36)
  {
    unint64_t v37 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v119 = v139[0];
    uint64_t v38 = v139[0] + v37;
    sub_249AEB808();
    uint64_t v39 = 0;
    uint64_t v40 = *(void *)(v16 + 72);
    while (1)
    {
      sub_2498D6084(v38, (uint64_t)v14, qword_2696DF810);
      sub_2498D6084((uint64_t)v134, (uint64_t)v12, qword_2696DF810);
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v41 = sub_249AED088();
      sub_2498D60E8((uint64_t)v12, qword_2696DF810);
      sub_2498D60E8((uint64_t)v14, qword_2696DF810);
      if (v41) {
        break;
      }
      ++v39;
      v38 += v40;
      if (v36 == v39)
      {
        swift_bridgeObjectRelease();
        uint64_t v39 = 0;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
LABEL_10:
    unint64_t v16 = v131;
    uint64_t v30 = v132;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v39 = 0;
  }
  sub_24992EC88((uint64_t)v134, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v43 = v120;
  sub_2498D6084((uint64_t)v128, v120, &qword_2696DFC98);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v43, 2, v44);
  if (result)
  {
    if (result == 1) {
      uint64_t v45 = -1;
    }
    else {
      uint64_t v45 = 1;
    }
LABEL_22:
    uint64_t v56 = v125;
LABEL_23:
    uint64_t v120 = v45;
    unint64_t v57 = v39 + v45;
    BOOL v58 = __OFADD__(v39, v45);
    if (!__OFADD__(v39, v45))
    {
      if ((v57 & 0x8000000000000000) == 0)
      {
        MEMORY[0x270FA5388](result);
        *(&v119 - 2) = (uint64_t)v56;
        *(&v119 - 1) = v30;
        uint64_t v59 = swift_getKeyPath();
        MEMORY[0x270FA5388](v59);
        uint64_t v61 = v60;
        *(&v119 - 2) = (uint64_t)v60;
        *(&v119 - 1) = v30;
        swift_getKeyPath();
        sub_249AEB9E8();
        swift_release();
        swift_release();
        unint64_t v62 = *(void *)(v139[0] + 16);
        uint64_t result = swift_bridgeObjectRelease();
        if (v57 < v62) {
          goto LABEL_53;
        }
        uint64_t v134 = (char *)v39;
        unint64_t v63 = v57 + 1;
        if (!__OFADD__(v57, 1))
        {
          MEMORY[0x270FA5388](result);
          *(&v119 - 2) = (uint64_t)v61;
          *(&v119 - 1) = v30;
          uint64_t v64 = swift_getKeyPath();
          MEMORY[0x270FA5388](v64);
          *(&v119 - 2) = (uint64_t)v61;
          *(&v119 - 1) = v65;
          swift_getKeyPath();
          sub_249AEB9E8();
          swift_release();
          swift_release();
          uint64_t v66 = *(void *)(v139[0] + 16);
          uint64_t result = swift_bridgeObjectRelease();
          if (v63 != v66)
          {
            unint64_t v57 = v63 - v66;
            uint64_t v30 = v132;
            int v67 = v61;
            uint64_t v39 = (uint64_t)v134;
            goto LABEL_34;
          }
          goto LABEL_53;
        }
        goto LABEL_78;
      }
      int v67 = v56;
      while (1)
      {
LABEL_34:
        unint64_t v133 = v57;
        uint64_t v134 = (char *)v39;
        if ((v57 & 0x8000000000000000) != 0)
        {
          MEMORY[0x270FA5388](result);
          *(&v119 - 2) = (uint64_t)v67;
          *(&v119 - 1) = v30;
          uint64_t v87 = swift_getKeyPath();
          MEMORY[0x270FA5388](v87);
          uint64_t v88 = v67;
          *(&v119 - 2) = (uint64_t)v67;
          *(&v119 - 1) = v30;
          swift_getKeyPath();
          uint64_t result = sub_249AEB9D8();
          unint64_t v16 = *v89;
          if (!*(void *)(*v89 + 16)) {
            goto LABEL_72;
          }
          uint64_t v90 = (void (*)(void *, void))result;
          int v67 = v89;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          void *v67 = v16;
          if (result)
          {
            uint64_t v91 = *(void *)(v16 + 16);
            if (!v91) {
              goto LABEL_49;
            }
          }
          else
          {
            uint64_t result = sub_24996FFF8(v16);
            unint64_t v16 = result;
            void *v67 = result;
            uint64_t v91 = *(void *)(result + 16);
            if (!v91)
            {
LABEL_49:
              __break(1u);
LABEL_50:
              uint64_t v61 = v67;
              unint64_t v57 = v39 + v120;
              BOOL v58 = __OFADD__(v39, v120);
LABEL_53:
              if (!v58)
              {
                MEMORY[0x270FA5388](result);
                uint64_t v103 = v132;
                *(&v119 - 2) = (uint64_t)v61;
                *(&v119 - 1) = v103;
                uint64_t v104 = swift_getKeyPath();
                MEMORY[0x270FA5388](v104);
                *(&v119 - 2) = (uint64_t)v61;
                *(&v119 - 1) = v103;
                swift_getKeyPath();
                sub_249AEB9E8();
                swift_release();
                uint64_t result = swift_release();
                if ((v57 & 0x8000000000000000) == 0)
                {
                  if (v57 < *(void *)(v139[0] + 16))
                  {
                    uint64_t v105 = v121;
                    sub_24992ECE8(v139[0]+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v57, v121, (uint64_t (*)(void))type metadata accessor for Component);
                    swift_bridgeObjectRelease();
                    return (*(uint64_t (**)(uint64_t, void, uint64_t, void *))(v16 + 56))(v105, 0, 1, v61);
                  }
LABEL_77:
                  __break(1u);
LABEL_78:
                  __break(1u);
LABEL_79:
                  __break(1u);
                  goto LABEL_80;
                }
LABEL_76:
                __break(1u);
                goto LABEL_77;
              }
LABEL_75:
              __break(1u);
              goto LABEL_76;
            }
          }
          uint64_t v92 = v91 - 1;
          uint64_t v93 = v16
              + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80))
              + *(void *)(v131 + 72) * (v91 - 1);
          uint64_t v94 = v122;
          uint64_t v128 = (uint64_t (*)(void))type metadata accessor for Component;
          sub_24992F668(v93, v122, (uint64_t (*)(void))type metadata accessor for Component);
          *(void *)(v16 + 16) = v92;
          void *v67 = v16;
          uint64_t v95 = v126;
          sub_24992F668(v94, v126, (uint64_t (*)(void))type metadata accessor for Component);
          v90(v139, 0);
          swift_release();
          swift_release();
          uint64_t v96 = v123;
          uint64_t v97 = sub_24992ECE8(v95, v123, (uint64_t (*)(void))type metadata accessor for Component);
          MEMORY[0x270FA5388](v97);
          uint64_t v98 = v132;
          *(&v119 - 2) = (uint64_t)v88;
          *(&v119 - 1) = v98;
          uint64_t v99 = swift_getKeyPath();
          MEMORY[0x270FA5388](v99);
          uint64_t v100 = (uint64_t)v134;
          *(&v119 - 2) = (uint64_t)v88;
          *(&v119 - 1) = v98;
          swift_getKeyPath();
          uint64_t v101 = (void (*)(void *, void))sub_249AEB9D8();
          uint64_t v102 = v124;
          sub_24992F668(v96, v124, v128);
          sub_24992BA38(0, 0, v102);
          v101(v139, 0);
          swift_release();
          swift_release();
          uint64_t result = sub_24992EC88(v126, (uint64_t (*)(void))type metadata accessor for Component);
          BOOL v85 = __OFADD__(v100, 1);
          uint64_t v39 = v100 + 1;
          if (v85) {
            goto LABEL_73;
          }
          uint64_t v86 = 1;
          unint64_t v16 = v131;
          uint64_t v82 = v133;
          int v67 = v88;
        }
        else
        {
          if (!v57) {
            goto LABEL_50;
          }
          MEMORY[0x270FA5388](result);
          *(&v119 - 2) = (uint64_t)v67;
          *(&v119 - 1) = v30;
          uint64_t v68 = swift_getKeyPath();
          MEMORY[0x270FA5388](v68);
          *(&v119 - 2) = (uint64_t)v67;
          *(&v119 - 1) = v30;
          swift_getKeyPath();
          uint64_t result = sub_249AEB9D8();
          uint64_t v70 = *v69;
          if (!*(void *)(*v69 + 16))
          {
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            __break(1u);
LABEL_73:
            __break(1u);
            break;
          }
          uint64_t v71 = v30;
          uint64_t v72 = (void (*)(void *, void))result;
          uint64_t v128 = (uint64_t (*)(void))((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
          uint64_t v73 = v129;
          sub_24992ECE8((uint64_t)v128 + v70, v129, (uint64_t (*)(void))type metadata accessor for Component);
          sub_24992DCDC(0, 1);
          v72(v139, 0);
          swift_release();
          swift_release();
          uint64_t v74 = sub_24992ECE8(v73, v130, (uint64_t (*)(void))type metadata accessor for Component);
          MEMORY[0x270FA5388](v74);
          *(&v119 - 2) = (uint64_t)v67;
          *(&v119 - 1) = v71;
          uint64_t v75 = swift_getKeyPath();
          MEMORY[0x270FA5388](v75);
          *(&v119 - 2) = (uint64_t)v67;
          *(&v119 - 1) = v71;
          swift_getKeyPath();
          uint64_t v76 = (void (*)(void *, void))sub_249AEB9D8();
          uint64_t v78 = v77;
          unint64_t v79 = *v77;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *uint64_t v78 = v79;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v79 = sub_2498AB974(0, *(void *)(v79 + 16) + 1, 1, v79);
            *uint64_t v78 = v79;
          }
          uint64_t v82 = v133;
          uint64_t v81 = (uint64_t)v134;
          unint64_t v84 = *(void *)(v79 + 16);
          unint64_t v83 = *(void *)(v79 + 24);
          if (v84 >= v83 >> 1)
          {
            unint64_t v79 = sub_2498AB974(v83 > 1, v84 + 1, 1, v79);
            *uint64_t v78 = v79;
          }
          *(void *)(v79 + 16) = v84 + 1;
          unint64_t v16 = v131;
          sub_24992F668(v130, (uint64_t)v128 + v79 + *(void *)(v131 + 72) * v84, (uint64_t (*)(void))type metadata accessor for Component);
          v76(v139, 0);
          swift_release();
          swift_release();
          uint64_t result = sub_24992EC88(v129, (uint64_t (*)(void))type metadata accessor for Component);
          BOOL v85 = __OFSUB__(v81, 1);
          uint64_t v39 = v81 - 1;
          if (v85) {
            goto LABEL_71;
          }
          uint64_t v86 = -1;
          int v67 = v125;
        }
        unint64_t v57 = v82 + v86;
        uint64_t v30 = v132;
        if (!v57) {
          goto LABEL_50;
        }
      }
    }
    __break(1u);
    goto LABEL_75;
  }
  uint64_t v46 = sub_249882788(v43, v133, qword_2696DF810);
  MEMORY[0x270FA5388](v46);
  int64_t v47 = v125;
  *(&v119 - 2) = (uint64_t)v125;
  *(&v119 - 1) = v30;
  uint64_t v48 = swift_getKeyPath();
  MEMORY[0x270FA5388](v48);
  *(&v119 - 2) = (uint64_t)v47;
  *(&v119 - 1) = v30;
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v49 = *(void *)(v139[0] + 16);
  if (!v49)
  {
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t result = sub_2498D60E8(v133, qword_2696DF810);
    uint64_t v45 = 0;
    goto LABEL_22;
  }
  unint64_t v50 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v134 = (char *)v139[0];
  uint64_t v51 = v139[0] + v50;
  sub_249AEB808();
  uint64_t v52 = 0;
  uint64_t v53 = *(void *)(v16 + 72);
  uint64_t v54 = -v49;
  while (1)
  {
    sub_2498D6084(v51, (uint64_t)v14, qword_2696DF810);
    sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
    char v55 = sub_249AED088();
    sub_2498D60E8((uint64_t)v14, qword_2696DF810);
    if (v55) {
      break;
    }
    --v52;
    v51 += v53;
    if (v54 == v52)
    {
      swift_bridgeObjectRelease();
      unint64_t v16 = v131;
      uint64_t v30 = v132;
      goto LABEL_21;
    }
  }
  uint64_t v106 = swift_bridgeObjectRelease();
  uint64_t v107 = -(v39 + v52);
  MEMORY[0x270FA5388](v106);
  unint64_t v108 = v39;
  uint64_t v109 = v125;
  uint64_t v30 = v132;
  *(&v119 - 2) = (uint64_t)v125;
  *(&v119 - 1) = v30;
  uint64_t v110 = swift_getKeyPath();
  MEMORY[0x270FA5388](v110);
  uint64_t v111 = v109;
  *(&v119 - 2) = (uint64_t)v109;
  *(&v119 - 1) = v30;
  uint64_t v39 = v108;
  swift_getKeyPath();
  if (-v52 >= v108)
  {
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v116 = *(void *)(v139[0] + 16);
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v85 = __OFSUB__(v107, v116);
    uint64_t v115 = v107 - v116;
    unint64_t v16 = v131;
    if (!v85)
    {
      uint64_t v56 = v111;
      goto LABEL_63;
    }
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v112 = *(void *)(v139[0] + 16);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v113 = v112 - v52;
  unint64_t v16 = v131;
  if (__OFADD__(-v52, v112)) {
    goto LABEL_79;
  }
  BOOL v85 = __OFSUB__(v113, v39);
  uint64_t v114 = v113 - v39;
  if (v85)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  uint64_t v56 = v111;
  uint64_t v115 = v107;
  uint64_t v107 = v114;
LABEL_63:
  uint64_t v117 = v115;
  if (v115 < 0)
  {
    uint64_t v117 = -v115;
    if (__OFSUB__(0, v115)) {
      goto LABEL_82;
    }
  }
  uint64_t v118 = v107;
  if ((v107 & 0x8000000000000000) == 0 || (uint64_t v118 = -v107, !__OFSUB__(0, v107)))
  {
    uint64_t result = sub_2498D60E8(v133, qword_2696DF810);
    if (v117 >= v118) {
      uint64_t v45 = v107;
    }
    else {
      uint64_t v45 = v115;
    }
    goto LABEL_23;
  }
LABEL_83:
  __break(1u);
  return result;
}

uint64_t sub_2499225B0(uint64_t (*a1)(void), int a2)
{
  uint64_t v3 = v2;
  int v33 = a2;
  uint64_t v5 = sub_249AEC408();
  uint64_t v35 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Component();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v31 - v21;
  sub_249921378(a1, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    return sub_2498D60E8((uint64_t)v15, &qword_2696DF7F0);
  }
  uint64_t v32 = v5;
  sub_24992F668((uint64_t)v15, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v24 = sub_2498D6084((uint64_t)v22, (uint64_t)v12, qword_2696DF810);
  MEMORY[0x270FA5388](v24);
  *(&v31 - 2) = v16;
  uint64_t v25 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  *(&v31 - 1) = v25;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v31 - 2) = v16;
  *(&v31 - 1) = v25;
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  sub_2498D6084((uint64_t)v20, (uint64_t)v10, qword_2696DF810);
  sub_24992EC88((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for Component);
  sub_249AEB808();
  sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  LOBYTE(v25) = sub_249AED088();
  sub_2498D60E8((uint64_t)v10, qword_2696DF810);
  sub_2498D60E8((uint64_t)v12, qword_2696DF810);
  if (v25) {
    return sub_24992EC88((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Component);
  }
  char v27 = v33;
  if (v33) {
    swift_retain();
  }
  uint64_t v28 = v32;
  uint64_t v29 = v34;
  uint64_t v30 = sub_249AEC3F8();
  MEMORY[0x270FA5388](v30);
  *((unsigned char *)&v31 - 32) = v27 & 1;
  *(&v31 - 3) = v3;
  *(&v31 - 2) = (uint64_t)v22;
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_249AEBCA8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v28);
  sub_24992EC88((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Component);
  return swift_release();
}

uint64_t sub_249922B24(char a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for Component();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v24 - v11;
  sub_24992ECE8(a3, (uint64_t)&v24 - v11, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t v13 = sub_24991B7E0((uint64_t)v12);
  uint64_t v25 = v3;
  if (a1) {
    char v14 = *((unsigned char *)a2 + *(void *)(*a2 + 104)) ^ 1;
  }
  else {
    char v14 = 0;
  }
  MEMORY[0x270FA5388](v13);
  *(&v24 - 2) = v7;
  uint64_t v15 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  *(&v24 - 1) = v15;
  uint64_t KeyPath = swift_getKeyPath();
  MEMORY[0x270FA5388](KeyPath);
  *(&v24 - 2) = v7;
  *(&v24 - 1) = v15;
  swift_getKeyPath();
  char v27 = v14 & 1;
  swift_retain();
  uint64_t v17 = sub_249AEB9F8();
  MEMORY[0x270FA5388](v17);
  *(&v24 - 2) = v7;
  *(&v24 - 1) = v15;
  uint64_t v18 = swift_getKeyPath();
  MEMORY[0x270FA5388](v18);
  *(&v24 - 2) = v7;
  *(&v24 - 1) = v15;
  swift_getKeyPath();
  char v26 = a1 & 1;
  swift_retain();
  uint64_t v19 = sub_249AEB9F8();
  MEMORY[0x270FA5388](v19);
  *(&v24 - 2) = v7;
  *(&v24 - 1) = v15;
  uint64_t v20 = swift_getKeyPath();
  MEMORY[0x270FA5388](v20);
  *(&v24 - 2) = v7;
  *(&v24 - 1) = v15;
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v21 = *a2;
  if (*(uint64_t *)((char *)a2 + *(void *)(*a2 + 200)))
  {
    swift_retain();
    sub_249AECD88();
    swift_release();
    uint64_t v21 = *a2;
  }
  uint64_t v22 = *(void (**)(char *))((char *)a2 + *(void *)(v21 + 112));
  if (v22)
  {
    swift_retain();
    v22(v10);
    sub_2498B9AB8((uint64_t)v22);
  }
  return sub_24992EC88((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Component);
}

uint64_t sub_249922EF4()
{
  uint64_t v0 = type metadata accessor for Component();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    MEMORY[0x270FA5388](result);
    v9[-2] = v0;
    uint64_t v5 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
    v9[-1] = v5;
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v9[-2] = v0;
    v9[-1] = v5;
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    uint64_t v7 = v4 + *(void *)(*(void *)v4 + 144);
    swift_beginAccess();
    if (*(void *)(*(void *)v7 + 16)) {
      double v8 = *(double *)(v4 + *(void *)(*(void *)v4 + 152));
    }
    else {
      double v8 = 0.0;
    }
    sub_2499237FC(v8);
    swift_release();
    return sub_24992EC88((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for Component);
  }
  return result;
}

uint64_t sub_249923104()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_249AEC408();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Component();
  v10[2] = v6;
  uint64_t v7 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  v10[3] = v7;
  swift_getKeyPath();
  v10[0] = v6;
  v10[1] = v7;
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  uint64_t result = swift_release();
  if ((v11 & 1) == 0)
  {
    MEMORY[0x270FA5388](result);
    v10[-2] = v6;
    v10[-1] = v7;
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v10[-2] = v6;
    v10[-1] = v7;
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    uint64_t result = swift_release();
    if (v11 != 1)
    {
      if (*(void *)(v1 + *(void *)(*(void *)v1 + 200)))
      {
        swift_retain();
        sub_249AECD88();
        swift_release();
      }
      swift_allocObject();
      swift_weakInit();
      swift_retain();
      swift_retain();
      sub_249AEC3E8();
      sub_249AEBCA8();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_249923410(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for Component();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  double v8 = *(void (**)(char *))((char *)a1 + *(void *)(*a1 + 112));
  if (v8)
  {
    MEMORY[0x270FA5388](v4);
    v18[-2] = v3;
    uint64_t v9 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
    v18[1] = v1;
    uint64_t v10 = v9;
    v18[-1] = v9;
    uint64_t KeyPath = swift_getKeyPath();
    MEMORY[0x270FA5388](KeyPath);
    v18[-2] = v3;
    v18[-1] = v10;
    swift_getKeyPath();
    swift_retain();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    v8(v6);
    sub_2498B9AB8((uint64_t)v8);
    uint64_t v4 = sub_24992EC88((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Component);
    uint64_t v7 = *a1;
  }
  char v12 = *((unsigned char *)a1 + *(void *)(v7 + 104));
  MEMORY[0x270FA5388](v4);
  v18[-2] = v3;
  uint64_t v13 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
  v18[-1] = v13;
  uint64_t v14 = swift_getKeyPath();
  MEMORY[0x270FA5388](v14);
  v18[-2] = v3;
  v18[-1] = v13;
  swift_getKeyPath();
  BOOL v20 = (v12 & 1) == 0;
  swift_retain();
  uint64_t v15 = sub_249AEB9F8();
  MEMORY[0x270FA5388](v15);
  v18[-2] = v3;
  v18[-1] = v13;
  uint64_t v16 = swift_getKeyPath();
  MEMORY[0x270FA5388](v16);
  v18[-2] = v3;
  v18[-1] = v13;
  swift_getKeyPath();
  char v19 = 1;
  swift_retain();
  return sub_249AEB9F8();
}

uint64_t sub_24992378C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2499237FC(*(double *)(result + *(void *)(*(void *)result + 152)));
    return swift_release();
  }
  return result;
}

uint64_t sub_2499237FC(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_249AECD68();
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = sub_249AECD28();
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = *(void *)(*(void *)v1 + 200);
  if (*(void *)(v1 + v11))
  {
    swift_retain();
    sub_249AECD88();
    swift_release();
  }
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = sub_249934F6C;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2499D0768;
  aBlock[3] = &block_descriptor;
  _Block_copy(aBlock);
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_249934F8C((unint64_t *)&qword_2696E5800, MEMORY[0x263F8F030]);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDD0);
  sub_249934FD4();
  sub_249AED998();
  sub_249AECD98();
  swift_allocObject();
  uint64_t v13 = sub_249AECD78();
  swift_release();
  swift_release();
  *(void *)(v2 + v11) = v13;
  uint64_t result = swift_release();
  if (*(void *)(v2 + v11))
  {
    sub_2498DB20C(0, (unint64_t *)&qword_2696DFDD8);
    swift_retain();
    uint64_t v15 = (void *)sub_249AED808();
    sub_249AECD58();
    MEMORY[0x24C5ADF20](v7, a1);
    uint64_t v16 = *(void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v17 = v7;
    uint64_t v18 = v21;
    v16(v17, v21);
    sub_249AED7F8();
    swift_release();

    return ((uint64_t (*)(char *, uint64_t))v16)(v9, v18);
  }
  return result;
}

uint64_t sub_249923B48()
{
  uint64_t v0 = sub_249AEC408();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    swift_retain();
    sub_249AEC3E8();
    sub_249AEBCA8();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return swift_release();
  }
  return result;
}

uint64_t sub_249923D00()
{
  return sub_249AEB9F8();
}

uint64_t sub_249923E28()
{
  uint64_t v0 = type metadata accessor for Component();
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void (**)(char *))(result + *(void *)(*(void *)result + 120));
    if (v4)
    {
      MEMORY[0x270FA5388](result);
      *(&v7 - 2) = v0;
      uint64_t v5 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
      *(&v7 - 1) = v5;
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      *(&v7 - 2) = v0;
      *(&v7 - 1) = v5;
      swift_getKeyPath();
      swift_retain();
      sub_249AEB9E8();
      swift_release();
      swift_release();
      v4(v2);
      sub_2498B9AB8((uint64_t)v4);
      swift_release();
      return sub_24992EC88((uint64_t)v2, (uint64_t (*)(void))type metadata accessor for Component);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_24992403C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2499D1FF8();
  *a1 = result;
  return result;
}

uint64_t sub_249924068()
{
  return sub_2499D20AC();
}

uint64_t sub_249924094(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_249924168(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_2498DA218((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_2498DA218((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_249924168(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_249AED908();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_249924324(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_249AEDB48();
  if (!v8)
  {
    sub_249AEDC48();
    __break(1u);
LABEL_17:
    uint64_t result = sub_249AEDCB8();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_249924324(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_2499243BC(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_249924618(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_249924618(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_2499243BC(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_249924534(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_249AEDA88();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_249AEDC48();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_249AED218();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_249AEDCB8();
    __break(1u);
LABEL_14:
    uint64_t result = sub_249AEDC48();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_249924534(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE10);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_24992459C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_249AED268();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x24C5AE3B0](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_249924618(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE10);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_249924768(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (uint64_t (*)(uint64_t, void *))isStackAllocationSafe;
  v13[1] = *MEMORY[0x263EF8340];
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_249929868((void *)((char *)v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    size_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a2 = sub_249929868((unint64_t *)v11, v8, a3, v6);
    MEMORY[0x24C5B0110](v11, -1, -1);
  }
  return a2;
}

uint64_t sub_2499248E0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  uint64_t v8 = sub_249AEE388();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_249AEE0D8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_249AEE0D8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_249928B08(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_249924A90(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_249AEE338();
  sub_249AECF78();
  uint64_t v9 = sub_249AEE388();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v12 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v13 = *(void *)(v8 + 48);
    uint64_t v14 = (void *)(v13 + 16 * v11);
    BOOL v15 = *v14 == a2 && v14[1] == a3;
    if (v15 || (sub_249AEE0D8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      uint64_t v16 = (uint64_t *)(*(void *)(*v4 + 48) + 16 * v11);
      uint64_t v17 = v16[1];
      *a1 = *v16;
      a1[1] = v17;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v19 = ~v10;
    while (1)
    {
      unint64_t v11 = (v11 + 1) & v19;
      if (((*(void *)(v12 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        break;
      }
      uint64_t v20 = (void *)(v13 + 16 * v11);
      BOOL v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (sub_249AEE0D8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v23 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_249928CA4(a2, a3, v11, isUniquelyReferenced_nonNull_native);
  *uint64_t v4 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_249924C20(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v5;
  sub_249AEE338();
  char v32 = a4;
  swift_bridgeObjectRetain();
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_249AEE388();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v29 = v5;
  uint64_t v30 = a1;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v31 = ~v12;
    while (1)
    {
      uint64_t v14 = *(void *)(v10 + 48) + 24 * v13;
      uint64_t v15 = *(void *)v14;
      uint64_t v16 = *(void *)(v14 + 8);
      char v17 = *(unsigned char *)(v14 + 16);
      sub_24988D770(*(void *)v14, v16, v17);
      uint64_t v18 = Theme.ColorID.rawValue.getter();
      uint64_t v20 = v19;
      if (v18 == Theme.ColorID.rawValue.getter() && v20 == v21) {
        break;
      }
      char v22 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24988D788(v15, v16, v17);
      if (v22) {
        goto LABEL_9;
      }
      unint64_t v13 = (v13 + 1) & v31;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease_n();
    sub_24988D788(v15, v16, v17);
LABEL_9:
    swift_bridgeObjectRelease();
    sub_24988D788(a2, a3, v32);
    uint64_t v25 = *(void *)(*v29 + 48) + 24 * v13;
    uint64_t v26 = *(void *)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    *(void *)uint64_t v30 = *(void *)v25;
    *(void *)(v30 + 8) = v27;
    char v28 = *(unsigned char *)(v25 + 16);
    *(unsigned char *)(v30 + 16) = v28;
    sub_24988D770(v26, v27, v28);
    return 0;
  }
  else
  {
LABEL_7:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v33 = *v29;
    *uint64_t v29 = 0x8000000000000000;
    sub_24988D770(a2, a3, v32);
    sub_249928E40(a2, a3, v32, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v29 = v33;
    swift_bridgeObjectRelease();
    *(void *)uint64_t v30 = a2;
    *(void *)(v30 + 8) = a3;
    uint64_t result = 1;
    *(unsigned char *)(v30 + 16) = v32;
  }
  return result;
}

uint64_t sub_249924EAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_249AEE338();
  long long v5 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  long long v41 = *(_OWORD *)(a2 + 24);
  v42[0] = v5;
  uint64_t v35 = a2;
  long long v40 = *(_OWORD *)(a2 + 40);
  long long v7 = v5;
  swift_bridgeObjectRetain();
  sub_2499347DC((uint64_t)v42);
  sub_249AECF78();
  sub_249934808((uint64_t)v42);
  swift_bridgeObjectRetain();
  sub_24988B990((uint64_t)v39, v6);
  swift_bridgeObjectRelease();
  long long v8 = v41;
  sub_2499347DC((uint64_t)&v41);
  sub_249AECF78();
  sub_249934808((uint64_t)&v41);
  long long v9 = v40;
  sub_2499347DC((uint64_t)&v40);
  sub_249AECF78();
  sub_249934808((uint64_t)&v40);
  uint64_t v10 = sub_249AEE388();
  uint64_t v11 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v38 = v4;
  uint64_t v13 = v4 + 56;
  if (((*(void *)(v4 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39[0] = *(void *)v34;
    *(void *)uint64_t v34 = 0x8000000000000000;
    sub_2498DB3AC(v35);
    sub_249929098(v35, v12, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v34 = v39[0];
    swift_bridgeObjectRelease();
    long long v25 = *(_OWORD *)(v35 + 16);
    *(_OWORD *)a1 = *(_OWORD *)v35;
    *(_OWORD *)(a1 + 16) = v25;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(v35 + 32);
    *(void *)(a1 + 48) = *(void *)(v35 + 48);
    return 1;
  }
  uint64_t v37 = ~v11;
  while (1)
  {
    uint64_t v14 = (void *)(*(void *)(v38 + 48) + 56 * v12);
    uint64_t v16 = v14[2];
    uint64_t v15 = v14[3];
    uint64_t v17 = v14[4];
    uint64_t v18 = v14[5];
    uint64_t v19 = v14[6];
    BOOL v20 = *v14 == (void)v7 && v14[1] == *((void *)&v7 + 1);
    if (!v20 && (sub_249AEE0D8() & 1) == 0) {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((sub_2499FE45C(v16, v6) & 1) == 0
      || (v15 == (void)v8 ? (BOOL v21 = v17 == *((void *)&v8 + 1)) : (BOOL v21 = 0), !v21 && (sub_249AEE0D8() & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    if (v18 == (void)v9 && v19 == *((void *)&v9 + 1)) {
      break;
    }
    char v23 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_24;
    }
LABEL_4:
    unint64_t v12 = (v12 + 1) & v37;
    if (((*(void *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_24:
  swift_bridgeObjectRelease();
  sub_2498EB45C(v35);
  uint64_t v27 = (void *)(*(void *)(*(void *)v34 + 48) + 56 * v12);
  uint64_t v28 = v27[1];
  uint64_t v30 = v27[2];
  uint64_t v29 = v27[3];
  uint64_t v32 = v27[4];
  uint64_t v31 = v27[5];
  uint64_t v33 = v27[6];
  *(void *)a1 = *v27;
  *(void *)(a1 + 8) = v28;
  *(void *)(a1 + 16) = v30;
  *(void *)(a1 + 24) = v29;
  *(void *)(a1 + 32) = v32;
  *(void *)(a1 + 40) = v31;
  *(void *)(a1 + 48) = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return 0;
}

uint64_t sub_249925240(void *a1, void *a2)
{
  return sub_249925278(a1, a2, (unint64_t *)&unk_2696E59A0, 0x263F31EE8, &qword_2696DFD90);
}

uint64_t sub_24992525C(void *a1, void *a2)
{
  return sub_249925278(a1, a2, (unint64_t *)&unk_2696E5990, 0x263F31EE0, &qword_2696DFD98);
}

uint64_t sub_249925278(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  long long v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = sub_249AED9E8();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_2498DB20C(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v36;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_249AED9D8();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v26 = sub_2499258B4(v12, result + 1, a5, a3);
    uint64_t v37 = v26;
    unint64_t v27 = *(void *)(v26 + 16);
    if (*(void *)(v26 + 24) <= v27)
    {
      uint64_t v32 = v27 + 1;
      id v33 = v13;
      sub_2499266CC(v32, a5);
      uint64_t v28 = v37;
    }
    else
    {
      uint64_t v28 = v26;
      id v29 = v13;
    }
    sub_249926D98((uint64_t)v13, v28);
    *long long v8 = v28;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_249AED878();
    uint64_t v17 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v18 = v16 & ~v17;
    if ((*(void *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
    {
      sub_2498DB20C(0, a3);
      id v19 = *(id *)(*(void *)(v11 + 48) + 8 * v18);
      char v20 = sub_249AED888();

      if (v20)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v24 = *(void **)(*(void *)(*v5 + 48) + 8 * v18);
        *a1 = v24;
        id v25 = v24;
        return 0;
      }
      uint64_t v21 = ~v17;
      while (1)
      {
        unint64_t v18 = (v18 + 1) & v21;
        if (((*(void *)(v11 + 56 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          break;
        }
        id v22 = *(id *)(*(void *)(v11 + 48) + 8 * v18);
        char v23 = sub_249AED888();

        if (v23) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *v5;
    *long long v5 = 0x8000000000000000;
    id v31 = a2;
    sub_2499293D8((uint64_t)v31, v18, isUniquelyReferenced_nonNull_native, a5, a3);
    *long long v5 = v38;
    swift_bridgeObjectRelease();
    *a1 = v31;
  }
  return 1;
}

uint64_t sub_249925544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  sub_249AEE338();
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v10 = *(void *)(a2 + 40);
  uint64_t v52 = *(void *)(a2 + 56);
  uint64_t v53 = *(void *)(a2 + 48);
  int v51 = *(unsigned __int8 *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 72);
  uint64_t v12 = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  uint64_t v61 = v6;
  uint64_t v62 = v5;
  sub_249AECF78();
  uint64_t v59 = v8;
  uint64_t v60 = v7;
  uint64_t v54 = v10;
  uint64_t v55 = v9;
  uint64_t v49 = v11;
  uint64_t v50 = v12;
  AvocadoWidgetInfo.hash(into:)();
  uint64_t v13 = sub_249AEE388();
  uint64_t v14 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v15 = v13 & ~v14;
  uint64_t v58 = v4 + 56;
  uint64_t v47 = a2;
  if ((*(void *)(v4 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v56 = ~v14;
    uint64_t v57 = *(void *)(v4 + 48);
    do
    {
      uint64_t v16 = v57 + 88 * v15;
      uint64_t v18 = *(void *)(v16 + 16);
      uint64_t v17 = *(void *)(v16 + 24);
      uint64_t v19 = *(void *)(v16 + 32);
      uint64_t v20 = *(void *)(v16 + 40);
      uint64_t v22 = *(void *)(v16 + 48);
      uint64_t v21 = *(void *)(v16 + 56);
      int v23 = *(unsigned __int8 *)(v16 + 64);
      uint64_t v25 = *(void *)(v16 + 72);
      uint64_t v24 = *(void *)(v16 + 80);
      BOOL v26 = *(void *)v16 == v62 && *(void *)(v16 + 8) == v61;
      if (v26 || (sub_249AEE0D8() & 1) != 0)
      {
        BOOL v27 = v18 == v60 && v17 == v59;
        if (v27 || (sub_249AEE0D8() & 1) != 0)
        {
          BOOL v28 = v19 == v55 && v20 == v54;
          if (v28 || (sub_249AEE0D8() & 1) != 0)
          {
            BOOL v29 = v22 == v53 && v21 == v52;
            if (v29 || (sub_249AEE0D8()) && ((v23 ^ v51) & 1) == 0)
            {
              if (v24)
              {
                if (v50)
                {
                  BOOL v30 = v25 == v49 && v24 == v50;
                  if (v30 || (sub_249AEE0D8() & 1) != 0)
                  {
LABEL_33:
                    swift_bridgeObjectRelease();
                    sub_249934770(v47);
                    uint64_t v31 = *(void *)(*v46 + 48) + 88 * v15;
                    uint64_t v32 = *(void *)(v31 + 8);
                    uint64_t v33 = *(void *)(v31 + 16);
                    uint64_t v34 = *(void *)(v31 + 24);
                    uint64_t v35 = *(void *)(v31 + 32);
                    uint64_t v36 = *(void *)(v31 + 40);
                    uint64_t v37 = *(void *)(v31 + 48);
                    uint64_t v38 = *(void *)(v31 + 56);
                    char v39 = *(unsigned char *)(v31 + 64);
                    uint64_t v41 = *(void *)(v31 + 72);
                    uint64_t v40 = *(void *)(v31 + 80);
                    *(void *)a1 = *(void *)v31;
                    *(void *)(a1 + 8) = v32;
                    *(void *)(a1 + 16) = v33;
                    *(void *)(a1 + 24) = v34;
                    *(void *)(a1 + 32) = v35;
                    *(void *)(a1 + 40) = v36;
                    *(void *)(a1 + 48) = v37;
                    *(void *)(a1 + 56) = v38;
                    *(unsigned char *)(a1 + 64) = v39;
                    *(void *)(a1 + 72) = v41;
                    *(void *)(a1 + 80) = v40;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    return 0;
                  }
                }
              }
              else if (!v50)
              {
                goto LABEL_33;
              }
            }
          }
        }
      }
      unint64_t v15 = (v15 + 1) & v56;
    }
    while (((*(void *)(v58 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v63 = *v46;
  *uint64_t v46 = 0x8000000000000000;
  sub_2498DB2EC(v47);
  sub_24992956C(v47, v15, isUniquelyReferenced_nonNull_native);
  *uint64_t v46 = v63;
  swift_bridgeObjectRelease();
  long long v44 = *(_OWORD *)(v47 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v47 + 32);
  *(_OWORD *)(a1 + 48) = v44;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v47 + 64);
  *(void *)(a1 + 80) = *(void *)(v47 + 80);
  long long v45 = *(_OWORD *)(v47 + 16);
  uint64_t result = 1;
  *(_OWORD *)a1 = *(_OWORD *)v47;
  *(_OWORD *)(a1 + 16) = v45;
  return result;
}

uint64_t sub_2499258B4(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    uint64_t v6 = sub_249AEDA28();
    uint64_t v19 = v6;
    sub_249AED9C8();
    if (sub_249AED9F8())
    {
      sub_2498DB20C(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_2499266CC(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        uint64_t result = sub_249AED878();
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_249AED9F8());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v6;
}

uint64_t sub_249925AB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE08);
  uint64_t v3 = sub_249AEDA18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_249AEE338();
      sub_249AECF78();
      uint64_t result = sub_249AEE388();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_249925D98()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDB0);
  uint64_t result = sub_249AEDA18();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      int64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      sub_249AEE338();
      sub_249AECF78();
      uint64_t result = sub_249AEE388();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
      *unint64_t v12 = v19;
      v12[1] = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_249926068()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE38);
  uint64_t v3 = sub_249AEDA18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_33;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 24 * v14;
      uint64_t v20 = *(void *)v19;
      uint64_t v21 = *(void *)(v19 + 8);
      char v22 = *(unsigned char *)(v19 + 16);
      sub_249AEE338();
      Theme.ColorID.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      uint64_t result = sub_249AEE388();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 24 * v11;
      *(void *)uint64_t v12 = v20;
      *(void *)(v12 + 8) = v21;
      *(unsigned char *)(v12 + 16) = v22;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_249926398()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDA8);
  uint64_t v3 = sub_249AEDA18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v24 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v25 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v26 = v3 + 56;
    uint64_t v27 = v2;
    unint64_t result = swift_retain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
        uint64_t v12 = v27;
      }
      else
      {
        int64_t v20 = v9 + 1;
        uint64_t v12 = v27;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v20 >= v25) {
          goto LABEL_23;
        }
        unint64_t v21 = v24[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v25) {
            goto LABEL_23;
          }
          unint64_t v21 = v24[v9];
          if (!v21)
          {
            int64_t v9 = v20 + 2;
            if (v20 + 2 >= v25) {
              goto LABEL_23;
            }
            unint64_t v21 = v24[v9];
            if (!v21)
            {
              int64_t v22 = v20 + 3;
              if (v22 >= v25)
              {
LABEL_23:
                swift_release();
                uint64_t v23 = 1 << *(unsigned char *)(v27 + 32);
                if (v23 > 63) {
                  bzero(v24, ((unint64_t)(v23 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v24 = -1 << v23;
                }
                uint64_t v1 = v0;
                *(void *)(v27 + 16) = 0;
                break;
              }
              unint64_t v21 = v24[v22];
              if (!v21)
              {
                while (1)
                {
                  int64_t v9 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_29;
                  }
                  if (v9 >= v25) {
                    goto LABEL_23;
                  }
                  unint64_t v21 = v24[v9];
                  ++v22;
                  if (v21) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v9 = v22;
            }
          }
        }
LABEL_22:
        unint64_t v7 = (v21 - 1) & v21;
        unint64_t v11 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      uint64_t v13 = *(void *)(v12 + 48) + 56 * v11;
      uint64_t v14 = *(void *)v13;
      uint64_t v15 = *(void *)(v13 + 24);
      uint64_t v16 = *(void *)(v13 + 32);
      uint64_t v17 = *(void *)(v13 + 40);
      uint64_t v18 = *(void *)(v13 + 48);
      long long v28 = *(_OWORD *)(v13 + 8);
      sub_249AEE338();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_24988B990((uint64_t)v29, *((uint64_t *)&v28 + 1));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE388();
      unint64_t result = sub_249AED9B8();
      *(void *)(v26 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      uint64_t v19 = *(void *)(v4 + 48) + 56 * result;
      *(void *)uint64_t v19 = v14;
      *(_OWORD *)(v19 + 8) = v28;
      *(void *)(v19 + 24) = v15;
      *(void *)(v19 + 32) = v16;
      *(void *)(v19 + 40) = v17;
      *(void *)(v19 + 48) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_2499266CC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_249AEDA18();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_249AED878();
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_249926968()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDA0);
  uint64_t v3 = sub_249AEDA18();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v43 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    uint64_t v41 = v0;
    int64_t v42 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t v9 = v3;
    uint64_t result = swift_retain();
    uint64_t v11 = v9;
    int64_t v12 = 0;
    uint64_t v44 = v2;
    uint64_t v45 = v9;
    while (1)
    {
      if (v7)
      {
        uint64_t v47 = (v7 - 1) & v7;
        int64_t v48 = v12;
        unint64_t v15 = __clz(__rbit64(v7)) | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v16 >= v42) {
          goto LABEL_36;
        }
        unint64_t v17 = v43[v16];
        int64_t v18 = v12 + 1;
        if (!v17)
        {
          int64_t v18 = v12 + 2;
          if (v12 + 2 >= v42) {
            goto LABEL_36;
          }
          unint64_t v17 = v43[v18];
          if (!v17)
          {
            int64_t v18 = v12 + 3;
            if (v12 + 3 >= v42) {
              goto LABEL_36;
            }
            unint64_t v17 = v43[v18];
            if (!v17)
            {
              uint64_t v19 = v12 + 4;
              if (v12 + 4 >= v42)
              {
LABEL_36:
                uint64_t v38 = v11;
                swift_release();
                uint64_t v1 = v41;
                uint64_t v39 = 1 << *(unsigned char *)(v2 + 32);
                if (v39 > 63) {
                  bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v43 = -1 << v39;
                }
                uint64_t v4 = v38;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v43[v19];
              if (!v17)
              {
                while (1)
                {
                  int64_t v18 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_42;
                  }
                  if (v18 >= v42) {
                    goto LABEL_36;
                  }
                  unint64_t v17 = v43[v18];
                  ++v19;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v18 = v12 + 4;
            }
          }
        }
LABEL_23:
        uint64_t v47 = (v17 - 1) & v17;
        int64_t v48 = v18;
        unint64_t v15 = __clz(__rbit64(v17)) + (v18 << 6);
      }
      uint64_t v20 = *(void *)(v2 + 48) + 88 * v15;
      uint64_t v22 = *(void *)v20;
      uint64_t v21 = *(void *)(v20 + 8);
      uint64_t v24 = *(void *)(v20 + 16);
      uint64_t v23 = *(void *)(v20 + 24);
      uint64_t v26 = *(void *)(v20 + 32);
      uint64_t v25 = *(void *)(v20 + 40);
      uint64_t v27 = *(void *)(v20 + 48);
      uint64_t v28 = *(void *)(v20 + 56);
      char v29 = *(unsigned char *)(v20 + 64);
      uint64_t v49 = *(void *)(v20 + 80);
      uint64_t v50 = *(void *)(v20 + 72);
      sub_249AEE338();
      sub_249AECF78();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      uint64_t v46 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AEE358();
      sub_249AEE358();
      if (v49)
      {
        swift_bridgeObjectRetain();
        uint64_t v30 = v50;
        sub_249AECF78();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v30 = v50;
      }
      uint64_t result = sub_249AEE388();
      uint64_t v11 = v45;
      uint64_t v31 = -1 << *(unsigned char *)(v45 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v8 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v32) & ~*(void *)(v8 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v8 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v13 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v8 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v45 + 48) + 88 * v13;
      *(void *)uint64_t v14 = v22;
      *(void *)(v14 + 8) = v21;
      *(void *)(v14 + 16) = v24;
      *(void *)(v14 + 24) = v46;
      *(void *)(v14 + 32) = v26;
      *(void *)(v14 + 40) = v25;
      *(void *)(v14 + 48) = v27;
      *(void *)(v14 + 56) = v28;
      *(unsigned char *)(v14 + 64) = v29;
      *(void *)(v14 + 72) = v30;
      *(void *)(v14 + 80) = v49;
      ++*(void *)(v45 + 16);
      uint64_t v2 = v44;
      unint64_t v7 = v47;
      int64_t v12 = v48;
    }
  }
  uint64_t v40 = v4;
  uint64_t result = swift_release();
  *uint64_t v1 = v40;
  return result;
}

unint64_t sub_249926D98(uint64_t a1, uint64_t a2)
{
  sub_249AED878();
  unint64_t result = sub_249AED9B8();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void *sub_249926E1C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDA08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249926FD0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDB0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDA08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    uint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v19 = *v17;
    v19[1] = v18;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249927184()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE38);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDA08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    char v21 = *(unsigned char *)(v17 + 16);
    *(void *)uint64_t v20 = *(void *)v17;
    *(void *)(v20 + 8) = v19;
    *(unsigned char *)(v20 + 16) = v21;
    unint64_t result = (void *)sub_24988D770(v18, v19, v21);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_249927344()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDA8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_249AEDA08();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    unint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25)
      {
        int64_t v9 = v24 + 2;
        if (v24 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v25 = *(void *)(v6 + 8 * v9);
        if (!v25) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 56 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)(v17 + 24);
    uint64_t v19 = *(void *)(v17 + 32);
    uint64_t v20 = *(void *)(v17 + 40);
    uint64_t v21 = *(void *)(v17 + 48);
    uint64_t v22 = *(void *)(v4 + 48) + v16;
    long long v23 = *(_OWORD *)(v17 + 8);
    *(void *)uint64_t v22 = *(void *)v17;
    *(_OWORD *)(v22 + 8) = v23;
    *(void *)(v22 + 24) = v18;
    *(void *)(v22 + 32) = v19;
    *(void *)(v22 + 40) = v20;
    *(void *)(v22 + 48) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v13) {
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_249927548(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_249AEDA08();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_2499276EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDA0);
  uint64_t v31 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_249AEDA08();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t *v31 = v3;
    return result;
  }
  id result = (void *)(v2 + 56);
  uint64_t v5 = v1 + 56;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 56 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 56), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v28 >= v12) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v5 + 8 * v28);
    ++v8;
    if (!v29)
    {
      int64_t v8 = v28 + 1;
      if (v28 + 1 >= v12) {
        goto LABEL_28;
      }
      unint64_t v29 = *(void *)(v5 + 8 * v8);
      if (!v29)
      {
        int64_t v8 = v28 + 2;
        if (v28 + 2 >= v12) {
          goto LABEL_28;
        }
        unint64_t v29 = *(void *)(v5 + 8 * v8);
        if (!v29) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v11 = (v29 - 1) & v29;
    unint64_t v14 = __clz(__rbit64(v29)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 88 * v14;
    uint64_t v16 = *(void *)(v1 + 48) + v15;
    uint64_t v17 = *(void *)(v16 + 8);
    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v19 = *(void *)(v16 + 24);
    uint64_t v20 = *(void *)(v16 + 32);
    uint64_t v21 = *(void *)(v16 + 40);
    uint64_t v22 = *(void *)(v16 + 48);
    uint64_t v23 = *(void *)(v16 + 56);
    char v24 = *(unsigned char *)(v16 + 64);
    uint64_t v26 = *(void *)(v16 + 72);
    uint64_t v25 = *(void *)(v16 + 80);
    uint64_t v27 = *(void *)(v3 + 48) + v15;
    *(void *)uint64_t v27 = *(void *)v16;
    *(void *)(v27 + 8) = v17;
    *(void *)(v27 + 16) = v18;
    *(void *)(v27 + 24) = v19;
    *(void *)(v27 + 32) = v20;
    *(void *)(v27 + 40) = v21;
    *(void *)(v27 + 48) = v22;
    *(void *)(v27 + 56) = v23;
    *(unsigned char *)(v27 + 64) = v24;
    *(void *)(v27 + 72) = v26;
    *(void *)(v27 + 80) = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v30 = v28 + 3;
  if (v30 >= v12) {
    goto LABEL_28;
  }
  unint64_t v29 = *(void *)(v5 + 8 * v30);
  if (v29)
  {
    int64_t v8 = v30;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v8 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_28;
    }
    unint64_t v29 = *(void *)(v5 + 8 * v8);
    ++v30;
    if (v29) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_249927904()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE08);
  uint64_t v3 = sub_249AEDA18();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_249AEE338();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_249927BB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDB0);
  uint64_t result = sub_249AEDA18();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_23;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v15 >= v28) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_32;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_32;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16)
        {
          int64_t v17 = v15 + 3;
          if (v17 >= v28)
          {
LABEL_32:
            uint64_t result = swift_release();
            uint64_t v1 = v0;
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v6 + 8 * v17);
          int64_t v5 = v17;
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_23:
    int64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    sub_249AEE338();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_35;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (void *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v20;
    v12[1] = v19;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_bridgeObjectRetain();
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_32;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_249927E54()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE38);
  uint64_t v2 = sub_249AEDA18();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v28 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v29 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  uint64_t result = swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v12 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v14);
    ++v9;
    if (!v15)
    {
      int64_t v9 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v28 + 8 * v9);
      if (!v15)
      {
        int64_t v9 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v28 + 8 * v9);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(v1 + 48) + 24 * v13;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    sub_249AEE338();
    sub_24988D770(v18, v19, v20);
    Theme.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    uint64_t v21 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v22) & ~*(void *)(v7 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v7 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v10 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v7 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v3 + 48) + 24 * v10;
    *(void *)uint64_t v11 = v18;
    *(void *)(v11 + 8) = v19;
    *(unsigned char *)(v11 + 16) = v20;
    ++*(void *)(v3 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v28 + 8 * v16);
  if (v15)
  {
    int64_t v9 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v29) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v28 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_249928154()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDA8);
  uint64_t v2 = sub_249AEDA18();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    *uint64_t v0 = v3;
    return result;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v21 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v22 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v23 = v2 + 56;
  uint64_t v24 = v1;
  unint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_7;
    }
    int64_t v18 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v22) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v21 + 8 * v18);
    ++v8;
    if (!v19)
    {
      int64_t v8 = v18 + 1;
      if (v18 + 1 >= v22) {
        goto LABEL_23;
      }
      unint64_t v19 = *(void *)(v21 + 8 * v8);
      if (!v19)
      {
        int64_t v8 = v18 + 2;
        if (v18 + 2 >= v22) {
          goto LABEL_23;
        }
        unint64_t v19 = *(void *)(v21 + 8 * v8);
        if (!v19) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v19 - 1) & v19;
    unint64_t v10 = __clz(__rbit64(v19)) + (v8 << 6);
LABEL_7:
    uint64_t v11 = *(void *)(v24 + 48) + 56 * v10;
    uint64_t v12 = *(void *)v11;
    uint64_t v13 = *(void *)(v11 + 24);
    uint64_t v14 = *(void *)(v11 + 32);
    uint64_t v15 = *(void *)(v11 + 40);
    uint64_t v16 = *(void *)(v11 + 48);
    long long v25 = *(_OWORD *)(v11 + 8);
    sub_249AEE338();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_24988B990((uint64_t)v26, *((uint64_t *)&v25 + 1));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249AEE388();
    unint64_t result = sub_249AED9B8();
    *(void *)(v23 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = *(void *)(v3 + 48) + 56 * result;
    *(void *)uint64_t v17 = v12;
    *(_OWORD *)(v17 + 8) = v25;
    *(void *)(v17 + 24) = v13;
    *(void *)(v17 + 32) = v14;
    *(void *)(v17 + 40) = v15;
    *(void *)(v17 + 48) = v16;
    ++*(void *)(v3 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v22)
  {
LABEL_23:
    swift_release();
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v21 + 8 * v20);
  if (v19)
  {
    int64_t v8 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v8 >= v22) {
      goto LABEL_23;
    }
    unint64_t v19 = *(void *)(v21 + 8 * v8);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_24992846C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_249AEDA18();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v29 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    id v21 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_249AED878();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_2499286E4()
{
  uint64_t v1 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDA0);
  uint64_t v2 = sub_249AEDA18();
  if (!*(void *)(v1 + 16))
  {
    uint64_t v37 = v2;
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v38 = v37;
    return result;
  }
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v39 = v1 + 56;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(v1 + 56);
  int64_t v40 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = v2;
  uint64_t result = swift_retain();
  uint64_t v9 = v7;
  int64_t v10 = 0;
  uint64_t v41 = v1;
  uint64_t v42 = v7;
  while (1)
  {
    if (v5)
    {
      uint64_t v44 = (v5 - 1) & v5;
      int64_t v45 = v10;
      unint64_t v13 = __clz(__rbit64(v5)) | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v14 >= v40) {
      goto LABEL_36;
    }
    unint64_t v15 = *(void *)(v39 + 8 * v14);
    int64_t v16 = v10 + 1;
    if (!v15)
    {
      int64_t v16 = v10 + 2;
      if (v10 + 2 >= v40) {
        goto LABEL_36;
      }
      unint64_t v15 = *(void *)(v39 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v10 + 3;
        if (v10 + 3 >= v40) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v39 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v44 = (v15 - 1) & v15;
    int64_t v45 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v1 + 48) + 88 * v13;
    uint64_t v20 = *(void *)v18;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v21 = *(void *)(v18 + 16);
    uint64_t v22 = *(void *)(v18 + 24);
    uint64_t v24 = *(void *)(v18 + 32);
    uint64_t v23 = *(void *)(v18 + 40);
    uint64_t v25 = *(void *)(v18 + 48);
    uint64_t v26 = *(void *)(v18 + 56);
    char v47 = *(unsigned char *)(v18 + 64);
    uint64_t v27 = *(void *)(v18 + 80);
    uint64_t v46 = *(void *)(v18 + 72);
    sub_249AEE338();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    uint64_t v43 = v22;
    uint64_t v28 = v23;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    sub_249AEE358();
    sub_249AEE358();
    if (v27)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = v46;
      sub_249AECF78();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = v46;
    }
    uint64_t result = sub_249AEE388();
    uint64_t v9 = v42;
    uint64_t v30 = -1 << *(unsigned char *)(v42 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v6 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v31) & ~*(void *)(v6 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v6 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v11 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v6 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v42 + 48) + 88 * v11;
    int64_t v10 = v45;
    *(void *)uint64_t v12 = v20;
    *(void *)(v12 + 8) = v19;
    *(void *)(v12 + 16) = v21;
    *(void *)(v12 + 24) = v43;
    *(void *)(v12 + 32) = v24;
    *(void *)(v12 + 40) = v28;
    *(void *)(v12 + 48) = v25;
    *(void *)(v12 + 56) = v26;
    *(unsigned char *)(v12 + 64) = v47;
    *(void *)(v12 + 72) = v29;
    *(void *)(v12 + 80) = v27;
    ++*(void *)(v42 + 16);
    uint64_t v1 = v41;
    unint64_t v5 = v44;
  }
  uint64_t v17 = v10 + 4;
  if (v10 + 4 >= v40)
  {
LABEL_36:
    uint64_t v37 = v9;
    uint64_t result = swift_release_n();
    goto LABEL_38;
  }
  unint64_t v15 = *(void *)(v39 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v40) {
      goto LABEL_36;
    }
    unint64_t v15 = *(void *)(v39 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_249928B08(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_249925AB8();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_249926E1C();
      goto LABEL_22;
    }
    sub_249927904();
  }
  uint64_t v11 = *v4;
  sub_249AEE338();
  sub_249AECF78();
  uint64_t result = sub_249AEE388();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_249AEE0D8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_249AEE2C8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_249AEE0D8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_249928CA4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_249925D98();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_249926FD0();
      goto LABEL_22;
    }
    sub_249927BB4();
  }
  uint64_t v11 = *v4;
  sub_249AEE338();
  sub_249AECF78();
  uint64_t result = sub_249AEE388();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_249AEE0D8(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_249AEE2C8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_249AEE0D8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  uint64_t *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_249928E40(uint64_t result, uint64_t a2, char a3, unint64_t a4, char a5)
{
  uint64_t v27 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a5 & 1) != 0) {
    goto LABEL_14;
  }
  if (a5)
  {
    sub_249926068();
  }
  else
  {
    if (v11 > v10)
    {
      uint64_t result = (uint64_t)sub_249927184();
      goto LABEL_14;
    }
    sub_249927E54();
  }
  uint64_t v12 = *v5;
  sub_249AEE338();
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  uint64_t result = sub_249AEE388();
  uint64_t v13 = -1 << *(unsigned char *)(v12 + 32);
  a4 = result & ~v13;
  if ((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4))
  {
    uint64_t v14 = ~v13;
    do
    {
      uint64_t v15 = *(void *)(v12 + 48) + 24 * a4;
      uint64_t v6 = *(void *)v15;
      uint64_t v7 = *(void *)(v15 + 8);
      char v8 = *(unsigned char *)(v15 + 16);
      sub_24988D770(*(void *)v15, v7, v8);
      uint64_t v16 = Theme.ColorID.rawValue.getter();
      uint64_t v18 = v17;
      if (v16 == Theme.ColorID.rawValue.getter() && v18 == v19) {
        goto LABEL_17;
      }
      char v20 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = sub_24988D788(v6, v7, v8);
      if (v20) {
        goto LABEL_18;
      }
      a4 = (a4 + 1) & v14;
    }
    while (((*(void *)(v12 + 56 + ((a4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a4) & 1) != 0);
  }
LABEL_14:
  uint64_t v21 = *v26;
  *(void *)(*v26 + 8 * (a4 >> 6) + 56) |= 1 << a4;
  uint64_t v22 = *(void *)(v21 + 48) + 24 * a4;
  *(void *)uint64_t v22 = v27;
  *(void *)(v22 + 8) = a2;
  *(unsigned char *)(v22 + 16) = a3;
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease_n();
  sub_24988D788(v6, v7, v8);
LABEL_18:
  uint64_t result = sub_249AEE2C8();
  __break(1u);
  return result;
}

uint64_t sub_249929098(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v33 = result;
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_249926398();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (uint64_t)sub_249927344();
        goto LABEL_29;
      }
      sub_249928154();
    }
    uint64_t v8 = *v3;
    sub_249AEE338();
    long long v9 = *(_OWORD *)v5;
    uint64_t v10 = *(void *)(v5 + 16);
    long long v38 = *(_OWORD *)(v5 + 24);
    v39[0] = v9;
    long long v37 = *(_OWORD *)(v5 + 40);
    long long v11 = v9;
    sub_2499347DC((uint64_t)v39);
    sub_249AECF78();
    sub_249934808((uint64_t)v39);
    swift_bridgeObjectRetain();
    sub_24988B990((uint64_t)v36, v10);
    swift_bridgeObjectRelease();
    long long v12 = v38;
    sub_2499347DC((uint64_t)&v38);
    sub_249AECF78();
    sub_249934808((uint64_t)&v38);
    long long v13 = v37;
    sub_2499347DC((uint64_t)&v37);
    sub_249AECF78();
    sub_249934808((uint64_t)&v37);
    uint64_t result = sub_249AEE388();
    uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v14;
    uint64_t v34 = v8 + 56;
    uint64_t v35 = v8;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v15 = ~v14;
      do
      {
        uint64_t v16 = (void *)(*(void *)(v35 + 48) + 56 * a2);
        uint64_t v17 = v16[2];
        uint64_t v18 = v16[3];
        uint64_t v19 = v16[4];
        uint64_t v20 = v16[5];
        uint64_t v21 = v16[6];
        BOOL v22 = *v16 == (void)v11 && v16[1] == *((void *)&v11 + 1);
        if (v22 || (uint64_t result = sub_249AEE0D8(), (result & 1) != 0))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((sub_2499FE45C(v17, v10) & 1) != 0
            && (v18 == (void)v12 ? (BOOL v23 = v19 == *((void *)&v12 + 1)) : (BOOL v23 = 0), v23 || (sub_249AEE0D8() & 1) != 0))
          {
            if (v20 == (void)v13 && v21 == *((void *)&v13 + 1)) {
              goto LABEL_32;
            }
            char v25 = sub_249AEE0D8();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v25) {
              goto LABEL_33;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
          }
        }
        a2 = (a2 + 1) & v15;
      }
      while (((*(void *)(v34 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_29:
  uint64_t v26 = *v32;
  *(void *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v27 = *(void *)(v26 + 48) + 56 * a2;
  long long v28 = *(_OWORD *)(v33 + 16);
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v33;
  *(_OWORD *)(v27 + 16) = v28;
  *(_OWORD *)(v27 + 32) = *(_OWORD *)(v33 + 32);
  *(void *)(v27 + 48) = *(void *)(v33 + 48);
  uint64_t v29 = *(void *)(v26 + 16);
  BOOL v30 = __OFADD__(v29, 1);
  uint64_t v31 = v29 + 1;
  if (v30)
  {
    __break(1u);
LABEL_32:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t result = sub_249AEE2C8();
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v31;
  }
  return result;
}

void sub_2499293D8(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_2499266CC(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_249927548(a4);
      goto LABEL_14;
    }
    sub_24992846C(v11, a4);
  }
  uint64_t v12 = *v5;
  uint64_t v13 = sub_249AED878();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_2498DB20C(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_249AED888();

    if (v16)
    {
LABEL_13:
      sub_249AEE2C8();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_249AED888();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_24992956C(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  uint64_t v46 = result;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_41;
  }
  if (a3)
  {
    sub_249926968();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_2499276EC();
      goto LABEL_41;
    }
    sub_2499286E4();
  }
  uint64_t v8 = *v3;
  sub_249AEE338();
  uint64_t v9 = *(void *)v5;
  uint64_t v10 = *(void *)(v5 + 8);
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = *(void *)(v5 + 24);
  uint64_t v13 = *(void *)(v5 + 32);
  uint64_t v14 = *(void *)(v5 + 40);
  uint64_t v15 = *(void *)(v5 + 48);
  uint64_t v16 = *(void *)(v5 + 56);
  int v17 = *(unsigned __int8 *)(v5 + 64);
  uint64_t v19 = *(void *)(v5 + 72);
  uint64_t v18 = *(void *)(v5 + 80);
  uint64_t v58 = v10;
  uint64_t v59 = v9;
  sub_249AECF78();
  uint64_t v56 = v12;
  uint64_t v57 = v11;
  uint64_t v51 = v14;
  uint64_t v52 = v13;
  int v47 = v17;
  uint64_t v44 = v19;
  uint64_t v48 = v18;
  AvocadoWidgetInfo.hash(into:)();
  uint64_t result = sub_249AEE388();
  uint64_t v20 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v20;
  uint64_t v55 = v8 + 56;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v49 = v16;
    uint64_t v50 = v15;
    uint64_t v54 = ~v20;
    uint64_t v53 = *(void *)(v8 + 48);
    do
    {
      uint64_t v21 = v53 + 88 * a2;
      uint64_t result = *(void *)v21;
      uint64_t v23 = *(void *)(v21 + 16);
      uint64_t v22 = *(void *)(v21 + 24);
      uint64_t v24 = *(void *)(v21 + 32);
      uint64_t v25 = *(void *)(v21 + 40);
      uint64_t v26 = *(void *)(v21 + 48);
      uint64_t v27 = *(void *)(v21 + 56);
      int v28 = *(unsigned __int8 *)(v21 + 64);
      uint64_t v30 = *(void *)(v21 + 72);
      uint64_t v29 = *(void *)(v21 + 80);
      BOOL v31 = *(void *)v21 == v59 && *(void *)(v21 + 8) == v58;
      if (v31 || (uint64_t result = sub_249AEE0D8(), (result & 1) != 0))
      {
        BOOL v32 = v23 == v57 && v22 == v56;
        if (v32 || (uint64_t result = sub_249AEE0D8(), (result & 1) != 0))
        {
          BOOL v33 = v24 == v52 && v25 == v51;
          if (v33 || (uint64_t result = sub_249AEE0D8(), (result & 1) != 0))
          {
            BOOL v34 = v26 == v50 && v27 == v49;
            if (v34 || (uint64_t result = sub_249AEE0D8(), (result & 1) != 0))
            {
              if (((v28 ^ v47) & 1) == 0)
              {
                if (v29)
                {
                  if (v48)
                  {
                    BOOL v35 = v30 == v44 && v29 == v48;
                    if (v35 || (uint64_t result = sub_249AEE0D8(), (result & 1) != 0))
                    {
LABEL_40:
                      uint64_t result = sub_249AEE2C8();
                      __break(1u);
                      break;
                    }
                  }
                }
                else if (!v48)
                {
                  goto LABEL_40;
                }
              }
            }
          }
        }
      }
      a2 = (a2 + 1) & v54;
    }
    while (((*(void *)(v55 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_41:
  uint64_t v36 = *v45;
  *(void *)(*v45 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v37 = *(void *)(v36 + 48) + 88 * a2;
  long long v38 = *(_OWORD *)(v46 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v46;
  *(_OWORD *)(v37 + 16) = v38;
  *(void *)(v37 + 80) = *(void *)(v46 + 80);
  long long v39 = *(_OWORD *)(v46 + 64);
  long long v40 = *(_OWORD *)(v46 + 32);
  *(_OWORD *)(v37 + 48) = *(_OWORD *)(v46 + 48);
  *(_OWORD *)(v37 + 64) = v39;
  *(_OWORD *)(v37 + 32) = v40;
  uint64_t v41 = *(void *)(v36 + 16);
  BOOL v42 = __OFADD__(v41, 1);
  uint64_t v43 = v41 + 1;
  if (v42) {
    __break(1u);
  }
  else {
    *(void *)(v36 + 16) = v43;
  }
  return result;
}

uint64_t sub_249929868(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *))
{
  BOOL v34 = a4;
  uint64_t v27 = a2;
  int v28 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x270FA5388](v5 - 8);
  BOOL v32 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = 0;
  BOOL v35 = (void *)a3;
  uint64_t v9 = *(void *)(a3 + 64);
  uint64_t v29 = 0;
  uint64_t v30 = a3 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  int64_t v31 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = (uint64_t)v32;
  while (v12)
  {
    uint64_t v36 = (v12 - 1) & v12;
    int64_t v37 = v8;
    unint64_t v14 = __clz(__rbit64(v12)) | (v8 << 6);
LABEL_17:
    uint64_t v19 = v35;
    sub_2498D6084(v35[6] + *(void *)(v33 + 72) * v14, v13, &qword_2696DDB10);
    uint64_t v20 = v19[7] + 32 * v14;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
    v38[0] = *(void *)v20;
    v38[1] = v21;
    v38[2] = v22;
    unsigned __int8 v39 = *(unsigned char *)(v20 + 24);
    unsigned __int8 v23 = v39;
    swift_retain();
    sub_2498EC438(v21, v22, v23);
    uint64_t v24 = v40;
    char v25 = v34(v13, v38);
    swift_release();
    sub_249884EC8(v21, v22, v23);
    uint64_t result = sub_2498D60E8(v13, &qword_2696DDB10);
    uint64_t v40 = v24;
    if (v24) {
      return result;
    }
    unint64_t v12 = v36;
    int64_t v8 = v37;
    if (v25)
    {
      *(unint64_t *)((char *)v28 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v15 = __OFADD__(v29++, 1);
      if (v15) {
        goto LABEL_30;
      }
    }
  }
  BOOL v15 = __OFADD__(v8, 1);
  int64_t v16 = v8 + 1;
  if (v15)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v16 >= v31) {
    return sub_24992A120(v28, v27, v29, v35);
  }
  unint64_t v17 = *(void *)(v30 + 8 * v16);
  if (v17)
  {
LABEL_16:
    uint64_t v36 = (v17 - 1) & v17;
    int64_t v37 = v16;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    goto LABEL_17;
  }
  int64_t v18 = v16 + 1;
  if (v16 + 1 >= v31) {
    return sub_24992A120(v28, v27, v29, v35);
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v16 + 2;
  if (v16 + 2 >= v31) {
    return sub_24992A120(v28, v27, v29, v35);
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17) {
    goto LABEL_15;
  }
  int64_t v18 = v16 + 3;
  if (v16 + 3 >= v31) {
    return sub_24992A120(v28, v27, v29, v35);
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
LABEL_15:
    int64_t v16 = v18;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v16 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v16 >= v31) {
      return sub_24992A120(v28, v27, v29, v35);
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    ++v18;
    if (v17) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_249929B64(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF510);
  uint64_t result = sub_249AEDCA8();
  uint64_t v9 = result;
  int64_t v37 = a1;
  uint64_t v38 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  uint64_t v39 = v4;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v40 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v38) {
        return v9;
      }
      unint64_t v16 = v37[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v38) {
          return v9;
        }
        unint64_t v16 = v37[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v38) {
            return v9;
          }
          unint64_t v16 = v37[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v38) {
              return v9;
            }
            unint64_t v16 = v37[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v38) {
                  return v9;
                }
                unint64_t v16 = v37[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v40 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    uint64_t v22 = *(void *)(v4 + 56) + 32 * v14;
    uint64_t v23 = *(void *)v22;
    uint64_t v24 = *(void *)(v22 + 8);
    char v41 = *(unsigned char *)(v22 + 16);
    uint64_t v25 = *(void *)(v22 + 24);
    sub_249AEE338();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    uint64_t result = sub_249AEE388();
    uint64_t v26 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v12 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v12 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    BOOL v34 = (void *)(*(void *)(v9 + 48) + 16 * v29);
    *BOOL v34 = v21;
    v34[1] = v20;
    uint64_t v35 = *(void *)(v9 + 56) + 32 * v29;
    *(void *)uint64_t v35 = v23;
    *(void *)(v35 + 8) = v24;
    *(unsigned char *)(v35 + 16) = v41;
    *(void *)(v35 + 24) = v25;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v39;
    uint64_t v11 = v40;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_249929E30(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4E0);
  uint64_t result = sub_249AEDCA8();
  uint64_t v8 = result;
  uint64_t v32 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  uint64_t v34 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v32) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v32) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v32) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v32) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v32) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = *(void *)(v4 + 48) + 24 * v13;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    char v20 = *(unsigned char *)(v17 + 16);
    uint64_t v21 = *(void *)(*(void *)(v4 + 56) + 8 * v13);
    sub_249AEE338();
    sub_24988D770(v19, v18, v20);
    swift_bridgeObjectRetain();
    Theme.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEE388();
    uint64_t v22 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    uint64_t v30 = *(void *)(v8 + 48) + 24 * v25;
    *(void *)uint64_t v30 = v19;
    *(void *)(v30 + 8) = v18;
    *(unsigned char *)(v30 + 16) = v20;
    *(void *)(*(void *)(v8 + 56) + 8 * v25) = v21;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t v4 = v34;
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24992A120(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v44 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v43 = (uint64_t)&v38 - v9;
  if (!a3) {
    return MEMORY[0x263F8EE80];
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  uint64_t v42 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4B0);
  uint64_t result = sub_249AEDCA8();
  uint64_t v11 = result;
  if (v39 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v38;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 64;
  uint64_t v15 = v42;
  uint64_t v40 = a4;
  uint64_t v41 = result;
  while (1)
  {
    if (v12)
    {
      uint64_t v45 = (v12 - 1) & v12;
      uint64_t v46 = v13;
      unint64_t v16 = __clz(__rbit64(v12)) | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v39) {
        return v11;
      }
      unint64_t v18 = v38[v17];
      uint64_t v19 = v13 + 1;
      if (!v18)
      {
        uint64_t v19 = v13 + 2;
        if (v13 + 2 >= v39) {
          return v11;
        }
        unint64_t v18 = v38[v19];
        if (!v18)
        {
          uint64_t v19 = v13 + 3;
          if (v13 + 3 >= v39) {
            return v11;
          }
          unint64_t v18 = v38[v19];
          if (!v18)
          {
            uint64_t v20 = v13 + 4;
            if (v13 + 4 >= v39) {
              return v11;
            }
            unint64_t v18 = v38[v20];
            if (!v18)
            {
              while (1)
              {
                uint64_t v19 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v19 >= v39) {
                  return v11;
                }
                unint64_t v18 = v38[v19];
                ++v20;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v19 = v13 + 4;
          }
        }
      }
LABEL_24:
      uint64_t v45 = (v18 - 1) & v18;
      uint64_t v46 = v19;
      unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
    }
    uint64_t v21 = a4[6];
    uint64_t v22 = v43;
    uint64_t v47 = *(void *)(v44 + 72);
    sub_2498D6084(v21 + v47 * v16, v43, &qword_2696DDB10);
    uint64_t v23 = a4[7] + 32 * v16;
    uint64_t v25 = *(void *)v23;
    uint64_t v24 = *(void *)(v23 + 8);
    uint64_t v26 = *(void *)(v23 + 16);
    unsigned __int8 v27 = *(unsigned char *)(v23 + 24);
    sub_249882788(v22, v15, &qword_2696DDB10);
    uint64_t v11 = v41;
    sub_249AEE338();
    swift_retain();
    sub_2498EC438(v24, v26, v27);
    sub_249AEB808();
    sub_249934F8C(&qword_2696DF388, MEMORY[0x263F07508]);
    sub_249AECF28();
    uint64_t result = sub_249AEE388();
    uint64_t v28 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v15 = v42;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v28) >> 6;
      uint64_t v15 = v42;
      do
      {
        if (++v30 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v30 == v33;
        if (v30 == v33) {
          unint64_t v30 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v14 + 8 * v30);
      }
      while (v35 == -1);
      unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
    }
    *(void *)(v14 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
    uint64_t result = sub_249882788(v15, *(void *)(v11 + 48) + v31 * v47, &qword_2696DDB10);
    uint64_t v36 = *(void *)(v11 + 56) + 32 * v31;
    *(void *)uint64_t v36 = v25;
    *(void *)(v36 + 8) = v24;
    *(void *)(v36 + 16) = v26;
    *(unsigned char *)(v36 + 24) = v27;
    ++*(void *)(v11 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v40;
    unint64_t v12 = v45;
    uint64_t v13 = v46;
    if (!a3) {
      return v11;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24992A540@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t (*a3)(void)@<X2>, void (*a4)(unint64_t, uint64_t)@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = v6;
  swift_bridgeObjectRetain();
  unint64_t v14 = sub_2498EF548(a1);
  LOBYTE(a1) = v15;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v11;
    uint64_t v29 = *v11;
    *uint64_t v11 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      a5();
      uint64_t v17 = v29;
    }
    uint64_t v18 = *(void *)(v17 + 48);
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    sub_2498D60E8(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v14, &qword_2696DDB10);
    uint64_t v20 = *(void *)(v17 + 56);
    uint64_t v21 = a2(0);
    uint64_t v28 = *(void *)(v21 - 8);
    sub_24992F668(v20 + *(void *)(v28 + 72) * v14, a6, a3);
    a4(v14, v17);
    *uint64_t v11 = v17;
    swift_bridgeObjectRelease();
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56);
    uint64_t v23 = a6;
    uint64_t v24 = 0;
    uint64_t v25 = v21;
  }
  else
  {
    uint64_t v26 = a2(0);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
    uint64_t v25 = v26;
    uint64_t v23 = a6;
    uint64_t v24 = 1;
  }

  return v22(v23, v24, 1, v25);
}

uint64_t sub_24992A720(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_2498EF01C(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_2498E1FDC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_24992B860(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_24992A7F0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_249AED9A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_249AEE338();
        swift_bridgeObjectRetain();
        sub_249AECF78();
        uint64_t v11 = sub_249AEE388();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          char v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *unint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          uint64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *uint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24992A9DC(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_249AED9A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_249AEE338();
        swift_bridgeObjectRetain();
        sub_249AECF78();
        uint64_t v10 = sub_249AEE388();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *uint64_t v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24992ABB4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_249AED9A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_249AEE338();
        swift_bridgeObjectRetain();
        sub_249AECF78();
        uint64_t v9 = sub_249AEE388();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          uint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t result = v14 + (v3 << 7);
          uint64_t v15 = (const void *)(v14 + (v6 << 7));
          if (v3 << 7 != v6 << 7 || (int64_t v3 = v6, result >= (unint64_t)v15 + 128))
          {
            uint64_t result = (unint64_t)memmove((void *)result, v15, 0x80uLL);
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24992AD94(unint64_t a1, uint64_t a2)
{
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v4 = *(void *)(v34 - 8);
  unint64_t result = MEMORY[0x270FA5388](v34);
  uint64_t v36 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    unint64_t result = sub_249AED9A8();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v35 = (result + 1) & v10;
      uint64_t v11 = *(void *)(v4 + 72);
      uint64_t v12 = v10;
      uint64_t v37 = v11;
      do
      {
        int64_t v13 = v11 * v9;
        int64_t v14 = a1;
        uint64_t v15 = v36;
        uint64_t v16 = v12;
        sub_2498D6084(*(void *)(a2 + 48) + v11 * v9, v36, &qword_2696DDB10);
        sub_249AEE338();
        sub_249AEB808();
        sub_249934F8C(&qword_2696DF388, MEMORY[0x263F07508]);
        sub_249AECF28();
        uint64_t v17 = sub_249AEE388();
        uint64_t v18 = v15;
        a1 = v14;
        unint64_t result = sub_2498D60E8(v18, &qword_2696DDB10);
        uint64_t v12 = v16;
        unint64_t v19 = v17 & v16;
        if (v14 >= (uint64_t)v35)
        {
          if (v19 < v35)
          {
            uint64_t v11 = v37;
          }
          else
          {
            uint64_t v11 = v37;
            if (v14 >= (uint64_t)v19) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v11 = v37;
          if (v19 >= v35 || v14 >= (uint64_t)v19)
          {
LABEL_12:
            if (v11 * v14 < v13
              || *(void *)(a2 + 48) + v11 * v14 >= (unint64_t)(*(void *)(a2 + 48) + v13 + v11))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v11 * v14 != v13)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v20 = *(void *)(a2 + 56);
            uint64_t v21 = *(void *)(*(void *)(type metadata accessor for RequestContentModel() - 8) + 72);
            int64_t v22 = v21 * v14;
            unint64_t result = v20 + v21 * v14;
            int64_t v23 = v21 * v9;
            unint64_t v24 = v20 + v21 * v9 + v21;
            if (v22 < v23 || result >= v24)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              uint64_t v11 = v37;
              uint64_t v12 = v16;
            }
            else
            {
              a1 = v9;
              BOOL v26 = v22 == v23;
              uint64_t v11 = v37;
              uint64_t v12 = v16;
              if (!v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                uint64_t v12 = v16;
                a1 = v9;
              }
            }
          }
        }
        unint64_t v9 = (v9 + 1) & v12;
      }
      while (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    unsigned __int8 v27 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v28 = *v27;
    uint64_t v29 = (-1 << a1) - 1;
  }
  else
  {
    unsigned __int8 v27 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v29 = *v27;
    uint64_t v28 = (-1 << a1) - 1;
  }
  *unsigned __int8 v27 = v29 & v28;
  uint64_t v30 = *(void *)(a2 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24992B110(unint64_t a1, uint64_t a2)
{
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v4 = *(void *)(v34 - 8);
  unint64_t result = MEMORY[0x270FA5388](v34);
  uint64_t v36 = (uint64_t)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    unint64_t result = sub_249AED9A8();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v35 = (result + 1) & v10;
      uint64_t v11 = *(void *)(v4 + 72);
      uint64_t v12 = v10;
      uint64_t v37 = v11;
      do
      {
        int64_t v13 = v9 * v11;
        int64_t v14 = a1;
        uint64_t v15 = v36;
        uint64_t v16 = v12;
        sub_2498D6084(*(void *)(a2 + 48) + v9 * v11, v36, &qword_2696DDB10);
        sub_249AEE338();
        sub_249AEB808();
        sub_249934F8C(&qword_2696DF388, MEMORY[0x263F07508]);
        sub_249AECF28();
        uint64_t v17 = sub_249AEE388();
        uint64_t v18 = v15;
        a1 = v14;
        unint64_t result = sub_2498D60E8(v18, &qword_2696DDB10);
        uint64_t v12 = v16;
        unint64_t v19 = v17 & v16;
        if (v14 >= (uint64_t)v35)
        {
          if (v19 < v35)
          {
            uint64_t v11 = v37;
          }
          else
          {
            uint64_t v11 = v37;
            if (v14 >= (uint64_t)v19) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v11 = v37;
          if (v19 >= v35 || v14 >= (uint64_t)v19)
          {
LABEL_12:
            if (v14 * v11 < v13
              || *(void *)(a2 + 48) + v14 * v11 >= (unint64_t)(*(void *)(a2 + 48) + v13 + v11))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v14 * v11 != v13)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v20 = *(void *)(a2 + 56);
            uint64_t v21 = *(void *)(*(void *)(type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0)
                                        - 8)
                            + 72);
            int64_t v22 = v21 * v14;
            unint64_t result = v20 + v21 * v14;
            int64_t v23 = v21 * v9;
            unint64_t v24 = v20 + v21 * v9 + v21;
            if (v22 < v23 || result >= v24)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v9;
              uint64_t v11 = v37;
              uint64_t v12 = v16;
            }
            else
            {
              a1 = v9;
              BOOL v26 = v22 == v23;
              uint64_t v11 = v37;
              uint64_t v12 = v16;
              if (!v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                uint64_t v12 = v16;
                a1 = v9;
              }
            }
          }
        }
        unint64_t v9 = (v9 + 1) & v12;
      }
      while (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    unsigned __int8 v27 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v28 = *v27;
    uint64_t v29 = (-1 << a1) - 1;
  }
  else
  {
    unsigned __int8 v27 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v29 = *v27;
    uint64_t v28 = (-1 << a1) - 1;
  }
  *unsigned __int8 v27 = v29 & v28;
  uint64_t v30 = *(void *)(a2 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v32;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24992B48C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_249AED9A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_249AEE338();
        sub_249AECF78();
        swift_bridgeObjectRelease();
        unint64_t result = sub_249AEE388();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (unsigned char *)(v10 + v3);
          uint64_t v12 = (unsigned char *)(v10 + v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          int64_t v14 = (void *)(v13 + 8 * v3);
          uint64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *int64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24992B678(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_249AED9A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_249AEE338();
        swift_bridgeObjectRetain();
        sub_249AECF78();
        uint64_t v12 = sub_249AEE388();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *uint64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          uint64_t v18 = (long long *)(v17 + (v3 << 6));
          uint64_t v19 = (long long *)(v17 + (v6 << 6));
          if (v3 << 6 != v6 << 6 || (int64_t v3 = v6, v18 >= v19 + 4))
          {
            long long v9 = *v19;
            long long v10 = v19[1];
            long long v11 = v19[3];
            void v18[2] = v19[2];
            v18[3] = v11;
            *uint64_t v18 = v9;
            v18[1] = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *BOOL v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_24992B860(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_249AED9A8();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_249AEE338();
        swift_bridgeObjectRetain();
        sub_249AECF78();
        uint64_t v9 = sub_249AEE388();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_24992BA38(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v5 = *v3;
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < a2)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v8;
  if (__OFSUB__(1, v8))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  int64_t v10 = v6 + v9;
  if (__OFADD__(v6, v9))
  {
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *int64_t v3 = v5;
  if (!isUniquelyReferenced_nonNull_native || v10 > *(void *)(v5 + 24) >> 1)
  {
    if (v6 <= v10) {
      int64_t v13 = v6 + v9;
    }
    else {
      int64_t v13 = v6;
    }
    unint64_t v5 = sub_2498AB974(isUniquelyReferenced_nonNull_native, v13, 1, v5);
    *int64_t v3 = v5;
  }
  uint64_t v14 = *(void *)(type metadata accessor for Component() - 8);
  unint64_t v15 = v5 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  uint64_t v16 = *(void *)(v14 + 72);
  uint64_t v17 = v15 + v16 * a1;
  swift_arrayDestroy();
  if (!v9) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v5 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_33;
  }
  if (v19 < 0)
  {
LABEL_35:
    uint64_t result = sub_249AEDCB8();
    __break(1u);
    return result;
  }
  unint64_t v20 = v17 + v16;
  unint64_t v21 = v15 + v16 * a2;
  if (v17 + v16 < v21 || v20 >= v21 + v19 * v16)
  {
    swift_arrayInitWithTakeFrontToBack();
  }
  else if (v20 != v21)
  {
    swift_arrayInitWithTakeBackToFront();
  }
  uint64_t v23 = *(void *)(v5 + 16);
  BOOL v24 = __OFADD__(v23, v9);
  uint64_t v25 = v23 + v9;
  if (v24)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(void *)(v5 + 16) = v25;
LABEL_25:
  if (v16 >= 1) {
    sub_24992ECE8(a3, v17, (uint64_t (*)(void))type metadata accessor for Component);
  }
  return sub_2498D60E8(a3, &qword_2696DFDC8);
}

uint64_t sub_24992BC58(uint64_t (*a1)(unint64_t))
{
  int64_t v3 = v1;
  uint64_t v5 = type metadata accessor for Component() - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v34 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v33 = (uint64_t)&v30 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v35 = (uint64_t)&v30 - v11;
  unint64_t v12 = *v1;
  uint64_t v13 = *(void *)(*v1 + 16);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v10 + 72);
  swift_bridgeObjectRetain();
  unint64_t v16 = 0;
  unint64_t v31 = v14;
  while (1)
  {
    char v17 = a1(v12 + v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      return v16;
    }
    if (v17) {
      break;
    }
    ++v16;
    v14 += v15;
    if (v13 == v16)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (!__OFADD__(v16, 1))
  {
    unint64_t v19 = *(void *)(v12 + 16);
    if (v16 + 1 == v19) {
      return v16;
    }
    uint64_t v20 = v15 + v14;
    unint64_t v21 = v16 + 1;
    uint64_t v30 = v1;
    uint64_t v32 = v15;
    while (v21 < v19)
    {
      uint64_t v22 = v3;
      uint64_t v36 = v20;
      uint64_t v23 = v35;
      sub_24992ECE8(v12 + v20, v35, (uint64_t (*)(void))type metadata accessor for Component);
      char v24 = a1(v23);
      uint64_t result = sub_24992EC88(v23, (uint64_t (*)(void))type metadata accessor for Component);
      if (v24)
      {
        int64_t v3 = v22;
        uint64_t v25 = v32;
      }
      else
      {
        int64_t v3 = v22;
        uint64_t v25 = v32;
        if (v21 != v16)
        {
          if ((v16 & 0x8000000000000000) != 0) {
            goto LABEL_32;
          }
          unint64_t v26 = *v3;
          unint64_t v27 = *(void *)(*v3 + 16);
          if (v16 >= v27) {
            goto LABEL_33;
          }
          uint64_t result = sub_24992ECE8(v26 + v31 + v16 * v32, v33, (uint64_t (*)(void))type metadata accessor for Component);
          if (v21 >= v27) {
            goto LABEL_34;
          }
          sub_24992ECE8(v26 + v36, v34, (uint64_t (*)(void))type metadata accessor for Component);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          int64_t v3 = v30;
          *uint64_t v30 = v26;
          if ((result & 1) == 0)
          {
            uint64_t result = sub_24996FFF8(v26);
            unint64_t v26 = result;
            *int64_t v3 = result;
          }
          if (v16 >= *(void *)(v26 + 16)) {
            goto LABEL_35;
          }
          uint64_t result = sub_2499350BC(v34, v26 + v31 + v16 * v25);
          if (v21 >= *(void *)(*v3 + 16)) {
            goto LABEL_36;
          }
          uint64_t result = sub_2499350BC(v33, *v3 + v36);
        }
        if (__OFADD__(v16++, 1)) {
          goto LABEL_31;
        }
      }
      unint64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1)) {
        goto LABEL_30;
      }
      unint64_t v12 = *v3;
      unint64_t v19 = *(void *)(*v3 + 16);
      ++v21;
      uint64_t v20 = v36 + v25;
      if (v29 == v19) {
        return v16;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t _s14CarPlayAssetUI28ClusterTransitionCoordinatorC13ListDirectionO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ClusterTransitionCoordinator.ListDirection(0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDB8);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v13[*(int *)(v11 + 56)];
  sub_24992ECE8(a1, (uint64_t)v13, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  sub_24992ECE8(a2, v14, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  unint64_t v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  int v17 = v16(v13, 2, v15);
  if (!v17)
  {
    sub_24992ECE8((uint64_t)v13, (uint64_t)v9, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
    if (!v16((char *)v14, 2, v15))
    {
      sub_249882788(v14, (uint64_t)v6, qword_2696DF810);
      sub_249AEB808();
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v18 = sub_249AED088();
      sub_2498D60E8((uint64_t)v6, qword_2696DF810);
      sub_2498D60E8((uint64_t)v9, qword_2696DF810);
      sub_24992EC88((uint64_t)v13, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
      return v18 & 1;
    }
    sub_2498D60E8((uint64_t)v9, qword_2696DF810);
    goto LABEL_9;
  }
  if (v17 == 1)
  {
    if (v16((char *)v14, 2, v15) != 1) {
      goto LABEL_9;
    }
  }
  else if (v16((char *)v14, 2, v15) != 2)
  {
LABEL_9:
    sub_2498D60E8((uint64_t)v13, &qword_2696DFDB8);
    char v18 = 0;
    return v18 & 1;
  }
  sub_24992EC88((uint64_t)v13, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
  char v18 = 1;
  return v18 & 1;
}

uint64_t _s14CarPlayAssetUI28ClusterTransitionCoordinatorC06LayoutF0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = a2;
  uint64_t v3 = type metadata accessor for Layout();
  uint64_t v62 = *(char **)(v3 - 8);
  uint64_t v63 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v61 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDC0);
  uint64_t v5 = MEMORY[0x270FA5388](v64);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v54 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  unint64_t v16 = (char *)&v54 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  unint64_t v19 = (char *)&v54 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v54 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v54 - v24;
  MEMORY[0x270FA5388](v23);
  unint64_t v27 = (char *)&v54 - v26;
  uint64_t v28 = a1;
  uint64_t v29 = v65;
  if ((sub_249AEB7E8() & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v58 = v22;
  uint64_t v59 = v16;
  uint64_t v60 = v19;
  uint64_t v55 = v13;
  uint64_t v56 = v7;
  uint64_t v30 = type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(0);
  uint64_t v31 = *(int *)(v30 + 20);
  uint64_t v57 = v28;
  sub_2498D6084(v28 + v31, (uint64_t)v27, &qword_2696DFC48);
  sub_2498D6084(v29 + *(int *)(v30 + 20), (uint64_t)v25, &qword_2696DFC48);
  uint64_t v32 = (uint64_t)&v9[*(int *)(v64 + 48)];
  sub_2498D6084((uint64_t)v27, (uint64_t)v9, &qword_2696DFC48);
  sub_2498D6084((uint64_t)v25, v32, &qword_2696DFC48);
  uint64_t v33 = v63;
  uint64_t v34 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))*((void *)v62 + 6);
  uint64_t v35 = (uint64_t)v9;
  if (v34((uint64_t)v9, 1, v63) == 1)
  {
    sub_2498D60E8((uint64_t)v25, &qword_2696DFC48);
    uint64_t v35 = (uint64_t)v9;
    sub_2498D60E8((uint64_t)v27, &qword_2696DFC48);
    if (v34(v32, 1, v33) == 1)
    {
      uint64_t v36 = v34;
      sub_2498D60E8((uint64_t)v9, &qword_2696DFC48);
      goto LABEL_9;
    }
LABEL_7:
    uint64_t v42 = v35;
LABEL_15:
    sub_2498D60E8(v42, &qword_2696DFDC0);
    goto LABEL_16;
  }
  uint64_t v62 = v27;
  uint64_t v37 = (uint64_t)v25;
  uint64_t v38 = (uint64_t)v9;
  uint64_t v39 = (uint64_t)v58;
  sub_2498D6084(v38, (uint64_t)v58, &qword_2696DFC48);
  unsigned int v40 = v34(v32, 1, v33);
  uint64_t v41 = v61;
  if (v40 == 1)
  {
    sub_2498D60E8(v37, &qword_2696DFC48);
    sub_2498D60E8((uint64_t)v62, &qword_2696DFC48);
    sub_24992EC88(v39, (uint64_t (*)(void))type metadata accessor for Layout);
    goto LABEL_7;
  }
  sub_24992F668(v32, v61, (uint64_t (*)(void))type metadata accessor for Layout);
  sub_249AEB808();
  sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  char v43 = sub_249AED088();
  sub_24992EC88(v41, (uint64_t (*)(void))type metadata accessor for Layout);
  sub_2498D60E8(v37, &qword_2696DFC48);
  sub_2498D60E8((uint64_t)v62, &qword_2696DFC48);
  sub_24992EC88(v39, (uint64_t (*)(void))type metadata accessor for Layout);
  sub_2498D60E8(v35, &qword_2696DFC48);
  uint64_t v36 = v34;
  if ((v43 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_9:
  uint64_t v44 = v57;
  uint64_t v45 = (uint64_t)v60;
  sub_2498D6084(v57 + *(int *)(v30 + 24), (uint64_t)v60, &qword_2696DFC48);
  uint64_t v62 = (char *)v30;
  uint64_t v46 = (uint64_t)v59;
  sub_2498D6084(v65 + *(int *)(v30 + 24), (uint64_t)v59, &qword_2696DFC48);
  uint64_t v47 = (uint64_t)v56;
  uint64_t v48 = (uint64_t)&v56[*(int *)(v64 + 48)];
  sub_2498D6084(v45, (uint64_t)v56, &qword_2696DFC48);
  sub_2498D6084(v46, v48, &qword_2696DFC48);
  if (v36(v47, 1, v33) != 1)
  {
    uint64_t v49 = (uint64_t)v55;
    sub_2498D6084(v47, (uint64_t)v55, &qword_2696DFC48);
    if (v36(v48, 1, v33) != 1)
    {
      uint64_t v52 = v61;
      sub_24992F668(v48, v61, (uint64_t (*)(void))type metadata accessor for Layout);
      sub_249AEB808();
      sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
      char v53 = sub_249AED088();
      sub_24992EC88(v52, (uint64_t (*)(void))type metadata accessor for Layout);
      sub_2498D60E8((uint64_t)v59, &qword_2696DFC48);
      sub_2498D60E8((uint64_t)v60, &qword_2696DFC48);
      sub_24992EC88(v49, (uint64_t (*)(void))type metadata accessor for Layout);
      sub_2498D60E8(v47, &qword_2696DFC48);
      if ((v53 & 1) == 0) {
        goto LABEL_16;
      }
      goto LABEL_19;
    }
    sub_2498D60E8((uint64_t)v59, &qword_2696DFC48);
    sub_2498D60E8((uint64_t)v60, &qword_2696DFC48);
    sub_24992EC88(v49, (uint64_t (*)(void))type metadata accessor for Layout);
    goto LABEL_14;
  }
  sub_2498D60E8(v46, &qword_2696DFC48);
  sub_2498D60E8(v45, &qword_2696DFC48);
  if (v36(v48, 1, v33) != 1)
  {
LABEL_14:
    uint64_t v42 = v47;
    goto LABEL_15;
  }
  sub_2498D60E8(v47, &qword_2696DFC48);
LABEL_19:
  if (*(unsigned __int8 *)(v44 + *((int *)v62 + 7)) == *(unsigned __int8 *)(v65 + *((int *)v62 + 7)))
  {
    char v50 = *(unsigned char *)(v44 + *((int *)v62 + 8)) ^ *(unsigned char *)(v65 + *((int *)v62 + 8)) ^ 1;
    return v50 & 1;
  }
LABEL_16:
  char v50 = 0;
  return v50 & 1;
}

uint64_t type metadata accessor for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696DFD10);
}

uint64_t sub_24992CA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24990BE3C(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_24992CA44(uint64_t a1, void (*a2)(char *, uint64_t, char *))
{
  uint64_t v28 = a2;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDF0);
  MEMORY[0x270FA5388](v27);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v25 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v26 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v26) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v25 + 8 * v10);
      if (!v22)
      {
        int64_t v10 = v21 + 2;
        if (v21 + 2 >= v26) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v25 + 8 * v10);
        if (!v22)
        {
          int64_t v10 = v21 + 3;
          if (v21 + 3 >= v26) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v25 + 8 * v10);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v22 - 1) & v22;
    unint64_t v12 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a1 + 48);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    sub_2498D6084(v13 + *(void *)(*(void *)(v14 - 8) + 72) * v12, (uint64_t)v4, &qword_2696DDB10);
    uint64_t v15 = *(void *)(a1 + 56) + 32 * v12;
    uint64_t v17 = *(void *)v15;
    uint64_t v16 = *(void *)(v15 + 8);
    uint64_t v18 = *(void *)(v15 + 16);
    unint64_t v19 = &v4[*(int *)(v27 + 48)];
    unsigned __int8 v20 = *(unsigned char *)(v15 + 24);
    *(void *)unint64_t v19 = *(void *)v15;
    *((void *)v19 + 2) = v18;
    v19[24] = v20;
    *((void *)v19 + 1) = v16;
    swift_retain();
    sub_2498EC438(v16, v18, v20);
    v28(v4, v17, v19 + 8);
    uint64_t result = sub_2498D60E8((uint64_t)v4, &qword_2696DFDF0);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v26) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v26) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v25 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24992CCDC(uint64_t a1, uint64_t a2)
{
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t v6 = *(void *)(type metadata accessor for Zone() - 8);
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    uint64_t v8 = *(void *)(a2 + OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_carouselModels);
    uint64_t v9 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      if (*(void *)(v8 + 16))
      {
        unint64_t v10 = sub_2498EF548(v7);
        if (v11)
        {
          uint64_t v12 = *(void *)(v8 + 56) + 32 * v10;
          uint64_t v13 = *(void *)(v12 + 8);
          uint64_t v14 = *(void *)(v12 + 16);
          unsigned __int8 v15 = *(unsigned char *)(v12 + 24);
          swift_retain();
          sub_2498EC438(v13, v14, v15);
          uint64_t v16 = sub_249884EC8(v13, v14, v15);
          MEMORY[0x24C5AE570](v16);
          if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_249AED458();
          }
          sub_249AED498();
          sub_249AED448();
        }
      }
      v7 += v9;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v17;
  }
  return result;
}

uint64_t sub_24992CE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
  MEMORY[0x270FA5388](v9 - 8);
  char v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v13 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & v12;
  int64_t v35 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v38 = v6 + 48;
  uint64_t v39 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  uint64_t v42 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v17 = 0;
  uint64_t v33 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    if (v15)
    {
      unint64_t v18 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v19 = v18 | (v17 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v17++, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v35) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v17);
    if (!v21) {
      break;
    }
LABEL_18:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
LABEL_19:
    sub_2498D6084(*(void *)(v42 + 48) + *(void *)(v6 + 72) * v19, (uint64_t)v11, &qword_2696DDB10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
    {
      swift_release();
      return (uint64_t)v33;
    }
    sub_249882788((uint64_t)v11, (uint64_t)v8, &qword_2696DDB10);
    sub_24990EB88(v36, v37, &v40);
    if (v3)
    {
      sub_2498D60E8((uint64_t)v8, &qword_2696DDB10);
      uint64_t v29 = v33;
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    uint64_t result = sub_2498D60E8((uint64_t)v8, &qword_2696DDB10);
    uint64_t v23 = v41;
    if (v41)
    {
      uint64_t v32 = v40;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_2498ABD38(0, v33[2] + 1, 1, v33);
        uint64_t v33 = (void *)result;
      }
      unint64_t v25 = v33[2];
      unint64_t v24 = v33[3];
      unint64_t v26 = v25 + 1;
      if (v25 >= v24 >> 1)
      {
        unint64_t v30 = v33[2];
        unint64_t v31 = v25 + 1;
        uint64_t result = (uint64_t)sub_2498ABD38((void *)(v24 > 1), v25 + 1, 1, v33);
        unint64_t v25 = v30;
        unint64_t v26 = v31;
        uint64_t v33 = (void *)result;
      }
      uint64_t v27 = v33;
      v33[2] = v26;
      uint64_t v28 = &v27[2 * v25];
      v28[4] = v32;
      v28[5] = v23;
    }
  }
  int64_t v22 = v17 + 1;
  if (v17 + 1 >= v35) {
    goto LABEL_33;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 2;
  if (v17 + 2 >= v35) {
    goto LABEL_33;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 3;
  if (v17 + 3 >= v35) {
    goto LABEL_33;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21) {
    goto LABEL_17;
  }
  int64_t v22 = v17 + 4;
  if (v17 + 4 >= v35)
  {
LABEL_33:
    uint64_t v29 = v33;
    (*v39)(v11, 1, 1, v5);
LABEL_34:
    swift_release();
    return (uint64_t)v29;
  }
  unint64_t v21 = *(void *)(v34 + 8 * v22);
  if (v21)
  {
LABEL_17:
    int64_t v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v17 >= v35) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v34 + 8 * v17);
    ++v22;
    if (v21) {
      goto LABEL_18;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_24992D270(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Zone();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v20 - v8;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v23 = MEMORY[0x263F8EE78];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v20[1] = v1;
    uint64_t v12 = v9 + 16;
    uint64_t v13 = *(void *)(v7 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v14 = a1 + v21;
    uint64_t v15 = MEMORY[0x263F8EE78];
    int64_t v22 = v9 + 16;
    do
    {
      sub_24992ECE8(v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Zone);
      if (v12[*(int *)(v3 + 32)])
      {
        sub_24992EC88((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Zone);
      }
      else
      {
        uint64_t v16 = (uint64_t)v6;
        sub_24992F668((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Zone);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_249A22150(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v23;
        unint64_t v18 = *(void *)(v23 + 16);
        unint64_t v17 = *(void *)(v23 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_249A22150(v17 > 1, v18 + 1, 1);
          uint64_t v15 = v23;
        }
        *(void *)(v15 + 16) = v18 + 1;
        uint64_t v19 = v15 + v21 + v18 * v13;
        uint64_t v6 = (char *)v16;
        sub_24992F668(v16, v19, (uint64_t (*)(void))type metadata accessor for Zone);
        uint64_t v12 = v22;
      }
      v14 += v13;
      --v11;
    }
    while (v11);
    return v23;
  }
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_24992D4E4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Zone();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v19 - v8;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    v19[1] = v1;
    uint64_t v12 = v9 + 16;
    uint64_t v13 = *(void *)(v7 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v14 = a1 + v21;
    uint64_t v15 = MEMORY[0x263F8EE78];
    unsigned __int8 v20 = v9 + 16;
    do
    {
      sub_24992ECE8(v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Zone);
      if (v12[*(int *)(v3 + 32)] == 1)
      {
        uint64_t v16 = v3;
        sub_24992F668((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Zone);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_249A22150(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v22;
        unint64_t v18 = *(void *)(v22 + 16);
        unint64_t v17 = *(void *)(v22 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_249A22150(v17 > 1, v18 + 1, 1);
          uint64_t v15 = v22;
        }
        *(void *)(v15 + 16) = v18 + 1;
        sub_24992F668((uint64_t)v6, v15 + v21 + v18 * v13, (uint64_t (*)(void))type metadata accessor for Zone);
        uint64_t v3 = v16;
        uint64_t v12 = v20;
      }
      else
      {
        sub_24992EC88((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Zone);
      }
      v14 += v13;
      --v11;
    }
    while (v11);
    return v22;
  }
  return result;
}

uint64_t sub_24992D72C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v45 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for Component();
  uint64_t v6 = MEMORY[0x270FA5388](v41);
  uint64_t v38 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v51 = MEMORY[0x263F8EE78];
  uint64_t v40 = *(void *)(a1 + 16);
  if (v40)
  {
    uint64_t v12 = 0;
    uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v43 = *(void *)(v8 + 72);
    uint64_t v35 = (v13 + 32) & ~v13;
    uint64_t v36 = (char *)&v34 - v9;
    uint64_t v39 = a1 + v35;
    uint64_t v37 = a2;
    while (1)
    {
      sub_24992ECE8(v39 + v43 * v12, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Component);
      uint64_t v15 = *(void *)&v10[*(int *)(v41 + 32)];
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v44 = v12;
      if (v16)
      {
        uint64_t v17 = type metadata accessor for Slot();
        uint64_t v18 = v15
            + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
        uint64_t v19 = *(void *)(*(void *)(v17 - 8) + 72);
        uint64_t v20 = type metadata accessor for Instrument();
        uint64_t v21 = *(void *)(v20 - 8);
        uint64_t v22 = *(unsigned int (**)(void, void, void))(v21 + 48);
        uint64_t v47 = v21 + 48;
        uint64_t v42 = v15;
        swift_bridgeObjectRetain_n();
        uint64_t v23 = (void *)MEMORY[0x263F8EE78];
        uint64_t v46 = v22;
        do
        {
          uint64_t v24 = v18 + *(int *)(v17 + 36);
          if (v22(v24, 1, v20) != 1)
          {
            uint64_t v25 = v17;
            uint64_t v26 = v45;
            sub_2498D6084(v24, v45, &qword_2696DE540);
            sub_2498A4990(v26 + *(int *)(v20 + 20), (uint64_t)v50);
            sub_24992F574(v50, sub_2498FB4B4);
            sub_24992EC88(v26, (uint64_t (*)(void))type metadata accessor for Instrument);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v23 = sub_2498ABE48(0, v23[2] + 1, 1, v23);
            }
            unint64_t v28 = v23[2];
            unint64_t v27 = v23[3];
            if (v28 >= v27 >> 1) {
              uint64_t v23 = sub_2498ABE48((void *)(v27 > 1), v28 + 1, 1, v23);
            }
            void v23[2] = v28 + 1;
            sub_2498A4990((uint64_t)v50, (uint64_t)&v23[64 * v28 + 4]);
            uint64_t v17 = v25;
            uint64_t v22 = v46;
          }
          v18 += v19;
          --v16;
        }
        while (v16);
        swift_bridgeObjectRelease_n();
        uint64_t v10 = v36;
        a2 = v37;
        uint64_t v29 = v23[2];
        if (!v29)
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t v23 = (void *)MEMORY[0x263F8EE78];
        uint64_t v29 = *(void *)(MEMORY[0x263F8EE78] + 16);
        if (!v29) {
          goto LABEL_3;
        }
      }
      swift_bridgeObjectRetain();
      sub_2498A4990((uint64_t)(v23 + 4), (uint64_t)v50);
      sub_2498A4990((uint64_t)v50, (uint64_t)v49);
      sub_2498A4990(a2, (uint64_t)v48);
      sub_24992F574(v50, sub_2498FB4B4);
      if (_s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v49))
      {
LABEL_22:
        swift_bridgeObjectRelease_n();
        sub_24992F574(v50, sub_2498FCAAC);
        sub_24992F668((uint64_t)v10, v38, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v31 = v51;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_249A22110(0, *(void *)(v31 + 16) + 1, 1);
          uint64_t v31 = v51;
        }
        unint64_t v33 = *(void *)(v31 + 16);
        unint64_t v32 = *(void *)(v31 + 24);
        if (v33 >= v32 >> 1)
        {
          sub_249A22110(v32 > 1, v33 + 1, 1);
          uint64_t v31 = v51;
        }
        *(void *)(v31 + 16) = v33 + 1;
        sub_24992F668(v38, v31 + v35 + v33 * v43, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v14 = v44;
        goto LABEL_5;
      }
      uint64_t v30 = (uint64_t)(v23 + 68);
      while (1)
      {
        sub_24992F574(v50, sub_2498FCAAC);
        if (!--v29) {
          break;
        }
        sub_2498A4990(v30, (uint64_t)v50);
        sub_2498A4990((uint64_t)v50, (uint64_t)v49);
        sub_2498A4990(a2, (uint64_t)v48);
        sub_24992F574(v50, sub_2498FB4B4);
        v30 += 512;
        if (_s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0((uint64_t)v49)) {
          goto LABEL_22;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_4:
      uint64_t v14 = v44;
      sub_24992EC88((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Component);
LABEL_5:
      uint64_t v12 = v14 + 1;
      if (v12 == v40) {
        return v51;
      }
    }
  }
  return result;
}

uint64_t sub_24992DCDC(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_2498AB974(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for Component() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      unint64_t *v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24992DEC4(uint64_t a1, uint64_t a2, unint64_t a3, int a4)
{
  int v86 = a4;
  uint64_t v110 = a2;
  uint64_t v108 = a1;
  uint64_t v85 = sub_249AEC408();
  int64_t v5 = *(void **)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  unint64_t v84 = (char *)v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v90 = (uint64_t)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v89 = (uint64_t)v81 - v10;
  uint64_t v11 = type metadata accessor for ClusterTransitionCoordinator.ListDirection(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v97 = (uint64_t)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v94 = (uint64_t)v81 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC98);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v96 = (uint64_t)v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v103 = (uint64_t)v81 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF7F0);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (void *)((char *)v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v23);
  unint64_t v27 = (char *)v81 - v26;
  uint64_t v28 = type metadata accessor for Component();
  uint64_t v95 = *(void *)(v28 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v88 = (char *)v81 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v93 = (uint64_t)v81 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)v81 - v34;
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  uint64_t v102 = (uint64_t)v81 - v37;
  uint64_t v109 = v36;
  unint64_t v98 = a3;
  if (a3 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v28 = v109;
    uint64_t v38 = sub_249AEDC78();
    if (v38) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v38 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v38)
    {
LABEL_3:
      uint64_t v39 = 0;
      uint64_t v87 = 0;
      unint64_t v91 = v98 + 32;
      uint64_t v100 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v95 + 56);
      unint64_t v101 = v98 & 0xC000000000000001;
      uint64_t v105 = (unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48);
      int v83 = v86 & 1;
      uint64_t v82 = (void (**)(char *, uint64_t))(v5 + 1);
      v81[1] = MEMORY[0x263F8EE60] + 8;
      uint64_t v104 = v27;
      uint64_t v99 = v38;
      uint64_t v92 = v25;
      while (1)
      {
        if (v101)
        {
          uint64_t v40 = MEMORY[0x24C5AEC50](v39, v98);
          BOOL v41 = __OFADD__(v39, 1);
          uint64_t v42 = v39 + 1;
          if (v41) {
            goto LABEL_43;
          }
        }
        else
        {
          uint64_t v40 = swift_retain();
          BOOL v41 = __OFADD__(v39, 1);
          uint64_t v42 = v39 + 1;
          if (v41)
          {
LABEL_43:
            __break(1u);
            goto LABEL_44;
          }
        }
        uint64_t v106 = v42;
        uint64_t v43 = *(void *)(*(void *)v40 + 144);
        uint64_t v107 = (void *)v40;
        uint64_t v44 = (uint64_t **)(v40 + v43);
        swift_beginAccess();
        uint64_t v25 = *v44;
        uint64_t v45 = (*v44)[2];
        if (!v45)
        {
          swift_bridgeObjectRetain();
LABEL_27:
          (*v100)(v27, 1, 1, v28);
          goto LABEL_29;
        }
        uint64_t v46 = v95;
        uint64_t v47 = (uint64_t)v25
            + ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80));
        swift_bridgeObjectRetain_n();
        uint64_t v48 = *(void *)(v46 + 72);
        while (1)
        {
          sub_24992ECE8(v47, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for Component);
          uint64_t v50 = *(void *)&v35[*(int *)(v109 + 32)];
          if (*(void *)(v50 + 16)) {
            break;
          }
          if (!v110) {
            goto LABEL_28;
          }
LABEL_14:
          sub_24992EC88((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for Component);
          v47 += v48;
          if (!--v45)
          {
            swift_bridgeObjectRelease();
            unint64_t v27 = v104;
            uint64_t v28 = v109;
            uint64_t v38 = v99;
            goto LABEL_27;
          }
        }
        uint64_t v51 = type metadata accessor for Slot();
        sub_2498D6084(v50+ *(int *)(v51 + 36)+ ((*(unsigned __int8 *)(*(void *)(v51 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v51 - 8) + 80)), (uint64_t)v21, &qword_2696DE540);
        uint64_t v52 = type metadata accessor for Instrument();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v21, 1, v52) == 1)
        {
          sub_2498D60E8((uint64_t)v21, &qword_2696DE540);
          unint64_t v53 = 0xEB00000000746567;
          unint64_t v54 = 0x6469577974706D45;
          if (!v110) {
            goto LABEL_24;
          }
        }
        else
        {
          sub_2498A4990((uint64_t)&v21[*(int *)(v52 + 20)], (uint64_t)v112);
          sub_24992F574(v112, sub_2498FB4B4);
          sub_24992EC88((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for Instrument);
          sub_2498A4990((uint64_t)v112, (uint64_t)&v111);
          unint64_t v54 = Instrument.Kind.name.getter();
          unint64_t v53 = v55;
          sub_24992F574(v112, sub_2498FCAAC);
          if (!v110)
          {
LABEL_24:
            swift_bridgeObjectRelease();
            goto LABEL_14;
          }
        }
        if (v54 != v108 || v53 != v110) {
          break;
        }
        swift_bridgeObjectRelease();
LABEL_28:
        swift_bridgeObjectRelease();
        unint64_t v27 = v104;
        sub_24992F668((uint64_t)v35, (uint64_t)v104, (uint64_t (*)(void))type metadata accessor for Component);
        uint64_t v28 = v109;
        (*v100)(v27, 0, 1, v109);
        uint64_t v38 = v99;
LABEL_29:
        int64_t v5 = v107;
        swift_bridgeObjectRelease();
        uint64_t v56 = *v105;
        if ((*v105)(v27, 1, v28) == 1)
        {
          sub_2498D60E8((uint64_t)v27, &qword_2696DF7F0);
          uint64_t v39 = v106;
        }
        else
        {
          uint64_t v57 = v102;
          sub_24992F668((uint64_t)v27, v102, (uint64_t (*)(void))type metadata accessor for Component);
          uint64_t v58 = v94;
          sub_2498D6084(v57, v94, qword_2696DF810);
          uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
          uint64_t v60 = *(void *)(v59 - 8);
          uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);
          v61(v58, 0, 2, v59);
          uint64_t v62 = v58;
          uint64_t v63 = v97;
          sub_24992F668(v62, v97, type metadata accessor for ClusterTransitionCoordinator.ListDirection);
          uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v63, 2, v59);
          if (!v64) {
            sub_249882788(v97, v96, qword_2696DF810);
          }
          uint64_t v65 = v96;
          v61(v96, v64, 2, v59);
          uint64_t v66 = v103;
          sub_249882788(v65, v103, &qword_2696DFC98);
          uint64_t v25 = v92;
          int v67 = (uint64_t (*)(void))v66;
          int64_t v5 = v107;
          sub_249921378(v67, (uint64_t)v92);
          uint64_t v28 = v109;
          if (v56((char *)v25, 1, v109) == 1)
          {
            sub_2498D60E8((uint64_t)v25, &qword_2696DF7F0);
            unint64_t v27 = v104;
            goto LABEL_40;
          }
          uint64_t v68 = v93;
          sub_24992F668((uint64_t)v25, v93, (uint64_t (*)(void))type metadata accessor for Component);
          uint64_t v69 = v89;
          uint64_t v70 = sub_2498D6084(v68, v89, qword_2696DF810);
          MEMORY[0x270FA5388](v70);
          v81[-2] = v28;
          uint64_t v71 = sub_249934F8C(&qword_2696DFC88, (void (*)(uint64_t))type metadata accessor for Component);
          v81[-1] = v71;
          uint64_t KeyPath = swift_getKeyPath();
          MEMORY[0x270FA5388](KeyPath);
          v81[-2] = v28;
          v81[-1] = v71;
          swift_getKeyPath();
          uint64_t v73 = (uint64_t)v88;
          sub_249AEB9E8();
          swift_release();
          swift_release();
          uint64_t v74 = v90;
          uint64_t v25 = qword_2696DF810;
          sub_2498D6084(v73, v90, qword_2696DF810);
          sub_24992EC88(v73, (uint64_t (*)(void))type metadata accessor for Component);
          sub_249AEB808();
          sub_249934F8C((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
          char v75 = sub_249AED088();
          sub_2498D60E8(v74, qword_2696DF810);
          sub_2498D60E8(v69, qword_2696DF810);
          if (v75)
          {
            sub_24992EC88(v93, (uint64_t (*)(void))type metadata accessor for Component);
            unint64_t v27 = v104;
            uint64_t v28 = v109;
            uint64_t v38 = v99;
            uint64_t v39 = v106;
            int64_t v5 = v107;
          }
          else
          {
            if (v86)
            {
              int64_t v5 = v107;
              swift_retain();
              uint64_t v76 = v93;
              uint64_t v38 = v99;
            }
            else
            {
              uint64_t v76 = v93;
              uint64_t v38 = v99;
              int64_t v5 = v107;
            }
            uint64_t v77 = v84;
            uint64_t v78 = sub_249AEC3F8();
            uint64_t v107 = v81;
            MEMORY[0x270FA5388](v78);
            LOBYTE(v81[-4]) = v83;
            v81[-3] = v5;
            v81[-2] = v76;
            swift_allocObject();
            swift_weakInit();
            swift_retain();
            uint64_t v25 = (uint64_t *)v76;
            uint64_t v79 = v87;
            sub_249AEBCA8();
            uint64_t v87 = v79;
            swift_release();
            swift_release();
            (*v82)(v77, v85);
            sub_24992EC88((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Component);
            swift_release();
            unint64_t v27 = v104;
            uint64_t v28 = v109;
LABEL_40:
            uint64_t v39 = v106;
          }
          sub_2498D60E8(v103, &qword_2696DFC98);
          sub_24992EC88(v102, (uint64_t (*)(void))type metadata accessor for Component);
        }
        swift_release();
        if (v39 == v38) {
          return swift_bridgeObjectRelease();
        }
      }
      char v49 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      if (v49) {
        goto LABEL_28;
      }
      goto LABEL_14;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_24992EC28()
{
  return sub_2499D0FF4();
}

uint64_t sub_24992EC4C(uint64_t a1)
{
  return sub_2499DC4FC(a1);
}

uint64_t sub_24992EC70()
{
  return 16;
}

__n128 sub_24992EC7C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24992EC88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24992ECE8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24992ED50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24992EDB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2499D1FF8();
  *a1 = result;
  return result;
}

uint64_t sub_24992EDE4()
{
  return sub_2499D20AC();
}

uint64_t sub_24992EE10()
{
  return 16;
}

__n128 sub_24992EE1C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24992EE28(uint64_t a1)
{
  unsigned int v1 = *(_DWORD *)(a1 + 340);
  if (v1 > 0x80000000) {
    return -v1;
  }
  else {
    return 0;
  }
}

#error "24992F014: call analysis failed (funcsize=193)"

#error "24992F49C: call analysis failed (funcsize=215)"

#error "24992F554: call analysis failed (funcsize=53)"

#error "24992F628: call analysis failed (funcsize=53)"

BOOL sub_24992F648(uint64_t a1, uint64_t *a2)
{
  return sub_24990E160(a1, a2, *(char **)(v2 + 16));
}

uint64_t sub_24992F668(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_24992F6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ClusterTransitionCoordinator.ListDirection(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696DFD28);
}

uint64_t type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696DFD38);
}

uint64_t sub_24992F778()
{
  return sub_249934F8C(&qword_2696DF388, MEMORY[0x263F07508]);
}

uint64_t sub_24992F7C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent, &qword_2696DFBA0);
}

uint64_t sub_24992F7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFD88, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContent, &qword_2696DFBA0);
}

uint64_t sub_24992F818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder, &qword_2696DFBB0);
}

uint64_t sub_24992F840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFD80, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__focusOrder, &qword_2696DFBB0);
}

uint64_t sub_24992F870@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_73Tm(a1, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent, a2);
}

uint64_t sub_24992F87C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_249904C40(a1, a2, a3, a4, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone1RequestContent, (void (*)(uint64_t, uint64_t))sub_2499048CC);
}

uint64_t sub_24992F8B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_73Tm(a1, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent, a2);
}

uint64_t keypath_get_73Tm@<X0>(void *a1@<X0>, void *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1 + *a2;
  swift_beginAccess();
  return sub_2498D6084(v4, a3, &qword_2696DFBB8);
}

uint64_t sub_24992F918(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_249904C40(a1, a2, a3, a4, &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_zone2RequestContent, (void (*)(uint64_t, uint64_t))sub_249904DC8);
}

uint64_t sub_24992F94C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent, &qword_2696DFBC8);
}

uint64_t sub_24992F974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFD60, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningRequestContent, &qword_2696DFBC8);
}

uint64_t sub_24992F9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions, &qword_2696DFBD8);
}

uint64_t sub_24992F9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFD78, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__requestContentTransitions, &qword_2696DFBD8);
}

uint64_t sub_24992F9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent, &qword_2696DFBC8);
}

uint64_t sub_24992FA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFD60, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningComponent, &qword_2696DFBC8);
}

uint64_t sub_24992FA54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions, &qword_2696DFBF0);
}

uint64_t sub_24992FA7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFD70, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__componentTransitions, &qword_2696DFBF0);
}

uint64_t sub_24992FAAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout, &qword_2696DFC00);
}

uint64_t sub_24992FAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFD68, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__activeLayout, &qword_2696DFC00);
}

uint64_t sub_24992FB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout, &qword_2696DFBC8);
}

uint64_t sub_24992FB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFD60, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__transitioningLayout, &qword_2696DFBC8);
}

uint64_t sub_24992FB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition, &qword_2696DFC18);
}

uint64_t sub_24992FB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFD58, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__layoutTransition, &qword_2696DFC18);
}

uint64_t sub_24992FBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249906A00(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment, &qword_2696DFC28);
}

uint64_t sub_24992FBDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249906A70(a1, a2, a3, a4, &qword_2696DFC30, (uint64_t)&OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator__blackBackgroundTreatment, &qword_2696DFC28);
}

uint64_t sub_24992FC24()
{
  return type metadata accessor for ClusterTransitionCoordinator(0);
}

uint64_t type metadata accessor for ClusterTransitionCoordinator(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696DFCB8);
}

uint64_t sub_24992FC4C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24992FC84()
{
  sub_249930750(319, &qword_2696DFCC8, &qword_2696DFC50);
  if (v0 <= 0x3F)
  {
    sub_249930750(319, &qword_2696DFCD0, &qword_2696DFC58);
    if (v1 <= 0x3F)
    {
      sub_249932DF4(319, &qword_2696DFCD8, (void (*)(uint64_t))type metadata accessor for RequestContentModel);
      if (v2 <= 0x3F)
      {
        sub_2499306F8();
        if (v3 <= 0x3F)
        {
          sub_249930750(319, &qword_2696DFCE8, &qword_2696DFC60);
          if (v4 <= 0x3F)
          {
            sub_249930750(319, &qword_2696DFCF0, &qword_2696DFC68);
            if (v5 <= 0x3F)
            {
              sub_249930750(319, &qword_2696DFCF8, &qword_2696DFC48);
              if (v6 <= 0x3F)
              {
                sub_249930750(319, &qword_2696DFD00, &qword_2696DFC40);
                if (v7 <= 0x3F)
                {
                  sub_249930750(319, &qword_2696DFD08, &qword_2696DFC70);
                  if (v8 <= 0x3F) {
                    swift_updateClassMetadata2();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for ClusterTransitionCoordinator(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ClusterTransitionCoordinator);
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.requestContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$requestContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.focusOrder.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$focusOrder.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 296))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.zone1RequestContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.zone2RequestContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.transitioningRequestContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$transitioningRequestContent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.requestContentTransitions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$requestContentTransitions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 440))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.transitioningComponent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$transitioningComponent.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.componentTransitions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 512))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$componentTransitions.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 536))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.activeLayout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 560))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$activeLayout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.transitioningLayout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 608))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$transitioningLayout.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 632))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.layoutTransition.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$layoutTransition.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.blackBackgroundTreatment.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 704))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.blackBackgroundTreatment.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 712))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.blackBackgroundTreatment.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$blackBackgroundTreatment.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 728))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$blackBackgroundTreatment.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 736))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.$blackBackgroundTreatment.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentWillAppear.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 752))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentWillAppear.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 760))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentWillAppear.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentWillDisappear.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 776))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentWillDisappear.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 784))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentWillDisappear.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 792))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentDidDisappear.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 800))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentDidDisappear.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 808))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.instrumentDidDisappear.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 816))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.__allocating_init(zones:additionalDynamicListItems:additionalMapsMediaItems:)()
{
  return (*(uint64_t (**)(void))(v0 + 848))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.activeComponentIDs(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 856))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.setActiveComponentIDs(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.insert(widgets:in:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 872))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.remove(widget:from:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 880))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.showDecorations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 888))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.hideDecorations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 896))();
}

uint64_t dispatch thunk of ClusterTransitionCoordinator.updateRequestContent(with:for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 904))();
}

void sub_2499306F8()
{
  if (!qword_2696DFCE0)
  {
    unint64_t v0 = sub_249AEBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696DFCE0);
    }
  }
}

void sub_249930750(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_249AEBA18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for ClusterTransitionCoordinator.LayoutTransition(void *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_249AEB808();
    unint64_t v8 = *(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v102 = a2;
    uint64_t v11 = &a2[v9];
    uint64_t v12 = (int *)type metadata accessor for Layout();
    uint64_t v13 = *((void *)v12 - 1);
    uint64_t v100 = *(unsigned int (**)(char *, uint64_t, int *))(v13 + 48);
    if (v100(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      uint64_t v15 = v102;
    }
    else
    {
      uint64_t v98 = v13;
      uint64_t v95 = v8;
      uint64_t v96 = v7;
      v8(v10, v11, v7);
      uint64_t v17 = v12[5];
      uint64_t v18 = &v10[v17];
      uint64_t v19 = &v11[v17];
      uint64_t v20 = *((void *)v19 + 1);
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = v20;
      *(void *)&v10[v12[6]] = *(void *)&v11[v12[6]];
      uint64_t v21 = v12[7];
      uint64_t v22 = &v10[v21];
      uint64_t v23 = &v11[v21];
      uint64_t v92 = *((void *)v23 + 1);
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v92;
      *(void *)&v10[v12[8]] = *(void *)&v11[v12[8]];
      v10[v12[9]] = v11[v12[9]];
      uint64_t v24 = v12[10];
      uint64_t v25 = &v10[v24];
      uint64_t v26 = &v11[v24];
      long long v27 = *((_OWORD *)v26 + 4);
      long long v28 = *((_OWORD *)v26 + 2);
      *((_OWORD *)v25 + 3) = *((_OWORD *)v26 + 3);
      *((_OWORD *)v25 + 4) = v27;
      long long v29 = *((_OWORD *)v26 + 1);
      *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
      *((_OWORD *)v25 + 1) = v29;
      *((_OWORD *)v25 + 2) = v28;
      uint64_t v30 = v12[11];
      uint64_t v31 = &v10[v30];
      uint64_t v32 = &v11[v30];
      long long v33 = *((_OWORD *)v32 + 1);
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      *((_OWORD *)v31 + 1) = v33;
      uint64_t v34 = v12[12];
      uint64_t v35 = &v10[v34];
      uint64_t v36 = &v11[v34];
      uint64_t v37 = *(void *)&v11[v34 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v37)
      {
        uint64_t v38 = *(void **)v36;
        uint64_t v39 = *((void *)v36 + 1);
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = v39;
        uint64_t v40 = *((void *)v36 + 3);
        uint64_t v41 = *((void *)v36 + 4);
        *((void *)v35 + 2) = v37;
        *((void *)v35 + 3) = v40;
        *((void *)v35 + 4) = v41;
        uint64_t v42 = *((void *)v36 + 5);
        uint64_t v94 = *((void *)v36 + 6);
        char v93 = v36[56];
        id v43 = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_249930CE0(v42, v94, v93);
        *((void *)v35 + 5) = v42;
        *((void *)v35 + 6) = v94;
        v35[56] = v93;
      }
      else
      {
        long long v44 = *((_OWORD *)v36 + 1);
        *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
        *((_OWORD *)v35 + 1) = v44;
        *((_OWORD *)v35 + 2) = *((_OWORD *)v36 + 2);
        *(_OWORD *)(v35 + 41) = *(_OWORD *)(v36 + 41);
      }
      uint64_t v15 = v102;
      *((void *)v35 + 8) = *((void *)v36 + 8);
      uint64_t v45 = v12[13];
      uint64_t v46 = &v10[v45];
      uint64_t v47 = &v11[v45];
      uint64_t v48 = *(void *)v47;
      uint64_t v49 = *((void *)v47 + 1);
      *(void *)uint64_t v46 = v48;
      *((void *)v46 + 1) = v49;
      uint64_t v13 = v98;
      uint64_t v50 = *(void (**)(char *, void, uint64_t, int *))(v98 + 56);
      swift_bridgeObjectRetain();
      v50(v10, 0, 1, v12);
      unint64_t v8 = v95;
      uint64_t v7 = v96;
    }
    uint64_t v51 = a3[6];
    uint64_t v52 = (char *)a1 + v51;
    unint64_t v53 = &v15[v51];
    if (v100(&v15[v51], 1, v12))
    {
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      uint64_t v99 = v13;
      v8(v52, v53, v7);
      uint64_t v55 = v12[5];
      uint64_t v56 = &v52[v55];
      uint64_t v57 = &v53[v55];
      uint64_t v58 = *((void *)v57 + 1);
      *(void *)uint64_t v56 = *(void *)v57;
      *((void *)v56 + 1) = v58;
      *(void *)&v52[v12[6]] = *(void *)&v53[v12[6]];
      uint64_t v59 = v12[7];
      uint64_t v60 = &v52[v59];
      uint64_t v61 = &v53[v59];
      uint64_t v62 = *((void *)v61 + 1);
      *(void *)uint64_t v60 = *(void *)v61;
      *((void *)v60 + 1) = v62;
      *(void *)&v52[v12[8]] = *(void *)&v53[v12[8]];
      v52[v12[9]] = v53[v12[9]];
      uint64_t v63 = v12[10];
      uint64_t v64 = &v52[v63];
      uint64_t v65 = &v53[v63];
      long long v66 = *((_OWORD *)v65 + 4);
      long long v67 = *((_OWORD *)v65 + 2);
      *((_OWORD *)v64 + 3) = *((_OWORD *)v65 + 3);
      *((_OWORD *)v64 + 4) = v66;
      long long v68 = *((_OWORD *)v65 + 1);
      *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
      *((_OWORD *)v64 + 1) = v68;
      *((_OWORD *)v64 + 2) = v67;
      uint64_t v69 = v12[11];
      uint64_t v70 = &v52[v69];
      uint64_t v71 = &v53[v69];
      long long v72 = *((_OWORD *)v71 + 1);
      *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
      *((_OWORD *)v70 + 1) = v72;
      uint64_t v73 = v12[12];
      uint64_t v74 = &v52[v73];
      char v75 = &v53[v73];
      uint64_t v76 = *(void *)&v53[v73 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v76)
      {
        uint64_t v77 = *(void **)v75;
        uint64_t v78 = *((void *)v75 + 1);
        *(void *)uint64_t v74 = *(void *)v75;
        *((void *)v74 + 1) = v78;
        uint64_t v79 = *((void *)v75 + 3);
        uint64_t v80 = *((void *)v75 + 4);
        *((void *)v74 + 2) = v76;
        *((void *)v74 + 3) = v79;
        *((void *)v74 + 4) = v80;
        uint64_t v101 = *((void *)v75 + 5);
        uint64_t v97 = *((void *)v75 + 6);
        char v81 = v75[56];
        id v82 = v77;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_249930CE0(v101, v97, v81);
        *((void *)v74 + 5) = v101;
        *((void *)v74 + 6) = v97;
        v74[56] = v81;
        uint64_t v15 = v102;
      }
      else
      {
        long long v83 = *((_OWORD *)v75 + 1);
        *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
        *((_OWORD *)v74 + 1) = v83;
        *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
        *(_OWORD *)(v74 + 41) = *(_OWORD *)(v75 + 41);
      }
      *((void *)v74 + 8) = *((void *)v75 + 8);
      uint64_t v84 = v12[13];
      uint64_t v85 = &v52[v84];
      int v86 = &v53[v84];
      uint64_t v87 = *(void *)v86;
      uint64_t v88 = *((void *)v86 + 1);
      *(void *)uint64_t v85 = v87;
      *((void *)v85 + 1) = v88;
      uint64_t v89 = *(void (**)(char *, void, uint64_t, int *))(v99 + 56);
      swift_bridgeObjectRetain();
      v89(v52, 0, 1, v12);
    }
    uint64_t v90 = a3[8];
    *((unsigned char *)a1 + a3[7]) = v15[a3[7]];
    *((unsigned char *)a1 + v90) = v15[v90];
  }
  return a1;
}

uint64_t sub_249930CE0(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = vars8;
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEB808();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t v7 = type metadata accessor for Layout();
  unint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    v5(v6, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v9 = v6 + *(int *)(v7 + 48);
    if (*(void *)(v9 + 16))
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249930F4C(*(void *)(v9 + 40), *(void *)(v9 + 48), *(unsigned char *)(v9 + 56));
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = a1 + *(int *)(a2 + 24);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(v10, 1, v7);
  if (!result)
  {
    v5(v10, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v12 = v10 + *(int *)(v7 + 48);
    if (*(void *)(v12 + 16))
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249930F4C(*(void *)(v12 + 40), *(void *)(v12 + 48), *(unsigned char *)(v12 + 56));
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249930F4C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = swift_bridgeObjectRelease();
  if ((a3 & 1) == 0)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v103 = a1;
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Layout();
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v102 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  if (v102(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = v103;
  }
  else
  {
    uint64_t v96 = v12;
    uint64_t v98 = a3;
    uint64_t v100 = a2;
    uint64_t v94 = v7;
    uint64_t v95 = v6;
    v7((uint64_t)v9, (uint64_t)v10, v6);
    uint64_t v15 = v11[5];
    uint64_t v16 = &v9[v15];
    uint64_t v17 = &v10[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    *(void *)&v9[v11[6]] = *(void *)&v10[v11[6]];
    uint64_t v19 = v11[7];
    uint64_t v20 = &v9[v19];
    uint64_t v21 = &v10[v19];
    uint64_t v22 = *((void *)v21 + 1);
    *(void *)uint64_t v20 = *(void *)v21;
    *((void *)v20 + 1) = v22;
    *(void *)&v9[v11[8]] = *(void *)&v10[v11[8]];
    v9[v11[9]] = v10[v11[9]];
    uint64_t v23 = v11[10];
    uint64_t v24 = &v9[v23];
    uint64_t v25 = &v10[v23];
    long long v26 = *((_OWORD *)v25 + 4);
    long long v27 = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 3) = *((_OWORD *)v25 + 3);
    *((_OWORD *)v24 + 4) = v26;
    long long v28 = *((_OWORD *)v25 + 1);
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v28;
    *((_OWORD *)v24 + 2) = v27;
    uint64_t v29 = v11[11];
    uint64_t v30 = &v9[v29];
    uint64_t v31 = &v10[v29];
    long long v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    uint64_t v33 = v11[12];
    uint64_t v34 = &v9[v33];
    uint64_t v35 = &v10[v33];
    uint64_t v36 = *(void *)&v10[v33 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v36)
    {
      uint64_t v37 = *(void **)v35;
      uint64_t v38 = *((void *)v35 + 1);
      *(void *)uint64_t v34 = *(void *)v35;
      *((void *)v34 + 1) = v38;
      uint64_t v39 = *((void *)v35 + 3);
      uint64_t v40 = *((void *)v35 + 4);
      *((void *)v34 + 2) = v36;
      *((void *)v34 + 3) = v39;
      *((void *)v34 + 4) = v40;
      uint64_t v41 = *((void *)v35 + 5);
      uint64_t v42 = *((void *)v35 + 6);
      char v93 = v35[56];
      id v43 = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_249930CE0(v41, v42, v93);
      *((void *)v34 + 5) = v41;
      *((void *)v34 + 6) = v42;
      v34[56] = v93;
    }
    else
    {
      long long v44 = *((_OWORD *)v35 + 1);
      *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
      *((_OWORD *)v34 + 1) = v44;
      *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
      *(_OWORD *)(v34 + 41) = *(_OWORD *)(v35 + 41);
    }
    uint64_t v14 = v103;
    *((void *)v34 + 8) = *((void *)v35 + 8);
    uint64_t v45 = v11[13];
    uint64_t v46 = &v9[v45];
    uint64_t v47 = &v10[v45];
    uint64_t v48 = *(void *)v47;
    uint64_t v49 = *((void *)v47 + 1);
    *(void *)uint64_t v46 = v48;
    *((void *)v46 + 1) = v49;
    uint64_t v12 = v96;
    uint64_t v50 = *(void (**)(char *, void, uint64_t, int *))(v96 + 56);
    swift_bridgeObjectRetain();
    v50(v9, 0, 1, v11);
    a3 = v98;
    a2 = v100;
    uint64_t v7 = v94;
    uint64_t v6 = v95;
  }
  uint64_t v51 = a3[6];
  uint64_t v52 = (char *)(v14 + v51);
  unint64_t v53 = (char *)(a2 + v51);
  if (v102((char *)(a2 + v51), 1, v11))
  {
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    uint64_t v97 = v12;
    uint64_t v99 = a3;
    uint64_t v101 = a2;
    v7((uint64_t)v52, (uint64_t)v53, v6);
    uint64_t v55 = v11[5];
    uint64_t v56 = &v52[v55];
    uint64_t v57 = &v53[v55];
    uint64_t v58 = *((void *)v57 + 1);
    *(void *)uint64_t v56 = *(void *)v57;
    *((void *)v56 + 1) = v58;
    *(void *)&v52[v11[6]] = *(void *)&v53[v11[6]];
    uint64_t v59 = v11[7];
    uint64_t v60 = &v52[v59];
    uint64_t v61 = &v53[v59];
    uint64_t v62 = *((void *)v61 + 1);
    *(void *)uint64_t v60 = *(void *)v61;
    *((void *)v60 + 1) = v62;
    *(void *)&v52[v11[8]] = *(void *)&v53[v11[8]];
    v52[v11[9]] = v53[v11[9]];
    uint64_t v63 = v11[10];
    uint64_t v64 = &v52[v63];
    uint64_t v65 = &v53[v63];
    long long v66 = *((_OWORD *)v65 + 4);
    long long v67 = *((_OWORD *)v65 + 2);
    *((_OWORD *)v64 + 3) = *((_OWORD *)v65 + 3);
    *((_OWORD *)v64 + 4) = v66;
    long long v68 = *((_OWORD *)v65 + 1);
    *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
    *((_OWORD *)v64 + 1) = v68;
    *((_OWORD *)v64 + 2) = v67;
    uint64_t v69 = v11[11];
    uint64_t v70 = &v52[v69];
    uint64_t v71 = &v53[v69];
    long long v72 = *((_OWORD *)v71 + 1);
    *(_OWORD *)uint64_t v70 = *(_OWORD *)v71;
    *((_OWORD *)v70 + 1) = v72;
    uint64_t v73 = v11[12];
    uint64_t v74 = &v52[v73];
    char v75 = &v53[v73];
    uint64_t v76 = *(void *)&v53[v73 + 16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v76)
    {
      uint64_t v77 = *(void **)v75;
      uint64_t v78 = *((void *)v75 + 1);
      *(void *)uint64_t v74 = *(void *)v75;
      *((void *)v74 + 1) = v78;
      uint64_t v79 = *((void *)v75 + 3);
      uint64_t v80 = *((void *)v75 + 4);
      *((void *)v74 + 2) = v76;
      *((void *)v74 + 3) = v79;
      *((void *)v74 + 4) = v80;
      uint64_t v81 = *((void *)v75 + 5);
      uint64_t v82 = *((void *)v75 + 6);
      char v104 = v75[56];
      id v83 = v77;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_249930CE0(v81, v82, v104);
      *((void *)v74 + 5) = v81;
      *((void *)v74 + 6) = v82;
      v74[56] = v104;
    }
    else
    {
      long long v84 = *((_OWORD *)v75 + 1);
      *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
      *((_OWORD *)v74 + 1) = v84;
      *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
      *(_OWORD *)(v74 + 41) = *(_OWORD *)(v75 + 41);
    }
    *((void *)v74 + 8) = *((void *)v75 + 8);
    uint64_t v85 = v11[13];
    int v86 = &v52[v85];
    uint64_t v87 = &v53[v85];
    uint64_t v88 = *(void *)v87;
    uint64_t v89 = *((void *)v87 + 1);
    *(void *)int v86 = v88;
    *((void *)v86 + 1) = v89;
    uint64_t v90 = *(void (**)(char *, void, uint64_t, int *))(v97 + 56);
    swift_bridgeObjectRetain();
    v90(v52, 0, 1, v11);
    a3 = v99;
    a2 = v101;
  }
  uint64_t v91 = a3[8];
  *(unsigned char *)(v14 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(v14 + v91) = *(unsigned char *)(a2 + v91);
  return v14;
}

uint64_t assignWithCopy for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v183 = *(void *)(v6 - 8);
  uint64_t v179 = *(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 24);
  v179(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v185 = a1;
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Layout();
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v11 + 48);
  int v13 = v12((uint64_t)v8, 1, v10);
  uint64_t v184 = v12;
  int v14 = v12((uint64_t)v9, 1, v10);
  uint64_t v180 = v6;
  if (!v13)
  {
    if (!v14)
    {
      v179((uint64_t)v8, (uint64_t)v9, v6);
      uint64_t v41 = v10[5];
      uint64_t v42 = &v8[v41];
      id v43 = &v9[v41];
      void *v42 = *v43;
      v42[1] = v43[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v44 = v10[7];
      uint64_t v45 = &v8[v44];
      uint64_t v46 = &v9[v44];
      *uint64_t v45 = *v46;
      v45[1] = v46[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
      swift_retain();
      swift_release();
      v8[v10[9]] = v9[v10[9]];
      uint64_t v47 = v10[10];
      uint64_t v48 = &v8[v47];
      uint64_t v49 = &v9[v47];
      *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
      long long v50 = *((_OWORD *)v49 + 1);
      long long v51 = *((_OWORD *)v49 + 2);
      long long v52 = *((_OWORD *)v49 + 3);
      *(_DWORD *)(v48 + 63) = *(_DWORD *)(v49 + 63);
      *((_OWORD *)v48 + 2) = v51;
      *((_OWORD *)v48 + 3) = v52;
      *((_OWORD *)v48 + 1) = v50;
      *((void *)v48 + 9) = *((void *)v49 + 9);
      uint64_t v53 = v10[11];
      uint64_t v54 = &v8[v53];
      uint64_t v55 = &v9[v53];
      *uint64_t v54 = *v55;
      v54[1] = v55[1];
      void v54[2] = v55[2];
      v54[3] = v55[3];
      uint64_t v56 = v10[12];
      uint64_t v57 = (uint64_t)&v8[v56];
      uint64_t v58 = &v9[v56];
      uint64_t v59 = *(void *)&v8[v56 + 16];
      uint64_t v60 = *(void *)&v9[v56 + 16];
      uint64_t v178 = v11;
      if (v59)
      {
        if (v60)
        {
          uint64_t v61 = *(void **)v57;
          uint64_t v62 = *(void **)v58;
          *(void *)uint64_t v57 = *(void *)v58;
          id v63 = v62;

          *(void *)(v57 + 8) = *((void *)v58 + 1);
          *(void *)(v57 + 16) = *((void *)v58 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v57 + 24) = *((void *)v58 + 3);
          *(void *)(v57 + 32) = *((void *)v58 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v173 = a2;
          uint64_t v64 = *((void *)v58 + 5);
          uint64_t v65 = *((void *)v58 + 6);
          LOBYTE(v61) = v58[56];
          sub_249930CE0(v64, v65, (char)v61);
          uint64_t v66 = *(void *)(v57 + 40);
          uint64_t v67 = *(void *)(v57 + 48);
          char v68 = *(unsigned char *)(v57 + 56);
          *(void *)(v57 + 40) = v64;
          *(void *)(v57 + 48) = v65;
          a2 = v173;
          *(unsigned char *)(v57 + 56) = (_BYTE)v61;
          sub_249930F4C(v66, v67, v68);
        }
        else
        {
          sub_249931FAC(v57);
          long long v151 = *((_OWORD *)v58 + 1);
          long long v150 = *((_OWORD *)v58 + 2);
          long long v152 = *(_OWORD *)v58;
          *(_OWORD *)(v57 + 41) = *(_OWORD *)(v58 + 41);
          *(_OWORD *)(v57 + 16) = v151;
          *(_OWORD *)(v57 + 32) = v150;
          *(_OWORD *)uint64_t v57 = v152;
        }
      }
      else if (v60)
      {
        uint64_t v143 = *(void **)v58;
        *(void *)uint64_t v57 = *(void *)v58;
        *(void *)(v57 + 8) = *((void *)v58 + 1);
        *(void *)(v57 + 16) = *((void *)v58 + 2);
        *(void *)(v57 + 24) = *((void *)v58 + 3);
        *(void *)(v57 + 32) = *((void *)v58 + 4);
        uint64_t v169 = *((void *)v58 + 6);
        uint64_t v171 = *((void *)v58 + 5);
        char v175 = v58[56];
        id v144 = v143;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_249930CE0(v171, v169, v175);
        *(void *)(v57 + 40) = v171;
        *(void *)(v57 + 48) = v169;
        *(unsigned char *)(v57 + 56) = v175;
      }
      else
      {
        long long v156 = *(_OWORD *)v58;
        long long v157 = *((_OWORD *)v58 + 1);
        long long v158 = *((_OWORD *)v58 + 2);
        *(_OWORD *)(v57 + 41) = *(_OWORD *)(v58 + 41);
        *(_OWORD *)(v57 + 16) = v157;
        *(_OWORD *)(v57 + 32) = v158;
        *(_OWORD *)uint64_t v57 = v156;
      }
      *(void *)(v57 + 64) = *((void *)v58 + 8);
      uint64_t v159 = v10[13];
      uint64_t v160 = &v8[v159];
      uint64_t v161 = &v9[v159];
      *(void *)&v8[v159] = *(void *)&v9[v159];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v160 + 1) = *((void *)v161 + 1);
      uint64_t v11 = v178;
      goto LABEL_8;
    }
    sub_24992EC88((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Layout);
LABEL_7:
    uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
    memcpy(v8, v9, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_8:
    uint64_t v40 = v184;
    goto LABEL_14;
  }
  if (v14) {
    goto LABEL_7;
  }
  uint64_t v172 = a2;
  uint64_t v177 = v11;
  uint64_t v181 = a3;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v183 + 16))(v8, v9, v6);
  uint64_t v15 = v10[5];
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
  uint64_t v18 = v10[7];
  uint64_t v19 = &v8[v18];
  uint64_t v20 = &v9[v18];
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
  v8[v10[9]] = v9[v10[9]];
  uint64_t v21 = v10[10];
  uint64_t v22 = &v8[v21];
  uint64_t v23 = &v9[v21];
  long long v25 = v23[3];
  long long v24 = v23[4];
  long long v26 = v23[2];
  v22[1] = v23[1];
  v22[2] = v26;
  v22[3] = v25;
  v22[4] = v24;
  *uint64_t v22 = *v23;
  uint64_t v27 = v10[11];
  long long v28 = &v8[v27];
  uint64_t v29 = &v9[v27];
  long long v30 = v29[1];
  *long long v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = v10[12];
  long long v32 = &v8[v31];
  uint64_t v33 = &v9[v31];
  uint64_t v34 = *(void *)&v9[v31 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v34)
  {
    uint64_t v35 = *(void **)v33;
    *(void *)long long v32 = *(void *)v33;
    *((void *)v32 + 1) = *((void *)v33 + 1);
    *((void *)v32 + 2) = *((void *)v33 + 2);
    *((void *)v32 + 3) = *((void *)v33 + 3);
    *((void *)v32 + 4) = *((void *)v33 + 4);
    uint64_t v37 = *((void *)v33 + 5);
    uint64_t v36 = *((void *)v33 + 6);
    char v170 = v33[56];
    id v38 = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249930CE0(v37, v36, v170);
    *((void *)v32 + 5) = v37;
    *((void *)v32 + 6) = v36;
    v32[56] = v170;
  }
  else
  {
    long long v69 = *(_OWORD *)v33;
    long long v70 = *((_OWORD *)v33 + 1);
    long long v71 = *((_OWORD *)v33 + 2);
    *(_OWORD *)(v32 + 41) = *(_OWORD *)(v33 + 41);
    *((_OWORD *)v32 + 1) = v70;
    *((_OWORD *)v32 + 2) = v71;
    *(_OWORD *)long long v32 = v69;
  }
  uint64_t v40 = v12;
  *((void *)v32 + 8) = *((void *)v33 + 8);
  uint64_t v72 = v10[13];
  uint64_t v73 = &v8[v72];
  uint64_t v74 = &v9[v72];
  *uint64_t v73 = *v74;
  v73[1] = v74[1];
  a2 = v172;
  uint64_t v11 = v177;
  char v75 = *(void (**)(unsigned char *, void, uint64_t, int *))(v177 + 56);
  swift_bridgeObjectRetain();
  v75(v8, 0, 1, v10);
  a3 = v181;
LABEL_14:
  uint64_t v76 = a3[6];
  uint64_t v77 = (unsigned char *)(v185 + v76);
  uint64_t v78 = (unsigned char *)(a2 + v76);
  int v79 = v40(v185 + v76, 1, v10);
  int v80 = v40((uint64_t)v78, 1, v10);
  if (v79)
  {
    if (!v80)
    {
      uint64_t v174 = a2;
      uint64_t v182 = a3;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v183 + 16))(v77, v78, v180);
      uint64_t v81 = v10[5];
      uint64_t v82 = &v77[v81];
      id v83 = &v78[v81];
      *uint64_t v82 = *v83;
      v82[1] = v83[1];
      *(void *)&v77[v10[6]] = *(void *)&v78[v10[6]];
      uint64_t v84 = v10[7];
      uint64_t v85 = &v77[v84];
      int v86 = &v78[v84];
      *uint64_t v85 = *v86;
      v85[1] = v86[1];
      *(void *)&v77[v10[8]] = *(void *)&v78[v10[8]];
      v77[v10[9]] = v78[v10[9]];
      uint64_t v87 = v10[10];
      uint64_t v88 = &v77[v87];
      uint64_t v89 = &v78[v87];
      long long v91 = v89[3];
      long long v90 = v89[4];
      long long v92 = v89[2];
      v88[1] = v89[1];
      v88[2] = v92;
      v88[3] = v91;
      v88[4] = v90;
      *uint64_t v88 = *v89;
      uint64_t v93 = v10[11];
      uint64_t v94 = &v77[v93];
      uint64_t v95 = &v78[v93];
      long long v96 = v95[1];
      _OWORD *v94 = *v95;
      v94[1] = v96;
      uint64_t v97 = v10[12];
      uint64_t v98 = &v77[v97];
      uint64_t v99 = &v78[v97];
      uint64_t v100 = *(void *)&v78[v97 + 16];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v100)
      {
        uint64_t v101 = *(void **)v99;
        *(void *)uint64_t v98 = *(void *)v99;
        *((void *)v98 + 1) = *((void *)v99 + 1);
        *((void *)v98 + 2) = *((void *)v99 + 2);
        *((void *)v98 + 3) = *((void *)v99 + 3);
        *((void *)v98 + 4) = *((void *)v99 + 4);
        uint64_t v102 = *((void *)v99 + 5);
        uint64_t v103 = *((void *)v99 + 6);
        char v104 = v99[56];
        id v105 = v101;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_249930CE0(v102, v103, v104);
        *((void *)v98 + 5) = v102;
        *((void *)v98 + 6) = v103;
        v98[56] = v104;
      }
      else
      {
        long long v136 = *(_OWORD *)v99;
        long long v137 = *((_OWORD *)v99 + 1);
        long long v138 = *((_OWORD *)v99 + 2);
        *(_OWORD *)(v98 + 41) = *(_OWORD *)(v99 + 41);
        *((_OWORD *)v98 + 1) = v137;
        *((_OWORD *)v98 + 2) = v138;
        *(_OWORD *)uint64_t v98 = v136;
      }
      *((void *)v98 + 8) = *((void *)v99 + 8);
      uint64_t v139 = v10[13];
      uint64_t v140 = &v77[v139];
      uint64_t v141 = &v78[v139];
      *uint64_t v140 = *v141;
      v140[1] = v141[1];
      uint64_t v142 = *(void (**)(unsigned char *, void, uint64_t, int *))(v11 + 56);
      swift_bridgeObjectRetain();
      v142(v77, 0, 1, v10);
      a2 = v174;
LABEL_36:
      a3 = v182;
      goto LABEL_37;
    }
  }
  else
  {
    if (!v80)
    {
      uint64_t v182 = a3;
      v179((uint64_t)v77, (uint64_t)v78, v180);
      uint64_t v107 = v10[5];
      uint64_t v108 = &v77[v107];
      uint64_t v109 = &v78[v107];
      *uint64_t v108 = *v109;
      v108[1] = v109[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v77[v10[6]] = *(void *)&v78[v10[6]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v110 = v10[7];
      uint64_t v111 = &v77[v110];
      uint64_t v112 = &v78[v110];
      *uint64_t v111 = *v112;
      v111[1] = v112[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&v77[v10[8]] = *(void *)&v78[v10[8]];
      swift_retain();
      swift_release();
      v77[v10[9]] = v78[v10[9]];
      uint64_t v113 = v10[10];
      uint64_t v114 = &v77[v113];
      uint64_t v115 = &v78[v113];
      *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
      long long v116 = *((_OWORD *)v115 + 1);
      long long v117 = *((_OWORD *)v115 + 2);
      long long v118 = *((_OWORD *)v115 + 3);
      *(_DWORD *)(v114 + 63) = *(_DWORD *)(v115 + 63);
      *((_OWORD *)v114 + 2) = v117;
      *((_OWORD *)v114 + 3) = v118;
      *((_OWORD *)v114 + 1) = v116;
      *((void *)v114 + 9) = *((void *)v115 + 9);
      uint64_t v119 = v10[11];
      uint64_t v120 = &v77[v119];
      uint64_t v121 = &v78[v119];
      void *v120 = *v121;
      v120[1] = v121[1];
      v120[2] = v121[2];
      v120[3] = v121[3];
      uint64_t v122 = v10[12];
      uint64_t v123 = (uint64_t)&v77[v122];
      uint64_t v124 = &v78[v122];
      uint64_t v125 = *(void *)&v77[v122 + 16];
      uint64_t v126 = *(void *)&v78[v122 + 16];
      if (v125)
      {
        if (v126)
        {
          uint64_t v127 = *(void **)v123;
          uint64_t v128 = *(void **)v124;
          *(void *)uint64_t v123 = *(void *)v124;
          id v129 = v128;

          *(void *)(v123 + 8) = *((void *)v124 + 1);
          *(void *)(v123 + 16) = *((void *)v124 + 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(v123 + 24) = *((void *)v124 + 3);
          *(void *)(v123 + 32) = *((void *)v124 + 4);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v130 = *((void *)v124 + 5);
          uint64_t v131 = *((void *)v124 + 6);
          char v132 = v124[56];
          sub_249930CE0(v130, v131, v132);
          uint64_t v133 = *(void *)(v123 + 40);
          uint64_t v134 = *(void *)(v123 + 48);
          char v135 = *(unsigned char *)(v123 + 56);
          *(void *)(v123 + 40) = v130;
          *(void *)(v123 + 48) = v131;
          *(unsigned char *)(v123 + 56) = v132;
          sub_249930F4C(v133, v134, v135);
        }
        else
        {
          sub_249931FAC(v123);
          long long v154 = *((_OWORD *)v124 + 1);
          long long v153 = *((_OWORD *)v124 + 2);
          long long v155 = *(_OWORD *)v124;
          *(_OWORD *)(v123 + 41) = *(_OWORD *)(v124 + 41);
          *(_OWORD *)(v123 + 16) = v154;
          *(_OWORD *)(v123 + 32) = v153;
          *(_OWORD *)uint64_t v123 = v155;
        }
      }
      else if (v126)
      {
        uint64_t v145 = *(void **)v124;
        *(void *)uint64_t v123 = *(void *)v124;
        *(void *)(v123 + 8) = *((void *)v124 + 1);
        *(void *)(v123 + 16) = *((void *)v124 + 2);
        *(void *)(v123 + 24) = *((void *)v124 + 3);
        *(void *)(v123 + 32) = *((void *)v124 + 4);
        uint64_t v146 = *((void *)v124 + 5);
        uint64_t v147 = *((void *)v124 + 6);
        uint64_t v176 = a2;
        char v148 = v124[56];
        id v149 = v145;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_249930CE0(v146, v147, v148);
        *(void *)(v123 + 40) = v146;
        *(void *)(v123 + 48) = v147;
        *(unsigned char *)(v123 + 56) = v148;
        a2 = v176;
      }
      else
      {
        long long v162 = *(_OWORD *)v124;
        long long v163 = *((_OWORD *)v124 + 1);
        long long v164 = *((_OWORD *)v124 + 2);
        *(_OWORD *)(v123 + 41) = *(_OWORD *)(v124 + 41);
        *(_OWORD *)(v123 + 16) = v163;
        *(_OWORD *)(v123 + 32) = v164;
        *(_OWORD *)uint64_t v123 = v162;
      }
      *(void *)(v123 + 64) = *((void *)v124 + 8);
      uint64_t v165 = v10[13];
      uint64_t v166 = &v77[v165];
      uint64_t v167 = &v78[v165];
      *(void *)&v77[v165] = *(void *)&v78[v165];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)v166 + 1) = *((void *)v167 + 1);
      goto LABEL_36;
    }
    sub_24992EC88((uint64_t)v77, (uint64_t (*)(void))type metadata accessor for Layout);
  }
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
  memcpy(v77, v78, *(void *)(*(void *)(v106 - 8) + 64));
LABEL_37:
  uint64_t result = v185;
  *(unsigned char *)(v185 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(v185 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return result;
}

uint64_t sub_249931FAC(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v49 = a3;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)(a1 + v8);
  uint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = (int *)type metadata accessor for Layout();
  uint64_t v12 = *((void *)v11 - 1);
  uint64_t v48 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
  if (v48(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    *(_OWORD *)&v9[v11[5]] = *(_OWORD *)&v10[v11[5]];
    *(void *)&v9[v11[6]] = *(void *)&v10[v11[6]];
    *(_OWORD *)&v9[v11[7]] = *(_OWORD *)&v10[v11[7]];
    *(void *)&v9[v11[8]] = *(void *)&v10[v11[8]];
    v9[v11[9]] = v10[v11[9]];
    uint64_t v14 = v11[10];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    long long v17 = *((_OWORD *)v16 + 3);
    *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
    *((_OWORD *)v15 + 3) = v17;
    *((_OWORD *)v15 + 4) = *((_OWORD *)v16 + 4);
    long long v18 = *((_OWORD *)v16 + 1);
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    *((_OWORD *)v15 + 1) = v18;
    uint64_t v19 = v11[11];
    uint64_t v20 = &v9[v19];
    uint64_t v21 = &v10[v19];
    long long v22 = *((_OWORD *)v21 + 1);
    *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v22;
    uint64_t v23 = v11[12];
    long long v24 = &v9[v23];
    long long v25 = &v10[v23];
    long long v26 = *((_OWORD *)v25 + 3);
    *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
    *((_OWORD *)v24 + 3) = v26;
    *((void *)v24 + 8) = *((void *)v25 + 8);
    long long v27 = *((_OWORD *)v25 + 1);
    *(_OWORD *)long long v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v27;
    *(_OWORD *)&v9[v11[13]] = *(_OWORD *)&v10[v11[13]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v28 = v49[6];
  uint64_t v29 = (char *)(a1 + v28);
  long long v30 = (char *)(a2 + v28);
  if (v48((char *)(a2 + v28), 1, v11))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v29, (uint64_t)v30, v6);
    *(_OWORD *)&v29[v11[5]] = *(_OWORD *)&v30[v11[5]];
    *(void *)&v29[v11[6]] = *(void *)&v30[v11[6]];
    *(_OWORD *)&v29[v11[7]] = *(_OWORD *)&v30[v11[7]];
    *(void *)&v29[v11[8]] = *(void *)&v30[v11[8]];
    v29[v11[9]] = v30[v11[9]];
    uint64_t v32 = v11[10];
    uint64_t v33 = &v29[v32];
    uint64_t v34 = &v30[v32];
    long long v35 = *((_OWORD *)v34 + 3);
    *((_OWORD *)v33 + 2) = *((_OWORD *)v34 + 2);
    *((_OWORD *)v33 + 3) = v35;
    *((_OWORD *)v33 + 4) = *((_OWORD *)v34 + 4);
    long long v36 = *((_OWORD *)v34 + 1);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *((_OWORD *)v33 + 1) = v36;
    uint64_t v37 = v11[11];
    id v38 = &v29[v37];
    uint64_t v39 = &v30[v37];
    long long v40 = *((_OWORD *)v39 + 1);
    *(_OWORD *)id v38 = *(_OWORD *)v39;
    *((_OWORD *)v38 + 1) = v40;
    uint64_t v41 = v11[12];
    uint64_t v42 = &v29[v41];
    id v43 = &v30[v41];
    long long v44 = *((_OWORD *)v43 + 3);
    *((_OWORD *)v42 + 2) = *((_OWORD *)v43 + 2);
    *((_OWORD *)v42 + 3) = v44;
    *((void *)v42 + 8) = *((void *)v43 + 8);
    long long v45 = *((_OWORD *)v43 + 1);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v45;
    *(_OWORD *)&v29[v11[13]] = *(_OWORD *)&v30[v11[13]];
    (*(void (**)(char *, void, uint64_t, int *))(v12 + 56))(v29, 0, 1, v11);
  }
  uint64_t v46 = v49[8];
  *(unsigned char *)(a1 + v49[7]) = *(unsigned char *)(a2 + v49[7]);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  return a1;
}

uint64_t assignWithTake for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v120 = *(void *)(v6 - 8);
  uint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 40);
  v119(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (unsigned char *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for Layout();
  uint64_t v121 = *((void *)v10 - 1);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v121 + 48);
  int v12 = v11(v8, 1, v10);
  int v13 = v11(v9, 1, v10);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v120 + 32))(v8, v9, v6);
      *(_OWORD *)&v8[v10[5]] = *(_OWORD *)&v9[v10[5]];
      *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
      *(_OWORD *)&v8[v10[7]] = *(_OWORD *)&v9[v10[7]];
      *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
      v8[v10[9]] = v9[v10[9]];
      uint64_t v14 = v10[10];
      uint64_t v15 = &v8[v14];
      uint64_t v16 = &v9[v14];
      long long v17 = v16[3];
      void v15[2] = v16[2];
      v15[3] = v17;
      v15[4] = v16[4];
      long long v18 = v16[1];
      *uint64_t v15 = *v16;
      v15[1] = v18;
      uint64_t v19 = v10[11];
      uint64_t v20 = &v8[v19];
      uint64_t v21 = &v9[v19];
      long long v22 = v21[1];
      *uint64_t v20 = *v21;
      v20[1] = v22;
      uint64_t v23 = v10[12];
      long long v24 = &v8[v23];
      long long v25 = &v9[v23];
      long long v26 = *((_OWORD *)v25 + 3);
      *((_OWORD *)v24 + 2) = *((_OWORD *)v25 + 2);
      *((_OWORD *)v24 + 3) = v26;
      *((void *)v24 + 8) = *((void *)v25 + 8);
      long long v27 = *((_OWORD *)v25 + 1);
      *(_OWORD *)long long v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v27;
      *(_OWORD *)&v8[v10[13]] = *(_OWORD *)&v9[v10[13]];
      (*(void (**)(unsigned char *, void, uint64_t, int *))(v121 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_24992EC88((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Layout);
LABEL_6:
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
    memcpy(v8, v9, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  long long v118 = a3;
  v119((uint64_t)v8, (uint64_t)v9, v6);
  uint64_t v51 = v10[5];
  long long v52 = &v8[v51];
  uint64_t v53 = (uint64_t *)&v9[v51];
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  *long long v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  *(void *)&v8[v10[6]] = *(void *)&v9[v10[6]];
  swift_bridgeObjectRelease();
  uint64_t v56 = v10[7];
  uint64_t v57 = &v8[v56];
  uint64_t v58 = (uint64_t *)&v9[v56];
  uint64_t v60 = *v58;
  uint64_t v59 = v58[1];
  *uint64_t v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  *(void *)&v8[v10[8]] = *(void *)&v9[v10[8]];
  swift_release();
  v8[v10[9]] = v9[v10[9]];
  uint64_t v61 = v10[10];
  uint64_t v62 = &v8[v61];
  id v63 = &v9[v61];
  long long v64 = *((_OWORD *)v63 + 3);
  *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
  *((_OWORD *)v62 + 3) = v64;
  *(_DWORD *)(v62 + 63) = *(_DWORD *)(v63 + 63);
  long long v65 = *((_OWORD *)v63 + 1);
  *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
  *((_OWORD *)v62 + 1) = v65;
  *((void *)v62 + 9) = *((void *)v63 + 9);
  uint64_t v66 = v10[11];
  uint64_t v67 = &v8[v66];
  char v68 = &v9[v66];
  long long v69 = v68[1];
  _OWORD *v67 = *v68;
  v67[1] = v69;
  uint64_t v70 = v10[12];
  uint64_t v71 = (uint64_t)&v8[v70];
  uint64_t v72 = &v9[v70];
  if (!*(void *)&v8[v70 + 16]) {
    goto LABEL_21;
  }
  if (!*((void *)v72 + 2))
  {
    sub_249931FAC(v71);
LABEL_21:
    long long v110 = *((_OWORD *)v72 + 1);
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v110;
    *(_OWORD *)(v71 + 32) = *((_OWORD *)v72 + 2);
    *(_OWORD *)(v71 + 41) = *(_OWORD *)(v72 + 41);
    goto LABEL_22;
  }
  uint64_t v73 = *(void **)v71;
  *(void *)uint64_t v71 = *(void *)v72;

  uint64_t v74 = *((void *)v72 + 2);
  *(void *)(v71 + 8) = *((void *)v72 + 1);
  *(void *)(v71 + 16) = v74;
  swift_bridgeObjectRelease();
  uint64_t v75 = *((void *)v72 + 4);
  *(void *)(v71 + 24) = *((void *)v72 + 3);
  *(void *)(v71 + 32) = v75;
  swift_bridgeObjectRelease();
  char v76 = v72[56];
  uint64_t v77 = *(void *)(v71 + 40);
  uint64_t v78 = *(void *)(v71 + 48);
  char v79 = *(unsigned char *)(v71 + 56);
  *(_OWORD *)(v71 + 40) = *(_OWORD *)(v72 + 40);
  *(unsigned char *)(v71 + 56) = v76;
  sub_249930F4C(v77, v78, v79);
LABEL_22:
  *(void *)(v71 + 64) = *((void *)v72 + 8);
  uint64_t v111 = v10[13];
  uint64_t v112 = &v8[v111];
  uint64_t v113 = &v9[v111];
  *uint64_t v112 = *(void *)&v9[v111];
  swift_bridgeObjectRelease();
  v112[1] = *((void *)v113 + 1);
  a3 = v118;
LABEL_7:
  uint64_t v29 = a3[6];
  long long v30 = (unsigned char *)(a1 + v29);
  uint64_t v31 = (unsigned char *)(a2 + v29);
  int v32 = v11((unsigned char *)(a1 + v29), 1, v10);
  int v33 = v11(v31, 1, v10);
  if (!v32)
  {
    if (v33)
    {
      sub_24992EC88((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for Layout);
      goto LABEL_12;
    }
    int v80 = a3;
    v119((uint64_t)v30, (uint64_t)v31, v6);
    uint64_t v81 = v10[5];
    uint64_t v82 = &v30[v81];
    id v83 = (uint64_t *)&v31[v81];
    uint64_t v85 = *v83;
    uint64_t v84 = v83[1];
    *uint64_t v82 = v85;
    v82[1] = v84;
    swift_bridgeObjectRelease();
    *(void *)&v30[v10[6]] = *(void *)&v31[v10[6]];
    swift_bridgeObjectRelease();
    uint64_t v86 = v10[7];
    uint64_t v87 = &v30[v86];
    uint64_t v88 = (uint64_t *)&v31[v86];
    uint64_t v90 = *v88;
    uint64_t v89 = v88[1];
    *uint64_t v87 = v90;
    v87[1] = v89;
    swift_bridgeObjectRelease();
    *(void *)&v30[v10[8]] = *(void *)&v31[v10[8]];
    swift_release();
    v30[v10[9]] = v31[v10[9]];
    uint64_t v91 = v10[10];
    long long v92 = &v30[v91];
    uint64_t v93 = &v31[v91];
    long long v94 = *((_OWORD *)v93 + 3);
    *((_OWORD *)v92 + 2) = *((_OWORD *)v93 + 2);
    *((_OWORD *)v92 + 3) = v94;
    *(_DWORD *)(v92 + 63) = *(_DWORD *)(v93 + 63);
    long long v95 = *((_OWORD *)v93 + 1);
    *(_OWORD *)long long v92 = *(_OWORD *)v93;
    *((_OWORD *)v92 + 1) = v95;
    *((void *)v92 + 9) = *((void *)v93 + 9);
    uint64_t v96 = v10[11];
    uint64_t v97 = &v30[v96];
    uint64_t v98 = &v31[v96];
    long long v99 = v98[1];
    *uint64_t v97 = *v98;
    v97[1] = v99;
    uint64_t v100 = v10[12];
    uint64_t v101 = (uint64_t)&v30[v100];
    uint64_t v102 = &v31[v100];
    if (*(void *)&v30[v100 + 16])
    {
      if (*((void *)v102 + 2))
      {
        uint64_t v103 = *(void **)v101;
        *(void *)uint64_t v101 = *(void *)v102;

        uint64_t v104 = *((void *)v102 + 2);
        *(void *)(v101 + 8) = *((void *)v102 + 1);
        *(void *)(v101 + 16) = v104;
        swift_bridgeObjectRelease();
        uint64_t v105 = *((void *)v102 + 4);
        *(void *)(v101 + 24) = *((void *)v102 + 3);
        *(void *)(v101 + 32) = v105;
        swift_bridgeObjectRelease();
        char v106 = v102[56];
        uint64_t v107 = *(void *)(v101 + 40);
        uint64_t v108 = *(void *)(v101 + 48);
        char v109 = *(unsigned char *)(v101 + 56);
        *(_OWORD *)(v101 + 40) = *(_OWORD *)(v102 + 40);
        *(unsigned char *)(v101 + 56) = v106;
        sub_249930F4C(v107, v108, v109);
LABEL_25:
        *(void *)(v101 + 64) = *((void *)v102 + 8);
        uint64_t v115 = v10[13];
        long long v116 = &v30[v115];
        long long v117 = &v31[v115];
        *(void *)&v30[v115] = *(void *)&v31[v115];
        swift_bridgeObjectRelease();
        *((void *)v116 + 1) = *((void *)v117 + 1);
        a3 = v80;
        goto LABEL_13;
      }
      sub_249931FAC(v101);
    }
    long long v114 = *((_OWORD *)v102 + 1);
    *(_OWORD *)uint64_t v101 = *(_OWORD *)v102;
    *(_OWORD *)(v101 + 16) = v114;
    *(_OWORD *)(v101 + 32) = *((_OWORD *)v102 + 2);
    *(_OWORD *)(v101 + 41) = *(_OWORD *)(v102 + 41);
    goto LABEL_25;
  }
  if (v33)
  {
LABEL_12:
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
    memcpy(v30, v31, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v120 + 32))(v30, v31, v6);
  *(_OWORD *)&v30[v10[5]] = *(_OWORD *)&v31[v10[5]];
  *(void *)&v30[v10[6]] = *(void *)&v31[v10[6]];
  *(_OWORD *)&v30[v10[7]] = *(_OWORD *)&v31[v10[7]];
  *(void *)&v30[v10[8]] = *(void *)&v31[v10[8]];
  v30[v10[9]] = v31[v10[9]];
  uint64_t v34 = v10[10];
  long long v35 = &v30[v34];
  long long v36 = &v31[v34];
  long long v37 = v36[3];
  void v35[2] = v36[2];
  void v35[3] = v37;
  v35[4] = v36[4];
  long long v38 = v36[1];
  *long long v35 = *v36;
  v35[1] = v38;
  uint64_t v39 = v10[11];
  long long v40 = &v30[v39];
  uint64_t v41 = &v31[v39];
  long long v42 = v41[1];
  *long long v40 = *v41;
  v40[1] = v42;
  uint64_t v43 = v10[12];
  long long v44 = &v30[v43];
  long long v45 = &v31[v43];
  long long v46 = *((_OWORD *)v45 + 3);
  *((_OWORD *)v44 + 2) = *((_OWORD *)v45 + 2);
  *((_OWORD *)v44 + 3) = v46;
  *((void *)v44 + 8) = *((void *)v45 + 8);
  long long v47 = *((_OWORD *)v45 + 1);
  *(_OWORD *)long long v44 = *(_OWORD *)v45;
  *((_OWORD *)v44 + 1) = v47;
  *(_OWORD *)&v30[v10[13]] = *(_OWORD *)&v31[v10[13]];
  (*(void (**)(unsigned char *, void, uint64_t, int *))(v121 + 56))(v30, 0, 1, v10);
LABEL_13:
  uint64_t v49 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v49) = *(unsigned char *)(a2 + v49);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249932AB4);
}

uint64_t sub_249932AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for ClusterTransitionCoordinator.LayoutTransition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249932BF0);
}

uint64_t sub_249932BF0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_249AEB808();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC48);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_249932D04()
{
  sub_249AEB808();
  if (v0 <= 0x3F)
  {
    sub_249932DF4(319, &qword_2696DFD20, (void (*)(uint64_t))type metadata accessor for Layout);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_249932DF4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_249AED8D8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClusterTransitionCoordinator.ListDirection(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = sub_249AEB808();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
    }
  }
  return a1;
}

uint64_t destroy for ClusterTransitionCoordinator.ListDirection(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2);
  if (!result)
  {
    uint64_t v4 = sub_249AEB808();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *initializeWithCopy for ClusterTransitionCoordinator.ListDirection(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_249AEB808();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithCopy for ClusterTransitionCoordinator.ListDirection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_249AEB808();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_2498D60E8((uint64_t)a1, &qword_2696DFCA0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_249AEB808();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

void *initializeWithTake for ClusterTransitionCoordinator.ListDirection(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = sub_249AEB808();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  }
  return a1;
}

void *assignWithTake for ClusterTransitionCoordinator.ListDirection(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 2, v6);
  int v10 = v8(a2, 2, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = sub_249AEB808();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_2498D60E8((uint64_t)a1, &qword_2696DFCA0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = sub_249AEB808();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 2, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusterTransitionCoordinator.ListDirection(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249933634);
}

uint64_t sub_249933634(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ClusterTransitionCoordinator.ListDirection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499336B8);
}

uint64_t sub_2499336B8(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_249933740(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 2, v2);
}

uint64_t sub_2499337AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 2, v4);
}

uint64_t sub_249933820()
{
  uint64_t result = sub_249AEB808();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClusterTransitionCoordinator.ComponentTransition(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_249AEB808();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
  }
  return a1;
}

uint64_t destroy for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEB808();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);

  return v7(v5, v4);
}

uint64_t initializeWithCopy for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithCopy for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t initializeWithTake for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t assignWithTake for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249933C94);
}

uint64_t sub_249933C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t storeEnumTagSinglePayload for ClusterTransitionCoordinator.ComponentTransition(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249933DA4);
}

uint64_t sub_249933DA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_249AEB808();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_249933EAC()
{
  uint64_t result = sub_249AEB808();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_249933F38()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_249933F70(uint64_t a1)
{
  return sub_2499182D0(a1);
}

uint64_t sub_249933F78()
{
  swift_bridgeObjectRelease();
  if (v0[5]) {
    swift_release();
  }
  sub_2498A58D4(v0[7], v0[8], v0[9], v0[10], v0[11], v0[12], v0[13]);

  return MEMORY[0x270FA0238](v0, 129, 7);
}

uint64_t sub_249933FE4()
{
  unint64_t v1 = *(uint64_t (**)(void))(v0 + 40);
  if (v1) {
    return v1();
  }
  return result;
}

void *sub_249934014(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[6];
  uint64_t v4 = a1[7];
  uint64_t v5 = a1[8];
  uint64_t v6 = a1[9];
  uint64_t v7 = a1[10];
  unint64_t v8 = a1[11];
  uint64_t v10 = a1[5];
  swift_bridgeObjectRetain();
  sub_2498B9AA8(v2);
  sub_2498A48A4(v10, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_2499340B4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2499340F4()
{
  return sub_24991621C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (***)(uint64_t))(v0 + 48));
}

uint64_t sub_24993411C()
{
  unint64_t v1 = (int *)(type metadata accessor for Zone() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (((v3 + *(void *)(*(void *)v1 + 64)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249884EC8(*(void *)(v5 + v1[10]), *(void *)(v5 + v1[10] + 8), *(unsigned char *)(v5 + v1[10] + 16));
  swift_release();
  if (*(void *)(v0 + v4)) {
    swift_release();
  }

  return MEMORY[0x270FA0238](v0, v4 + 16, v2 | 7);
}

uint64_t sub_249934260()
{
  uint64_t v1 = *(void *)(type metadata accessor for Zone() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = v0 + v2;
  char v6 = *(unsigned char *)(v0 + v3);
  uint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFFF8) + v0 + 8);
  uint64_t v8 = v0 + (((v3 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(uint64_t (**)(uint64_t))v8;
  uint64_t v10 = *(void *)(v8 + 8);

  return sub_24991704C(v4, v5, v6, v7, v9, v10);
}

uint64_t sub_249934308()
{
  return sub_249934518("RequestContent - will dismiss remote popover.", &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentWillDisappear);
}

uint64_t objectdestroy_159Tm()
{
  uint64_t v1 = *(void *)(type metadata accessor for PopoverModel(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v6 + *(int *)(type metadata accessor for Instrument() + 20);
  long long v24 = *(_OWORD *)(v8 + 464);
  long long v25 = *(_OWORD *)(v8 + 480);
  long long v22 = *(_OWORD *)(v8 + 432);
  long long v23 = *(_OWORD *)(v8 + 448);
  long long v20 = *(_OWORD *)(v8 + 400);
  long long v21 = *(_OWORD *)(v8 + 416);
  long long v18 = *(_OWORD *)(v8 + 368);
  long long v19 = *(_OWORD *)(v8 + 384);
  long long v16 = *(_OWORD *)(v8 + 336);
  long long v17 = *(_OWORD *)(v8 + 352);
  long long v14 = *(_OWORD *)(v8 + 304);
  long long v15 = *(_OWORD *)(v8 + 320);
  long long v12 = *(_OWORD *)(v8 + 272);
  long long v13 = *(_OWORD *)(v8 + 288);
  long long v10 = *(_OWORD *)(v8 + 240);
  long long v11 = *(_OWORD *)(v8 + 256);
  sub_2498FCAAC(*(void *)v8, *(void *)(v8 + 8), *(void **)(v8 + 16), *(void **)(v8 + 24), *(void **)(v8 + 32), *(void **)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void **)(v8 + 64), *(void **)(v8 + 72), *(void **)(v8 + 80), *(void *)(v8 + 88), *(void *)(v8 + 96), *(void *)(v8 + 104), *(void *)(v8 + 112), *(void *)(v8 + 120), *(void *)(v8 + 128), *(void *)(v8 + 136), *(void *)(v8 + 144),
    *(void *)(v8 + 152),
    *(void **)(v8 + 160),
    *(void *)(v8 + 168),
    *(void *)(v8 + 176),
    *(void *)(v8 + 184),
    *(void *)(v8 + 192),
    *(void *)(v8 + 200),
    *(void *)(v8 + 208),
    *(void **)(v8 + 216),
    *(void **)(v8 + 224),
    *(void *)(v8 + 232),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((unint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    SBYTE8(v17),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    SBYTE8(v20),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    SBYTE8(v23),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    *(void *)(v8 + 496));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_249934504()
{
  return sub_249934518("RequestContent - did dismiss remote popover.", &OBJC_IVAR____TtC14CarPlayAssetUI28ClusterTransitionCoordinator_instrumentDidDisappear);
}

uint64_t sub_249934518(const char *a1, void *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for PopoverModel(0) - 8);
  return sub_2499160C8(*(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

char *sub_249934590(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *((void *)v4 + 3) >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = sub_2498ABF58(result, v11, 1, v4);
    uint64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = *((void *)v4 + 2);
  size_t v13 = v12 - a2;
  if (__OFSUB__(v12, a2)) {
    goto LABEL_27;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t result = &v4[a1 + 32];
    long long v14 = &v4[a2 + 32];
    if (a1 != a2 || result >= &v14[v13]) {
      uint64_t result = (char *)memmove(result, v14, v13);
    }
    uint64_t v15 = *((void *)v4 + 2);
    BOOL v16 = __OFADD__(v15, v8);
    uint64_t v17 = v15 + v8;
    if (!v16)
    {
      *((void *)v4 + 2) = v17;
LABEL_21:
      unint64_t *v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_2499346E8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_249934720()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_249934748()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_249934770(uint64_t a1)
{
  return a1;
}

uint64_t sub_2499347DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_249934808(uint64_t a1)
{
  return a1;
}

uint64_t sub_249934834()
{
  return sub_249922B24(*(unsigned char *)(v0 + 16), *(uint64_t **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_249934854()
{
  return sub_249922EF4();
}

uint64_t sub_249934878()
{
  return 16;
}

__n128 sub_249934884(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_249934898()
{
  return 16;
}

__n128 sub_2499348A4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499348B8()
{
  return 16;
}

__n128 sub_2499348C4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499348D0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = type metadata accessor for Zone();
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v5 - 8) + 80);
  uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 64);
  uint64_t v38 = type metadata accessor for Component();
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(v38 - 8) + 80);
  uint64_t v37 = *(void *)(*(void *)(v38 - 8) + 64);
  uint64_t v9 = v0 + v3;
  uint64_t v10 = type metadata accessor for RequestContentModel();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v0 + v3, 1, v10))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        if (*(void *)(v9 + 24)) {
          swift_release();
        }
        sub_2498A58D4(*(void *)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void *)(v9 + 64), *(void *)(v9 + 72), *(void *)(v9 + 80), *(void *)(v9 + 88));
        break;
      case 1u:
        uint64_t v11 = sub_249AEB808();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v3, v11);
        uint64_t v12 = v9 + *(int *)(type metadata accessor for Instrument() + 20);
        long long v35 = *(_OWORD *)(v12 + 464);
        long long v36 = *(_OWORD *)(v12 + 480);
        long long v33 = *(_OWORD *)(v12 + 432);
        long long v34 = *(_OWORD *)(v12 + 448);
        long long v31 = *(_OWORD *)(v12 + 400);
        long long v32 = *(_OWORD *)(v12 + 416);
        long long v29 = *(_OWORD *)(v12 + 368);
        long long v30 = *(_OWORD *)(v12 + 384);
        long long v27 = *(_OWORD *)(v12 + 336);
        long long v28 = *(_OWORD *)(v12 + 352);
        long long v25 = *(_OWORD *)(v12 + 304);
        long long v26 = *(_OWORD *)(v12 + 320);
        long long v23 = *(_OWORD *)(v12 + 272);
        long long v24 = *(_OWORD *)(v12 + 288);
        long long v21 = *(_OWORD *)(v12 + 240);
        long long v22 = *(_OWORD *)(v12 + 256);
        sub_2498FCAAC(*(void *)v12, *(void *)(v12 + 8), *(void **)(v12 + 16), *(void **)(v12 + 24), *(void **)(v12 + 32), *(void **)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void **)(v12 + 64), *(void **)(v12 + 72), *(void **)(v12 + 80), *(void *)(v12 + 88), *(void *)(v12 + 96), *(void *)(v12 + 104), *(void *)(v12 + 112), *(void *)(v12 + 120), *(void *)(v12 + 128), *(void *)(v12 + 136), *(void *)(v12 + 144),
          *(void *)(v12 + 152),
          *(void **)(v12 + 160),
          *(void *)(v12 + 168),
          *(void *)(v12 + 176),
          *(void *)(v12 + 184),
          *(void *)(v12 + 192),
          *(void *)(v12 + 200),
          *(void *)(v12 + 208),
          *(void **)(v12 + 216),
          *(void **)(v12 + 224),
          *(void *)(v12 + 232),
          v21,
          *((uint64_t *)&v21 + 1),
          v22,
          *((uint64_t *)&v22 + 1),
          v23,
          *((uint64_t *)&v23 + 1),
          v24,
          *((uint64_t *)&v24 + 1),
          v25,
          *((uint64_t *)&v25 + 1),
          v26,
          *((unint64_t *)&v26 + 1),
          v27,
          *((uint64_t *)&v27 + 1),
          v28,
          SBYTE8(v28),
          v29,
          *((uint64_t *)&v29 + 1),
          v30,
          *((uint64_t *)&v30 + 1),
          v31,
          SBYTE8(v31),
          v32,
          *((uint64_t *)&v32 + 1),
          v33,
          *((uint64_t *)&v33 + 1),
          v34,
          SBYTE8(v34),
          v35,
          *((uint64_t *)&v35 + 1),
          v36,
          *((uint64_t *)&v36 + 1),
          *(void *)(v12 + 496));
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        type metadata accessor for PopoverModel(0);
        swift_release();
        goto LABEL_13;
      case 2u:
        swift_bridgeObjectRelease();
        sub_249934D7C(*(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(unsigned char *)(v9 + 48));
        int v13 = *(unsigned __int8 *)(v9 + 72);
        if (v13 != 255) {
          sub_249934DE4(*(void *)(v9 + 56), *(void *)(v9 + 64), v13);
        }
        if (*(void *)(v9 + 88))
        {
          swift_bridgeObjectRelease();
          swift_release();
        }
        goto LABEL_13;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v9 + 40)) {
LABEL_13:
        }
          swift_release();
        break;
      default:
        break;
    }
  }
  uint64_t v14 = (v3 + v4 + v6) & ~v6;
  unint64_t v15 = (((v7 + v14 + 7) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
  uint64_t v16 = v2 | v6 | v8 | 7;
  uint64_t v17 = v0 + v14;
  uint64_t v18 = sub_249AEB808();
  long long v19 = *(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);
  v19(v17, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249884EC8(*(void *)(v17 + *(int *)(v5 + 32)), *(void *)(v17 + *(int *)(v5 + 32) + 8), *(unsigned char *)(v17 + *(int *)(v5 + 32) + 16));
  swift_release();
  v19(v0 + v15, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v37 + v15 + 1, v16);
}

uint64_t sub_249934D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 && a5 != 2)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_249934DE4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_release();
  }
  if (a3 != 1)
  {
    if (a3) {
      return result;
    }
    return swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_249934E0C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBB8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for Zone() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(type metadata accessor for Component() - 8);
  unint64_t v8 = (v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v0 + v6);
  int v10 = *(unsigned __int8 *)(v0 + v8 + *(void *)(v7 + 64));

  return sub_2499126D8(v0 + v2, (v0 + v5), v9, v0 + v8, v10);
}

uint64_t sub_249934F6C()
{
  return sub_249923B48();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_249934F8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249934FD4()
{
  unint64_t result = qword_2696E5810;
  if (!qword_2696E5810)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFDD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5810);
  }
  return result;
}

uint64_t sub_249935030()
{
  return sub_249923D00();
}

uint64_t sub_24993504C()
{
  return sub_249923E28();
}

uint64_t sub_249935054()
{
  return sub_249923410(v0);
}

uint64_t sub_249935070()
{
  return sub_24992378C();
}

uint64_t sub_249935078(uint64_t a1)
{
  return sub_249920998(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_249935098()
{
  return sub_249920AD8(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(uint64_t **)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_2499350BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Component();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_249935184()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v5, v4);
}

uint64_t sub_249935284(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24990C0A8(a1, v5, v1 + v4, v6);
}

uint64_t sub_249935328()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  swift_release();
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24993540C(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10) - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_24990D14C(a1, v4, v5);
}

uint64_t sub_249935484()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (int *)(type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0) - 8);
  uint64_t v6 = *(unsigned __int8 *)(*(void *)v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = v7 + *(void *)(*(void *)v5 + 64);
  uint64_t v9 = v2 | v6 | 7;
  swift_release();
  uint64_t v10 = sub_249AEB808();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v0 + v3, v10);
  v11(v0 + v7, v10);
  v11(v0 + v7 + v5[7], v10);

  return MEMORY[0x270FA0238](v0, v8, v9);
}

uint64_t sub_249935614()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for ClusterTransitionCoordinator.ComponentTransition(0) - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_24991A8FC(v5, v0 + v2, v6);
}

uint64_t sub_2499356E8(uint64_t a1)
{
  return sub_24990CEE4(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_24993570C(uint64_t a1)
{
  return sub_2499081D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t objectdestroy_235Tm()
{
  swift_release();
  sub_249884EC8(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));

  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_249935764(uint64_t a1)
{
  return sub_249907638(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40));
}

uint64_t sub_249935774(uint64_t a1)
{
  return sub_249935078(a1) & 1;
}

uint64_t sub_2499357B8()
{
  return sub_249934834();
}

void destroy for DialGauge(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 120);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 192))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  uint64_t v3 = *(void **)(a1 + 280);
}

uint64_t initializeWithCopy for DialGauge(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v5;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  uint64_t v7 = *(void **)(a2 + 120);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(void *)(a1 + 120) = v7;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(_WORD *)(a1 + 136) = *(_WORD *)(a2 + 136);
    uint64_t v8 = *(void *)(a2 + 152);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v8;
    id v9 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v10 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v10;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
  }
  uint64_t v11 = *(void *)(a2 + 192);
  uint64_t v12 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v12;
  uint64_t v13 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11)
  {
    uint64_t v14 = *(void *)(a2 + 200);
    uint64_t v15 = *(void *)(a2 + 208);
    *(void *)(a1 + 192) = v11;
    *(void *)(a1 + 200) = v14;
    *(void *)(a1 + 208) = v15;
    *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
    uint64_t v16 = *(void *)(a2 + 232);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = v16;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v17;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  }
  uint64_t v18 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v18;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  long long v20 = *(void **)(a2 + 272);
  long long v19 = *(void **)(a2 + 280);
  *(void *)(a1 + 272) = v20;
  *(void *)(a1 + 280) = v19;
  swift_retain();
  id v21 = v20;
  id v22 = v19;
  return a1;
}

uint64_t assignWithCopy for DialGauge(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (_OWORD *)(a1 + 104);
  uint64_t v7 = (long long *)(a2 + 104);
  uint64_t v8 = *(void **)(a1 + 120);
  uint64_t v9 = *(void *)(a2 + 120);
  if (v8)
  {
    if (v9)
    {
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      long long v10 = *(void **)(a2 + 120);
      *(void *)(a1 + 120) = v10;
      id v11 = v10;

      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24989E520(a1 + 104);
      long long v15 = *(_OWORD *)(a2 + 120);
      long long v14 = *(_OWORD *)(a2 + 136);
      long long v16 = *v7;
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(_OWORD *)(a1 + 120) = v15;
      *(_OWORD *)(a1 + 136) = v14;
      *uint64_t v6 = v16;
    }
  }
  else if (v9)
  {
    *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    uint64_t v12 = *(void **)(a2 + 120);
    *(void *)(a1 + 120) = v12;
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
    *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    id v13 = v12;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v17 = *v7;
    long long v18 = *(_OWORD *)(a2 + 120);
    long long v19 = *(_OWORD *)(a2 + 136);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(_OWORD *)(a1 + 120) = v18;
    *(_OWORD *)(a1 + 136) = v19;
    *uint64_t v6 = v17;
  }
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v20 = (_OWORD *)(a1 + 192);
  id v22 = (_OWORD *)(a2 + 192);
  uint64_t v21 = *(void *)(a2 + 192);
  if (*(void *)(a1 + 192))
  {
    if (v21)
    {
      *(void *)(a1 + 192) = v21;
      swift_retain();
      swift_release();
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2498D36BC(a1 + 192);
      long long v24 = *(_OWORD *)(a2 + 208);
      long long v23 = *(_OWORD *)(a2 + 224);
      *long long v20 = *v22;
      *(_OWORD *)(a1 + 208) = v24;
      *(_OWORD *)(a1 + 224) = v23;
    }
  }
  else if (v21)
  {
    *(void *)(a1 + 192) = v21;
    *(void *)(a1 + 200) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
    *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v25 = *v22;
    long long v26 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v26;
    *long long v20 = v25;
  }
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  swift_retain();
  swift_release();
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v27 = *(void **)(a2 + 272);
  long long v28 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = v27;
  id v29 = v27;

  long long v30 = *(void **)(a2 + 280);
  long long v31 = *(void **)(a1 + 280);
  *(void *)(a1 + 280) = v30;
  id v32 = v30;

  return a1;
}

void *__swift_memcpy288_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t assignWithTake for DialGauge(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v6 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void **)(a1 + 120);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 120);
    if (v8)
    {
      *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = v8;

      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(unsigned char *)(a1 + 136) = *(unsigned char *)(a2 + 136);
      *(unsigned char *)(a1 + 137) = *(unsigned char *)(a2 + 137);
      uint64_t v9 = *(void *)(a2 + 152);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_24989E520(a1 + 104);
  }
  long long v10 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v10;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
LABEL_6:
  uint64_t v11 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 192);
  if (!*(void *)(a1 + 192))
  {
LABEL_10:
    long long v16 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v16;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    goto LABEL_11;
  }
  if (!v13)
  {
    sub_2498D36BC(a1 + 192);
    goto LABEL_10;
  }
  *(void *)(a1 + 192) = v13;
  swift_release();
  uint64_t v14 = *(void *)(a2 + 208);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v14;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  uint64_t v15 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v15;
  swift_bridgeObjectRelease();
LABEL_11:
  uint64_t v17 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v17;
  swift_release();
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  long long v18 = *(void **)(a1 + 272);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);

  long long v19 = *(void **)(a1 + 280);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);

  return a1;
}

uint64_t getEnumTagSinglePayload for DialGauge(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 288)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DialGauge(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 280) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 288) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DialGauge()
{
  return &type metadata for DialGauge;
}

uint64_t sub_249935FD8()
{
  return swift_getOpaqueTypeConformance2();
}

void *sub_249935FF4@<X0>(void *__src@<X2>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = a2[3];
  uint64_t v60 = a2[1];
  uint64_t v61 = a2[2];
  uint64_t v4 = a2[5];
  uint64_t v58 = *a2;
  uint64_t v59 = a2[4];
  memcpy(__dst, __src, 0x130uLL);
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08988]), sel_init);
  objc_msgSend(v5, sel_setUnitStyle_, 1);
  unint64_t result = objc_msgSend(v5, sel_numberFormatter);
  if (!result) {
    goto LABEL_24;
  }
  uint64_t v7 = result;
  objc_msgSend(result, sel_setMaximumFractionDigits_, 0);

  id v8 = objc_allocWithZone(MEMORY[0x263F08A30]);
  id v57 = v5;
  id v9 = objc_msgSend(v8, sel_init);
  objc_msgSend(v9, sel_setNumberStyle_, 3);
  objc_msgSend(v9, sel_setMaximumFractionDigits_, 0);
  type metadata accessor for InstrumentDataSource();
  sub_249939AD0();
  id v10 = v9;
  swift_retain();
  uint64_t v11 = sub_249AEBD48();
  uint64_t v13 = v12;
  uint64_t v14 = __dst[1];
  uint64_t v15 = __dst[2];
  swift_retain();
  sub_2498D55E8(v58);
  unint64_t result = (void *)swift_release();
  uint64_t v16 = __dst[7];
  uint64_t v17 = __dst[7] + 1;
  if (__OFADD__(__dst[7], 1))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v18 = __dst[6];
  uint64_t v19 = __dst[6] + 1;
  if (__OFADD__(__dst[6], 1))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v20 = v17 * v19;
  if ((unsigned __int128)(v17 * (__int128)v19) >> 64 != (v17 * v19) >> 63)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v21 = __dst[5];
  uint64_t v22 = __dst[5] - 1;
  if (__OFSUB__(__dst[5], 1))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v23 = v20 * v22;
  if ((unsigned __int128)(v20 * (__int128)v22) >> 64 != (v20 * v22) >> 63)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    uint64_t v26 = __dst[3];
    uint64_t v27 = __dst[4];
    if (__dst[6] > 0 && __dst[5] == 0) {
      uint64_t v29 = __dst[6];
    }
    else {
      uint64_t v29 = v25;
    }
    if (vabdd_f64(*(double *)&__dst[4], *(double *)&__dst[3]) != 6.28318531
      || (uint64_t v29 = v20 * __dst[5], (unsigned __int128)(v20 * (__int128)__dst[5]) >> 64 == (v20 * __dst[5]) >> 63))
    {
      uint64_t v50 = v29;
      uint64_t v51 = __dst[7];
      uint64_t v48 = __dst[6];
      uint64_t v49 = __dst[5];
      uint64_t v53 = swift_allocObject();
      memcpy((void *)(v53 + 16), __dst, 0x130uLL);
      uint64_t v40 = swift_allocObject();
      memcpy((void *)(v40 + 16), __dst, 0x130uLL);
      char v46 = __dst[15];
      uint64_t v45 = __dst[16];
      uint64_t v30 = v4;
      uint64_t v56 = v4;
      uint64_t v31 = v11;
      uint64_t v47 = v11;
      uint64_t v32 = v3;
      uint64_t v41 = v3;
      uint64_t v33 = __dst[23];
      uint64_t v34 = __dst[24];
      uint64_t v54 = __dst[35];
      uint64_t v55 = __dst[21];
      uint64_t v43 = __dst[36];
      uint64_t v44 = __dst[34];
      uint64_t v35 = __dst[37];
      __srca[0] = v26;
      __srca[1] = v27;
      __srca[2] = v21;
      __srca[3] = v18;
      __srca[4] = v16;
      __srca[5] = v29;
      __srca[6] = sub_249939B2C;
      __srca[7] = v53;
      __srca[8] = sub_249939C24;
      __srca[9] = v40;
      LOBYTE(__srca[10]) = __dst[15];
      __srca[11] = __dst[16];
      __srca[12] = __dst[17];
      __srca[13] = __dst[18];
      __srca[14] = __dst[19];
      uint64_t v36 = __dst[18];
      uint64_t v37 = __dst[19];
      __srca[15] = __dst[20];
      __srca[16] = __dst[21];
      uint64_t v38 = (void *)__dst[20];
      __srca[17] = __dst[22];
      __srca[18] = __dst[23];
      uint64_t v39 = __dst[22];
      __srca[19] = __dst[24];
      __srca[20] = __dst[34];
      __srca[21] = __dst[35];
      __srca[22] = __dst[36];
      __srca[23] = __dst[37];
      __srca[24] = v58;
      __srca[25] = v60;
      __srca[26] = v61;
      __srca[27] = v32;
      __srca[28] = v59;
      __srca[29] = v30;
      __srca[30] = v31;
      __srca[31] = v13;
      __srca[32] = v14;
      __srca[33] = v15;
      __srca[34] = v57;
      __srca[35] = v10;
      uint64_t v42 = __dst[17];
      swift_bridgeObjectRetain();
      sub_24989CD14(v36, v37, v38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24989CD14(v36, v37, v38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2498AEB34(__dst);
      swift_retain();
      swift_retain();
      sub_24993802C(__srca);
      swift_release();

      sub_249939C70(v58);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24989CF3C(v36, v37, v38);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      memcpy(a3, __srca, 0x120uLL);
      v63[2] = v49;
      v63[3] = v48;
      v63[0] = v26;
      v63[1] = v27;
      v63[4] = v51;
      v63[5] = v50;
      v63[6] = sub_249939B2C;
      v63[7] = v53;
      v63[8] = sub_249939C24;
      v63[9] = v40;
      char v64 = v46;
      uint64_t v65 = v45;
      uint64_t v66 = v42;
      uint64_t v67 = v36;
      uint64_t v68 = v37;
      long long v69 = v38;
      uint64_t v70 = v55;
      uint64_t v71 = v39;
      uint64_t v72 = v33;
      uint64_t v73 = v34;
      uint64_t v74 = v44;
      uint64_t v75 = v54;
      uint64_t v76 = v43;
      uint64_t v77 = v35;
      uint64_t v78 = v58;
      uint64_t v79 = v60;
      uint64_t v80 = v61;
      uint64_t v81 = v41;
      uint64_t v82 = v59;
      uint64_t v83 = v56;
      uint64_t v84 = v47;
      uint64_t v85 = v13;
      uint64_t v86 = v14;
      uint64_t v87 = v15;
      id v88 = v57;
      id v89 = v10;
      return sub_249939CBC(v63);
    }
    goto LABEL_23;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_2499365DC@<X0>(uint64_t a1@<X0>, double *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE40);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE48);
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE50);
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v7 = sub_249AECC28();
  v7[1] = v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE58);
  sub_249936820(a2, a1, (double *)((char *)v7 + *(int *)(v17 + 44)));
  sub_249AEBC48();
  sub_249AEBC48();
  sub_249AECC28();
  sub_249AEBBE8();
  sub_2498D6084((uint64_t)v7, (uint64_t)v11, &qword_2696DFE40);
  uint64_t v18 = &v11[*(int *)(v9 + 44)];
  long long v19 = v29;
  *(_OWORD *)uint64_t v18 = v28;
  *((_OWORD *)v18 + 1) = v19;
  *((_OWORD *)v18 + 2) = v30;
  sub_2498D60E8((uint64_t)v7, &qword_2696DFE40);
  sub_249AEBC48();
  double v21 = v20 * 0.5;
  sub_249AEBC48();
  double v23 = v22 * 0.5;
  sub_2498D6084((uint64_t)v11, (uint64_t)v15, &qword_2696DFE48);
  BOOL v24 = (double *)&v15[*(int *)(v13 + 44)];
  *BOOL v24 = v21;
  v24[1] = v23;
  sub_2498D60E8((uint64_t)v11, &qword_2696DFE48);
  return sub_249882788((uint64_t)v15, v27, &qword_2696DFE50);
}

uint64_t sub_249936820@<X0>(double *a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v191 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE60);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v198 = (uint64_t *)((char *)&v185 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE68);
  uint64_t v7 = MEMORY[0x270FA5388](v192);
  uint64_t v193 = (uint64_t)&v185 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v199 = (uint64_t)&v185 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE70);
  uint64_t v189 = *(void *)(v10 - 8);
  uint64_t v190 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v194 = (uint64_t)&v185 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE78);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v197 = (uint64_t)&v185 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v196 = (uint64_t)&v185 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v215 = (uint64_t)&v185 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v214 = (uint64_t)&v185 - v19;
  uint64_t v202 = sub_249AEBC68();
  uint64_t v20 = *(void *)(v202 - 8);
  MEMORY[0x270FA5388](v202);
  uint64_t v200 = v21;
  uint64_t v201 = (char *)&v185 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0F0);
  uint64_t v205 = *(void *)(v22 - 8);
  uint64_t v206 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v204 = (char *)&v185 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE80);
  uint64_t v24 = MEMORY[0x270FA5388](v203);
  uint64_t v221 = (uint64_t)&v185 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v220 = (uint64_t)&v185 - v26;
  uint64_t v27 = sub_249AEC998();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  long long v30 = (char *)&v185 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = *((void *)a1 + 12);
  if (!v31)
  {
    uint64_t v44 = a2;
    uint64_t v39 = 0;
    uint64_t v51 = 0;
    uint64_t KeyPath = 0;
    uint64_t v216 = 0;
    uint64_t v217 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    uint64_t v218 = 0;
    uint64_t v219 = 0;
    double v49 = 0.0;
    double v50 = 0.0;
    uint64_t v52 = *((void *)a1 + 5);
    if ((v52 & 0x8000000000000000) == 0) {
      goto LABEL_11;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v213 = (uint64_t)a1;
  char v32 = *((unsigned char *)a1 + 80);
  swift_bridgeObjectRetain();
  sub_249AEBC48();
  sub_249AEBC48();
  double v34 = fabs(v33);
  double v36 = fabs(v35);
  if (v36 >= v34) {
    double v36 = v34;
  }
  double v37 = 0.25;
  if ((v32 & 1) == 0) {
    double v37 = 0.5;
  }
  double v38 = v36 * v37;
  sub_249AEC988();
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, *MEMORY[0x263F1B4B8], v27);
  uint64_t v39 = sub_249AEC9C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  if (qword_2696DD398 != -1) {
    swift_once();
  }
  uint64_t v40 = qword_2696DFB00;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v216 = v40;
  swift_retain();
  sub_249AECC28();
  sub_249AEBBE8();
  uint64_t v31 = v222[36];
  uint64_t v42 = v223;
  uint64_t v43 = v224;
  uint64_t v219 = v225;
  uint64_t v217 = v227;
  uint64_t v218 = v226;
  uint64_t v44 = a2;
  sub_249AEBC48();
  double v46 = fabs(v45);
  double v48 = fabs(v47);
  if (v48 >= v46) {
    double v48 = v46;
  }
  double v49 = v48 * 0.5;
  double v50 = v38;
  uint64_t v51 = 1;
  a1 = (double *)v213;
  uint64_t v52 = *(void *)(v213 + 40);
  if (v52 < 0) {
    goto LABEL_16;
  }
LABEL_11:
  double v195 = v50;
  double v208 = v49;
  uint64_t v209 = v51;
  uint64_t v210 = v43;
  uint64_t v211 = v42;
  uint64_t v212 = v31;
  uint64_t v213 = KeyPath;
  uint64_t v207 = v39;
  v222[0] = 0;
  v222[1] = v52;
  swift_getKeyPath();
  uint64_t v54 = v201;
  uint64_t v53 = v202;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v201, v44, v202);
  unint64_t v55 = (*(unsigned __int8 *)(v20 + 80) + 304) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v56 = swift_allocObject();
  memcpy((void *)(v56 + 16), a1, 0x120uLL);
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v56 + v55, v54, v53);
  sub_24993802C(a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF100);
  sub_2498D57E8();
  sub_2498D58B8();
  id v57 = v204;
  sub_249AECB48();
  char v58 = sub_249AEC4E8();
  sub_249AEBAB8();
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v68 = v205;
  uint64_t v67 = v206;
  uint64_t v69 = v221;
  (*(void (**)(uint64_t, char *, uint64_t))(v205 + 16))(v221, v57, v206);
  uint64_t v70 = v69 + *(int *)(v203 + 36);
  *(unsigned char *)uint64_t v70 = v58;
  *(void *)(v70 + 8) = v60;
  *(void *)(v70 + 16) = v62;
  *(void *)(v70 + 24) = v64;
  *(void *)(v70 + 32) = v66;
  *(unsigned char *)(v70 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v68 + 8))(v57, v67);
  sub_249882788(v69, v220, &qword_2696DFE80);
  uint64_t v71 = 0;
  uint64_t v72 = 0;
  uint64_t v73 = 0;
  uint64_t v74 = 0;
  uint64_t v75 = 0;
  uint64_t v76 = 0;
  uint64_t v77 = 0;
  if ((_BYTE)a1[10])
  {
    uint64_t v72 = swift_allocObject();
    memcpy((void *)(v72 + 16), a1, 0x120uLL);
    sub_24993802C(a1);
    unsigned __int8 v78 = sub_249AEC4E8();
    sub_249AEBAB8();
    uint64_t v74 = v79;
    uint64_t v75 = v80;
    uint64_t v76 = v81;
    uint64_t v77 = v82;
    uint64_t v73 = (char *)v78;
    uint64_t v71 = sub_24993989C;
  }
  uint64_t v200 = (uint64_t)v71;
  uint64_t v201 = v73;
  uint64_t v202 = v77;
  uint64_t v203 = v76;
  uint64_t v204 = v75;
  uint64_t v205 = v74;
  uint64_t v206 = v72;
  sub_249882788((uint64_t)(a1 + 20), (uint64_t)v229, &qword_2696DFE88);
  sub_249882788((uint64_t)v229, (uint64_t)&v230, &qword_2696DFE88);
  uint64_t v83 = v231;
  uint64_t v42 = v190;
  if (v231)
  {
    uint64_t v84 = v230;
    double v85 = *a1 + -0.125663706;
    uint64_t v86 = sub_249AEC028();
    uint64_t v87 = v198;
    *uint64_t v198 = v86;
    v87[1] = 0;
    *((unsigned char *)v87 + 16) = 1;
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE98);
    sub_2499392B4(v84, v83, (uint64_t *)((char *)v87 + *(int *)(v88 + 44)), v85);
    sub_249AECD18();
    uint64_t v90 = v89;
    uint64_t v92 = v91;
    uint64_t v93 = v193;
    sub_2498D6084((uint64_t)v87, v193, &qword_2696DFE60);
    uint64_t v94 = v93 + *(int *)(v192 + 36);
    *(double *)uint64_t v94 = v85;
    *(void *)(v94 + 8) = v90;
    *(void *)(v94 + 16) = v92;
    sub_2498D60E8((uint64_t)v87, &qword_2696DFE60);
    uint64_t v95 = v199;
    sub_249882788(v93, v199, &qword_2696DFE68);
    LOBYTE(v93) = sub_249AEC4E8();
    sub_249AEBAB8();
    uint64_t v97 = v96;
    uint64_t v99 = v98;
    uint64_t v101 = v100;
    uint64_t v103 = v102;
    uint64_t v104 = v194;
    sub_2498D6084(v95, v194, &qword_2696DFE68);
    uint64_t v105 = v104 + *(int *)(v42 + 36);
    *(unsigned char *)uint64_t v105 = v93;
    *(void *)(v105 + 8) = v97;
    *(void *)(v105 + 16) = v99;
    *(void *)(v105 + 24) = v101;
    *(void *)(v105 + 32) = v103;
    *(unsigned char *)(v105 + 40) = 0;
    sub_2498D60E8(v95, &qword_2696DFE68);
    uint64_t v106 = v214;
    sub_249882788(v104, v214, &qword_2696DFE70);
    uint64_t v107 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v189 + 56);
    v107(v106, 0, 1, v42);
    goto LABEL_18;
  }
LABEL_17:
  uint64_t v107 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v189 + 56);
  v107(v214, 1, 1, v42);
LABEL_18:
  sub_249882788((uint64_t)(a1 + 22), (uint64_t)v228, &qword_2696DFE88);
  sub_249882788((uint64_t)v228, (uint64_t)&v232, &qword_2696DFE88);
  uint64_t v108 = v233;
  uint64_t v109 = 1;
  if (v233)
  {
    uint64_t v110 = v232;
    double v111 = a1[1] + 0.125663706;
    uint64_t v112 = sub_249AEC028();
    uint64_t v113 = v198;
    *uint64_t v198 = v112;
    v113[1] = 0;
    *((unsigned char *)v113 + 16) = 1;
    uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE98);
    sub_2499392B4(v110, v108, (uint64_t *)((char *)v113 + *(int *)(v114 + 44)), v111);
    sub_249AECD18();
    uint64_t v116 = v115;
    uint64_t v118 = v117;
    uint64_t v119 = v193;
    sub_2498D6084((uint64_t)v113, v193, &qword_2696DFE60);
    uint64_t v120 = v119 + *(int *)(v192 + 36);
    *(double *)uint64_t v120 = v111;
    *(void *)(v120 + 8) = v116;
    *(void *)(v120 + 16) = v118;
    sub_2498D60E8((uint64_t)v113, &qword_2696DFE60);
    uint64_t v121 = v199;
    sub_249882788(v119, v199, &qword_2696DFE68);
    LOBYTE(v119) = sub_249AEC4E8();
    sub_249AEBAB8();
    uint64_t v123 = v122;
    uint64_t v125 = v124;
    uint64_t v127 = v126;
    uint64_t v129 = v128;
    uint64_t v130 = v194;
    sub_2498D6084(v121, v194, &qword_2696DFE68);
    uint64_t v131 = v130 + *(int *)(v42 + 36);
    *(unsigned char *)uint64_t v131 = v119;
    *(void *)(v131 + 8) = v123;
    *(void *)(v131 + 16) = v125;
    *(void *)(v131 + 24) = v127;
    *(void *)(v131 + 32) = v129;
    *(unsigned char *)(v131 + 40) = 0;
    sub_2498D60E8(v121, &qword_2696DFE68);
    uint64_t v132 = v215;
    sub_249882788(v130, v215, &qword_2696DFE70);
    uint64_t v109 = 0;
  }
  else
  {
    uint64_t v132 = v215;
  }
  v107(v132, v109, 1, v42);
  memcpy(v222, a1, 0x120uLL);
  uint64_t v133 = sub_249937BB8();
  if (!v134) {
    goto LABEL_32;
  }
  char v135 = (void *)*((void *)a1 + 15);
  if (!v135)
  {
    swift_bridgeObjectRelease();
LABEL_32:
    uint64_t v198 = 0;
    uint64_t v199 = 0;
    uint64_t v194 = 0;
    uint64_t v160 = 0;
    uint64_t v187 = 0;
    double v188 = 0.0;
    double v186 = 0.0;
    uint64_t v192 = 0;
    uint64_t v189 = 0;
    uint64_t v190 = 0;
    goto LABEL_33;
  }
  uint64_t v136 = *((void *)a1 + 13);
  uint64_t v137 = *((void *)a1 + 14);
  uint64_t v138 = *((void *)a1 + 16);
  uint64_t v139 = *((void *)a1 + 17);
  uint64_t v140 = *((void *)a1 + 18);
  uint64_t v141 = *((void *)a1 + 19);
  uint64_t v189 = v140;
  v222[0] = v133;
  v222[1] = v134;
  sub_24988CE30();
  id v142 = v135;
  swift_bridgeObjectRetain();
  uint64_t v143 = sub_249AEC668();
  uint64_t v198 = v144;
  uint64_t v199 = v143;
  uint64_t v193 = v146;
  uint64_t v194 = v145 & 1;
  sub_249AEBC48();
  double v148 = fabs(v147);
  double v150 = fabs(v149);
  if (v150 >= v148) {
    double v151 = v148;
  }
  else {
    double v151 = v150;
  }
  sub_249AEBC48();
  double v153 = fabs(v152);
  double v155 = fabs(v154);
  if (v155 >= v153) {
    double v155 = v153;
  }
  double v156 = v151 * 0.5;
  uint64_t v190 = v136;
  LOBYTE(v222[0]) = v136;
  v222[1] = v137;
  v222[2] = v142;
  v222[3] = v138;
  LOWORD(v222[4]) = v139 & 0x101;
  double v157 = v155 * 0.7;
  v222[5] = v189;
  v222[6] = v141;
  InstrumentFont.cpFont.getter();
  uint64_t v192 = sub_249AEC5A8();
  uint64_t v158 = swift_getKeyPath();
  if (qword_2696DD398 != -1) {
    swift_once();
  }
  uint64_t v159 = qword_2696DFB00;
  sub_24989CF3C(v190, v137, v135);
  uint64_t v189 = swift_getKeyPath();
  uint64_t v190 = v159;
  double v188 = v156;
  double v186 = v157;
  swift_retain();
  uint64_t v160 = v193;
  uint64_t v187 = v158;
LABEL_33:
  uint64_t v161 = v221;
  sub_2498D6084(v220, v221, &qword_2696DFE80);
  uint64_t v162 = v196;
  sub_2498D6084(v214, v196, &qword_2696DFE78);
  uint64_t v163 = v197;
  sub_2498D6084(v215, v197, &qword_2696DFE78);
  long long v164 = v191;
  *(void *)uint64_t v191 = v207;
  v164[1] = 0.0;
  uint64_t v165 = v213;
  *((void *)v164 + 2) = v209;
  *((void *)v164 + 3) = v165;
  uint64_t v166 = v212;
  *((void *)v164 + 4) = v216;
  *((void *)v164 + 5) = v166;
  uint64_t v167 = v210;
  *((void *)v164 + 6) = v211;
  *((void *)v164 + 7) = v167;
  uint64_t v168 = v218;
  *((void *)v164 + 8) = v219;
  *((void *)v164 + 9) = v168;
  double v169 = v208;
  *((void *)v164 + 10) = v217;
  v164[11] = v169;
  v164[12] = v195;
  char v170 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE90);
  sub_2498D6084(v161, (uint64_t)v164 + v170[12], &qword_2696DFE80);
  uint64_t v171 = (char *)v164 + v170[16];
  uint64_t v172 = v206;
  *(void *)uint64_t v171 = v200;
  *((void *)v171 + 1) = v172;
  uint64_t v173 = v205;
  *((void *)v171 + 2) = v201;
  *((void *)v171 + 3) = v173;
  uint64_t v174 = v203;
  *((void *)v171 + 4) = v204;
  *((void *)v171 + 5) = v174;
  *((void *)v171 + 6) = v202;
  v171[56] = 0;
  sub_2498D6084(v162, (uint64_t)v164 + v170[20], &qword_2696DFE78);
  sub_2498D6084(v163, (uint64_t)v164 + v170[24], &qword_2696DFE78);
  char v175 = (double *)((char *)v164 + v170[28]);
  uint64_t v176 = v198;
  uint64_t v177 = v199;
  *(void *)char v175 = v199;
  *((void *)v175 + 1) = v176;
  *((void *)v175 + 2) = v194;
  *((void *)v175 + 3) = v160;
  uint64_t v193 = v160;
  uint64_t v178 = v187;
  double v179 = v186;
  v175[4] = v188;
  v175[5] = v179;
  uint64_t v180 = v192;
  *((void *)v175 + 6) = v178;
  *((void *)v175 + 7) = v180;
  uint64_t v198 = v176;
  uint64_t v199 = v177;
  uint64_t v181 = v190;
  *((void *)v175 + 8) = v189;
  *((void *)v175 + 9) = v181;
  sub_249938320(v207);
  sub_2498B9AA8(v200);
  uint64_t v182 = (uint64_t)v176;
  uint64_t v183 = v193;
  LOBYTE(v176) = v194;
  sub_249938370(v177, v182, v194, v193);
  sub_2498D60E8(v215, &qword_2696DFE78);
  sub_2498D60E8(v214, &qword_2696DFE78);
  sub_2498D60E8(v220, &qword_2696DFE80);
  sub_2499383F0(v199, (uint64_t)v198, (char)v176, v183);
  sub_2498D60E8(v197, &qword_2696DFE78);
  sub_2498D60E8(v196, &qword_2696DFE78);
  sub_2498B9AB8(v200);
  sub_2498D60E8(v221, &qword_2696DFE80);
  return sub_249938470(v207);
}

uint64_t sub_249937850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF128);
  uint64_t result = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = *(double *)v2;
  double v8 = *(double *)(v2 + 8);
  uint64_t v10 = *(void *)(v2 + 16);
  uint64_t v11 = *(void *)(v2 + 24);
  uint64_t v12 = *(void *)(v2 + 32);
  uint64_t v13 = *(void *)(v2 + 40);
  uint64_t v14 = *(uint64_t (**)(uint64_t, __n128))(v2 + 48);
  uint64_t v15 = *(void *)(v2 + 56);
  uint64_t v16 = *(uint64_t (**)(uint64_t, __n128))(v2 + 64);
  double v17 = *(double *)(v2 + 256);
  double v18 = *(double *)(v2 + 264);
  double v19 = vabdd_f64(v8, *(double *)v2);
  uint64_t v47 = *(void *)(v2 + 72);
  double v48 = v16;
  uint64_t v49 = v15;
  double v50 = v14;
  if (v19 != 6.28318531 && __OFSUB__(v13--, 1)) {
    goto LABEL_34;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  uint64_t v21 = sub_249AE1EDC((uint64_t)v52);
  char v23 = v22;
  sub_2498D60E8((uint64_t)v52, &qword_2696DF130);
  uint64_t result = swift_release();
  double v24 = *(double *)&v21;
  if (v23) {
    double v24 = v17;
  }
  if (v10 < 1)
  {
    uint64_t v26 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_15:
    if (v26)
    {
      if (a1 != 0x8000000000000000 || v26 != -1)
      {
        uint64_t v30 = a1 % v26;
        BOOL v29 = v30 == 0;
        BOOL v28 = v30 != 0;
        goto LABEL_19;
      }
      goto LABEL_35;
    }
    goto LABEL_29;
  }
  uint64_t v25 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v26 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v27 = v25 * v26;
  if ((unsigned __int128)(v25 * (__int128)v26) >> 64 != (v25 * v26) >> 63)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (!v27)
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    return result;
  }
  if (a1 == 0x8000000000000000 && v27 == -1) {
    goto LABEL_36;
  }
  if (a1 % v27) {
    goto LABEL_15;
  }
  BOOL v28 = 0;
  BOOL v29 = 0;
LABEL_19:
  double v31 = v8 - v9;
  double v32 = (double)a1 / (double)v13;
  double v33 = (v24 - v17) / (v18 - v17);
  uint64_t v34 = sub_249AEBC48();
  if (v32 <= v33)
  {
    v35.n128_f64[0] = (double)a1 / (double)v13;
    uint64_t v37 = v50(v34, v35);
  }
  else
  {
    if (v12) {
      BOOL v36 = 0;
    }
    else {
      BOOL v36 = v29;
    }
    if (v28 || v36)
    {
      uint64_t v37 = sub_249AEC898();
    }
    else
    {
      v35.n128_f64[0] = (double)a1 / (double)v13;
      uint64_t v37 = v48(v34, v35);
    }
  }
  uint64_t v38 = v37;
  uint64_t v39 = v51;
  double v40 = v9 + v31 * v32;
  *(void *)uint64_t v7 = sub_249AEC028();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF160);
  sub_2499384BC(v38, &v7[*(int *)(v41 + 44)], 3.0);
  sub_249AECD18();
  uint64_t v43 = v42;
  uint64_t v45 = v44;
  swift_release();
  sub_2498D6084((uint64_t)v7, v39, &qword_2696DF128);
  uint64_t v46 = v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF100) + 36);
  *(double *)uint64_t v46 = v40;
  *(void *)(v46 + 8) = v43;
  *(void *)(v46 + 16) = v45;
  return sub_2498D60E8((uint64_t)v7, &qword_2696DF128);
}

uint64_t sub_249937BB8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF00);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF08);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v9 = *(double *)(v0 + 256);
  double v8 = *(double *)(v0 + 264);
  uint64_t v10 = *(void **)(v0 + 280);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  if (v25)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF148);
    int v11 = swift_dynamicCast();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, v11 ^ 1u, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v3, v4);
      sub_249939A90();
      uint64_t v12 = sub_249AED838();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return v12;
    }
  }
  else
  {
    sub_2498D60E8((uint64_t)v24, &qword_2696DF130);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, 1, 1, v4);
  }
  sub_2498D60E8((uint64_t)v3, &qword_2696DFF00);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  if (!v25)
  {
    sub_2498D60E8((uint64_t)v24, &qword_2696DF130);
    return 0;
  }
  sub_249882C34((uint64_t)v24, (uint64_t)v21);
  sub_2498D60E8((uint64_t)v24, &qword_2696DF130);
  uint64_t v13 = v22;
  uint64_t v14 = v23;
  __swift_project_boxed_opaque_existential_2Tm(v21, v22);
  double v15 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14));
  char v17 = v16;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v21);
  if (v17) {
    return 0;
  }
  uint64_t v12 = 0;
  if (v9 == 0.0 && v8 == 1.0)
  {
    id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v15);
    id v19 = objc_msgSend(v10, sel_stringFromNumber_, v18);

    if (v19)
    {
      uint64_t v12 = sub_249AED0D8();

      return v12;
    }
    return 0;
  }
  return v12;
}

void *sub_249937F9C@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)@<X8>)
{
  memcpy(v5, v1, sizeof(v5));
  uint64_t v3 = swift_allocObject();
  memcpy((void *)(v3 + 16), v1, 0x120uLL);
  *a1 = sub_249938024;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v3;
  return sub_24993802C(v5);
}

uint64_t sub_249938024@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2499365DC(a1, (double *)(v2 + 16), a2);
}

void *sub_24993802C(void *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v3 = a1[14];
  uint64_t v4 = (void *)a1[15];
  uint64_t v8 = a1[24];
  double v9 = (void *)a1[34];
  uint64_t v10 = (void *)a1[35];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_24989CD14(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2498D55E8(v8);
  swift_retain();
  id v5 = v9;
  id v6 = v10;
  return a1;
}

uint64_t sub_249938144()
{
  uint64_t v1 = sub_249AEBC68();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  id v5 = *(void **)(v0 + 136);
  if (v5)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 208))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v6 = (v3 + 304) & ~v3;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v6, v1);

  return MEMORY[0x270FA0238](v0, v6 + v4, v3 | 7);
}

uint64_t sub_249938280@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  sub_249AEBC68();
  uint64_t v5 = *a1;
  memcpy(v7, (const void *)(v2 + 16), sizeof(v7));
  return sub_249937850(v5, a2);
}

uint64_t sub_249938320(uint64_t result)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_249938370(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2498D5D5C(result, a2, a3 & 1);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2499383F0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2498D5E8C(result, a2, a3 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_249938470(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_2499384BC@<X0>(uint64_t a1@<X0>, void *a2@<X8>, double a3@<D0>)
{
  double v31 = a2;
  uint64_t v5 = sub_249AEBDD8();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (double *)((char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF168);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF170);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v17 = (char *)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  id v19 = (char *)&v30 - v18;
  uint64_t v20 = (char *)v8 + *(int *)(v6 + 28);
  uint64_t v21 = *MEMORY[0x263F19860];
  uint64_t v22 = sub_249AEC108();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v20, v21, v22);
  *uint64_t v8 = a3 * 0.5;
  v8[1] = a3 * 0.5;
  uint64_t v23 = (uint64_t (*)(void))MEMORY[0x263F19048];
  sub_2499399C8((uint64_t)v8, (uint64_t)v12, MEMORY[0x263F19048]);
  *(void *)&v12[*(int *)(v10 + 60)] = a1;
  *(_WORD *)&v12[*(int *)(v10 + 64)] = 256;
  swift_retain();
  sub_249939A30((uint64_t)v8, v23);
  sub_249AECC28();
  sub_249AEBBE8();
  sub_2498D6084((uint64_t)v12, (uint64_t)v17, &qword_2696DF168);
  double v24 = &v17[*(int *)(v14 + 44)];
  long long v25 = v33;
  *(_OWORD *)double v24 = v32;
  *((_OWORD *)v24 + 1) = v25;
  *((_OWORD *)v24 + 2) = v34;
  sub_2498D60E8((uint64_t)v12, &qword_2696DF168);
  sub_249882788((uint64_t)v17, (uint64_t)v19, &qword_2696DF170);
  sub_2498D6084((uint64_t)v19, (uint64_t)v17, &qword_2696DF170);
  uint64_t v26 = v31;
  void *v31 = 0;
  *((unsigned char *)v26 + 8) = 1;
  uint64_t v27 = v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF178);
  sub_2498D6084((uint64_t)v17, (uint64_t)v27 + *(int *)(v28 + 48), &qword_2696DF170);
  sub_2498D60E8((uint64_t)v19, &qword_2696DF170);
  return sub_2498D60E8((uint64_t)v17, &qword_2696DF170);
}

uint64_t sub_2499387A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a3;
  uint64_t v5 = sub_249AEC838();
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFEA0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (uint64_t *)((char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFEA8);
  MEMORY[0x270FA5388](v42);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFEB0);
  uint64_t v12 = MEMORY[0x270FA5388](v47);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v41 - v15;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFEB8);
  MEMORY[0x270FA5388](v46);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249AEBC48();
  double v20 = v19;
  double v22 = v21;
  long long v50 = *(_OWORD *)(a2 + 240);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  double v23 = COERCE_DOUBLE(sub_249AE1EDC((uint64_t)v49));
  char v25 = v24;
  sub_2498D60E8((uint64_t)v49, &qword_2696DF130);
  sub_2498D5C64((uint64_t)&v50);
  if (v25)
  {
    swift_storeEnumTagMultiPayload();
    sub_2499398AC();
    return sub_249AEC248();
  }
  else
  {
    double v26 = fabs(v20);
    double v27 = fabs(v22);
    if (v26 >= v27) {
      double v26 = v27;
    }
    double v28 = fmax(ceil(v26 * 8.0 / 498.0), 5.0);
    double v29 = *(double *)(a2 + 256);
    double v30 = *(double *)(a2 + 264);
    if (v30 >= v23) {
      double v31 = v23;
    }
    else {
      double v31 = *(double *)(a2 + 264);
    }
    if (v29 <= v23) {
      double v32 = v31;
    }
    else {
      double v32 = *(double *)(a2 + 256);
    }
    double v33 = *(double *)a2 + (*(double *)(a2 + 8) - *(double *)a2) * ((v32 - v29) / (v30 - v29));
    sub_249AEBC48();
    *uint64_t v9 = sub_249AECC28();
    v9[1] = v34;
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFED8);
    sub_249938CB4(a1, (uint64_t)v9 + *(int *)(v35 + 44), v28, v33);
    sub_249AEBC48();
    sub_249AEBC48();
    sub_249AECC28();
    sub_249AEBBE8();
    sub_2498D6084((uint64_t)v9, (uint64_t)v11, &qword_2696DFEA0);
    BOOL v36 = &v11[*(int *)(v42 + 36)];
    long long v37 = v49[1];
    *(_OWORD *)BOOL v36 = v49[0];
    *((_OWORD *)v36 + 1) = v37;
    *((_OWORD *)v36 + 2) = v49[2];
    sub_2498D60E8((uint64_t)v9, &qword_2696DFEA0);
    (*(void (**)(char *, void, uint64_t))(v44 + 104))(v43, *MEMORY[0x263F1B378], v45);
    uint64_t v38 = sub_249AEC928();
    sub_2498D6084((uint64_t)v11, (uint64_t)v14, &qword_2696DFEA8);
    uint64_t v39 = (uint64_t *)&v14[*(int *)(v47 + 36)];
    *uint64_t v39 = v38;
    v39[1] = 0x4010000000000000;
    _OWORD v39[2] = 0;
    v39[3] = 0;
    sub_2498D60E8((uint64_t)v11, &qword_2696DFEA8);
    sub_249882788((uint64_t)v14, (uint64_t)v16, &qword_2696DFEB0);
    sub_2498D6084((uint64_t)v16, (uint64_t)v18, &qword_2696DFEB0);
    swift_storeEnumTagMultiPayload();
    sub_2499398AC();
    sub_249AEC248();
    return sub_2498D60E8((uint64_t)v16, &qword_2696DFEB0);
  }
}

uint64_t sub_249938CB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v34 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF128);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF100);
  uint64_t v11 = v10 - 8;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v33 - v15;
  *(void *)uint64_t v9 = sub_249AEC028();
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF160);
  sub_249938F5C(a1, (uint64_t)&v9[*(int *)(v17 + 44)], a3);
  sub_249AECD18();
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  sub_2498D6084((uint64_t)v9, (uint64_t)v14, &qword_2696DF128);
  double v22 = &v14[*(int *)(v11 + 44)];
  *(double *)double v22 = a4;
  *((void *)v22 + 1) = v19;
  *((void *)v22 + 2) = v21;
  sub_2498D60E8((uint64_t)v9, &qword_2696DF128);
  sub_249882788((uint64_t)v14, (uint64_t)v16, &qword_2696DF100);
  if (qword_2696DD398 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_2696DFB00;
  swift_retain();
  sub_249AECC28();
  sub_249AEBBE8();
  uint64_t v24 = v35;
  char v25 = v36;
  uint64_t v26 = v37;
  char v27 = v38;
  uint64_t v28 = v39;
  uint64_t v33 = v40;
  sub_2498D6084((uint64_t)v16, (uint64_t)v14, &qword_2696DF100);
  uint64_t v29 = v34;
  sub_2498D6084((uint64_t)v14, v34, &qword_2696DF100);
  uint64_t v30 = v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DFEE0) + 48);
  *(void *)uint64_t v30 = v23;
  *(_WORD *)(v30 + 8) = 256;
  *(void *)(v30 + 16) = v24;
  *(unsigned char *)(v30 + 24) = v25;
  *(void *)(v30 + 32) = v26;
  *(unsigned char *)(v30 + 40) = v27;
  uint64_t v31 = v33;
  *(void *)(v30 + 48) = v28;
  *(void *)(v30 + 56) = v31;
  swift_retain();
  sub_2498D60E8((uint64_t)v16, &qword_2696DF100);
  swift_release();
  return sub_2498D60E8((uint64_t)v14, &qword_2696DF100);
}

uint64_t sub_249938F5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  v30[1] = a1;
  uint64_t v5 = sub_249AEBDD8();
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (double *)((char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF168);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF170);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)v30 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v30 - v19;
  uint64_t v21 = (char *)v8 + *(int *)(v6 + 28);
  uint64_t v22 = *MEMORY[0x263F19860];
  uint64_t v23 = sub_249AEC108();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  *uint64_t v8 = a3 * 0.5;
  v8[1] = a3 * 0.5;
  if (qword_2696DD398 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_2696DFB00;
  char v25 = (uint64_t (*)(void))MEMORY[0x263F19048];
  sub_2499399C8((uint64_t)v8, (uint64_t)v11, MEMORY[0x263F19048]);
  *(void *)&v11[*(int *)(v9 + 52)] = v24;
  *(_WORD *)&v11[*(int *)(v9 + 56)] = 256;
  swift_retain();
  sub_249939A30((uint64_t)v8, v25);
  sub_249AEBC48();
  sub_249AECC28();
  sub_249AEBBE8();
  sub_2498D6084((uint64_t)v11, (uint64_t)v18, &qword_2696DF168);
  uint64_t v26 = &v18[*(int *)(v12 + 36)];
  long long v27 = v32;
  *(_OWORD *)uint64_t v26 = v31;
  *((_OWORD *)v26 + 1) = v27;
  *((_OWORD *)v26 + 2) = v33;
  sub_2498D60E8((uint64_t)v11, &qword_2696DF168);
  sub_249882788((uint64_t)v18, (uint64_t)v20, &qword_2696DF170);
  sub_2498D6084((uint64_t)v20, (uint64_t)v15, &qword_2696DF170);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF178);
  sub_2498D6084((uint64_t)v15, a2 + *(int *)(v28 + 48), &qword_2696DF170);
  sub_2498D60E8((uint64_t)v20, &qword_2696DF170);
  return sub_2498D60E8((uint64_t)v15, &qword_2696DF170);
}

uint64_t sub_2499392B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>, double a4@<D0>)
{
  uint64_t v60 = a3;
  uint64_t v55 = type metadata accessor for AnimatableSystemFontModifier() - 8;
  MEMORY[0x270FA5388](v55);
  uint64_t v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_249AEC548();
  uint64_t v9 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v53 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFEE8);
  uint64_t v12 = v11 - 8;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFEF0);
  uint64_t v15 = MEMORY[0x270FA5388](v57);
  uint64_t v59 = (uint64_t)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v56 = (uint64_t)&v51 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v58 = (uint64_t)&v51 - v19;
  uint64_t v61 = a1;
  uint64_t v62 = a2;
  sub_24988CE30();
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_249AEC668();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  char v26 = v25 & 1;
  sub_249AECD18();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  sub_249AEBC48();
  double v32 = fabs(v31);
  double v34 = fabs(v33);
  if (v34 >= v32) {
    double v34 = v32;
  }
  double v35 = -a4;
  double v36 = v34 * 20.0 / 248.0;
  sub_249AEC558();
  uint64_t v38 = v37;
  uint64_t v39 = *MEMORY[0x263F1A608];
  uint64_t v52 = v9;
  uint64_t v40 = v53;
  uint64_t v41 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v53, v39, v54);
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(&v8[*(int *)(v55 + 32)], v40, v41);
  *(double *)uint64_t v8 = v36;
  *((void *)v8 + 1) = v38;
  sub_2499399C8((uint64_t)v8, (uint64_t)&v14[*(int *)(v12 + 44)], (uint64_t (*)(void))type metadata accessor for AnimatableSystemFontModifier);
  *(void *)uint64_t v14 = v20;
  *((void *)v14 + 1) = v22;
  v14[16] = v26;
  *((void *)v14 + 3) = v24;
  *((double *)v14 + 4) = v35;
  *((void *)v14 + 5) = v28;
  *((void *)v14 + 6) = v30;
  sub_2498D5D5C(v20, v22, v26);
  swift_bridgeObjectRetain();
  sub_249939A30((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for AnimatableSystemFontModifier);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v40, v41);
  sub_2498D5E8C(v20, v22, v26);
  swift_bridgeObjectRelease();
  if (qword_2696DD398 != -1) {
    swift_once();
  }
  uint64_t v42 = qword_2696DFB00;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v44 = v56;
  sub_2498D6084((uint64_t)v14, v56, &qword_2696DFEE8);
  uint64_t v45 = (uint64_t *)(v44 + *(int *)(v57 + 36));
  *uint64_t v45 = KeyPath;
  v45[1] = v42;
  swift_retain();
  sub_2498D60E8((uint64_t)v14, &qword_2696DFEE8);
  uint64_t v46 = v58;
  sub_249882788(v44, v58, &qword_2696DFEF0);
  uint64_t v47 = v59;
  sub_2498D6084(v46, v59, &qword_2696DFEF0);
  uint64_t v48 = v60;
  *uint64_t v60 = 0;
  *((unsigned char *)v48 + 8) = 1;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFEF8);
  sub_2498D6084(v47, (uint64_t)v48 + *(int *)(v49 + 48), &qword_2696DFEF0);
  sub_2498D60E8(v46, &qword_2696DFEF0);
  return sub_2498D60E8(v47, &qword_2696DFEF0);
}

uint64_t sub_249939740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AEBF48();
  *a1 = result;
  return result;
}

uint64_t sub_24993976C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AEBF48();
  *a1 = result;
  return result;
}

uint64_t sub_249939798()
{
  return sub_249AEBF58();
}

uint64_t sub_2499397C4()
{
  return sub_249AEBF58();
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 136);
  if (v1)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 208))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();

  return MEMORY[0x270FA0238](v0, 304, 7);
}

uint64_t sub_24993989C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2499387A0(a1, v2 + 16, a2);
}

unint64_t sub_2499398AC()
{
  unint64_t result = qword_2696DFEC0;
  if (!qword_2696DFEC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFEB0);
    sub_249939928();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFEC0);
  }
  return result;
}

unint64_t sub_249939928()
{
  unint64_t result = qword_2696DFEC8;
  if (!qword_2696DFEC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFEA8);
    sub_2498D0A3C(&qword_2696DFED0, &qword_2696DFEA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFEC8);
  }
  return result;
}

uint64_t sub_2499399C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_249939A30(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_249939A90()
{
  unint64_t result = qword_2696DFF10;
  if (!qword_2696DFF10)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2696DFF10);
  }
  return result;
}

unint64_t sub_249939AD0()
{
  unint64_t result = qword_2696DFF18;
  if (!qword_2696DFF18)
  {
    type metadata accessor for InstrumentDataSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF18);
  }
  return result;
}

uint64_t sub_249939B2C(double a1)
{
  memcpy(v4, (const void *)(v1 + 16), sizeof(v4));
  return Instrument.GaugeStyle.DialConfiguration.activeTickColor(for:)(a1);
}

uint64_t objectdestroy_20Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 176);
  if (v1)
  {

    swift_bridgeObjectRelease();
  }
  uint64_t v2 = *(void **)(v0 + 232);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 320, 7);
}

uint64_t sub_249939C24(double a1)
{
  memcpy(v4, (const void *)(v1 + 16), sizeof(v4));
  return Instrument.GaugeStyle.DialConfiguration.inactiveTickColor(for:)(a1);
}

uint64_t sub_249939C70(uint64_t result)
{
  if (result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_249939CBC(void *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v3 = a1[14];
  uint64_t v4 = (void *)a1[15];
  uint64_t v6 = a1[24];
  uint64_t v8 = (void *)a1[34];
  uint64_t v7 = (void *)a1[35];
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24989CF3C(v2, v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249939C70(v6);

  swift_release();
  return a1;
}

uint64_t sub_249939DD0()
{
  return sub_2498D0A3C(&qword_2696DFF20, &qword_2696DFF28);
}

uint64_t String.capitalizedFirstLetter.getter(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_24993A054(1);
  swift_bridgeObjectRelease();
  sub_24993A0F0();
  uint64_t v4 = sub_249AED918();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24993A144(1uLL, a1, a2);
  swift_bridgeObjectRelease();
  sub_24993A1F4();
  swift_bridgeObjectRetain();
  sub_249AED1C8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t String.sha256.getter()
{
  uint64_t v0 = sub_249AED118();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249AED108();
  uint64_t v4 = sub_249AED0E8();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if (v6 >> 60 == 15) {
    return 0;
  }
  uint64_t countAndFlagsBits = Data.sha256()()._countAndFlagsBits;
  sub_249882F14(v4, v6);
  return countAndFlagsBits;
}

uint64_t sub_24993A054(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_249AED1A8();
    return sub_249AED2B8();
  }
  return result;
}

unint64_t sub_24993A0F0()
{
  unint64_t result = qword_2696DFF30;
  if (!qword_2696DFF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF30);
  }
  return result;
}

unint64_t sub_24993A144(unint64_t result, uint64_t a2, unint64_t a3)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v3 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v4 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v4 = 11;
  }
  unint64_t v5 = v4 | (v3 << 16);
  unint64_t result = sub_249AED1A8();
  if (v6) {
    unint64_t result = v5;
  }
  if (4 * v3 < result >> 14) {
    goto LABEL_14;
  }

  return sub_249AED2B8();
}

unint64_t sub_24993A1F4()
{
  unint64_t result = qword_2696DFF38;
  if (!qword_2696DFF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF38);
  }
  return result;
}

BOOL Array<A>.hasDuplicates.getter(uint64_t a1, uint64_t a2)
{
  sub_249AED4F8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_249AED628();
  uint64_t v4 = sub_249AED608();
  swift_bridgeObjectRelease();
  return v4 != MEMORY[0x24C5AE620](a1, a2);
}

BOOL static IterateDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t IterateDirection.hash(into:)()
{
  return sub_249AEE348();
}

uint64_t IterateDirection.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t Array.nextElementByLooping(from:direction:where:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v30 = a6;
  uint64_t v10 = sub_249AED8D8();
  uint64_t v28 = *(void *)(v10 - 8);
  uint64_t v29 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - v11;
  char v13 = *a2;
  if (MEMORY[0x24C5AE620](a4, a5) <= a1)
  {
LABEL_8:
    uint64_t result = sub_249AEDC58();
    __break(1u);
    return result;
  }
  LOBYTE(v36) = v13;
  uint64_t v14 = sub_24993A6D4(a1, &v36, a4, a5);
  uint64_t v16 = v15;
  *(void *)&long long v33 = v14;
  uint64_t v35 = v15;
  sub_249AED4F8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF40);
  swift_getWitnessTable();
  sub_24993A800();
  sub_249AED058();
  long long v31 = v36;
  long long v33 = v36;
  long long v34 = v37;
  sub_249AED978();
  swift_getWitnessTable();
  sub_249AED2E8();
  swift_unknownObjectRelease();
  uint64_t v17 = *(void *)(a5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v12, 1, a5) == 1)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = sub_249AED508();
      uint64_t v20 = v19;
      uint64_t v22 = v21;
      uint64_t v24 = v23;
      swift_bridgeObjectRelease();
      *(void *)&long long v36 = v18;
      *((void *)&v36 + 1) = v20;
      *(void *)&long long v37 = v22;
      *((void *)&v37 + 1) = v24;
      sub_249AED2E8();
      swift_unknownObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v12, v29);
    }
    __break(1u);
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  uint64_t v26 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v30, v12, a5);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, a5);
}

uint64_t sub_24993A6D4(uint64_t result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a3;
  uint64_t v6 = result;
  if (*a2)
  {
    sub_249AED4F8();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v7 = sub_249AED338();
    uint64_t result = MEMORY[0x24C5AE620](v5, a4);
    if (__OFSUB__(result, v6))
    {
      __break(1u);
    }
    else if (result)
    {
      if (result != -1 || v6 != 0x7FFFFFFFFFFFFFFFLL) {
        return v7;
      }
      goto LABEL_17;
    }
    __break(1u);
    goto LABEL_15;
  }
  if (__OFADD__(result, 1))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t result = MEMORY[0x24C5AE620](a3, a4);
  if (!result)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v6 != 0x7FFFFFFFFFFFFFFFLL || result != -1)
  {
    swift_bridgeObjectRetain();
    return v5;
  }
LABEL_18:
  __break(1u);
  return result;
}

unint64_t sub_24993A800()
{
  unint64_t result = qword_2696DFF48;
  if (!qword_2696DFF48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFF40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF48);
  }
  return result;
}

uint64_t Array.nextElementByLooping(from:direction:)(uint64_t a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v7 = *a2;
  if (MEMORY[0x24C5AE620](a3, a4) <= a1)
  {
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  else
  {
    char v9 = v7;
    sub_24993A6D4(a1, &v9, a3, a4);
    sub_249AED518();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_24993A948()
{
  unint64_t result = qword_2696DFF50;
  if (!qword_2696DFF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF50);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IterateDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24993AA68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IterateDirection()
{
  return &type metadata for IterateDirection;
}

uint64_t sub_24993AAA0(uint64_t a1)
{
  sub_249944658(a1, (uint64_t)v2);
  sub_24994AD58((uint64_t)v2);
  sub_24994AD64((uint64_t)v2);
  sub_249AED1E8();
  return swift_bridgeObjectRelease();
}

void *Instrument.RemainingRangeTextConfiguration.assets.getter()
{
  memcpy(__dst, (const void *)(v0 + 8), sizeof(__dst));
  return MeasurementLabelConfiguration.assets.getter();
}

uint64_t Instrument.RemainingRangeTextConfiguration.restoreAssets(from:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 256);
  unint64_t v5 = sub_2498F0D0C(MEMORY[0x263F8EE78]);
  v8[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_249897C68(v5, (void (*)(uint64_t *__return_ptr, uint64_t *, void *))sub_24989CF94, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v1 + 256) = v6;
  }
  return result;
}

uint64_t Instrument.GaugeConfiguration.style.getter@<X0>(void *a1@<X8>)
{
  sub_2499441A8(v1, __dst);
  sub_2499441A8(__dst, a1);
  return sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
}

void *Instrument.GaugeConfiguration.style.setter(void *a1)
{
  sub_2499441A8(a1, v3);
  sub_2499441A8(v1, __dst);
  sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
  return sub_2499441A8(v3, v1);
}

uint64_t (*Instrument.GaugeConfiguration.style.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeConfiguration.rendersLocally.getter()
{
  return *(unsigned __int8 *)(v0 + 496);
}

uint64_t Instrument.GaugeConfiguration.rendersLocally.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 496) = result;
  return result;
}

uint64_t (*Instrument.GaugeConfiguration.rendersLocally.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeConfiguration.visibilityConfiguration.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 504);
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeConfiguration.visibilityConfiguration.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 504) = v2;
  return result;
}

uint64_t (*Instrument.GaugeConfiguration.visibilityConfiguration.modify())()
{
  return nullsub_1;
}

void *Instrument.GaugeConfiguration.init(style:rendersLocally:visibilityConfiguration:)@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  sub_2499441A8(a1, v9);
  uint64_t v7 = *a3;
  sub_2499441A8(v9, __src);
  LOBYTE(__src[62]) = a2;
  __src[63] = v7;
  return memcpy(a4, __src, 0x200uLL);
}

uint64_t Instrument.GaugeConfiguration.hash(into:)(uint64_t a1)
{
  sub_2499441A8(v1, __dst);
  uint64_t v3 = v1[63];
  sub_2499441A8(__dst, v9);
  Instrument.GaugeStyle.hash(into:)(a1);
  sub_249AEE358();
  uint64_t result = sub_249AEE348();
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_249890C54(v3 + 32, (uint64_t)v9);
    sub_249890C54((uint64_t)v9, (uint64_t)v8);
    VisibilityRule.hash(into:)();
    uint64_t v6 = v5 - 1;
    if (v5 != 1)
    {
      uint64_t v7 = v3 + 168;
      do
      {
        sub_249890C54(v7, (uint64_t)v9);
        sub_249890C54((uint64_t)v9, (uint64_t)v8);
        VisibilityRule.hash(into:)();
        v7 += 136;
        --v6;
      }
      while (v6);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24993AFD4()
{
  unint64_t v1 = 0x4C737265646E6572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000017;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C797473;
  }
}

uint64_t sub_24993B03C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249949F80(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24993B064(uint64_t a1)
{
  unint64_t v2 = sub_2499441BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993B0A0(uint64_t a1)
{
  unint64_t v2 = sub_2499441BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF58);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499441A8((void *)v1, v12);
  v12[128] = *(unsigned __int8 *)(v1 + 496);
  uint64_t v10 = *(void *)(v1 + 504);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499441BC();
  sub_249AEE468();
  sub_2499441A8(v12, v11);
  char v13 = 0;
  sub_249944210();
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v8 = v10;
    LOBYTE(v11[0]) = 1;
    sub_249AEDEC8();
    v11[0] = v8;
    char v13 = 2;
    sub_249944264();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeConfiguration.hashValue.getter()
{
  sub_2499441A8(v0, __dst);
  uint64_t v1 = v0[63];
  sub_249AEE338();
  sub_2499441A8(__dst, v7);
  Instrument.GaugeStyle.hash(into:)((uint64_t)v8);
  sub_249AEE358();
  sub_249AEE348();
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_249890C54(v1 + 32, (uint64_t)v7);
    sub_249890C54((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    uint64_t v3 = v2 - 1;
    if (v2 != 1)
    {
      uint64_t v4 = v1 + 168;
      do
      {
        sub_249890C54(v4, (uint64_t)v7);
        sub_249890C54((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v4 += 136;
        --v3;
      }
      while (v3);
    }
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t Instrument.GaugeConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF78);
  uint64_t v5 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499441BC();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  char v9 = a2;
  char v23 = 0;
  sub_2499442B8();
  uint64_t v10 = v15;
  sub_249AEDE08();
  sub_2499441A8(&v20, v19);
  sub_2499441A8(v19, v21);
  v17[0] = 1;
  sub_249945890((uint64_t)v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
  char v11 = sub_249AEDDC8() & 1;
  LOBYTE(v21[62]) = v11;
  char v22 = 2;
  sub_24994430C();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v10);
  uint64_t v12 = v18;
  v21[63] = v18;
  sub_2499441A8(v19, v16);
  LOBYTE(v16[62]) = v11;
  v16[63] = v12;
  sub_249944360((uint64_t)v16);
  sub_249945890((uint64_t)v19, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
  memcpy(v9, v16, 0x200uLL);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  memcpy(v17, v21, sizeof(v17));
  return sub_249944430((uint64_t)v17);
}

uint64_t sub_24993B6D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_24993B6E8(void *a1)
{
  return Instrument.GaugeConfiguration.encode(to:)(a1);
}

uint64_t sub_24993B708()
{
  sub_2499441A8(v0, __dst);
  uint64_t v1 = v0[63];
  sub_249AEE338();
  sub_2499441A8(__dst, v7);
  Instrument.GaugeStyle.hash(into:)((uint64_t)v8);
  sub_249AEE358();
  uint64_t v2 = *(void *)(v1 + 16);
  sub_249AEE348();
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_249890C54(v1 + 32, (uint64_t)v7);
    sub_249890C54((uint64_t)v7, (uint64_t)v6);
    VisibilityRule.hash(into:)();
    uint64_t v3 = v2 - 1;
    if (v2 != 1)
    {
      uint64_t v4 = v1 + 168;
      do
      {
        sub_249890C54(v4, (uint64_t)v7);
        sub_249890C54((uint64_t)v7, (uint64_t)v6);
        VisibilityRule.hash(into:)();
        v4 += 136;
        --v3;
      }
      while (v3);
    }
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

unint64_t Instrument.GaugeStyle.name.getter()
{
  sub_2499441A8(v0, v3);
  sub_2499441A8(v3, __dst);
  int v1 = sub_249944500((uint64_t)__dst);
  unint64_t result = 0x737361706D6F43;
  switch(v1)
  {
    case 1:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 1818323268;
      break;
    case 2:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 0x7247206567616D49;
      break;
    case 3:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 1954047316;
      break;
    case 4:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 0x73736572676F7250;
      break;
    case 5:
      return result;
    case 6:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 0x72616C7563726943;
      break;
  }
  return result;
}

unint64_t Instrument.GaugeStyle.description.getter()
{
  sub_2499441A8(v0, __dst);
  sub_2499441A8(__dst, v51);
  int v1 = sub_249944500((uint64_t)v51);
  unint64_t result = 0x737361706D6F43;
  switch(v1)
  {
    case 1:
      uint64_t v48 = 40;
      unint64_t v49 = 0xE100000000000000;
      LOBYTE(v44) = *(unsigned char *)sub_24994451C((uint64_t)v51);
      unint64_t v11 = InstrumentDataIdentifier.rawValue.getter();
      unint64_t v13 = v12;
      sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249AE34DC(v11, v13);
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      uint64_t v7 = 40;
      unint64_t v8 = 0xE100000000000000;
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1818323268;
      goto LABEL_14;
    case 2:
      int v14 = *(unsigned __int8 *)sub_24994451C((uint64_t)v51);
      uint64_t v44 = 0;
      unint64_t v45 = 0xE000000000000000;
      uint64_t v42 = 0;
      unint64_t v43 = 0xE000000000000000;
      if (v14 == 57)
      {
        sub_2499441A8(__dst, &v48);
        sub_24994451C((uint64_t)&v48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        LOBYTE(v48) = v14;
        unint64_t v19 = InstrumentDataIdentifier.rawValue.getter();
        unint64_t v21 = v20;
        sub_2499441A8(__dst, &v48);
        sub_24994451C((uint64_t)&v48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_249AE34DC(v19, v21);
        swift_bridgeObjectRelease();
      }
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      uint64_t v7 = v44;
      unint64_t v8 = v45;
      unint64_t v9 = 0xEB0000000070756FLL;
      uint64_t v10 = 0x7247206567616D49;
      goto LABEL_14;
    case 3:
      uint64_t v15 = sub_24994451C((uint64_t)v51);
      sub_2499441A8(__dst, &v42);
      uint64_t v16 = sub_24994451C((uint64_t)&v42);
      sub_249945890(v16, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FBD8C);
      sub_249AED1E8();
      sub_249944658(v15, (uint64_t)&v48);
      sub_2499441A8(__dst, &v44);
      uint64_t v17 = sub_24994451C((uint64_t)&v44);
      sub_249945890(v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FBD8C);
      sub_24993AAA0((uint64_t)&v48);
      sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      sub_249AED1E8();
      sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      uint64_t v7 = 0;
      unint64_t v8 = 0xE000000000000000;
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1954047316;
      goto LABEL_14;
    case 4:
      uint64_t v18 = sub_24994451C((uint64_t)v51);
      uint64_t v42 = 0;
      unint64_t v43 = 0xE000000000000000;
      sub_24994452C(v18, (uint64_t)&v44);
      switch(sub_249944588((uint64_t)&v44))
      {
        case 4u:
          sub_249944640((uint64_t)&v44);
          break;
        default:
          sub_249944640((uint64_t)&v44);
          sub_2499441A8(__dst, &v48);
          uint64_t v22 = sub_24994451C((uint64_t)&v48);
          sub_2499445AC(v22);
          break;
      }
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      uint64_t v7 = v42;
      unint64_t v8 = v43;
      unint64_t v9 = 0xEC00000072614220;
      uint64_t v10 = 0x73736572676F7250;
      goto LABEL_14;
    case 5:
      return result;
    case 6:
      return 0xD000000000000017;
    default:
      char v3 = *(unsigned char *)sub_24994451C((uint64_t)v51);
      uint64_t v48 = 40;
      unint64_t v49 = 0xE100000000000000;
      LOBYTE(v44) = v3;
      unint64_t v4 = InstrumentDataIdentifier.rawValue.getter();
      unint64_t v6 = v5;
      sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249AE34DC(v4, v6);
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      sub_249945890((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      uint64_t v7 = 40;
      unint64_t v8 = 0xE100000000000000;
      unint64_t v9 = 0xE800000000000000;
      uint64_t v10 = 0x72616C7563726943;
LABEL_14:
      uint64_t v44 = v10;
      unint64_t v45 = v9;
      swift_bridgeObjectRetain();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      uint64_t v23 = v44;
      unint64_t v24 = v45;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_24993A054(1);
      unint64_t v27 = v26;
      uint64_t v29 = v28;
      uint64_t v31 = v30;
      swift_bridgeObjectRelease();
      uint64_t v44 = v25;
      unint64_t v45 = v27;
      uint64_t v46 = v29;
      uint64_t v47 = v31;
      sub_24993A0F0();
      uint64_t v32 = sub_249AED918();
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      unint64_t v35 = sub_24993A144(1uLL, v7, v8);
      unint64_t v37 = v36;
      uint64_t v39 = v38;
      uint64_t v41 = v40;
      swift_bridgeObjectRelease();
      uint64_t v42 = v32;
      unint64_t v43 = v34;
      uint64_t v44 = v35;
      unint64_t v45 = v37;
      uint64_t v46 = v39;
      uint64_t v47 = v41;
      sub_24993A1F4();
      swift_bridgeObjectRetain();
      sub_249AED1C8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v44 = v23;
      unint64_t v45 = v24;
      swift_bridgeObjectRetain();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v44;
  }
}

unint64_t Instrument.GaugeStyle.rawValue.getter()
{
  sub_2499441A8(v0, v3);
  sub_2499441A8(v3, __dst);
  int v1 = sub_249944500((uint64_t)__dst);
  unint64_t result = 0x737361706D6F63;
  switch(v1)
  {
    case 1:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 1818323300;
      break;
    case 2:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 0x6F72476567616D69;
      break;
    case 3:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 0x6D656C4574786574;
      break;
    case 4:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 0x73736572676F7270;
      break;
    case 5:
      return result;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      sub_24994451C((uint64_t)__dst);
      unint64_t result = 0x72616C7563726963;
      break;
  }
  return result;
}

unsigned char *Instrument.GaugeStyle.CircularConfiguration.init(dataIdentifier:range:iconName:minLabel:minLabelColor:maxLabel:maxLabelColor:tintColors:backgroundTintColors:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, long long a12, uint64_t a13)
{
  *(unsigned char *)a9 = *result;
  *(double *)(a9 + 8) = a10;
  *(double *)(a9 + 16) = a11;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(void *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  *(void *)(a9 + 64) = a7;
  *(void *)(a9 + 72) = a8;
  *(_OWORD *)(a9 + 80) = a12;
  *(void *)(a9 + 96) = a13;
  return result;
}

void Instrument.GaugeStyle.CircularConfiguration.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

double Instrument.GaugeStyle.CircularConfiguration.range.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.iconName.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.minLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.minLabelColor.getter()
{
  return swift_retain();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.maxLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.maxLabelColor.getter()
{
  return swift_retain();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.tintColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.backgroundTintColors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.backgroundTintColors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 96) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.CircularConfiguration.backgroundTintColors.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.hash(into:)()
{
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v1 = *(void *)(v0 + 96);
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_2498ACC00();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_249AEC878();
  swift_release();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_249AEC878();
  swift_release();
  sub_249AEE348();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    do
    {
      ++v4;
      swift_retain();
      sub_249AEC878();
      swift_release();
    }
    while (v3 != v4);
    swift_bridgeObjectRelease();
  }
  uint64_t result = sub_249AEE348();
  uint64_t v6 = *(void *)(v1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    do
    {
      ++v7;
      swift_retain();
      sub_249AEC878();
      swift_release();
    }
    while (v6 != v7);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24993C75C(char a1)
{
  uint64_t result = 0x6E65644961746164;
  switch(a1)
  {
    case 1:
      return 0x65676E6172;
    case 2:
      return 0x656D614E6E6F6369;
    case 3:
      unsigned int v3 = 1282304365;
      return v3 | 0x6C65626100000000;
    case 4:
      unsigned int v4 = 1282304365;
      goto LABEL_9;
    case 5:
      unsigned int v3 = 1282957677;
      return v3 | 0x6C65626100000000;
    case 6:
      unsigned int v4 = 1282957677;
LABEL_9:
      uint64_t result = v4 | 0x6C65626100000000;
      break;
    case 7:
      uint64_t result = 0x6F6C6F43746E6974;
      break;
    case 8:
      uint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24993C884()
{
  return sub_24993C75C(*v0);
}

uint64_t sub_24993C88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24994A0F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_24993C8B4(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_24993C8C0(uint64_t a1)
{
  unint64_t v2 = sub_2499446B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993C8FC(uint64_t a1)
{
  unint64_t v2 = sub_2499446B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF90);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v10 = *((void *)v1 + 2);
  uint64_t v11 = *((void *)v1 + 3);
  uint64_t v29 = *((void *)v1 + 4);
  uint64_t v30 = v11;
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v27 = *((void *)v1 + 6);
  uint64_t v28 = v12;
  uint64_t v13 = *((void *)v1 + 7);
  uint64_t v14 = *((void *)v1 + 8);
  uint64_t v25 = *((void *)v1 + 9);
  uint64_t v26 = v13;
  uint64_t v23 = *((void *)v1 + 10);
  uint64_t v24 = v14;
  uint64_t v15 = *((void *)v1 + 12);
  uint64_t v22 = *((void *)v1 + 11);
  uint64_t v16 = a1[3];
  uint64_t v17 = a1;
  uint64_t v19 = v18;
  __swift_project_boxed_opaque_existential_2Tm(v17, v16);
  sub_2499446B4();
  sub_249AEE468();
  LOBYTE(v31) = v8;
  char v33 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v21 = v15;
    uint64_t v31 = v9;
    uint64_t v32 = v10;
    char v33 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE220);
    sub_249944708(&qword_2696DE228);
    sub_249AEDF08();
    LOBYTE(v31) = 2;
    sub_249AEDEB8();
    LOBYTE(v31) = 3;
    sub_249AEDEB8();
    uint64_t v31 = v26;
    char v33 = 4;
    sub_24988CC10();
    sub_249AEDF08();
    LOBYTE(v31) = 5;
    sub_249AEDEB8();
    uint64_t v31 = v23;
    char v33 = 6;
    sub_249AEDF08();
    uint64_t v31 = v22;
    char v33 = 7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE1D8);
    sub_2498ACDA0(&qword_2696DE1E0, (void (*)(void))sub_24988CC10);
    sub_249AEDF08();
    uint64_t v31 = v21;
    char v33 = 8;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v19);
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.CircularConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFFA0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499446B4();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    char v44 = 0;
    sub_24989C988();
    sub_249AEDE08();
    int v9 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE220);
    char v44 = 1;
    sub_249944708(&qword_2696DE248);
    sub_249AEDE08();
    uint64_t v10 = v41;
    uint64_t v11 = v42;
    LOBYTE(v41) = 2;
    uint64_t v38 = sub_249AEDDB8();
    LOBYTE(v41) = 3;
    uint64_t v14 = v13;
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_249AEDDB8();
    uint64_t v40 = v14;
    uint64_t v36 = v15;
    char v44 = 4;
    uint64_t v17 = v16;
    unint64_t v18 = sub_24988CBBC();
    swift_bridgeObjectRetain();
    unint64_t v37 = v18;
    sub_249AEDE08();
    uint64_t v39 = v17;
    uint64_t v19 = v41;
    LOBYTE(v41) = 5;
    swift_retain();
    uint64_t v34 = sub_249AEDDB8();
    uint64_t v35 = v19;
    char v44 = 6;
    uint64_t v21 = v20;
    swift_bridgeObjectRetain();
    sub_249AEDE08();
    int v43 = v9;
    uint64_t v22 = v21;
    uint64_t v23 = v41;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE1D8);
    char v44 = 7;
    uint64_t v25 = sub_2498ACDA0(&qword_2696DE200, (void (*)(void))sub_24988CBBC);
    swift_retain();
    unint64_t v37 = v24;
    uint64_t v33 = v25;
    sub_249AEDE08();
    char v44 = 8;
    uint64_t v32 = v41;
    swift_bridgeObjectRetain();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v26 = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v43;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    uint64_t v27 = v39;
    uint64_t v28 = v40;
    *(void *)(a2 + 24) = v38;
    *(void *)(a2 + 32) = v28;
    uint64_t v29 = v35;
    *(void *)(a2 + 40) = v36;
    *(void *)(a2 + 48) = v27;
    uint64_t v30 = v34;
    *(void *)(a2 + 56) = v29;
    *(void *)(a2 + 64) = v30;
    *(void *)(a2 + 72) = v22;
    *(void *)(a2 + 80) = v23;
    *(void *)(a2 + 88) = v32;
    *(void *)(a2 + 96) = v26;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24993D46C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.GaugeStyle.CircularConfiguration.init(from:)(a1, a2);
}

uint64_t sub_24993D484(void *a1)
{
  return Instrument.GaugeStyle.CircularConfiguration.encode(to:)(a1);
}

uint64_t sub_24993D4A0()
{
  return sub_249AEE388();
}

uint64_t sub_24993D528()
{
  return sub_249AEE388();
}

void static Instrument.GaugeStyle.Alignment.DefaultAlignment.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Instrument.GaugeStyle.Alignment.displayValue.getter()
{
  uint64_t result = 0x676E696461654CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7265746E6543;
      break;
    case 2:
      uint64_t result = 0x676E696C69617254;
      break;
    case 3:
      uint64_t result = 7368532;
      break;
    case 4:
      uint64_t result = 0x6D6F74746F42;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Instrument.GaugeStyle.Alignment.init(rawValue:)@<X0>(unint64_t result@<X0>, unsigned char *a2@<X8>)
{
  unint64_t v2 = 0x40302010005uLL >> (8 * result);
  if (result >= 6) {
    LOBYTE(v2) = 5;
  }
  *a2 = v2;
  return result;
}

void *static Instrument.GaugeStyle.Alignment.allCases.getter()
{
  return &unk_26FDA1370;
}

uint64_t Instrument.GaugeStyle.Alignment.rawValue.getter()
{
  return *v0 + 1;
}

unint64_t sub_24993D690@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return Instrument.GaugeStyle.Alignment.init(rawValue:)(*a1, a2);
}

void sub_24993D698(void *a1@<X8>)
{
  *a1 = &unk_26FDA1398;
}

uint64_t sub_24993D6A8()
{
  return sub_249AED3B8();
}

uint64_t sub_24993D708()
{
  return sub_249AED358();
}

uint64_t Instrument.GaugeStyle.hash(into:)(uint64_t a1)
{
  sub_2499441A8(v1, __src);
  sub_2499441A8(__src, v25);
  switch(sub_249944500((uint64_t)v25))
  {
    case 1u:
      uint64_t v10 = (const void *)sub_24994451C((uint64_t)v25);
      sub_249AEE348();
      memcpy(__dst, v10, 0x130uLL);
      uint64_t result = Instrument.GaugeStyle.DialConfiguration.hash(into:)(a1);
      break;
    case 2u:
      uint64_t v11 = sub_24994451C((uint64_t)v25);
      __int16 v12 = *(_WORD *)v11;
      long long v20 = *(_OWORD *)(v11 + 24);
      long long v22 = *(_OWORD *)(v11 + 8);
      uint64_t v13 = *(void *)(v11 + 40);
      char v14 = *(unsigned char *)(v11 + 48);
      sub_249AEE348();
      LOWORD(__dst[0]) = v12;
      *(_OWORD *)((char *)__dst + 8) = v22;
      *(_OWORD *)((char *)&__dst[1] + 8) = v20;
      *((void *)&__dst[2] + 1) = v13;
      LOBYTE(__dst[3]) = v14;
      uint64_t result = ImageGroupConfiguration.hash(into:)(a1);
      break;
    case 3u:
      uint64_t v15 = sub_24994451C((uint64_t)v25);
      sub_249AEE348();
      sub_249944658(v15, (uint64_t)__dst);
      uint64_t result = TextDataType.hash(into:)(a1);
      break;
    case 4u:
      uint64_t v16 = sub_24994451C((uint64_t)v25);
      sub_249AEE348();
      sub_24994452C(v16, (uint64_t)__dst);
      uint64_t result = ProgressBarType.hash(into:)(a1);
      break;
    case 5u:
    case 6u:
      uint64_t result = sub_249AEE348();
      break;
    default:
      uint64_t v3 = sub_24994451C((uint64_t)v25);
      char v4 = *(unsigned char *)v3;
      uint64_t v5 = *(void *)(v3 + 8);
      uint64_t v6 = *(void *)(v3 + 16);
      uint64_t v7 = *(void *)(v3 + 40);
      uint64_t v8 = *(void *)(v3 + 64);
      long long v19 = *(_OWORD *)(v3 + 72);
      long long v21 = *(_OWORD *)(v3 + 24);
      long long v17 = *(_OWORD *)(v3 + 48);
      long long v18 = *(_OWORD *)(v3 + 88);
      sub_249AEE348();
      LOBYTE(__dst[0]) = v4;
      *((void *)&__dst[0] + 1) = v5;
      *(void *)&__dst[1] = v6;
      *(_OWORD *)((char *)&__dst[1] + 8) = v21;
      *((void *)&__dst[2] + 1) = v7;
      __dst[3] = v17;
      *(void *)&__dst[4] = v8;
      *(_OWORD *)((char *)&__dst[4] + 8) = v19;
      *(_OWORD *)((char *)&__dst[5] + 8) = v18;
      uint64_t result = Instrument.GaugeStyle.CircularConfiguration.hash(into:)();
      break;
  }
  return result;
}

unint64_t sub_24993D980(char a1)
{
  unint64_t result = 0x72616C7563726963;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x737361706D6F63;
      break;
    case 2:
      unint64_t result = 1818323300;
      break;
    case 3:
      unint64_t result = 0x6F72476567616D69;
      break;
    case 4:
      unint64_t result = 0x6D656C4574786574;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0x73736572676F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24993DA78()
{
  return 0x6769666E6F63;
}

uint64_t sub_24993DA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24993DB1C(uint64_t a1)
{
  unint64_t v2 = sub_249944B08();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993DB58(uint64_t a1)
{
  unint64_t v2 = sub_249944B08();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24993DB94()
{
  return sub_24993D980(*v0);
}

uint64_t sub_24993DB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24994A4E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24993DBC4(uint64_t a1)
{
  unint64_t v2 = sub_24994476C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993DC00(uint64_t a1)
{
  unint64_t v2 = sub_24994476C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24993DC3C(uint64_t a1)
{
  unint64_t v2 = sub_249944AB4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993DC78(uint64_t a1)
{
  unint64_t v2 = sub_249944AB4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24993DCB4()
{
  return 0x72756769666E6F63;
}

uint64_t sub_24993DCDC(uint64_t a1)
{
  unint64_t v2 = sub_249944A0C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993DD18(uint64_t a1)
{
  unint64_t v2 = sub_249944A0C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24993DD54(uint64_t a1)
{
  unint64_t v2 = sub_249944964();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993DD90(uint64_t a1)
{
  unint64_t v2 = sub_249944964();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24993DDCC(uint64_t a1)
{
  unint64_t v2 = sub_249944868();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993DE08(uint64_t a1)
{
  unint64_t v2 = sub_249944868();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24993DE44()
{
  return 1701869940;
}

uint64_t sub_24993DE54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24993DEDC(uint64_t a1)
{
  unint64_t v2 = sub_2499447C0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993DF18(uint64_t a1)
{
  unint64_t v2 = sub_2499447C0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24993DF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24993E010(uint64_t a1)
{
  unint64_t v2 = sub_2499448BC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993E04C(uint64_t a1)
{
  unint64_t v2 = sub_2499448BC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  *(void *)&long long v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFFA8);
  *(void *)&long long v73 = *(void *)(v74 - 8);
  MEMORY[0x270FA5388](v74);
  *(void *)&long long v72 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFFB0);
  uint64_t v67 = *(void *)(v5 - 8);
  *(void *)&long long v68 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v64 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFFB8);
  *(void *)&long long v70 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  *(void *)&long long v69 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFFC0);
  uint64_t v65 = *(void *)(v8 - 8);
  uint64_t v66 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v63 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFFC8);
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  MEMORY[0x270FA5388](v10);
  __int16 v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFFD0);
  uint64_t v58 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFFD8);
  uint64_t v59 = *(void *)(v16 - 8);
  uint64_t v60 = v16;
  MEMORY[0x270FA5388](v16);
  long long v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFFE0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v76 = v19;
  uint64_t v77 = v20;
  MEMORY[0x270FA5388](v19);
  long long v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499441A8(v2, v84);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24994476C();
  uint64_t v75 = v22;
  sub_249AEE468();
  sub_2499441A8(v84, v85);
  switch(sub_249944500((uint64_t)v85))
  {
    case 1u:
      uint64_t v31 = (const void *)sub_24994451C((uint64_t)v85);
      LOBYTE(v78[0]) = 2;
      sub_2499441A8(v84, &v79);
      uint64_t v32 = (void *)sub_24994451C((uint64_t)&v79);
      sub_2498AEB34(v32);
      sub_249944A0C();
      uint64_t v34 = v75;
      uint64_t v33 = v76;
      sub_249AEDE48();
      memcpy(v78, v31, 0x130uLL);
      sub_249944A60();
      uint64_t v35 = v62;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v12, v35);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v34, v33);
      goto LABEL_8;
    case 2u:
      uint64_t v36 = sub_24994451C((uint64_t)v85);
      __int16 v37 = *(_WORD *)v36;
      long long v38 = *(_OWORD *)(v36 + 8);
      long long v73 = *(_OWORD *)(v36 + 24);
      long long v74 = v38;
      uint64_t v39 = *(void *)(v36 + 40);
      char v40 = *(unsigned char *)(v36 + 48);
      LOBYTE(v79) = 3;
      sub_249944964();
      uint64_t v41 = v63;
      int v43 = v75;
      uint64_t v42 = v76;
      sub_249AEDE48();
      __int16 v79 = v37;
      long long v80 = v74;
      long long v81 = v73;
      uint64_t v82 = v39;
      char v83 = v40;
      sub_2499449B8();
      uint64_t v44 = v66;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v41, v44);
      return (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v43, v42);
    case 3u:
      uint64_t v46 = (const void *)sub_24994451C((uint64_t)v85);
      LOBYTE(v78[0]) = 4;
      sub_2499441A8(v84, &v79);
      uint64_t v47 = sub_24994451C((uint64_t)&v79);
      sub_249945890(v47, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FBD8C);
      sub_2499448BC();
      uint64_t v48 = v69;
      long long v50 = v75;
      uint64_t v49 = v76;
      sub_249AEDE48();
      memcpy(v78, v46, sizeof(v78));
      sub_249944910();
      uint64_t v51 = v71;
      sub_249AEDF08();
      uint64_t v52 = v70;
      goto LABEL_7;
    case 4u:
      uint64_t v53 = sub_24994451C((uint64_t)v85);
      LOBYTE(v78[0]) = 6;
      sub_2499441A8(v84, &v79);
      uint64_t v54 = sub_24994451C((uint64_t)&v79);
      sub_2499445AC(v54);
      sub_2499447C0();
      uint64_t v48 = v72;
      long long v50 = v75;
      uint64_t v49 = v76;
      sub_249AEDE48();
      sub_24994452C(v53, (uint64_t)v78);
      sub_249944814();
      uint64_t v51 = v74;
      sub_249AEDF08();
      uint64_t v52 = v73;
LABEL_7:
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v48, v51);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v50, v49);
      goto LABEL_8;
    case 5u:
      LOBYTE(v79) = 1;
      sub_249944AB4();
      uint64_t v55 = v75;
      uint64_t v56 = v76;
      sub_249AEDE48();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v15, v13);
      goto LABEL_11;
    case 6u:
      LOBYTE(v79) = 5;
      sub_249944868();
      uint64_t v57 = v64;
      uint64_t v55 = v75;
      uint64_t v56 = v76;
      sub_249AEDE48();
      (*(void (**)(char *, void))(v67 + 8))(v57, v68);
LABEL_11:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v77 + 8))(v55, v56);
      break;
    default:
      uint64_t v23 = (unsigned __int8 *)sub_24994451C((uint64_t)v85);
      LODWORD(v73) = *v23;
      uint64_t v24 = *((void *)v23 + 1);
      uint64_t v25 = *((void *)v23 + 2);
      long long v72 = *(_OWORD *)(v23 + 24);
      uint64_t v71 = *((void *)v23 + 5);
      *(void *)&long long v74 = *((void *)v23 + 8);
      LOBYTE(v78[0]) = 0;
      long long v26 = *((_OWORD *)v23 + 3);
      long long v70 = *(_OWORD *)(v23 + 72);
      long long v27 = *(_OWORD *)(v23 + 88);
      long long v68 = v26;
      long long v69 = v27;
      sub_2499441A8(v84, &v79);
      sub_24994451C((uint64_t)&v79);
      sub_249944B08();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v29 = v75;
      uint64_t v28 = v76;
      sub_249AEDE48();
      LOBYTE(v78[0]) = v73;
      *((void *)&v78[0] + 1) = v24;
      *(void *)&v78[1] = v25;
      *(_OWORD *)((char *)&v78[1] + 8) = v72;
      *((void *)&v78[2] + 1) = v71;
      v78[3] = v68;
      *(void *)&v78[4] = v74;
      *(_OWORD *)((char *)&v78[4] + 8) = v70;
      *(_OWORD *)((char *)&v78[5] + 8) = v69;
      sub_249944B5C();
      uint64_t v30 = v60;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v18, v30);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v29, v28);
LABEL_8:
      uint64_t result = sub_249945890((uint64_t)v84, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      break;
  }
  return result;
}

uint64_t Instrument.GaugeStyle.hashValue.getter()
{
  sub_2499441A8(v0, __dst);
  sub_2499441A8(__dst, v3);
  sub_249AEE338();
  Instrument.GaugeStyle.hash(into:)((uint64_t)v2);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  long long v80 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0050);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  uint64_t v78 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v84 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0058);
  uint64_t v75 = *(void *)(v6 - 8);
  uint64_t v76 = v6;
  MEMORY[0x270FA5388](v6);
  char v83 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0060);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v73 = v8;
  uint64_t v74 = v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v82 = (char *)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0068);
  uint64_t v71 = *(void *)(v11 - 8);
  uint64_t v72 = v11;
  MEMORY[0x270FA5388](v11);
  long long v81 = (char *)&v62 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0070);
  uint64_t v69 = *(void *)(v13 - 8);
  uint64_t v70 = v13;
  MEMORY[0x270FA5388](v13);
  __int16 v79 = (char *)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0078);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v66 = v15;
  uint64_t v67 = v16;
  MEMORY[0x270FA5388](v15);
  long long v18 = (char *)&v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0080);
  uint64_t v68 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v62 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0088);
  uint64_t v22 = *(void *)(v85 - 8);
  MEMORY[0x270FA5388](v85);
  uint64_t v24 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1[3];
  uint64_t v86 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v25);
  sub_24994476C();
  uint64_t v26 = v92;
  sub_249AEE428();
  if (!v26)
  {
    uint64_t v63 = v19;
    uint64_t v64 = v21;
    long long v27 = v81;
    uint64_t v28 = v82;
    uint64_t v65 = 0;
    uint64_t v30 = v83;
    uint64_t v29 = v84;
    uint64_t v92 = v22;
    uint64_t v31 = sub_249AEDE18();
    if (*(void *)(v31 + 16) == 1)
    {
      uint64_t v62 = v24;
      uint64_t v32 = v85;
      switch(*(unsigned char *)(v31 + 32))
      {
        case 1:
          LOBYTE(v87[0]) = 1;
          sub_249944AB4();
          uint64_t v35 = v62;
          uint64_t v40 = v65;
          sub_249AEDD38();
          if (v40) {
            goto LABEL_5;
          }
          (*(void (**)(char *, uint64_t))(v67 + 8))(v18, v66);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v35, v32);
          sub_249944EDC(v90);
          goto LABEL_24;
        case 2:
          LOBYTE(v90[0]) = 2;
          sub_249944A0C();
          uint64_t v41 = v79;
          uint64_t v42 = v32;
          int v43 = v62;
          uint64_t v44 = v65;
          sub_249AEDD38();
          if (v44) {
            goto LABEL_14;
          }
          sub_249944E30();
          uint64_t v45 = v70;
          sub_249AEDE08();
          uint64_t v46 = (void (**)(char *, uint64_t))(v92 + 8);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v45);
          swift_bridgeObjectRelease();
          (*v46)(v43, v42);
          memcpy(v90, v87, 0x130uLL);
          sub_249944E84(v90);
          goto LABEL_24;
        case 3:
          LOBYTE(v90[0]) = 3;
          sub_249944964();
          uint64_t v42 = v32;
          int v43 = v62;
          uint64_t v47 = v65;
          sub_249AEDD38();
          if (v47) {
            goto LABEL_14;
          }
          sub_249944D84();
          uint64_t v48 = v72;
          sub_249AEDE08();
          uint64_t v49 = (void (**)(char *, uint64_t))(v92 + 8);
          (*(void (**)(char *, uint64_t))(v71 + 8))(v27, v48);
          swift_bridgeObjectRelease();
          (*v49)(v43, v42);
          LOWORD(v90[0]) = v87[0];
          *((void *)&v90[0] + 1) = *((void *)&v87[0] + 1);
          v90[1] = v87[1];
          v90[2] = v87[2];
          LOBYTE(v90[3]) = v87[3];
          sub_249944DD8(v90);
          goto LABEL_24;
        case 4:
          LOBYTE(v90[0]) = 4;
          sub_2499448BC();
          uint64_t v42 = v32;
          int v43 = v62;
          uint64_t v50 = v65;
          sub_249AEDD38();
          if (v50)
          {
LABEL_14:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v92 + 8))(v43, v42);
            return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v86);
          }
          sub_249944CD8();
          uint64_t v59 = v73;
          sub_249AEDE08();
          uint64_t v60 = (void (**)(char *, uint64_t))(v92 + 8);
          (*(void (**)(char *, uint64_t))(v74 + 8))(v28, v59);
          swift_bridgeObjectRelease();
          (*v60)(v43, v42);
          memcpy(v87, v90, sizeof(v87));
          sub_249944D2C(v87);
          uint64_t v61 = v87;
          goto LABEL_25;
        case 5:
          LOBYTE(v87[0]) = 5;
          sub_249944868();
          uint64_t v35 = v62;
          uint64_t v51 = v65;
          sub_249AEDD38();
          if (v51) {
            goto LABEL_5;
          }
          (*(void (**)(char *, uint64_t))(v75 + 8))(v30, v76);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v35, v32);
          sub_249944C5C((uint64_t)v90);
          goto LABEL_24;
        case 6:
          LOBYTE(v90[0]) = 6;
          sub_2499447C0();
          uint64_t v52 = v32;
          uint64_t v53 = v62;
          uint64_t v54 = v65;
          sub_249AEDD38();
          if (!v54)
          {
            sub_249944BB0();
            uint64_t v55 = v77;
            sub_249AEDE08();
            (*(void (**)(char *, uint64_t))(v78 + 8))(v29, v55);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v92 + 8))(v53, v52);
            sub_24994452C((uint64_t)v87, (uint64_t)v88);
            sub_24994452C((uint64_t)v88, (uint64_t)v89);
            memcpy(v90, v89, 0x154uLL);
            sub_249944C04(v90);
            goto LABEL_24;
          }
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v92 + 8))(v53, v52);
          break;
        default:
          LOBYTE(v90[0]) = 0;
          sub_249944B08();
          uint64_t v34 = v64;
          uint64_t v33 = v65;
          uint64_t v35 = v62;
          sub_249AEDD38();
          if (v33)
          {
LABEL_5:
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v92 + 8))(v35, v32);
          }
          else
          {
            sub_249944F2C();
            uint64_t v57 = v63;
            sub_249AEDE08();
            uint64_t v58 = v92;
            (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v57);
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v58 + 8))(v62, v32);
            LOBYTE(v90[0]) = v87[0];
            *(_OWORD *)((char *)v90 + 8) = *(_OWORD *)((char *)v87 + 8);
            *(_OWORD *)((char *)&v90[1] + 8) = *(_OWORD *)((char *)&v87[1] + 8);
            *((void *)&v90[2] + 1) = *((void *)&v87[2] + 1);
            v90[3] = v87[3];
            *(void *)&v90[4] = *(void *)&v87[4];
            *(_OWORD *)((char *)&v90[4] + 8) = *(_OWORD *)((char *)&v87[4] + 8);
            *(_OWORD *)((char *)&v90[5] + 8) = *(_OWORD *)((char *)&v87[5] + 8);
            sub_249944F80(v90);
LABEL_24:
            uint64_t v61 = v90;
LABEL_25:
            sub_2499441A8(v61, v91);
            sub_2499441A8(v91, v80);
          }
          break;
      }
    }
    else
    {
      uint64_t v36 = sub_249AEDB08();
      swift_allocError();
      long long v38 = v37;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
      *long long v38 = &type metadata for Instrument.GaugeStyle;
      uint64_t v39 = v85;
      sub_249AEDD48();
      sub_249AEDAE8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v36 - 8) + 104))(v38, *MEMORY[0x263F8DCB0], v36);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v24, v39);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v86);
}

uint64_t sub_24993F7F4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.init(from:)(a1, a2);
}

uint64_t sub_24993F80C(void *a1)
{
  return Instrument.GaugeStyle.encode(to:)(a1);
}

uint64_t sub_24993F828()
{
  sub_2499441A8(v0, __dst);
  sub_2499441A8(__dst, v3);
  sub_249AEE338();
  Instrument.GaugeStyle.hash(into:)((uint64_t)v2);
  return sub_249AEE388();
}

uint64_t sub_24993F888()
{
  sub_2499441A8(v0, __dst);
  sub_2499441A8(__dst, v3);
  sub_249AEE338();
  Instrument.GaugeStyle.hash(into:)((uint64_t)v2);
  return sub_249AEE388();
}

uint64_t static Instrument.ConfigurableInputState.defaultState.getter()
{
  return 0;
}

uint64_t Instrument.ConfigurableInputState.imageAsset.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v7 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return sub_24988247C(v2, v3, v4, v5, v7);
}

__n128 Instrument.ConfigurableInputState.imageAsset.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  sub_2498826E4(*(void **)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  __n128 result = v7;
  *(__n128 *)uint64_t v1 = v7;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v5;
  return result;
}

uint64_t (*Instrument.ConfigurableInputState.imageAsset.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.ConfigurableInputState.tintColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.ConfigurableInputState.tintColorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*Instrument.ConfigurableInputState.tintColorIDs.modify())()
{
  return nullsub_1;
}

void Instrument.ConfigurableInputState.alignment.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 56);
}

unsigned char *Instrument.ConfigurableInputState.alignment.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 56) = *result;
  return result;
}

uint64_t (*Instrument.ConfigurableInputState.alignment.modify())()
{
  return nullsub_1;
}

__n128 Instrument.ConfigurableInputState.init(imageAsset:tintColorID:alignment:)@<Q0>(long long *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  __n128 v14 = (__n128)a1[1];
  long long v15 = *a1;
  char v5 = *((unsigned char *)a1 + 32);
  uint64_t v6 = *((void *)a1 + 5);
  int v7 = *((unsigned __int8 *)a2 + 16);
  char v8 = *a3;
  if (v7 == 255)
  {
    unint64_t v12 = sub_2498F0E5C(MEMORY[0x263F8EE78]);
  }
  else
  {
    uint64_t v10 = *a2;
    uint64_t v9 = a2[1];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00B8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = v10;
    *(void *)(inited + 48) = v9;
    *(unsigned char *)(inited + 56) = v7;
    unint64_t v12 = sub_2498F0E5C(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00C0);
    swift_arrayDestroy();
  }
  __n128 result = v14;
  *(_OWORD *)a4 = v15;
  *(__n128 *)(a4 + 16) = v14;
  *(unsigned char *)(a4 + 32) = v5;
  *(void *)(a4 + 40) = v6;
  *(void *)(a4 + 48) = v12;
  *(unsigned char *)(a4 + 56) = v8;
  return result;
}

__n128 Instrument.ConfigurableInputState.init(imageAsset:tintColorIDs:alignment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *a3;
  __n128 result = *(__n128 *)a1;
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v8;
  *(unsigned char *)(a4 + 32) = v4;
  *(void *)(a4 + 40) = v5;
  *(void *)(a4 + 48) = a2;
  *(unsigned char *)(a4 + 56) = v6;
  return result;
}

uint64_t sub_24993FB58(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498F2670(*a1, *a2);
}

uint64_t sub_24993FB64()
{
  return sub_249AEE388();
}

uint64_t sub_24993FC10()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24993FCA8()
{
  return sub_249AEE388();
}

uint64_t sub_24993FD50@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24994A7F0();
  *a1 = result;
  return result;
}

void sub_24993FD80(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xEC00000073444972;
  uint64_t v5 = 0x6F6C6F43746E6974;
  if (v2 != 1)
  {
    uint64_t v5 = 0x6E656D6E67696C61;
    unint64_t v4 = 0xE900000000000074;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6567616D69;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_24993FDE8()
{
  uint64_t v1 = 0x6F6C6F43746E6974;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E656D6E67696C61;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6567616D69;
  }
}

uint64_t sub_24993FE4C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24994A7F0();
  *a1 = result;
  return result;
}

uint64_t sub_24993FE74(uint64_t a1)
{
  unint64_t v2 = sub_249944FD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24993FEB0(uint64_t a1)
{
  unint64_t v2 = sub_249944FD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.ConfigurableInputState.hash(into:)(uint64_t a1)
{
  unint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(void **)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  char v9 = *(unsigned char *)(v1 + 32);
  sub_24988247C(*(void **)v1, v6, v7, v8, v9);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_249AEE348();
  sub_2498826E4(v3, v6, v7, v8, v9);
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  swift_bridgeObjectRelease();
  return sub_249AEE348();
}

uint64_t Instrument.ConfigurableInputState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00C8);
  uint64_t v20 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v18 = *v1;
  uint64_t v6 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  char v7 = *((unsigned char *)v1 + 32);
  uint64_t v8 = *((void *)v1 + 5);
  uint64_t v17 = *((void *)v1 + 6);
  int v26 = *((unsigned __int8 *)v1 + 56);
  uint64_t v9 = a1[3];
  uint64_t v10 = a1;
  uint64_t v11 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(v10, v9);
  sub_249944FD4();
  sub_249AEE468();
  long long v21 = v18;
  uint64_t v22 = v6;
  uint64_t v23 = v5;
  char v24 = v7;
  uint64_t v25 = v8;
  char v27 = 0;
  sub_24989D190();
  uint64_t v12 = v19;
  sub_249AEDF08();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v11, v3);
  }
  char v14 = v26;
  uint64_t v15 = v20;
  *(void *)&long long v21 = v17;
  char v27 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  sub_24994507C((unint64_t *)&qword_2696E00E0, (void (*)(void))sub_24988E104);
  sub_249AEDF08();
  LOBYTE(v21) = v14;
  char v27 = 2;
  sub_249945028();
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v11, v3);
}

uint64_t Instrument.ConfigurableInputState.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 32);
  sub_249AEE338();
  sub_24988247C(v1, v2, v3, v4, v6);
  ImageAsset.ImageType.hash(into:)((uint64_t)v8);
  sub_249AEE348();
  sub_2498826E4(v1, v2, v3, v4, v6);
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v8, v5);
  swift_bridgeObjectRelease();
  sub_249AEE348();
  return sub_249AEE388();
}

void Instrument.ConfigurableInputState.init(from:)(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249944FD4();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    char v40 = 0;
    sub_24989D2E8();
    sub_249AEDE08();
    uint64_t v9 = v33;
    uint64_t v28 = a2;
    uint64_t v29 = v34;
    uint64_t v10 = v36;
    uint64_t v32 = v35;
    int v11 = v37;
    uint64_t v27 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
    char v40 = 1;
    uint64_t v30 = v9;
    uint64_t v31 = v10;
    uint64_t v12 = v9;
    uint64_t v13 = v29;
    int v39 = v11;
    sub_24988247C(v12, v29, v32, v10, v11);
    sub_24994507C((unint64_t *)&qword_2696E00F8, (void (*)(void))sub_24988E268);
    sub_249AEDE08();
    uint64_t v15 = v32;
    uint64_t v14 = (uint64_t)v33;
    uint64_t v16 = v30;
    char v40 = 2;
    sub_2499450F8();
    uint64_t v26 = v14;
    swift_bridgeObjectRetain();
    uint64_t v25 = 0;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    LOBYTE(v14) = (_BYTE)v33;
    uint64_t v17 = v16;
    long long v18 = v16;
    uint64_t v19 = v13;
    uint64_t v20 = v13;
    uint64_t v21 = v31;
    LOBYTE(v16) = v39;
    sub_24988247C(v18, v20, v15, v31, v39);
    sub_2498826E4(v17, v19, v15, v21, (char)v16);
    uint64_t v23 = v27;
    uint64_t v22 = v28;
    *uint64_t v28 = v17;
    v22[1] = v19;
    v22[2] = v15;
    v22[3] = v21;
    *((unsigned char *)v22 + 32) = (_BYTE)v16;
    uint64_t v24 = v26;
    v22[5] = v23;
    v22[6] = v24;
    *((unsigned char *)v22 + 56) = v14;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2498826E4(v17, v19, v15, v21, (char)v16);
    swift_bridgeObjectRelease();
  }
}

void sub_2499406E0(void *a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_2499406F8(void *a1)
{
  return Instrument.ConfigurableInputState.encode(to:)(a1);
}

uint64_t sub_249940714(uint64_t a1)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = *(void **)(v1 + 16);
  uint64_t v8 = *(void *)(v1 + 24);
  char v9 = *(unsigned char *)(v1 + 32);
  sub_24988247C(*(void **)v1, v6, v7, v8, v9);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_249AEE348();
  sub_2498826E4(v3, v6, v7, v8, v9);
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  swift_bridgeObjectRelease();
  return sub_249AEE348();
}

uint64_t sub_2499407E8()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 48);
  char v6 = *(unsigned char *)(v0 + 32);
  sub_249AEE338();
  sub_24988247C(v1, v2, v3, v4, v6);
  ImageAsset.ImageType.hash(into:)((uint64_t)v8);
  sub_249AEE348();
  sub_2498826E4(v1, v2, v3, v4, v6);
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v8, v5);
  swift_bridgeObjectRelease();
  sub_249AEE348();
  return sub_249AEE388();
}

void Instrument.RemainingRangeTextConfiguration.remainingRangeDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *Instrument.RemainingRangeTextConfiguration.remainingRangeDataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*Instrument.RemainingRangeTextConfiguration.remainingRangeDataIdentifier.modify())()
{
  return nullsub_1;
}

void Instrument.RemainingRangeTextConfiguration.unitDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *Instrument.RemainingRangeTextConfiguration.unitDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*Instrument.RemainingRangeTextConfiguration.unitDataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.RemainingRangeTextConfiguration.labelConfiguration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + 8);
  memcpy(__dst, v3, 0x112uLL);
  memcpy(a1, v3, 0x112uLL);
  return sub_24994514C((uint64_t)__dst);
}

void *Instrument.RemainingRangeTextConfiguration.labelConfiguration.setter(const void *a1)
{
  uint64_t v3 = (void *)(v1 + 8);
  memcpy(__dst, v3, 0x112uLL);
  sub_249945284((uint64_t)__dst);
  return memcpy(v3, a1, 0x112uLL);
}

uint64_t (*Instrument.RemainingRangeTextConfiguration.labelConfiguration.modify())()
{
  return nullsub_1;
}

void *Instrument.RemainingRangeTextConfiguration.init(labelConfiguration:)@<X0>(void *__src@<X0>, _WORD *a2@<X8>)
{
  memcpy(&__srca[6], __src, 0x112uLL);
  *a2 = 8234;
  return memcpy(a2 + 1, __srca, 0x118uLL);
}

uint64_t Instrument.RemainingRangeTextConfiguration.hash(into:)(uint64_t a1)
{
  char v3 = *v1;
  char v4 = v1[1];
  memcpy(__dst, v1 + 8, sizeof(__dst));
  char v7 = v3;
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  char v7 = v4;
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  return MeasurementLabelConfiguration.hash(into:)(a1);
}

unint64_t sub_249940B24(char a1)
{
  unint64_t result = 0xD000000000000012;
  if (!a1) {
    return 0xD00000000000001CLL;
  }
  return result;
}

unint64_t sub_249940B7C()
{
  return sub_249940B24(*v0);
}

uint64_t sub_249940B84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24994A83C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249940BAC(uint64_t a1)
{
  unint64_t v2 = sub_2499453B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249940BE8(uint64_t a1)
{
  unint64_t v2 = sub_2499453B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.RemainingRangeTextConfiguration.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0108);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v2;
  int v13 = v2[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499453B8();
  sub_249AEE468();
  v12[0] = v8;
  char v14 = 0;
  sub_24989C934();
  uint64_t v9 = v11[1];
  sub_249AEDF08();
  if (!v9)
  {
    v12[0] = v13;
    char v14 = 1;
    sub_249AEDF08();
    memcpy(v12, v2 + 8, sizeof(v12));
    char v14 = 2;
    sub_24994540C();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.RemainingRangeTextConfiguration.hashValue.getter()
{
  memcpy(__dst, (const void *)(v0 + 8), sizeof(__dst));
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  memcpy(v2, __dst, sizeof(v2));
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

uint64_t Instrument.RemainingRangeTextConfiguration.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0120);
  uint64_t v5 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  char v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499453B8();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  uint64_t v16 = a2;
  v19[0] = 0;
  sub_24989C988();
  uint64_t v9 = v17;
  sub_249AEDE08();
  int v10 = v20[0];
  v19[0] = 1;
  sub_249AEDE08();
  int v24 = v10;
  char v11 = v20[0];
  char v25 = 2;
  sub_249945460();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
  memcpy(v18, v22, 0x112uLL);
  memcpy(&v23[6], v22, 0x112uLL);
  memcpy(&v19[6], v22, 0x112uLL);
  uint64_t v12 = v16;
  char v13 = v24;
  *uint64_t v16 = v24;
  v12[1] = v11;
  memcpy(v12 + 2, v19, 0x118uLL);
  sub_24994514C((uint64_t)v18);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  v20[0] = v13;
  v20[1] = v11;
  memcpy(v21, v23, sizeof(v21));
  return sub_24989FA44((uint64_t)v20);
}

void *sub_249941184()
{
  memcpy(__dst, (const void *)(v0 + 8), sizeof(__dst));
  return MeasurementLabelConfiguration.assets.getter();
}

uint64_t sub_2499411C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 256);
  unint64_t v5 = sub_2498F0D0C(MEMORY[0x263F8EE78]);
  v8[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_249897C68(v5, (void (*)(uint64_t *__return_ptr, uint64_t *, void *))sub_24989FB78, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v1 + 256) = v6;
  }
  return result;
}

uint64_t sub_249941268@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Instrument.RemainingRangeTextConfiguration.init(from:)(a1, a2);
}

uint64_t sub_249941280(void *a1)
{
  return Instrument.RemainingRangeTextConfiguration.encode(to:)(a1);
}

uint64_t sub_24994129C(uint64_t a1)
{
  char v3 = *v1;
  char v4 = v1[1];
  memcpy(__dst, v1 + 8, sizeof(__dst));
  char v7 = v3;
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  char v7 = v4;
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  return MeasurementLabelConfiguration.hash(into:)(a1);
}

uint64_t sub_249941350()
{
  memcpy(__dst, (const void *)(v0 + 8), sizeof(__dst));
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  memcpy(v2, __dst, sizeof(v2));
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

uint64_t Instrument.BoundsLabel.lowerBounds.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.BoundsLabel.lowerBounds.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*Instrument.BoundsLabel.lowerBounds.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.BoundsLabel.upperBounds.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.BoundsLabel.upperBounds.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*Instrument.BoundsLabel.upperBounds.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.BoundsLabel.init(lowerBounds:upperBounds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t Instrument.BoundsLabel.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2499415D0()
{
  if (*v0) {
    return 0x756F427265707075;
  }
  else {
    return 0x756F427265776F6CLL;
  }
}

uint64_t sub_24994160C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24994A980(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249941634(uint64_t a1)
{
  unint64_t v2 = sub_2499454B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249941670(uint64_t a1)
{
  unint64_t v2 = sub_2499454B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.BoundsLabel.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0130);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  v10[2] = v7;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499454B4();
  sub_249AEE468();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_249AEDEB8();
  if (!v8)
  {
    char v11 = 1;
    sub_249AEDEB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Instrument.BoundsLabel.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t Instrument.BoundsLabel.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0140);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499454B4();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  char v20 = 0;
  uint64_t v9 = sub_249AEDDB8();
  uint64_t v11 = v10;
  char v19 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_249AEDDB8();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v18 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v18;
  a2[3] = v14;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249941A90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Instrument.BoundsLabel.init(from:)(a1, a2);
}

uint64_t sub_249941AA8(void *a1)
{
  return Instrument.BoundsLabel.encode(to:)(a1);
}

uint64_t (*Instrument.UnitSensitiveBoundsLabels.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*Instrument.UnitSensitiveBoundsLabels.labels.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.UnitSensitiveBoundsLabels.hash(into:)(uint64_t a1)
{
  return sub_2499423D8(a1, (void (*)(uint64_t, uint64_t))sub_24988A8D4);
}

uint64_t static Instrument.UnitSensitiveBoundsLabels.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_249943DA8(a1, a2, sub_2499FF8C0) & 1;
}

uint64_t sub_249941B48(uint64_t a1)
{
  unint64_t v2 = sub_249945508();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249941B84(uint64_t a1)
{
  unint64_t v2 = sub_249945508();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.UnitSensitiveBoundsLabels.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0148);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  v10[0] = *((void *)v1 + 1);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249945508();
  sub_249AEE468();
  char v13 = v8;
  char v12 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    v10[1] = v10[0];
    char v11 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0158);
    sub_24994555C(&qword_2696E0160, (void (*)(void))sub_2499455D8);
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.UnitSensitiveBoundsLabels.hashValue.getter()
{
  return sub_2499427B0((void (*)(unsigned char *, uint64_t))sub_24988A8D4);
}

uint64_t Instrument.UnitSensitiveBoundsLabels.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0170);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249945508();
  sub_249AEE428();
  if (!v2)
  {
    char v14 = 0;
    sub_24989C988();
    sub_249AEDE08();
    char v9 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0158);
    char v13 = 1;
    sub_24994555C(&qword_2696E0178, (void (*)(void))sub_24994562C);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *(unsigned char *)a2 = v9;
    *(void *)(a2 + 8) = v10;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249941FD0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.UnitSensitiveBoundsLabels.init(from:)(a1, a2);
}

uint64_t sub_249941FE8(void *a1)
{
  return Instrument.UnitSensitiveBoundsLabels.encode(to:)(a1);
}

uint64_t sub_249942000(uint64_t a1, uint64_t a2)
{
  return sub_249942AC0(a1, a2, (void (*)(unsigned char *, uint64_t))sub_24988A8D4);
}

uint64_t sub_249942018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249942B48(a1, a2, a3, sub_24988A8D4);
}

uint64_t sub_249942030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249942BD0(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_24988A8D4);
}

uint64_t sub_249942048(uint64_t a1, uint64_t a2)
{
  return sub_249943DA8(a1, a2, sub_2499FF8C0) & 1;
}

uint64_t (*Instrument.UnitSensitiveFormatSpecifiers.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t (*Instrument.UnitSensitiveFormatSpecifiers.formatSpecifiers.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.UnitSensitiveFormatSpecifiers.hash(into:)(uint64_t a1)
{
  return sub_2499423D8(a1, (void (*)(uint64_t, uint64_t))sub_24988A734);
}

uint64_t static Instrument.UnitSensitiveFormatSpecifiers.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_249943DA8(a1, a2, sub_2499FF734) & 1;
}

uint64_t sub_249942100()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 0x6E65644961746164;
  }
}

uint64_t sub_24994214C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24994AAA0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249942174(uint64_t a1)
{
  unint64_t v2 = sub_249945680();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499421B0(uint64_t a1)
{
  unint64_t v2 = sub_249945680();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.UnitSensitiveFormatSpecifiers.encode(to:)(void *a1)
{
  return sub_2499425BC(a1, &qword_2696E0188, (void (*)(void))sub_249945680);
}

uint64_t Instrument.UnitSensitiveFormatSpecifiers.hashValue.getter()
{
  return sub_2499427B0((void (*)(unsigned char *, uint64_t))sub_24988A734);
}

uint64_t Instrument.UnitSensitiveFormatSpecifiers.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249942874(a1, &qword_2696E01A8, (void (*)(void))sub_249945680, a2);
}

uint64_t sub_24994227C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.UnitSensitiveFormatSpecifiers.init(from:)(a1, a2);
}

uint64_t sub_249942294(void *a1)
{
  return Instrument.UnitSensitiveFormatSpecifiers.encode(to:)(a1);
}

uint64_t sub_2499422AC(uint64_t a1, uint64_t a2)
{
  return sub_249942AC0(a1, a2, (void (*)(unsigned char *, uint64_t))sub_24988A734);
}

uint64_t sub_2499422C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249942B48(a1, a2, a3, sub_24988A734);
}

uint64_t sub_2499422DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249942BD0(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_24988A734);
}

uint64_t sub_2499422F4(uint64_t a1, uint64_t a2)
{
  return sub_249943DA8(a1, a2, sub_2499FF734) & 1;
}

void Instrument.UnitSensitiveLabel.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *Instrument.UnitSensitiveLabel.dataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*Instrument.UnitSensitiveLabel.dataIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.UnitSensitiveLabel.labels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.UnitSensitiveLabel.labels.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.UnitSensitiveLabel.labels.modify())()
{
  return nullsub_1;
}

unsigned char *Instrument.UnitSensitiveLabel.init(dataIdentifier:labels:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = *result;
  *(void *)(a3 + 8) = a2;
  return result;
}

uint64_t Instrument.UnitSensitiveLabel.hash(into:)(uint64_t a1)
{
  return sub_2499423D8(a1, (void (*)(uint64_t, uint64_t))sub_24988A734);
}

uint64_t sub_2499423D8(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(v2 + 8);
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  a2(a1, v5);

  return swift_bridgeObjectRelease();
}

uint64_t static Instrument.UnitSensitiveLabel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_249943DA8(a1, a2, sub_2499FF734) & 1;
}

uint64_t sub_24994249C()
{
  if (*v0) {
    return 0x736C6562616CLL;
  }
  else {
    return 0x6E65644961746164;
  }
}

uint64_t sub_2499424E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24994ABB4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249942508(uint64_t a1)
{
  unint64_t v2 = sub_24994573C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249942544(uint64_t a1)
{
  unint64_t v2 = sub_24994573C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.UnitSensitiveLabel.encode(to:)(void *a1)
{
  return sub_2499425BC(a1, &qword_2696E01B8, (void (*)(void))sub_24994573C);
}

uint64_t sub_2499425BC(void *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v13 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  char v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *v3;
  v12[0] = *((void *)v3 + 1);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  a3();
  sub_249AEE468();
  char v17 = v9;
  char v16 = 0;
  sub_24989C934();
  uint64_t v10 = v12[1];
  sub_249AEDF08();
  if (!v10)
  {
    uint64_t v14 = v12[0];
    char v15 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0198);
    sub_2499456D4(&qword_2696E01A0);
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v8, v6);
}

uint64_t Instrument.UnitSensitiveLabel.hashValue.getter()
{
  return sub_2499427B0((void (*)(unsigned char *, uint64_t))sub_24988A734);
}

uint64_t sub_2499427B0(void (*a1)(unsigned char *, uint64_t))
{
  uint64_t v3 = *(void *)(v1 + 8);
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  a1(v5, v3);
  return sub_249AEE388();
}

uint64_t Instrument.UnitSensitiveLabel.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249942874(a1, &qword_2696E01C8, (void (*)(void))sub_24994573C, a2);
}

uint64_t sub_249942874@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v17 = a4;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v7 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  char v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  a3();
  sub_249AEE428();
  if (!v4)
  {
    uint64_t v10 = v7;
    uint64_t v11 = v17;
    char v21 = 0;
    sub_24989C988();
    uint64_t v12 = v18;
    sub_249AEDE08();
    char v13 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0198);
    char v20 = 1;
    sub_2499456D4(&qword_2696E01B0);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v12);
    uint64_t v14 = v19;
    *(unsigned char *)uint64_t v11 = v13;
    *(void *)(v11 + 8) = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249942A90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.UnitSensitiveLabel.init(from:)(a1, a2);
}

uint64_t sub_249942AA8(void *a1)
{
  return Instrument.UnitSensitiveLabel.encode(to:)(a1);
}

uint64_t sub_249942AC0(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  uint64_t v5 = *(void *)(v3 + 8);
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  a3(v7, v5);
  return sub_249AEE388();
}

uint64_t sub_249942B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(v4 + 8);
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();

  return a4(a1, v6);
}

uint64_t sub_249942BD0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v6 = *(void *)(v4 + 8);
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  a4(v8, v6);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.assets.getter()
{
  sub_2499441A8(v0, __src);
  sub_2499441A8(__src, v23);
  int v1 = sub_249944500((uint64_t)v23);
  uint64_t v2 = MEMORY[0x263F8EE78];
  switch(v1)
  {
    case 1:
      uint64_t v3 = (const void *)sub_24994451C((uint64_t)v23);
      memcpy(__dst, v3, 0x130uLL);
      uint64_t v2 = (uint64_t)Instrument.GaugeStyle.DialConfiguration.assets.getter();
      break;
    case 2:
      uint64_t v4 = *(void *)(sub_24994451C((uint64_t)v23) + 8);
      swift_getKeyPath();
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v2 = sub_249943E98(v4, (void (*)(long long *__return_ptr, long long *))sub_249945790);
      swift_bridgeObjectRelease();
      swift_release_n();
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      break;
    case 3:
      uint64_t v5 = (const void *)sub_24994451C((uint64_t)v23);
      memcpy(__dst, v5, sizeof(__dst));
      uint64_t v2 = (uint64_t)TextElementConfiguration.assets.getter();
      break;
    case 4:
      uint64_t v6 = sub_24994451C((uint64_t)v23);
      sub_24994452C(v6, (uint64_t)__dst);
      switch(sub_249944588((uint64_t)__dst))
      {
        case 6u:
          uint64_t v19 = sub_249944640((uint64_t)__dst);
          sub_2499457D8(v19, (uint64_t)v20);
          sub_249945834((uint64_t)v20);
          sub_249945840((uint64_t)v20);
          break;
        case 8u:
        case 9u:
          uint64_t v8 = sub_249944640((uint64_t)__dst);
          char v9 = *(unsigned char *)(v8 + 24);
          uint64_t v10 = *(void *)(v8 + 32);
          uint64_t v11 = *(void **)(v8 + 40);
          uint64_t v12 = *(void *)(v8 + 48);
          char v13 = *(unsigned char *)(v8 + 56);
          char v14 = *(unsigned char *)(v8 + 57);
          uint64_t v16 = *(void *)(v8 + 64);
          uint64_t v15 = *(void *)(v8 + 72);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
          uint64_t v2 = swift_allocObject();
          *(_OWORD *)(v2 + 16) = xmmword_249AF0A70;
          *(void *)(v2 + 56) = &type metadata for InstrumentFont;
          *(void *)(v2 + 64) = &protocol witness table for InstrumentFont;
          uint64_t v17 = swift_allocObject();
          *(void *)(v2 + 32) = v17;
          *(unsigned char *)(v17 + 16) = v9;
          *(void *)(v17 + 24) = v10;
          *(void *)(v17 + 32) = v11;
          *(void *)(v17 + 40) = v12;
          *(unsigned char *)(v17 + 48) = v13;
          *(unsigned char *)(v17 + 49) = v14;
          *(void *)(v17 + 56) = v16;
          *(void *)(v17 + 64) = v15;
          id v18 = v11;
          swift_bridgeObjectRetain();
          break;
        default:
          sub_249944640((uint64_t)__dst);
          break;
      }
      break;
    case 5:
    case 6:
      return v2;
    default:
      sub_24994451C((uint64_t)v23);
      break;
  }
  return v2;
}

void *Instrument.GaugeStyle.restoreAssets(from:)(void *a1)
{
  uint64_t v3 = v1;
  sub_2499441A8(v1, v21);
  sub_2499441A8(v21, v22);
  uint64_t result = (void *)sub_249944500((uint64_t)v22);
  switch((int)result)
  {
    case 1:
      uint64_t v6 = (const void *)sub_24994451C((uint64_t)v22);
      memcpy(__dst, v6, 0x130uLL);
      sub_249944E84(__dst);
      goto LABEL_12;
    case 2:
      uint64_t v7 = sub_24994451C((uint64_t)v22);
      uint64_t v8 = *(void *)(v7 + 8);
      char v9 = *(unsigned char *)(v7 + 48);
      LOWORD(v17[0]) = *(_WORD *)v7;
      *((void *)&v17[0] + 1) = v8;
      long long v10 = *(_OWORD *)(v7 + 32);
      v17[1] = *(_OWORD *)(v7 + 16);
      v17[2] = v10;
      LOBYTE(v17[3]) = v9;
      sub_2499441A8(v21, __dst);
      sub_24994451C((uint64_t)__dst);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      ImageGroupConfiguration.restoreAssets(from:)(a1);
      if (v2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      sub_249945890((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      LOWORD(__src[0]) = v17[0];
      *((void *)&__src[0] + 1) = *((void *)&v17[0] + 1);
      __src[1] = v17[1];
      void __src[2] = v17[2];
      LOBYTE(__src[3]) = v17[3];
      sub_249944DD8(__src);
      uint64_t v15 = __src;
      return sub_2499441A8(v15, v3);
    case 3:
      uint64_t v11 = (const void *)sub_24994451C((uint64_t)v22);
      memcpy(__src, v11, sizeof(__src));
      sub_2499441A8(v21, __dst);
      uint64_t v12 = sub_24994451C((uint64_t)__dst);
      sub_249945890(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FBD8C);
      TextElementConfiguration.restoreAssets(from:)((uint64_t)a1);
      if (v2)
      {
        memcpy(v17, __src, sizeof(v17));
        return (void *)sub_249945890((uint64_t)v17, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FD37C);
      }
      else
      {
        sub_249945890((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
        memcpy(v17, __src, sizeof(v17));
        sub_249944D2C(v17);
        uint64_t v15 = v17;
        return sub_2499441A8(v15, v3);
      }
    case 4:
      uint64_t v13 = sub_24994451C((uint64_t)v22);
      sub_24994452C(v13, (uint64_t)__src);
      switch(sub_249944588((uint64_t)__src))
      {
        case 4u:
          sub_249944640((uint64_t)__src);
          sub_249945890((uint64_t)v21, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
          goto LABEL_10;
        case 6u:
          uint64_t v16 = (const void *)sub_249944640((uint64_t)__src);
          sub_2499457D8((uint64_t)v16, (uint64_t)__dst);
          sub_249945834((uint64_t)__dst);
          sub_249945840((uint64_t)__dst);
          memcpy(v19, v16, 0x154uLL);
          sub_249945850(v19);
          char v14 = v19;
          break;
        default:
          sub_249944640((uint64_t)__src);
LABEL_10:
          char v14 = (void *)v13;
          break;
      }
      sub_24994452C((uint64_t)v14, (uint64_t)v17);
      sub_24994452C((uint64_t)v17, (uint64_t)v19);
      memcpy(__dst, v19, 0x154uLL);
      sub_249944C04(__dst);
LABEL_12:
      uint64_t v15 = __dst;
      return sub_2499441A8(v15, v3);
    case 5:
    case 6:
      return result;
    default:
      return (void *)sub_24994451C((uint64_t)v22);
  }
}

void *sub_2499432F8(void *a1)
{
  return Instrument.GaugeStyle.restoreAssets(from:)(a1);
}

BOOL _s14CarPlayAssetUI10InstrumentV31RemainingRangeTextConfigurationV2eeoiySbAE_AEtFZ_0(char *a1, char *a2)
{
  char v3 = *a1;
  char v4 = a1[1];
  memcpy(__dst, a1 + 8, sizeof(__dst));
  char v5 = *a2;
  char v6 = a2[1];
  memcpy(__src, a2 + 8, sizeof(__src));
  v20[0] = v3;
  v19[0] = v5;
  unint64_t v7 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v9 = v8;
  if (v7 == InstrumentDataIdentifier.rawValue.getter() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v11 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v12 = 0;
    if ((v11 & 1) == 0) {
      return v12;
    }
  }
  v20[0] = v4;
  v19[0] = v6;
  unint64_t v13 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v15 = v14;
  if (v13 == InstrumentDataIdentifier.rawValue.getter() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
LABEL_9:
    memcpy(v20, __dst, 0x112uLL);
    memcpy(v19, __src, 0x112uLL);
    return _s14CarPlayAssetUI29MeasurementLabelConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)v20, (uint64_t)v19);
  }
  char v17 = sub_249AEE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  BOOL v12 = 0;
  if (v17) {
    goto LABEL_9;
  }
  return v12;
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO21CircularConfigurationV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 8);
  double v2 = *(double *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v27 = *(void *)(a1 + 48);
  uint64_t v24 = *(void *)(a1 + 72);
  uint64_t v22 = *(void *)(a1 + 88);
  uint64_t v20 = *(void *)(a1 + 96);
  double v8 = *(double *)(a2 + 8);
  double v7 = *(double *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  uint64_t v9 = *(void *)(a2 + 32);
  uint64_t v12 = *(void *)(a2 + 40);
  uint64_t v11 = *(void *)(a2 + 48);
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v25 = *(void *)(a2 + 64);
  uint64_t v23 = *(void *)(a2 + 72);
  uint64_t v21 = *(void *)(a2 + 88);
  uint64_t v19 = *(void *)(a2 + 96);
  unint64_t v13 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v15 = v14;
  if (v13 == InstrumentDataIdentifier.rawValue.getter() && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return 0;
    }
  }
  if (v3 != v8
    || v2 != v7
    || (v5 != v10 || v4 != v9) && (sub_249AEE0D8() & 1) == 0
    || (v6 != v12 || v27 != v11) && (sub_249AEE0D8() & 1) == 0
    || (sub_249AEC848() & 1) == 0
    || (v26 != v25 || v24 != v23) && (sub_249AEE0D8() & 1) == 0
    || (sub_249AEC848() & 1) == 0
    || (sub_249889080(v22, v21) & 1) == 0)
  {
    return 0;
  }

  return sub_249889080(v20, v19);
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  sub_2499441A8(a1, __src);
  sub_2499441A8(a2, v46);
  sub_2499441A8(__src, v47);
  sub_2499441A8(v46, &v48);
  sub_2499441A8(__src, v49);
  switch(sub_249944500((uint64_t)v49))
  {
    case 1u:
      char v17 = (const void *)sub_24994451C((uint64_t)v49);
      sub_2499441A8(v46, v44);
      if (sub_249944500((uint64_t)v44) != 1) {
        goto LABEL_16;
      }
      id v18 = (const void *)sub_24994451C((uint64_t)v44);
      memcpy(__dst, v17, 0x130uLL);
      memcpy(v42, v18, 0x130uLL);
      sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      char v16 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO17DialConfigurationV2eeoiySbAG_AGtFZ_0((uint64_t)__dst, (char *)v42);
      goto LABEL_12;
    case 2u:
      uint64_t v19 = sub_24994451C((uint64_t)v49);
      char v20 = *(unsigned char *)v19;
      char v21 = *(unsigned char *)(v19 + 1);
      uint64_t v22 = *(void *)(v19 + 8);
      uint64_t v23 = *(void *)(v19 + 16);
      uint64_t v24 = *(void *)(v19 + 24);
      uint64_t v25 = *(void *)(v19 + 32);
      uint64_t v26 = *(void *)(v19 + 40);
      char v27 = *(unsigned char *)(v19 + 48);
      sub_2499441A8(v46, v44);
      if (sub_249944500((uint64_t)v44) != 2) {
        goto LABEL_16;
      }
      uint64_t v28 = sub_24994451C((uint64_t)v44);
      __int16 v29 = *(_WORD *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      char v31 = *(unsigned char *)(v28 + 48);
      LOBYTE(__dst[0]) = v20;
      BYTE1(__dst[0]) = v21;
      *((void *)&__dst[0] + 1) = v22;
      *(void *)&__dst[1] = v23;
      *((void *)&__dst[1] + 1) = v24;
      *(void *)&__dst[2] = v25;
      *((void *)&__dst[2] + 1) = v26;
      LOBYTE(__dst[3]) = v27;
      LOWORD(v42[0]) = v29;
      *((void *)&v42[0] + 1) = v30;
      long long v32 = *(_OWORD *)(v28 + 32);
      v42[1] = *(_OWORD *)(v28 + 16);
      _OWORD v42[2] = v32;
      LOBYTE(v42[3]) = v31;
      sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      char v16 = _s14CarPlayAssetUI23ImageGroupConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)__dst, (unsigned __int8 *)v42);
      goto LABEL_12;
    case 3u:
      uint64_t v33 = sub_24994451C((uint64_t)v49);
      sub_2499441A8(v46, v44);
      if (sub_249944500((uint64_t)v44) != 3) {
        goto LABEL_16;
      }
      uint64_t v34 = sub_24994451C((uint64_t)v44);
      sub_249944658(v33, (uint64_t)__dst);
      sub_249944658(v34, (uint64_t)v42);
      sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      char v16 = _s14CarPlayAssetUI12TextDataTypeO2eeoiySbAC_ACtFZ_0((uint64_t)__dst, (uint64_t)v42);
      goto LABEL_12;
    case 4u:
      uint64_t v35 = sub_24994451C((uint64_t)v49);
      sub_2499441A8(v46, v44);
      if (sub_249944500((uint64_t)v44) != 4) {
        goto LABEL_16;
      }
      uint64_t v36 = sub_24994451C((uint64_t)v44);
      sub_24994452C(v35, (uint64_t)__dst);
      sub_24994452C(v36, (uint64_t)v42);
      sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      char v16 = _s14CarPlayAssetUI15ProgressBarTypeO2eeoiySbAC_ACtFZ_0((uint64_t)__dst, (uint64_t)v42);
      goto LABEL_12;
    case 5u:
      sub_2499441A8(v46, v44);
      if (sub_249944500((uint64_t)v44) == 5) {
        goto LABEL_14;
      }
      goto LABEL_16;
    case 6u:
      sub_2499441A8(v46, v44);
      if (sub_249944500((uint64_t)v44) != 6) {
        goto LABEL_16;
      }
LABEL_14:
      sub_24994AD74((uint64_t)v47);
      char v37 = 1;
      return v37 & 1;
    default:
      uint64_t v3 = sub_24994451C((uint64_t)v49);
      char v4 = *(unsigned char *)v3;
      uint64_t v5 = *(void *)(v3 + 8);
      uint64_t v6 = *(void *)(v3 + 16);
      uint64_t v7 = *(void *)(v3 + 24);
      uint64_t v8 = *(void *)(v3 + 32);
      uint64_t v9 = *(void *)(v3 + 40);
      uint64_t v10 = *(void *)(v3 + 64);
      long long v40 = *(_OWORD *)(v3 + 72);
      long long v41 = *(_OWORD *)(v3 + 48);
      long long v39 = *(_OWORD *)(v3 + 88);
      sub_2499441A8(v46, v44);
      if (sub_249944500((uint64_t)v44))
      {
LABEL_16:
        sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
        sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
        sub_24994AD74((uint64_t)v47);
        char v37 = 0;
      }
      else
      {
        uint64_t v11 = sub_24994451C((uint64_t)v44);
        char v12 = *(unsigned char *)v11;
        long long v13 = *(_OWORD *)(v11 + 24);
        uint64_t v14 = *(void *)(v11 + 40);
        uint64_t v15 = *(void *)(v11 + 64);
        LOBYTE(__dst[0]) = v4;
        *((void *)&__dst[0] + 1) = v5;
        *(void *)&__dst[1] = v6;
        *((void *)&__dst[1] + 1) = v7;
        *(void *)&__dst[2] = v8;
        *((void *)&__dst[2] + 1) = v9;
        __dst[3] = v41;
        *(void *)&__dst[4] = v10;
        *(_OWORD *)((char *)&__dst[4] + 8) = v40;
        *(_OWORD *)((char *)&__dst[5] + 8) = v39;
        LOBYTE(v42[0]) = v12;
        *(_OWORD *)((char *)v42 + 8) = *(_OWORD *)(v11 + 8);
        *(_OWORD *)((char *)&v42[1] + 8) = v13;
        *((void *)&v42[2] + 1) = v14;
        v42[3] = *(_OWORD *)(v11 + 48);
        *(void *)&v42[4] = v15;
        *(_OWORD *)((char *)&v42[4] + 8) = *(_OWORD *)(v11 + 72);
        *(_OWORD *)((char *)&v42[5] + 8) = *(_OWORD *)(v11 + 88);
        sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
        sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
        sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
        sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
        char v16 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO21CircularConfigurationV2eeoiySbAG_AGtFZ_0((uint64_t)__dst, (uint64_t)v42);
LABEL_12:
        char v37 = v16;
        sub_24994AD74((uint64_t)v47);
        sub_249945890((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
        sub_249945890((uint64_t)__src, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      }
      return v37 & 1;
  }
}

uint64_t _s14CarPlayAssetUI10InstrumentV18GaugeConfigurationV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_2499441A8((void *)a1, __dst);
  int v4 = *(unsigned __int8 *)(a1 + 496);
  uint64_t v5 = *(void *)(a1 + 504);
  sub_2499441A8((void *)a2, __src);
  int v6 = *(unsigned __int8 *)(a2 + 496);
  uint64_t v7 = *(void *)(a2 + 504);
  sub_2499441A8(__dst, v11);
  sub_2499441A8(__src, v10);
  char v8 = 0;
  if ((_s14CarPlayAssetUI10InstrumentV10GaugeStyleO2eeoiySbAE_AEtFZ_0(v11, v10) & 1) != 0 && ((v4 ^ v6) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v8 = sub_249888DF0(v5, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8 & 1;
}

uint64_t _s14CarPlayAssetUI10InstrumentV22ConfigurableInputStateV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  int v5 = *(unsigned __int8 *)(a1 + 56);
  char v6 = *(unsigned char *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  int v9 = *(unsigned __int8 *)(a2 + 56);
  long long v10 = *(_OWORD *)(a1 + 16);
  v16[0] = *(_OWORD *)a1;
  v16[1] = v10;
  char v17 = v2;
  long long v11 = *(_OWORD *)(a2 + 16);
  v14[0] = *(_OWORD *)a2;
  v14[1] = v11;
  char v15 = v6;
  char v12 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v16, (uint64_t)v14);
  uint64_t result = 0;
  if ((v12 & 1) != 0 && v4 == v8) {
    return sub_2499FEF30(v3, v7) & (v5 == v9);
  }
  return result;
}

uint64_t sub_249943DA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  unint64_t v5 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v7 = v6;
  if (v5 == InstrumentDataIdentifier.rawValue.getter() && v7 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }

  return a3(v3, v4);
}

uint64_t sub_249943E98(uint64_t a1, void (*a2)(long long *__return_ptr, long long *))
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v4 = a1;
  uint64_t v55 = MEMORY[0x263F8EE78];
  sub_249A21F30(0, v2, 0);
  uint64_t v3 = v55;
  uint64_t result = sub_249A49DE0(v4);
  uint64_t v7 = result;
  uint64_t v8 = 0;
  uint64_t v9 = v4 + 64;
  uint64_t v34 = v4 + 88;
  int64_t v35 = v2;
  int v36 = v6;
  uint64_t v37 = v4 + 64;
  uint64_t v38 = v4;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(v4 + 32))
  {
    unint64_t v12 = (unint64_t)v7 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(v4 + 36) != v6) {
      goto LABEL_26;
    }
    uint64_t v40 = v8;
    uint64_t v13 = *(void *)(v4 + 56) + (v7 << 6);
    char v15 = *(void **)v13;
    uint64_t v14 = *(void *)(v13 + 8);
    char v16 = *(void **)(v13 + 16);
    uint64_t v17 = *(void *)(v13 + 24);
    uint64_t v41 = v3;
    uint64_t v18 = *(void *)(v13 + 40);
    uint64_t v19 = *(void *)(v13 + 48);
    char v20 = *(unsigned char *)(v13 + 56);
    char v21 = *(unsigned char *)(v13 + 32);
    *(void *)&long long v43 = v15;
    *((void *)&v43 + 1) = v14;
    uint64_t v44 = v16;
    uint64_t v45 = (ValueMetadata *)v17;
    LOBYTE(v46) = v21;
    uint64_t v47 = v18;
    uint64_t v48 = v19;
    char v49 = v20;
    sub_24988247C(v15, v14, v16, v17, v21);
    swift_bridgeObjectRetain();
    a2(&v50, &v43);
    sub_2498826E4(v15, v14, v16, v17, v21);
    uint64_t v3 = v41;
    swift_bridgeObjectRelease();
    uint64_t v55 = v41;
    unint64_t v23 = *(void *)(v41 + 16);
    unint64_t v22 = *(void *)(v41 + 24);
    if (v23 >= v22 >> 1)
    {
      sub_249A21F30(v22 > 1, v23 + 1, 1);
      uint64_t v3 = v55;
    }
    long long v42 = v50;
    uint64_t v24 = v51;
    uint64_t v25 = v52;
    char v26 = v53;
    uint64_t v27 = v54;
    uint64_t v45 = &type metadata for ImageAsset;
    uint64_t v46 = &protocol witness table for ImageAsset;
    uint64_t v28 = swift_allocObject();
    *(void *)&long long v43 = v28;
    *(_OWORD *)(v28 + 16) = v42;
    *(void *)(v28 + 32) = v24;
    *(void *)(v28 + 40) = v25;
    *(unsigned char *)(v28 + 48) = v26;
    *(void *)(v28 + 56) = v27;
    *(void *)(v3 + 16) = v23 + 1;
    uint64_t result = sub_249882BCC(&v43, v3 + 40 * v23 + 32);
    uint64_t v4 = v38;
    int64_t v10 = 1 << *(unsigned char *)(v38 + 32);
    if (v7 >= v10) {
      goto LABEL_27;
    }
    uint64_t v9 = v37;
    uint64_t v29 = *(void *)(v37 + 8 * v12);
    if ((v29 & (1 << v7)) == 0) {
      goto LABEL_28;
    }
    int v6 = v36;
    if (*(_DWORD *)(v38 + 36) != v36) {
      goto LABEL_29;
    }
    unint64_t v30 = v29 & (-2 << (v7 & 0x3F));
    if (v30)
    {
      int64_t v10 = __clz(__rbit64(v30)) | v7 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v35;
    }
    else
    {
      unint64_t v31 = v12 + 1;
      unint64_t v32 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v35;
      if (v12 + 1 < v32)
      {
        unint64_t v33 = *(void *)(v37 + 8 * v31);
        if (!v33)
        {
          unint64_t v31 = v12 + 2;
          if (v12 + 2 >= v32) {
            goto LABEL_4;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v31);
          if (!v33)
          {
            while (v32 - 3 != v12)
            {
              unint64_t v33 = *(void *)(v34 + 8 * v12++);
              if (v33)
              {
                unint64_t v31 = v12 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v10 = __clz(__rbit64(v33)) + (v31 << 6);
      }
    }
LABEL_4:
    uint64_t v8 = v40 + 1;
    uint64_t v7 = v10;
    if (v40 + 1 == v11) {
      return v3;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_2499441A8(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x1F0uLL);
}

unint64_t sub_2499441BC()
{
  unint64_t result = qword_2696DFF60;
  if (!qword_2696DFF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF60);
  }
  return result;
}

unint64_t sub_249944210()
{
  unint64_t result = qword_2696DFF68;
  if (!qword_2696DFF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF68);
  }
  return result;
}

unint64_t sub_249944264()
{
  unint64_t result = qword_2696DFF70;
  if (!qword_2696DFF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF70);
  }
  return result;
}

unint64_t sub_2499442B8()
{
  unint64_t result = qword_2696DFF80;
  if (!qword_2696DFF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF80);
  }
  return result;
}

unint64_t sub_24994430C()
{
  unint64_t result = qword_2696DFF88;
  if (!qword_2696DFF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF88);
  }
  return result;
}

uint64_t sub_249944360(uint64_t a1)
{
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  sub_2498FB8D8(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void **)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216),
    (void *)v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((unint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    *(void *)(a1 + 480));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_249944430(uint64_t a1)
{
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  sub_2498FCED0(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void **)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216),
    (void *)v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((unint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    *(void *)(a1 + 480));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249944500(uint64_t a1)
{
  if (((*(void *)(a1 + 480) >> 57) & 7u) <= 4) {
    return (*(void *)(a1 + 480) >> 57) & 7;
  }
  else {
    return (*(_DWORD *)a1 + 5);
  }
}

uint64_t sub_24994451C(uint64_t result)
{
  *(void *)(result + 480) &= 0xF1FFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_24994452C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249944588(uint64_t a1)
{
  return (*(void *)(a1 + 328) >> 47) & 1 | (*(void *)(a1 + 328) >> 53) & 6 | (*(void *)(a1 + 328) >> 59) & 8;
}

uint64_t sub_2499445AC(uint64_t a1)
{
  long long v7 = *(_OWORD *)(a1 + 288);
  long long v8 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 256);
  long long v6 = *(_OWORD *)(a1 + 272);
  long long v3 = *(_OWORD *)(a1 + 224);
  long long v4 = *(_OWORD *)(a1 + 240);
  sub_2498FC204(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    *(void *)(a1 + 320),
    *(void *)(a1 + 328));
  return a1;
}

uint64_t sub_249944640(uint64_t result)
{
  *(void *)(result + 328) &= 0xBF3F7FFFFFFFFFFFLL;
  return result;
}

uint64_t sub_249944658(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_2499446B4()
{
  unint64_t result = qword_2696DFF98;
  if (!qword_2696DFF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFF98);
  }
  return result;
}

uint64_t sub_249944708(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DE220);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24994476C()
{
  unint64_t result = qword_2696DFFE8;
  if (!qword_2696DFFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFFE8);
  }
  return result;
}

unint64_t sub_2499447C0()
{
  unint64_t result = qword_2696DFFF0;
  if (!qword_2696DFFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFFF0);
  }
  return result;
}

unint64_t sub_249944814()
{
  unint64_t result = qword_2696DFFF8;
  if (!qword_2696DFFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DFFF8);
  }
  return result;
}

unint64_t sub_249944868()
{
  unint64_t result = qword_2696E0000;
  if (!qword_2696E0000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0000);
  }
  return result;
}

unint64_t sub_2499448BC()
{
  unint64_t result = qword_2696E0008;
  if (!qword_2696E0008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0008);
  }
  return result;
}

unint64_t sub_249944910()
{
  unint64_t result = qword_2696E0010;
  if (!qword_2696E0010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0010);
  }
  return result;
}

unint64_t sub_249944964()
{
  unint64_t result = qword_2696E0018;
  if (!qword_2696E0018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0018);
  }
  return result;
}

unint64_t sub_2499449B8()
{
  unint64_t result = qword_2696E0020;
  if (!qword_2696E0020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0020);
  }
  return result;
}

unint64_t sub_249944A0C()
{
  unint64_t result = qword_2696E0028;
  if (!qword_2696E0028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0028);
  }
  return result;
}

unint64_t sub_249944A60()
{
  unint64_t result = qword_2696E0030;
  if (!qword_2696E0030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0030);
  }
  return result;
}

unint64_t sub_249944AB4()
{
  unint64_t result = qword_2696E0038;
  if (!qword_2696E0038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0038);
  }
  return result;
}

unint64_t sub_249944B08()
{
  unint64_t result = qword_2696E0040;
  if (!qword_2696E0040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0040);
  }
  return result;
}

unint64_t sub_249944B5C()
{
  unint64_t result = qword_2696E0048;
  if (!qword_2696E0048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0048);
  }
  return result;
}

unint64_t sub_249944BB0()
{
  unint64_t result = qword_2696E0090;
  if (!qword_2696E0090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0090);
  }
  return result;
}

void *sub_249944C04(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xF000000000000007 | 0x800000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

_OWORD *sub_249944C5C(uint64_t a1)
{
  *(void *)a1 = 1;
  *(_OWORD *)(a1 + 480) = xmmword_249AF8620;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 472) = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  unint64_t result = (_OWORD *)(a1 + 8);
  result[16] = 0u;
  result[17] = 0u;
  result[18] = 0u;
  result[19] = 0u;
  result[20] = 0u;
  result[21] = 0u;
  result[22] = 0u;
  result[23] = 0u;
  result[24] = 0u;
  result[25] = 0u;
  result[26] = 0u;
  result[27] = 0u;
  result[28] = 0u;
  return result;
}

unint64_t sub_249944CD8()
{
  unint64_t result = qword_2696E0098;
  if (!qword_2696E0098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0098);
  }
  return result;
}

void *sub_249944D2C(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xF000000000000007 | 0x600000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

unint64_t sub_249944D84()
{
  unint64_t result = qword_2696E00A0;
  if (!qword_2696E00A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E00A0);
  }
  return result;
}

void *sub_249944DD8(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xF000000000000007 | 0x400000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

unint64_t sub_249944E30()
{
  unint64_t result = qword_2696E00A8;
  if (!qword_2696E00A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E00A8);
  }
  return result;
}

void *sub_249944E84(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xF000000000000007 | 0x200000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

double sub_249944EDC(_OWORD *a1)
{
  a1[28] = 0u;
  a1[29] = 0u;
  a1[26] = 0u;
  a1[27] = 0u;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  double result = 1.62597454e-260;
  a1[30] = xmmword_249AF8620;
  return result;
}

unint64_t sub_249944F2C()
{
  unint64_t result = qword_2696E00B0;
  if (!qword_2696E00B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E00B0);
  }
  return result;
}

void *sub_249944F80(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xF000000000000007;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  return result;
}

unint64_t sub_249944FD4()
{
  unint64_t result = qword_2696E00D0;
  if (!qword_2696E00D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E00D0);
  }
  return result;
}

unint64_t sub_249945028()
{
  unint64_t result = qword_2696E00E8;
  if (!qword_2696E00E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E00E8);
  }
  return result;
}

uint64_t sub_24994507C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E00D8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499450F8()
{
  unint64_t result = qword_2696E0100;
  if (!qword_2696E0100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0100);
  }
  return result;
}

uint64_t sub_24994514C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 136);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v14 = *(void *)(a1 + 200);
  uint64_t v15 = *(void *)(a1 + 192);
  long long v13 = *(void **)(a1 + 208);
  char v4 = *(unsigned char *)(a1 + 96);
  char v5 = *(unsigned char *)(a1 + 120);
  char v6 = *(unsigned char *)(a1 + 144);
  id v7 = *(id *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988D770(v2, v3, v4);
  sub_24988D770(v10, v9, v5);
  sub_24988D770(v12, v11, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24989CD14(v15, v14, v13);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_249945284(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 80);
  uint64_t v4 = *(void *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 112);
  uint64_t v10 = *(void *)(a1 + 104);
  uint64_t v11 = *(void *)(a1 + 136);
  uint64_t v12 = *(void *)(a1 + 128);
  uint64_t v14 = *(void *)(a1 + 200);
  uint64_t v15 = *(void *)(a1 + 192);
  long long v13 = *(void **)(a1 + 208);
  char v5 = *(unsigned char *)(a1 + 96);
  char v6 = *(unsigned char *)(a1 + 120);
  char v7 = *(unsigned char *)(a1 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_24988D788(v3, v4, v5);
  sub_24988D788(v10, v9, v6);
  sub_24988D788(v12, v11, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24989CF3C(v15, v14, v13);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_2499453B8()
{
  unint64_t result = qword_2696E0110;
  if (!qword_2696E0110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0110);
  }
  return result;
}

unint64_t sub_24994540C()
{
  unint64_t result = qword_2696E0118;
  if (!qword_2696E0118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0118);
  }
  return result;
}

unint64_t sub_249945460()
{
  unint64_t result = qword_2696E0128;
  if (!qword_2696E0128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0128);
  }
  return result;
}

unint64_t sub_2499454B4()
{
  unint64_t result = qword_2696E0138;
  if (!qword_2696E0138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0138);
  }
  return result;
}

unint64_t sub_249945508()
{
  unint64_t result = qword_2696E0150;
  if (!qword_2696E0150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0150);
  }
  return result;
}

uint64_t sub_24994555C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0158);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499455D8()
{
  unint64_t result = qword_2696E0168;
  if (!qword_2696E0168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0168);
  }
  return result;
}

unint64_t sub_24994562C()
{
  unint64_t result = qword_2696E0180;
  if (!qword_2696E0180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0180);
  }
  return result;
}

unint64_t sub_249945680()
{
  unint64_t result = qword_2696E0190;
  if (!qword_2696E0190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0190);
  }
  return result;
}

uint64_t sub_2499456D4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0198);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24994573C()
{
  unint64_t result = qword_2696E01C0;
  if (!qword_2696E01C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E01C0);
  }
  return result;
}

uint64_t sub_249945790(uint64_t a1)
{
  return sub_249A367B0(a1);
}

uint64_t sub_249945798()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_2499457D8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249945834(uint64_t a1)
{
  return *(void *)(a1 + 328) >> 63;
}

uint64_t sub_249945840(uint64_t result)
{
  *(void *)(result + 328) &= ~0x8000000000000000;
  return result;
}

void *sub_249945850(void *result)
{
  uint64_t v1 = result[31] & 0x83FFFFFFFFLL;
  unint64_t v2 = result[41] & 0xBF3F3FFFFFFFFFFFLL;
  result[20] &= 0x3F3F3FFFFFFFFFFFuLL;
  result[31] = v1;
  result[41] = v2 | 0xC0000000000000;
  return result;
}

uint64_t sub_249945890(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v18 = *(_OWORD *)(a1 + 448);
  long long v19 = *(_OWORD *)(a1 + 464);
  long long v16 = *(_OWORD *)(a1 + 416);
  long long v17 = *(_OWORD *)(a1 + 432);
  long long v14 = *(_OWORD *)(a1 + 384);
  long long v15 = *(_OWORD *)(a1 + 400);
  long long v12 = *(_OWORD *)(a1 + 352);
  long long v13 = *(_OWORD *)(a1 + 368);
  long long v10 = *(_OWORD *)(a1 + 320);
  long long v11 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    v12,
    *((void *)&v12 + 1),
    v13,
    *((void *)&v13 + 1),
    v14,
    *((void *)&v14 + 1),
    v15,
    *((void *)&v15 + 1),
    v16,
    *((void *)&v16 + 1),
    v17,
    *((void *)&v17 + 1),
    v18,
    *((void *)&v18 + 1),
    v19,
    *((void *)&v19 + 1),
    *(void *)(a1 + 480),
    *(void *)(a1 + 488));
  return a1;
}

unint64_t sub_249945958()
{
  unint64_t result = qword_2696E01D0;
  if (!qword_2696E01D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E01D0);
  }
  return result;
}

unint64_t sub_2499459B0()
{
  unint64_t result = qword_2696E01D8;
  if (!qword_2696E01D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E01D8);
  }
  return result;
}

unint64_t sub_249945A10()
{
  unint64_t result = qword_2696E01E0;
  if (!qword_2696E01E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E01E0);
  }
  return result;
}

unint64_t sub_249945A68()
{
  unint64_t result = qword_2696E01E8;
  if (!qword_2696E01E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E01F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E01E8);
  }
  return result;
}

unint64_t sub_249945AC8()
{
  unint64_t result = qword_2696E01F8;
  if (!qword_2696E01F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E01F8);
  }
  return result;
}

unint64_t sub_249945B20()
{
  unint64_t result = qword_2696E0200;
  if (!qword_2696E0200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0200);
  }
  return result;
}

unint64_t sub_249945B78()
{
  unint64_t result = qword_2696E0208;
  if (!qword_2696E0208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0208);
  }
  return result;
}

unint64_t sub_249945BD0()
{
  unint64_t result = qword_2696E0210;
  if (!qword_2696E0210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0210);
  }
  return result;
}

unint64_t sub_249945C28()
{
  unint64_t result = qword_2696E0218;
  if (!qword_2696E0218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0218);
  }
  return result;
}

unint64_t sub_249945C80()
{
  unint64_t result = qword_2696E0220;
  if (!qword_2696E0220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0220);
  }
  return result;
}

unint64_t sub_249945CD8()
{
  unint64_t result = qword_2696E0228;
  if (!qword_2696E0228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0228);
  }
  return result;
}

uint64_t _s18GaugeConfigurationVwxx(uint64_t a1)
{
  long long v15 = *(_OWORD *)(a1 + 448);
  long long v16 = *(_OWORD *)(a1 + 464);
  long long v13 = *(_OWORD *)(a1 + 416);
  long long v14 = *(_OWORD *)(a1 + 432);
  long long v11 = *(_OWORD *)(a1 + 384);
  long long v12 = *(_OWORD *)(a1 + 400);
  long long v9 = *(_OWORD *)(a1 + 352);
  long long v10 = *(_OWORD *)(a1 + 368);
  long long v7 = *(_OWORD *)(a1 + 320);
  long long v8 = *(_OWORD *)(a1 + 336);
  long long v5 = *(_OWORD *)(a1 + 288);
  long long v6 = *(_OWORD *)(a1 + 304);
  long long v3 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 272);
  long long v2 = *(_OWORD *)(a1 + 224);
  sub_2498FCED0(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void **)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216),
    (void *)v2,
    *((uint64_t *)&v2 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((unint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    SBYTE8(v9),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    SBYTE8(v12),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    SBYTE8(v15),
    v16,
    *((uint64_t *)&v16 + 1),
    *(void *)(a1 + 480));

  return swift_bridgeObjectRelease();
}

uint64_t _s18GaugeConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v65 = *(void **)(a2 + 72);
  uint64_t v66 = *(void *)(a2 + 64);
  unint64_t v63 = *(void *)(a2 + 88);
  uint64_t v64 = *(void *)(a2 + 80);
  uint64_t v61 = *(void *)(a2 + 104);
  uint64_t v62 = *(void *)(a2 + 96);
  uint64_t v59 = *(void *)(a2 + 120);
  uint64_t v60 = *(void *)(a2 + 112);
  uint64_t v57 = *(void *)(a2 + 136);
  uint64_t v58 = *(void *)(a2 + 128);
  uint64_t v55 = *(void *)(a2 + 152);
  uint64_t v56 = *(void *)(a2 + 144);
  uint64_t v53 = *(void *)(a2 + 168);
  uint64_t v54 = *(void **)(a2 + 160);
  uint64_t v51 = *(void *)(a2 + 184);
  uint64_t v52 = *(void *)(a2 + 176);
  uint64_t v49 = *(void *)(a2 + 200);
  uint64_t v50 = *(void *)(a2 + 192);
  uint64_t v47 = *(void **)(a2 + 216);
  uint64_t v48 = *(void *)(a2 + 208);
  uint64_t v46 = *(void **)(a2 + 224);
  uint64_t v45 = *(void *)(a2 + 232);
  uint64_t v44 = *(void *)(a2 + 240);
  uint64_t v43 = *(void *)(a2 + 248);
  uint64_t v42 = *(void *)(a2 + 256);
  uint64_t v41 = *(void *)(a2 + 264);
  uint64_t v40 = *(void *)(a2 + 272);
  uint64_t v13 = *(void *)(a2 + 280);
  uint64_t v14 = *(void *)(a2 + 288);
  uint64_t v15 = *(void *)(a2 + 296);
  uint64_t v16 = *(void *)(a2 + 304);
  uint64_t v17 = *(void *)(a2 + 312);
  uint64_t v18 = *(void *)(a2 + 320);
  unint64_t v19 = *(void *)(a2 + 328);
  uint64_t v20 = *(void *)(a2 + 336);
  uint64_t v21 = *(void *)(a2 + 344);
  uint64_t v22 = *(void *)(a2 + 352);
  uint64_t v23 = *(void *)(a2 + 360);
  uint64_t v24 = *(void *)(a2 + 368);
  uint64_t v25 = *(void *)(a2 + 376);
  uint64_t v26 = *(void *)(a2 + 384);
  uint64_t v27 = *(void *)(a2 + 392);
  uint64_t v28 = *(void *)(a2 + 400);
  uint64_t v29 = *(void *)(a2 + 408);
  uint64_t v30 = *(void *)(a2 + 416);
  uint64_t v31 = *(void *)(a2 + 424);
  uint64_t v32 = *(void *)(a2 + 432);
  uint64_t v33 = *(void *)(a2 + 440);
  uint64_t v34 = *(void *)(a2 + 448);
  uint64_t v35 = *(void *)(a2 + 456);
  uint64_t v36 = *(void *)(a2 + 464);
  uint64_t v37 = *(void *)(a2 + 472);
  unint64_t v38 = *(void *)(a2 + 480);
  uint64_t v39 = *(void *)(a2 + 488);
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  long long v6 = *(void **)(a2 + 16);
  long long v7 = *(void **)(a2 + 24);
  long long v8 = *(void **)(a2 + 32);
  long long v9 = *(void **)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_2498FB8D8(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v66, v65, v64, v63, v62, v61, v60, v59, v58, v57, v56,
    v55,
    v54,
    v53,
    v52,
    v51,
    v50,
    v49,
    v48,
    v47,
    v46,
    v45,
    v44,
    v43,
    v42,
    v41,
    v40,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v66;
  *(void *)(a1 + 72) = v65;
  *(void *)(a1 + 80) = v64;
  *(void *)(a1 + 88) = v63;
  *(void *)(a1 + 96) = v62;
  *(void *)(a1 + 104) = v61;
  *(void *)(a1 + 112) = v60;
  *(void *)(a1 + 120) = v59;
  *(void *)(a1 + 128) = v58;
  *(void *)(a1 + 136) = v57;
  *(void *)(a1 + 144) = v56;
  *(void *)(a1 + 152) = v55;
  *(void *)(a1 + 160) = v54;
  *(void *)(a1 + 168) = v53;
  *(void *)(a1 + 176) = v52;
  *(void *)(a1 + 184) = v51;
  *(void *)(a1 + 192) = v50;
  *(void *)(a1 + 200) = v49;
  *(void *)(a1 + 208) = v48;
  *(void *)(a1 + 216) = v47;
  *(void *)(a1 + 224) = v46;
  *(void *)(a1 + 232) = v45;
  *(void *)(a1 + 240) = v44;
  *(void *)(a1 + 248) = v43;
  *(void *)(a1 + 256) = v42;
  *(void *)(a1 + 264) = v41;
  *(void *)(a1 + 272) = v40;
  *(void *)(a1 + 280) = v13;
  *(void *)(a1 + 288) = v14;
  *(void *)(a1 + 296) = v15;
  *(void *)(a1 + 304) = v16;
  *(void *)(a1 + 312) = v17;
  *(void *)(a1 + 320) = v18;
  *(void *)(a1 + 328) = v19;
  *(void *)(a1 + 336) = v20;
  *(void *)(a1 + 344) = v21;
  *(void *)(a1 + 352) = v22;
  *(void *)(a1 + 360) = v23;
  *(void *)(a1 + 368) = v24;
  *(void *)(a1 + 376) = v25;
  *(void *)(a1 + 384) = v26;
  *(void *)(a1 + 392) = v27;
  *(void *)(a1 + 400) = v28;
  *(void *)(a1 + 408) = v29;
  *(void *)(a1 + 416) = v30;
  *(void *)(a1 + 424) = v31;
  *(void *)(a1 + 432) = v32;
  *(void *)(a1 + 440) = v33;
  *(void *)(a1 + 448) = v34;
  *(void *)(a1 + 456) = v35;
  *(void *)(a1 + 464) = v36;
  *(void *)(a1 + 472) = v37;
  *(void *)(a1 + 480) = v38;
  *(void *)(a1 + 488) = v39;
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s18GaugeConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v100 = *(void *)(a2 + 8);
  uint64_t v101 = *(void *)a2;
  uint64_t v98 = *(void **)(a2 + 24);
  uint64_t v99 = *(void **)(a2 + 16);
  uint64_t v96 = *(void **)(a2 + 40);
  uint64_t v97 = *(void **)(a2 + 32);
  uint64_t v94 = *(void *)(a2 + 56);
  uint64_t v95 = *(void *)(a2 + 48);
  uint64_t v92 = *(void **)(a2 + 72);
  uint64_t v93 = *(void *)(a2 + 64);
  unint64_t v90 = *(void *)(a2 + 88);
  uint64_t v91 = *(void *)(a2 + 80);
  uint64_t v88 = *(void *)(a2 + 104);
  uint64_t v89 = *(void *)(a2 + 96);
  uint64_t v86 = *(void *)(a2 + 120);
  uint64_t v87 = *(void *)(a2 + 112);
  uint64_t v84 = *(void *)(a2 + 136);
  uint64_t v85 = *(void *)(a2 + 128);
  uint64_t v83 = *(void *)(a2 + 144);
  uint64_t v82 = *(void *)(a2 + 152);
  long long v81 = *(void **)(a2 + 160);
  uint64_t v80 = *(void *)(a2 + 168);
  uint64_t v79 = *(void *)(a2 + 176);
  uint64_t v78 = *(void *)(a2 + 184);
  uint64_t v77 = *(void *)(a2 + 192);
  uint64_t v76 = *(void *)(a2 + 200);
  uint64_t v75 = *(void *)(a2 + 208);
  uint64_t v74 = *(void **)(a2 + 216);
  uint64_t v73 = *(void **)(a2 + 224);
  uint64_t v72 = *(void *)(a2 + 232);
  uint64_t v71 = *(void *)(a2 + 240);
  uint64_t v70 = *(void *)(a2 + 248);
  uint64_t v69 = *(void *)(a2 + 256);
  uint64_t v68 = *(void *)(a2 + 264);
  uint64_t v67 = *(void *)(a2 + 272);
  uint64_t v5 = *(void *)(a2 + 288);
  uint64_t v4 = *(void *)(a2 + 296);
  uint64_t v7 = *(void *)(a2 + 304);
  uint64_t v6 = *(void *)(a2 + 312);
  uint64_t v9 = *(void *)(a2 + 320);
  unint64_t v8 = *(void *)(a2 + 328);
  uint64_t v11 = *(void *)(a2 + 336);
  uint64_t v10 = *(void *)(a2 + 344);
  uint64_t v48 = *(void *)(a2 + 280);
  uint64_t v49 = *(void *)(a2 + 352);
  uint64_t v50 = *(void *)(a2 + 360);
  uint64_t v51 = *(void *)(a2 + 368);
  uint64_t v52 = *(void *)(a2 + 376);
  uint64_t v53 = *(void *)(a2 + 384);
  uint64_t v54 = *(void *)(a2 + 392);
  uint64_t v55 = *(void *)(a2 + 400);
  uint64_t v56 = *(void *)(a2 + 408);
  uint64_t v57 = *(void *)(a2 + 416);
  uint64_t v58 = *(void *)(a2 + 424);
  uint64_t v59 = *(void *)(a2 + 432);
  uint64_t v60 = *(void *)(a2 + 440);
  uint64_t v61 = *(void *)(a2 + 448);
  uint64_t v62 = *(void *)(a2 + 456);
  uint64_t v63 = *(void *)(a2 + 464);
  uint64_t v64 = *(void *)(a2 + 472);
  uint64_t v65 = *(void *)(a2 + 480);
  uint64_t v66 = *(void *)(a2 + 488);
  sub_2498FB8D8(*(void *)a2, v100, v99, v98, v97, v96, v95, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85, v84, v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v48,
    v5,
    v4,
    v7,
    v6,
    v9,
    v8,
    v11,
    v10,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    *(void *)(a2 + 416),
    *(void *)(a2 + 424),
    *(_OWORD *)(a2 + 432),
    *(void *)(a2 + 440),
    *(void *)(a2 + 448),
    *(void *)(a2 + 456),
    *(void *)(a2 + 464),
    *(void *)(a2 + 472),
    *(void *)(a2 + 480));
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v101;
  *(void *)(a1 + 8) = v100;
  uint64_t v14 = *(void **)(a1 + 16);
  uint64_t v15 = *(void **)(a1 + 24);
  *(void *)(a1 + 16) = v99;
  *(void *)(a1 + 24) = v98;
  uint64_t v16 = *(void **)(a1 + 32);
  uint64_t v17 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = v97;
  *(void *)(a1 + 40) = v96;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v95;
  *(void *)(a1 + 56) = v94;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v93;
  *(void *)(a1 + 72) = v92;
  *(void *)(a1 + 80) = v91;
  *(void *)(a1 + 88) = v90;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v89;
  *(void *)(a1 + 104) = v88;
  *(void *)(a1 + 112) = v87;
  *(void *)(a1 + 120) = v86;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v85;
  *(void *)(a1 + 136) = v84;
  *(void *)(a1 + 144) = v83;
  *(void *)(a1 + 152) = v82;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 160) = v81;
  *(void *)(a1 + 168) = v80;
  *(void *)(a1 + 176) = v79;
  *(void *)(a1 + 184) = v78;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 192) = v77;
  *(void *)(a1 + 200) = v76;
  *(void *)(a1 + 208) = v75;
  *(void *)(a1 + 216) = v74;
  long long v30 = *(_OWORD *)(a1 + 224);
  long long v31 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 224) = v73;
  *(void *)(a1 + 232) = v72;
  *(void *)(a1 + 240) = v71;
  *(void *)(a1 + 248) = v70;
  long long v32 = *(_OWORD *)(a1 + 256);
  long long v33 = *(_OWORD *)(a1 + 272);
  *(void *)(a1 + 256) = v69;
  *(void *)(a1 + 264) = v68;
  *(void *)(a1 + 272) = v67;
  long long v34 = *(_OWORD *)(a1 + 288);
  long long v35 = *(_OWORD *)(a1 + 304);
  *(void *)(a1 + 280) = v48;
  *(void *)(a1 + 288) = v5;
  *(void *)(a1 + 296) = v4;
  *(void *)(a1 + 304) = v7;
  long long v36 = *(_OWORD *)(a1 + 320);
  long long v37 = *(_OWORD *)(a1 + 336);
  *(void *)(a1 + 312) = v6;
  *(void *)(a1 + 320) = v9;
  *(void *)(a1 + 328) = v8;
  *(void *)(a1 + 336) = v11;
  long long v38 = *(_OWORD *)(a1 + 352);
  long long v39 = *(_OWORD *)(a1 + 368);
  *(void *)(a1 + 344) = v10;
  *(void *)(a1 + 352) = v49;
  *(void *)(a1 + 360) = v50;
  *(void *)(a1 + 368) = v51;
  *(void *)(a1 + 376) = v52;
  long long v40 = *(_OWORD *)(a1 + 384);
  long long v41 = *(_OWORD *)(a1 + 400);
  *(void *)(a1 + 384) = v53;
  *(void *)(a1 + 392) = v54;
  *(void *)(a1 + 400) = v55;
  *(void *)(a1 + 408) = v56;
  long long v42 = *(_OWORD *)(a1 + 416);
  long long v43 = *(_OWORD *)(a1 + 432);
  *(void *)(a1 + 416) = v57;
  *(void *)(a1 + 424) = v58;
  *(void *)(a1 + 432) = v59;
  *(void *)(a1 + 440) = v60;
  long long v44 = *(_OWORD *)(a1 + 448);
  long long v45 = *(_OWORD *)(a1 + 464);
  *(void *)(a1 + 448) = v61;
  *(void *)(a1 + 456) = v62;
  *(void *)(a1 + 464) = v63;
  *(void *)(a1 + 472) = v64;
  unint64_t v46 = *(void *)(a1 + 480);
  *(void *)(a1 + 480) = v65;
  *(void *)(a1 + 488) = v66;
  sub_2498FCED0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((void **)&v20 + 1), v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    (void *)v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((void **)&v29 + 1),
    (void *)v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((unint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    SBYTE8(v38),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    SBYTE8(v41),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy512_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x200uLL);
}

uint64_t _s18GaugeConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a1 + 24);
  unint64_t v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void **)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  long long v18 = *(_OWORD *)(a1 + 160);
  long long v19 = *(_OWORD *)(a1 + 176);
  long long v20 = *(_OWORD *)(a1 + 192);
  long long v21 = *(_OWORD *)(a1 + 208);
  long long v22 = *(_OWORD *)(a1 + 224);
  long long v23 = *(_OWORD *)(a1 + 240);
  long long v24 = *(_OWORD *)(a1 + 256);
  long long v25 = *(_OWORD *)(a1 + 272);
  long long v26 = *(_OWORD *)(a1 + 288);
  long long v27 = *(_OWORD *)(a1 + 304);
  long long v28 = *(_OWORD *)(a1 + 320);
  long long v29 = *(_OWORD *)(a1 + 336);
  long long v30 = *(_OWORD *)(a1 + 352);
  long long v31 = *(_OWORD *)(a1 + 368);
  long long v32 = *(_OWORD *)(a1 + 384);
  long long v33 = *(_OWORD *)(a1 + 400);
  long long v34 = *(_OWORD *)(a1 + 416);
  long long v35 = *(_OWORD *)(a1 + 432);
  long long v36 = *(_OWORD *)(a1 + 448);
  long long v37 = *(_OWORD *)(a1 + 464);
  long long v38 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v38;
  long long v39 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v39;
  long long v40 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v40;
  long long v41 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v41;
  long long v42 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v42;
  long long v43 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v43;
  long long v44 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v44;
  long long v45 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v45;
  long long v46 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v46;
  long long v47 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v47;
  long long v48 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v48;
  long long v49 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v49;
  long long v50 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v50;
  long long v51 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v51;
  long long v52 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v52;
  unint64_t v53 = *(void *)(a1 + 480);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  sub_2498FCED0(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((void **)&v12 + 1), v13, *((unint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    (void *)v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((void **)&v21 + 1),
    (void *)v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((unint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    SBYTE8(v30),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    SBYTE8(v33),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    SBYTE8(v36),
    v37,
    *((uint64_t *)&v37 + 1),
    v53);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18GaugeConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 512)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 340);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double _s18GaugeConfigurationVwst(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 504) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 512) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 304) = 0u;
      *(_OWORD *)(a1 + 320) = 0u;
      *(_OWORD *)(a1 + 272) = 0u;
      *(_OWORD *)(a1 + 288) = 0u;
      *(_OWORD *)(a1 + 240) = 0u;
      *(_OWORD *)(a1 + 256) = 0u;
      *(_OWORD *)(a1 + 208) = 0u;
      *(_OWORD *)(a1 + 224) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      *(_OWORD *)(a1 + 192) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 336) = (unint64_t)-a2 << 32;
      *(_OWORD *)(a1 + 344) = 0u;
      *(_OWORD *)(a1 + 360) = 0u;
      *(_OWORD *)(a1 + 376) = 0u;
      *(_OWORD *)(a1 + 392) = 0u;
      *(_OWORD *)(a1 + 408) = 0u;
      *(_OWORD *)(a1 + 424) = 0u;
      *(_OWORD *)(a1 + 440) = 0u;
      *(_OWORD *)(a1 + 456) = 0u;
      *(_OWORD *)(a1 + 472) = 0u;
      *(void *)(a1 + 488) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 512) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeConfiguration()
{
  return &type metadata for Instrument.GaugeConfiguration;
}

uint64_t _s10GaugeStyleOwxx(uint64_t a1)
{
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v2 = *(_OWORD *)(a1 + 224);
  long long v3 = *(_OWORD *)(a1 + 240);
  return sub_2498FCED0(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(void **)(a1 + 160),
           *(void *)(a1 + 168),
           *(void *)(a1 + 176),
           *(void *)(a1 + 184),
           *(void *)(a1 + 192),
           *(void *)(a1 + 200),
           *(void *)(a1 + 208),
           *(void **)(a1 + 216),
           (void *)v2,
           *((uint64_t *)&v2 + 1),
           v3,
           *((uint64_t *)&v3 + 1),
           v4,
           *((uint64_t *)&v4 + 1),
           v5,
           *((uint64_t *)&v5 + 1),
           v6,
           *((uint64_t *)&v6 + 1),
           v7,
           *((uint64_t *)&v7 + 1),
           v8,
           *((unint64_t *)&v8 + 1),
           v9,
           *((uint64_t *)&v9 + 1),
           v10,
           SBYTE8(v10),
           v11,
           *((uint64_t *)&v11 + 1),
           v12,
           *((uint64_t *)&v12 + 1),
           v13,
           SBYTE8(v13),
           v14,
           *((uint64_t *)&v14 + 1),
           v15,
           *((uint64_t *)&v15 + 1),
           v16,
           SBYTE8(v16),
           v17,
           *((uint64_t *)&v17 + 1),
           *(void *)(a1 + 480));
}

uint64_t *_s10GaugeStyleOwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v64 = (void *)a2[9];
  uint64_t v65 = a2[8];
  unint64_t v62 = a2[11];
  uint64_t v63 = a2[10];
  uint64_t v60 = a2[13];
  uint64_t v61 = a2[12];
  uint64_t v58 = a2[15];
  uint64_t v59 = a2[14];
  uint64_t v56 = a2[17];
  uint64_t v57 = a2[16];
  uint64_t v54 = a2[19];
  uint64_t v55 = a2[18];
  uint64_t v52 = a2[21];
  unint64_t v53 = (void *)a2[20];
  uint64_t v50 = a2[23];
  uint64_t v51 = a2[22];
  uint64_t v48 = a2[25];
  uint64_t v49 = a2[24];
  long long v46 = (void *)a2[27];
  uint64_t v47 = a2[26];
  long long v45 = (void *)a2[28];
  uint64_t v44 = a2[29];
  uint64_t v43 = a2[30];
  uint64_t v42 = a2[31];
  uint64_t v41 = a2[32];
  uint64_t v40 = a2[33];
  uint64_t v13 = a2[34];
  uint64_t v14 = a2[35];
  uint64_t v15 = a2[36];
  uint64_t v16 = a2[37];
  uint64_t v17 = a2[38];
  uint64_t v18 = a2[39];
  uint64_t v19 = a2[40];
  unint64_t v20 = a2[41];
  uint64_t v3 = a2[43];
  uint64_t v21 = a2[42];
  uint64_t v22 = a2[44];
  uint64_t v23 = a2[45];
  uint64_t v24 = a2[46];
  uint64_t v25 = a2[47];
  uint64_t v26 = a2[48];
  uint64_t v27 = a2[49];
  uint64_t v28 = a2[50];
  uint64_t v29 = a2[51];
  uint64_t v30 = a2[52];
  uint64_t v31 = a2[53];
  uint64_t v32 = a2[54];
  uint64_t v33 = a2[55];
  uint64_t v34 = a2[56];
  uint64_t v35 = a2[57];
  uint64_t v36 = a2[58];
  uint64_t v37 = a2[59];
  unint64_t v38 = a2[60];
  uint64_t v39 = a2[61];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  long long v6 = (void *)a2[2];
  long long v7 = (void *)a2[3];
  long long v8 = (void *)a2[4];
  long long v9 = (void *)a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  sub_2498FB8D8(*a2, v5, v6, v7, v8, v9, v10, v11, v65, v64, v63, v62, v61, v60, v59, v58, v57, v56, v55,
    v54,
    v53,
    v52,
    v51,
    v50,
    v49,
    v48,
    v47,
    v46,
    v45,
    v44,
    v43,
    v42,
    v41,
    v40,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v3,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = (uint64_t)v6;
  a1[3] = (uint64_t)v7;
  a1[4] = (uint64_t)v8;
  a1[5] = (uint64_t)v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v65;
  a1[9] = (uint64_t)v64;
  a1[10] = v63;
  a1[11] = v62;
  a1[12] = v61;
  a1[13] = v60;
  a1[14] = v59;
  a1[15] = v58;
  a1[16] = v57;
  a1[17] = v56;
  a1[18] = v55;
  a1[19] = v54;
  a1[20] = (uint64_t)v53;
  a1[21] = v52;
  a1[22] = v51;
  a1[23] = v50;
  a1[24] = v49;
  a1[25] = v48;
  a1[26] = v47;
  a1[27] = (uint64_t)v46;
  a1[28] = (uint64_t)v45;
  a1[29] = v44;
  a1[30] = v43;
  a1[31] = v42;
  a1[32] = v41;
  a1[33] = v40;
  a1[34] = v13;
  a1[35] = v14;
  a1[36] = v15;
  a1[37] = v16;
  a1[38] = v17;
  a1[39] = v18;
  a1[40] = v19;
  a1[41] = v20;
  a1[42] = v21;
  a1[43] = v3;
  a1[44] = v22;
  a1[45] = v23;
  a1[46] = v24;
  a1[47] = v25;
  a1[48] = v26;
  a1[49] = v27;
  a1[50] = v28;
  a1[51] = v29;
  a1[52] = v30;
  a1[53] = v31;
  a1[54] = v32;
  a1[55] = v33;
  a1[56] = v34;
  a1[57] = v35;
  a1[58] = v36;
  a1[59] = v37;
  a1[60] = v38;
  a1[61] = v39;
  return a1;
}

uint64_t _s10GaugeStyleOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v99 = *a2;
  uint64_t v100 = a2[1];
  uint64_t v97 = (void *)a2[3];
  uint64_t v98 = (void *)a2[2];
  uint64_t v95 = (void *)a2[5];
  uint64_t v96 = (void *)a2[4];
  uint64_t v93 = a2[7];
  uint64_t v94 = a2[6];
  uint64_t v91 = (void *)a2[9];
  uint64_t v92 = a2[8];
  unint64_t v89 = a2[11];
  uint64_t v90 = a2[10];
  uint64_t v87 = a2[13];
  uint64_t v88 = a2[12];
  uint64_t v85 = a2[15];
  uint64_t v86 = a2[14];
  uint64_t v83 = a2[17];
  uint64_t v84 = a2[16];
  uint64_t v82 = a2[18];
  uint64_t v81 = a2[19];
  uint64_t v80 = (void *)a2[20];
  uint64_t v79 = a2[21];
  uint64_t v78 = a2[22];
  uint64_t v77 = a2[23];
  uint64_t v76 = a2[24];
  uint64_t v75 = a2[25];
  uint64_t v74 = a2[26];
  uint64_t v73 = (void *)a2[27];
  uint64_t v72 = (void *)a2[28];
  uint64_t v71 = a2[29];
  uint64_t v70 = a2[30];
  uint64_t v69 = a2[31];
  uint64_t v68 = a2[32];
  uint64_t v67 = a2[33];
  uint64_t v4 = a2[35];
  uint64_t v3 = a2[36];
  uint64_t v6 = a2[37];
  uint64_t v5 = a2[38];
  uint64_t v8 = a2[39];
  uint64_t v7 = a2[40];
  unint64_t v10 = a2[41];
  uint64_t v9 = a2[42];
  uint64_t v11 = a2[43];
  uint64_t v48 = a2[34];
  uint64_t v49 = a2[44];
  uint64_t v50 = a2[45];
  uint64_t v51 = a2[46];
  uint64_t v52 = a2[47];
  uint64_t v53 = a2[48];
  uint64_t v54 = a2[49];
  uint64_t v55 = a2[50];
  uint64_t v56 = a2[51];
  uint64_t v57 = a2[52];
  uint64_t v58 = a2[53];
  uint64_t v59 = a2[54];
  uint64_t v60 = a2[55];
  uint64_t v61 = a2[56];
  uint64_t v62 = a2[57];
  uint64_t v63 = a2[58];
  uint64_t v64 = a2[59];
  unint64_t v65 = a2[60];
  uint64_t v66 = a2[61];
  sub_2498FB8D8(*a2, v100, v98, v97, v96, v95, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85, v84, v83, v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v48,
    v4,
    v3,
    v6,
    v5,
    v8,
    v7,
    v10,
    v9,
    v11,
    v49,
    v50,
    v51,
    v52,
    *((_OWORD *)a2 + 24),
    v54,
    v55,
    v56,
    v57,
    v58,
    *((_OWORD *)a2 + 27),
    v60,
    v61,
    v62,
    v63,
    v64,
    v65);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v99;
  *(void *)(a1 + 8) = v100;
  uint64_t v14 = *(void **)(a1 + 16);
  uint64_t v15 = *(void **)(a1 + 24);
  *(void *)(a1 + 16) = v98;
  *(void *)(a1 + 24) = v97;
  uint64_t v16 = *(void **)(a1 + 32);
  uint64_t v17 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = v96;
  *(void *)(a1 + 40) = v95;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v94;
  *(void *)(a1 + 56) = v93;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v92;
  *(void *)(a1 + 72) = v91;
  *(void *)(a1 + 80) = v90;
  *(void *)(a1 + 88) = v89;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v88;
  *(void *)(a1 + 104) = v87;
  *(void *)(a1 + 112) = v86;
  *(void *)(a1 + 120) = v85;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v84;
  *(void *)(a1 + 136) = v83;
  *(void *)(a1 + 144) = v82;
  *(void *)(a1 + 152) = v81;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 160) = v80;
  *(void *)(a1 + 168) = v79;
  *(void *)(a1 + 176) = v78;
  *(void *)(a1 + 184) = v77;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 192) = v76;
  *(void *)(a1 + 200) = v75;
  *(void *)(a1 + 208) = v74;
  *(void *)(a1 + 216) = v73;
  long long v30 = *(_OWORD *)(a1 + 224);
  long long v31 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 224) = v72;
  *(void *)(a1 + 232) = v71;
  *(void *)(a1 + 240) = v70;
  *(void *)(a1 + 248) = v69;
  long long v32 = *(_OWORD *)(a1 + 256);
  long long v33 = *(_OWORD *)(a1 + 272);
  *(void *)(a1 + 256) = v68;
  *(void *)(a1 + 264) = v67;
  *(void *)(a1 + 272) = v48;
  *(void *)(a1 + 280) = v4;
  long long v34 = *(_OWORD *)(a1 + 288);
  long long v35 = *(_OWORD *)(a1 + 304);
  *(void *)(a1 + 288) = v3;
  *(void *)(a1 + 296) = v6;
  *(void *)(a1 + 304) = v5;
  *(void *)(a1 + 312) = v8;
  long long v36 = *(_OWORD *)(a1 + 320);
  long long v37 = *(_OWORD *)(a1 + 336);
  *(void *)(a1 + 320) = v7;
  *(void *)(a1 + 328) = v10;
  *(void *)(a1 + 336) = v9;
  *(void *)(a1 + 344) = v11;
  long long v38 = *(_OWORD *)(a1 + 352);
  long long v39 = *(_OWORD *)(a1 + 368);
  *(void *)(a1 + 352) = v49;
  *(void *)(a1 + 360) = v50;
  *(void *)(a1 + 368) = v51;
  *(void *)(a1 + 376) = v52;
  long long v40 = *(_OWORD *)(a1 + 384);
  long long v41 = *(_OWORD *)(a1 + 400);
  *(void *)(a1 + 384) = v53;
  *(void *)(a1 + 392) = v54;
  *(void *)(a1 + 400) = v55;
  *(void *)(a1 + 408) = v56;
  long long v42 = *(_OWORD *)(a1 + 416);
  long long v43 = *(_OWORD *)(a1 + 432);
  *(void *)(a1 + 416) = v57;
  *(void *)(a1 + 424) = v58;
  *(void *)(a1 + 432) = v59;
  *(void *)(a1 + 440) = v60;
  long long v44 = *(_OWORD *)(a1 + 448);
  long long v45 = *(_OWORD *)(a1 + 464);
  *(void *)(a1 + 448) = v61;
  *(void *)(a1 + 456) = v62;
  *(void *)(a1 + 464) = v63;
  *(void *)(a1 + 472) = v64;
  unint64_t v46 = *(void *)(a1 + 480);
  *(void *)(a1 + 480) = v65;
  *(void *)(a1 + 488) = v66;
  sub_2498FCED0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((void **)&v20 + 1), v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    (void *)v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((void **)&v29 + 1),
    (void *)v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((unint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    SBYTE8(v38),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    SBYTE8(v41),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46);
  return a1;
}

uint64_t _s10GaugeStyleOwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a1 + 24);
  uint64_t v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void **)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  long long v18 = *(_OWORD *)(a1 + 160);
  long long v19 = *(_OWORD *)(a1 + 176);
  long long v20 = *(_OWORD *)(a1 + 192);
  long long v21 = *(_OWORD *)(a1 + 208);
  long long v22 = *(_OWORD *)(a1 + 224);
  long long v23 = *(_OWORD *)(a1 + 240);
  long long v24 = *(_OWORD *)(a1 + 256);
  long long v25 = *(_OWORD *)(a1 + 272);
  long long v26 = *(_OWORD *)(a1 + 288);
  long long v27 = *(_OWORD *)(a1 + 304);
  long long v28 = *(_OWORD *)(a1 + 320);
  long long v29 = *(_OWORD *)(a1 + 336);
  long long v30 = *(_OWORD *)(a1 + 352);
  long long v31 = *(_OWORD *)(a1 + 368);
  long long v32 = *(_OWORD *)(a1 + 384);
  long long v33 = *(_OWORD *)(a1 + 400);
  long long v34 = *(_OWORD *)(a1 + 416);
  long long v35 = *(_OWORD *)(a1 + 432);
  long long v36 = *(_OWORD *)(a1 + 448);
  long long v37 = *(_OWORD *)(a1 + 464);
  long long v38 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v38;
  long long v39 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v39;
  long long v40 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v40;
  long long v41 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v41;
  long long v42 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v42;
  long long v43 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v43;
  long long v44 = a2[13];
  *(_OWORD *)(a1 + 192) = a2[12];
  *(_OWORD *)(a1 + 208) = v44;
  long long v45 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v45;
  long long v46 = a2[17];
  *(_OWORD *)(a1 + 256) = a2[16];
  *(_OWORD *)(a1 + 272) = v46;
  long long v47 = a2[19];
  *(_OWORD *)(a1 + 288) = a2[18];
  *(_OWORD *)(a1 + 304) = v47;
  long long v48 = a2[21];
  *(_OWORD *)(a1 + 320) = a2[20];
  *(_OWORD *)(a1 + 336) = v48;
  long long v49 = a2[23];
  *(_OWORD *)(a1 + 352) = a2[22];
  *(_OWORD *)(a1 + 368) = v49;
  long long v50 = a2[25];
  *(_OWORD *)(a1 + 384) = a2[24];
  *(_OWORD *)(a1 + 400) = v50;
  long long v51 = a2[27];
  *(_OWORD *)(a1 + 416) = a2[26];
  *(_OWORD *)(a1 + 432) = v51;
  long long v52 = a2[29];
  *(_OWORD *)(a1 + 448) = a2[28];
  *(_OWORD *)(a1 + 464) = v52;
  unint64_t v53 = *(void *)(a1 + 480);
  *(_OWORD *)(a1 + 480) = a2[30];
  sub_2498FCED0(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((void **)&v12 + 1), v13, *((unint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    (void *)v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((void **)&v21 + 1),
    (void *)v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((unint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    SBYTE8(v30),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    SBYTE8(v33),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    SBYTE8(v36),
    v37,
    *((uint64_t *)&v37 + 1),
    v53);
  return a1;
}

uint64_t _s10GaugeStyleOwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 496)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 340);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double _s10GaugeStyleOwst(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 488) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 496) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 304) = 0u;
      *(_OWORD *)(a1 + 320) = 0u;
      *(_OWORD *)(a1 + 272) = 0u;
      *(_OWORD *)(a1 + 288) = 0u;
      *(_OWORD *)(a1 + 240) = 0u;
      *(_OWORD *)(a1 + 256) = 0u;
      *(_OWORD *)(a1 + 208) = 0u;
      *(_OWORD *)(a1 + 224) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      *(_OWORD *)(a1 + 192) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 336) = (unint64_t)-a2 << 32;
      *(_OWORD *)(a1 + 344) = 0u;
      *(_OWORD *)(a1 + 360) = 0u;
      *(_OWORD *)(a1 + 376) = 0u;
      *(_OWORD *)(a1 + 392) = 0u;
      *(_OWORD *)(a1 + 408) = 0u;
      *(_OWORD *)(a1 + 424) = 0u;
      *(_OWORD *)(a1 + 440) = 0u;
      *(_OWORD *)(a1 + 456) = 0u;
      *(_OWORD *)(a1 + 472) = 0u;
      *(void *)(a1 + 488) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 496) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_249947834(uint64_t result, uint64_t a2)
{
  if (a2 < 5)
  {
    uint64_t v2 = *(void *)(result + 360) & 7;
    uint64_t v3 = *(void *)(result + 384) & 7;
    uint64_t v4 = *(void *)(result + 408) & 7;
    uint64_t v5 = *(void *)(result + 432) & 7;
    uint64_t v6 = *(void *)(result + 456) & 7;
    unint64_t v7 = *(void *)(result + 480) & 0xF000000000000007 | (a2 << 57);
    *(void *)(result + 336) = *(unsigned int *)(result + 336);
    *(void *)(result + 360) = v2;
    *(void *)(result + 384) = v3;
    *(void *)(result + 408) = v4;
    *(void *)(result + 432) = v5;
    *(void *)(result + 456) = v6;
    *(void *)(result + 480) = v7;
  }
  else
  {
    *(void *)double result = (a2 - 5);
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(void *)(result + 472) = 0;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 480) = xmmword_249AF8620;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle()
{
  return &type metadata for Instrument.GaugeStyle;
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  uint64_t v6 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v6;
  uint64_t v7 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s10GaugeStyleO21CircularConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.CircularConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.CircularConfiguration;
}

unsigned char *_s10GaugeStyleO9AlignmentOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249947D7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.Alignment()
{
  return &type metadata for Instrument.GaugeStyle.Alignment;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.Alignment.DefaultAlignment()
{
  return &type metadata for Instrument.GaugeStyle.Alignment.DefaultAlignment;
}

uint64_t _s22ConfigurableInputStateVwxx(uint64_t a1)
{
  sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  return swift_bridgeObjectRelease();
}

uint64_t _s22ConfigurableInputStateVwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned int v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22ConfigurableInputStateVwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  unsigned int v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_2498826E4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s22ConfigurableInputStateVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_2498826E4(v5, v6, v7, v8, v10);
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t _s22ConfigurableInputStateVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22ConfigurableInputStateVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.ConfigurableInputState()
{
  return &type metadata for Instrument.ConfigurableInputState;
}

uint64_t _s31RemainingRangeTextConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24988D788(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  sub_24988D788(*(void *)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  sub_24988D788(*(void *)(a1 + 136), *(void *)(a1 + 144), *(unsigned char *)(a1 + 152));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v2 = *(void **)(a1 + 216);
  if (v2)
  {

    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s31RemainingRangeTextConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  uint64_t v8 = *(void *)(a2 + 96);
  char v9 = *(unsigned char *)(a2 + 104);
  id v10 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988D770(v7, v8, v9);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = v9;
  uint64_t v11 = *(void *)(a2 + 112);
  uint64_t v12 = *(void *)(a2 + 120);
  LOBYTE(v6) = *(unsigned char *)(a2 + 128);
  sub_24988D770(v11, v12, v6);
  *(void *)(a1 + 112) = v11;
  *(void *)(a1 + 120) = v12;
  *(unsigned char *)(a1 + 128) = v6;
  uint64_t v13 = *(void *)(a2 + 136);
  uint64_t v14 = *(void *)(a2 + 144);
  LOBYTE(v6) = *(unsigned char *)(a2 + 152);
  sub_24988D770(v13, v14, v6);
  *(void *)(a1 + 136) = v13;
  *(void *)(a1 + 144) = v14;
  *(unsigned char *)(a1 + 152) = v6;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  uint64_t v15 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v15;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  long long v16 = *(void **)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16)
  {
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = v16;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
    uint64_t v17 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = v17;
    id v18 = v16;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v19 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v19;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
  }
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  *(_WORD *)(a1 + 280) = *(_WORD *)(a2 + 280);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s31RemainingRangeTextConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  char v4 = *(void **)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v4;
  id v6 = v4;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 96);
  char v9 = *(unsigned char *)(a2 + 104);
  sub_24988D770(v7, v8, v9);
  uint64_t v10 = *(void *)(a1 + 88);
  uint64_t v11 = *(void *)(a1 + 96);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  char v12 = *(unsigned char *)(a1 + 104);
  *(unsigned char *)(a1 + 104) = v9;
  sub_24988D788(v10, v11, v12);
  uint64_t v13 = *(void *)(a2 + 112);
  uint64_t v14 = *(void *)(a2 + 120);
  char v15 = *(unsigned char *)(a2 + 128);
  sub_24988D770(v13, v14, v15);
  uint64_t v16 = *(void *)(a1 + 112);
  uint64_t v17 = *(void *)(a1 + 120);
  *(void *)(a1 + 112) = v13;
  *(void *)(a1 + 120) = v14;
  char v18 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v15;
  sub_24988D788(v16, v17, v18);
  uint64_t v19 = *(void *)(a2 + 136);
  uint64_t v20 = *(void *)(a2 + 144);
  char v21 = *(unsigned char *)(a2 + 152);
  sub_24988D770(v19, v20, v21);
  uint64_t v22 = *(void *)(a1 + 136);
  uint64_t v23 = *(void *)(a1 + 144);
  *(void *)(a1 + 136) = v19;
  *(void *)(a1 + 144) = v20;
  char v24 = *(unsigned char *)(a1 + 152);
  *(unsigned char *)(a1 + 152) = v21;
  sub_24988D788(v22, v23, v24);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v25 = (_OWORD *)(a1 + 200);
  long long v26 = (long long *)(a2 + 200);
  long long v27 = *(void **)(a1 + 216);
  uint64_t v28 = *(void *)(a2 + 216);
  if (v27)
  {
    if (v28)
    {
      *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      long long v29 = *(void **)(a2 + 216);
      *(void *)(a1 + 216) = v29;
      id v30 = v29;

      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24989E520(a1 + 200);
      long long v34 = *(_OWORD *)(a2 + 216);
      long long v33 = *(_OWORD *)(a2 + 232);
      long long v35 = *v26;
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(_OWORD *)(a1 + 216) = v34;
      *(_OWORD *)(a1 + 232) = v33;
      *long long v25 = v35;
    }
  }
  else if (v28)
  {
    *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    long long v31 = *(void **)(a2 + 216);
    *(void *)(a1 + 216) = v31;
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
    *(void *)(a1 + 240) = *(void *)(a2 + 240);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    id v32 = v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v36 = *v26;
    long long v37 = *(_OWORD *)(a2 + 216);
    long long v38 = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    *(_OWORD *)(a1 + 216) = v37;
    *(_OWORD *)(a1 + 232) = v38;
    *long long v25 = v36;
  }
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 264) = *(_DWORD *)(a2 + 264);
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  int v39 = *(_DWORD *)(a2 + 276);
  *(unsigned char *)(a1 + 280) = *(unsigned char *)(a2 + 280);
  *(_DWORD *)(a1 + 276) = v39;
  *(unsigned char *)(a1 + 281) = *(unsigned char *)(a2 + 281);
  return a1;
}

void *__swift_memcpy282_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x11AuLL);
}

uint64_t _s31RemainingRangeTextConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;

  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 104);
  uint64_t v8 = *(void *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  char v10 = *(unsigned char *)(a1 + 104);
  *(unsigned char *)(a1 + 104) = v7;
  sub_24988D788(v8, v9, v10);
  char v11 = *(unsigned char *)(a2 + 128);
  uint64_t v12 = *(void *)(a1 + 112);
  uint64_t v13 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  char v14 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v11;
  sub_24988D788(v12, v13, v14);
  char v15 = *(unsigned char *)(a2 + 152);
  uint64_t v16 = *(void *)(a1 + 136);
  uint64_t v17 = *(void *)(a1 + 144);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  char v18 = *(unsigned char *)(a1 + 152);
  *(unsigned char *)(a1 + 152) = v15;
  sub_24988D788(v16, v17, v18);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  uint64_t v19 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v19;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void **)(a1 + 216);
  if (!v20) {
    goto LABEL_5;
  }
  uint64_t v21 = *(void *)(a2 + 216);
  if (!v21)
  {
    sub_24989E520(a1 + 200);
LABEL_5:
    long long v23 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v23;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(void *)(a1 + 248) = *(void *)(a2 + 248);
    goto LABEL_6;
  }
  *(unsigned char *)(a1 + 200) = *(unsigned char *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = v21;

  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(unsigned char *)(a1 + 233) = *(unsigned char *)(a2 + 233);
  uint64_t v22 = *(void *)(a2 + 248);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = v22;
  swift_bridgeObjectRelease();
LABEL_6:
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  *(_WORD *)(a1 + 280) = *(_WORD *)(a2 + 280);
  return a1;
}

uint64_t _s31RemainingRangeTextConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 282)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s31RemainingRangeTextConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 280) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 282) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 282) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.RemainingRangeTextConfiguration()
{
  return &type metadata for Instrument.RemainingRangeTextConfiguration;
}

ValueMetadata *type metadata accessor for Instrument.BoundsLabel()
{
  return &type metadata for Instrument.BoundsLabel;
}

ValueMetadata *type metadata accessor for Instrument.UnitSensitiveBoundsLabels()
{
  return &type metadata for Instrument.UnitSensitiveBoundsLabels;
}

ValueMetadata *type metadata accessor for Instrument.UnitSensitiveFormatSpecifiers()
{
  return &type metadata for Instrument.UnitSensitiveFormatSpecifiers;
}

uint64_t _s18UnitSensitiveLabelVwCP(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14descr26FD9EE19O19StateSensitiveImageV11StateImagesVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s18UnitSensitiveLabelVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Instrument.UnitSensitiveLabel()
{
  return &type metadata for Instrument.UnitSensitiveLabel;
}

ValueMetadata *_s18UnitSensitiveLabelV10CodingKeysOMa()
{
  return &_s18UnitSensitiveLabelV10CodingKeysON;
}

ValueMetadata *_s29UnitSensitiveFormatSpecifiersV10CodingKeysOMa()
{
  return &_s29UnitSensitiveFormatSpecifiersV10CodingKeysON;
}

ValueMetadata *_s25UnitSensitiveBoundsLabelsV10CodingKeysOMa()
{
  return &_s25UnitSensitiveBoundsLabelsV10CodingKeysON;
}

unsigned char *_s18UnitSensitiveLabelV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249948A80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11BoundsLabelV10CodingKeysOMa()
{
  return &_s11BoundsLabelV10CodingKeysON;
}

ValueMetadata *_s31RemainingRangeTextConfigurationV10CodingKeysOMa()
{
  return &_s31RemainingRangeTextConfigurationV10CodingKeysON;
}

ValueMetadata *_s22ConfigurableInputStateV10CodingKeysOMa()
{
  return &_s22ConfigurableInputStateV10CodingKeysON;
}

unsigned char *_s10GaugeStyleO10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249948BA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10GaugeStyleO10CodingKeysOMa()
{
  return &_s10GaugeStyleO10CodingKeysON;
}

ValueMetadata *_s10GaugeStyleO18CircularCodingKeysOMa()
{
  return &_s10GaugeStyleO18CircularCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO17CompassCodingKeysOMa()
{
  return &_s10GaugeStyleO17CompassCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO14DialCodingKeysOMa()
{
  return &_s10GaugeStyleO14DialCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO20ImageGroupCodingKeysOMa()
{
  return &_s10GaugeStyleO20ImageGroupCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO21TextElementCodingKeysOMa()
{
  return &_s10GaugeStyleO21TextElementCodingKeysON;
}

ValueMetadata *_s10GaugeStyleO26MapsMediaBlurBarCodingKeysOMa()
{
  return &_s10GaugeStyleO26MapsMediaBlurBarCodingKeysON;
}

unsigned char *_s10GaugeStyleO18CircularCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249948CE0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s10GaugeStyleO21ProgressBarCodingKeysOMa()
{
  return &_s10GaugeStyleO21ProgressBarCodingKeysON;
}

uint64_t _s10GaugeStyleO21CircularConfigurationV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s10GaugeStyleO21CircularConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *__n128 result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249948E74);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10GaugeStyleO21CircularConfigurationV10CodingKeysOMa()
{
  return &_s10GaugeStyleO21CircularConfigurationV10CodingKeysON;
}

unsigned char *_s31RemainingRangeTextConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249948F78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s18GaugeConfigurationV10CodingKeysOMa()
{
  return &_s18GaugeConfigurationV10CodingKeysON;
}

unint64_t sub_249948FB4()
{
  unint64_t result = qword_2696E0230;
  if (!qword_2696E0230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0230);
  }
  return result;
}

unint64_t sub_24994900C()
{
  unint64_t result = qword_2696E0238;
  if (!qword_2696E0238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0238);
  }
  return result;
}

unint64_t sub_249949064()
{
  unint64_t result = qword_2696E0240;
  if (!qword_2696E0240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0240);
  }
  return result;
}

unint64_t sub_2499490BC()
{
  unint64_t result = qword_2696E0248;
  if (!qword_2696E0248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0248);
  }
  return result;
}

unint64_t sub_249949114()
{
  unint64_t result = qword_2696E0250;
  if (!qword_2696E0250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0250);
  }
  return result;
}

unint64_t sub_24994916C()
{
  unint64_t result = qword_2696E0258;
  if (!qword_2696E0258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0258);
  }
  return result;
}

unint64_t sub_2499491C4()
{
  unint64_t result = qword_2696E0260;
  if (!qword_2696E0260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0260);
  }
  return result;
}

unint64_t sub_24994921C()
{
  unint64_t result = qword_2696E0268;
  if (!qword_2696E0268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0268);
  }
  return result;
}

unint64_t sub_249949274()
{
  unint64_t result = qword_2696E0270;
  if (!qword_2696E0270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0270);
  }
  return result;
}

unint64_t sub_2499492CC()
{
  unint64_t result = qword_2696E0278;
  if (!qword_2696E0278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0278);
  }
  return result;
}

unint64_t sub_249949324()
{
  unint64_t result = qword_2696E0280;
  if (!qword_2696E0280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0280);
  }
  return result;
}

unint64_t sub_24994937C()
{
  unint64_t result = qword_2696E0288;
  if (!qword_2696E0288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0288);
  }
  return result;
}

unint64_t sub_2499493D4()
{
  unint64_t result = qword_2696E0290;
  if (!qword_2696E0290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0290);
  }
  return result;
}

unint64_t sub_24994942C()
{
  unint64_t result = qword_2696E0298;
  if (!qword_2696E0298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0298);
  }
  return result;
}

unint64_t sub_249949484()
{
  unint64_t result = qword_2696E02A0;
  if (!qword_2696E02A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02A0);
  }
  return result;
}

unint64_t sub_2499494DC()
{
  unint64_t result = qword_2696E02A8;
  if (!qword_2696E02A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02A8);
  }
  return result;
}

unint64_t sub_249949534()
{
  unint64_t result = qword_2696E02B0;
  if (!qword_2696E02B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02B0);
  }
  return result;
}

unint64_t sub_24994958C()
{
  unint64_t result = qword_2696E02B8;
  if (!qword_2696E02B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02B8);
  }
  return result;
}

unint64_t sub_2499495E4()
{
  unint64_t result = qword_2696E02C0;
  if (!qword_2696E02C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02C0);
  }
  return result;
}

unint64_t sub_24994963C()
{
  unint64_t result = qword_2696E02C8;
  if (!qword_2696E02C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02C8);
  }
  return result;
}

unint64_t sub_249949694()
{
  unint64_t result = qword_2696E02D0;
  if (!qword_2696E02D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02D0);
  }
  return result;
}

unint64_t sub_2499496EC()
{
  unint64_t result = qword_2696E02D8;
  if (!qword_2696E02D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02D8);
  }
  return result;
}

unint64_t sub_249949744()
{
  unint64_t result = qword_2696E02E0;
  if (!qword_2696E02E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02E0);
  }
  return result;
}

unint64_t sub_24994979C()
{
  unint64_t result = qword_2696E02E8;
  if (!qword_2696E02E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02E8);
  }
  return result;
}

unint64_t sub_2499497F4()
{
  unint64_t result = qword_2696E02F0;
  if (!qword_2696E02F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02F0);
  }
  return result;
}

unint64_t sub_24994984C()
{
  unint64_t result = qword_2696E02F8;
  if (!qword_2696E02F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E02F8);
  }
  return result;
}

unint64_t sub_2499498A4()
{
  unint64_t result = qword_2696E0300;
  if (!qword_2696E0300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0300);
  }
  return result;
}

unint64_t sub_2499498FC()
{
  unint64_t result = qword_2696E0308;
  if (!qword_2696E0308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0308);
  }
  return result;
}

unint64_t sub_249949954()
{
  unint64_t result = qword_2696E0310;
  if (!qword_2696E0310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0310);
  }
  return result;
}

unint64_t sub_2499499AC()
{
  unint64_t result = qword_2696E0318;
  if (!qword_2696E0318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0318);
  }
  return result;
}

unint64_t sub_249949A04()
{
  unint64_t result = qword_2696E0320;
  if (!qword_2696E0320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0320);
  }
  return result;
}

unint64_t sub_249949A5C()
{
  unint64_t result = qword_2696E0328;
  if (!qword_2696E0328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0328);
  }
  return result;
}

unint64_t sub_249949AB4()
{
  unint64_t result = qword_2696E0330;
  if (!qword_2696E0330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0330);
  }
  return result;
}

unint64_t sub_249949B0C()
{
  unint64_t result = qword_2696E0338;
  if (!qword_2696E0338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0338);
  }
  return result;
}

unint64_t sub_249949B64()
{
  unint64_t result = qword_2696E0340;
  if (!qword_2696E0340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0340);
  }
  return result;
}

unint64_t sub_249949BBC()
{
  unint64_t result = qword_2696E0348;
  if (!qword_2696E0348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0348);
  }
  return result;
}

unint64_t sub_249949C14()
{
  unint64_t result = qword_2696E0350;
  if (!qword_2696E0350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0350);
  }
  return result;
}

unint64_t sub_249949C6C()
{
  unint64_t result = qword_2696E0358;
  if (!qword_2696E0358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0358);
  }
  return result;
}

unint64_t sub_249949CC4()
{
  unint64_t result = qword_2696E0360;
  if (!qword_2696E0360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0360);
  }
  return result;
}

unint64_t sub_249949D1C()
{
  unint64_t result = qword_2696E0368;
  if (!qword_2696E0368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0368);
  }
  return result;
}

unint64_t sub_249949D74()
{
  unint64_t result = qword_2696E0370;
  if (!qword_2696E0370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0370);
  }
  return result;
}

unint64_t sub_249949DCC()
{
  unint64_t result = qword_2696E0378;
  if (!qword_2696E0378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0378);
  }
  return result;
}

unint64_t sub_249949E24()
{
  unint64_t result = qword_2696E0380;
  if (!qword_2696E0380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0380);
  }
  return result;
}

unint64_t sub_249949E7C()
{
  unint64_t result = qword_2696E0388;
  if (!qword_2696E0388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0388);
  }
  return result;
}

unint64_t sub_249949ED4()
{
  unint64_t result = qword_2696E0390;
  if (!qword_2696E0390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0390);
  }
  return result;
}

unint64_t sub_249949F2C()
{
  unint64_t result = qword_2696E0398;
  if (!qword_2696E0398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0398);
  }
  return result;
}

uint64_t sub_249949F80(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4C737265646E6572 && a2 == 0xEE00796C6C61636FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000249B13580)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24994A0F0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65676E6172 && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656D614E6E6F6369 && a2 == 0xE800000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6562614C6E696DLL && a2 == 0xE800000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6C6562614C6E696DLL && a2 == 0xED0000726F6C6F43 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C6562614C78616DLL && a2 == 0xE800000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C6562614C78616DLL && a2 == 0xED0000726F6C6F43 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6F6C6F43746E6974 && a2 == 0xEA00000000007372 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000249B15AB0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 8;
    }
    else {
      return 9;
    }
  }
}

uint64_t sub_24994A4E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72616C7563726963 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737361706D6F63 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1818323300 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6F72476567616D69 && a2 == 0xEA00000000007075 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D656C4574786574 && a2 == 0xEB00000000746E65 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B15A90 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x73736572676F7270 && a2 == 0xEB00000000726142)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_24994A7F0()
{
  unint64_t v0 = sub_249AEDCF8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_24994A83C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B14560 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B14580 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B15AD0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24994A980(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F427265776F6CLL && a2 == 0xEB0000000073646ELL;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F427265707075 && a2 == 0xEB0000000073646ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24994AAA0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B15AF0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24994ABB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736C6562616CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_24994ACC4()
{
  unint64_t result = qword_2696E03A0;
  if (!qword_2696E03A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E03A0);
  }
  return result;
}

uint64_t sub_24994AD18()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24994AD58(uint64_t a1)
{
  return *(void *)(a1 + 480) >> 60;
}

uint64_t sub_24994AD64(uint64_t result)
{
  *(void *)(result + 480) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_24994AD74(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 504);
  uint64_t v52 = *(void *)(a1 + 496);
  int v3 = *(void **)(a1 + 512);
  unsigned int v4 = *(void **)(a1 + 520);
  char v5 = *(void **)(a1 + 528);
  char v6 = *(void **)(a1 + 536);
  uint64_t v7 = *(void *)(a1 + 544);
  uint64_t v8 = *(void *)(a1 + 552);
  long long v51 = *(_OWORD *)(a1 + 560);
  long long v50 = *(_OWORD *)(a1 + 576);
  long long v49 = *(_OWORD *)(a1 + 592);
  long long v48 = *(_OWORD *)(a1 + 608);
  long long v47 = *(_OWORD *)(a1 + 624);
  long long v46 = *(_OWORD *)(a1 + 640);
  unint64_t v9 = *(void *)(a1 + 976);
  long long v45 = *(_OWORD *)(a1 + 656);
  long long v44 = *(_OWORD *)(a1 + 672);
  long long v43 = *(_OWORD *)(a1 + 688);
  long long v42 = *(_OWORD *)(a1 + 704);
  long long v41 = *(_OWORD *)(a1 + 720);
  long long v40 = *(_OWORD *)(a1 + 736);
  long long v39 = *(_OWORD *)(a1 + 752);
  long long v38 = *(_OWORD *)(a1 + 768);
  long long v37 = *(_OWORD *)(a1 + 784);
  long long v36 = *(_OWORD *)(a1 + 800);
  long long v35 = *(_OWORD *)(a1 + 816);
  long long v34 = *(_OWORD *)(a1 + 832);
  long long v33 = *(_OWORD *)(a1 + 848);
  long long v32 = *(_OWORD *)(a1 + 864);
  long long v31 = *(_OWORD *)(a1 + 880);
  long long v30 = *(_OWORD *)(a1 + 896);
  long long v29 = *(_OWORD *)(a1 + 912);
  long long v28 = *(_OWORD *)(a1 + 928);
  long long v27 = *(_OWORD *)(a1 + 944);
  long long v26 = *(_OWORD *)(a1 + 960);
  long long v24 = *(_OWORD *)(a1 + 448);
  long long v25 = *(_OWORD *)(a1 + 464);
  long long v22 = *(_OWORD *)(a1 + 416);
  long long v23 = *(_OWORD *)(a1 + 432);
  long long v20 = *(_OWORD *)(a1 + 384);
  long long v21 = *(_OWORD *)(a1 + 400);
  long long v18 = *(_OWORD *)(a1 + 352);
  long long v19 = *(_OWORD *)(a1 + 368);
  long long v16 = *(_OWORD *)(a1 + 320);
  long long v17 = *(_OWORD *)(a1 + 336);
  long long v14 = *(_OWORD *)(a1 + 288);
  long long v15 = *(_OWORD *)(a1 + 304);
  long long v12 = *(_OWORD *)(a1 + 256);
  long long v13 = *(_OWORD *)(a1 + 272);
  long long v11 = *(_OWORD *)(a1 + 224);
  sub_2498FCED0(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void **)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216),
    (void *)v11,
    *((uint64_t *)&v11 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((unint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    SBYTE8(v21),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    SBYTE8(v24),
    v25,
    *((uint64_t *)&v25 + 1),
    *(void *)(a1 + 480));
  sub_2498FCED0(v52, v2, v3, v4, v5, v6, v7, v8, v51, *((void **)&v51 + 1), v50, *((unint64_t *)&v50 + 1), v49, *((uint64_t *)&v49 + 1), v48, *((uint64_t *)&v48 + 1), v47, *((uint64_t *)&v47 + 1), v46,
    *((uint64_t *)&v46 + 1),
    (void *)v45,
    *((uint64_t *)&v45 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((void **)&v42 + 1),
    (void *)v41,
    *((uint64_t *)&v41 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v35,
    *((unint64_t *)&v35 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v33,
    SBYTE8(v33),
    v32,
    *((uint64_t *)&v32 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    SBYTE8(v30),
    v29,
    *((uint64_t *)&v29 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v27,
    SBYTE8(v27),
    v26,
    *((uint64_t *)&v26 + 1),
    v9);
  return a1;
}

uint64_t KeyedEncodingContainer.encode<A>(_:forKey:)()
{
  uint64_t v0 = type metadata accessor for SkipEncode();
  uint64_t result = sub_24994B488(v0);
  if ((result & 1) == 0) {
    return sub_249AEDF08();
  }
  return result;
}

uint64_t SkipEncode.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SkipEncode.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*SkipEncode.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t SkipEncode.skippedDestinations.getter@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(v2 + *(int *)(result + 52));
  return result;
}

void *SkipEncode.skippedDestinations.setter(void *result, uint64_t a2)
{
  *(void *)(v2 + *(int *)(a2 + 52)) = *result;
  return result;
}

uint64_t (*SkipEncode.skippedDestinations.modify())()
{
  return nullsub_1;
}

uint64_t SkipEncode.init(wrappedValue:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = *a2;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = type metadata accessor for SkipEncode();
  *(void *)(a4 + *(int *)(result + 52)) = v5;
  return result;
}

uint64_t SkipEncode.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v13 = *(void *)(a2 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](a1);
  long long v16 = (char *)&v20[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249882C34(v14, (uint64_t)v20);
  sub_249AED5B8();
  if (v6) {
    return __swift_destroy_boxed_opaque_existential_2Tm(a1);
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(a6, v16, a2);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_2696E2ED8;
  __swift_destroy_boxed_opaque_existential_2Tm(a1);
  v20[0] = a2;
  v20[1] = a3;
  unsigned char v20[2] = a4;
  v20[3] = a5;
  uint64_t result = type metadata accessor for SkipEncode();
  *(void *)(a6 + *(int *)(result + 52)) = v18;
  return result;
}

uint64_t SkipEncode.encode(to:)()
{
  return sub_249AECF08();
}

char *static SkipEncode.setTargetDestination(_:)(char *result)
{
  byte_2696E03A8 = *result;
  return result;
}

void static SkipEncode.targetDestination.getter(unsigned char *a1@<X8>)
{
  *a1 = byte_2696E03A8;
}

uint64_t sub_24994B44C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return SkipEncode.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_24994B470()
{
  return SkipEncode.encode(to:)();
}

uint64_t sub_24994B488(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v4 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v4);
  char v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = qword_249AFA138[byte_2696E03A8] & *(void *)(v11 + *(int *)(v8 + 52));
  (*(void (**)(char *))(v7 + 16))(v10);
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a1);
    char v13 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v10, v2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3D0);
    if (swift_dynamicCast())
    {
      uint64_t v14 = *((void *)&v18 + 1);
      uint64_t v15 = v19;
      __swift_project_boxed_opaque_existential_2Tm(&v17, *((uint64_t *)&v18 + 1));
      char v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a1);
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v17);
    }
    else
    {
      uint64_t v19 = 0;
      long long v17 = 0u;
      long long v18 = 0u;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, a1);
      sub_24994C43C((uint64_t)&v17);
      char v13 = 0;
    }
  }
  return v13 & 1;
}

uint64_t type metadata accessor for SkipEncode()
{
  return swift_getGenericMetadata();
}

uint64_t KeyedDecodingContainer.decode<A>(_:forKey:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, char *a5@<X8>)
{
  long long v30 = a5;
  uint64_t v31 = a4;
  uint64_t v29 = a2;
  uint64_t v7 = sub_249AED8D8();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  char v10 = (char *)&v26 - v9;
  uint64_t v27 = *(void *)(a1 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  char v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = a3;
  uint64_t v17 = v36;
  uint64_t result = sub_249AEDDA8();
  if (!v17)
  {
    uint64_t v19 = v7;
    uint64_t v21 = v27;
    uint64_t v20 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v10, 1, a1) == 1)
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v19);
      uint64_t v22 = v29;
      (*(void (**)(uint64_t, uint64_t))(v29 + 8))(a1, v29);
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      uint64_t v23 = qword_2696E2ED8;
      long long v24 = v30;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v30, v13, a1);
      uint64_t v32 = a1;
      uint64_t v33 = v22;
      uint64_t v34 = v16;
    }
    else
    {
      uint64_t v36 = v16;
      long long v25 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      v25(v15, v10, a1);
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v13, v15, a1);
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      uint64_t v23 = qword_2696E2ED8;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v15, a1);
      long long v24 = v30;
      v25(v30, v13, a1);
      uint64_t v32 = a1;
      uint64_t v33 = v29;
      uint64_t v34 = v36;
    }
    uint64_t v35 = v31;
    uint64_t result = type metadata accessor for SkipEncode();
    *(void *)&v24[*(int *)(result + 52)] = v23;
  }
  return result;
}

uint64_t UnkeyedDecodingContainer.decode<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_249AEDF58();
  if (!v6)
  {
    if (qword_2696DD758 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_2696E2ED8;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v14, a2);
    v17[0] = a2;
    v17[1] = a3;
    v17[2] = a4;
    v17[3] = a5;
    uint64_t result = type metadata accessor for SkipEncode();
    *(void *)(a6 + *(int *)(result + 52)) = v16;
  }
  return result;
}

uint64_t SingleValueDecodingContainer.decode<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_249AEE128();
  if (!v6)
  {
    if (qword_2696DD758 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_2696E2ED8;
    (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v14, a2);
    v17[0] = a2;
    v17[1] = a3;
    v17[2] = a4;
    v17[3] = a5;
    uint64_t result = type metadata accessor for SkipEncode();
    *(void *)(a6 + *(int *)(result + 52)) = v16;
  }
  return result;
}

uint64_t UnkeyedEncodingContainer.encode<A>(_:)()
{
  uint64_t v0 = type metadata accessor for SkipEncode();
  uint64_t result = sub_24994B488(v0);
  if ((result & 1) == 0) {
    return sub_249AEDF78();
  }
  return result;
}

uint64_t sub_24994BD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_24994BD90()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24994BE2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_24994BF24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_24994BF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24994BFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24994C048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24994C0C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24994C140(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24994C254);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_24994C268(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            uint64_t v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x24994C414);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

uint64_t sub_24994C43C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_24994C49C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = sub_249AEC398();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[6];
    *((unsigned char *)a1 + v6[5]) = *((unsigned char *)a2 + v6[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v9 = v6[7];
    unsigned int v10 = (char *)a1 + v9;
    int v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    LOBYTE(v6) = v11[8];
    swift_bridgeObjectRetain();
    j__swift_retain();
    *(void *)unsigned int v10 = v12;
    v10[8] = (char)v6;
  }
  return a1;
}

uint64_t sub_24994C5A0(uint64_t a1)
{
  uint64_t v2 = sub_249AEC398();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return j__swift_release();
}

uint64_t sub_24994C62C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEC398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  unsigned int v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  LOBYTE(a2) = *((unsigned char *)v10 + 8);
  swift_bridgeObjectRetain();
  j__swift_retain();
  *(void *)uint64_t v9 = v11;
  *(unsigned char *)(v9 + 8) = a2;
  return a1;
}

uint64_t sub_24994C6DC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEC398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v10 = *v9;
  LOBYTE(a2) = *((unsigned char *)v9 + 8);
  j__swift_retain();
  *(void *)uint64_t v8 = v10;
  *(unsigned char *)(v8 + 8) = a2;
  j__swift_release();
  return a1;
}

uint64_t sub_24994C7A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEC398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  return a1;
}

uint64_t sub_24994C848(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEC398();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  LOBYTE(v10) = *((unsigned char *)v10 + 8);
  *(void *)uint64_t v9 = v11;
  *(unsigned char *)(v9 + 8) = (_BYTE)v10;
  j__swift_release();
  return a1;
}

uint64_t sub_24994C8FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24994C910);
}

uint64_t sub_24994C910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEC398();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_24994C9DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24994C9F0);
}

uint64_t sub_24994C9F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_249AEC398();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for HalfOpenCircularInstrument()
{
  uint64_t result = qword_2696E0430;
  if (!qword_2696E0430) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24994CAF8()
{
  uint64_t result = sub_249AEC398();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24994CBA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24994CBBC()
{
  uint64_t v1 = type metadata accessor for HalfOpenCircularInstrument();
  if (*(void *)(v0 + *(int *)(v1 + 24)))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v2 = v0 + *(int *)(v1 + 28);
    uint64_t v3 = *(void *)v2;
    char v4 = *(unsigned char *)(v2 + 8);
    j__swift_retain();
    uint64_t v5 = sub_2499A6164(v3, v4);
    j__swift_release();
    if (!v5) {
      sub_249AEC8F8();
    }
  }
  return sub_249AEBBF8();
}

uint64_t sub_24994CC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = sub_249AECC28();
  a3[1] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0440);
  return sub_24994CCD8(a2, a1, (uint64_t)a3 + *(int *)(v7 + 44));
}

uint64_t sub_24994CCD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0448);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0450);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0458);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  int v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v39 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0460);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v39 - v21;
  sub_24994D078(a2, (uint64_t)&v39 - v21);
  sub_24994D7B4(a2, (uint64_t)v16);
  sub_249AEC388();
  uint64_t v24 = v23;
  sub_249AEC328();
  uint64_t v25 = sub_249AEC2F8();
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v10, 1, v25);
  sub_2498D60E8((uint64_t)v10, &qword_2696E0450);
  if (a2 == 1)
  {
    uint64_t v26 = 0x3FF7EF9A071C5BB5;
  }
  else
  {
    sub_249AEC348();
    uint64_t v27 = sub_249AEC308();
    BOOL v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v7, 1, v27) == 1;
    sub_2498D60E8((uint64_t)v7, &qword_2696E0448);
    uint64_t v26 = qword_249AFA180[v28];
  }
  uint64_t v29 = sub_24994CBBC();
  uint64_t v30 = type metadata accessor for HalfOpenCircularInstrument();
  uint64_t v31 = *(void *)(a1 + *(int *)(v30 + 24));
  char v32 = *(unsigned char *)(a1 + *(int *)(v30 + 20));
  sub_2498D6084((uint64_t)v22, (uint64_t)v20, &qword_2696E0460);
  sub_2498D6084((uint64_t)v16, (uint64_t)v14, &qword_2696E0458);
  uint64_t v33 = (uint64_t)v20;
  long long v39 = v20;
  uint64_t v34 = (uint64_t)v14;
  uint64_t v35 = v40;
  sub_2498D6084(v33, v40, &qword_2696E0460);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0468);
  sub_2498D6084(v34, v35 + *(int *)(v36 + 48), &qword_2696E0458);
  uint64_t v37 = v35 + *(int *)(v36 + 64);
  *(void *)uint64_t v37 = v24;
  *(void *)(v37 + 8) = v26;
  *(void *)(v37 + 16) = v29;
  *(void *)(v37 + 24) = v31;
  *(unsigned char *)(v37 + 32) = v32;
  swift_bridgeObjectRetain_n();
  swift_retain();
  sub_2498D60E8((uint64_t)v16, &qword_2696E0458);
  sub_2498D60E8((uint64_t)v22, &qword_2696E0460);
  swift_bridgeObjectRelease();
  swift_release();
  sub_2498D60E8(v34, &qword_2696E0458);
  return sub_2498D60E8((uint64_t)v39, &qword_2696E0460);
}

uint64_t sub_24994D078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v91 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_249AEC268();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v85 = v3;
  uint64_t v86 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v77 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_249AEC088();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v83 = v6;
  uint64_t v84 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v80 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_249AEC548();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_249AEC368();
  uint64_t v13 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v15 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0508);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0510);
  uint64_t v81 = *(void *)(v19 - 8);
  uint64_t v82 = v19;
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0518);
  uint64_t v23 = v22 - 8;
  MEMORY[0x270FA5388](v22);
  uint64_t v78 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = a1;
  sub_249AEBC48();
  double v26 = fabs(v25);
  double v28 = fabs(v27);
  if (v28 >= v26) {
    double v28 = v26;
  }
  double v29 = v28 * -0.1;
  sub_249AEBC48();
  double v31 = fabs(v30);
  double v33 = fabs(v32);
  if (v33 >= v31) {
    double v33 = v31;
  }
  double v34 = (v33 + v29 + v29) * 0.5;
  __double2 v35 = __sincos_stret(0.523598776);
  double v36 = v34 + v34;
  CGFloat v37 = v35.__cosval * (v34 + v34);
  CGFloat v38 = v35.__sinval * v36;
  sub_249AEC378();
  sub_249AEC558();
  uint64_t v40 = v39;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F1A610], v9);
  long long v41 = &v18[*(int *)(v16 + 36)];
  uint64_t v42 = type metadata accessor for ScaledSystemFont();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(&v41[*(int *)(v42 + 32)], v12, v9);
  *(void *)long long v41 = 1;
  *(_OWORD *)(v41 + 8) = xmmword_249AFA190;
  *((void *)v41 + 3) = v40;
  uint64_t v43 = v76;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v76);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v43);
  long long v44 = v80;
  sub_249AEC078();
  sub_24994F7CC();
  sub_24994F8A8(&qword_2696E04B0, MEMORY[0x263F197E0]);
  uint64_t v45 = v83;
  sub_249AEC6B8();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v44, v45);
  sub_2498D60E8((uint64_t)v18, &qword_2696E0508);
  v92.origin.x = 0.0;
  v92.origin.y = 0.0;
  v92.size.width = v37;
  v92.size.height = v38;
  CGRectGetWidth(v92);
  v93.origin.x = 0.0;
  v93.origin.y = 0.0;
  v93.size.width = v37;
  v93.size.height = v38;
  CGRectGetHeight(v93);
  sub_249AECC28();
  sub_249AEBBE8();
  uint64_t v47 = v81;
  uint64_t v46 = v82;
  uint64_t v48 = (uint64_t)v78;
  (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v78, v21, v82);
  long long v49 = (_OWORD *)(v48 + *(int *)(v23 + 44));
  long long v50 = v89;
  *long long v49 = v88;
  v49[1] = v50;
  void v49[2] = v90;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v21, v46);
  long long v51 = v77;
  sub_249AEC2D8();
  uint64_t v52 = v85;
  sub_249AEBC58();
  CGFloat v54 = v53;
  CGFloat v56 = v55;
  CGFloat v58 = v57;
  CGFloat v60 = v59;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v86 + 8);
  v61(v51, v52);
  v94.origin.x = v54;
  v94.origin.y = v56;
  v94.size.width = v58;
  v94.size.height = v60;
  CGFloat MidX = CGRectGetMidX(v94);
  sub_249AEC2D8();
  sub_249AEBC58();
  CGFloat v64 = v63;
  CGFloat v66 = v65;
  CGFloat v68 = v67;
  CGFloat v70 = v69;
  v61(v51, v52);
  v95.origin.x = v64;
  v95.origin.y = v66;
  v95.size.width = v68;
  v95.size.height = v70;
  CGFloat MidY = CGRectGetMidY(v95);
  uint64_t v72 = v87;
  sub_2498D6084(v48, v87, &qword_2696E0518);
  uint64_t v73 = (CGFloat *)(v72 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E0460) + 36));
  *uint64_t v73 = MidX;
  v73[1] = MidY;
  return sub_2498D60E8(v48, &qword_2696E0518);
}

uint64_t sub_24994D7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v92 = *MEMORY[0x263EF8340];
  uint64_t v87 = sub_249AEC268();
  uint64_t v85 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v4 = (char *)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_249AEC088();
  uint64_t v82 = *(void *)(v5 - 8);
  uint64_t v83 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v81 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_249AEC548();
  uint64_t v7 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v9 = (char *)&v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0470);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0478);
  MEMORY[0x270FA5388](v76);
  uint64_t v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0480);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x270FA5388](v80);
  uint64_t v78 = (char *)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0488);
  MEMORY[0x270FA5388](v77);
  uint64_t v84 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0448);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0450);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = a1;
  sub_249AEBC48();
  double v24 = v23;
  double v26 = v25;
  sub_249AEC328();
  uint64_t v27 = sub_249AEC2F8();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v22, 1, v27);
  sub_2498D60E8((uint64_t)v22, &qword_2696E0450);
  if (a1 == 1)
  {
    double v28 = 0.486198863;
  }
  else
  {
    sub_249AEC348();
    uint64_t v29 = sub_249AEC308();
    BOOL v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v19, 1, v29) == 1;
    sub_2498D60E8((uint64_t)v19, &qword_2696E0448);
    double v28 = dbl_249AFA1A0[v30];
  }
  double v31 = fabs(v24);
  double v32 = fabs(v26);
  if (v31 >= v32) {
    double v31 = v32;
  }
  double v33 = v31 * 0.5;
  __double2 v34 = __sincos_stret(1.57079633 - v28);
  double v35 = v33 + v33;
  CGFloat v36 = (v33 + v33) * v34.__cosval;
  CGFloat v37 = v35 * v34.__sinval;
  *(void *)uint64_t v12 = sub_249AEC128();
  *((void *)v12 + 1) = 0;
  v12[16] = 1;
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0490);
  sub_24994E054(&v12[*(int *)(v38 + 44)], 0.0, 0.0, v36, v37);
  sub_249AEC558();
  uint64_t v40 = v39;
  uint64_t v41 = v75;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F1A610], v75);
  uint64_t v42 = &v14[*(int *)(v76 + 36)];
  uint64_t v43 = type metadata accessor for ScaledSystemFont();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(&v42[*(int *)(v43 + 32)], v9, v41);
  *(void *)uint64_t v42 = 1;
  *(_OWORD *)(v42 + 8) = xmmword_249AFA1B0;
  *((void *)v42 + 3) = v40;
  sub_2498D6084((uint64_t)v12, (uint64_t)v14, &qword_2696E0470);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v41);
  sub_2498D60E8((uint64_t)v12, &qword_2696E0470);
  long long v44 = v81;
  sub_249AEC078();
  sub_24994F658();
  sub_24994F8A8(&qword_2696E04B0, MEMORY[0x263F197E0]);
  uint64_t v45 = v78;
  uint64_t v46 = v83;
  sub_249AEC6B8();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v44, v46);
  sub_2498D60E8((uint64_t)v14, &qword_2696E0478);
  v93.origin.x = 0.0;
  v93.origin.y = 0.0;
  v93.size.width = v36;
  v93.size.height = v37;
  CGRectGetWidth(v93);
  v94.origin.x = 0.0;
  v94.origin.y = 0.0;
  v94.size.width = v36;
  v94.size.height = v37;
  CGRectGetHeight(v94);
  sub_249AECC28();
  sub_249AEBBE8();
  uint64_t v47 = v79;
  uint64_t v48 = (uint64_t)v84;
  uint64_t v49 = v80;
  (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v84, v45, v80);
  long long v50 = (_OWORD *)(v48 + *(int *)(v77 + 36));
  long long v51 = v90;
  *long long v50 = v89;
  v50[1] = v51;
  v50[2] = v91;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v49);
  sub_249AEC2D8();
  uint64_t v52 = v87;
  sub_249AEBC58();
  CGFloat v54 = v53;
  CGFloat v56 = v55;
  CGFloat v58 = v57;
  CGFloat v60 = v59;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v85 + 8);
  v61(v4, v52);
  v95.origin.x = v54;
  v95.origin.y = v56;
  v95.size.width = v58;
  v95.size.height = v60;
  CGFloat MidX = CGRectGetMidX(v95);
  sub_249AEC2D8();
  sub_249AEBC58();
  CGFloat v64 = v63;
  CGFloat v66 = v65;
  CGFloat v68 = v67;
  CGFloat v70 = v69;
  v61(v4, v52);
  v96.origin.x = v64;
  v96.origin.y = v66;
  v96.size.width = v68;
  v96.size.height = v70;
  CGFloat MidY = CGRectGetMidY(v96);
  uint64_t v72 = v88;
  sub_2498D6084(v48, v88, &qword_2696E0488);
  uint64_t v73 = (CGFloat *)(v72 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E0458) + 36));
  *uint64_t v73 = MidX;
  v73[1] = MidY;
  return sub_2498D60E8(v48, &qword_2696E0488);
}

uint64_t sub_24994E054@<X0>(void *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  CGFloat v36 = a1;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E04B8);
  MEMORY[0x270FA5388](v35);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E04C0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E04C8);
  MEMORY[0x270FA5388](v34);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0448);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E04D0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  double v24 = (char *)&v33 - v23;
  sub_249AEC348();
  uint64_t v25 = sub_249AEC308();
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v18, 1, v25);
  sub_2498D60E8((uint64_t)v18, &qword_2696E0448);
  if (v26 == 1)
  {
    sub_249AEC318();
    uint64_t v27 = &qword_2696E04B8;
    sub_2498D6084((uint64_t)v10, (uint64_t)v13, &qword_2696E04B8);
    swift_storeEnumTagMultiPayload();
    sub_2498D0A3C(&qword_2696E04D8, &qword_2696E04C8);
    sub_24994F728();
    sub_249AEC248();
    uint64_t v28 = (uint64_t)v10;
  }
  else
  {
    *(void *)uint64_t v15 = sub_249AEC028();
    *((void *)v15 + 1) = 0;
    v15[16] = 1;
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E04F8);
    sub_24994E454((uint64_t)&v15[*(int *)(v29 + 44)], a2, a3, a4, a5);
    uint64_t v27 = &qword_2696E04C8;
    sub_2498D6084((uint64_t)v15, (uint64_t)v13, &qword_2696E04C8);
    swift_storeEnumTagMultiPayload();
    sub_2498D0A3C(&qword_2696E04D8, &qword_2696E04C8);
    sub_24994F728();
    sub_249AEC248();
    uint64_t v28 = (uint64_t)v15;
  }
  sub_2498D60E8(v28, v27);
  sub_2498D6084((uint64_t)v24, (uint64_t)v22, &qword_2696E04D0);
  BOOL v30 = v36;
  *CGFloat v36 = 0;
  *((unsigned char *)v30 + 8) = 1;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E04F0);
  sub_2498D6084((uint64_t)v22, (uint64_t)v30 + *(int *)(v31 + 48), &qword_2696E04D0);
  sub_2498D60E8((uint64_t)v24, &qword_2696E04D0);
  return sub_2498D60E8((uint64_t)v22, &qword_2696E04D0);
}

uint64_t sub_24994E454@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0450);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0448);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v26 - v20;
  sub_249AEC348();
  v27.origin.x = a2;
  v27.origin.y = a3;
  v27.size.width = a4;
  v27.size.height = a5;
  CGFloat v22 = CGRectGetWidth(v27) * 0.25;
  sub_249AEC328();
  sub_2498D6084((uint64_t)v21, (uint64_t)v19, &qword_2696E0448);
  sub_2498D6084((uint64_t)v15, (uint64_t)v13, &qword_2696E0450);
  sub_2498D6084((uint64_t)v19, a1, &qword_2696E0448);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0500);
  uint64_t v24 = a1 + *(int *)(v23 + 48);
  *(CGFloat *)uint64_t v24 = v22;
  *(unsigned char *)(v24 + 8) = 0;
  sub_2498D6084((uint64_t)v13, a1 + *(int *)(v23 + 64), &qword_2696E0450);
  sub_2498D60E8((uint64_t)v15, &qword_2696E0450);
  sub_2498D60E8((uint64_t)v21, &qword_2696E0448);
  sub_2498D60E8((uint64_t)v13, &qword_2696E0450);
  return sub_2498D60E8((uint64_t)v19, &qword_2696E0448);
}

uint64_t sub_24994E648@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](a1 - 8);
  sub_24994FD98(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for HalfOpenCircularInstrument);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_24994E858((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *(void *)a2 = sub_24994E8BC;
  *(void *)(a2 + 8) = v7;
  *(void *)(a2 + 16) = 0x3FF0000000000000;
  *(_WORD *)(a2 + 24) = 0;
  return result;
}

uint64_t sub_24994E754()
{
  uint64_t v1 = *(void *)(type metadata accessor for HalfOpenCircularInstrument() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_249AEC398();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();
  j__swift_release();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_24994E858(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HalfOpenCircularInstrument();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24994E8BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for HalfOpenCircularInstrument() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_24994CC80(a1, v6, a2);
}

uint64_t sub_24994E93C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0560);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v35[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_249AEBC48();
  double v8 = v7;
  double v10 = v9;
  sub_249AEBC48();
  double v12 = v11;
  double v14 = v13;
  double v16 = *(double *)v1;
  double v15 = *(double *)(v1 + 8);
  double v17 = v15 * 0.5 + 1.57079633;
  double v18 = v17 + 6.28318531 - v15;
  int v19 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v20 = *(void *)(v1 + 24);
  if (v20)
  {
    swift_bridgeObjectRetain();
    sub_249AECD18();
    MEMORY[0x24C5ACED0](v35, v20);
    uint64_t v21 = sub_249AEBBF8();
  }
  else
  {
    uint64_t v21 = *(void *)(v2 + 16);
    swift_retain();
  }
  double v22 = v16 * (v18 - v17);
  double v23 = v17 + v22;
  if (v19) {
    double v24 = v17 + v22;
  }
  else {
    double v24 = v18;
  }
  double v25 = fabs(v12);
  double v26 = fabs(v14);
  if (v25 >= v26) {
    double v25 = v26;
  }
  double v27 = fabs(v8);
  double v28 = fabs(v10);
  if (v27 >= v28) {
    double v27 = v28;
  }
  double v29 = v27 * 0.1;
  double v30 = (v25 - v27 * 0.1) * 0.5;
  *uint64_t v6 = sub_249AECC28();
  v6[1] = v31;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0568);
  sub_24994EB34(v2, v21, (uint64_t)v6 + *(int *)(v32 + 44), v29, v30, v17, v18, v24, v23);
  swift_release();
  sub_2498D6084((uint64_t)v6, a1, &qword_2696E0560);
  return sub_2498D60E8((uint64_t)v6, &qword_2696E0560);
}

uint64_t sub_24994EB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>, double a6@<D2>, double a7@<D3>, double a8@<D4>, double a9@<D5>)
{
  uint64_t v18 = sub_249AEBDE8();
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)&v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_249AECC98();
  uint64_t v71 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  double v23 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0570);
  uint64_t v72 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  double v26 = (char *)&v65 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0578);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v73 = (uint64_t)&v65 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v65 - v30;
  if (*(unsigned char *)(a1 + 32))
  {
    double v32 = 0.0;
    if (*(double *)a1 > 0.0) {
      double v32 = 1.0;
    }
    float v33 = v32;
    *(void *)&long long v76 = a2;
    *((float *)&v76 + 2) = v33;
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0588);
    sub_2498D0A3C(&qword_2696E0590, &qword_2696E0588);
    uint64_t v34 = sub_249AEBBF8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v72 + 56))(v31, 1, 1, v24);
    uint64_t v35 = 0x3FD6666666666666;
    uint64_t v36 = 256;
    uint64_t v37 = a2;
    double v38 = a6;
    double v39 = a5;
    double v40 = a4;
    uint64_t v41 = v34;
  }
  else
  {
    swift_retain();
    double v65 = a4 / -6.0;
    uint64_t v66 = sub_249AEC888();
    sub_249AEBB38();
    uint64_t v42 = v86;
    double v43 = a8;
    uint64_t v44 = v88;
    double v67 = v23;
    uint64_t v45 = v89;
    uint64_t v69 = v89;
    double v46 = a5;
    double v47 = a9;
    double v48 = a6;
    uint64_t v49 = v90;
    uint64_t v50 = sub_249AECC28();
    uint64_t v70 = a2;
    uint64_t v51 = v21;
    uint64_t v53 = v52;
    uint64_t v68 = v24;
    sub_249AECC28();
    sub_249AEBBE8();
    char v75 = v92;
    char v74 = v94;
    *(double *)&long long v76 = v65;
    *((void *)&v76 + 1) = v42;
    *(void *)&long long v77 = v87;
    *((void *)&v77 + 1) = v44;
    a8 = v43;
    a7 = 0.0;
    *(void *)&long long v78 = v45;
    *((void *)&v78 + 1) = v49;
    a6 = v48;
    *(void *)&long long v79 = v66;
    WORD4(v79) = 256;
    *(void *)&long long v80 = v50;
    *((void *)&v80 + 1) = v53;
    *(void *)&long long v81 = v91;
    BYTE8(v81) = v92;
    *(void *)&long long v82 = v93;
    BYTE8(v82) = v94;
    long long v83 = v95;
    *(double *)&long long v84 = v47;
    *((double *)&v84 + 1) = v46;
    a5 = v46;
    uint64_t v85 = 0;
    uint64_t v54 = v71;
    double v55 = v67;
    (*(void (**)(char *, void, uint64_t))(v71 + 104))(v67, *MEMORY[0x263F1B970], v51);
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v20, v55, v51);
    uint64_t v56 = v68;
    sub_24994FD98((uint64_t)v20, (uint64_t)&v26[*(int *)(v68 + 36)], MEMORY[0x263F190D8]);
    long long v57 = v83;
    *((_OWORD *)v26 + 6) = v82;
    *((_OWORD *)v26 + 7) = v57;
    *((_OWORD *)v26 + 8) = v84;
    *((void *)v26 + 18) = v85;
    long long v58 = v79;
    *((_OWORD *)v26 + 2) = v78;
    *((_OWORD *)v26 + 3) = v58;
    long long v59 = v81;
    *((_OWORD *)v26 + 4) = v80;
    *((_OWORD *)v26 + 5) = v59;
    long long v60 = v77;
    *(_OWORD *)double v26 = v76;
    *((_OWORD *)v26 + 1) = v60;
    sub_24994FE00((uint64_t)&v76);
    sub_24994FE38((uint64_t)v20);
    uint64_t v61 = v51;
    uint64_t v41 = v70;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v61);
    swift_release();
    swift_bridgeObjectRelease();
    sub_249882788((uint64_t)v26, (uint64_t)v31, &qword_2696E0570);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v31, 0, 1, v56);
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    double v38 = 0.0;
    double v39 = 0.0;
    double v40 = 0.0;
  }
  uint64_t v62 = v73;
  sub_2498D6084((uint64_t)v31, v73, &qword_2696E0578);
  *(double *)a3 = v40;
  *(double *)(a3 + 8) = v39;
  *(double *)(a3 + 16) = v38;
  *(double *)(a3 + 24) = a7;
  *(void *)(a3 + 32) = v37;
  *(void *)(a3 + 40) = v36;
  *(void *)(a3 + 48) = v35;
  *(double *)(a3 + 56) = a4;
  *(double *)(a3 + 64) = a5;
  *(double *)(a3 + 72) = a6;
  *(double *)(a3 + 80) = a8;
  *(void *)(a3 + 88) = v41;
  *(_WORD *)(a3 + 96) = 256;
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0580);
  sub_2498D6084(v62, a3 + *(int *)(v63 + 64), &qword_2696E0578);
  swift_retain();
  swift_retain();
  sub_2498D60E8((uint64_t)v31, &qword_2696E0578);
  sub_2498D60E8(v62, &qword_2696E0578);
  swift_release();
  return swift_release();
}

uint64_t sub_24994F128@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  long long v6 = *(_OWORD *)(v1 + 16);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = swift_allocObject();
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)v1;
  *(_OWORD *)(v3 + 32) = v4;
  *(unsigned char *)(v3 + 48) = *(unsigned char *)(v1 + 32);
  uint64_t v8 = v6;
  sub_249882788((uint64_t)&v6 + 8, (uint64_t)v9, &qword_2696E0558);
  *a1 = sub_24994FD48;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v3;
  sub_24994FD6C((uint64_t)&v8);
  return sub_2498FB45C((uint64_t)v9);
}

double sub_24994F1D4@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_249AEC618();
  v28.origin.x = a2;
  v28.origin.y = a3;
  v28.size.width = a4;
  v28.size.height = a5;
  CGRectGetMidX(v28);
  v29.origin.x = a2;
  v29.origin.y = a3;
  v29.size.width = a4;
  v29.size.height = a5;
  CGRectGetMidY(v29);
  uint64_t v21 = 0x3FF0000000000000;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v24 = 0x3FF0000000000000;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_249AEC5E8();
  v19[0] = v12;
  v19[1] = v13;
  char v20 = v14;
  sub_249950008((uint64_t)v19, (uint64_t)v27);
  sub_2499500A8((uint64_t)v27, (void (*)(void, void, void, void, void))sub_249950064);
  sub_249AEBB38();
  sub_249AEC5B8();
  sub_24995007C((uint64_t)v15);
  sub_2499500A8((uint64_t)v19, (void (*)(void, void, void, void, void))sub_2499500E8);
  sub_2499500A8((uint64_t)v19, (void (*)(void, void, void, void, void))sub_2499500E8);
  double result = *(double *)&v16;
  long long v11 = v17;
  *(_OWORD *)a1 = v16;
  *(_OWORD *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 32) = v18;
  return result;
}

double sub_24994F364@<D0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  sub_24994F1D4((uint64_t)v8, a2, a3, a4, a5);
  double result = *(double *)v8;
  long long v7 = v8[1];
  *(_OWORD *)a1 = v8[0];
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v9;
  return result;
}

uint64_t sub_24994F3B8@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  sub_249AEC7F8();
  uint64_t v6 = v5;
  uint64_t result = sub_249AEC7F8();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v8;
  return result;
}

uint64_t sub_24994F408(_OWORD *a1)
{
  *uint64_t v1 = *a1;
  sub_249AEC808();
  return sub_249AEC808();
}

void (*sub_24994F450(void *a1))(_OWORD **a1)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  sub_249AEC7F8();
  uint64_t v7 = v6;
  sub_249AEC7F8();
  *uint64_t v3 = v4;
  v3[1] = v5;
  v3[2] = v7;
  v3[3] = v8;
  return sub_24994F4D8;
}

void sub_24994F4D8(_OWORD **a1)
{
  uint64_t v1 = *a1;
  *(_OWORD *)*((void *)*a1 + 4) = **a1;
  sub_249AEC808();
  sub_249AEC808();

  free(v1);
}

uint64_t sub_24994F544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_249950100();

  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_24994F5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_249950100();

  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_24994F60C(uint64_t a1)
{
  unint64_t v2 = sub_249950100();

  return MEMORY[0x270F047E0](a1, v2);
}

unint64_t sub_24994F658()
{
  unint64_t result = qword_2696E0498;
  if (!qword_2696E0498)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0478);
    sub_2498D0A3C(&qword_2696E04A0, &qword_2696E0470);
    sub_24994F8A8(&qword_2696E04A8, (void (*)(uint64_t))type metadata accessor for ScaledSystemFont);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0498);
  }
  return result;
}

unint64_t sub_24994F728()
{
  unint64_t result = qword_2696E04E0;
  if (!qword_2696E04E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E04B8);
    sub_24994F8A8(&qword_2696E04E8, MEMORY[0x263F19FF0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E04E0);
  }
  return result;
}

unint64_t sub_24994F7CC()
{
  unint64_t result = qword_2696E0520;
  if (!qword_2696E0520)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0508);
    sub_24994F8A8(&qword_2696E0528, MEMORY[0x263F1A000]);
    sub_24994F8A8(&qword_2696E04A8, (void (*)(uint64_t))type metadata accessor for ScaledSystemFont);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0520);
  }
  return result;
}

uint64_t sub_24994F8A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for RingOverlay()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RingOverlay(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for RingOverlay(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for RingOverlay(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for RingOverlay(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RingOverlay(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RingOverlay()
{
  return &type metadata for RingOverlay;
}

unsigned char *storeEnumTagSinglePayload for HalfOpenCircularInstrument.IndicatorStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24994FBB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HalfOpenCircularInstrument.IndicatorStyle()
{
  return &type metadata for HalfOpenCircularInstrument.IndicatorStyle;
}

unint64_t sub_24994FBF4()
{
  unint64_t result = qword_2696E0530;
  if (!qword_2696E0530)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0538);
    sub_2498D0A3C(&qword_2696E0540, &qword_2696E0548);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0530);
  }
  return result;
}

unint64_t sub_24994FC98()
{
  unint64_t result = qword_2696E0550;
  if (!qword_2696E0550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0550);
  }
  return result;
}

uint64_t sub_24994FCEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_24994FD08()
{
  swift_release();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 49, 7);
}

uint64_t sub_24994FD48@<X0>(uint64_t a1@<X8>)
{
  return sub_24994E93C(a1);
}

uint64_t sub_24994FD6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24994FD98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24994FE00(uint64_t a1)
{
  return a1;
}

uint64_t sub_24994FE38(uint64_t a1)
{
  uint64_t v2 = sub_249AEBDE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for OpenRing()
{
  return &type metadata for OpenRing;
}

uint64_t sub_24994FEA4()
{
  return sub_2498D0A3C(&qword_2696E0598, &qword_2696E05A0);
}

uint64_t sub_24994FEE0()
{
  return sub_2498D0A3C(&qword_2696E05A8, &qword_2696E05B0);
}

uint64_t sub_24994FF1C()
{
  return sub_2498D0A3C(&qword_2696E05B8, &qword_2696E05C0);
}

unint64_t sub_24994FF5C()
{
  unint64_t result = qword_2696E05C8;
  if (!qword_2696E05C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E05C8);
  }
  return result;
}

unint64_t sub_24994FFB4()
{
  unint64_t result = qword_2696E05D0;
  if (!qword_2696E05D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E05D0);
  }
  return result;
}

uint64_t sub_249950008(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_249950064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24995007C(uint64_t a1)
{
  return a1;
}

uint64_t sub_2499500A8(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_2499500E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

unint64_t sub_249950100()
{
  unint64_t result = qword_2696E05D8[0];
  if (!qword_2696E05D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2696E05D8);
  }
  return result;
}

Swift::Double_optional __swiftcall Double.doubleValue()()
{
  Swift::Bool v1 = v0;
  LOBYTE(result.value) = v0;
  result.is_nil = v1;
  return result;
}

uint64_t sub_249950160()
{
  return *(void *)v0;
}

Swift::Double_optional __swiftcall Measurement.doubleValue()()
{
  sub_249AEB5E8();
  Swift::Bool v1 = LOBYTE(v0);
  result.value = v0;
  result.is_nil = v1;
  return result;
}

double sub_24995018C()
{
  *(void *)&double result = (unint64_t)Measurement.doubleValue()();
  return result;
}

Swift::Double_optional __swiftcall String.doubleValue()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  if ((v1 & 0x1000000000000000) != 0 || !(v1 & 0x2000000000000000 | v0 & 0x1000000000000000))
  {
    swift_bridgeObjectRetain();
    sub_249AEDA48();
    swift_bridgeObjectRelease();
    char v6 = v11;
  }
  else
  {
    ((void (*)())MEMORY[0x270FA5388])();
    if ((v2 & 0x2000000000000000) != 0)
    {
      switch((char)v3)
      {
        case 0:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
          swift_bridgeObjectRetain();
          goto LABEL_9;
        default:
          swift_bridgeObjectRetain();
          char v9 = (unsigned char *)_swift_stdlib_strtod_clocale();
          if (v9) {
            char v6 = *v9 == 0;
          }
          else {
LABEL_9:
          }
            char v6 = 0;
          swift_bridgeObjectRelease();
          break;
      }
    }
    else
    {
      if ((v3 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (v2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_249AEDB48();
        uint64_t v5 = v10;
      }
      swift_bridgeObjectRetain();
      char v6 = sub_249951338(v4, v5, (void (*)(uint64_t *__return_ptr))sub_2499513B0);
      swift_bridgeObjectRelease();
    }
  }
  if (v6) {
    Swift::Bool v8 = 0;
  }
  else {
    Swift::Bool v8 = 0;
  }
  result.value = v7;
  result.is_nil = v8;
  return result;
}

uint64_t sub_24995040C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v5 = 0;
  v4[2] = &v5;
  swift_bridgeObjectRetain();
  LOBYTE(v1) = sub_249951220((uint64_t)sub_249951398, (uint64_t)v4, v1, v2);
  swift_bridgeObjectRelease();
  if (v1) {
    return v5;
  }
  else {
    return 0;
  }
}

Swift::Double_optional __swiftcall Bool.doubleValue()()
{
  Swift::Bool v0 = 0;
  result.is_nil = v0;
  return result;
}

uint64_t sub_2499504AC()
{
  if (*v0) {
    return 0x3FF0000000000000;
  }
  else {
    return 0;
  }
}

Swift::Double_optional __swiftcall Int.doubleValue()()
{
  double v1 = (double)v0;
  double v2 = (double)v0;
  result.value = v1;
  result.is_nil = LOBYTE(v2);
  return result;
}

double sub_2499504D4()
{
  return (double)*v0;
}

Swift::Double_optional __swiftcall UInt16.doubleValue()()
{
  double v1 = (double)v0;
  *(double *)&BOOL v2 = v1;
  result.value = v1;
  result.is_nil = v2;
  return result;
}

double sub_2499504FC(double a1)
{
  LOWORD(a1) = *v1;
  return (double)*(unint64_t *)&a1;
}

Swift::Double_optional __swiftcall UInt8.doubleValue()()
{
  double v1 = (double)v0;
  *(double *)&BOOL v2 = v1;
  result.value = v1;
  result.is_nil = v2;
  return result;
}

double sub_249950524(double a1)
{
  LOBYTE(a1) = *v1;
  return (double)*(unint64_t *)&a1;
}

uint64_t Optional<A>.doubleValue()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  double v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v9, v3);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(v3, a2);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v12;
}

uint64_t sub_249950700(uint64_t a1, uint64_t a2)
{
  return Optional<A>.doubleValue()(a1, *(void *)(a2 - 8));
}

void InstrumentDataType.identifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t InstrumentDataType.type.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t InstrumentDataType.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 112));
}

uint64_t InstrumentDataType.__allocating_init(identifier:type:defaultValue:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  double v7 = *(void **)v6;
  *(unsigned char *)(v6 + 16) = *a1;
  uint64_t v8 = v7[11];
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = v8;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7[10] - 8) + 32))(v6 + v7[14], a3);
  return v6;
}

uint64_t InstrumentDataType.init(identifier:type:defaultValue:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)v3;
  *(unsigned char *)(v3 + 16) = *a1;
  uint64_t v5 = v4[11];
  *(void *)(v3 + 24) = a2;
  *(void *)(v3 + 32) = v5;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4[10] - 8) + 32))(v3 + v4[14], a3);
  return v3;
}

uint64_t InstrumentDataType.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  return v0;
}

uint64_t InstrumentDataType.__deallocating_deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));

  return swift_deallocClassInstance();
}

uint64_t InstrumentDataRange.bounds.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 152);
  uint64_t v4 = sub_249AED078();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t InstrumentDataRange.__allocating_init(identifier:type:defaultValue:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249950E7C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))InstrumentDataRange.init(identifier:type:defaultValue:in:));
}

uint64_t InstrumentDataRange.init(identifier:type:defaultValue:in:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v8 = *a1;
  uint64_t v9 = v4 + *(void *)(*(void *)v4 + 152);
  uint64_t v10 = sub_249AED078();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, a4, v10);
  uint64_t v11 = *(void **)v4;
  *(unsigned char *)(v4 + 16) = v8;
  uint64_t v12 = v11[11];
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v12;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11[10] - 8) + 32))(v4 + v11[14], a3);
  return v4;
}

void InstrumentDataRange.__allocating_init(identifier:type:defaultValue:)()
{
}

uint64_t InstrumentDataRange.init(identifier:type:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24995103C(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void))sub_2499513C8);
}

uint64_t sub_249950C54()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 152);
  uint64_t v2 = sub_249AED078();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t InstrumentDataRange.deinit()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 152);
  uint64_t v2 = sub_249AED078();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t InstrumentDataRange.__deallocating_deinit()
{
  return sub_2499511C4((void (*)(void))InstrumentDataRange.deinit);
}

uint64_t InstrumentDataCollection.allValues.getter@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v1 + 128) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 152));
}

uint64_t InstrumentDataCollection.__allocating_init(identifier:type:defaultValue:allValues:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_249950E7C(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))InstrumentDataCollection.init(identifier:type:defaultValue:allValues:));
}

uint64_t sub_249950E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v10 = swift_allocObject();
  a5(a1, a2, a3, a4);
  return v10;
}

uint64_t InstrumentDataCollection.init(identifier:type:defaultValue:allValues:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = *a1;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v4 + 128) - 8) + 32))(v4 + *(void *)(*(void *)v4 + 152), a4);
  char v8 = *(void **)v4;
  *(unsigned char *)(v4 + 16) = v7;
  uint64_t v9 = v8[11];
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v9;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8[10] - 8) + 32))(v4 + v8[14], a3);
  return v4;
}

void InstrumentDataCollection.__allocating_init(identifier:type:defaultValue:)()
{
}

uint64_t InstrumentDataCollection.init(identifier:type:defaultValue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24995103C(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void))sub_2499513F8);
}

uint64_t sub_24995103C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void))
{
  return a4(a1, *(void *)(*(void *)v4 + 128), *(void *)(*(void *)v4 + 136), *(void *)(*(void *)v4 + 144));
}

uint64_t sub_249951088()
{
  return (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 128) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 152));
}

uint64_t *InstrumentDataCollection.deinit()
{
  uint64_t v1 = *v0;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 128) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 152));
  return v0;
}

uint64_t InstrumentDataCollection.__deallocating_deinit()
{
  return sub_2499511C4((void (*)(void))InstrumentDataCollection.deinit);
}

uint64_t sub_2499511C4(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_249951220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *(*v7)(uint64_t *__return_ptr, void *);
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  void v12[2];
  uint64_t v13;

  if ((a4 & 0x1000000000000000) != 0 || !(a4 & 0x2000000000000000 | a3 & 0x1000000000000000))
  {
    uint64_t v10 = sub_249AEDA48();
    if (!v4) {
      uint64_t v10 = BYTE1(v13);
    }
  }
  else
  {
    MEMORY[0x270FA5388](a1);
    if ((v6 & 0x2000000000000000) != 0)
    {
      v12[0] = v5;
      v12[1] = v6 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v10 = v7(&v13, v12);
      if (!v4) {
        uint64_t v10 = v13;
      }
    }
    else
    {
      if ((v5 & 0x1000000000000000) != 0)
      {
        char v8 = (v6 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v9 = v5 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        char v8 = sub_249AEDB48();
      }
      uint64_t v10 = sub_249951338(v8, v9, (void (*)(uint64_t *__return_ptr))sub_2499513B0);
    }
  }
  return v10 & 1;
}

uint64_t sub_249951338(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

unsigned char *sub_249951398@<X0>(unsigned char *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_249951700(a1, a2);
}

void *sub_2499513B0@<X0>(unsigned char *a1@<X8>)
{
  return sub_249951770(a1);
}

void sub_2499513C8()
{
}

void sub_2499513F8()
{
}

uint64_t dispatch thunk of FloatingPointConvertible.doubleValue()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_249951460()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for InstrumentDataType()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for InstrumentDataType(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InstrumentDataType);
}

uint64_t dispatch thunk of InstrumentDataType.__allocating_init(identifier:type:defaultValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_24995154C()
{
  uint64_t result = sub_249AED078();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for InstrumentDataRange()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for InstrumentDataRange(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InstrumentDataRange);
}

uint64_t dispatch thunk of InstrumentDataRange.__allocating_init(identifier:type:defaultValue:in:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_249951628()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for InstrumentDataCollection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for InstrumentDataCollection(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InstrumentDataCollection);
}

uint64_t dispatch thunk of InstrumentDataCollection.__allocating_init(identifier:type:defaultValue:allValues:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

unsigned char *sub_249951700@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  v7 = v6 && (uint64_t result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_249951770@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_2499517B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for HashableWeakBox();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v6 = MEMORY[0x24C5B0220](v8);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  *a2 = v6;
  return result;
}

void HashableWeakBox.base.getter()
{
}

uint64_t HashableWeakBox.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(a2 + 8) = a1;
  return result;
}

uint64_t HashableWeakBox.hash(into:)()
{
  return sub_249AEE348();
}

BOOL static HashableWeakBox.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return *(void *)(a1 + 8) == *(void *)(a2 + 8);
}

uint64_t HashableWeakBox.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_24995194C()
{
  return sub_249AEE388();
}

uint64_t sub_249951988()
{
  return swift_getWitnessTable();
}

uint64_t sub_2499519AC()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_2499519BC()
{
  return 8;
}

void *sub_2499519C8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2499519D8(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t sub_249951A04(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t sub_249951A30(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t sub_249951A5C(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t sub_249951A88(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 != 1 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2);
  }
  if (*(void *)(a1 + 8)) {
    int v3 = -1;
  }
  else {
    int v3 = 0;
  }
  return (v3 + 1);
}

uint64_t sub_249951ACC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 1)
  {
    *(void *)uint64_t result = a2 - 2;
    *(void *)(result + 8) = 0;
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 2) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for HashableWeakBox()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_249951B20@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  char v12 = *((unsigned char *)v2 + 64);
  uint64_t v14 = v2[9];
  uint64_t v13 = v2[10];
  uint64_t v15 = v2[11];
  char v16 = *((unsigned char *)v2 + 96);
  uint64_t v17 = v2[13];
  switch(*((unsigned char *)a1 + 16))
  {
    case 1:
      uint64_t v28 = v5;
      uint64_t v29 = v4;
      uint64_t v30 = v7;
      uint64_t v31 = v6;
      uint64_t v32 = v9;
      uint64_t v33 = v8;
      uint64_t v34 = v11;
      uint64_t v35 = v10;
      char v36 = v12;
      uint64_t v37 = v14;
      uint64_t v38 = v13;
      uint64_t v39 = v15;
      char v40 = v16;
      uint64_t v41 = v17;
      v43[0] = v3;
      uint64_t result = sub_249951DBC(v43, a2);
      break;
    case 2:
      uint64_t v28 = v5;
      uint64_t v29 = v4;
      uint64_t v30 = v7;
      uint64_t v31 = v6;
      uint64_t v32 = v9;
      uint64_t v33 = v8;
      uint64_t v34 = v11;
      uint64_t v35 = v10;
      char v36 = v12;
      uint64_t v37 = v14;
      uint64_t v38 = v13;
      uint64_t v39 = v15;
      char v40 = v16;
      uint64_t v41 = v17;
      v43[0] = v3;
      uint64_t result = sub_249952278(v43, a2);
      break;
    case 3:
      uint64_t v20 = sub_249AEC898();
      static GradientColor.singleColor(_:)(v20, a2);
      uint64_t result = swift_release();
      break;
    case 4:
      uint64_t v23 = v14;
      uint64_t v24 = v13;
      uint64_t v25 = v15;
      char v26 = v16;
      uint64_t v27 = *a1;
      uint64_t v21 = a1[1];
      swift_beginAccess();
      uint64_t v22 = (void (*)(void *, uint64_t *))off_2696E31B0;
      if (!off_2696E31B0)
      {
        sub_249AEDC58();
        __break(1u);
        JUMPOUT(0x249951DA8);
      }
      v42[0] = v27;
      v42[1] = v21;
      uint64_t v28 = v5;
      uint64_t v29 = v4;
      uint64_t v30 = v7;
      uint64_t v31 = v6;
      uint64_t v32 = v9;
      uint64_t v33 = v8;
      uint64_t v34 = v11;
      uint64_t v35 = v10;
      char v36 = v12;
      uint64_t v37 = v23;
      uint64_t v38 = v24;
      uint64_t v39 = v25;
      char v40 = v26;
      uint64_t v41 = v17;
      swift_retain();
      v22(v42, &v28);
      uint64_t result = sub_2498B9AB8((uint64_t)v22);
      break;
    default:
      uint64_t v28 = v5;
      uint64_t v29 = v4;
      uint64_t v30 = v7;
      uint64_t v31 = v6;
      uint64_t v32 = v9;
      uint64_t v33 = v8;
      uint64_t v34 = v11;
      uint64_t v35 = v10;
      char v36 = v12;
      uint64_t v37 = v14;
      uint64_t v38 = v13;
      uint64_t v39 = v15;
      char v40 = v16;
      uint64_t v41 = v17;
      v43[0] = v3;
      uint64_t result = sub_2499526C8(v43, a2);
      break;
  }
  return result;
}

uint64_t sub_249951DBC@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  char v12 = *((unsigned char *)v2 + 64);
  uint64_t v14 = v2[9];
  uint64_t v13 = v2[10];
  uint64_t v15 = v2[11];
  char v16 = *((unsigned char *)v2 + 96);
  uint64_t v17 = v2[13];
  switch(v4)
  {
    case 1:
    case 3:
    case 5:
    case 7:
    case 15:
    case 34:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v25 = 1;
      char v26 = 0;
      uint64_t v18 = 4;
      goto LABEL_24;
    case 8:
    case 10:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v20 = 5;
      goto LABEL_8;
    case 9:
    case 25:
    case 35:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v19 = 5;
      goto LABEL_10;
    case 11:
    case 30:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v19 = 4;
      goto LABEL_10;
    case 12:
    case 13:
    case 14:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v20 = 6;
LABEL_8:
      uint64_t v25 = v20;
      char v26 = 1;
      uint64_t v18 = 1;
      goto LABEL_24;
    case 16:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v25 = 4;
      char v26 = 0;
      goto LABEL_15;
    case 17:
    case 18:
    case 19:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v25 = 6;
      char v26 = 1;
LABEL_15:
      uint64_t v18 = 5;
      goto LABEL_24;
    case 20:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v25 = 6;
      char v26 = 1;
      uint64_t v18 = 2;
      goto LABEL_24;
    case 21:
    case 23:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v25 = 0;
      goto LABEL_22;
    case 22:
    case 24:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v21 = 2;
      goto LABEL_21;
    case 26:
    case 27:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v25 = 1;
      char v26 = 1;
      goto LABEL_23;
    case 28:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v21 = 3;
      goto LABEL_21;
    case 29:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v22 = 3;
      goto LABEL_28;
    case 31:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v25 = 4;
      char v26 = 0;
      goto LABEL_29;
    case 32:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v21 = 4;
LABEL_21:
      uint64_t v25 = v21;
LABEL_22:
      char v26 = 1;
      goto LABEL_23;
    case 33:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v22 = 4;
LABEL_28:
      uint64_t v25 = v22;
      char v26 = 1;
LABEL_29:
      uint64_t v18 = 3;
      goto LABEL_24;
    default:
      uint64_t v27 = *v2;
      uint64_t v28 = v5;
      uint64_t v29 = v7;
      uint64_t v30 = v6;
      uint64_t v31 = v9;
      uint64_t v32 = v8;
      uint64_t v33 = v11;
      uint64_t v34 = v10;
      char v35 = v12;
      uint64_t v36 = v14;
      uint64_t v37 = v13;
      uint64_t v38 = v15;
      char v39 = v16;
      uint64_t v40 = v17;
      uint64_t v19 = 1;
LABEL_10:
      uint64_t v25 = v19;
      char v26 = 0;
LABEL_23:
      uint64_t v18 = 0;
LABEL_24:
      sub_249896394((uint64_t)&v25, v18);
      uint64_t v23 = swift_retain();
      static GradientColor.singleColor(_:)(v23, a2);
      return swift_release();
  }
}

uint64_t sub_249952278@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  char v12 = *((unsigned char *)v2 + 64);
  uint64_t v14 = v2[9];
  uint64_t v13 = v2[10];
  uint64_t v15 = v2[11];
  char v16 = *((unsigned char *)v2 + 96);
  uint64_t v17 = v2[13];
  switch(v4)
  {
    case 1:
    case 24:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v27 = 1;
      char v28 = 0;
      uint64_t v19 = 4;
      goto LABEL_27;
    case 2:
    case 4:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v20 = 5;
      goto LABEL_9;
    case 3:
    case 15:
    case 25:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v18 = 5;
      goto LABEL_11;
    case 5:
    case 16:
    case 17:
    case 20:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v18 = 4;
      goto LABEL_11;
    case 6:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v22 = 4;
      goto LABEL_14;
    case 7:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v22 = 3;
LABEL_14:
      uint64_t v27 = v22;
      char v28 = 0;
      uint64_t v19 = 2;
      goto LABEL_27;
    case 8:
    case 10:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v21 = 4;
      goto LABEL_16;
    case 9:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v21 = 3;
LABEL_16:
      uint64_t v27 = v21;
      char v28 = 0;
      uint64_t v19 = 5;
      goto LABEL_27;
    case 11:
    case 13:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v27 = 0;
      goto LABEL_22;
    case 12:
    case 14:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v20 = 2;
LABEL_9:
      uint64_t v27 = v20;
      char v28 = 1;
      uint64_t v19 = 1;
      goto LABEL_27;
    case 18:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v23 = 3;
      goto LABEL_21;
    case 19:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v24 = 3;
      goto LABEL_25;
    case 21:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v27 = 4;
      char v28 = 0;
      goto LABEL_26;
    case 22:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v23 = 4;
LABEL_21:
      uint64_t v27 = v23;
LABEL_22:
      char v28 = 1;
      goto LABEL_23;
    case 23:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v24 = 4;
LABEL_25:
      uint64_t v27 = v24;
      char v28 = 1;
LABEL_26:
      uint64_t v19 = 3;
      goto LABEL_27;
    default:
      uint64_t v29 = *v2;
      uint64_t v30 = v5;
      uint64_t v31 = v7;
      uint64_t v32 = v6;
      uint64_t v33 = v9;
      uint64_t v34 = v8;
      uint64_t v35 = v11;
      uint64_t v36 = v10;
      char v37 = v12;
      uint64_t v38 = v14;
      uint64_t v39 = v13;
      uint64_t v40 = v15;
      char v41 = v16;
      uint64_t v42 = v17;
      uint64_t v18 = 1;
LABEL_11:
      uint64_t v27 = v18;
      char v28 = 0;
LABEL_23:
      uint64_t v19 = 0;
LABEL_27:
      sub_249896394((uint64_t)&v27, v19);
      uint64_t v25 = swift_retain();
      static GradientColor.singleColor(_:)(v25, a2);
      return swift_release();
  }
}

uint64_t sub_2499526C8@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  char v12 = *((unsigned char *)v2 + 64);
  uint64_t v14 = v2[9];
  uint64_t v13 = v2[10];
  uint64_t v15 = v2[11];
  char v16 = *((unsigned char *)v2 + 96);
  uint64_t v17 = v2[13];
  switch(v4)
  {
    case 1:
    case 26:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v20 = 1;
      goto LABEL_43;
    case 2:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v18 = 2;
      goto LABEL_26;
    case 3:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v20 = 2;
      goto LABEL_43;
    case 4:
    case 6:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v21 = 5;
      goto LABEL_16;
    case 5:
    case 17:
    case 27:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v18 = 5;
      goto LABEL_26;
    case 7:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v28 = 4;
      char v29 = 0;
      goto LABEL_17;
    case 8:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v21 = 6;
LABEL_16:
      uint64_t v28 = v21;
      char v29 = 1;
LABEL_17:
      uint64_t v22 = 1;
      goto LABEL_32;
    case 9:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v28 = 4;
      char v29 = 0;
      uint64_t v22 = 2;
      goto LABEL_32;
    case 10:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v23 = 4;
      goto LABEL_22;
    case 11:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v23 = 3;
      goto LABEL_22;
    case 12:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v23 = 2;
LABEL_22:
      uint64_t v28 = v23;
      char v29 = 0;
      uint64_t v22 = 5;
      goto LABEL_32;
    case 13:
    case 15:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v28 = 0;
      goto LABEL_30;
    case 14:
    case 16:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v19 = 2;
      goto LABEL_29;
    case 18:
    case 19:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v28 = 1;
      char v29 = 1;
      goto LABEL_31;
    case 20:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v19 = 3;
      goto LABEL_29;
    case 21:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v24 = 3;
      goto LABEL_36;
    case 22:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v18 = 4;
      goto LABEL_26;
    case 23:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v25 = 4;
      goto LABEL_40;
    case 24:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v19 = 4;
      goto LABEL_29;
    case 25:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v24 = 4;
LABEL_36:
      uint64_t v28 = v24;
      char v29 = 1;
      goto LABEL_41;
    case 28:
    case 31:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v18 = 7;
      goto LABEL_26;
    case 29:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v25 = 7;
      goto LABEL_40;
    case 30:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v20 = 7;
      goto LABEL_43;
    case 32:
    case 35:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v18 = 8;
      goto LABEL_26;
    case 33:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v25 = 8;
LABEL_40:
      uint64_t v28 = v25;
      char v29 = 0;
LABEL_41:
      uint64_t v22 = 3;
      goto LABEL_32;
    case 34:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v20 = 8;
LABEL_43:
      uint64_t v28 = v20;
      char v29 = 0;
      uint64_t v22 = 4;
      goto LABEL_32;
    case 36:
    case 37:
    case 38:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v19 = 5;
LABEL_29:
      uint64_t v28 = v19;
LABEL_30:
      char v29 = 1;
      goto LABEL_31;
    default:
      uint64_t v30 = *v2;
      uint64_t v31 = v5;
      uint64_t v32 = v7;
      uint64_t v33 = v6;
      uint64_t v34 = v9;
      uint64_t v35 = v8;
      uint64_t v36 = v11;
      uint64_t v37 = v10;
      char v38 = v12;
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v41 = v15;
      char v42 = v16;
      uint64_t v43 = v17;
      uint64_t v18 = 1;
LABEL_26:
      uint64_t v28 = v18;
      char v29 = 0;
LABEL_31:
      uint64_t v22 = 0;
LABEL_32:
      sub_249896394((uint64_t)&v28, v22);
      uint64_t v26 = swift_retain();
      static GradientColor.singleColor(_:)(v26, a2);
      return swift_release();
  }
}

UIImage_optional __swiftcall UIImage.init(_internalSystemName:)(Swift::String _internalSystemName)
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v2 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  uint64_t v3 = (objc_class *)objc_msgSend(ObjCClassFromMetadata, sel__systemImageNamed_, v2);

  uint64_t v5 = v3;
  result.value.super.isa = v5;
  result.is_nil = v4;
  return result;
}

UIImage_optional __swiftcall UIImage.init(systemName:size:)(Swift::String systemName, CGSize size)
{
  double height = size.height;
  double width = size.width;
  Swift::Bool v4 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  id v5 = objc_msgSend(self, sel_systemImageNamed_, v4);

  if (v5)
  {
    id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_, width, height);
    uint64_t v8 = (double *)swift_allocObject();
    *((void *)v8 + 2) = v5;
    v8[3] = width;
    void v8[4] = height;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_249953074;
    *(void *)(v9 + 24) = v8;
    void v17[4] = sub_2499530A0;
    v17[5] = v9;
    v17[0] = MEMORY[0x263EF8330];
    v17[1] = 1107296256;
    v17[2] = sub_2499530C8;
    v17[3] = &block_descriptor_0;
    uint64_t v10 = _Block_copy(v17);
    swift_retain();
    id v11 = v5;
    swift_release();
    id v12 = objc_msgSend(v7, sel_imageWithActions_, v10);
    _Block_release(v10);
    LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
    uint64_t v13 = (objc_class *)swift_release();
    if (v10)
    {
      __break(1u);
      goto LABEL_9;
    }
    id v14 = objc_msgSend(v12, sel_CGImage);
    if (v14)
    {
      id v15 = v14;
      id v16 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithCGImage_, v14);
      swift_release();

      id v7 = v12;
      id v12 = v15;
    }
    else
    {
      swift_release();
    }
  }
  uint64_t v13 = 0;
LABEL_9:
  result.value.super.isa = v13;
  result.is_nil = v6;
  return result;
}

uint64_t sub_24995303C()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

id sub_249953074()
{
  return objc_msgSend(*(id *)(v0 + 16), sel_drawInRect_, 0.0, 0.0, *(double *)(v0 + 24), *(double *)(v0 + 32));
}

uint64_t sub_249953090()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2499530A0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_2499530C8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

id CGImageRef.cpImage.getter()
{
  id v1 = objc_allocWithZone(MEMORY[0x263F827E8]);

  return objc_msgSend(v1, sel_initWithCGImage_, v0);
}

uint64_t Image.init(asset:)(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v1 = *(void *)(a1 + 8);
  id v3 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  if (ImageAsset.image.getter())
  {
    sub_2498826E4(v2, v1, v3, v4, v5);
    return _s7SwiftUI5ImageV012CarPlayAssetB0E02cpC0ACSo7UIImageC_tcfC_0();
  }
  else
  {
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  return result;
}

id KeyedDecodingContainer.decodeIfPresent(_:forKey:)(uint64_t a1, uint64_t a2, id a3)
{
  sub_249953374();
  sub_249AEDDA8();
  if (!v3)
  {
    if (v9 >> 60 == 15)
    {
      return 0;
    }
    else
    {
      id v5 = objc_allocWithZone(MEMORY[0x263F827E8]);
      Swift::Bool v6 = (void *)sub_249AEB788();
      a3 = objc_msgSend(v5, sel_initWithData_, v6);
      sub_249882F14(v8, v9);
    }
  }
  return a3;
}

unint64_t sub_249953374()
{
  unint64_t result = qword_2696E07E0;
  if (!qword_2696E07E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E07E0);
  }
  return result;
}

id KeyedDecodingContainer.decode(_:forKey:)()
{
  sub_249953374();
  sub_249AEDE08();
  if (!v1)
  {
    id v2 = objc_allocWithZone(MEMORY[0x263F827E8]);
    uint64_t v3 = (void *)sub_249AEB788();
    id v0 = objc_msgSend(v2, sel_initWithData_, v3);
    sub_249882104(v5, v6);
  }
  return v0;
}

Swift::String __swiftcall Data.sha256()()
{
  unint64_t v2 = v1;
  uint64_t v3 = v0;
  void v38[3] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_249AECE08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_249AECDE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249954860(&qword_2696E07E8, MEMORY[0x263F047F8]);
  sub_249AECDD8();
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v37 = v8;
      if (v3 >> 32 < (int)v3) {
        goto LABEL_22;
      }
      unint64_t v36 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_249882F28(v3, v2);
      sub_24995452C((int)v3, v3 >> 32, v36, (uint64_t)v7, MEMORY[0x263F047F8], &qword_2696E07E8, MEMORY[0x263F047F8]);
      sub_249882104(v3, v2);
      uint64_t v8 = v37;
      break;
    case 2uLL:
      *(void *)&long long v37 = v8;
      uint64_t v12 = *(void *)(v3 + 16);
      unint64_t v36 = *(void *)(v3 + 24);
      sub_249882F28(v3, v2);
      swift_retain();
      swift_retain();
      sub_24995452C(v12, v36, v2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v7, MEMORY[0x263F047F8], &qword_2696E07E8, MEMORY[0x263F047F8]);
      uint64_t v8 = v37;
      swift_release();
      swift_release();
      goto LABEL_8;
    case 3uLL:
      memset(v38, 0, 14);
      goto LABEL_7;
    default:
      v38[0] = v3;
      LOWORD(v38[1]) = v2;
      BYTE2(v38[1]) = BYTE2(v2);
      BYTE3(v38[1]) = BYTE3(v2);
      BYTE4(v38[1]) = BYTE4(v2);
      BYTE5(v38[1]) = BYTE5(v2);
LABEL_7:
      sub_249AECDB8();
LABEL_8:
      sub_249882104(v3, v2);
      break;
  }
  sub_249AECDC8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_249954860(&qword_2696E07F0, MEMORY[0x263F045C0]);
  uint64_t v13 = sub_249AECDF8();
  uint64_t v14 = v8;
  uint64_t v15 = v13;
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v14);
  v38[0] = MEMORY[0x263F8EE78];
  sub_249A21F10(0, 0, 0);
  uint64_t v18 = v38[0];
  uint64_t v19 = *(void *)(v15 + 16);
  if (v17 != v19)
  {
    if (v17 >= v19)
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v17 < 0) {
      goto LABEL_20;
    }
    if (!v19)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    swift_bridgeObjectRetain();
    long long v37 = xmmword_249AF0A70;
    uint64_t v20 = MEMORY[0x263F8E7C0];
    do
    {
      char v21 = *(unsigned char *)(v15 + v17 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E07F8);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v37;
      *(void *)(v22 + 56) = MEMORY[0x263F8E778];
      *(void *)(v22 + 64) = v20;
      *(unsigned char *)(v22 + 32) = v21;
      uint64_t v23 = sub_249AED0F8();
      uint64_t v25 = v24;
      v38[0] = v18;
      unint64_t v27 = *(void *)(v18 + 16);
      unint64_t v26 = *(void *)(v18 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_249A21F10(v26 > 1, v27 + 1, 1);
        uint64_t v18 = v38[0];
      }
      ++v17;
      *(void *)(v18 + 16) = v27 + 1;
      uint64_t v28 = v18 + 16 * v27;
      *(void *)(v28 + 32) = v23;
      *(void *)(v28 + 40) = v25;
    }
    while (v19 != v17);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v38[0] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0800);
  sub_2499544D0();
  uint64_t v29 = sub_249AECFE8();
  uint64_t v31 = v30;
  swift_release();
  uint64_t v32 = v29;
  uint64_t v33 = v31;
  result._object = v33;
  result._uint64_t countAndFlagsBits = v32;
  return result;
}

uint64_t sub_249953A50(uint64_t a1, unint64_t a2)
{
  v34[3] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_249AECE28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_249AECE18();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249954860(&qword_2696E0820, MEMORY[0x263F04850]);
  sub_249AECDD8();
  switch(a2 >> 62)
  {
    case 1uLL:
      *(void *)&long long v33 = v8;
      if (a1 >> 32 < (int)a1) {
        goto LABEL_22;
      }
      unint64_t v32 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_249882F28(a1, a2);
      sub_24995452C((int)a1, a1 >> 32, v32, (uint64_t)v7, MEMORY[0x263F04850], &qword_2696E0820, MEMORY[0x263F04850]);
      sub_249882104(a1, a2);
      uint64_t v8 = v33;
      break;
    case 2uLL:
      *(void *)&long long v33 = v8;
      uint64_t v12 = *(void *)(a1 + 16);
      unint64_t v32 = *(void *)(a1 + 24);
      sub_249882F28(a1, a2);
      swift_retain();
      swift_retain();
      sub_24995452C(v12, v32, a2 & 0x3FFFFFFFFFFFFFFFLL, (uint64_t)v7, MEMORY[0x263F04850], &qword_2696E0820, MEMORY[0x263F04850]);
      uint64_t v8 = v33;
      swift_release();
      swift_release();
      goto LABEL_8;
    case 3uLL:
      memset(v34, 0, 14);
      goto LABEL_7;
    default:
      v34[0] = a1;
      LOWORD(v34[1]) = a2;
      BYTE2(v34[1]) = BYTE2(a2);
      BYTE3(v34[1]) = BYTE3(a2);
      BYTE4(v34[1]) = BYTE4(a2);
      BYTE5(v34[1]) = BYTE5(a2);
LABEL_7:
      sub_249AECDB8();
LABEL_8:
      sub_249882104(a1, a2);
      break;
  }
  sub_249AECDC8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_249954860(qword_2696E0828, MEMORY[0x263F04830]);
  uint64_t v13 = sub_249AECDF8();
  uint64_t v14 = v8;
  uint64_t v15 = v13;
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v14);
  v34[0] = MEMORY[0x263F8EE78];
  sub_249A21F10(0, 0, 0);
  uint64_t v18 = v34[0];
  uint64_t v19 = *(void *)(v15 + 16);
  if (v17 != v19)
  {
    if (v17 >= v19)
    {
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (v17 < 0) {
      goto LABEL_20;
    }
    if (!v19)
    {
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
    }
    swift_bridgeObjectRetain();
    long long v33 = xmmword_249AF0A70;
    uint64_t v20 = MEMORY[0x263F8E7C0];
    do
    {
      char v21 = *(unsigned char *)(v15 + v17 + 32);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E07F8);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v33;
      *(void *)(v22 + 56) = MEMORY[0x263F8E778];
      *(void *)(v22 + 64) = v20;
      *(unsigned char *)(v22 + 32) = v21;
      uint64_t v23 = sub_249AED0F8();
      uint64_t v25 = v24;
      v34[0] = v18;
      unint64_t v27 = *(void *)(v18 + 16);
      unint64_t v26 = *(void *)(v18 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_249A21F10(v26 > 1, v27 + 1, 1);
        uint64_t v18 = v34[0];
      }
      ++v17;
      *(void *)(v18 + 16) = v27 + 1;
      uint64_t v28 = v18 + 16 * v27;
      *(void *)(v28 + 32) = v23;
      *(void *)(v28 + 40) = v25;
    }
    while (v19 != v17);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v34[0] = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0800);
  sub_2499544D0();
  uint64_t v29 = sub_249AECFE8();
  swift_release();
  return v29;
}

uint64_t Data.utf8.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_249882F28(a1, a2);
      uint64_t v4 = sub_249954420((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_2499547C8);
      if (v5) {
        goto LABEL_16;
      }
      goto LABEL_7;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v7 = *(void *)(a1 + 24);
      sub_249882F28(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v4 = sub_249954420(v6, v7, a2 & 0x3FFFFFFFFFFFFFFFLL, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_2499547C8);
      uint64_t v9 = v8;
      swift_release();
      swift_release();
      if (v9) {
        goto LABEL_16;
      }
LABEL_7:
      uint64_t v14 = a1;
      unint64_t v15 = a2;
      sub_249882F28(a1, a2);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0810);
      if (swift_dynamicCast())
      {
        sub_249882BCC(v12, (uint64_t)v16);
        __swift_project_boxed_opaque_existential_2Tm(v16, v17);
        if (sub_249AEDCD8())
        {
          __swift_project_boxed_opaque_existential_2Tm(v16, v17);
          sub_249AEDCC8();
          sub_249882104(a1, a2);
          uint64_t v4 = *(void *)&v12[0];
          __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v16);
          return v4;
        }
        __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v16);
      }
      else
      {
        uint64_t v13 = 0;
        memset(v12, 0, sizeof(v12));
        sub_249954800((uint64_t)v12);
      }
      uint64_t v10 = sub_249954318(a1, a2);
LABEL_15:
      uint64_t v4 = v10;
LABEL_16:
      sub_249882104(a1, a2);
      return v4;
    case 3uLL:
      memset(v16, 0, 14);
      goto LABEL_11;
    default:
      v16[0] = a1;
      LOWORD(v16[1]) = a2;
      BYTE2(v16[1]) = BYTE2(a2);
      BYTE3(v16[1]) = BYTE3(a2);
      BYTE4(v16[1]) = BYTE4(a2);
      BYTE5(v16[1]) = BYTE5(a2);
LABEL_11:
      uint64_t v10 = sub_249AED148();
      goto LABEL_15;
  }
}

uint64_t sub_249954318(uint64_t a1, unint64_t a2)
{
  sub_249882F28(a1, a2);
  sub_24995460C(a1, a2);
  sub_249882104(a1, a2);
  uint64_t v4 = sub_249AED148();
  swift_release();
  return v4;
}

uint64_t sub_249954390@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AED148();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_2499543CC(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  if (a1) {
    uint64_t v4 = a2 - a1;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t result = a3(&v6, a1, v4);
  if (!v3) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_249954420(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_249AEB658();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_249AEB678();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_249AEB668();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  uint64_t result = (uint64_t)sub_2499543CC(v9, v15, a4);
  if (v4) {
    return v16;
  }
  return result;
}

unint64_t sub_2499544D0()
{
  unint64_t result = qword_2696E0808;
  if (!qword_2696E0808)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0808);
  }
  return result;
}

uint64_t sub_24995452C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), unint64_t *a6, void (*a7)(uint64_t))
{
  uint64_t result = sub_249AEB658();
  if (!result || (uint64_t result = sub_249AEB678(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_249AEB668();
      a5(0);
      sub_249954860(a6, a7);
      return sub_249AECDB8();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_24995460C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_249AEB7B8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v9 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v9)
      {
        if (v9 >= 1)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE10);
          uint64_t v8 = (void *)swift_allocObject();
          size_t v12 = _swift_stdlib_malloc_size(v8);
          _OWORD v8[2] = v9;
          v8[3] = 2 * v12 - 64;
        }
        sub_249882F28(a1, a2);
        uint64_t v13 = sub_249AEB778();
        sub_249882104(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
        if (v13 != v9)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x2499547B8);
        }
      }
      return v8;
    case 2uLL:
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      uint64_t v9 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v8;
    default:
      uint64_t v9 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_2499547C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AED148();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249954800(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249954860(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2499548A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t sub_2499548B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_249AED8D8();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_249AED8D8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_2499549D4(uint64_t *a1, uint64_t *a2, void *a3)
{
  uint64_t v5 = a3[2];
  uint64_t v4 = a3[3];
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v8 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  else {
    size_t v12 = *(void *)(*(void *)(v4 - 8) + 64) + 1;
  }
  uint64_t v13 = a3[4];
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = (v12 + v15 + ((v8 + v10 + ((v7 + 32) & ~v7)) & ~v10)) & ~v15;
  if (*(_DWORD *)(v14 + 84)) {
    uint64_t v17 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  else {
    uint64_t v17 = *(void *)(*(void *)(v13 - 8) + 64) + 1;
  }
  unint64_t v18 = ((v17 + v15 + v16) & ~v15) + v17;
  unint64_t v19 = v10 | v7 | v15;
  if (v19 > 7 || ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v6 + 80) | *(_DWORD *)(v14 + 80)) & 0x100000) != 0 || v18 > 0x18)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    uint64_t v23 = (uint64_t *)(v22 + ((v19 & 0xF8 ^ 0x1F8) & (v19 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v40 = *(void *)(v13 - 8);
    uint64_t v41 = v4;
    uint64_t v43 = v17 + v15;
    size_t __n = v17;
    uint64_t v45 = v13;
    uint64_t v24 = ~v10;
    uint64_t v42 = ~v15;
    uint64_t v25 = a2[1];
    *a1 = *a2;
    a1[1] = v25;
    unint64_t v26 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v27 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v26 = *v27;
    uint64_t v28 = ((unint64_t)v26 + v7 + 16) & ~v7;
    uint64_t v29 = ((unint64_t)v27 + v7 + 16) & ~v7;
    uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_retain();
    v30(v28, v29, v5);
    uint64_t v31 = (void *)((v28 + v11) & v24);
    unint64_t v32 = (const void *)((v29 + v11) & v24);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v32, 1, v41))
    {
      memcpy(v31, v32, v12);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v31, v32, v41);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v31, 0, 1, v41);
    }
    long long v33 = (void *)(((unint64_t)v31 + v12 + v15) & v42);
    uint64_t v34 = (const void *)(((unint64_t)v32 + v12 + v15) & v42);
    uint64_t v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48);
    if (v35(v34, 1, v45))
    {
      size_t v36 = __n;
      memcpy(v33, v34, __n);
      uint64_t v23 = a1;
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v40 + 16))(v33, v34, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v45);
      uint64_t v23 = a1;
      size_t v36 = __n;
    }
    long long v37 = (void *)(((unint64_t)v33 + v43) & v42);
    char v38 = (const void *)(((unint64_t)v34 + v43) & v42);
    if (v35(v38, 1, v45))
    {
      memcpy(v37, v38, v36);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v40 + 16))(v37, v38, v45);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v45);
    }
  }
  return v23;
}

uint64_t sub_249954DC8(uint64_t a1, void *a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2[2] - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  uint64_t v7 = *(void *)(v5 + 56);
  uint64_t v8 = a2[3];
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = (v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8)) {
    (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v10, v8);
  }
  uint64_t v11 = a2[4];
  uint64_t v22 = *(void *)(v11 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v22 + 80);
  unint64_t v13 = *(void *)(v9 + 64) + v10;
  if (!*(_DWORD *)(v9 + 84)) {
    ++v13;
  }
  uint64_t v14 = v13 + v12;
  uint64_t v15 = ~v12;
  unint64_t v16 = (v13 + v12) & ~v12;
  uint64_t v17 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
  if (!v17(v16, 1, v11)) {
    (*(void (**)(unint64_t, uint64_t))(v22 + 8))(v16, v11);
  }
  uint64_t v18 = (v14 | v12) + *(void *)(v22 + 64);
  if (!*(_DWORD *)(v22 + 84)) {
    ++v18;
  }
  uint64_t v19 = v18 & v15;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(v18 & v15, 1, v11);
  if (!result)
  {
    char v21 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    return v21(v19, v11);
  }
  return result;
}

void *sub_249955008(void *a1, void *a2, void *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v44 = a1;
  unint64_t v6 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  uint64_t v8 = a3[2];
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  uint64_t v10 = *(void *)(v8 - 8) + 16;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v8 - 8) + 80);
  uint64_t v12 = ((unint64_t)v6 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v7 + v11 + 16) & ~v11;
  swift_retain();
  v9(v12, v13, v8);
  uint64_t v14 = *(void *)(v10 + 48);
  uint64_t v15 = a3[3];
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v14 + v17;
  uint64_t v19 = (char *)((v18 + v12) & ~v17);
  uint64_t v20 = (char *)((v18 + v13) & ~v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v20, 1, v15))
  {
    int v21 = *(_DWORD *)(v16 + 84);
    size_t v22 = *(void *)(v16 + 64);
    if (v21) {
      size_t v23 = v22;
    }
    else {
      size_t v23 = v22 + 1;
    }
    memcpy(v19, v20, v23);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v20, v15);
    uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
    uint64_t v24 = v16 + 56;
    v25(v19, 0, 1, v15);
    int v21 = *(_DWORD *)(v24 + 28);
    size_t v22 = *(void *)(v24 + 8);
  }
  if (v21) {
    size_t v26 = v22;
  }
  else {
    size_t v26 = v22 + 1;
  }
  uint64_t v27 = a3[4];
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 80);
  uint64_t v30 = v26 + v29;
  unint64_t v31 = (unint64_t)&v19[v30];
  uint64_t v42 = ~v29;
  unint64_t v32 = (void *)((unint64_t)&v19[v30] & ~v29);
  unint64_t v33 = (unint64_t)&v20[v30];
  uint64_t v34 = (const void *)((unint64_t)&v20[v30] & ~v29);
  uint64_t v43 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v28 + 48);
  if (v43(v34, 1, v27))
  {
    int v35 = *(_DWORD *)(v28 + 84);
    size_t v36 = *(void *)(v28 + 64);
    if (v35) {
      size_t v37 = *(void *)(v28 + 64);
    }
    else {
      size_t v37 = v36 + 1;
    }
    memcpy(v32, v34, v37);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v32, v34, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v32, 0, 1, v27);
    int v35 = *(_DWORD *)(v28 + 84);
    size_t v36 = *(void *)(v28 + 64);
  }
  if (v35) {
    size_t v38 = v36;
  }
  else {
    size_t v38 = v36 + 1;
  }
  uint64_t v39 = (void *)(((v31 | v29) + v38) & v42);
  uint64_t v40 = (const void *)(((v33 | v29) + v38) & v42);
  if (v43(v40, 1, v27))
  {
    memcpy(v39, v40, v38);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v28 + 16))(v39, v40, v27);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v28 + 56))(v39, 0, 1, v27);
  }
  return v44;
}

void *sub_249955340(void *a1, void *a2, void *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  double v46 = a1;
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  v6[1] = v7[1];
  uint64_t v8 = *(void *)(a3[2] - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)v6 + v10 + 16) & ~v10;
  uint64_t v12 = ((unint64_t)v7 + v10 + 16) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v11, v12);
  uint64_t v13 = a3[3];
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = *(void *)(v9 + 40) + v15;
  uint64_t v17 = (char *)((v16 + v11) & ~v15);
  uint64_t v18 = (char *)((v16 + v12) & ~v15);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  LODWORD(v12) = v19(v17, 1, v13);
  int v20 = v19(v18, 1, v13);
  if (v12)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v18, v13);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v17, 0, 1, v13);
      goto LABEL_12;
    }
    int v21 = *(_DWORD *)(v14 + 84);
    size_t v22 = *(void *)(v14 + 64);
  }
  else
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v17, v18, v13);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    int v21 = *(_DWORD *)(v14 + 84);
    size_t v22 = *(void *)(v14 + 64);
  }
  if (v21) {
    size_t v23 = v22;
  }
  else {
    size_t v23 = v22 + 1;
  }
  memcpy(v17, v18, v23);
LABEL_12:
  uint64_t v24 = *(void *)(v14 + 64);
  if (!*(_DWORD *)(v14 + 84)) {
    ++v24;
  }
  uint64_t v25 = a3[4];
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = v24 + v27;
  unint64_t v29 = (unint64_t)&v17[v28];
  uint64_t v45 = ~v27;
  uint64_t v30 = (void *)((unint64_t)&v17[v28] & ~v27);
  unint64_t v31 = (unint64_t)&v18[v28];
  unint64_t v32 = (void *)((unint64_t)&v18[v28] & ~v27);
  unint64_t v33 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v34 = v33(v30, 1, v25);
  int v35 = v33(v32, 1, v25);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v30, v32, v25);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v30, 0, 1, v25);
      goto LABEL_25;
    }
    int v36 = *(_DWORD *)(v26 + 84);
    size_t v37 = *(void *)(v26 + 64);
  }
  else
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v30, v32, v25);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v30, v25);
    int v36 = *(_DWORD *)(v26 + 84);
    size_t v37 = *(void *)(v26 + 64);
  }
  if (v36) {
    size_t v38 = v37;
  }
  else {
    size_t v38 = v37 + 1;
  }
  memcpy(v30, v32, v38);
LABEL_25:
  if (*(_DWORD *)(v26 + 84)) {
    size_t v39 = *(void *)(v26 + 64);
  }
  else {
    size_t v39 = *(void *)(v26 + 64) + 1;
  }
  uint64_t v40 = (void *)(((v29 | v27) + v39) & v45);
  uint64_t v41 = (void *)(((v31 | v27) + v39) & v45);
  int v42 = v33(v40, 1, v25);
  int v43 = v33(v41, 1, v25);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 24))(v40, v41, v25);
      return v46;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v40, v25);
    goto LABEL_33;
  }
  if (v43)
  {
LABEL_33:
    memcpy(v40, v41, v39);
    return v46;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 16))(v40, v41, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v40, 0, 1, v25);
  return v46;
}

_OWORD *sub_2499557CC(_OWORD *a1, _OWORD *a2, void *a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(a3[2] - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  uint64_t v11 = *(void *)(v7 + 32);
  uint64_t v12 = a3[3];
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = v11 + v14;
  uint64_t v16 = (char *)((v15 + v9) & ~v14);
  uint64_t v17 = (char *)((v15 + v10) & ~v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v17, 1, v12))
  {
    int v18 = *(_DWORD *)(v13 + 84);
    size_t v19 = *(void *)(v13 + 64);
    if (v18) {
      size_t v20 = v19;
    }
    else {
      size_t v20 = v19 + 1;
    }
    memcpy(v16, v17, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v17, v12);
    size_t v22 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
    uint64_t v21 = v13 + 56;
    v22(v16, 0, 1, v12);
    int v18 = *(_DWORD *)(v21 + 28);
    size_t v19 = *(void *)(v21 + 8);
  }
  if (v18) {
    size_t v23 = v19;
  }
  else {
    size_t v23 = v19 + 1;
  }
  uint64_t v24 = a3[4];
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = v23 + v26;
  unint64_t v28 = (unint64_t)&v16[v27];
  uint64_t v39 = ~v26;
  unint64_t v29 = (void *)((unint64_t)&v16[v27] & ~v26);
  unint64_t v30 = (unint64_t)&v17[v27];
  unint64_t v31 = (const void *)((unint64_t)&v17[v27] & ~v26);
  uint64_t v40 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v25 + 48);
  if (v40(v31, 1, v24))
  {
    int v32 = *(_DWORD *)(v25 + 84);
    size_t v33 = *(void *)(v25 + 64);
    if (v32) {
      size_t v34 = *(void *)(v25 + 64);
    }
    else {
      size_t v34 = v33 + 1;
    }
    memcpy(v29, v31, v34);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v29, v31, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v29, 0, 1, v24);
    int v32 = *(_DWORD *)(v25 + 84);
    size_t v33 = *(void *)(v25 + 64);
  }
  if (v32) {
    size_t v35 = v33;
  }
  else {
    size_t v35 = v33 + 1;
  }
  int v36 = (void *)(((v28 | v26) + v35) & v39);
  size_t v37 = (const void *)(((v30 | v26) + v35) & v39);
  if (v40(v37, 1, v24))
  {
    memcpy(v36, v37, v35);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v25 + 32))(v36, v37, v24);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v36, 0, 1, v24);
  }
  return a1;
}

void *sub_249955AF8(void *a1, void *a2, void *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  double v47 = a1;
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  uint64_t v9 = *(void *)(a3[2] - 8);
  uint64_t v10 = v9 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = ((unint64_t)v7 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v8 + v11 + 16) & ~v11;
  (*(void (**)(uint64_t, uint64_t))(v9 + 40))(v12, v13);
  uint64_t v14 = a3[3];
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = *(void *)(v10 + 24) + v16;
  int v18 = (char *)((v17 + v12) & ~v16);
  size_t v19 = (char *)((v17 + v13) & ~v16);
  size_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  LODWORD(v13) = v20(v18, 1, v14);
  int v21 = v20(v19, 1, v14);
  if (v13)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v19, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      goto LABEL_12;
    }
    int v22 = *(_DWORD *)(v15 + 84);
    size_t v23 = *(void *)(v15 + 64);
  }
  else
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v18, v19, v14);
      goto LABEL_12;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    int v22 = *(_DWORD *)(v15 + 84);
    size_t v23 = *(void *)(v15 + 64);
  }
  if (v22) {
    size_t v24 = v23;
  }
  else {
    size_t v24 = v23 + 1;
  }
  memcpy(v18, v19, v24);
LABEL_12:
  uint64_t v25 = *(void *)(v15 + 64);
  if (!*(_DWORD *)(v15 + 84)) {
    ++v25;
  }
  uint64_t v26 = a3[4];
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  uint64_t v29 = v25 + v28;
  unint64_t v30 = (unint64_t)&v18[v29];
  uint64_t v46 = ~v28;
  unint64_t v31 = (void *)((unint64_t)&v18[v29] & ~v28);
  unint64_t v32 = (unint64_t)&v19[v29];
  size_t v33 = (void *)((unint64_t)&v19[v29] & ~v28);
  size_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v27 + 48);
  int v35 = v34(v31, 1, v26);
  int v36 = v34(v33, 1, v26);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v31, v33, v26);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v31, 0, 1, v26);
      goto LABEL_25;
    }
    int v37 = *(_DWORD *)(v27 + 84);
    size_t v38 = *(void *)(v27 + 64);
  }
  else
  {
    if (!v36)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v31, v33, v26);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v31, v26);
    int v37 = *(_DWORD *)(v27 + 84);
    size_t v38 = *(void *)(v27 + 64);
  }
  if (v37) {
    size_t v39 = v38;
  }
  else {
    size_t v39 = v38 + 1;
  }
  memcpy(v31, v33, v39);
LABEL_25:
  if (*(_DWORD *)(v27 + 84)) {
    size_t v40 = *(void *)(v27 + 64);
  }
  else {
    size_t v40 = *(void *)(v27 + 64) + 1;
  }
  uint64_t v41 = (void *)(((v30 | v28) + v40) & v46);
  int v42 = (void *)(((v32 | v28) + v40) & v46);
  int v43 = v34(v41, 1, v26);
  int v44 = v34(v42, 1, v26);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(void *, void *, uint64_t))(v27 + 40))(v41, v42, v26);
      return v47;
    }
    (*(void (**)(void *, uint64_t))(v27 + 8))(v41, v26);
    goto LABEL_33;
  }
  if (v44)
  {
LABEL_33:
    memcpy(v41, v42, v40);
    return v47;
  }
  (*(void (**)(void *, void *, uint64_t))(v27 + 32))(v41, v42, v26);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v41, 0, 1, v26);
  return v47;
}

uint64_t sub_249955F74(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  uint64_t v4 = a3[2];
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(a3[3] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  if (v6 <= v9) {
    unsigned int v10 = v9;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v11 = a3[4];
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v10 <= v14) {
    unsigned int v15 = v14;
  }
  else {
    unsigned int v15 = v10;
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(void *)(*(void *)(a3[3] - 8) + 64);
  if (!v8) {
    ++v17;
  }
  uint64_t v18 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = *(void *)(*(void *)(v4 - 8) + 64);
  uint64_t v20 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v22 = *(void *)(*(void *)(v11 - 8) + 64);
  if (!v13) {
    ++v22;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v17 + v21;
  int v24 = a2 - v16;
  if (a2 <= v16) {
    goto LABEL_39;
  }
  uint64_t v25 = ((v22 + v21 + ((v23 + ((v19 + v20 + ((v18 + 32) & ~v18)) & ~v20)) & ~v21)) & ~v21) + v22;
  char v26 = 8 * v25;
  if (v25 <= 3)
  {
    unsigned int v28 = ((v24 + ~(-1 << v26)) >> v26) + 1;
    if (HIWORD(v28))
    {
      int v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27) {
        goto LABEL_39;
      }
      goto LABEL_29;
    }
    if (v28 > 0xFF)
    {
      int v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(unsigned __int16 *)((char *)a1 + v25)) {
        goto LABEL_39;
      }
      goto LABEL_29;
    }
    if (v28 < 2)
    {
LABEL_39:
      if ((v15 & 0x80000000) == 0)
      {
        unint64_t v32 = *((void *)a1 + 1);
        if (v32 >= 0xFFFFFFFF) {
          LODWORD(v32) = -1;
        }
        return (v32 + 1);
      }
      unint64_t v34 = ((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v18 + 16) & ~v18;
      if (v6 == v16)
      {
        int v35 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
        return v35(v34, v6, v4);
      }
      unint64_t v36 = (v34 + v19 + v20) & ~v20;
      if (v9 == v16)
      {
        if (v8 >= 2)
        {
          unsigned int v37 = (*(uint64_t (**)(unint64_t))(v7 + 48))(v36);
          goto LABEL_57;
        }
      }
      else if (v13 >= 2)
      {
        unsigned int v37 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))((v23 + v36) & ~v21, v13, v11);
LABEL_57:
        if (v37 >= 2) {
          return v37 - 1;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v27 = *((unsigned __int8 *)a1 + v25);
  if (!*((unsigned char *)a1 + v25)) {
    goto LABEL_39;
  }
LABEL_29:
  int v29 = (v27 - 1) << v26;
  if (v25 > 3) {
    int v29 = 0;
  }
  if (v25)
  {
    if (v25 <= 3) {
      int v30 = v25;
    }
    else {
      int v30 = 4;
    }
    switch(v30)
    {
      case 2:
        int v31 = *a1;
        break;
      case 3:
        int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v31 = *(_DWORD *)a1;
        break;
      default:
        int v31 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v31 = 0;
  }
  return v16 + (v31 | v29) + 1;
}

void sub_2499562E0(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(a4[2] - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(a4[3] - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v8 <= v11) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v13 = a4[4];
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  uint64_t v16 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = *(void *)(*(void *)(a4[2] - 8) + 64);
  uint64_t v18 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v19 = *(unsigned __int8 *)(v14 + 80);
  unsigned int v20 = v15 - 1;
  if (!v15) {
    unsigned int v20 = 0;
  }
  if (v12 <= v20) {
    unsigned int v21 = v20;
  }
  else {
    unsigned int v21 = v12;
  }
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = v21;
  }
  if (v10) {
    uint64_t v23 = *(void *)(*(void *)(a4[3] - 8) + 64);
  }
  else {
    uint64_t v23 = *(void *)(*(void *)(a4[3] - 8) + 64) + 1;
  }
  uint64_t v24 = v23 + v19;
  if (v15) {
    uint64_t v25 = *(void *)(*(void *)(v13 - 8) + 64);
  }
  else {
    uint64_t v25 = *(void *)(*(void *)(v13 - 8) + 64) + 1;
  }
  size_t v26 = ((v25 + v19 + ((v24 + ((v17 + v18 + ((v16 + 32) & ~v16)) & ~v18)) & ~v19)) & ~v19) + v25;
  BOOL v27 = a3 >= v22;
  unsigned int v28 = a3 - v22;
  if (v28 == 0 || !v27)
  {
LABEL_30:
    if (v22 < a2) {
      goto LABEL_31;
    }
    goto LABEL_38;
  }
  if (v26 > 3)
  {
    int v6 = 1;
    if (v22 < a2) {
      goto LABEL_31;
    }
    goto LABEL_38;
  }
  unsigned int v29 = ((v28 + ~(-1 << (8 * v26))) >> (8 * v26)) + 1;
  if (!HIWORD(v29))
  {
    if (v29 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v29 > 1;
    }
    goto LABEL_30;
  }
  int v6 = 4;
  if (v22 < a2)
  {
LABEL_31:
    unsigned int v30 = ~v22 + a2;
    if (v26 < 4)
    {
      int v31 = (v30 >> (8 * v26)) + 1;
      if (v26)
      {
        int v32 = v30 & ~(-1 << (8 * v26));
        bzero(a1, v26);
        if (v26 == 3)
        {
          *(_WORD *)a1 = v32;
          a1[2] = BYTE2(v32);
        }
        else if (v26 == 2)
        {
          *(_WORD *)a1 = v32;
        }
        else
        {
          *a1 = v32;
        }
      }
    }
    else
    {
      bzero(a1, v26);
      *(_DWORD *)a1 = v30;
      int v31 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v26] = v31;
        return;
      case 2:
        *(_WORD *)&a1[v26] = v31;
        return;
      case 3:
        goto LABEL_69;
      case 4:
        *(_DWORD *)&a1[v26] = v31;
        return;
      default:
        return;
    }
  }
LABEL_38:
  switch(v6)
  {
    case 1:
      a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 2:
      *(_WORD *)&a1[v26] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_43;
    case 3:
LABEL_69:
      __break(1u);
      JUMPOUT(0x24995670CLL);
    case 4:
      *(_DWORD *)&a1[v26] = 0;
      goto LABEL_42;
    default:
LABEL_42:
      if (a2)
      {
LABEL_43:
        if ((v21 & 0x80000000) != 0)
        {
          unint64_t v33 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v16 + 16) & ~v16;
          if (v8 == v22)
          {
            unint64_t v34 = *(void (**)(unint64_t))(v7 + 56);
            v34(v33);
          }
          else
          {
            unint64_t v35 = (v33 + v17 + v18) & ~v18;
            if (v11 == v22)
            {
              if (v10 >= 2)
              {
                uint64_t v36 = a2 + 1;
                unsigned int v37 = *(void (**)(unint64_t, uint64_t))(v9 + 56);
                v37(v35, v36);
              }
            }
            else if (v15 >= 2)
            {
              unint64_t v38 = (v24 + v35) & ~v19;
              uint64_t v39 = a2 + 1;
              size_t v40 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
              v40(v38, v39, v15, v13);
            }
          }
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for GaugeDataSource()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24995674C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249956798@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v4 = a1[2];
  uint64_t v46 = a1[3];
  uint64_t v5 = sub_249AED8D8();
  uint64_t v44 = a1[4];
  uint64_t v6 = sub_249AED8D8();
  uint64_t v7 = a1[5];
  uint64_t v67 = a1[6];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v66 = a1[7];
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v51 = v4;
  *(void *)&long long v59 = v4;
  *((void *)&v59 + 1) = v5;
  uint64_t v50 = v5;
  uint64_t v48 = v6;
  uint64_t v60 = v6;
  uint64_t v61 = MEMORY[0x263F1BA08];
  uint64_t v47 = v7;
  uint64_t v62 = v7;
  uint64_t v63 = WitnessTable;
  uint64_t v42 = WitnessTable;
  uint64_t v41 = v9;
  uint64_t v64 = v9;
  uint64_t v65 = MEMORY[0x263F1BA00];
  uint64_t v10 = sub_249AEC968();
  uint64_t v52 = *(void *)(v10 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  int v43 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v45 = (char *)v40 - v13;
  uint64_t v14 = sub_249AED8D8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (char *)v40 - v19;
  uint64_t v49 = v2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  if (!v61)
  {
    sub_24995736C((uint64_t)&v59);
    goto LABEL_5;
  }
  sub_249882C34((uint64_t)&v59, (uint64_t)v55);
  sub_24995736C((uint64_t)&v59);
  uint64_t v20 = v56;
  uint64_t v21 = v57;
  __swift_project_boxed_opaque_existential_2Tm(v55, v56);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  LOBYTE(v20) = v23;
  uint64_t v24 = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v55);
  if (v20)
  {
LABEL_5:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v18, 1, 1, v10);
    swift_getWitnessTable();
    goto LABEL_6;
  }
  v40[3] = v40;
  v55[0] = v22;
  long long v59 = *(_OWORD *)(v49 + 16);
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  v40[2] = v39;
  uint64_t v26 = v51;
  uint64_t v27 = v47;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  v40[1] = v39;
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  MEMORY[0x270FA5388](v29);
  void v39[9] = sub_249957448();
  v39[8] = v41;
  v39[7] = v42;
  v39[5] = MEMORY[0x263F8D538];
  v39[6] = v27;
  v39[4] = v48;
  _OWORD v39[2] = v26;
  v39[3] = v50;
  v39[0] = sub_249957414;
  v39[1] = v39;
  unsigned int v30 = v43;
  sub_249AEC958();
  uint64_t v31 = swift_getWitnessTable();
  int v32 = v45;
  sub_2499D044C(v30, v10, v31);
  uint64_t v33 = v52;
  unint64_t v34 = *(void (**)(char *, uint64_t))(v52 + 8);
  v34(v30, v10);
  sub_2499D044C(v32, v10, v31);
  v34(v32, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v18, 0, 1, v10);
LABEL_6:
  unint64_t v35 = v53;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v53, v18, v14);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v15 + 8);
  v36(v18, v14);
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v37 = swift_getWitnessTable();
  sub_2499D044C(v35, v14, v37);
  return ((uint64_t (*)(char *, uint64_t))v36)(v35, v14);
}

uint64_t sub_249956E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = v11;
  v19[1] = v12;
  _OWORD v19[2] = v13;
  v19[3] = v14;
  v19[4] = v15;
  v19[5] = v16;
  uint64_t v17 = type metadata accessor for GaugeDataSource();
  sub_2499D044C(a1 + *(int *)(v17 + 72), a2, a5);
  sub_2499D044C(v10, a2, a5);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a2);
}

uint64_t sub_249956F34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v22[0] = a8;
  uint64_t v15 = sub_249AED8D8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v22 - v17;
  v22[2] = a2;
  v22[3] = a3;
  v22[4] = a4;
  v22[5] = a5;
  v22[6] = a6;
  v22[7] = a7;
  uint64_t v19 = a1 + *(int *)(type metadata accessor for GaugeDataSource() + 76);
  v22[1] = a6;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2499D044C(v19, v15, WitnessTable);
  sub_2499D044C(v18, v15, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_249957098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v22[0] = a8;
  uint64_t v15 = sub_249AED8D8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v22 - v17;
  v22[2] = a2;
  v22[3] = a3;
  v22[4] = a4;
  v22[5] = a5;
  v22[6] = a6;
  v22[7] = a7;
  uint64_t v19 = a1 + *(int *)(type metadata accessor for GaugeDataSource() + 80);
  v22[1] = a7;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2499D044C(v19, v15, WitnessTable);
  sub_2499D044C(v18, v15, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_2499571FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v22[0] = a8;
  uint64_t v15 = sub_249AED8D8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v22 - v17;
  v22[2] = a2;
  v22[3] = a3;
  v22[4] = a4;
  v22[5] = a5;
  v22[6] = a6;
  v22[7] = a7;
  uint64_t v19 = a1 + *(int *)(type metadata accessor for GaugeDataSource() + 84);
  v22[1] = a7;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2499D044C(v19, v15, WitnessTable);
  sub_2499D044C(v18, v15, WitnessTable);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_24995736C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2499573CC()
{
  return sub_24995742C((uint64_t (*)(void, void, void, void, void, void, void))sub_249956E28);
}

uint64_t sub_2499573E4()
{
  return sub_24995742C((uint64_t (*)(void, void, void, void, void, void, void))sub_249956F34);
}

uint64_t sub_2499573FC()
{
  return sub_24995742C((uint64_t (*)(void, void, void, void, void, void, void))sub_249957098);
}

uint64_t sub_249957414()
{
  return sub_24995742C((uint64_t (*)(void, void, void, void, void, void, void))sub_2499571FC);
}

uint64_t sub_24995742C(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[8], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

unint64_t sub_249957448()
{
  unint64_t result = qword_2696E08B0;
  if (!qword_2696E08B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E08B0);
  }
  return result;
}

uint64_t sub_24995749C()
{
  return swift_getWitnessTable();
}

uint64_t LocalNotification.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v7 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return sub_24988247C(v2, v3, v4, v5, v7);
}

__n128 LocalNotification.image.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  sub_2498826E4(*(void **)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  __n128 result = v7;
  *(__n128 *)uint64_t v1 = v7;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v5;
  return result;
}

uint64_t (*LocalNotification.image.modify())()
{
  return nullsub_1;
}

uint64_t LocalNotification.userDismissible.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t LocalNotification.userDismissible.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*LocalNotification.userDismissible.modify())()
{
  return nullsub_1;
}

__n128 LocalNotification.init(image:userDismissible:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  __n128 result = *(__n128 *)a1;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(unsigned char *)(a3 + 32) = v3;
  *(void *)(a3 + 40) = v4;
  *(unsigned char *)(a3 + 48) = a2;
  return result;
}

uint64_t LocalNotification.hash(into:)(uint64_t a1)
{
  char v3 = *(void **)v1;
  uint64_t v5 = *(void *)(v1 + 8);
  long long v6 = *(void **)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  char v8 = *(unsigned char *)(v1 + 32);
  sub_24988247C(*(void **)v1, v5, v6, v7, v8);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_249AEE348();
  sub_2498826E4(v3, v5, v6, v7, v8);
  return sub_249AEE358();
}

uint64_t sub_24995776C()
{
  if (*v0) {
    return 0x6D73694472657375;
  }
  else {
    return 0x6567616D69;
  }
}

uint64_t sub_2499577B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24995DC6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499577D8(uint64_t a1)
{
  unint64_t v2 = sub_24995BE04();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249957814(uint64_t a1)
{
  unint64_t v2 = sub_24995BE04();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LocalNotification.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E08B8);
  uint64_t v15 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  char v8 = *((unsigned char *)v1 + 32);
  uint64_t v12 = *((void *)v1 + 5);
  int v21 = *((unsigned __int8 *)v1 + 48);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24995BE04();
  sub_249AEE468();
  long long v16 = v13;
  uint64_t v17 = v7;
  uint64_t v18 = v6;
  char v19 = v8;
  uint64_t v20 = v12;
  char v22 = 0;
  sub_24989D190();
  uint64_t v9 = v14;
  sub_249AEDF08();
  if (!v9)
  {
    LOBYTE(v16) = 1;
    sub_249AEDEC8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t LocalNotification.hashValue.getter()
{
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  sub_249AEE358();
  return sub_249AEE388();
}

void LocalNotification.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E08C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24995BE04();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    char v27 = 0;
    sub_24989D2E8();
    sub_249AEDE08();
    uint64_t v9 = v20;
    uint64_t v10 = v21;
    uint64_t v17 = v25;
    uint64_t v18 = v23;
    LOBYTE(v20) = 1;
    char v19 = v22;
    int v26 = v24;
    sub_24988247C(v9, v21, v22, v23, v24);
    char v11 = sub_249AEDDC8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v12 = v11 & 1;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    uint64_t v14 = v18;
    long long v13 = v19;
    *(void *)(a2 + 16) = v19;
    *(void *)(a2 + 24) = v14;
    char v15 = v26;
    *(unsigned char *)(a2 + 32) = v26;
    *(void *)(a2 + 40) = v17;
    *(unsigned char *)(a2 + 48) = v12;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2498826E4(v9, v10, v13, v14, v15);
  }
}

void sub_249957CF0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_249957D08(void *a1)
{
  return LocalNotification.encode(to:)(a1);
}

uint64_t sub_249957D20()
{
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  sub_249AEE358();
  return sub_249AEE388();
}

uint64_t sub_249957DB4(uint64_t a1)
{
  return sub_249AEE358();
}

uint64_t sub_249957E18()
{
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  sub_249AEE358();
  return sub_249AEE388();
}

void Instrument.IndicatorConfiguration.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *Instrument.IndicatorConfiguration.dataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*Instrument.IndicatorConfiguration.dataIdentifier.modify())()
{
  return nullsub_1;
}

void Instrument.IndicatorConfiguration.style.getter(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[1];
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  uint64_t v10 = v1[9];
  uint64_t v11 = v1[10];
  uint64_t v12 = v1[11];
  uint64_t v13 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  a1[11] = v13;
  sub_2498FDE64(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, (void (*)(void))sub_24988247C);
}

__n128 Instrument.IndicatorConfiguration.style.setter(long long *a1)
{
  long long v8 = a1[1];
  long long v9 = *a1;
  long long v6 = a1[3];
  long long v7 = a1[2];
  __n128 v5 = (__n128)a1[4];
  uint64_t v2 = *((void *)a1 + 10);
  uint64_t v3 = *((void *)a1 + 11);
  sub_2498FDE64(v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], (void (*)(void))sub_2498826E4);
  *(_OWORD *)(v1 + 1) = v9;
  *(_OWORD *)(v1 + 3) = v8;
  *(_OWORD *)(v1 + 5) = v7;
  *(_OWORD *)(v1 + 7) = v6;
  __n128 result = v5;
  *(__n128 *)(v1 + 9) = v5;
  v1[11] = v2;
  v1[12] = v3;
  return result;
}

uint64_t (*Instrument.IndicatorConfiguration.style.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.IndicatorConfiguration.presentationEdge.getter()
{
  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t Instrument.IndicatorConfiguration.presentationEdge.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 104) = result & 1;
  return result;
}

uint64_t (*Instrument.IndicatorConfiguration.presentationEdge.modify())()
{
  return nullsub_1;
}

double Instrument.IndicatorConfiguration.containerInsets.getter()
{
  return *(double *)(v0 + 112);
}

void Instrument.IndicatorConfiguration.containerInsets.setter(double a1, double a2, double a3, double a4)
{
  v4[14] = a1;
  v4[15] = a2;
  v4[16] = a3;
  v4[17] = a4;
}

uint64_t (*Instrument.IndicatorConfiguration.containerInsets.modify())()
{
  return nullsub_1;
}

unsigned char *Instrument.IndicatorConfiguration.init(dataIdentifier:style:presentationEdge:containerInsets:)@<X0>(unsigned char *result@<X0>, _OWORD *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  long long v8 = a2[1];
  *(_OWORD *)(a4 + 8) = *a2;
  *(_OWORD *)(a4 + 24) = v8;
  long long v9 = a2[3];
  *(_OWORD *)(a4 + 40) = a2[2];
  *(_OWORD *)(a4 + 56) = v9;
  long long v10 = a2[5];
  *(_OWORD *)(a4 + 72) = a2[4];
  *(unsigned char *)a4 = *result;
  *(_OWORD *)(a4 + 88) = v10;
  *(unsigned char *)(a4 + 104) = a3 & 1;
  *(double *)(a4 + 112) = a5;
  *(double *)(a4 + 120) = a6;
  *(double *)(a4 + 128) = a7;
  *(double *)(a4 + 136) = a8;
  return result;
}

uint64_t Instrument.IndicatorConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v4 = (void *)v1[1];
  uint64_t v3 = v1[2];
  __n128 v5 = (void *)v1[3];
  uint64_t v6 = v1[5];
  uint64_t v15 = v1[6];
  uint64_t v16 = v1[4];
  int v7 = ~*((_DWORD *)v1 + 10);
  long long v8 = (void *)v1[7];
  uint64_t v9 = v1[8];
  long long v10 = (void *)v1[9];
  uint64_t v13 = v1[11];
  uint64_t v14 = v1[10];
  uint64_t v12 = v1[12];
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE348();
  if ((v7 & 0xFE) != 0)
  {
    sub_24988247C(v4, v3, v5, v16, v6);
    sub_24988247C(v8, v9, v10, v14, v13);
    ImageAsset.ImageType.hash(into:)(a1);
    sub_249AEE348();
    ImageAsset.ImageType.hash(into:)(a1);
    sub_249AEE348();
    sub_2498FDE64((uint64_t)v4, v3, (uint64_t)v5, v16, v6, v15, (uint64_t)v8, v9, (uint64_t)v10, v14, v13, v12, (void (*)(void))sub_2498826E4);
  }
  sub_249AEBB68();
  sub_249AEE358();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE378();
  return sub_249AEE378();
}

unint64_t sub_2499582DC()
{
  unint64_t result = 0x6E65644961746164;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x656C797473;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x656E6961746E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249958384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24995DD7C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499583AC(uint64_t a1)
{
  unint64_t v2 = sub_24995BE58();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499583E8(uint64_t a1)
{
  unint64_t v2 = sub_24995BE58();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.IndicatorConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E08D0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  int v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v28 = *((void *)v1 + 2);
  uint64_t v29 = v9;
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v26 = *((void *)v1 + 4);
  uint64_t v27 = v10;
  uint64_t v25 = *((void *)v1 + 5);
  uint64_t v24 = *((void *)v1 + 6);
  uint64_t v23 = *((void *)v1 + 7);
  uint64_t v22 = *((void *)v1 + 8);
  uint64_t v21 = *((void *)v1 + 9);
  uint64_t v20 = *((void *)v1 + 10);
  uint64_t v19 = *((void *)v1 + 11);
  uint64_t v18 = *((void *)v1 + 12);
  int v42 = v1[104];
  uint64_t v11 = *((void *)v1 + 14);
  uint64_t v12 = *((void *)v1 + 15);
  uint64_t v13 = *((void *)v1 + 16);
  uint64_t v14 = *((void *)v1 + 17);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24995BE58();
  sub_249AEE468();
  LOBYTE(v30) = v8;
  char v43 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v15 = v42;
    uint64_t v30 = v29;
    uint64_t v31 = v28;
    uint64_t v32 = v27;
    uint64_t v33 = v26;
    uint64_t v34 = v25;
    uint64_t v35 = v24;
    uint64_t v36 = v23;
    uint64_t v37 = v22;
    uint64_t v38 = v21;
    uint64_t v39 = v20;
    uint64_t v40 = v19;
    uint64_t v41 = v18;
    char v43 = 1;
    sub_24995BEAC();
    sub_249AEDF08();
    LOBYTE(v30) = v15;
    char v43 = 2;
    sub_24995BF00();
    sub_249AEDF08();
    uint64_t v30 = v11;
    uint64_t v31 = v12;
    uint64_t v32 = v13;
    uint64_t v33 = v14;
    char v43 = 3;
    sub_2498F8D04();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.IndicatorConfiguration.hashValue.getter()
{
  long long v1 = v0[7];
  long long v12 = v0[6];
  long long v13 = v1;
  long long v14 = v0[8];
  long long v2 = v0[3];
  long long v8 = v0[2];
  long long v9 = v2;
  long long v3 = v0[5];
  long long v10 = v0[4];
  long long v11 = v3;
  long long v4 = v0[1];
  v7[0] = *v0;
  v7[1] = v4;
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  if ((~BYTE8(v8) & 0xFE) != 0)
  {
    sub_249AEE348();
    sub_24995BF54((uint64_t *)v7, (void (*)(void))sub_24988247C);
    ImageAsset.ImageType.hash(into:)((uint64_t)v6);
    sub_249AEE348();
    ImageAsset.ImageType.hash(into:)((uint64_t)v6);
  }
  sub_249AEE348();
  sub_24995BF54((uint64_t *)v7, (void (*)(void))sub_2498826E4);
  sub_249AEBB68();
  sub_249AEE358();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE378();
  return sub_249AEE388();
}

void Instrument.IndicatorConfiguration.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E08F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24995BE58();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    LOBYTE(v52) = 0;
    sub_24989C988();
    sub_249AEDE08();
    int v9 = v34;
    LOBYTE(v52) = 1;
    sub_24995BFB0();
    sub_249AEDE08();
    int v56 = v9;
    uint64_t v10 = v34;
    uint64_t v11 = v35;
    LOBYTE(v52) = 2;
    uint64_t v29 = v45;
    uint64_t v30 = v44;
    uint64_t v31 = v43;
    uint64_t v32 = v42;
    uint64_t v27 = v36;
    uint64_t v26 = v37;
    uint64_t v25 = v38;
    uint64_t v24 = v39;
    uint64_t v28 = v40;
    uint64_t v33 = v41;
    sub_2498FDE64(v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, (void (*)(void))sub_24988247C);
    sub_24995C004();
    sub_249AEDE08();
    HIDWORD(v23) = v34;
    char v57 = 3;
    sub_2498F8E7C();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = v52;
    uint64_t v13 = v53;
    uint64_t v14 = v54;
    uint64_t v15 = v55;
    *(unsigned char *)a2 = v56;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v11;
    uint64_t v16 = v27;
    uint64_t v17 = v26;
    *(void *)(a2 + 24) = v27;
    *(void *)(a2 + 32) = v17;
    uint64_t v18 = v25;
    uint64_t v19 = v24;
    *(void *)(a2 + 40) = v25;
    *(void *)(a2 + 48) = v19;
    uint64_t v20 = v33;
    *(void *)(a2 + 56) = v28;
    *(void *)(a2 + 64) = v20;
    uint64_t v21 = v31;
    *(void *)(a2 + 72) = v32;
    *(void *)(a2 + 80) = v21;
    uint64_t v22 = v29;
    *(void *)(a2 + 88) = v30;
    *(void *)(a2 + 96) = v22;
    *(unsigned char *)(a2 + 104) = BYTE4(v23);
    *(void *)(a2 + 112) = v12;
    *(void *)(a2 + 120) = v13;
    *(void *)(a2 + 128) = v14;
    *(void *)(a2 + 136) = v15;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    LOBYTE(v34) = v56;
    uint64_t v35 = v10;
    uint64_t v36 = v11;
    uint64_t v37 = v16;
    uint64_t v38 = v17;
    uint64_t v39 = v18;
    uint64_t v40 = v19;
    uint64_t v41 = v28;
    uint64_t v42 = v33;
    uint64_t v43 = v32;
    uint64_t v44 = v31;
    uint64_t v45 = v30;
    uint64_t v46 = v29;
    char v47 = BYTE4(v23);
    uint64_t v48 = v12;
    uint64_t v49 = v13;
    uint64_t v50 = v14;
    uint64_t v51 = v15;
    sub_24995BF54(&v34, (void (*)(void))sub_2498826E4);
  }
}

void sub_249958E94(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_249958EAC(void *a1)
{
  return Instrument.IndicatorConfiguration.encode(to:)(a1);
}

uint64_t sub_249958ECC()
{
  long long v1 = v0[7];
  long long v12 = v0[6];
  long long v13 = v1;
  long long v14 = v0[8];
  long long v2 = v0[3];
  long long v8 = v0[2];
  long long v9 = v2;
  long long v3 = v0[5];
  long long v10 = v0[4];
  long long v11 = v3;
  long long v4 = v0[1];
  v7[0] = *v0;
  v7[1] = v4;
  sub_249AEE338();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  if ((~BYTE8(v8) & 0xFE) != 0)
  {
    sub_249AEE348();
    sub_24995BF54((uint64_t *)v7, (void (*)(void))sub_24988247C);
    ImageAsset.ImageType.hash(into:)((uint64_t)v6);
    sub_249AEE348();
    ImageAsset.ImageType.hash(into:)((uint64_t)v6);
  }
  sub_249AEE348();
  sub_24995BF54((uint64_t *)v7, (void (*)(void))sub_2498826E4);
  sub_249AEBB68();
  sub_249AEE358();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE378();
  return sub_249AEE388();
}

uint64_t Instrument.IndicatorStyle.assets.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if ((~*(_DWORD *)(v0 + 32) & 0xFELL) == 0) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = *(void *)(v0 + 72);
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 56);
  uint64_t v15 = *(void **)(v0 + 64);
  uint64_t v12 = *(void *)(v0 + 40);
  long long v13 = *(void **)(v0 + 48);
  long long v4 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v6 = *(void **)v0;
  uint64_t v5 = *(void *)(v0 + 8);
  long long v11 = *(void **)v0;
  char v7 = *(unsigned char *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_249AFA7A0;
  *(void *)(v2 + 56) = &type metadata for ImageAsset;
  *(void *)(v2 + 64) = &protocol witness table for ImageAsset;
  uint64_t v8 = swift_allocObject();
  *(void *)(v2 + 32) = v8;
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v5;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v3;
  *(unsigned char *)(v8 + 48) = v1;
  *(void *)(v8 + 56) = v12;
  *(void *)(v2 + 96) = &type metadata for ImageAsset;
  *(void *)(v2 + 104) = &protocol witness table for ImageAsset;
  uint64_t v9 = swift_allocObject();
  *(void *)(v2 + 72) = v9;
  *(void *)(v9 + 16) = v13;
  *(void *)(v9 + 24) = v14;
  *(void *)(v9 + 32) = v15;
  *(void *)(v9 + 40) = v16;
  *(unsigned char *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v17;
  sub_24988247C(v11, v5, v4, v3, v1);
  sub_24988247C(v13, v14, v15, v16, v7);
  return v2;
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.assets.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void **)(v0 + 48);
  uint64_t v11 = *(void *)(v0 + 40);
  uint64_t v14 = *(void **)(v0 + 64);
  uint64_t v15 = *(void *)(v0 + 56);
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 88);
  char v6 = *(unsigned char *)(v0 + 32);
  char v12 = *(unsigned char *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_249AFA7A0;
  *(void *)(v7 + 56) = &type metadata for ImageAsset;
  *(void *)(v7 + 64) = &protocol witness table for ImageAsset;
  uint64_t v8 = swift_allocObject();
  *(void *)(v7 + 32) = v8;
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v2;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  *(unsigned char *)(v8 + 48) = v6;
  *(void *)(v8 + 56) = v11;
  *(void *)(v7 + 96) = &type metadata for ImageAsset;
  *(void *)(v7 + 104) = &protocol witness table for ImageAsset;
  uint64_t v9 = swift_allocObject();
  *(void *)(v7 + 72) = v9;
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v15;
  *(void *)(v9 + 32) = v14;
  *(void *)(v9 + 40) = v13;
  *(unsigned char *)(v9 + 48) = v12;
  *(void *)(v9 + 56) = v16;
  sub_24988247C(v1, v2, v3, v4, v6);
  sub_24988247C(v5, v15, v14, v13, v12);
  return v7;
}

void Instrument.IndicatorStyle.restoreAssets(from:)(void *a1)
{
  uint64_t v3 = *((void *)v1 + 4);
  if ((~*((_DWORD *)v1 + 8) & 0xFELL) != 0)
  {
    uint64_t v5 = (void *)*((void *)v1 + 6);
    char v6 = (void *)*((void *)v1 + 8);
    uint64_t v7 = *((void *)v1 + 9);
    uint64_t v8 = *((void *)v1 + 10);
    long long v11 = *v1;
    long long v12 = v1[1];
    uint64_t v10 = *((void *)v1 + 5);
    *(void *)&long long v13 = v10;
    *((void *)&v13 + 1) = v5;
    *(void *)&long long v14 = *((void *)v1 + 7);
    *((void *)&v14 + 1) = v6;
    uint64_t v9 = *((void *)v1 + 11);
    uint64_t v15 = *(void *)v1;
    sub_24988247C(*(void **)v1, *((void *)v1 + 1), (void *)v12, *((uint64_t *)&v12 + 1), v3);
    sub_24988247C(v5, v14, v6, v7, v8);
    ImageAsset.restore(from:)(a1);
    if (v2)
    {
      sub_2498826E4((void *)v11, *((uint64_t *)&v11 + 1), (void *)v12, *((uint64_t *)&v12 + 1), v3);
      sub_2498826E4(v5, v14, v6, v7, v8);
    }
    else
    {
      ImageAsset.restore(from:)(a1);
      sub_2498FDE64(v15, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v3, v10, (uint64_t)v5, v14, (uint64_t)v6, v7, v8, v9, (void (*)(void))sub_2498826E4);
      *uint64_t v1 = v11;
      v1[1] = v12;
      *((void *)v1 + 4) = v3;
      *(long long *)((char *)v1 + 40) = v13;
      *(long long *)((char *)v1 + 56) = v14;
      *((void *)v1 + 9) = v7;
      *((void *)v1 + 10) = v8;
      *((void *)v1 + 11) = v9;
    }
  }
}

void Instrument.IndicatorStyle.CriticalConfiguration.restoreAssets(from:)(void *a1)
{
  ImageAsset.restore(from:)(a1);
  if (!v1) {
    ImageAsset.restore(from:)(a1);
  }
}

BOOL Instrument.IndicatorStyle.rendersLocally.getter()
{
  return (~*(_DWORD *)(v0 + 32) & 0xFELL) != 0;
}

uint64_t Instrument.IndicatorStyle.name.getter()
{
  if ((*(void *)(v0 + 32) & 0xFELL) == 0xFE) {
    return 0x6567617373656DLL;
  }
  else {
    return 0x6C61636974697263;
  }
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.closeButton.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 40);
  *(void *)a1 = *(void *)v1;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v7 = *(unsigned char *)(v1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return sub_24988247C(v2, v3, v4, v5, v7);
}

__n128 Instrument.IndicatorStyle.CriticalConfiguration.closeButton.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  sub_2498826E4(*(void **)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
  __n128 result = v7;
  *(__n128 *)uint64_t v1 = v7;
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  *(unsigned char *)(v1 + 32) = v4;
  *(void *)(v1 + 40) = v5;
  return result;
}

uint64_t (*Instrument.IndicatorStyle.CriticalConfiguration.closeButton.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.focusedCloseButton.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void **)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  unsigned __int8 v4 = *(void **)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  char v7 = *(unsigned char *)(v1 + 80);
  *(unsigned char *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v6;
  return sub_24988247C(v2, v3, v4, v5, v7);
}

__n128 Instrument.IndicatorStyle.CriticalConfiguration.focusedCloseButton.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  unsigned __int8 v4 = a1[2].n128_u8[0];
  unint64_t v5 = a1[2].n128_u64[1];
  sub_2498826E4(*(void **)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80));
  __n128 result = v7;
  *(__n128 *)(v1 + 48) = v7;
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 72) = v3;
  *(unsigned char *)(v1 + 80) = v4;
  *(void *)(v1 + 88) = v5;
  return result;
}

uint64_t (*Instrument.IndicatorStyle.CriticalConfiguration.focusedCloseButton.modify())()
{
  return nullsub_1;
}

__n128 Instrument.IndicatorStyle.CriticalConfiguration.init(closeButton:focusedCloseButton:defaultState:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_bridgeObjectRelease();
  char v6 = *(unsigned char *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  long long v10 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v10;
  *(unsigned char *)(a3 + 32) = v6;
  *(void *)(a3 + 40) = v7;
  __n128 result = *(__n128 *)a2;
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 64) = v12;
  *(unsigned char *)(a3 + 80) = v8;
  *(void *)(a3 + 88) = v9;
  return result;
}

void Instrument.IndicatorStyle.CriticalConfiguration.hash(into:)(uint64_t a1)
{
  unint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  char v6 = *(void **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v7 = *(void **)(v1 + 64);
  uint64_t v11 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 72);
  long long v12 = *(void **)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 32);
  char v10 = *(unsigned char *)(v1 + 80);
  sub_24988247C(*(void **)v1, v4, v6, v5, v9);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_249AEE348();
  sub_2498826E4(v3, v4, v6, v5, v9);
  sub_24988247C(v12, v11, v7, v8, v10);
  ImageAsset.ImageType.hash(into:)(a1);
  sub_249AEE348();

  sub_2498826E4(v12, v11, v7, v8, v10);
}

uint64_t sub_249959898()
{
  if (*v0) {
    return 0xD000000000000012;
  }
  else {
    return 0x74754265736F6C63;
  }
}

uint64_t sub_2499598E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24995DF70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249959908(uint64_t a1)
{
  unint64_t v2 = sub_24995C098();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249959944(uint64_t a1)
{
  unint64_t v2 = sub_24995C098();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0908);
  uint64_t v22 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v20 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  char v8 = *((unsigned char *)v1 + 32);
  uint64_t v9 = *((void *)v1 + 5);
  uint64_t v18 = *((void *)v1 + 6);
  uint64_t v19 = v9;
  uint64_t v10 = *((void *)v1 + 7);
  uint64_t v16 = *((void *)v1 + 8);
  uint64_t v17 = v10;
  uint64_t v11 = *((void *)v1 + 9);
  int v28 = *((unsigned __int8 *)v1 + 80);
  uint64_t v14 = *((void *)v1 + 11);
  uint64_t v15 = v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24995C098();
  sub_249AEE468();
  long long v23 = v20;
  uint64_t v24 = v7;
  uint64_t v25 = v6;
  char v26 = v8;
  uint64_t v27 = v19;
  char v29 = 0;
  sub_24989D190();
  uint64_t v12 = v21;
  sub_249AEDF08();
  if (!v12)
  {
    *(void *)&long long v23 = v18;
    *((void *)&v23 + 1) = v17;
    uint64_t v24 = v16;
    uint64_t v25 = v15;
    char v26 = v28;
    uint64_t v27 = v14;
    char v29 = 1;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v5, v3);
}

uint64_t Instrument.IndicatorStyle.CriticalConfiguration.hashValue.getter()
{
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  return sub_249AEE388();
}

void Instrument.IndicatorStyle.CriticalConfiguration.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0918);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24995C098();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    char v40 = 0;
    sub_24989D2E8();
    sub_249AEDE08();
    uint64_t v9 = v34;
    uint64_t v29 = v38;
    uint64_t v30 = v36;
    char v40 = 1;
    uint64_t v31 = v35;
    uint64_t v32 = v33;
    int v39 = v37;
    sub_24988247C(v33, v34, v35, v36, v37);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v33;
    long long v23 = v33;
    uint64_t v12 = v35;
    uint64_t v11 = v36;
    uint64_t v25 = v35;
    uint64_t v26 = v38;
    uint64_t v27 = v34;
    char v13 = v37;
    int v24 = v37;
    char v14 = v39;
    sub_24988247C(v32, v9, v31, v30, v39);
    uint64_t v15 = v10;
    uint64_t v16 = v27;
    uint64_t v28 = v11;
    sub_24988247C(v15, v27, v12, v11, v13);
    uint64_t v18 = v31;
    uint64_t v17 = v32;
    uint64_t v19 = v30;
    sub_2498826E4(v32, v9, v31, v30, v14);
    *(void *)a2 = v17;
    *(void *)(a2 + 8) = v9;
    *(void *)(a2 + 16) = v18;
    *(void *)(a2 + 24) = v19;
    *(unsigned char *)(a2 + 32) = v14;
    long long v20 = v23;
    *(void *)(a2 + 40) = v29;
    *(void *)(a2 + 48) = v20;
    *(void *)(a2 + 56) = v16;
    uint64_t v21 = v25;
    uint64_t v22 = v28;
    *(void *)(a2 + 64) = v25;
    *(void *)(a2 + 72) = v22;
    LOBYTE(v17) = v24;
    *(unsigned char *)(a2 + 80) = v24;
    *(void *)(a2 + 88) = v26;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2498826E4(v32, v9, v31, v19, v14);
    sub_2498826E4(v20, v27, v21, v28, (char)v17);
  }
}

uint64_t sub_249959F5C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void **)(v0 + 48);
  uint64_t v11 = *(void *)(v0 + 40);
  char v14 = *(void **)(v0 + 64);
  uint64_t v15 = *(void *)(v0 + 56);
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v16 = *(void *)(v0 + 88);
  char v6 = *(unsigned char *)(v0 + 32);
  char v12 = *(unsigned char *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_249AFA7A0;
  *(void *)(v7 + 56) = &type metadata for ImageAsset;
  *(void *)(v7 + 64) = &protocol witness table for ImageAsset;
  uint64_t v8 = swift_allocObject();
  *(void *)(v7 + 32) = v8;
  *(void *)(v8 + 16) = v1;
  *(void *)(v8 + 24) = v2;
  *(void *)(v8 + 32) = v3;
  *(void *)(v8 + 40) = v4;
  *(unsigned char *)(v8 + 48) = v6;
  *(void *)(v8 + 56) = v11;
  *(void *)(v7 + 96) = &type metadata for ImageAsset;
  *(void *)(v7 + 104) = &protocol witness table for ImageAsset;
  uint64_t v9 = swift_allocObject();
  *(void *)(v7 + 72) = v9;
  *(void *)(v9 + 16) = v5;
  *(void *)(v9 + 24) = v15;
  *(void *)(v9 + 32) = v14;
  *(void *)(v9 + 40) = v13;
  *(unsigned char *)(v9 + 48) = v12;
  *(void *)(v9 + 56) = v16;
  sub_24988247C(v1, v2, v3, v4, v6);
  sub_24988247C(v5, v15, v14, v13, v12);
  return v7;
}

void sub_24995A0B4(void *a1)
{
  ImageAsset.restore(from:)(a1);
  if (!v1) {
    ImageAsset.restore(from:)(a1);
  }
}

void sub_24995A0E8(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_24995A100(void *a1)
{
  return Instrument.IndicatorStyle.CriticalConfiguration.encode(to:)(a1);
}

uint64_t sub_24995A11C(uint64_t a1)
{
  return sub_249AEE348();
}

uint64_t sub_24995A1C0()
{
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  return sub_249AEE388();
}

void Instrument.IndicatorStyle.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) != 0)
  {
    uint64_t v14 = *(void *)(v1 + 88);
    uint64_t v4 = *(void **)(v1 + 64);
    uint64_t v11 = *(void *)(v1 + 72);
    uint64_t v12 = *(void *)(v1 + 80);
    char v6 = *(void **)(v1 + 48);
    uint64_t v5 = *(void *)(v1 + 56);
    uint64_t v13 = *(void *)(v1 + 40);
    uint64_t v7 = *(void **)(v1 + 16);
    uint64_t v8 = *(void *)(v1 + 24);
    uint64_t v10 = *(void **)v1;
    uint64_t v9 = *(void *)(v1 + 8);
    sub_249AEE348();
    sub_24988247C(v10, v9, v7, v8, v3);
    sub_24988247C(v6, v5, v4, v11, v12);
    ImageAsset.ImageType.hash(into:)(a1);
    sub_249AEE348();
    ImageAsset.ImageType.hash(into:)(a1);
    sub_249AEE348();
    sub_2498FDE64((uint64_t)v10, v9, (uint64_t)v7, v8, v3, v13, (uint64_t)v6, v5, (uint64_t)v4, v11, v12, v14, (void (*)(void))sub_2498826E4);
  }
  else
  {
    sub_249AEE348();
  }
}

uint64_t sub_24995A3F4()
{
  if (*v0) {
    return 0x6567617373656DLL;
  }
  else {
    return 0x6C61636974697263;
  }
}

uint64_t sub_24995A430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24995E078(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24995A458(uint64_t a1)
{
  unint64_t v2 = sub_24995C0EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24995A494(uint64_t a1)
{
  unint64_t v2 = sub_24995C0EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24995A4D0(uint64_t a1)
{
  unint64_t v2 = sub_24995C194();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24995A50C(uint64_t a1)
{
  unint64_t v2 = sub_24995C194();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24995A548(uint64_t a1)
{
  unint64_t v2 = sub_24995C140();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24995A584(uint64_t a1)
{
  unint64_t v2 = sub_24995C140();

  return MEMORY[0x270FA00B8](a1, v2);
}

void Instrument.IndicatorStyle.encode(to:)(void *a1)
{
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0920);
  uint64_t v27 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0928);
  uint64_t v29 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v25 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0930);
  uint64_t v40 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *(void **)v1;
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v38 = *(void **)(v1 + 16);
  uint64_t v39 = v8;
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + 32);
  uint64_t v36 = *(void *)(v1 + 40);
  uint64_t v37 = v9;
  uint64_t v11 = *(void **)(v1 + 48);
  uint64_t v34 = *(void *)(v1 + 56);
  uint64_t v35 = v11;
  uint64_t v33 = *(void **)(v1 + 64);
  uint64_t v32 = *(void *)(v1 + 72);
  uint64_t v31 = *(void *)(v1 + 80);
  uint64_t v26 = *(void *)(v1 + 88);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24995C0EC();
  sub_249AEE468();
  if ((~(_BYTE)v10 & 0xFE) != 0)
  {
    LOBYTE(v42) = 0;
    uint64_t v13 = v38;
    uint64_t v14 = v39;
    uint64_t v15 = v37;
    sub_24988247C(v41, v39, v38, v37, v10);
    uint64_t v16 = v35;
    uint64_t v17 = v32;
    uint64_t v24 = v10;
    sub_24988247C(v35, v34, v33, v32, v31);
    sub_24995C194();
    uint64_t v18 = v25;
    sub_249AEDE48();
    uint64_t v42 = v41;
    uint64_t v43 = v14;
    uint64_t v44 = v13;
    uint64_t v45 = v15;
    char v46 = v10;
    uint64_t v47 = v36;
    uint64_t v48 = v16;
    uint64_t v19 = v34;
    uint64_t v20 = (uint64_t)v33;
    uint64_t v49 = v34;
    uint64_t v50 = v33;
    uint64_t v51 = v17;
    uint64_t v21 = v31;
    char v52 = v31;
    uint64_t v22 = v26;
    uint64_t v53 = v26;
    sub_24995C1E8();
    uint64_t v23 = v30;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v23);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v54);
    sub_2498FDE64((uint64_t)v41, v39, (uint64_t)v38, v37, v24, v36, (uint64_t)v35, v19, v20, v32, v21, v22, (void (*)(void))sub_2498826E4);
  }
  else
  {
    LOBYTE(v42) = 1;
    sub_24995C140();
    uint64_t v12 = v54;
    sub_249AEDE48();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v28);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v12);
  }
}

uint64_t Instrument.IndicatorStyle.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  int v6 = ~*(_DWORD *)(v0 + 32);
  uint64_t v7 = *(void **)(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 56);
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v12 = *(void **)(v0 + 64);
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 88);
  sub_249AEE338();
  sub_249AEE348();
  if ((v6 & 0xFE) != 0)
  {
    sub_24988247C(v1, v2, v3, v4, v5);
    sub_24988247C(v7, v13, v12, v8, v10);
    ImageAsset.ImageType.hash(into:)((uint64_t)v15);
    sub_249AEE348();
    ImageAsset.ImageType.hash(into:)((uint64_t)v15);
    sub_249AEE348();
    sub_2498FDE64((uint64_t)v1, v2, (uint64_t)v3, v4, v5, v14, (uint64_t)v7, v13, (uint64_t)v12, v8, v10, v9, (void (*)(void))sub_2498826E4);
  }
  return sub_249AEE388();
}

uint64_t Instrument.IndicatorStyle.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0958);
  uint64_t v37 = *(void *)(v3 - 8);
  uint64_t v38 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0960);
  uint64_t v35 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0968);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v39 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  sub_24995C0EC();
  uint64_t v14 = v48;
  sub_249AEE428();
  if (v14) {
    goto LABEL_9;
  }
  uint64_t v34 = v6;
  uint64_t v15 = v37;
  uint64_t v16 = v38;
  uint64_t v48 = v10;
  uint64_t v17 = sub_249AEDE18();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v26 = sub_249AEDB08();
    swift_allocError();
    uint64_t v28 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v28 = &type metadata for Instrument.IndicatorStyle;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v26 - 8) + 104))(v28, *MEMORY[0x263F8DCB0], v26);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v9);
LABEL_9:
    uint64_t v30 = (uint64_t)v39;
    return __swift_destroy_boxed_opaque_existential_2Tm(v30);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    LOBYTE(v40) = 1;
    sub_24995C140();
    sub_249AEDD38();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v9);
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    long long v21 = 0uLL;
    uint64_t v22 = 254;
    long long v23 = 0uLL;
    long long v24 = 0uLL;
    long long v25 = 0uLL;
  }
  else
  {
    LOBYTE(v40) = 0;
    sub_24995C194();
    uint64_t v29 = v8;
    sub_249AEDD38();
    sub_24995C23C();
    uint64_t v32 = v34;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v29, v32);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v9);
    long long v21 = v40;
    long long v23 = v41;
    uint64_t v22 = v42;
    long long v24 = v43;
    long long v25 = v44;
    uint64_t v18 = v45;
    uint64_t v19 = v46;
    uint64_t v20 = v47;
  }
  uint64_t v30 = (uint64_t)v39;
  uint64_t v33 = v36;
  *uint64_t v36 = v21;
  v33[1] = v23;
  *((void *)v33 + 4) = v22;
  *(_OWORD *)((char *)v33 + 40) = v24;
  *(_OWORD *)((char *)v33 + 56) = v25;
  *((void *)v33 + 9) = v18;
  *((void *)v33 + 10) = v19;
  *((void *)v33 + 11) = v20;
  return __swift_destroy_boxed_opaque_existential_2Tm(v30);
}

uint64_t sub_24995B05C()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if ((~*(_DWORD *)(v0 + 32) & 0xFELL) == 0) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v16 = *(void *)(v0 + 72);
  uint64_t v17 = *(void *)(v0 + 88);
  uint64_t v14 = *(void *)(v0 + 56);
  uint64_t v15 = *(void **)(v0 + 64);
  uint64_t v12 = *(void *)(v0 + 40);
  uint64_t v13 = *(void **)(v0 + 48);
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v6 = *(void **)v0;
  uint64_t v5 = *(void *)(v0 + 8);
  uint64_t v11 = *(void **)v0;
  char v7 = *(unsigned char *)(v0 + 80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_249AFA7A0;
  *(void *)(v2 + 56) = &type metadata for ImageAsset;
  *(void *)(v2 + 64) = &protocol witness table for ImageAsset;
  uint64_t v8 = swift_allocObject();
  *(void *)(v2 + 32) = v8;
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v5;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v3;
  *(unsigned char *)(v8 + 48) = v1;
  *(void *)(v8 + 56) = v12;
  *(void *)(v2 + 96) = &type metadata for ImageAsset;
  *(void *)(v2 + 104) = &protocol witness table for ImageAsset;
  uint64_t v9 = swift_allocObject();
  *(void *)(v2 + 72) = v9;
  *(void *)(v9 + 16) = v13;
  *(void *)(v9 + 24) = v14;
  *(void *)(v9 + 32) = v15;
  *(void *)(v9 + 40) = v16;
  *(unsigned char *)(v9 + 48) = v7;
  *(void *)(v9 + 56) = v17;
  sub_24988247C(v11, v5, v4, v3, v1);
  sub_24988247C(v13, v14, v15, v16, v7);
  return v2;
}

void sub_24995B1C4(void *a1)
{
  uint64_t v3 = *((void *)v1 + 4);
  if ((~*((_DWORD *)v1 + 8) & 0xFELL) != 0)
  {
    uint64_t v5 = (void *)*((void *)v1 + 6);
    uint64_t v6 = (void *)*((void *)v1 + 8);
    uint64_t v7 = *((void *)v1 + 9);
    uint64_t v8 = *((void *)v1 + 10);
    long long v11 = *v1;
    long long v12 = v1[1];
    uint64_t v10 = *((void *)v1 + 5);
    *(void *)&long long v13 = v10;
    *((void *)&v13 + 1) = v5;
    *(void *)&long long v14 = *((void *)v1 + 7);
    *((void *)&v14 + 1) = v6;
    uint64_t v9 = *((void *)v1 + 11);
    uint64_t v15 = *(void *)v1;
    sub_24988247C(*(void **)v1, *((void *)v1 + 1), (void *)v12, *((uint64_t *)&v12 + 1), v3);
    sub_24988247C(v5, v14, v6, v7, v8);
    ImageAsset.restore(from:)(a1);
    if (v2)
    {
      sub_2498826E4((void *)v11, *((uint64_t *)&v11 + 1), (void *)v12, *((uint64_t *)&v12 + 1), v3);
      sub_2498826E4(v5, v14, v6, v7, v8);
    }
    else
    {
      ImageAsset.restore(from:)(a1);
      sub_2498FDE64(v15, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v3, v10, (uint64_t)v5, v14, (uint64_t)v6, v7, v8, v9, (void (*)(void))sub_2498826E4);
      *uint64_t v1 = v11;
      v1[1] = v12;
      *((void *)v1 + 4) = v3;
      *(long long *)((char *)v1 + 40) = v13;
      *(long long *)((char *)v1 + 56) = v14;
      *((void *)v1 + 9) = v7;
      *((void *)v1 + 10) = v8;
      *((void *)v1 + 11) = v9;
    }
  }
}

uint64_t sub_24995B370@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return Instrument.IndicatorStyle.init(from:)(a1, a2);
}

void sub_24995B388(void *a1)
{
}

void sub_24995B3A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) != 0)
  {
    uint64_t v14 = *(void *)(v1 + 88);
    uint64_t v4 = *(void **)(v1 + 64);
    uint64_t v11 = *(void *)(v1 + 72);
    uint64_t v12 = *(void *)(v1 + 80);
    uint64_t v6 = *(void **)(v1 + 48);
    uint64_t v5 = *(void *)(v1 + 56);
    uint64_t v13 = *(void *)(v1 + 40);
    uint64_t v7 = *(void **)(v1 + 16);
    uint64_t v8 = *(void *)(v1 + 24);
    uint64_t v10 = *(void **)v1;
    uint64_t v9 = *(void *)(v1 + 8);
    sub_249AEE348();
    sub_24988247C(v10, v9, v7, v8, v3);
    sub_24988247C(v6, v5, v4, v11, v12);
    ImageAsset.ImageType.hash(into:)(a1);
    sub_249AEE348();
    ImageAsset.ImageType.hash(into:)(a1);
    sub_249AEE348();
    sub_2498FDE64((uint64_t)v10, v9, (uint64_t)v7, v8, v3, v13, (uint64_t)v6, v5, (uint64_t)v4, v11, v12, v14, (void (*)(void))sub_2498826E4);
  }
  else
  {
    sub_249AEE348();
  }
}

uint64_t sub_24995B50C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  int v6 = ~*(_DWORD *)(v0 + 32);
  uint64_t v7 = *(void **)(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 56);
  uint64_t v14 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v12 = *(void **)(v0 + 64);
  uint64_t v10 = *(void *)(v0 + 80);
  uint64_t v9 = *(void *)(v0 + 88);
  sub_249AEE338();
  sub_249AEE348();
  if ((v6 & 0xFE) != 0)
  {
    sub_24988247C(v1, v2, v3, v4, v5);
    sub_24988247C(v7, v13, v12, v8, v10);
    ImageAsset.ImageType.hash(into:)((uint64_t)v15);
    sub_249AEE348();
    ImageAsset.ImageType.hash(into:)((uint64_t)v15);
    sub_249AEE348();
    sub_2498FDE64((uint64_t)v1, v2, (uint64_t)v3, v4, v5, v14, (uint64_t)v7, v13, (uint64_t)v12, v8, v10, v9, (void (*)(void))sub_2498826E4);
  }
  return sub_249AEE388();
}

uint64_t _s14CarPlayAssetUI10InstrumentV14IndicatorStyleO21CriticalConfigurationV2eeoiySbAG_AGtFZ_0(long long *a1, long long *a2)
{
  char v2 = *((unsigned char *)a1 + 32);
  uint64_t v3 = *((void *)a1 + 5);
  uint64_t v4 = *((void *)a1 + 8);
  uint64_t v18 = *((void *)a1 + 7);
  uint64_t v19 = *((void *)a1 + 6);
  uint64_t v5 = *((void *)a1 + 9);
  char v6 = *((unsigned char *)a1 + 80);
  char v7 = *((unsigned char *)a2 + 32);
  uint64_t v8 = *((void *)a2 + 5);
  uint64_t v9 = *((void *)a2 + 6);
  uint64_t v10 = *((void *)a2 + 7);
  uint64_t v11 = *((void *)a2 + 8);
  uint64_t v12 = *((void *)a2 + 9);
  char v13 = *((unsigned char *)a2 + 80);
  uint64_t v20 = *((void *)a2 + 11);
  uint64_t v21 = *((void *)a1 + 11);
  long long v14 = a1[1];
  long long v25 = *a1;
  long long v26 = v14;
  char v27 = v2;
  long long v15 = a2[1];
  long long v22 = *a2;
  long long v23 = v15;
  char v24 = v7;
  char v16 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v25, (uint64_t)&v22);
  uint64_t result = 0;
  if ((v16 & 1) != 0 && v3 == v8)
  {
    *(void *)&long long v25 = v19;
    *((void *)&v25 + 1) = v18;
    *(void *)&long long v26 = v4;
    *((void *)&v26 + 1) = v5;
    char v27 = v6;
    *(void *)&long long v22 = v9;
    *((void *)&v22 + 1) = v10;
    *(void *)&long long v23 = v11;
    *((void *)&v23 + 1) = v12;
    char v24 = v13;
    return _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)&v25, (uint64_t)&v22) & (v21 == v20);
  }
  return result;
}

uint64_t _s14CarPlayAssetUI10InstrumentV14IndicatorStyleO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  int v8 = ~*((_DWORD *)a1 + 8);
  uint64_t v9 = a1[6];
  uint64_t v10 = a1[7];
  uint64_t v11 = a1[8];
  uint64_t v12 = a1[9];
  uint64_t v13 = a1[10];
  uint64_t v14 = a1[11];
  uint64_t v16 = *a2;
  uint64_t v15 = a2[1];
  uint64_t v17 = a2[2];
  uint64_t v18 = a2[3];
  uint64_t v19 = a2[4];
  uint64_t v20 = a2[5];
  uint64_t v21 = a2[6];
  uint64_t v22 = a2[7];
  uint64_t v23 = a2[8];
  uint64_t v24 = a2[9];
  uint64_t v26 = a2[10];
  uint64_t v25 = a2[11];
  v92[0] = v2;
  v92[1] = v3;
  v92[2] = v4;
  v92[3] = v5;
  v92[4] = v7;
  v92[5] = v6;
  v92[6] = v9;
  v92[7] = v10;
  v92[8] = v11;
  v92[9] = v12;
  v92[10] = v13;
  v92[11] = v14;
  v92[12] = v16;
  v92[13] = v15;
  v92[14] = v17;
  v92[15] = v18;
  v92[16] = v19;
  v92[17] = v20;
  v92[18] = v21;
  v92[19] = v22;
  v92[20] = v23;
  v92[21] = v24;
  uint64_t v27 = v19 & 0xFE;
  v92[22] = v26;
  v92[23] = v25;
  if ((v8 & 0xFE) != 0)
  {
    if (v27 != 254)
    {
      *(void *)&long long v81 = v2;
      *((void *)&v81 + 1) = v3;
      uint64_t v82 = v4;
      uint64_t v83 = v5;
      char v84 = v7;
      uint64_t v85 = v6;
      uint64_t v86 = v9;
      uint64_t v87 = v10;
      uint64_t v88 = v11;
      uint64_t v89 = v12;
      char v90 = v13;
      uint64_t v91 = v14;
      *(void *)&long long v70 = v16;
      *((void *)&v70 + 1) = v15;
      uint64_t v71 = v17;
      uint64_t v72 = v18;
      char v73 = v19;
      uint64_t v74 = v20;
      uint64_t v75 = v21;
      uint64_t v76 = v22;
      uint64_t v77 = v23;
      uint64_t v78 = v24;
      char v79 = v26;
      uint64_t v80 = v25;
      uint64_t v65 = v20;
      uint64_t v67 = v21;
      uint64_t v35 = v15;
      uint64_t v51 = v23;
      uint64_t v52 = v15;
      uint64_t v36 = v22;
      uint64_t v69 = v22;
      uint64_t v61 = v26;
      uint64_t v62 = v6;
      uint64_t v50 = v16;
      uint64_t v49 = v25;
      uint64_t v60 = v25;
      uint64_t v37 = v16;
      uint64_t v38 = v4;
      uint64_t v56 = v9;
      uint64_t v57 = v5;
      uint64_t v39 = v13;
      uint64_t v63 = v13;
      uint64_t v40 = v6;
      uint64_t v41 = v20;
      uint64_t v42 = v21;
      uint64_t v54 = v3;
      uint64_t v55 = v10;
      uint64_t v43 = v2;
      uint64_t v44 = v11;
      uint64_t v45 = v12;
      uint64_t v58 = v17;
      uint64_t v59 = v18;
      sub_2498FDE64(v37, v35, v17, v18, v19, v41, v42, v36, v23, v24, v26, v49, (void (*)(void))sub_24988247C);
      uint64_t v53 = v43;
      sub_2498FDE64(v43, v54, v38, v57, v7, v40, v56, v55, v44, v45, v39, v14, (void (*)(void))sub_24988247C);
      sub_2498FDE64(v43, v54, v38, v57, v7, v62, v56, v55, v44, v45, v63, v14, (void (*)(void))sub_24988247C);
      sub_2498FDE64(v50, v52, v58, v59, v19, v65, v67, v69, v51, v24, v61, v60, (void (*)(void))sub_24988247C);
      char v28 = _s14CarPlayAssetUI10InstrumentV14IndicatorStyleO21CriticalConfigurationV2eeoiySbAG_AGtFZ_0(&v81, &v70);
      sub_24995E16C((uint64_t)v92);
      sub_2498FDE64(v50, v52, v58, v59, v19, v65, v67, v69, v51, v24, v61, v60, (void (*)(void))sub_2498826E4);
      sub_2498FDE64(v53, v54, v38, v57, v7, v62, v56, v55, v44, v45, v63, v14, (void (*)(void))sub_2498826E4);
      return v28 & 1;
    }
    goto LABEL_5;
  }
  if (v27 != 254)
  {
LABEL_5:
    uint64_t v64 = v20;
    uint64_t v66 = v21;
    uint64_t v68 = v22;
    uint64_t v29 = v23;
    uint64_t v30 = v26;
    uint64_t v48 = v14;
    uint64_t v47 = v13;
    uint64_t v31 = v25;
    int v32 = v7;
    uint64_t v33 = v17;
    uint64_t v34 = v18;
    sub_2498FDE64(v2, v3, v4, v5, v32, v6, v9, v10, v11, v12, v47, v48, (void (*)(void))sub_24988247C);
    sub_2498FDE64(v16, v15, v33, v34, v19, v64, v66, v68, v29, v24, v30, v31, (void (*)(void))sub_24988247C);
    sub_24995E16C((uint64_t)v92);
    char v28 = 0;
    return v28 & 1;
  }
  sub_24995E16C((uint64_t)v92);
  char v28 = 1;
  return v28 & 1;
}

uint64_t _s14CarPlayAssetUI10InstrumentV22IndicatorConfigurationV2eeoiySbAE_AEtFZ_0(uint64_t a1, char *a2)
{
  uint64_t v32 = *(void *)(a1 + 16);
  uint64_t v33 = *(void *)(a1 + 8);
  uint64_t v30 = *(void *)(a1 + 32);
  uint64_t v31 = *(void *)(a1 + 24);
  uint64_t v28 = *(void *)(a1 + 48);
  uint64_t v29 = *(void *)(a1 + 40);
  uint64_t v26 = *(void *)(a1 + 64);
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v24 = *(void *)(a1 + 80);
  uint64_t v25 = *(void *)(a1 + 72);
  uint64_t v22 = *(void *)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 88);
  char v2 = *a2;
  uint64_t v3 = *((void *)a2 + 1);
  uint64_t v4 = *((void *)a2 + 2);
  uint64_t v5 = *((void *)a2 + 3);
  uint64_t v6 = *((void *)a2 + 4);
  uint64_t v7 = *((void *)a2 + 5);
  uint64_t v8 = *((void *)a2 + 6);
  uint64_t v9 = *((void *)a2 + 7);
  uint64_t v20 = *((void *)a2 + 9);
  uint64_t v21 = *((void *)a2 + 8);
  uint64_t v18 = *((void *)a2 + 11);
  uint64_t v19 = *((void *)a2 + 10);
  uint64_t v17 = *((void *)a2 + 12);
  LOBYTE(v35[0]) = *(unsigned char *)a1;
  LOBYTE(v34[0]) = v2;
  unint64_t v10 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v12 = v11;
  if (v10 == InstrumentDataIdentifier.rawValue.getter() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  v35[0] = v33;
  v35[1] = v32;
  void v35[2] = v31;
  void v35[3] = v30;
  v35[4] = v29;
  uint64_t v35[5] = v28;
  v35[6] = v27;
  v35[7] = v26;
  v35[8] = v25;
  v35[9] = v24;
  v35[10] = v23;
  v35[11] = v22;
  v34[0] = v3;
  v34[1] = v4;
  void v34[2] = v5;
  v34[3] = v6;
  void v34[4] = v7;
  v34[5] = v8;
  v34[6] = v9;
  v34[7] = v21;
  v34[8] = v20;
  v34[9] = v19;
  v34[10] = v18;
  v34[11] = v17;
  if ((_s14CarPlayAssetUI10InstrumentV14IndicatorStyleO2eeoiySbAE_AEtFZ_0(v35, v34) & 1) == 0) {
    return 0;
  }
  int v15 = sub_249AEBB68();
  if (v15 != sub_249AEBB68()) {
    return 0;
  }

  return sub_249AEBAA8();
}

uint64_t _s14CarPlayAssetUI17LocalNotificationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  int v4 = *(unsigned __int8 *)(a1 + 48);
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  int v7 = *(unsigned __int8 *)(a2 + 48);
  long long v8 = *(_OWORD *)(a1 + 16);
  v13[0] = *(_OWORD *)a1;
  v13[1] = v8;
  char v14 = v2;
  long long v9 = *(_OWORD *)(a2 + 16);
  v11[0] = *(_OWORD *)a2;
  v11[1] = v9;
  char v12 = v5;
  return _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v13, (uint64_t)v11) & (v3 == v6) & (v4 ^ v7 ^ 1);
}

unint64_t sub_24995BE04()
{
  unint64_t result = qword_2696E08C0;
  if (!qword_2696E08C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E08C0);
  }
  return result;
}

unint64_t sub_24995BE58()
{
  unint64_t result = qword_2696E08D8;
  if (!qword_2696E08D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E08D8);
  }
  return result;
}

unint64_t sub_24995BEAC()
{
  unint64_t result = qword_2696E08E0;
  if (!qword_2696E08E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E08E0);
  }
  return result;
}

unint64_t sub_24995BF00()
{
  unint64_t result = qword_2696E08E8;
  if (!qword_2696E08E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E08E8);
  }
  return result;
}

uint64_t *sub_24995BF54(uint64_t *a1, void (*a2)(void))
{
  return a1;
}

unint64_t sub_24995BFB0()
{
  unint64_t result = qword_2696E08F8;
  if (!qword_2696E08F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E08F8);
  }
  return result;
}

unint64_t sub_24995C004()
{
  unint64_t result = qword_2696E0900;
  if (!qword_2696E0900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0900);
  }
  return result;
}

uint64_t sub_24995C058()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

unint64_t sub_24995C098()
{
  unint64_t result = qword_2696E0910;
  if (!qword_2696E0910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0910);
  }
  return result;
}

unint64_t sub_24995C0EC()
{
  unint64_t result = qword_2696E0938;
  if (!qword_2696E0938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0938);
  }
  return result;
}

unint64_t sub_24995C140()
{
  unint64_t result = qword_2696E0940;
  if (!qword_2696E0940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0940);
  }
  return result;
}

unint64_t sub_24995C194()
{
  unint64_t result = qword_2696E0948;
  if (!qword_2696E0948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0948);
  }
  return result;
}

unint64_t sub_24995C1E8()
{
  unint64_t result = qword_2696E0950;
  if (!qword_2696E0950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0950);
  }
  return result;
}

unint64_t sub_24995C23C()
{
  unint64_t result = qword_2696E0970;
  if (!qword_2696E0970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0970);
  }
  return result;
}

unint64_t sub_24995C294()
{
  unint64_t result = qword_2696E0978;
  if (!qword_2696E0978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0978);
  }
  return result;
}

unint64_t sub_24995C2EC()
{
  unint64_t result = qword_2696E0980;
  if (!qword_2696E0980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0980);
  }
  return result;
}

unint64_t sub_24995C344()
{
  unint64_t result = qword_2696E0988;
  if (!qword_2696E0988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0988);
  }
  return result;
}

unint64_t sub_24995C39C()
{
  unint64_t result = qword_2696E0990;
  if (!qword_2696E0990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0990);
  }
  return result;
}

void destroy for LocalNotification(uint64_t a1)
{
}

uint64_t initializeWithCopy for LocalNotification(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for LocalNotification(uint64_t a1, uint64_t a2)
{
  int v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  long long v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_2498826E4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LocalNotification(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_2498826E4(v5, v6, v7, v8, v10);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalNotification(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for LocalNotification(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalNotification()
{
  return &type metadata for LocalNotification;
}

void _s22IndicatorConfigurationVwxx(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 40) & 0xFELL) != 0)
  {
    sub_2498826E4(*(void **)(a1 + 8), *(void *)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40));
    char v2 = *(void **)(a1 + 56);
    uint64_t v3 = *(void *)(a1 + 64);
    BOOL v4 = *(void **)(a1 + 72);
    uint64_t v5 = *(void *)(a1 + 80);
    char v6 = *(unsigned char *)(a1 + 88);
    sub_2498826E4(v2, v3, v4, v5, v6);
  }
}

uint64_t _s22IndicatorConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 40);
  if ((~*(_DWORD *)(a2 + 40) & 0xFELL) != 0)
  {
    uint64_t v8 = *(void **)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(void **)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    sub_24988247C(v8, v9, v10, v11, v4);
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(unsigned char *)(a1 + 40) = v4;
    uint64_t v12 = *(void **)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    uint64_t v13 = *(void *)(a2 + 64);
    char v14 = *(void **)(a2 + 72);
    uint64_t v15 = *(void *)(a2 + 80);
    LOBYTE(v11) = *(unsigned char *)(a2 + 88);
    sub_24988247C(v12, v13, v14, v15, v11);
    *(void *)(a1 + 56) = v12;
    *(void *)(a1 + 64) = v13;
    *(void *)(a1 + 72) = v14;
    *(void *)(a1 + 80) = v15;
    *(unsigned char *)(a1 + 88) = v11;
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 56) = v5;
    long long v6 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v6;
    long long v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = v7;
  }
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v16 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v16;
  return a1;
}

uint64_t _s22IndicatorConfigurationVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = v6 & 0xFE;
  if ((~*(_DWORD *)(a1 + 40) & 0xFELL) != 0)
  {
    if (v7 == 254)
    {
      sub_24995C978(a1 + 8);
      long long v12 = v5[1];
      *uint64_t v4 = *v5;
      v4[1] = v12;
      long long v13 = v5[5];
      long long v15 = v5[2];
      long long v14 = v5[3];
      v4[4] = v5[4];
      void v4[5] = v13;
      v4[2] = v15;
      v4[3] = v14;
      goto LABEL_9;
    }
    uint64_t v24 = *(void **)(a2 + 8);
    uint64_t v25 = *(void *)(a2 + 16);
    uint64_t v26 = *(void **)(a2 + 24);
    uint64_t v27 = *(void *)(a2 + 32);
    sub_24988247C(v24, v25, v26, v27, v6);
    uint64_t v28 = *(void **)(a1 + 8);
    uint64_t v29 = *(void *)(a1 + 16);
    uint64_t v30 = *(void **)(a1 + 24);
    uint64_t v31 = *(void *)(a1 + 32);
    *(void *)(a1 + 8) = v24;
    *(void *)(a1 + 16) = v25;
    *(void *)(a1 + 24) = v26;
    *(void *)(a1 + 32) = v27;
    char v32 = *(unsigned char *)(a1 + 40);
    *(unsigned char *)(a1 + 40) = v6;
    sub_2498826E4(v28, v29, v30, v31, v32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    uint64_t v33 = *(void **)(a2 + 56);
    uint64_t v34 = *(void *)(a2 + 64);
    uint64_t v35 = *(void **)(a2 + 72);
    uint64_t v36 = *(void *)(a2 + 80);
    LOBYTE(v27) = *(unsigned char *)(a2 + 88);
    sub_24988247C(v33, v34, v35, v36, v27);
    uint64_t v37 = *(void **)(a1 + 56);
    uint64_t v38 = *(void *)(a1 + 64);
    uint64_t v39 = *(void **)(a1 + 72);
    uint64_t v40 = *(void *)(a1 + 80);
    *(void *)(a1 + 56) = v33;
    *(void *)(a1 + 64) = v34;
    *(void *)(a1 + 72) = v35;
    *(void *)(a1 + 80) = v36;
    char v41 = *(unsigned char *)(a1 + 88);
    *(unsigned char *)(a1 + 88) = v27;
    sub_2498826E4(v37, v38, v39, v40, v41);
LABEL_8:
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    goto LABEL_9;
  }
  if (v7 != 254)
  {
    long long v16 = *(void **)(a2 + 8);
    uint64_t v17 = *(void *)(a2 + 16);
    uint64_t v18 = *(void **)(a2 + 24);
    uint64_t v19 = *(void *)(a2 + 32);
    sub_24988247C(v16, v17, v18, v19, v6);
    *(void *)(a1 + 8) = v16;
    *(void *)(a1 + 16) = v17;
    *(void *)(a1 + 24) = v18;
    *(void *)(a1 + 32) = v19;
    *(unsigned char *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    uint64_t v20 = *(void **)(a2 + 56);
    uint64_t v21 = *(void *)(a2 + 64);
    uint64_t v22 = *(void **)(a2 + 72);
    uint64_t v23 = *(void *)(a2 + 80);
    LOBYTE(v19) = *(unsigned char *)(a2 + 88);
    sub_24988247C(v20, v21, v22, v23, v19);
    *(void *)(a1 + 56) = v20;
    *(void *)(a1 + 64) = v21;
    *(void *)(a1 + 72) = v22;
    *(void *)(a1 + 80) = v23;
    *(unsigned char *)(a1 + 88) = v19;
    goto LABEL_8;
  }
  long long v8 = *(_OWORD *)(a2 + 24);
  *uint64_t v4 = *v5;
  *(_OWORD *)(a1 + 24) = v8;
  long long v9 = *(_OWORD *)(a2 + 40);
  long long v10 = *(_OWORD *)(a2 + 56);
  long long v11 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v11;
  *(_OWORD *)(a1 + 40) = v9;
  *(_OWORD *)(a1 + 56) = v10;
LABEL_9:
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t sub_24995C978(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0998);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s22IndicatorConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  long long v4 = (_OWORD *)(a1 + 8);
  long long v5 = (_OWORD *)(a2 + 8);
  int v6 = *(_DWORD *)(a1 + 40);
  if ((~(_BYTE)v6 & 0xFE) != 0)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    if ((~*(_DWORD *)(a2 + 40) & 0xFELL) != 0)
    {
      long long v11 = *(void **)(a1 + 8);
      uint64_t v12 = *(void *)(a1 + 16);
      long long v13 = *(void **)(a1 + 24);
      uint64_t v14 = *(void *)(a1 + 32);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(unsigned char *)(a1 + 40) = v7;
      sub_2498826E4(v11, v12, v13, v14, v6);
      uint64_t v15 = *(void *)(a2 + 80);
      char v16 = *(unsigned char *)(a2 + 88);
      uint64_t v17 = *(void **)(a1 + 56);
      uint64_t v18 = *(void *)(a1 + 64);
      uint64_t v19 = *(void **)(a1 + 72);
      uint64_t v20 = *(void *)(a1 + 80);
      long long v21 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v21;
      *(void *)(a1 + 80) = v15;
      char v22 = *(unsigned char *)(a1 + 88);
      *(unsigned char *)(a1 + 88) = v16;
      sub_2498826E4(v17, v18, v19, v20, v22);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      goto LABEL_6;
    }
    sub_24995C978(a1 + 8);
  }
  long long v8 = v5[3];
  v4[2] = v5[2];
  v4[3] = v8;
  long long v9 = v5[5];
  v4[4] = v5[4];
  void v4[5] = v9;
  long long v10 = v5[1];
  *long long v4 = *v5;
  v4[1] = v10;
LABEL_6:
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  long long v23 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v23;
  return a1;
}

uint64_t _s22IndicatorConfigurationVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 104);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s22IndicatorConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 104) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.IndicatorConfiguration()
{
  return &type metadata for Instrument.IndicatorConfiguration;
}

void _s14IndicatorStyleOwxx(uint64_t a1)
{
  if ((*(unsigned char *)(a1 + 32) & 0x7E) == 0)
  {
    sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
    long long v2 = *(void **)(a1 + 48);
    uint64_t v3 = *(void *)(a1 + 56);
    BOOL v4 = *(void **)(a1 + 64);
    uint64_t v5 = *(void *)(a1 + 72);
    char v6 = *(unsigned char *)(a1 + 80);
    sub_2498826E4(v2, v3, v4, v5, v6);
  }
}

uint64_t _s14IndicatorStyleOwcp(uint64_t a1, uint64_t *a2)
{
  char v4 = *((unsigned char *)a2 + 32);
  if ((v4 & 0x7E) != 0)
  {
    long long v5 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v5;
    long long v6 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 80) = v6;
    long long v7 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  else
  {
    uint64_t v8 = *a2;
    uint64_t v9 = a2[1];
    long long v10 = (void *)a2[2];
    uint64_t v11 = a2[3];
    sub_24988247C((void *)*a2, v9, v10, v11, v4);
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(void *)(a1 + 16) = v10;
    *(void *)(a1 + 24) = v11;
    *(unsigned char *)(a1 + 32) = v4;
    uint64_t v12 = (void *)a2[6];
    *(void *)(a1 + 40) = a2[5];
    uint64_t v13 = a2[7];
    uint64_t v14 = (void *)a2[8];
    uint64_t v15 = a2[9];
    LOBYTE(v11) = *((unsigned char *)a2 + 80);
    sub_24988247C(v12, v13, v14, v15, v11);
    *(void *)(a1 + 48) = v12;
    *(void *)(a1 + 56) = v13;
    *(void *)(a1 + 64) = v14;
    *(void *)(a1 + 72) = v15;
    *(unsigned char *)(a1 + 80) = v11;
    *(void *)(a1 + 88) = a2[11];
  }
  return a1;
}

uint64_t _s14IndicatorStyleOwca(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  if ((*(unsigned char *)(a1 + 32) & 0x7E) != 0)
  {
    if ((v4 & 0x7E) == 0)
    {
      long long v5 = *(void **)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      long long v7 = *(void **)(a2 + 16);
      uint64_t v8 = *(void *)(a2 + 24);
      sub_24988247C(*(void **)a2, v6, v7, v8, v4);
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v6;
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v8;
      *(unsigned char *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v9 = *(void **)(a2 + 48);
      uint64_t v10 = *(void *)(a2 + 56);
      uint64_t v11 = *(void **)(a2 + 64);
      uint64_t v12 = *(void *)(a2 + 72);
      LOBYTE(v8) = *(unsigned char *)(a2 + 80);
      sub_24988247C(v9, v10, v11, v12, v8);
      *(void *)(a1 + 48) = v9;
      *(void *)(a1 + 56) = v10;
      *(void *)(a1 + 64) = v11;
      *(void *)(a1 + 72) = v12;
      *(unsigned char *)(a1 + 80) = v8;
LABEL_8:
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      return a1;
    }
  }
  else
  {
    if ((v4 & 0x7E) == 0)
    {
      uint64_t v17 = *(void **)a2;
      uint64_t v18 = *(void *)(a2 + 8);
      uint64_t v19 = *(void **)(a2 + 16);
      uint64_t v20 = *(void *)(a2 + 24);
      sub_24988247C(*(void **)a2, v18, v19, v20, v4);
      long long v21 = *(void **)a1;
      uint64_t v22 = *(void *)(a1 + 8);
      long long v23 = *(void **)(a1 + 16);
      uint64_t v24 = *(void *)(a1 + 24);
      *(void *)a1 = v17;
      *(void *)(a1 + 8) = v18;
      *(void *)(a1 + 16) = v19;
      *(void *)(a1 + 24) = v20;
      char v25 = *(unsigned char *)(a1 + 32);
      *(unsigned char *)(a1 + 32) = v4;
      sub_2498826E4(v21, v22, v23, v24, v25);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      uint64_t v26 = *(void **)(a2 + 48);
      uint64_t v27 = *(void *)(a2 + 56);
      uint64_t v28 = *(void **)(a2 + 64);
      uint64_t v29 = *(void *)(a2 + 72);
      LOBYTE(v20) = *(unsigned char *)(a2 + 80);
      sub_24988247C(v26, v27, v28, v29, v20);
      uint64_t v30 = *(void **)(a1 + 48);
      uint64_t v31 = *(void *)(a1 + 56);
      char v32 = *(void **)(a1 + 64);
      uint64_t v33 = *(void *)(a1 + 72);
      *(void *)(a1 + 48) = v26;
      *(void *)(a1 + 56) = v27;
      *(void *)(a1 + 64) = v28;
      *(void *)(a1 + 72) = v29;
      char v34 = *(unsigned char *)(a1 + 80);
      *(unsigned char *)(a1 + 80) = v20;
      sub_2498826E4(v30, v31, v32, v33, v34);
      goto LABEL_8;
    }
    sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
    sub_2498826E4(*(void **)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  }
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 32);
  long long v15 = *(_OWORD *)(a2 + 48);
  long long v16 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v16;
  *(_OWORD *)(a1 + 32) = v14;
  *(_OWORD *)(a1 + 48) = v15;
  return a1;
}

uint64_t _s14IndicatorStyleOwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 32);
  if ((v4 & 0x7E) == 0)
  {
    char v5 = *(unsigned char *)(a2 + 32);
    if ((v5 & 0x7E) == 0)
    {
      uint64_t v10 = *(void **)a1;
      uint64_t v11 = *(void *)(a1 + 8);
      uint64_t v12 = *(void **)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      long long v14 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v14;
      *(unsigned char *)(a1 + 32) = v5;
      sub_2498826E4(v10, v11, v12, v13, v4);
      uint64_t v15 = *(void *)(a2 + 72);
      char v16 = *(unsigned char *)(a2 + 80);
      uint64_t v17 = *(void **)(a1 + 48);
      uint64_t v18 = *(void *)(a1 + 56);
      uint64_t v19 = *(void **)(a1 + 64);
      uint64_t v20 = *(void *)(a1 + 72);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(void *)(a1 + 72) = v15;
      char v21 = *(unsigned char *)(a1 + 80);
      *(unsigned char *)(a1 + 80) = v16;
      sub_2498826E4(v17, v18, v19, v20, v21);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      return a1;
    }
    sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), v4);
    sub_2498826E4(*(void **)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  }
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  return a1;
}

uint64_t _s14IndicatorStyleOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t _s14IndicatorStyleOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2)
    {
      *(_OWORD *)__n128 result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = (a2 ^ 0x7F) & 0xFE | ((a2 ^ 0x7F) << 7);
    }
  }
  return result;
}

uint64_t sub_24995CFDC(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if ((v1 & 0x7E) != 0) {
    return 128 - (v1 & 0x7E | (v1 >> 7));
  }
  else {
    return 0;
  }
}

double sub_24995CFFC(uint64_t a1, unsigned int a2)
{
  if (a2 > 0x7E)
  {
    *(void *)(a1 + 88) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 - 127;
  }
  else if (a2)
  {
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(unsigned char *)(a1 + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.IndicatorStyle()
{
  return &type metadata for Instrument.IndicatorStyle;
}

void _s14IndicatorStyleO21CriticalConfigurationVwxx(uint64_t a1)
{
  sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  long long v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(void **)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  char v6 = *(unsigned char *)(a1 + 80);

  sub_2498826E4(v2, v3, v4, v5, v6);
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  uint64_t v9 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void **)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  char v13 = *(unsigned char *)(a2 + 80);
  sub_24988247C(v9, v10, v11, v12, v13);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwca(uint64_t a1, uint64_t a2)
{
  char v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  char v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_2498826E4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  long long v14 = *(void **)(a2 + 48);
  uint64_t v15 = *(void *)(a2 + 56);
  char v16 = *(void **)(a2 + 64);
  uint64_t v17 = *(void *)(a2 + 72);
  char v18 = *(unsigned char *)(a2 + 80);
  sub_24988247C(v14, v15, v16, v17, v18);
  uint64_t v19 = *(void **)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  char v21 = *(void **)(a1 + 64);
  uint64_t v22 = *(void *)(a1 + 72);
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v17;
  char v23 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v18;
  sub_2498826E4(v19, v20, v21, v22, v23);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwta(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_2498826E4(v5, v6, v7, v8, v10);
  uint64_t v11 = *(void *)(a2 + 72);
  char v12 = *(unsigned char *)(a2 + 80);
  char v13 = *(void **)(a1 + 48);
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v15 = *(void **)(a1 + 64);
  uint64_t v16 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v11;
  char v17 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v12;
  sub_2498826E4(v13, v14, v15, v16, v17);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t _s14IndicatorStyleO21CriticalConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2)
    {
      *(_OWORD *)double result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.IndicatorStyle.CriticalConfiguration()
{
  return &type metadata for Instrument.IndicatorStyle.CriticalConfiguration;
}

ValueMetadata *_s14IndicatorStyleO10CodingKeysOMa()
{
  return &_s14IndicatorStyleO10CodingKeysON;
}

unsigned char *_s14IndicatorStyleO18CriticalCodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24995D434);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s14IndicatorStyleO18CriticalCodingKeysOMa()
{
  return &_s14IndicatorStyleO18CriticalCodingKeysON;
}

ValueMetadata *_s14IndicatorStyleO17MessageCodingKeysOMa()
{
  return &_s14IndicatorStyleO17MessageCodingKeysON;
}

ValueMetadata *_s14IndicatorStyleO21CriticalConfigurationV10CodingKeysOMa()
{
  return &_s14IndicatorStyleO21CriticalConfigurationV10CodingKeysON;
}

unsigned char *_s22IndicatorConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24995D558);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s22IndicatorConfigurationV10CodingKeysOMa()
{
  return &_s22IndicatorConfigurationV10CodingKeysON;
}

unsigned char *_s14IndicatorStyleO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24995D65CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalNotification.CodingKeys()
{
  return &type metadata for LocalNotification.CodingKeys;
}

unint64_t sub_24995D698()
{
  unint64_t result = qword_2696E09A0;
  if (!qword_2696E09A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09A0);
  }
  return result;
}

unint64_t sub_24995D6F0()
{
  unint64_t result = qword_2696E09A8;
  if (!qword_2696E09A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09A8);
  }
  return result;
}

unint64_t sub_24995D748()
{
  unint64_t result = qword_2696E09B0;
  if (!qword_2696E09B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09B0);
  }
  return result;
}

unint64_t sub_24995D7A0()
{
  unint64_t result = qword_2696E09B8;
  if (!qword_2696E09B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09B8);
  }
  return result;
}

unint64_t sub_24995D7F8()
{
  unint64_t result = qword_2696E09C0;
  if (!qword_2696E09C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09C0);
  }
  return result;
}

unint64_t sub_24995D850()
{
  unint64_t result = qword_2696E09C8;
  if (!qword_2696E09C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09C8);
  }
  return result;
}

unint64_t sub_24995D8A8()
{
  unint64_t result = qword_2696E09D0;
  if (!qword_2696E09D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09D0);
  }
  return result;
}

unint64_t sub_24995D900()
{
  unint64_t result = qword_2696E09D8;
  if (!qword_2696E09D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09D8);
  }
  return result;
}

unint64_t sub_24995D958()
{
  unint64_t result = qword_2696E09E0;
  if (!qword_2696E09E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09E0);
  }
  return result;
}

unint64_t sub_24995D9B0()
{
  unint64_t result = qword_2696E09E8;
  if (!qword_2696E09E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09E8);
  }
  return result;
}

unint64_t sub_24995DA08()
{
  unint64_t result = qword_2696E09F0;
  if (!qword_2696E09F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09F0);
  }
  return result;
}

unint64_t sub_24995DA60()
{
  unint64_t result = qword_2696E09F8;
  if (!qword_2696E09F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E09F8);
  }
  return result;
}

unint64_t sub_24995DAB8()
{
  unint64_t result = qword_2696E0A00;
  if (!qword_2696E0A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A00);
  }
  return result;
}

unint64_t sub_24995DB10()
{
  unint64_t result = qword_2696E0A08;
  if (!qword_2696E0A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A08);
  }
  return result;
}

unint64_t sub_24995DB68()
{
  unint64_t result = qword_2696E0A10;
  if (!qword_2696E0A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A10);
  }
  return result;
}

unint64_t sub_24995DBC0()
{
  unint64_t result = qword_2696E0A18;
  if (!qword_2696E0A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A18);
  }
  return result;
}

unint64_t sub_24995DC18()
{
  unint64_t result = qword_2696E0A20;
  if (!qword_2696E0A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A20);
  }
  return result;
}

uint64_t sub_24995DC6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D73694472657375 && a2 == 0xEF656C6269737369)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24995DD7C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B15CC0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656E6961746E6F63 && a2 == 0xEF737465736E4972)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24995DF70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74754265736F6C63 && a2 == 0xEB000000006E6F74;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B15CE0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24995E078(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61636974697263 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6567617373656DLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24995E16C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v12 = *(void *)(a1 + 104);
  uint64_t v13 = *(void *)(a1 + 96);
  uint64_t v3 = *(void *)(a1 + 120);
  uint64_t v4 = *(void *)(a1 + 128);
  uint64_t v5 = *(void *)(a1 + 136);
  uint64_t v6 = *(void *)(a1 + 144);
  uint64_t v7 = *(void *)(a1 + 152);
  long long v11 = *(_OWORD *)(a1 + 160);
  uint64_t v8 = *(void *)(a1 + 176);
  uint64_t v9 = *(void *)(a1 + 184);
  sub_2498FDE64(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), (void (*)(void))sub_2498826E4);
  sub_2498FDE64(v13, v12, v2, v3, v4, v5, v6, v7, v11, *((uint64_t *)&v11 + 1), v8, v9, (void (*)(void))sub_2498826E4);
  return a1;
}

uint64_t static ImageAsset.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  long long v6 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v6;
  char v12 = v2;
  long long v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  char v10 = v4;
  return _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v11, (uint64_t)v9) & (v3 == v5);
}

uint64_t ImageAsset.identifier.getter()
{
  if ((char)v0[4] < 0) {
    uint64_t v1 = v0[1];
  }
  else {
    uint64_t v1 = *v0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

id ImageAsset.image.getter()
{
  char v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  char v4 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v5 = *(char *)(v0 + 32);
  if (v5 < 0) {
    return ImageAsset.LocalizedImage.image.getter();
  }
  if (!v4) {
    return 0;
  }
  swift_bridgeObjectRetain_n();
  id v6 = objc_msgSend(v4, sel_regularFileContents);
  if (v6)
  {
    uint64_t v7 = sub_249AEB798();
    unint64_t v9 = v8;

    id v10 = objc_allocWithZone(MEMORY[0x263F827E8]);
    long long v11 = (void *)sub_249AEB788();
    id v6 = objc_msgSend(v10, sel_initWithData_, v11);
    sub_249882104(v7, v9);
  }
  sub_2498826E4(v2, v1, v4, v3, v5);
  sub_2498826E4(v2, v1, v4, v3, v5);
  return v6;
}

void ImageAsset.restore(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v5);
  *(void *)&long long v27 = *(void *)(v1 + 40);
  if ((*(uint64_t (**)(long long *, uint64_t, uint64_t))(v6 + 24))(&v27, v5, v6))
  {
    unint64_t v8 = *(void **)v1;
    uint64_t v7 = *(void *)(v1 + 8);
    id v10 = *(void **)(v1 + 16);
    uint64_t v9 = *(void *)(v1 + 24);
    int v11 = *(char *)(v1 + 32);
    if (v11 < 0)
    {
      *(void *)&long long v27 = *(void *)v1;
      *((void *)&v27 + 1) = v7;
      *(void *)&long long v28 = v10;
      *((void *)&v28 + 1) = v9;
      id v18 = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      ImageAsset.LocalizedImage.restore(from:)(a1);
      if (v2)
      {
        uint64_t v19 = (void *)v27;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_2498826E4(v8, v7, v10, v9, v11);
        long long v22 = v28;
        *(_OWORD *)uint64_t v1 = v27;
        *(_OWORD *)(v1 + 16) = v22;
        *(unsigned char *)(v1 + 32) = 0x80;
      }
    }
    else
    {
      char v26 = *(unsigned char *)(v1 + 32);
      uint64_t v29 = *(void *)(v1 + 24);
      char v12 = v8;
      uint64_t v13 = v7;
      uint64_t v14 = a1[3];
      uint64_t v15 = a1[4];
      __swift_project_boxed_opaque_existential_2Tm(a1, v14);
      LOBYTE(v27) = 0;
      uint64_t v24 = *(uint64_t (**)(void *, uint64_t, long long *, uint64_t, uint64_t))(v15 + 8);
      char v25 = v10;
      id v23 = v10;
      swift_bridgeObjectRetain();
      uint64_t v16 = v12;
      uint64_t v17 = v24(v12, v13, &v27, v14, v15);
      if (v2)
      {
        sub_2498826E4(v12, v13, v25, v29, v11);
      }
      else
      {
        uint64_t v20 = v17;

        uint64_t v21 = v29;
        sub_2498826E4(v16, v13, v25, v29, v26);
        *(void *)uint64_t v3 = v16;
        *(void *)(v3 + 8) = v13;
        *(void *)(v3 + 16) = v20;
        *(void *)(v3 + 24) = v21;
        *(unsigned char *)(v3 + 32) = v26 & 1;
      }
    }
  }
}

void ImageAsset.ImageType.hash(into:)(uint64_t a1)
{
  char v4 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v6 = *(void **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  int v7 = *(char *)(v1 + 32);
  if ((v7 & 0x80000000) == 0)
  {
    sub_249AEE348();
    swift_bridgeObjectRetain();
    sub_24988247C(v4, v3, v6, v5, v7);
    sub_249AECF78();
    swift_bridgeObjectRelease();
    if (v6)
    {
      sub_249AEE358();
      id v8 = v6;
      sub_249AED898();

      if ((v7 & 1) == 0)
      {
LABEL_4:
        sub_249AEE358();
        sub_249AEE378();
LABEL_9:
        sub_2498826E4(v4, v3, v6, v5, v7);
        return;
      }
    }
    else
    {
      sub_249AEE358();
      if ((v7 & 1) == 0) {
        goto LABEL_4;
      }
    }
    sub_249AEE358();
    goto LABEL_9;
  }
  sub_249AEE348();
  sub_249AEE358();
  if (v4)
  {
    id v9 = v4;
    sub_249AED898();
  }
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988ADF0(a1, v5);

  swift_bridgeObjectRelease();
}

uint64_t sub_24995E7E4()
{
  if (*v0) {
    return 0x657A696C61636F6CLL;
  }
  else {
    return 0x6567616D69;
  }
}

uint64_t sub_24995E828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249964F38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24995E850(uint64_t a1)
{
  unint64_t v2 = sub_2499645E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24995E88C(uint64_t a1)
{
  unint64_t v2 = sub_2499645E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24995E8C8(uint64_t a1)
{
  unint64_t v2 = sub_2499646E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24995E904(uint64_t a1)
{
  unint64_t v2 = sub_2499646E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24995E940(uint64_t a1)
{
  unint64_t v2 = sub_249964638();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24995E97C(uint64_t a1)
{
  unint64_t v2 = sub_249964638();

  return MEMORY[0x270FA00B8](a1, v2);
}

void ImageAsset.ImageType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0A28);
  uint64_t v33 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  MEMORY[0x270FA5388](v3);
  char v32 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0A30);
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  int v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0A38);
  uint64_t v40 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  id v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 8);
  int v11 = *(void **)(v1 + 16);
  id v37 = *(id *)v1;
  uint64_t v38 = v10;
  uint64_t v39 = *(void *)(v1 + 24);
  int v12 = *(char *)(v1 + 32);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499645E4();
  uint64_t v13 = v9;
  sub_249AEE468();
  int v41 = v12;
  if (v12 < 0)
  {
    LOBYTE(v42) = 1;
    sub_249964638();
    id v26 = v37;
    id v27 = v37;
    swift_bridgeObjectRetain();
    uint64_t v28 = v39;
    swift_bridgeObjectRetain();
    uint64_t v29 = v32;
    sub_249AEDE48();
    uint64_t v30 = v38;
    id v42 = v26;
    uint64_t v43 = v38;
    uint64_t v44 = v11;
    uint64_t v45 = v28;
    sub_24996468C();
    uint64_t v31 = v34;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v29, v31);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v9, v47);
    long long v22 = v26;
    uint64_t v23 = v30;
    uint64_t v24 = v11;
    uint64_t v25 = v28;
  }
  else
  {
    LOBYTE(v42) = 0;
    sub_2499646E0();
    uint64_t v14 = v38;
    swift_bridgeObjectRetain();
    uint64_t v15 = v11;
    id v16 = v11;
    uint64_t v17 = v7;
    uint64_t v18 = v35;
    sub_249AEDE48();
    id v19 = v37;
    id v42 = v37;
    uint64_t v43 = v14;
    uint64_t v20 = v39;
    uint64_t v44 = v15;
    uint64_t v45 = v39;
    char v46 = v41 & 1;
    sub_249964734();
    uint64_t v21 = v36;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v17, v21);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v47);
    long long v22 = v19;
    uint64_t v23 = v14;
    uint64_t v24 = v15;
    uint64_t v25 = v20;
  }
  sub_2498826E4(v22, v23, v24, v25, v41);
}

uint64_t ImageAsset.ImageType.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v4);
  return sub_249AEE388();
}

uint64_t ImageAsset.ImageType.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v26 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0A68);
  uint64_t v28 = *(void *)(v3 - 8);
  uint64_t v29 = v3;
  MEMORY[0x270FA5388](v3);
  long long v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0A70);
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0A78);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  int v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v13);
  sub_2499645E4();
  uint64_t v14 = v35;
  sub_249AEE428();
  if (!v14)
  {
    uint64_t v15 = v29;
    uint64_t v35 = v10;
    uint64_t v16 = sub_249AEDE18();
    if (*(void *)(v16 + 16) == 1)
    {
      if (*(unsigned char *)(v16 + 32))
      {
        LOBYTE(v31) = 1;
        sub_249964638();
        sub_249AEDD38();
        sub_249964788();
        sub_249AEDE08();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v15);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v9);
        uint64_t v21 = v31;
        uint64_t v22 = v32;
        char v23 = 0x80;
        long long v24 = v33;
      }
      else
      {
        LOBYTE(v31) = 0;
        sub_2499646E0();
        sub_249AEDD38();
        sub_2499647DC();
        sub_249AEDE08();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v6);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v9);
        uint64_t v21 = v31;
        uint64_t v22 = v32;
        long long v24 = v33;
        char v23 = v34;
      }
      uint64_t v25 = v26;
      *id v26 = v21;
      v25[1] = v22;
      *((_OWORD *)v25 + 1) = v24;
      *((unsigned char *)v25 + 32) = v23;
    }
    else
    {
      uint64_t v17 = sub_249AEDB08();
      swift_allocError();
      id v19 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
      *id v19 = &type metadata for ImageAsset.ImageType;
      sub_249AEDD48();
      sub_249AEDAE8();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, *MEMORY[0x263F8DCB0], v17);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v12, v9);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v30);
}

uint64_t sub_24995F2B8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ImageAsset.ImageType.init(from:)(a1, a2);
}

void sub_24995F2D0(void *a1)
{
}

uint64_t sub_24995F2E8()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v4);
  return sub_249AEE388();
}

uint64_t sub_24995F340()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v4);
  return sub_249AEE388();
}

__n128 ImageAsset.init(type:destination:)@<Q0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 32);
  uint64_t v4 = *a2;
  __n128 result = *(__n128 *)a1;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v6;
  *(unsigned char *)(a3 + 32) = v3;
  *(void *)(a3 + 40) = v4;
  return result;
}

void ImageAsset.assetType.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void ImageAsset.destination.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
}

void *ImageAsset.destination.setter(void *result)
{
  *(void *)(v1 + 40) = *result;
  return result;
}

uint64_t (*ImageAsset.destination.modify())()
{
  return nullsub_1;
}

uint64_t ImageAsset.preferredFilename.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v4 = *(void **)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  int v5 = *(char *)(v0 + 32);
  if ((v5 & 0x80000000) == 0)
  {
    if (v4)
    {
      swift_bridgeObjectRetain();
      id v6 = objc_msgSend(v4, sel_preferredFilename);
      goto LABEL_6;
    }
LABEL_10:
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (!v1)
  {
    swift_bridgeObjectRetain();
    goto LABEL_10;
  }
  id v7 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = objc_msgSend(v7, sel_preferredFilename);
LABEL_6:
  id v8 = v6;
  if (v8)
  {
    uint64_t v9 = sub_249AED0D8();

    sub_2498826E4(v1, v2, v4, v3, v5);
    return v9;
  }
LABEL_11:
  uint64_t result = sub_249AEDC58();
  __break(1u);
  return result;
}

NSFileWrapper_optional __swiftcall ImageAsset.generateAsset(destination:)(CarPlayAssetUI::ArcPackageExporter::Destination destination)
{
  uint64_t v2 = *(void **)(v1 + 16 * ((*(unsigned __int8 *)(v1 + 32) >> 7) ^ 1u));
  id v3 = v2;
  int v5 = (objc_class *)v2;
  result.value.super.isa = v5;
  result.is_nil = v4;
  return result;
}

id ImageAsset.Image.image.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (!v1) {
    return 0;
  }
  id v2 = objc_msgSend(v1, sel_regularFileContents);
  if (v2)
  {
    uint64_t v3 = sub_249AEB798();
    unint64_t v5 = v4;

    id v6 = objc_allocWithZone(MEMORY[0x263F827E8]);
    id v7 = (void *)sub_249AEB788();
    id v2 = objc_msgSend(v6, sel_initWithData_, v7);
    sub_249882104(v3, v5);
  }
  return v2;
}

id ImageAsset.LocalizedImage.image.getter()
{
  uint64_t v1 = sub_249AEB838();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  uint64_t v6 = v0[3];
  sub_249AEB828();
  uint64_t v7 = sub_249AEB818();
  uint64_t v9 = v8;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (*(void *)(v6 + 16)
    && (uint64_t v10 = sub_2498EF01C(v7, v9), (v11 & 1) != 0)
    && (int v12 = (uint64_t *)(*(void *)(v6 + 56) + 32 * v10),
        uint64_t v13 = *v12,
        uint64_t v14 = v12[1],
        swift_bridgeObjectRetain(),
        swift_bridgeObjectRelease(),
        v5))
  {
    NSFileWrapper.data(contentsOf:)(v13, v14);
    uint64_t v17 = v16;
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    id v20 = objc_allocWithZone(MEMORY[0x263F827E8]);
    uint64_t v21 = (void *)sub_249AEB788();
    id v22 = objc_msgSend(v20, sel_initWithData_, v21);
    sub_249882104(v17, v19);
  }
  else
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v22;
}

uint64_t ImageAsset.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  int v2 = *(char *)(v1 + 32);
  if (v2 < 0) {
    return ImageAsset.LocalizedImage.attributes.getter(a1);
  }
  *(void *)a1 = *(void *)(v1 + 24);
  *(_WORD *)(a1 + 8) = v2 & 1;
  return result;
}

uint64_t ImageAsset.LocalizedImage.attributes.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_249AEB838();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 24);
  sub_249AEB828();
  uint64_t v8 = sub_249AEB818();
  uint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (*(void *)(v7 + 16) && (uint64_t v11 = sub_2498EF01C(v8, v10), (v12 & 1) != 0))
  {
    uint64_t v13 = *(void *)(v7 + 56) + 32 * v11;
    uint64_t v14 = *(void *)(v13 + 16);
    char v15 = *(unsigned char *)(v13 + 24);
    uint64_t result = swift_bridgeObjectRelease();
    char v17 = 0;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v14 = 0;
    char v15 = 0;
    char v17 = 1;
  }
  *(void *)a1 = v14;
  *(unsigned char *)(a1 + 8) = v15;
  *(unsigned char *)(a1 + 9) = v17;
  return result;
}

void ImageAsset.Image.restore(from:)(void *a1)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v3);
  uint64_t v5 = *v1;
  uint64_t v6 = v1[1];
  char v9 = 0;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v4 + 8))(v5, v6, &v9, v3, v4);
  if (!v2)
  {
    uint64_t v8 = v7;

    v1[2] = v8;
  }
}

void ImageAsset.LocalizedImage.restore(from:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_249AEB4E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v12);
  id v14 = v3[1];
  id v15 = v3[2];
  char v82 = 0;
  uint64_t v16 = (*(uint64_t (**)(id, id, char *, uint64_t, uint64_t))(v13 + 8))(v14, v15, &v82, v12, v13);
  if (v2) {
    return;
  }
  char v17 = (void *)v16;
  uint64_t v72 = v11;
  char v73 = v7;
  uint64_t v74 = v9;
  uint64_t v75 = v8;
  uint64_t v70 = 0;
  uint64_t v71 = v3;
  uint64_t v18 = v3[3];
  uint64_t v19 = v18[8];
  uint64_t v76 = v18 + 8;
  uint64_t v20 = 1 << *((unsigned char *)v18 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v77 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v78 = v18;
  swift_bridgeObjectRetain();
  int64_t v23 = 0;
  long long v24 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v80 = v24;
    if (v22)
    {
      unint64_t v26 = __clz(__rbit64(v22));
      uint64_t v27 = (v22 - 1) & v22;
      unint64_t v28 = v26 | (v23 << 6);
    }
    else
    {
      int64_t v29 = v23 + 1;
      if (__OFADD__(v23, 1)) {
        goto LABEL_45;
      }
      if (v29 >= v77)
      {
LABEL_42:
        uint64_t v64 = v17;
        swift_release();
        id v65 = objc_allocWithZone(MEMORY[0x263F08870]);
        sub_24987BE44();
        uint64_t v66 = (void *)sub_249AECE78();
        swift_bridgeObjectRelease();
        id v67 = objc_msgSend(v65, sel_initDirectoryWithFileWrappers_, v66);

        uint64_t v68 = v71;
        uint64_t v69 = (void *)sub_249AED0A8();
        objc_msgSend(v67, sel_setPreferredFilename_, v69);

        *uint64_t v68 = v67;
        return;
      }
      unint64_t v30 = v76[v29];
      ++v23;
      if (!v30)
      {
        int64_t v23 = v29 + 1;
        if (v29 + 1 >= v77) {
          goto LABEL_42;
        }
        unint64_t v30 = v76[v23];
        if (!v30)
        {
          int64_t v23 = v29 + 2;
          if (v29 + 2 >= v77) {
            goto LABEL_42;
          }
          unint64_t v30 = v76[v23];
          if (!v30)
          {
            int64_t v31 = v29 + 3;
            if (v31 >= v77) {
              goto LABEL_42;
            }
            unint64_t v30 = v76[v31];
            if (!v30)
            {
              while (1)
              {
                int64_t v23 = v31 + 1;
                if (__OFADD__(v31, 1)) {
                  goto LABEL_46;
                }
                if (v23 >= v77) {
                  goto LABEL_42;
                }
                unint64_t v30 = v76[v23];
                ++v31;
                if (v30) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v23 = v31;
          }
        }
      }
LABEL_22:
      uint64_t v27 = (v30 - 1) & v30;
      unint64_t v28 = __clz(__rbit64(v30)) + (v23 << 6);
    }
    uint64_t v32 = (uint64_t *)(v78[6] + 16 * v28);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    uint64_t v35 = (uint64_t *)(v78[7] + 32 * v28);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    uint64_t v38 = v17;
    id v39 = objc_msgSend(v17, sel_fileWrappers);
    if (!v39) {
      goto LABEL_40;
    }
    uint64_t v40 = v39;
    sub_24987BE44();
    uint64_t v41 = sub_249AECE98();

    if (!*(void *)(v41 + 16))
    {
      swift_bridgeObjectRelease();
LABEL_40:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249AEB498();
      sub_2498F0724(MEMORY[0x263F8EE78]);
      sub_249964830();
      uint64_t v62 = v72;
      uint64_t v63 = v75;
      sub_249AEB708();
      sub_249AEB458();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v62, v63);
      swift_willThrow();
      swift_release();

      return;
    }
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_2498EF01C(v36, v37);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_40;
    }
    unint64_t v79 = v27;
    int64_t v44 = v23;
    uint64_t v45 = v38;
    id v46 = *(id *)(*(void *)(v41 + 56) + 8 * v42);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    id v47 = v46;
    uint64_t v48 = v80;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    long long v81 = v48;
    unint64_t v51 = sub_2498EF01C(v33, v34);
    uint64_t v52 = v48[2];
    BOOL v53 = (v50 & 1) == 0;
    uint64_t v54 = v52 + v53;
    if (__OFADD__(v52, v53)) {
      break;
    }
    char v55 = v50;
    if (v48[3] >= v54)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        long long v24 = v81;
        if (v50) {
          goto LABEL_5;
        }
      }
      else
      {
        sub_2498E1844();
        long long v24 = v81;
        if (v55) {
          goto LABEL_5;
        }
      }
    }
    else
    {
      sub_2498E6A9C(v54, isUniquelyReferenced_nonNull_native);
      uint64_t v56 = sub_2498EF01C(v33, v34);
      if ((v55 & 1) != (v57 & 1)) {
        goto LABEL_47;
      }
      unint64_t v51 = v56;
      long long v24 = v81;
      if (v55)
      {
LABEL_5:
        uint64_t v25 = v24[7];

        *(void *)(v25 + 8 * v51) = v47;
        goto LABEL_6;
      }
    }
    v24[(v51 >> 6) + 8] |= 1 << v51;
    uint64_t v58 = (uint64_t *)(v24[6] + 16 * v51);
    *uint64_t v58 = v33;
    v58[1] = v34;
    *(void *)(v24[7] + 8 * v51) = v47;
    uint64_t v59 = v24[2];
    BOOL v60 = __OFADD__(v59, 1);
    uint64_t v61 = v59 + 1;
    if (v60) {
      goto LABEL_44;
    }
    v24[2] = v61;
    swift_bridgeObjectRetain();
LABEL_6:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v17 = v45;
    int64_t v23 = v44;
    unint64_t v22 = v79;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  sub_249AEE2D8();
  __break(1u);
}

uint64_t ImageAsset.hash(into:)(uint64_t a1)
{
  return sub_249AEE348();
}

uint64_t sub_24996007C()
{
  if (*v0) {
    return 0x74616E6974736564;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_2499600B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249965048(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499600E0(uint64_t a1)
{
  unint64_t v2 = sub_249964888();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24996011C(uint64_t a1)
{
  unint64_t v2 = sub_249964888();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImageAsset.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0A90);
  uint64_t v15 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  char v8 = *((unsigned char *)v1 + 32);
  uint64_t v12 = *((void *)v1 + 5);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249964888();
  sub_249AEE468();
  long long v16 = v13;
  uint64_t v17 = v7;
  uint64_t v18 = v6;
  char v19 = v8;
  char v20 = 0;
  sub_2499648DC();
  uint64_t v9 = v14;
  sub_249AEDF08();
  if (!v9)
  {
    *(void *)&long long v16 = v12;
    char v20 = 1;
    sub_249964930();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t ImageAsset.hashValue.getter()
{
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  return sub_249AEE388();
}

void ImageAsset.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AB0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249964888();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    char v24 = 0;
    sub_249964984();
    sub_249AEDE08();
    uint64_t v9 = v18;
    uint64_t v10 = v19;
    char v24 = 1;
    uint64_t v16 = v21;
    uint64_t v17 = v20;
    int v23 = v22;
    sub_24988247C(v18, v19, v20, v21, v22);
    sub_2499649D8();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = v17;
    uint64_t v11 = v18;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    uint64_t v13 = v16;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
    char v14 = v23;
    *(unsigned char *)(a2 + 32) = v23;
    *(void *)(a2 + 40) = v11;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2498826E4(v9, v10, v12, v13, v14);
  }
}

uint64_t sub_2499605F4()
{
  if ((char)v0[4] < 0) {
    uint64_t v1 = v0[1];
  }
  else {
    uint64_t v1 = *v0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

void sub_249960644(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void sub_24996064C(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
}

void *sub_24996065C()
{
  uint64_t v1 = *(void **)(v0 + 16 * ((*(unsigned __int8 *)(v0 + 32) >> 7) ^ 1u));
  id v2 = v1;
  return v1;
}

void sub_249960694(void *a1)
{
}

void sub_2499606AC(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_2499606C4(void *a1)
{
  return ImageAsset.encode(to:)(a1);
}

uint64_t sub_2499606DC()
{
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  return sub_249AEE388();
}

uint64_t sub_249960760(uint64_t a1)
{
  return sub_249AEE348();
}

uint64_t sub_2499607B8()
{
  sub_249AEE338();
  ImageAsset.ImageType.hash(into:)((uint64_t)v1);
  sub_249AEE348();
  return sub_249AEE388();
}

uint64_t sub_249960838(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 40);
  long long v6 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v6;
  char v12 = v2;
  long long v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  char v10 = v4;
  return _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v11, (uint64_t)v9) & (v3 == v5);
}

void *ImageAsset.Image.file.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

void ImageAsset.Image.file.setter(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
}

uint64_t (*ImageAsset.Image.file.modify())()
{
  return nullsub_1;
}

void ImageAsset.Image.attributes.getter(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  *(void *)a1 = *(void *)(v1 + 24);
  *(unsigned char *)(a1 + 8) = v2;
}

uint64_t ImageAsset.Image.attributes.setter(uint64_t result)
{
  char v2 = *(unsigned char *)(result + 8);
  *(void *)(v1 + 24) = *(void *)result;
  *(unsigned char *)(v1 + 32) = v2;
  return result;
}

uint64_t (*ImageAsset.Image.attributes.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::ImageAsset::Attributes __swiftcall ImageAsset.Attributes.init(baselineOffset:)(CarPlayAssetUI::ImageAsset::Attributes baselineOffset)
{
  *(void *)uint64_t v2 = *(void *)&baselineOffset.baselineOffset.is_nil;
  *(unsigned char *)(v2 + 8) = v1 & 1;
  return baselineOffset;
}

uint64_t ImageAsset.Image.init(filename:data:attributes:)@<X0>(uint64_t a1@<X2>, unint64_t a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_249AED118();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = *a3;
  HIDWORD(v26) = *((unsigned __int8 *)a3 + 8);
  id v12 = objc_allocWithZone(MEMORY[0x263F08870]);
  uint64_t v13 = (void *)sub_249AEB788();
  id v14 = objc_msgSend(v12, sel_initRegularFileWithContents_, v13);

  uint64_t v15 = (void *)sub_249AED0A8();
  objc_msgSend(v14, sel_setPreferredFilename_, v15);

  uint64_t v28 = a1;
  unint64_t v29 = a2;
  sub_249882F28(a1, a2);
  sub_249AED108();
  uint64_t v16 = sub_249AED0E8();
  unint64_t v18 = v17;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v18 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_249AEB7A8();
    sub_249882F14(v16, v18);
    uint64_t v20 = v28;
    unint64_t v21 = v29;
    sub_249882F28(v28, v29);
    uint64_t v22 = sub_249953A50(v20, v21);
    uint64_t v24 = v23;
    sub_249882104(v20, v21);
    sub_249882104(v20, v21);
    sub_249882104(a1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a4 = v22;
    *(void *)(a4 + 8) = v24;
    uint64_t v25 = v27;
    *(void *)(a4 + 16) = v14;
    *(void *)(a4 + 24) = v25;
    *(unsigned char *)(a4 + 32) = BYTE4(v26);
  }
  return result;
}

void ImageAsset.Image.init(file:attributes:)(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_249AED118();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a2;
  int v11 = *((unsigned __int8 *)a2 + 8);
  id v12 = objc_msgSend(a1, sel_preferredFilename);
  if (!v12) {
    goto LABEL_6;
  }
  uint64_t v13 = v12;
  int v29 = v11;
  sub_249AED0D8();

  id v14 = objc_msgSend(a1, sel_regularFileContents);
  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_6:

    *(unsigned char *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    return;
  }
  uint64_t v15 = v14;
  uint64_t v28 = v10;
  uint64_t v16 = sub_249AEB798();
  unint64_t v18 = v17;

  uint64_t v30 = v16;
  unint64_t v31 = v18;
  sub_249882F28(v16, v18);
  sub_249AED108();
  uint64_t v19 = sub_249AED0E8();
  unint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v21 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_249AEB7A8();
    sub_249882F14(v19, v21);
    uint64_t v22 = v30;
    unint64_t v23 = v31;
    sub_249882F28(v30, v31);
    uint64_t v24 = sub_249953A50(v22, v23);
    uint64_t v26 = v25;
    sub_249882104(v22, v23);
    sub_249882104(v22, v23);
    sub_249882104(v16, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    *(void *)a3 = v24;
    *(void *)(a3 + 8) = v26;
    uint64_t v27 = v28;
    *(void *)(a3 + 16) = a1;
    *(void *)(a3 + 24) = v27;
    *(unsigned char *)(a3 + 32) = v29;
    swift_bridgeObjectRelease();
  }
}

uint64_t ImageAsset.Image.init(resource:extension:bundle:attributes:)@<X0>(void *a1@<X4>, uint64_t *a2@<X5>, uint64_t a3@<X8>)
{
  uint64_t v57 = a3;
  uint64_t v5 = sub_249AED118();
  uint64_t v51 = *(void *)(v5 - 8);
  uint64_t v52 = v5;
  MEMORY[0x270FA5388](v5);
  char v50 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_249AEB768();
  int v11 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v56 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v49 - v15;
  MEMORY[0x270FA5388](v14);
  char v55 = (char *)&v49 - v17;
  uint64_t v54 = *a2;
  int v53 = *((unsigned __int8 *)a2 + 8);
  unint64_t v18 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(a1, sel_URLForResource_withExtension_, v18, v19);

  if (!v20)
  {
    v11[7](v9, 1, 1, v10);
    goto LABEL_6;
  }
  sub_249AEB758();

  unint64_t v21 = v11[4];
  ((void (*)(char *, char *, uint64_t))v21)(v9, v16, v10);
  v11[7](v9, 0, 1, v10);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v11[6])(v9, 1, v10) == 1)
  {
LABEL_6:

    uint64_t result = sub_249964A2C((uint64_t)v9);
    goto LABEL_7;
  }
  uint64_t v22 = v10;
  unint64_t v23 = v55;
  ((void (*)(char *, char *, uint64_t))v21)(v55, v9, v10);
  uint64_t v24 = (uint64_t)v56;
  ((void (*)(char *, char *, uint64_t))v11[2])(v56, v23, v22);
  id v25 = objc_allocWithZone(MEMORY[0x263F08870]);
  id v26 = sub_249963FF0(v24, 0);
  int v29 = v26;
  if (!v26)
  {

LABEL_4:
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v11[1])(v23, v22);
LABEL_7:
    uint64_t v28 = (_OWORD *)v57;
    *(unsigned char *)(v57 + 32) = 0;
    *uint64_t v28 = 0u;
    v28[1] = 0u;
    return result;
  }
  id v30 = objc_msgSend(v26, sel_regularFileContents);
  if (!v30)
  {

    goto LABEL_4;
  }
  unint64_t v31 = v30;
  uint64_t v56 = (char *)v11;
  id v49 = a1;
  uint64_t v32 = sub_249AEB798();
  unint64_t v34 = v33;

  sub_249AEB728();
  uint64_t v35 = (void *)sub_249AED0A8();
  objc_msgSend(v29, sel_setPreferredFilename_, v35);

  uint64_t v58 = v32;
  unint64_t v59 = v34;
  uint64_t v36 = v32;
  sub_249882F28(v32, v34);
  uint64_t v37 = v50;
  sub_249AED108();
  uint64_t v38 = sub_249AED0E8();
  id v39 = v23;
  unint64_t v41 = v40;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v51 + 8))(v37, v52);
  if (v41 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_249AEB7A8();
    sub_249882F14(v38, v41);
    uint64_t v42 = v58;
    unint64_t v43 = v59;
    sub_249882F28(v58, v59);
    uint64_t v44 = sub_249953A50(v42, v43);
    uint64_t v46 = v45;
    sub_249882104(v42, v43);
    sub_249882104(v42, v43);
    sub_249882104(v36, v34);

    swift_bridgeObjectRelease();
    (*((void (**)(char *, uint64_t))v56 + 1))(v39, v22);
    swift_bridgeObjectRetain();
    uint64_t v47 = v57;
    *(void *)uint64_t v57 = v44;
    *(void *)(v47 + 8) = v46;
    uint64_t v48 = v54;
    *(void *)(v47 + 16) = v29;
    *(void *)(v47 + 24) = v48;
    *(unsigned char *)(v47 + 32) = v53;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_249961318(char *a1, char *a2)
{
  return sub_2498F2A10(*a1, *a2);
}

uint64_t sub_249961324()
{
  return sub_249AEE388();
}

uint64_t sub_2499613AC()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249961420()
{
  return sub_249AEE388();
}

uint64_t sub_2499614A4@<X0>(char *a1@<X8>)
{
  return sub_2499628D8(a1);
}

void sub_2499614B0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x696669746E656469;
  if (*v1) {
    uint64_t v2 = 0x7475626972747461;
  }
  unint64_t v3 = 0xEA00000000007265;
  if (*v1) {
    unint64_t v3 = 0xEA00000000007365;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2499614F4()
{
  if (*v0) {
    return 0x7475626972747461;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_249961534@<X0>(char *a1@<X8>)
{
  return sub_2499629BC(a1);
}

uint64_t sub_249961540(uint64_t a1)
{
  unint64_t v2 = sub_249964A8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24996157C(uint64_t a1)
{
  unint64_t v2 = sub_249964A8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImageAsset.Image.hash(into:)()
{
  char v1 = *(void **)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_249AEE358();
    id v3 = v1;
    sub_249AED898();

    if (v2) {
      return sub_249AEE358();
    }
  }
  else
  {
    sub_249AEE358();
    if (v2) {
      return sub_249AEE358();
    }
  }
  sub_249AEE358();
  return sub_249AEE378();
}

uint64_t static ImageAsset.Attributes.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t ImageAsset.Image.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AD0);
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 24);
  int v12 = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249964A8C();
  sub_249AEE468();
  char v14 = 0;
  sub_249AEDEB8();
  if (!v2)
  {
    uint64_t v10 = v8;
    char v11 = v12;
    char v13 = 1;
    sub_249964AE0();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t ImageAsset.Image.hashValue.getter()
{
  uint64_t v1 = *(void **)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 32);
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_249AEE358();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_249AEE358();
    sub_249AEE378();
    return sub_249AEE388();
  }
  sub_249AEE358();
  id v3 = v1;
  sub_249AED898();

  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_249AEE358();
  return sub_249AEE388();
}

uint64_t ImageAsset.Image.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249964A8C();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  char v18 = 0;
  uint64_t v9 = sub_249AEDDB8();
  uint64_t v11 = v10;
  char v17 = 1;
  sub_249964B34();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v15;
  char v13 = v16;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v12;
  *(unsigned char *)(a2 + 32) = v13;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249961B2C(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0C28);
  uint64_t v9 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 16);
  int v12 = *(unsigned __int8 *)(v1 + 24);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249966DD4();
  sub_249AEE468();
  char v14 = 0;
  sub_249AEDEB8();
  if (!v2)
  {
    uint64_t v10 = v8;
    char v11 = v12;
    char v13 = 1;
    sub_249964AE0();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

uint64_t sub_249961CCC()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_249AEE338();
  sub_249AECF78();
  sub_249AEE358();
  if (v1 != 1) {
    sub_249AEE378();
  }
  return sub_249AEE388();
}

uint64_t sub_249961D5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0C38);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249966DD4();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  char v18 = 0;
  uint64_t v9 = sub_249AEDDB8();
  uint64_t v11 = v10;
  char v17 = 1;
  sub_249964B34();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v15;
  char v13 = v16;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v12;
  *(unsigned char *)(a2 + 24) = v13;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249961F64@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageAsset.Image.init(from:)(a1, a2);
}

uint64_t sub_249961F7C(void *a1)
{
  return ImageAsset.Image.encode(to:)(a1);
}

uint64_t sub_249961F9C()
{
  int v1 = *(void **)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 32);
  sub_249AEE338();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    sub_249AEE358();
    if (v2) {
      goto LABEL_3;
    }
LABEL_5:
    sub_249AEE358();
    sub_249AEE378();
    return sub_249AEE388();
  }
  sub_249AEE358();
  id v3 = v1;
  sub_249AED898();

  if (!v2) {
    goto LABEL_5;
  }
LABEL_3:
  sub_249AEE358();
  return sub_249AEE388();
}

uint64_t sub_249962070()
{
  if (*v0) {
    return 0x7475626972747461;
  }
  else {
    return 0x656D616E656C6966;
  }
}

uint64_t sub_2499620B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249965144(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499620D8(uint64_t a1)
{
  unint64_t v2 = sub_249966DD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249962114(uint64_t a1)
{
  unint64_t v2 = sub_249966DD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249962150@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_249961D5C(a1, a2);
}

uint64_t sub_249962168(void *a1)
{
  return sub_249961B2C(a1);
}

uint64_t sub_249962184()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_249AECF78();
  if (v1 == 1) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  return sub_249AEE378();
}

uint64_t sub_2499621EC()
{
  int v1 = *(unsigned __int8 *)(v0 + 24);
  sub_249AEE338();
  sub_249AECF78();
  sub_249AEE358();
  if (v1 != 1) {
    sub_249AEE378();
  }
  return sub_249AEE388();
}

id ImageAsset.LocalizedImage.file.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void ImageAsset.LocalizedImage.file.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*ImageAsset.LocalizedImage.file.modify())()
{
  return nullsub_1;
}

void ImageAsset.LocalizedImage.init(imageSet:)(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = a1;
  uint64_t v5 = sub_249965244(v4);
  if (v2)
  {

    return;
  }
  uint64_t v8 = v7;
  char v55 = a2;
  uint64_t v56 = v4;
  uint64_t v9 = v5;
  uint64_t v10 = v6;
  id v11 = objc_allocWithZone(MEMORY[0x263F08870]);
  sub_24987BE44();
  swift_bridgeObjectRetain();
  uint64_t v12 = (void *)sub_249AECE78();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_initDirectoryWithFileWrappers_, v12);

  uint64_t v53 = v10;
  uint64_t v54 = v9;
  char v14 = (void *)sub_249AED0A8();
  uint64_t v52 = v13;
  objc_msgSend(v13, sel_setPreferredFilename_, v14);

  uint64_t v57 = v8 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v58 = (unint64_t)(v15 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  uint64_t v19 = (void *)MEMORY[0x263F8EE80];
  uint64_t v59 = v8;
  while (1)
  {
    if (v17)
    {
      uint64_t v60 = (v17 - 1) & v17;
      int64_t v61 = v18;
      unint64_t v21 = __clz(__rbit64(v17)) | (v18 << 6);
    }
    else
    {
      int64_t v22 = v18 + 1;
      if (__OFADD__(v18, 1)) {
        goto LABEL_41;
      }
      if (v22 >= v58)
      {
LABEL_38:
        swift_release();

        id v50 = v52;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v51 = v50;
        swift_bridgeObjectRelease();

        *char v55 = v52;
        v55[1] = v54;
        v55[2] = v53;
        void v55[3] = v19;
        return;
      }
      unint64_t v23 = *(void *)(v57 + 8 * v22);
      int64_t v24 = v18 + 1;
      if (!v23)
      {
        int64_t v24 = v18 + 2;
        if (v18 + 2 >= v58) {
          goto LABEL_38;
        }
        unint64_t v23 = *(void *)(v57 + 8 * v24);
        if (!v23)
        {
          int64_t v24 = v18 + 3;
          if (v18 + 3 >= v58) {
            goto LABEL_38;
          }
          unint64_t v23 = *(void *)(v57 + 8 * v24);
          if (!v23)
          {
            uint64_t v25 = v18 + 4;
            if (v18 + 4 >= v58) {
              goto LABEL_38;
            }
            unint64_t v23 = *(void *)(v57 + 8 * v25);
            if (!v23)
            {
              while (1)
              {
                int64_t v24 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_42;
                }
                if (v24 >= v58) {
                  goto LABEL_38;
                }
                unint64_t v23 = *(void *)(v57 + 8 * v24);
                ++v25;
                if (v23) {
                  goto LABEL_23;
                }
              }
            }
            int64_t v24 = v18 + 4;
          }
        }
      }
LABEL_23:
      uint64_t v60 = (v23 - 1) & v23;
      int64_t v61 = v24;
      unint64_t v21 = __clz(__rbit64(v23)) + (v24 << 6);
    }
    id v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v27 = *v26;
    uint64_t v28 = v26[1];
    int v29 = *(void **)(*(void *)(v8 + 56) + 8 * v21);
    swift_bridgeObjectRetain_n();
    id v30 = v29;
    id v31 = objc_msgSend(v30, sel_preferredFilename);
    if (v31)
    {
      uint64_t v32 = v31;
      uint64_t v33 = sub_249AED0D8();
      uint64_t v35 = v34;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v33 = v27;
      uint64_t v35 = v28;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v38 = sub_2498EF01C(v27, v28);
    uint64_t v39 = v19[2];
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40)) {
      break;
    }
    char v42 = v37;
    if (v19[3] >= v41)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v37) {
          goto LABEL_6;
        }
      }
      else
      {
        sub_2498E1A6C();
        if (v42) {
          goto LABEL_6;
        }
      }
    }
    else
    {
      sub_2498E6E5C(v41, isUniquelyReferenced_nonNull_native);
      uint64_t v43 = sub_2498EF01C(v27, v28);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_43;
      }
      unint64_t v38 = v43;
      if (v42)
      {
LABEL_6:
        uint64_t v20 = v19[7] + 32 * v38;
        swift_bridgeObjectRelease();
        *(void *)uint64_t v20 = v33;
        *(void *)(v20 + 8) = v35;
        *(void *)(v20 + 16) = 0;
        *(unsigned char *)(v20 + 24) = 1;
        goto LABEL_7;
      }
    }
    v19[(v38 >> 6) + 8] |= 1 << v38;
    uint64_t v45 = (uint64_t *)(v19[6] + 16 * v38);
    *uint64_t v45 = v27;
    v45[1] = v28;
    uint64_t v46 = v19[7] + 32 * v38;
    *(void *)uint64_t v46 = v33;
    *(void *)(v46 + 8) = v35;
    *(void *)(v46 + 16) = 0;
    *(unsigned char *)(v46 + 24) = 1;
    uint64_t v47 = v19[2];
    BOOL v48 = __OFADD__(v47, 1);
    uint64_t v49 = v47 + 1;
    if (v48) {
      goto LABEL_40;
    }
    _OWORD v19[2] = v49;
    swift_bridgeObjectRetain();
LABEL_7:

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v8 = v59;
    unint64_t v17 = v60;
    int64_t v18 = v61;
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  sub_249AEE2D8();
  __break(1u);
}

uint64_t sub_24996274C(char *a1, char *a2)
{
  return sub_2498F2ABC(*a1, *a2);
}

uint64_t sub_249962758()
{
  return sub_249AEE388();
}

uint64_t sub_2499627DC()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24996284C()
{
  return sub_249AEE388();
}

uint64_t sub_2499628CC@<X0>(char *a1@<X8>)
{
  return sub_2499628D8(a1);
}

uint64_t sub_2499628D8@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_249962934(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x696669746E656469;
  if (*v1) {
    uint64_t v2 = 0x736567616D69;
  }
  unint64_t v3 = 0xEA00000000007265;
  if (*v1) {
    unint64_t v3 = 0xE600000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_249962974()
{
  if (*v0) {
    return 0x736567616D69;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_2499629B0@<X0>(char *a1@<X8>)
{
  return sub_2499629BC(a1);
}

uint64_t sub_2499629BC@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  if (v2 == 1) {
    char v4 = 1;
  }
  else {
    char v4 = 2;
  }
  if (!v2) {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_249962A1C(uint64_t a1)
{
  unint64_t v2 = sub_249965860();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249962A58(uint64_t a1)
{
  unint64_t v2 = sub_249965860();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImageAsset.LocalizedImage.hash(into:)(uint64_t a1)
{
  unint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 24);
  if (*(void *)v1)
  {
    sub_249AEE358();
    id v5 = v3;
    sub_249AED898();
  }
  else
  {
    sub_249AEE358();
  }
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988ADF0(a1, v4);

  return swift_bridgeObjectRelease();
}

uint64_t ImageAsset.LocalizedImage.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AF8);
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 24);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249965860();
  sub_249AEE468();
  char v13 = 0;
  sub_249AEDEB8();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0B08);
    sub_249965908(&qword_2696E0B10, (void (*)(void))sub_2499658B4);
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

uint64_t ImageAsset.LocalizedImage.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 24);
  sub_249AEE338();
  sub_249AEE358();
  if (v1)
  {
    id v3 = v1;
    sub_249AED898();
  }
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988ADF0((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

uint64_t ImageAsset.LocalizedImage.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0B20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249965860();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  char v16 = 0;
  uint64_t v9 = sub_249AEDDB8();
  uint64_t v11 = v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0B08);
  char v15 = 1;
  sub_249965908(&qword_2696E0B28, (void (*)(void))sub_249965984);
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v12 = v14[1];
  *a2 = 0;
  a2[1] = v9;
  a2[2] = v11;
  a2[3] = v12;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_249963034@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ImageAsset.LocalizedImage.init(from:)(a1, a2);
}

uint64_t sub_24996304C(void *a1)
{
  return ImageAsset.LocalizedImage.encode(to:)(a1);
}

uint64_t sub_249963068(uint64_t a1)
{
  id v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 24);
  if (*(void *)v1)
  {
    sub_249AEE358();
    id v5 = v3;
    sub_249AED898();
  }
  else
  {
    sub_249AEE358();
  }
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988ADF0(a1, v4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_24996311C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 24);
  sub_249AEE338();
  sub_249AEE358();
  if (v1)
  {
    id v3 = v1;
    sub_249AED898();
  }
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988ADF0((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

uint64_t ImageAsset.Attributes.baselineOffset.getter()
{
  return *(void *)v0;
}

uint64_t ImageAsset.Attributes.baselineOffset.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*ImageAsset.Attributes.baselineOffset.modify())()
{
  return nullsub_1;
}

uint64_t ImageAsset.Attributes.hash(into:)()
{
  if (*(unsigned char *)(v0 + 8) == 1) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  return sub_249AEE378();
}

uint64_t sub_249963268()
{
  return 0x656E696C65736162;
}

uint64_t sub_24996328C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656E696C65736162 && a2 == 0xEE0074657366664FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249963348(uint64_t a1)
{
  unint64_t v2 = sub_2499659D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249963384(uint64_t a1)
{
  unint64_t v2 = sub_2499659D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ImageAsset.Attributes.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0B38);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499659D8();
  sub_249AEE468();
  sub_249AEDE78();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ImageAsset.Attributes.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_249AEE338();
  sub_249AEE358();
  if (v1 != 1) {
    sub_249AEE378();
  }
  return sub_249AEE388();
}

uint64_t ImageAsset.Attributes.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0B48);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499659D8();
  sub_249AEE428();
  if (!v2)
  {
    uint64_t v9 = sub_249AEDD78();
    char v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2499636E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageAsset.Attributes.init(from:)(a1, a2);
}

uint64_t sub_249963700(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0B38);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499659D8();
  sub_249AEE468();
  sub_249AEDE78();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_249963840()
{
  if (*(unsigned char *)(v0 + 8) == 1) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  return sub_249AEE378();
}

uint64_t sub_249963894()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_249AEE338();
  sub_249AEE358();
  if (v1 != 1) {
    sub_249AEE378();
  }
  return sub_249AEE388();
}

uint64_t sub_249963904(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (*(unsigned char *)(a2 + 8)) {
      return 1;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if ((v2 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_249963938(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0C98);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  char v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24996724C();
  sub_249AEE468();
  char v14 = 0;
  sub_249AEDE58();
  if (!v5)
  {
    char v13 = 1;
    sub_249AEDE58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_249963AAC()
{
  if (*v0) {
    return 0x656C61636F6CLL;
  }
  else {
    return 0x656D616E656C6966;
  }
}

uint64_t sub_249963AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24996774C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249963B0C(uint64_t a1)
{
  unint64_t v2 = sub_24996724C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249963B48(uint64_t a1)
{
  unint64_t v2 = sub_24996724C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_249963B84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_249964B88(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_249963BB4(void *a1)
{
  return sub_249963938(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_249963BD4()
{
  int v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *(void *)(*v0 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = (void *)(v2 + 56);
    uint64_t v5 = MEMORY[0x263F8EE78];
    do
    {
      if (*(v4 - 2))
      {
        long long v13 = *((_OWORD *)v4 - 1);
        uint64_t v10 = *(v4 - 3);
        uint64_t v11 = *v4;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_249A22190(0, *(void *)(v5 + 16) + 1, 1);
        }
        unint64_t v7 = *(void *)(v5 + 16);
        unint64_t v6 = *(void *)(v5 + 24);
        long long v8 = v13;
        if (v7 >= v6 >> 1)
        {
          sub_249A22190(v6 > 1, v7 + 1, 1);
          long long v8 = v13;
        }
        *(void *)(v5 + 16) = v7 + 1;
        uint64_t v9 = v5 + 32 * v7;
        *(void *)(v9 + 32) = v10;
        *(_OWORD *)(v9 + 40) = v8;
        *(void *)(v9 + 56) = v11;
      }
      v4 += 4;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  uint64_t result = swift_bridgeObjectRelease();
  *int v1 = v5;
  return result;
}

uint64_t sub_249963D0C(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0CA0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499671A4();
  sub_249AEE468();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0C70);
  sub_2499672A0(&qword_2696E0CA8, (void (*)(void))sub_249967310);
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_249963E8C()
{
  return 0x736567616D69;
}

uint64_t sub_249963EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x736567616D69 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249963F30(uint64_t a1)
{
  unint64_t v2 = sub_2499671A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249963F6C(uint64_t a1)
{
  unint64_t v2 = sub_2499671A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_249963FA8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_249964D90(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_249963FD4(void *a1)
{
  return sub_249963D0C(a1, *v1);
}

id sub_249963FF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v15[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = (void *)sub_249AEB738();
  v15[0] = 0;
  id v7 = objc_msgSend(v3, sel_initWithURL_options_error_, v6, a2, v15);

  id v8 = v15[0];
  if (v7)
  {
    uint64_t v9 = sub_249AEB768();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    id v11 = v8;
    v10(a1, v9);
  }
  else
  {
    id v12 = v15[0];
    sub_249AEB718();

    swift_willThrow();
    uint64_t v13 = sub_249AEB768();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

uint64_t sub_249964144(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  double v4 = *(double *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (v7 = sub_249AEE0D8(), uint64_t result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if ((v5 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v2 == v4) {
        char v9 = v5;
      }
      else {
        char v9 = 1;
      }
      if (v9) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI05ImageC0V09LocalizedE0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  if (*(void *)a1)
  {
    if (!v7) {
      return 0;
    }
    sub_24987BE44();
    id v10 = v7;
    id v11 = v3;
    char v12 = sub_249AED888();

    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  BOOL v13 = v2 == v6 && v5 == v9;
  if (!v13 && (sub_249AEE0D8() & 1) == 0) {
    return 0;
  }

  return sub_249A00B90(v4, v8);
}

BOOL _s14CarPlayAssetUI05ImageC0V0E0V2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 16);
  double v3 = *(double *)(a1 + 24);
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v5 = *(void **)(a2 + 16);
  double v6 = *(double *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  BOOL v8 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v8 || (v9 = sub_249AEE0D8(), BOOL result = 0, (v9 & 1) != 0))
  {
    if (v2)
    {
      if (!v5) {
        return 0;
      }
      sub_24987BE44();
      id v11 = v5;
      id v12 = v2;
      char v13 = sub_249AED888();

      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    else if (v5)
    {
      return 0;
    }
    if ((v4 & 1) == 0)
    {
      if (v3 == v6) {
        char v14 = v7;
      }
      else {
        char v14 = 1;
      }
      return (v14 & 1) == 0;
    }
    return (v7 & 1) != 0;
  }
  return result;
}

uint64_t _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  int v6 = *(char *)(a1 + 32);
  BOOL v8 = *(void **)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  id v10 = *(void **)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v11 = *(char *)(a2 + 32);
  if (v6 < 0)
  {
    if (v11 < 0)
    {
      unint64_t v21 = *(void **)a1;
      uint64_t v22 = v2;
      unint64_t v23 = v5;
      uint64_t v24 = v4;
      char v16 = v8;
      uint64_t v17 = v7;
      int64_t v18 = v10;
      uint64_t v19 = v9;
      sub_24988247C(v8, v7, v10, v9, v11);
      sub_24988247C(v3, v2, v5, v4, v6);
      sub_24988247C(v3, v2, v5, v4, v6);
      sub_24988247C(v8, v7, v10, v9, v11);
      char v12 = _s14CarPlayAssetUI05ImageC0V09LocalizedE0V2eeoiySbAE_AEtFZ_0((uint64_t)&v21, (uint64_t)&v16);
      goto LABEL_7;
    }
  }
  else if ((v11 & 0x80000000) == 0)
  {
    unint64_t v21 = *(void **)a1;
    uint64_t v22 = v2;
    unint64_t v23 = v5;
    uint64_t v24 = v4;
    char v25 = v6 & 1;
    char v16 = v8;
    uint64_t v17 = v7;
    int64_t v18 = v10;
    uint64_t v19 = v9;
    char v20 = v11 & 1;
    sub_24988247C(v8, v7, v10, v9, v11);
    sub_24988247C(v3, v2, v5, v4, v6);
    sub_24988247C(v3, v2, v5, v4, v6);
    sub_24988247C(v8, v7, v10, v9, v11);
    char v12 = _s14CarPlayAssetUI05ImageC0V0E0V2eeoiySbAE_AEtFZ_0((uint64_t)&v21, (uint64_t)&v16);
LABEL_7:
    char v15 = v12;
    sub_2498826E4(v3, v2, v5, v4, v6);
    sub_2498826E4(v8, v7, v10, v9, v11);
    sub_2498826E4(v8, v7, v10, v9, v11);
    sub_2498826E4(v3, v2, v5, v4, v6);
    char v13 = v15;
    return v13 & 1;
  }
  sub_24988247C(*(void **)a1, v2, v5, v4, v6);
  sub_24988247C(v8, v7, v10, v9, v11);
  sub_2498826E4(v3, v2, v5, v4, v6);
  sub_2498826E4(v8, v7, v10, v9, v11);
  char v13 = 0;
  return v13 & 1;
}

unint64_t sub_2499645E4()
{
  unint64_t result = qword_2696E0A40;
  if (!qword_2696E0A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A40);
  }
  return result;
}

unint64_t sub_249964638()
{
  unint64_t result = qword_2696E0A48;
  if (!qword_2696E0A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A48);
  }
  return result;
}

unint64_t sub_24996468C()
{
  unint64_t result = qword_2696E0A50;
  if (!qword_2696E0A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A50);
  }
  return result;
}

unint64_t sub_2499646E0()
{
  unint64_t result = qword_2696E0A58;
  if (!qword_2696E0A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A58);
  }
  return result;
}

unint64_t sub_249964734()
{
  unint64_t result = qword_2696E0A60;
  if (!qword_2696E0A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A60);
  }
  return result;
}

unint64_t sub_249964788()
{
  unint64_t result = qword_2696E0A80;
  if (!qword_2696E0A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A80);
  }
  return result;
}

unint64_t sub_2499647DC()
{
  unint64_t result = qword_2696E0A88;
  if (!qword_2696E0A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A88);
  }
  return result;
}

unint64_t sub_249964830()
{
  unint64_t result = qword_2696DDA18;
  if (!qword_2696DDA18)
  {
    sub_249AEB4E8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DDA18);
  }
  return result;
}

unint64_t sub_249964888()
{
  unint64_t result = qword_2696E0A98;
  if (!qword_2696E0A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0A98);
  }
  return result;
}

unint64_t sub_2499648DC()
{
  unint64_t result = qword_2696E0AA0;
  if (!qword_2696E0AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0AA0);
  }
  return result;
}

unint64_t sub_249964930()
{
  unint64_t result = qword_2696E0AA8;
  if (!qword_2696E0AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0AA8);
  }
  return result;
}

unint64_t sub_249964984()
{
  unint64_t result = qword_2696E0AB8;
  if (!qword_2696E0AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0AB8);
  }
  return result;
}

unint64_t sub_2499649D8()
{
  unint64_t result = qword_2696E0AC0;
  if (!qword_2696E0AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0AC0);
  }
  return result;
}

uint64_t sub_249964A2C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_249964A8C()
{
  unint64_t result = qword_2696E0AD8;
  if (!qword_2696E0AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0AD8);
  }
  return result;
}

unint64_t sub_249964AE0()
{
  unint64_t result = qword_2696E0AE0;
  if (!qword_2696E0AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0AE0);
  }
  return result;
}

unint64_t sub_249964B34()
{
  unint64_t result = qword_2696E0AF0;
  if (!qword_2696E0AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0AF0);
  }
  return result;
}

uint64_t sub_249964B88(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0C88);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24996724C();
  sub_249AEE428();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = sub_249AEDD58();
    char v10 = 1;
    swift_bridgeObjectRetain();
    sub_249AEDD58();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *sub_249964D90(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0C60);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499671A4();
  sub_249AEE428();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0C70);
    sub_2499672A0(&qword_2696E0C78, (void (*)(void))sub_2499671F8);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_249964F38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657A696C61636F6CLL && a2 == 0xEE006567616D4964)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249965048(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249965144(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7475626972747461 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249965244(void *a1)
{
  uint64_t v3 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = sub_249AEB4E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!objc_msgSend(a1, sel_isDirectory)) {
    goto LABEL_40;
  }
  id v8 = objc_msgSend(a1, sel_preferredFilename);
  if (!v8)
  {
    sub_249AEB478();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_249964830();
    sub_249AEB708();
    uint64_t v9 = (uint64_t)v7;
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_willThrow();
    goto LABEL_6;
  }

  uint64_t v9 = (uint64_t)a1;
  NSFileWrapper.data(contentsOf:)(0x73746E65746E6F43, 0xED00006E6F736A2ELL);
  if (v1)
  {
LABEL_6:

    return v9;
  }
  uint64_t v12 = v10;
  unint64_t v13 = v11;
  sub_249AEB518();
  swift_allocObject();
  sub_249AEB508();
  sub_249966E28();
  sub_249AEB4F8();
  uint64_t v62 = v12;
  unint64_t v63 = v13;
  swift_release();
  sub_249963BD4();
  uint64_t v15 = *(void *)(v67 + 16);
  uint64_t v61 = v67;
  if (!v15)
  {
    uint64_t v64 = (void *)MEMORY[0x263F8EE80];
LABEL_37:
    swift_bridgeObjectRelease();
    uint64_t v56 = v62;
    unint64_t v55 = v63;
    uint64_t v9 = sub_249953A50(v62, v63);

    sub_249882104(v56, v55);
    return v9;
  }
  char v16 = (uint64_t *)(v67 + 56);
  uint64_t v64 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v17 = *(v16 - 2);
    uint64_t v18 = *v16;
    if (*v16) {
      BOOL v19 = v17 == 0;
    }
    else {
      BOOL v19 = 1;
    }
    if (v19) {
      goto LABEL_12;
    }
    uint64_t v20 = *(v16 - 3);
    uint64_t v21 = *(v16 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v22 = objc_msgSend(a1, sel_fileWrappers);
    if (!v22)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    unint64_t v23 = v22;
    uint64_t v65 = v21;
    sub_24987BE44();
    uint64_t v24 = sub_249AECE98();

    if (!*(void *)(v24 + 16) || (uint64_t v25 = sub_2498EF01C(v20, v17), (v26 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    id v27 = *(id *)(*(void *)(v24 + 56) + 8 * v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v28 = objc_msgSend(v27, sel_regularFileContents);
    if (!v28)
    {
      swift_bridgeObjectRelease();

      goto LABEL_12;
    }
    int v29 = v28;
    id v60 = v27;
    uint64_t v30 = sub_249AEB798();
    unint64_t v32 = v31;

    id v33 = objc_allocWithZone(MEMORY[0x263F827E8]);
    sub_249882F28(v30, v32);
    uint64_t v34 = (void *)sub_249AEB788();
    id v35 = objc_msgSend(v33, sel_initWithData_, v34);
    sub_249882104(v30, v32);

    if (!v35)
    {
      sub_249882104(v30, v32);
      swift_bridgeObjectRelease();

      goto LABEL_12;
    }
    uint64_t v58 = v30;
    unint64_t v59 = v32;
    id v60 = v60;
    uint64_t v36 = v64;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v66 = v36;
    unint64_t v39 = sub_2498EF01C(v65, v18);
    uint64_t v40 = v36[2];
    BOOL v41 = (v38 & 1) == 0;
    uint64_t v42 = v40 + v41;
    if (__OFADD__(v40, v41)) {
      break;
    }
    char v43 = v38;
    if (v36[3] >= v42)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_2498E1844();
      }
    }
    else
    {
      sub_2498E6A9C(v42, isUniquelyReferenced_nonNull_native);
      uint64_t v44 = sub_2498EF01C(v65, v18);
      if ((v43 & 1) != (v45 & 1)) {
        goto LABEL_41;
      }
      unint64_t v39 = v44;
    }
    id v46 = v60;
    uint64_t v47 = v66;
    uint64_t v64 = v66;
    if (v43)
    {
      uint64_t v48 = v66[7];

      *(void *)(v48 + 8 * v39) = v46;
    }
    else
    {
      v66[(v39 >> 6) + 8] |= 1 << v39;
      uint64_t v49 = (void *)(v47[6] + 16 * v39);
      *uint64_t v49 = v65;
      v49[1] = v18;
      *(void *)(v47[7] + 8 * v39) = v46;
      uint64_t v50 = v47[2];
      BOOL v51 = __OFADD__(v50, 1);
      uint64_t v52 = v50 + 1;
      if (v51) {
        goto LABEL_39;
      }
      v47[2] = v52;
      swift_bridgeObjectRetain();
    }
    uint64_t v54 = v58;
    unint64_t v53 = v59;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249882104(v54, v53);
LABEL_12:
    v16 += 4;
    if (!--v15) {
      goto LABEL_37;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  sub_249AEDC58();
  __break(1u);
LABEL_41:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

unint64_t sub_249965860()
{
  unint64_t result = qword_2696E0B00;
  if (!qword_2696E0B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B00);
  }
  return result;
}

unint64_t sub_2499658B4()
{
  unint64_t result = qword_2696E0B18;
  if (!qword_2696E0B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B18);
  }
  return result;
}

uint64_t sub_249965908(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0B08);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249965984()
{
  unint64_t result = qword_2696E0B30;
  if (!qword_2696E0B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B30);
  }
  return result;
}

unint64_t sub_2499659D8()
{
  unint64_t result = qword_2696E0B40;
  if (!qword_2696E0B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B40);
  }
  return result;
}

unint64_t sub_249965A30()
{
  unint64_t result = qword_2696E0B50;
  if (!qword_2696E0B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B50);
  }
  return result;
}

unint64_t sub_249965A88()
{
  unint64_t result = qword_2696E0B58;
  if (!qword_2696E0B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B58);
  }
  return result;
}

unint64_t sub_249965AE0()
{
  unint64_t result = qword_2696E0B60;
  if (!qword_2696E0B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B60);
  }
  return result;
}

unint64_t sub_249965B38()
{
  unint64_t result = qword_2696E0B68;
  if (!qword_2696E0B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B68);
  }
  return result;
}

unint64_t sub_249965B90()
{
  unint64_t result = qword_2696E0B70;
  if (!qword_2696E0B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B70);
  }
  return result;
}

uint64_t initializeWithCopy for ImageAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithCopy for ImageAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  unint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_2498826E4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for ImageAsset(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_2498826E4(v5, v6, v7, v8, v10);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ImageAsset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2)
    {
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset()
{
  return &type metadata for ImageAsset;
}

uint64_t initializeWithCopy for ImageAsset.ImageType(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for ImageAsset.ImageType(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void **)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  char v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_2498826E4(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for ImageAsset.ImageType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void **)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_2498826E4(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset.ImageType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for ImageAsset.ImageType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)unint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_249965FD0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_249965FDC(uint64_t result)
{
  *(unsigned char *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_249965FEC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.ImageType()
{
  return &type metadata for ImageAsset.ImageType;
}

void destroy for ImageAsset.Image(uint64_t a1)
{
  swift_bridgeObjectRelease();
  BOOL v2 = *(void **)(a1 + 16);
}

uint64_t initializeWithCopy for ImageAsset.Image(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

uint64_t assignWithCopy for ImageAsset.Image(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v7;
  return a1;
}

uint64_t assignWithTake for ImageAsset.Image(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset.Image(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageAsset.Image(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.Image()
{
  return &type metadata for ImageAsset.Image;
}

uint64_t destroy for ImageAsset.LocalizedImage(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ImageAsset.LocalizedImage(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageAsset.LocalizedImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImageAsset.LocalizedImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset.LocalizedImage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageAsset.LocalizedImage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.LocalizedImage()
{
  return &type metadata for ImageAsset.LocalizedImage;
}

uint64_t storeEnumTagSinglePayload for ImageAsset.Attributes(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.Attributes()
{
  return &type metadata for ImageAsset.Attributes;
}

ValueMetadata *type metadata accessor for ImageAsset.Attributes.CodingKeys()
{
  return &type metadata for ImageAsset.Attributes.CodingKeys;
}

uint64_t initializeWithCopy for ImageAsset.LocalizedImage.ImageData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ImageAsset.LocalizedImage.ImageData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ImageAsset.LocalizedImage.ImageData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageAsset.LocalizedImage.ImageData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageAsset.LocalizedImage.ImageData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageAsset.LocalizedImage.ImageData()
{
  return &type metadata for ImageAsset.LocalizedImage.ImageData;
}

ValueMetadata *type metadata accessor for ImageAsset.LocalizedImage.CodingKeys()
{
  return &type metadata for ImageAsset.LocalizedImage.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.Image.CodingKeys()
{
  return &type metadata for ImageAsset.Image.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.CodingKeys()
{
  return &type metadata for ImageAsset.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.ImageType.CodingKeys()
{
  return &type metadata for ImageAsset.ImageType.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.ImageType.ImageCodingKeys()
{
  return &type metadata for ImageAsset.ImageType.ImageCodingKeys;
}

ValueMetadata *type metadata accessor for ImageAsset.ImageType.LocalizedImageCodingKeys()
{
  return &type metadata for ImageAsset.ImageType.LocalizedImageCodingKeys;
}

unint64_t sub_249966648()
{
  unint64_t result = qword_2696E0B78;
  if (!qword_2696E0B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B78);
  }
  return result;
}

unint64_t sub_2499666A0()
{
  unint64_t result = qword_2696E0B80;
  if (!qword_2696E0B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B80);
  }
  return result;
}

unint64_t sub_2499666F8()
{
  unint64_t result = qword_2696E0B88;
  if (!qword_2696E0B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B88);
  }
  return result;
}

unint64_t sub_249966750()
{
  unint64_t result = qword_2696E0B90;
  if (!qword_2696E0B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B90);
  }
  return result;
}

unint64_t sub_2499667A8()
{
  unint64_t result = qword_2696E0B98;
  if (!qword_2696E0B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0B98);
  }
  return result;
}

unint64_t sub_249966800()
{
  unint64_t result = qword_2696E0BA0;
  if (!qword_2696E0BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BA0);
  }
  return result;
}

unint64_t sub_249966858()
{
  unint64_t result = qword_2696E0BA8;
  if (!qword_2696E0BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BA8);
  }
  return result;
}

unint64_t sub_2499668B0()
{
  unint64_t result = qword_2696E0BB0;
  if (!qword_2696E0BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BB0);
  }
  return result;
}

unint64_t sub_249966908()
{
  unint64_t result = qword_2696E0BB8;
  if (!qword_2696E0BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BB8);
  }
  return result;
}

unint64_t sub_249966960()
{
  unint64_t result = qword_2696E0BC0;
  if (!qword_2696E0BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BC0);
  }
  return result;
}

unint64_t sub_2499669B8()
{
  unint64_t result = qword_2696E0BC8;
  if (!qword_2696E0BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BC8);
  }
  return result;
}

unint64_t sub_249966A10()
{
  unint64_t result = qword_2696E0BD0;
  if (!qword_2696E0BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BD0);
  }
  return result;
}

unint64_t sub_249966A68()
{
  unint64_t result = qword_2696E0BD8;
  if (!qword_2696E0BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BD8);
  }
  return result;
}

unint64_t sub_249966AC0()
{
  unint64_t result = qword_2696E0BE0;
  if (!qword_2696E0BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BE0);
  }
  return result;
}

unint64_t sub_249966B18()
{
  unint64_t result = qword_2696E0BE8;
  if (!qword_2696E0BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BE8);
  }
  return result;
}

unint64_t sub_249966B70()
{
  unint64_t result = qword_2696E0BF0;
  if (!qword_2696E0BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BF0);
  }
  return result;
}

unint64_t sub_249966BC8()
{
  unint64_t result = qword_2696E0BF8;
  if (!qword_2696E0BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0BF8);
  }
  return result;
}

unint64_t sub_249966C20()
{
  unint64_t result = qword_2696E0C00;
  if (!qword_2696E0C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C00);
  }
  return result;
}

unint64_t sub_249966C78()
{
  unint64_t result = qword_2696E0C08;
  if (!qword_2696E0C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C08);
  }
  return result;
}

unint64_t sub_249966CD0()
{
  unint64_t result = qword_2696E0C10;
  if (!qword_2696E0C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C10);
  }
  return result;
}

unint64_t sub_249966D28()
{
  unint64_t result = qword_2696E0C18;
  if (!qword_2696E0C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C18);
  }
  return result;
}

unint64_t sub_249966D80()
{
  unint64_t result = qword_2696E0C20;
  if (!qword_2696E0C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C20);
  }
  return result;
}

unint64_t sub_249966DD4()
{
  unint64_t result = qword_2696E0C30;
  if (!qword_2696E0C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C30);
  }
  return result;
}

unint64_t sub_249966E28()
{
  unint64_t result = qword_2696E0C40;
  if (!qword_2696E0C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C40);
  }
  return result;
}

uint64_t destroy for ImageSet()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14CarPlayAssetUI8ImageSetVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ImageSet(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ImageSet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ImageSet()
{
  return &type metadata for ImageSet;
}

uint64_t getEnumTagSinglePayload for ImageSet.Content.Image(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageSet.Content.Image(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageSet.Content.Image()
{
  return &type metadata for ImageSet.Content.Image;
}

ValueMetadata *type metadata accessor for ImageSet.Content()
{
  return &type metadata for ImageSet.Content;
}

ValueMetadata *type metadata accessor for ImageAsset.LocalizedImage.ImageData.CodingKeys()
{
  return &type metadata for ImageAsset.LocalizedImage.ImageData.CodingKeys;
}

unint64_t sub_2499670A0()
{
  unint64_t result = qword_2696E0C48;
  if (!qword_2696E0C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C48);
  }
  return result;
}

unint64_t sub_2499670F8()
{
  unint64_t result = qword_2696E0C50;
  if (!qword_2696E0C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C50);
  }
  return result;
}

unint64_t sub_249967150()
{
  unint64_t result = qword_2696E0C58;
  if (!qword_2696E0C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C58);
  }
  return result;
}

unint64_t sub_2499671A4()
{
  unint64_t result = qword_2696E0C68;
  if (!qword_2696E0C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C68);
  }
  return result;
}

unint64_t sub_2499671F8()
{
  unint64_t result = qword_2696E0C80;
  if (!qword_2696E0C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C80);
  }
  return result;
}

unint64_t sub_24996724C()
{
  unint64_t result = qword_2696E0C90;
  if (!qword_2696E0C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0C90);
  }
  return result;
}

uint64_t sub_2499672A0(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0C70);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249967310()
{
  unint64_t result = qword_2696E0CB0;
  if (!qword_2696E0CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0CB0);
  }
  return result;
}

unsigned char *_s14CarPlayAssetUI10ImageAssetV14LocalizedImageV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249967430);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageSet.Content.Image.CodingKeys()
{
  return &type metadata for ImageSet.Content.Image.CodingKeys;
}

unsigned char *_s14CarPlayAssetUI10ImageAssetV10AttributesV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249967504);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImageSet.Content.CodingKeys()
{
  return &type metadata for ImageSet.Content.CodingKeys;
}

unint64_t sub_249967540()
{
  unint64_t result = qword_2696E0CB8;
  if (!qword_2696E0CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0CB8);
  }
  return result;
}

unint64_t sub_249967598()
{
  unint64_t result = qword_2696E0CC0;
  if (!qword_2696E0CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0CC0);
  }
  return result;
}

unint64_t sub_2499675F0()
{
  unint64_t result = qword_2696E0CC8;
  if (!qword_2696E0CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0CC8);
  }
  return result;
}

unint64_t sub_249967648()
{
  unint64_t result = qword_2696E0CD0;
  if (!qword_2696E0CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0CD0);
  }
  return result;
}

unint64_t sub_2499676A0()
{
  unint64_t result = qword_2696E0CD8;
  if (!qword_2696E0CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0CD8);
  }
  return result;
}

unint64_t sub_2499676F8()
{
  unint64_t result = qword_2696E0CE0;
  if (!qword_2696E0CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0CE0);
  }
  return result;
}

uint64_t sub_24996774C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249967838(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_249A21F10(0, v1, 0);
    uint64_t v2 = v14;
    uint64_t v4 = type metadata accessor for Zone();
    uint64_t v5 = a1
       + ((*(unsigned __int8 *)(*(void *)(v4 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v4 - 8) + 80));
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 72);
    do
    {
      uint64_t v7 = (uint64_t *)(v5 + *(int *)(v4 + 20));
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      unint64_t v10 = *(void *)(v14 + 16);
      unint64_t v11 = *(void *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1) {
        sub_249A21F10(v11 > 1, v10 + 1, 1);
      }
      v5 += v6;
      *(void *)(v14 + 16) = v10 + 1;
      uint64_t v12 = v14 + 16 * v10;
      *(void *)(v12 + 32) = v9;
      *(void *)(v12 + 40) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24996797C()
{
  return sub_2499679FC(sub_24996797C, (void (*)(uint64_t))sub_249894638);
}

uint64_t sub_2499679BC()
{
  return sub_2499679FC(sub_2499679BC, (void (*)(uint64_t))sub_249894B10);
}

uint64_t sub_2499679FC(uint64_t (*a1)(uint64_t), void (*a2)(uint64_t))
{
  uint64_t v24 = a2;
  uint64_t v3 = sub_249AEE3E8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF1E8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v30 = MEMORY[0x263F8EE78];
  sub_249AEE3C8();
  uint64_t v13 = sub_249AEE3B8();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    goto LABEL_6;
  }
  uint64_t v22 = v3;
  uint64_t v23 = v4;
  sub_2498D6084((uint64_t)v12, (uint64_t)v10, &qword_2696DF1E8);
  if ((*(unsigned int (**)(char *, uint64_t))(v14 + 88))(v10, v13) != *MEMORY[0x263F8E800])
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v13);
LABEL_6:
    uint64_t v19 = sub_249AEE3D8();
    MEMORY[0x270FA5388](v19);
    *(&v21 - 2) = (uint64_t)&v30;
    sub_249AEDBF8();
    swift_release();
    goto LABEL_9;
  }
  sub_249AEE3D8();
  sub_2498D9070(&v25);
  swift_release();
  if (v27)
  {
    long long v28 = v25;
    sub_2498DA208(&v26, v29);
    sub_2498DA218((uint64_t)v29, (uint64_t)&v26);
    uint64_t v15 = sub_249AEE398();
    uint64_t v16 = a1(v15);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v22);
    v24(v16);
    uint64_t v17 = qword_2696DF1F8;
    uint64_t v18 = &v28;
  }
  else
  {
    uint64_t v17 = &qword_2696DF1F0;
    uint64_t v18 = &v25;
  }
  sub_2498D60E8((uint64_t)v18, v17);
LABEL_9:
  sub_2498D60E8((uint64_t)v12, &qword_2696DF1E8);
  return v30;
}

uint64_t sub_249967D1C(_OWORD *a1, uint64_t *a2)
{
  uint64_t v4 = sub_249AEE3E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DA218((uint64_t)(a1 + 1), (uint64_t)v23);
  sub_249AEE398();
  uint64_t v8 = (ValueMetadata *)sub_249AEE3A8();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  if (v8 == &type metadata for Theme.ColorID)
  {
    v22[2] = *a1;
    sub_2498DA218((uint64_t)(a1 + 1), (uint64_t)v23);
    sub_2498DA208(v23, v22);
    swift_dynamicCast();
    uint64_t v13 = v20[1];
    uint64_t v14 = v20[2];
    char v15 = v21;
    uint64_t v16 = (void *)*a2;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *a2 = (uint64_t)v16;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2498AB3BC(0, v16[2] + 1, 1, v16);
      uint64_t v16 = (void *)result;
      *a2 = result;
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1)
    {
      uint64_t result = (uint64_t)sub_2498AB3BC((void *)(v17 > 1), v18 + 1, 1, v16);
      uint64_t v16 = (void *)result;
      *a2 = result;
    }
    _OWORD v16[2] = v18 + 1;
    uint64_t v19 = &v16[3 * v18];
    v19[4] = v13;
    v19[5] = v14;
    *((unsigned char *)v19 + 48) = v15;
  }
  else
  {
    sub_2498DA218((uint64_t)(a1 + 1), (uint64_t)v23);
    uint64_t v10 = sub_249AEE398();
    uint64_t v11 = sub_24996797C(v10);
    v9(v7, v4);
    return sub_249894638(v11);
  }
  return result;
}

uint64_t sub_249967F4C(_OWORD *a1, uint64_t *a2)
{
  uint64_t v4 = sub_249AEE3E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498DA218((uint64_t)(a1 + 1), (uint64_t)v19);
  sub_249AEE398();
  uint64_t v8 = (ValueMetadata *)sub_249AEE3A8();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v5 + 8);
  v9(v7, v4);
  if (v8 == &type metadata for InstrumentDataIdentifier)
  {
    void v18[2] = *a1;
    sub_2498DA218((uint64_t)(a1 + 1), (uint64_t)v19);
    sub_2498DA208(v19, v18);
    swift_dynamicCast();
    char v13 = v20;
    uint64_t v14 = *a2;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v14;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_2498AC1E8(0, *(void *)(v14 + 16) + 1, 1, (char *)v14);
      uint64_t v14 = result;
      *a2 = result;
    }
    unint64_t v16 = *(void *)(v14 + 16);
    unint64_t v15 = *(void *)(v14 + 24);
    if (v16 >= v15 >> 1)
    {
      uint64_t result = (uint64_t)sub_2498AC1E8((char *)(v15 > 1), v16 + 1, 1, (char *)v14);
      uint64_t v14 = result;
    }
    *(void *)(v14 + 16) = v16 + 1;
    *(unsigned char *)(v14 + v16 + 32) = v13;
    *a2 = v14;
  }
  else
  {
    sub_2498DA218((uint64_t)(a1 + 1), (uint64_t)v19);
    uint64_t v10 = sub_249AEE398();
    uint64_t v11 = sub_2499679BC(v10);
    v9(v7, v4);
    return sub_249894B10(v11);
  }
  return result;
}

uint64_t Layout.colorIDs.getter()
{
  uint64_t v1 = sub_249AEE3E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v9[3] = type metadata accessor for Layout();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v9);
  sub_249970E0C(v0, (uint64_t)boxed_opaque_existential_0, (uint64_t (*)(void))type metadata accessor for Layout);
  sub_249AEE398();
  uint64_t v6 = sub_24996797C();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  uint64_t v7 = sub_2498DAEBC(v6);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t type metadata accessor for Layout()
{
  uint64_t result = qword_2696E0E68;
  if (!qword_2696E0E68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LayoutType.displayName.getter()
{
  if (*v0) {
    return 0x79616C7265764FLL;
  }
  else {
    return 0x7972616D697250;
  }
}

CarPlayAssetUI::LayoutType_optional __swiftcall LayoutType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

void *static LayoutType.allCases.getter()
{
  return &unk_26FDA1640;
}

uint64_t LayoutType.rawValue.getter()
{
  if (*v0) {
    return 0x79616C7265766FLL;
  }
  else {
    return 0x7972616D697270;
  }
}

uint64_t sub_2499683B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498F1CBC(*a1, *a2);
}

CarPlayAssetUI::LayoutType_optional sub_2499683C0(Swift::String *a1)
{
  return LayoutType.init(rawValue:)(*a1);
}

void sub_2499683CC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7972616D697270;
  if (*v1) {
    uint64_t v2 = 0x79616C7265766FLL;
  }
  *a1 = v2;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_249968404()
{
  return sub_249AED3A8();
}

uint64_t sub_249968464()
{
  return sub_249AED348();
}

void sub_2499684B4(void *a1@<X8>)
{
  *a1 = &unk_26FDA1478;
}

uint64_t sub_2499684C4()
{
  return sub_249AEE388();
}

uint64_t sub_24996853C()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249968598()
{
  return sub_249AEE388();
}

uint64_t static Layout.== infix(_:_:)()
{
  return sub_249AED088() & 1;
}

uint64_t Layout.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2498D6084(v1, a1, &qword_2696DFCB0);
}

uint64_t Layout.displayName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Layout() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Layout.displayName.setter(uint64_t a1, uint64_t a2)
{
  char v5 = (void *)(v2 + *(int *)(type metadata accessor for Layout() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *char v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Layout.displayName.modify())(void)
{
  return nullsub_1;
}

uint64_t Layout.zones.getter()
{
  type metadata accessor for Layout();

  return swift_bridgeObjectRetain();
}

uint64_t Layout.zones.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Layout() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Layout.zones.modify())(void)
{
  return nullsub_1;
}

uint64_t Layout.layoutStyleID.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for Layout() + 28));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t Layout.layoutStyleID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (void *)(v1 + *(int *)(type metadata accessor for Layout() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t (*Layout.layoutStyleID.modify())(void)
{
  return nullsub_1;
}

uint64_t Layout.backgroundColor.getter()
{
  type metadata accessor for Layout();

  return swift_retain();
}

uint64_t Layout.backgroundColor.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Layout() + 32);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Layout.backgroundColor.modify())(void)
{
  return nullsub_1;
}

uint64_t Layout.layoutType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Layout();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 36));
  return result;
}

uint64_t Layout.layoutType.setter(char *a1)
{
  char v2 = *a1;
  uint64_t result = type metadata accessor for Layout();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = v2;
  return result;
}

uint64_t (*Layout.layoutType.modify())(void)
{
  return nullsub_1;
}

__n128 Layout.systemUILayout.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Layout() + 40);
  __int16 v4 = *(_WORD *)(v3 + 64);
  char v5 = *(unsigned char *)(v3 + 66);
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  __n128 result = *(__n128 *)(v3 + 32);
  long long v8 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 66) = v5;
  *(_WORD *)(a1 + 64) = v4;
  return result;
}

__n128 sub_249968AD4@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for Layout() + 40);
  __int16 v4 = *(_WORD *)(v3 + 64);
  char v5 = *(unsigned char *)(v3 + 66);
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a2 = *(_OWORD *)v3;
  *(_OWORD *)(a2 + 16) = v6;
  __n128 result = *(__n128 *)(v3 + 32);
  long long v8 = *(_OWORD *)(v3 + 48);
  *(__n128 *)(a2 + 32) = result;
  *(_OWORD *)(a2 + 48) = v8;
  *(unsigned char *)(a2 + 66) = v5;
  *(_WORD *)(a2 + 64) = v4;
  return result;
}

__n128 sub_249968B28(long long *a1, uint64_t a2)
{
  long long v9 = a1[1];
  long long v10 = *a1;
  __n128 v8 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  __int16 v4 = *((_WORD *)a1 + 32);
  char v5 = *((unsigned char *)a1 + 66);
  uint64_t v6 = a2 + *(int *)(type metadata accessor for Layout() + 40);
  *(_OWORD *)uint64_t v6 = v10;
  *(_OWORD *)(v6 + 16) = v9;
  __n128 result = v8;
  *(__n128 *)(v6 + 32) = v8;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(unsigned char *)(v6 + 66) = v5;
  *(_WORD *)(v6 + 64) = v4;
  return result;
}

__n128 Layout.systemUILayout.setter(long long *a1)
{
  long long v9 = a1[1];
  long long v10 = *a1;
  __n128 v8 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  uint64_t v3 = *((void *)a1 + 7);
  __int16 v4 = *((_WORD *)a1 + 32);
  char v5 = *((unsigned char *)a1 + 66);
  uint64_t v6 = v1 + *(int *)(type metadata accessor for Layout() + 40);
  *(_OWORD *)uint64_t v6 = v10;
  *(_OWORD *)(v6 + 16) = v9;
  __n128 result = v8;
  *(__n128 *)(v6 + 32) = v8;
  *(void *)(v6 + 48) = v2;
  *(void *)(v6 + 56) = v3;
  *(unsigned char *)(v6 + 66) = v5;
  *(_WORD *)(v6 + 64) = v4;
  return result;
}

uint64_t (*Layout.systemUILayout.modify())(void)
{
  return nullsub_1;
}

double Layout.safeAreaInsets.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Layout() + 44));
}

uint64_t Layout.safeAreaInsets.setter(double a1, double a2, double a3, double a4)
{
  uint64_t result = type metadata accessor for Layout();
  long long v10 = (double *)(v4 + *(int *)(result + 44));
  *long long v10 = a1;
  v10[1] = a2;
  void v10[2] = a3;
  v10[3] = a4;
  return result;
}

uint64_t (*Layout.safeAreaInsets.modify())(void)
{
  return nullsub_1;
}

void *Layout.preview.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Layout() + 48);
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  char v11 = *(unsigned char *)(v3 + 56);
  *(unsigned char *)(a1 + 56) = v11;

  return sub_24997024C(v4, v5, v6, v7, v8, v9, v10, v11);
}

void *sub_249968DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1 + *(int *)(type metadata accessor for Layout() + 48);
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void *)(v3 + 8);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v3 + 24);
  uint64_t v8 = *(void *)(v3 + 32);
  uint64_t v9 = *(void *)(v3 + 40);
  uint64_t v10 = *(void *)(v3 + 48);
  *(void *)a2 = *(void *)v3;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v10;
  char v11 = *(unsigned char *)(v3 + 56);
  *(unsigned char *)(a2 + 56) = v11;

  return sub_24997024C(v4, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_249968E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  char v8 = *(unsigned char *)(a1 + 56);
  uint64_t v9 = a2 + *(int *)(type metadata accessor for Layout() + 48);
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t v17 = *(void *)(v9 + 16);
  uint64_t v18 = *(void *)v9;
  uint64_t v15 = *(void *)(v9 + 32);
  uint64_t v16 = *(void *)(v9 + 24);
  uint64_t v13 = *(void *)(v9 + 48);
  uint64_t v14 = *(void *)(v9 + 40);
  char v12 = *(unsigned char *)(v9 + 56);
  sub_24997024C(v2, v19, v3, v4, v5, v6, v7, v8);
  uint64_t result = sub_2499702C4(v18, v10, v17, v16, v15, v14, v13, v12);
  *(void *)uint64_t v9 = v2;
  *(void *)(v9 + 8) = v19;
  *(void *)(v9 + 16) = v3;
  *(void *)(v9 + 24) = v4;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v6;
  *(void *)(v9 + 48) = v7;
  *(unsigned char *)(v9 + 56) = v8;
  return result;
}

__n128 Layout.preview.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  __n128 v6 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  char v3 = *((unsigned char *)a1 + 56);
  uint64_t v4 = v1 + *(int *)(type metadata accessor for Layout() + 48);
  sub_2499702C4(*(void *)v4, *(void *)(v4 + 8), *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(unsigned char *)(v4 + 56));
  *(_OWORD *)uint64_t v4 = v8;
  *(_OWORD *)(v4 + 16) = v7;
  __n128 result = v6;
  *(__n128 *)(v4 + 32) = v6;
  *(void *)(v4 + 48) = v2;
  *(unsigned char *)(v4 + 56) = v3;
  return result;
}

uint64_t (*Layout.preview.modify())(void)
{
  return nullsub_1;
}

uint64_t Layout.wallpapers.getter()
{
  type metadata accessor for Layout();

  return swift_bridgeObjectRetain();
}

uint64_t sub_249969008(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(int *)(type metadata accessor for Layout() + 52);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a2 + v4) = v3;
  return result;
}

uint64_t Layout.wallpapers.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Layout() + 52);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Layout.wallpapers.modify())(void)
{
  return nullsub_1;
}

uint64_t Layout.init(id:template:displaySize:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, long long *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, double a14@<D4>, double a15@<D5>)
{
  uint64_t v50 = a8;
  uint64_t v52 = a5;
  uint64_t v53 = a2;
  uint64_t v49 = a1;
  uint64_t v51 = a9;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  MEMORY[0x270FA5388](v26 - 8);
  long long v28 = (char *)&v39 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v29 = *a3;
  long long v46 = *a4;
  long long v45 = a4[1];
  long long v44 = a4[2];
  uint64_t v30 = *((void *)a4 + 6);
  uint64_t v31 = *((void *)a4 + 7);
  int v47 = *((unsigned __int16 *)a4 + 32);
  LOBYTE(a4) = *((unsigned char *)a4 + 66);
  uint64_t v32 = *a6;
  uint64_t v33 = a6[1];
  long long v43 = *a7;
  long long v42 = a7[1];
  long long v41 = a7[2];
  uint64_t v34 = *((void *)a7 + 6);
  int v40 = *((unsigned __int8 *)a7 + 56);
  sub_2498D6084(a1, (uint64_t)v28, &qword_2696DFCB0);
  id v35 = (uint64_t *)(v53 + *(int *)(type metadata accessor for LayoutTemplate() + 20));
  uint64_t v36 = v35[1];
  uint64_t v48 = *v35;
  swift_bridgeObjectRetain();
  uint64_t v37 = LayoutTemplate.scaledZones(for:)(a10, a11);
  v63[0] = v29;
  v58[0] = v46;
  v58[1] = v45;
  v58[2] = v44;
  uint64_t v59 = v30;
  uint64_t v60 = v31;
  char v62 = (char)a4;
  __int16 v61 = v47;
  v57[0] = v32;
  v57[1] = v33;
  v54[0] = v43;
  v54[1] = v42;
  void v54[2] = v41;
  uint64_t v55 = v34;
  char v56 = v40;
  Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)((uint64_t)v28, v48, v36, v37, v63, (uint64_t *)v58, v52, v57, v51, a12, a13, a14, a15, (uint64_t)v54, v50);
  sub_249970D04(v53, (uint64_t (*)(void))type metadata accessor for LayoutTemplate);
  return sub_2498D60E8(v49, &qword_2696DFCB0);
}

uint64_t Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, double a12@<D2>, double a13@<D3>, uint64_t a14, uint64_t a15)
{
  uint64_t v43 = a6[1];
  uint64_t v44 = *a6;
  uint64_t v41 = a6[3];
  uint64_t v42 = a6[2];
  uint64_t v39 = a6[5];
  uint64_t v40 = a6[4];
  uint64_t v37 = a6[7];
  uint64_t v38 = a6[6];
  int v35 = *((unsigned __int8 *)a6 + 66);
  char v36 = *a5;
  int v34 = *((unsigned __int16 *)a6 + 32);
  uint64_t v45 = *a8;
  uint64_t v46 = a8[1];
  uint64_t v47 = *(void *)a14;
  uint64_t v48 = *(void *)(a14 + 8);
  uint64_t v49 = *(void *)(a14 + 16);
  uint64_t v50 = *(void *)(a14 + 24);
  uint64_t v51 = *(void *)(a14 + 32);
  uint64_t v52 = *(void *)(a14 + 40);
  uint64_t v53 = *(void *)(a14 + 48);
  char v55 = *(unsigned char *)(a14 + 56);
  char v21 = (int *)type metadata accessor for Layout();
  uint64_t v22 = (void *)(a9 + v21[7]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = a9 + v21[10];
  *(_OWORD *)(v23 + 32) = 0u;
  *(_OWORD *)(v23 + 48) = 0u;
  *(_OWORD *)uint64_t v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(unsigned char *)(v23 + 66) = 0;
  *(_WORD *)(v23 + 64) = 512;
  *(void *)(v23 + 72) = 2;
  uint64_t v24 = a9 + v21[12];
  *(_OWORD *)(v24 + 16) = 0u;
  *(_OWORD *)(v24 + 32) = 0u;
  *(_OWORD *)(v24 + 41) = 0u;
  *(_OWORD *)uint64_t v24 = 0u;
  *(void *)(v24 + 64) = 2;
  long long v25 = (void *)(a9 + v21[13]);
  *long long v25 = MEMORY[0x263F8EE78];
  v25[1] = 2;
  uint64_t v57 = a4;
  uint64_t v26 = sub_249967838(a4);
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_2498DA294(v27);
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v28 + 16);
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v26 + 16);
  swift_bridgeObjectRelease();
  if (v29 == v30)
  {
    sub_2498D6084(a1, a9, &qword_2696DFCB0);
    uint64_t v31 = (void *)(a9 + v21[5]);
    void *v31 = a2;
    v31[1] = a3;
    *(void *)(a9 + v21[6]) = v57;
    *(unsigned char *)(a9 + v21[9]) = v36;
    *(void *)(a9 + v21[8]) = a7;
    uint64_t v32 = (double *)(a9 + v21[11]);
    double *v32 = a10;
    v32[1] = a11;
    v32[2] = a12;
    v32[3] = a13;
    *(void *)uint64_t v23 = v44;
    *(void *)(v23 + 8) = v43;
    *(void *)(v23 + 16) = v42;
    *(void *)(v23 + 24) = v41;
    *(void *)(v23 + 32) = v40;
    *(void *)(v23 + 40) = v39;
    *(void *)(v23 + 48) = v38;
    *(void *)(v23 + 56) = v37;
    *(unsigned char *)(v23 + 66) = (v34 | (v35 << 16)) >> 16;
    *(_WORD *)(v23 + 64) = v34;
    swift_retain();
    swift_bridgeObjectRelease();
    *uint64_t v22 = v45;
    v22[1] = v46;
    sub_2499702C4(*(void *)v24, *(void *)(v24 + 8), *(void *)(v24 + 16), *(void *)(v24 + 24), *(void *)(v24 + 32), *(void *)(v24 + 40), *(void *)(v24 + 48), *(unsigned char *)(v24 + 56));
    *(void *)uint64_t v24 = v47;
    *(void *)(v24 + 8) = v48;
    *(void *)(v24 + 16) = v49;
    *(void *)(v24 + 24) = v50;
    *(void *)(v24 + 32) = v51;
    *(void *)(v24 + 40) = v52;
    *(void *)(v24 + 48) = v53;
    *(unsigned char *)(v24 + 56) = v55;
    swift_release();
    swift_bridgeObjectRelease();
    *long long v25 = a15;
    return sub_2498D60E8(a1, &qword_2696DFCB0);
  }
  else
  {
    sub_2499702C4(v47, v48, v49, v50, v51, v52, v53, v55);
    swift_bridgeObjectRelease();
    sub_249AEDA78();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
    sub_249967838(v57);
    MEMORY[0x24C5AE5B0]();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall Layout.resize(from:to:)(CGSize from, CGSize to)
{
  double height = to.height;
  double width = to.width;
  double v5 = from.height;
  double v6 = from.width;
  uint64_t v62 = type metadata accessor for Component();
  uint64_t v55 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  long long v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Zone();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v16 = *(int *)(type metadata accessor for Layout() + 24);
  uint64_t v17 = *(void *)(v2 + v16);
  int64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v50 = v16;
    uint64_t v51 = v2;
    double v19 = width / v6;
    uint64_t v64 = MEMORY[0x263F8EE78];
    double v20 = height / v5;
    swift_bridgeObjectRetain();
    sub_249A22150(0, v18, 0);
    uint64_t v21 = v17;
    uint64_t v22 = 0;
    unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v49 = v21;
    unint64_t v61 = v23;
    uint64_t v24 = *(void *)(v10 + 72);
    uint64_t v59 = v24;
    uint64_t v60 = v21 + v23;
    uint64_t v54 = v9;
    uint64_t v53 = v13;
    uint64_t v52 = v15;
    int64_t v56 = v18;
    do
    {
      sub_249970E0C(v60 + v24 * v22, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Zone);
      sub_249970E0C((uint64_t)v13, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Zone);
      long long v25 = (CGFloat *)&v15[*(int *)(v9 + 24)];
      CGFloat v26 = *v25;
      CGFloat v27 = v25[1];
      double v28 = v25[2];
      double v29 = v25[3];
      CGAffineTransformMakeScale(&v63, v19, v20);
      v65.origin.x = v26;
      v65.origin.y = v27;
      v65.size.double width = v28;
      v65.size.double height = v29;
      CGRect v66 = CGRectApplyAffineTransform(v65, &v63);
      *(CGRect *)long long v25 = v66;
      if (v66.size.width != v28 || v66.size.height != v29)
      {
        uint64_t v31 = *(int *)(v9 + 28);
        uint64_t v32 = *(void *)&v15[v31];
        int64_t v33 = *(void *)(v32 + 16);
        if (v33)
        {
          double v34 = v66.size.width;
          double v35 = v66.size.height;
          uint64_t v58 = *(int *)(v9 + 28);
          *(void *)&v63.CGFloat a = MEMORY[0x263F8EE78];
          swift_bridgeObjectRetain();
          sub_249A22110(0, v33, 0);
          CGFloat a = v63.a;
          unint64_t v37 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
          uint64_t v57 = v32;
          uint64_t v38 = v32 + v37;
          uint64_t v39 = *(void *)(v55 + 72);
          do
          {
            sub_249970E0C(v38, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Component);
            uint64_t v40 = (double *)&v8[*(int *)(v62 + 28)];
            double v41 = *v40;
            double v42 = v40[1];
            *uint64_t v40 = v34;
            v40[1] = v35;
            if (v34 != v41 || v35 != v42) {
              sub_2499BDAA0(v34 / v41, v35 / v42);
            }
            v63.CGFloat a = a;
            unint64_t v45 = *(void *)(*(void *)&a + 16);
            unint64_t v44 = *(void *)(*(void *)&a + 24);
            if (v45 >= v44 >> 1)
            {
              sub_249A22110(v44 > 1, v45 + 1, 1);
              CGFloat a = v63.a;
            }
            *(void *)(*(void *)&a + 16) = v45 + 1;
            sub_249970DA4((uint64_t)v8, *(void *)&a + v37 + v45 * v39, (uint64_t (*)(void))type metadata accessor for Component);
            v38 += v39;
            --v33;
          }
          while (v33);
          swift_bridgeObjectRelease_n();
          uint64_t v15 = v52;
          *(CGFloat *)&v52[v58] = a;
          uint64_t v9 = v54;
          uint64_t v13 = v53;
        }
        else
        {
          swift_bridgeObjectRelease();
          *(void *)&v15[v31] = MEMORY[0x263F8EE78];
        }
        int64_t v18 = v56;
      }
      sub_249970D04((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Zone);
      uint64_t v46 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249A22150(0, *(void *)(v46 + 16) + 1, 1);
        uint64_t v46 = v64;
      }
      unint64_t v48 = *(void *)(v46 + 16);
      unint64_t v47 = *(void *)(v46 + 24);
      if (v48 >= v47 >> 1)
      {
        sub_249A22150(v47 > 1, v48 + 1, 1);
        uint64_t v46 = v64;
      }
      ++v22;
      *(void *)(v46 + 16) = v48 + 1;
      uint64_t v24 = v59;
      sub_249970DA4((uint64_t)v15, v46 + v61 + v48 * v59, (uint64_t (*)(void))type metadata accessor for Zone);
    }
    while (v22 != v18);
    swift_bridgeObjectRelease();
    uint64_t v2 = v51;
    uint64_t v16 = v50;
  }
  else
  {
    uint64_t v46 = MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRelease();
  *(void *)(v2 + v16) = v46;
}

uint64_t sub_249969C74(char a1)
{
  uint64_t result = 25705;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x4E79616C70736964;
      break;
    case 2:
      uint64_t result = 0x73656E6F7ALL;
      break;
    case 3:
      uint64_t result = 0x745374756F79616CLL;
      break;
    case 4:
      uint64_t result = 0x756F72676B636162;
      break;
    case 5:
      uint64_t result = 0x795474756F79616CLL;
      break;
    case 6:
      uint64_t result = 0x49556D6574737973;
      break;
    case 7:
      uint64_t result = 0x6165724165666173;
      break;
    case 8:
      uint64_t result = 0x77656976657270;
      break;
    case 9:
      uint64_t result = 0x657061706C6C6177;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249969DE4()
{
  return sub_249969C74(*v0);
}

uint64_t sub_249969DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499730A0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249969E14(uint64_t a1)
{
  unint64_t v2 = sub_24997033C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249969E50(uint64_t a1)
{
  unint64_t v2 = sub_24997033C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Layout.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF460);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24997033C();
  sub_249AEE468();
  LOBYTE(v26) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  sub_2499704F8(&qword_2696E0CF0);
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v9 = (int *)type metadata accessor for Layout();
    LOBYTE(v26) = 1;
    sub_249AEDEB8();
    *(void *)&long long v26 = *(void *)(v3 + v9[6]);
    char v32 = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0CF8);
    sub_2499705C4(&qword_2696E0D00, &qword_2696E0D08);
    sub_249AEDF08();
    long long v26 = *(_OWORD *)(v3 + v9[7]);
    char v32 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB18);
    sub_2498B4CA0(&qword_2696DE490, &qword_2696DDB18);
    sub_249AEDEA8();
    *(void *)&long long v26 = *(void *)(v3 + v9[8]);
    char v32 = 4;
    sub_24988CC10();
    sub_249AEDF08();
    LOBYTE(v26) = *(unsigned char *)(v3 + v9[9]);
    char v32 = 5;
    sub_249970390();
    sub_249AEDF08();
    uint64_t v10 = (long long *)(v3 + v9[10]);
    __int16 v11 = *((_WORD *)v10 + 32);
    char v12 = *((unsigned char *)v10 + 66);
    uint64_t v13 = *((void *)v10 + 9);
    long long v14 = v10[1];
    long long v26 = *v10;
    long long v27 = v14;
    long long v15 = v10[3];
    long long v28 = v10[2];
    long long v29 = v15;
    BYTE2(v30) = v12;
    LOWORD(v30) = v11;
    uint64_t v31 = v13;
    char v32 = 6;
    if ((qword_249AFCC40[byte_2696E03A8] & v13) == 0 && (v11 & 0xFF00) != 0x200)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0D18);
      sub_2499703E4(&qword_2696E0D20, &qword_2696E0D18, (void (*)(void))sub_249970450);
      sub_249AEDF08();
    }
    uint64_t v16 = (long long *)(v3 + v9[11]);
    long long v17 = v16[1];
    long long v26 = *v16;
    long long v27 = v17;
    char v32 = 7;
    sub_2498F8D04();
    sub_249AEDF08();
    int64_t v18 = (long long *)(v3 + v9[12]);
    uint64_t v19 = *((void *)v18 + 6);
    char v20 = *((unsigned char *)v18 + 56);
    uint64_t v21 = *((void *)v18 + 8);
    long long v22 = v18[1];
    long long v26 = *v18;
    long long v27 = v22;
    long long v28 = v18[2];
    *(void *)&long long v29 = v19;
    BYTE8(v29) = v20;
    uint64_t v30 = v21;
    char v32 = 8;
    if ((qword_249AFCC40[byte_2696E03A8] & v21) == 0 && (void)v22)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0D30);
      sub_2499703E4(&qword_2696E0D38, &qword_2696E0D30, (void (*)(void))sub_2499704A4);
      sub_249AEDF08();
    }
    uint64_t v23 = *(void *)(v3 + v9[13] + 8);
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_2498DE7D4(v24, v23, 9);
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Layout.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = &v51.i8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0D48);
  uint64_t v57 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  long long v8 = &v51.i8[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Layout();
  uint64_t v10 = (int *)MEMORY[0x270FA5388](v9);
  char v12 = &v51.i8[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = &v12[v10[7]];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  unint64_t v61 = v10;
  uint64_t v62 = (int8x16_t *)v13;
  long long v14 = &v12[v10[10]];
  *((_OWORD *)v14 + 2) = 0u;
  *((_OWORD *)v14 + 3) = 0u;
  *(_OWORD *)long long v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  v14[66] = 0;
  *((_WORD *)v14 + 32) = 512;
  *((void *)v14 + 9) = 2;
  long long v15 = &v12[v10[12]];
  *(_OWORD *)(v15 + 41) = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *((_OWORD *)v15 + 2) = 0u;
  *(_OWORD *)long long v15 = 0u;
  *((void *)v15 + 8) = 2;
  uint64_t v16 = v10[13];
  CGAffineTransform v63 = v12;
  long long v17 = &v12[v16];
  *(void *)long long v17 = MEMORY[0x263F8EE78];
  *((void *)v17 + 1) = 2;
  uint64_t v60 = v17;
  uint64_t v18 = a1[3];
  uint64_t v58 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v18);
  sub_24997033C();
  uint64_t v19 = v59;
  sub_249AEE428();
  if (v19)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v58);
    swift_bridgeObjectRelease();
    sub_2499702C4(*(void *)v15, *((void *)v15 + 1), *((void *)v15 + 2), *((void *)v15 + 3), *((void *)v15 + 4), *((void *)v15 + 5), *((void *)v15 + 6), v15[56]);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v64.i8[0] = 0;
    sub_2499704F8(&qword_2696E0D50);
    sub_249AEDE08();
    uint64_t v20 = v6;
    uint64_t v21 = (uint64_t)v63;
    sub_249882788((uint64_t)v5, (uint64_t)v63, &qword_2696DFCB0);
    v64.i8[0] = 1;
    uint64_t v22 = sub_249AEDDB8();
    uint64_t v23 = v61;
    uint64_t v24 = (uint64_t *)(v21 + v61[5]);
    *uint64_t v24 = v22;
    v24[1] = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0CF8);
    char v70 = 2;
    sub_2499705C4(&qword_2696E0D58, &qword_2696E0D60);
    uint64_t v59 = v8;
    sub_249AEDE08();
    long long v26 = v62;
    *(void *)(v21 + v23[6]) = v64.i64[0];
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB18);
    char v70 = 3;
    sub_2498B4CA0(&qword_2696DE450, &qword_2696DDB18);
    uint64_t v55 = v20;
    sub_249AEDDA8();
    *long long v26 = v64;
    char v70 = 4;
    sub_24988CBBC();
    sub_249AEDE08();
    *(void *)(v21 + v23[8]) = v64.i64[0];
    char v70 = 5;
    sub_249970658();
    sub_249AEDE08();
    *(unsigned char *)(v21 + v23[9]) = v64.i8[0];
    char v70 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0D18);
    sub_2499703E4(&qword_2696E0D70, &qword_2696E0D18, (void (*)(void))sub_2499706AC);
    sub_249AEDDA8();
    int32x2_t v28 = vdup_n_s32((v68 & 0xFF00) == 768);
    v29.i64[0] = v28.u32[0];
    v29.i64[1] = v28.u32[1];
    int8x16_t v30 = (int8x16_t)vcgezq_s64(vshlq_n_s64(v29, 0x3FuLL));
    int8x16_t v31 = vandq_s8(v64, v30);
    int8x16_t v32 = vandq_s8(v65, v30);
    int8x16_t v33 = vandq_s8(v66, v30);
    int8x16_t v34 = vandq_s8(v67, v30);
    if ((v68 & 0xFF00) == 0x300) {
      int v35 = 512;
    }
    else {
      int v35 = v68 | (v69 << 16);
    }
    if (qword_2696DD758 != -1)
    {
      int8x16_t v54 = v31;
      int8x16_t v53 = v32;
      int8x16_t v52 = v33;
      int8x16_t v51 = v34;
      swift_once();
      int8x16_t v34 = v51;
      int8x16_t v33 = v52;
      int8x16_t v32 = v53;
      int8x16_t v31 = v54;
    }
    uint64_t v36 = qword_2696E2ED8;
    *(int8x16_t *)long long v14 = v31;
    *((int8x16_t *)v14 + 1) = v32;
    *((int8x16_t *)v14 + 2) = v33;
    *((int8x16_t *)v14 + 3) = v34;
    v14[66] = BYTE2(v35);
    *((_WORD *)v14 + 32) = v35;
    *((void *)v14 + 9) = v36;
    char v70 = 7;
    sub_2498F8E7C();
    sub_249AEDE08();
    unint64_t v37 = (int8x16_t *)(v21 + v23[11]);
    int8x16_t v38 = v65;
    *unint64_t v37 = v64;
    v37[1] = v38;
    char v70 = 8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0D30);
    sub_2499703E4(&qword_2696E0D80, &qword_2696E0D30, (void (*)(void))sub_249970700);
    sub_249AEDDA8();
    uint64_t v39 = v65.i64[0];
    if (v65.i64[0] == 1)
    {
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      uint64_t v40 = 0;
      uint64_t v41 = 0;
      uint64_t v39 = 0;
      uint64_t v42 = 0;
      v54.i64[0] = 0;
      uint64_t v43 = 0;
      uint64_t v44 = 0;
      char v45 = 0;
      v53.i64[0] = qword_2696E2ED8;
    }
    else
    {
      uint64_t v41 = v64.i64[1];
      uint64_t v40 = v64.i64[0];
      uint64_t v42 = v65.i64[1];
      uint64_t v44 = v67.i64[0];
      char v45 = v67.i8[8];
      uint64_t v43 = v66.i64[1];
      v54.i64[0] = v66.i64[0];
      sub_24997024C((void *)v64.i64[0], v64.i64[1], v65.i64[0], v65.i64[1], v66.i64[0], v66.i64[1], v67.i64[0], v67.i8[8]);
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      v53.i64[0] = qword_2696E2ED8;
      sub_2499707A8(v40, v41, v39, v42, v54.i64[0], v43, v44, v45);
    }
    *(void *)long long v15 = v40;
    *((void *)v15 + 1) = v41;
    *((void *)v15 + 2) = v39;
    *((void *)v15 + 3) = v42;
    *((void *)v15 + 4) = v54.i64[0];
    *((void *)v15 + 5) = v43;
    *((void *)v15 + 6) = v44;
    v15[56] = v45;
    *((void *)v15 + 8) = v53.i64[0];
    char v70 = 9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF458);
    sub_2499703E4(&qword_2696E0D90, &qword_2696DF458, (void (*)(void))sub_249970754);
    sub_249AEDDA8();
    uint64_t v46 = v64.i64[0];
    if (v64.i64[0])
    {
      uint64_t v47 = qword_2696DD758;
      swift_bridgeObjectRetain();
      if (v47 != -1) {
        swift_once();
      }
      uint64_t v48 = qword_2696E2ED8;
      swift_bridgeObjectRelease();
    }
    else
    {
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      uint64_t v48 = qword_2696E2ED8;
      uint64_t v46 = MEMORY[0x263F8EE78];
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v55);
    uint64_t v49 = (uint64_t *)v60;
    swift_bridgeObjectRelease();
    *uint64_t v49 = v46;
    v49[1] = v48;
    uint64_t v50 = (uint64_t)v63;
    sub_249970E0C((uint64_t)v63, v56, (uint64_t (*)(void))type metadata accessor for Layout);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v58);
    return sub_249970D04(v50, (uint64_t (*)(void))type metadata accessor for Layout);
  }
}

uint64_t sub_24996AF00@<X0>(uint64_t a1@<X8>)
{
  return sub_2498D6084(v1, a1, &qword_2696DFCB0);
}

uint64_t sub_24996AF28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Layout.init(from:)(a1, a2);
}

uint64_t sub_24996AF40(void *a1)
{
  return Layout.encode(to:)(a1);
}

uint64_t sub_24996AF58()
{
  return sub_249AED088() & 1;
}

uint64_t Layout.assets.getter()
{
  uint64_t v176 = *MEMORY[0x263EF8340];
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v139 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v145 = (int *)type metadata accessor for Layout();
  uint64_t v146 = v0;
  uint64_t v4 = *(void *)(v0 + v145[6]);
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)&v167[0] = MEMORY[0x263F8EE78];
  uint64_t v6 = *(void *)(v4 + 16);
  if (v6)
  {
    uint64_t v7 = *(void *)(type metadata accessor for Zone() - 8);
    uint64_t v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = *(void *)(v7 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v10 = swift_bridgeObjectRetain();
      sub_249894928(v10);
      v8 += v9;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v11 = *(void *)&v167[0];
  }
  else
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
  }
  *(void *)&v167[0] = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = *(void *)(type metadata accessor for Component() - 8);
    uint64_t v14 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v15 = *(void *)(v13 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v16 = swift_bridgeObjectRetain();
      sub_2498948FC(v16);
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease_n();
    uint64_t v17 = *(void *)&v167[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = MEMORY[0x263F8EE78];
  }
  uint64_t v159 = v5;
  uint64_t v18 = *(char **)(v17 + 16);
  if (v18)
  {
    uint64_t v158 = type metadata accessor for Slot();
    uint64_t v19 = v17;
    uint64_t v20 = v17
        + ((*(unsigned __int8 *)(*(void *)(v158 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v158 - 8) + 80));
    uint64_t v21 = *(void *)(*(void *)(v158 - 8) + 72);
    uint64_t v140 = &v160[8];
    uint64_t v142 = v19;
    swift_bridgeObjectRetain();
    uint64_t v143 = 0;
    uint64_t v22 = v21;
    long long v141 = xmmword_249AF0A70;
    long long v144 = xmmword_249AFA7A0;
    double v147 = v3;
    uint64_t v157 = v21;
    do
    {
      sub_2498D6084(v20 + *(int *)(v158 + 36), (uint64_t)v3, &qword_2696DE540);
      uint64_t v24 = type metadata accessor for Instrument();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v3, 1, v24) == 1)
      {
        sub_2498D60E8((uint64_t)v3, &qword_2696DE540);
        uint64_t v23 = (void *)MEMORY[0x263F8EE78];
      }
      else
      {
        sub_2498A4990((uint64_t)&v3[*(int *)(v24 + 20)], (uint64_t)v166);
        sub_2498A4990((uint64_t)v166, (uint64_t)v167);
        int v25 = sub_2498B8790((uint64_t)v167);
        if (v25 == 1)
        {
          uint64_t v46 = (void *)sub_2498B87AC((uint64_t)v167);
          sub_2499441A8(v46, v165);
          switch(sub_249944500((uint64_t)v165))
          {
            case 1u:
              uint64_t v47 = (void *)sub_24994451C((uint64_t)v165);
              uint64_t v48 = v47;
              uint64_t v49 = (void *)v47[20];
              if (!v49)
              {
                uint64_t v23 = (void *)MEMORY[0x263F8EE78];
                CGAffineTransform v63 = (char *)v47[27];
                if (!v63) {
                  break;
                }
LABEL_36:
                uint64_t v69 = v48[25];
                uint64_t v70 = v48[26];
                uint64_t v71 = v48[28];
                uint64_t v154 = v48[29];
                unint64_t i = v63;
                uint64_t v72 = v48[31];
                double v156 = (char *)v48[30];
                char v73 = v63;
                swift_bridgeObjectRetain_n();
                *(void *)&long long v153 = v73;
                uint64_t v74 = v71;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v23 = sub_2498AB278(0, v23[2] + 1, 1, v23);
                }
                unint64_t v76 = v23[2];
                unint64_t v75 = v23[3];
                *(void *)&long long v152 = v76 + 1;
                *((void *)&v152 + 1) = v76;
                if (v76 >= v75 >> 1) {
                  uint64_t v23 = sub_2498AB278((void *)(v75 > 1), v76 + 1, 1, v23);
                }
                uint64_t v163 = &type metadata for InstrumentFont;
                long long v164 = &protocol witness table for InstrumentFont;
                uint64_t v77 = swift_allocObject();
                *(void *)&long long v162 = v77;
                uint64_t v78 = v69;
                *(unsigned char *)(v77 + 16) = v69;
                uint64_t v80 = *((void *)&v152 + 1);
                uint64_t v79 = v153;
                *(void *)(v77 + 24) = v70;
                *(void *)(v77 + 32) = v79;
                *(void *)(v77 + 40) = v74;
                char v81 = BYTE1(v154);
                *(unsigned char *)(v77 + 48) = v154 & 1;
                *(unsigned char *)(v77 + 49) = v81 & 1;
                *(void *)(v77 + 56) = v156;
                *(void *)(v77 + 64) = v72;
                _OWORD v23[2] = v152;
                sub_249882BCC(&v162, (uint64_t)&v23[5 * v80 + 4]);
                sub_24989CF3C(v78, v70, i);
                uint64_t v3 = v147;
                uint64_t v22 = v157;
                break;
              }
              uint64_t v50 = (char *)v47[18];
              uint64_t v51 = v47[19];
              unint64_t i = (char *)v47[20];
              double v156 = v50;
              uint64_t v52 = v47[21];
              *(void *)&long long v153 = v47[22];
              uint64_t v53 = v47[24];
              uint64_t v154 = v47[23];
              id v54 = v49;
              uint64_t v55 = v53;
              swift_bridgeObjectRetain_n();
              id v56 = v54;
              uint64_t v23 = sub_2498AB278(0, 1, 1, MEMORY[0x263F8EE78]);
              unint64_t v58 = v23[2];
              unint64_t v57 = v23[3];
              *(void *)&long long v152 = v58 + 1;
              *((void *)&v152 + 1) = v58;
              if (v58 >= v57 >> 1) {
                uint64_t v23 = sub_2498AB278((void *)(v57 > 1), v58 + 1, 1, v23);
              }
              uint64_t v163 = &type metadata for InstrumentFont;
              long long v164 = &protocol witness table for InstrumentFont;
              uint64_t v59 = swift_allocObject();
              *(void *)&long long v162 = v59;
              uint64_t v60 = (uint64_t)v156;
              *(unsigned char *)(v59 + 16) = (_BYTE)v156;
              *(void *)&long long v151 = v51;
              *(void *)(v59 + 24) = v51;
              *(void *)(v59 + 32) = v56;
              *(void *)(v59 + 40) = v52;
              uint64_t v61 = *((void *)&v152 + 1);
              char v62 = BYTE1(v153);
              *(unsigned char *)(v59 + 48) = v153 & 1;
              *(unsigned char *)(v59 + 49) = v62 & 1;
              *(void *)(v59 + 56) = v154;
              *(void *)(v59 + 64) = v55;
              _OWORD v23[2] = v152;
              sub_249882BCC(&v162, (uint64_t)&v23[5 * v61 + 4]);
              sub_24989CF3C(v60, v151, i);
              uint64_t v3 = v147;
              uint64_t v22 = v157;
              CGAffineTransform v63 = (char *)v48[27];
              if (v63) {
                goto LABEL_36;
              }
              break;
            case 2u:
              uint64_t v64 = *(void *)(sub_24994451C((uint64_t)v165) + 8);
              swift_getKeyPath();
              sub_249970ED8((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
              swift_bridgeObjectRetain();
              swift_retain();
              uint64_t v65 = v143;
              uint64_t v23 = (void *)sub_249943E98(v64, (void (*)(long long *__return_ptr, long long *))sub_249945790);
              uint64_t v143 = v65;
              swift_bridgeObjectRelease();
              uint64_t v22 = v157;
              swift_release_n();
              sub_249970ED8((uint64_t)v46, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
              break;
            case 3u:
              uint64_t v66 = sub_24994451C((uint64_t)v165);
              sub_249944658(v66, (uint64_t)&v162);
              switch(sub_24994AD58((uint64_t)&v162))
              {
                case 2u:
                  uint64_t v91 = sub_24994AD64((uint64_t)&v162);
                  char v83 = *(unsigned char *)(v91 + 8);
                  uint64_t v84 = *(void *)(v91 + 16);
                  uint64_t v85 = *(void **)(v91 + 24);
                  uint64_t v86 = *(void *)(v91 + 32);
                  char v87 = *(unsigned char *)(v91 + 40);
                  char v88 = *(unsigned char *)(v91 + 41);
                  uint64_t v89 = *(char **)(v91 + 48);
                  uint64_t v90 = *(void *)(v91 + 56);
                  goto LABEL_46;
                case 4u:
                  uint64_t v92 = sub_24994AD64((uint64_t)&v162);
                  sub_249882788(v92 + 8, (uint64_t)v160, &qword_2696DDF10);
                  if (sub_24989CF7C((uint64_t)v160) == 1) {
                    goto LABEL_33;
                  }
                  memcpy(v161, v140, sizeof(v161));
                  break;
                case 5u:
                  uint64_t v93 = sub_24994AD64((uint64_t)&v162);
                  char v83 = *(unsigned char *)v93;
                  uint64_t v84 = *(void *)(v93 + 8);
                  uint64_t v85 = *(void **)(v93 + 16);
                  uint64_t v86 = *(void *)(v93 + 24);
                  char v87 = *(unsigned char *)(v93 + 32);
                  char v88 = *(unsigned char *)(v93 + 33);
                  uint64_t v89 = *(char **)(v93 + 40);
                  uint64_t v90 = *(void *)(v93 + 48);
                  goto LABEL_46;
                default:
                  uint64_t v67 = sub_24994AD64((uint64_t)&v162);
                  memcpy(v160, (const void *)(v67 + 8), 0x112uLL);
                  break;
              }
              uint64_t v23 = MeasurementLabelConfiguration.assets.getter();
              break;
            case 4u:
              uint64_t v68 = sub_24994451C((uint64_t)v165);
              sub_24994452C(v68, (uint64_t)&v162);
              switch(sub_249944588((uint64_t)&v162))
              {
                case 6u:
                  uint64_t v97 = sub_249944640((uint64_t)&v162);
                  sub_2499457D8(v97, (uint64_t)v160);
                  sub_249945834((uint64_t)v160);
                  sub_249945840((uint64_t)v160);
                  goto LABEL_33;
                case 8u:
                case 9u:
                  uint64_t v82 = sub_249944640((uint64_t)&v162);
                  char v83 = *(unsigned char *)(v82 + 24);
                  uint64_t v84 = *(void *)(v82 + 32);
                  uint64_t v85 = *(void **)(v82 + 40);
                  uint64_t v86 = *(void *)(v82 + 48);
                  char v87 = *(unsigned char *)(v82 + 56);
                  char v88 = *(unsigned char *)(v82 + 57);
                  uint64_t v89 = *(char **)(v82 + 64);
                  uint64_t v90 = *(void *)(v82 + 72);
LABEL_46:
                  double v156 = v89;
                  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
                  uint64_t v23 = (void *)swift_allocObject();
                  *((_OWORD *)v23 + 1) = v141;
                  v23[7] = &type metadata for InstrumentFont;
                  v23[8] = &protocol witness table for InstrumentFont;
                  uint64_t v94 = swift_allocObject();
                  v23[4] = v94;
                  *(unsigned char *)(v94 + 16) = v83;
                  *(void *)(v94 + 24) = v84;
                  *(void *)(v94 + 32) = v85;
                  long long v95 = v156;
                  uint64_t v22 = v157;
                  *(void *)(v94 + 40) = v86;
                  *(unsigned char *)(v94 + 48) = v87;
                  *(unsigned char *)(v94 + 49) = v88;
                  uint64_t v3 = v147;
                  *(void *)(v94 + 56) = v95;
                  *(void *)(v94 + 64) = v90;
                  id v96 = v85;
                  swift_bridgeObjectRetain();
                  break;
                default:
                  sub_249944640((uint64_t)&v162);
                  goto LABEL_33;
              }
              break;
            case 5u:
            case 6u:
              goto LABEL_33;
            default:
              sub_24994451C((uint64_t)v165);
              goto LABEL_33;
          }
        }
        else if (v25 == 2 {
               && (uint64_t v26 = sub_2498B87AC((uint64_t)v167),
        }
                   uint64_t v27 = *(void *)(v26 + 40),
                   (~*(_DWORD *)(v26 + 40) & 0xFELL) != 0))
        {
          int32x2_t v28 = *(char **)(v26 + 96);
          uint64_t v154 = *(void *)(v26 + 80);
          unint64_t i = v28;
          uint64_t v29 = *(void *)(v26 + 72);
          *((void *)&v152 + 1) = *(void *)(v26 + 64);
          *(void *)&long long v153 = v29;
          *(void *)&long long v152 = *(void *)(v26 + 56);
          uint64_t v30 = *(void *)(v26 + 48);
          int8x16_t v31 = *(void **)(v26 + 24);
          uint64_t v150 = *(void *)(v26 + 32);
          uint64_t v32 = v150;
          *(void *)&long long v151 = v30;
          uint64_t v33 = *(void *)(v26 + 16);
          double v148 = *(void **)(v26 + 8);
          int8x16_t v34 = v148;
          double v149 = v31;
          double v156 = v18;
          char v35 = *(unsigned char *)(v26 + 88);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
          uint64_t v23 = (void *)swift_allocObject();
          *((_OWORD *)v23 + 1) = v144;
          v23[7] = &type metadata for ImageAsset;
          v23[8] = &protocol witness table for ImageAsset;
          uint64_t v36 = swift_allocObject();
          v23[4] = v36;
          *(void *)(v36 + 16) = v34;
          *(void *)(v36 + 24) = v33;
          *(void *)(v36 + 32) = v31;
          *(void *)(v36 + 40) = v32;
          *(unsigned char *)(v36 + 48) = v27;
          *(void *)(v36 + 56) = v151;
          v23[12] = &type metadata for ImageAsset;
          v23[13] = &protocol witness table for ImageAsset;
          uint64_t v37 = swift_allocObject();
          v23[9] = v37;
          uint64_t v39 = *((void *)&v152 + 1);
          int8x16_t v38 = (void *)v152;
          *(void *)(v37 + 16) = v152;
          *(void *)(v37 + 24) = v39;
          uint64_t v40 = (void *)v153;
          uint64_t v42 = v154;
          uint64_t v41 = i;
          *(void *)(v37 + 32) = v153;
          *(void *)(v37 + 40) = v42;
          *(unsigned char *)(v37 + 48) = v35;
          *(void *)(v37 + 56) = v41;
          sub_24988247C(v148, v33, v149, v150, v27);
          uint64_t v43 = v39;
          uint64_t v3 = v147;
          uint64_t v44 = v40;
          char v45 = v35;
          uint64_t v18 = v156;
          uint64_t v22 = v157;
          sub_24988247C(v38, v43, v44, v42, v45);
        }
        else
        {
LABEL_33:
          uint64_t v23 = (void *)MEMORY[0x263F8EE78];
        }
        sub_249970D04((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for Instrument);
      }
      sub_2498944CC((uint64_t)v23);
      v20 += v22;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease_n();
    uint64_t v98 = v159;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v143 = 0;
    uint64_t v98 = MEMORY[0x263F8EE78];
  }
  v166[0] = v98;
  uint64_t v99 = v146 + v145[12];
  uint64_t v100 = *(void *)(v99 + 16);
  if (v100)
  {
    uint64_t v102 = *(void *)(v99 + 24);
    uint64_t v101 = *(void *)(v99 + 32);
    uint64_t v104 = *(void **)v99;
    uint64_t v103 = *(void *)(v99 + 8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
    uint64_t v105 = swift_allocObject();
    *(_OWORD *)(v105 + 16) = xmmword_249AF0A70;
    *(void *)(v105 + 56) = &type metadata for CAPackageAsset;
    *(void *)(v105 + 64) = &protocol witness table for CAPackageAsset;
    uint64_t v106 = (void *)swift_allocObject();
    *(void *)(v105 + 32) = v106;
    v106[2] = v104;
    v106[3] = v103;
    v106[4] = v100;
    v106[5] = v102;
    v106[6] = v101;
    id v107 = v104;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2498944CC(v105);
  }
  uint64_t v108 = *(void *)(*(void *)(v146 + v145[13]) + 16);
  if (v108)
  {
    uint64_t v109 = (char *)swift_bridgeObjectRetain();
    uint64_t v158 = v108 - 1;
    uint64_t v110 = 32;
    long long v153 = xmmword_249AF0A70;
    long long v151 = xmmword_249AFA7A0;
    for (unint64_t i = v109; ; v109 = i)
    {
      uint64_t v157 = v110;
      long long v111 = *(_OWORD *)&v109[v110 + 16];
      v167[0] = *(_OWORD *)&v109[v110];
      v167[1] = v111;
      long long v112 = *(_OWORD *)&v109[v110 + 32];
      long long v113 = *(_OWORD *)&v109[v110 + 48];
      long long v114 = *(_OWORD *)&v109[v110 + 80];
      long long v170 = *(_OWORD *)&v109[v110 + 64];
      long long v171 = v114;
      long long v168 = v112;
      long long v169 = v113;
      long long v115 = *(_OWORD *)&v109[v110 + 96];
      long long v116 = *(_OWORD *)&v109[v110 + 112];
      long long v117 = *(_OWORD *)&v109[v110 + 128];
      uint64_t v175 = *(void *)&v109[v110 + 144];
      long long v173 = v116;
      long long v174 = v117;
      long long v172 = v115;
      uint64_t v118 = *((void *)&v170 + 1);
      uint64_t v119 = v170;
      long long v120 = v114;
      long long v121 = v115;
      long long v122 = v116;
      uint64_t v123 = MEMORY[0x263F8EE78];
      switch((unint64_t)v116 >> 61)
      {
        case 1uLL:
          uint64_t v124 = (void *)v168;
          uint64_t v125 = *((void *)&v169 + 1);
          uint64_t v126 = (void *)v169;
          uint64_t v127 = *((void *)&v168 + 1);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
          uint64_t v123 = swift_allocObject();
          *(_OWORD *)(v123 + 16) = v153;
          *(void *)(v123 + 56) = &type metadata for ImageAsset;
          *(void *)(v123 + 64) = &protocol witness table for ImageAsset;
          uint64_t v128 = swift_allocObject();
          *(void *)(v123 + 32) = v128;
          *(void *)(v128 + 16) = v124;
          *(void *)(v128 + 24) = v127;
          *(void *)(v128 + 32) = v126;
          *(void *)(v128 + 40) = v125;
          *(unsigned char *)(v128 + 48) = v119;
          *(void *)(v128 + 56) = v118;
          sub_24988247C(v124, v127, v126, v125, v119);
          break;
        case 2uLL:
          uint64_t v129 = *((void *)&v168 + 1);
          double v156 = (char *)v168;
          uint64_t v130 = *((void *)&v169 + 1);
          uint64_t v131 = v169;
          sub_2499707B8((void *)v168, *((uint64_t *)&v168 + 1), (void *)v169, *((uint64_t *)&v169 + 1), v170, *((uint64_t *)&v170 + 1), (void *)v114, *((uint64_t *)&v114 + 1), (void *)v115, *((uint64_t *)&v115 + 1), v173);
          sub_24997096C((uint64_t)v167);
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
          uint64_t v123 = swift_allocObject();
          *(_OWORD *)(v123 + 16) = v153;
          *(void *)(v123 + 56) = &type metadata for CAPackageAsset;
          *(void *)(v123 + 64) = &protocol witness table for CAPackageAsset;
          uint64_t v132 = (void *)swift_allocObject();
          *(void *)(v123 + 32) = v132;
          v132[2] = v156;
          v132[3] = v129;
          v132[4] = v131;
          goto LABEL_59;
        case 4uLL:
          double v156 = (char *)v168;
          long long v152 = v169;
          uint64_t v154 = *((void *)&v168 + 1);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
          uint64_t v123 = swift_allocObject();
          *(_OWORD *)(v123 + 16) = v151;
          *(void *)(v123 + 56) = &type metadata for ImageAsset;
          *(void *)(v123 + 64) = &protocol witness table for ImageAsset;
          uint64_t v133 = swift_allocObject();
          *(void *)(v123 + 32) = v133;
          uint64_t v134 = v154;
          *(void *)(v133 + 16) = v156;
          *(void *)(v133 + 24) = v134;
          uint64_t v135 = *((void *)&v152 + 1);
          *(void *)(v133 + 32) = v152;
          *(void *)(v133 + 40) = v135;
          *(unsigned char *)(v133 + 48) = v119;
          *(void *)(v133 + 56) = v118;
          *(void *)(v123 + 96) = &type metadata for ImageAsset;
          *(void *)(v123 + 104) = &protocol witness table for ImageAsset;
          uint64_t v136 = swift_allocObject();
          *(void *)(v123 + 72) = v136;
          *(_OWORD *)(v136 + 16) = v120;
          *(_OWORD *)(v136 + 32) = v121;
          *(unsigned char *)(v136 + 48) = v122;
          *(void *)(v136 + 56) = *((void *)&v122 + 1);
          sub_24988247C(v156, v154, (void *)v152, *((uint64_t *)&v152 + 1), v119);
          sub_24988247C((void *)v120, *((uint64_t *)&v120 + 1), (void *)v121, *((uint64_t *)&v121 + 1), v122);
          break;
        case 5uLL:
          uint64_t v154 = *((void *)&v168 + 1);
          double v156 = (char *)v168;
          uint64_t v130 = *((void *)&v169 + 1);
          uint64_t v137 = v169;
          sub_2499707B8((void *)v168, *((uint64_t *)&v168 + 1), (void *)v169, *((uint64_t *)&v169 + 1), v170, *((uint64_t *)&v170 + 1), (void *)v114, *((uint64_t *)&v114 + 1), (void *)v115, *((uint64_t *)&v115 + 1), v173);
          sub_24997096C((uint64_t)v167);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
          uint64_t v123 = swift_allocObject();
          *(_OWORD *)(v123 + 16) = v153;
          *(void *)(v123 + 56) = &type metadata for CAPackageAsset;
          *(void *)(v123 + 64) = &protocol witness table for CAPackageAsset;
          uint64_t v132 = (void *)swift_allocObject();
          *(void *)(v123 + 32) = v132;
          v132[2] = v156;
          v132[3] = v154;
          v132[4] = v137;
LABEL_59:
          v132[5] = v130;
          v132[6] = v119;
          sub_249970A70((uint64_t)v167);
          break;
        default:
          break;
      }
      sub_2498944CC(v123);
      if (!v158) {
        break;
      }
      --v158;
      uint64_t v110 = v157 + 152;
    }
    swift_bridgeObjectRelease();
  }
  return v166[0];
}

uint64_t Layout.Preview.assets.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_249AF0A70;
  *(void *)(v6 + 56) = &type metadata for CAPackageAsset;
  *(void *)(v6 + 64) = &protocol witness table for CAPackageAsset;
  uint64_t v7 = (void *)swift_allocObject();
  *(void *)(v6 + 32) = v7;
  _OWORD v7[2] = v1;
  v7[3] = v2;
  v7[4] = v3;
  v7[5] = v4;
  v7[6] = v5;
  id v8 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

void Layout.restoreAssets(from:)(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = (void *)MEMORY[0x270FA5388](a1);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v314 = (uint64_t)&v284 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v284 - v8;
  uint64_t v311 = type metadata accessor for Instrument();
  v296 = *(char **)(v311 - 8);
  MEMORY[0x270FA5388](v311);
  uint64_t v295 = (char *)&v284 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void (*)(uint64_t *, uint64_t))Layout.preview.modify();
  uint64_t v13 = *(void *)(v12 + 16);
  unint64_t v307 = v4;
  if (v13)
  {
    Layout.Preview.restoreAssets(from:)(v4);
    if (v2)
    {
      v11(&v335, 1);
      return;
    }
    uint64_t v305 = 0;
    v11(&v335, 0);
  }
  else
  {
    uint64_t v305 = v2;
    v11(&v335, 0);
  }
  uint64_t v294 = type metadata accessor for Layout();
  uint64_t v14 = (char *)*(int *)(v294 + 52);
  uint64_t v15 = *(void **)&v14[v1];
  uint64_t v16 = v15[2];
  uint64_t v17 = (uint64_t)v295;
  uint64_t v297 = v3;
  unint64_t v309 = v9;
  uint64_t v18 = v311;
  uint64_t v315 = v16;
  if (v16)
  {
    unint64_t v19 = 0;
    uint64_t v20 = 80;
    long long v300 = xmmword_249AFC210;
    long long v299 = xmmword_249AFC200;
    long long v298 = xmmword_249AFC1F0;
    v306 = v14;
    while (1)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v14[v3] = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v15 = sub_249970020(v15);
        *(void *)&v14[v3] = v15;
      }
      if (v19 >= v15[2])
      {
        __break(1u);
LABEL_140:
        __break(1u);
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
        JUMPOUT(0x24996DE5CLL);
      }
      unint64_t v339 = v19 + 1;
      uint64_t v324 = v20;
      int8x16_t v38 = (char *)v15 + v20;
      uint64_t v39 = *(int **)((char *)v15 + v20 - 16);
      unint64_t v40 = *(void *)((char *)v15 + v20 - 8);
      uint64_t v41 = *(void (***)(uint64_t, void, uint64_t, uint64_t))v38;
      unint64_t v323 = *((void *)v38 + 1);
      uint64_t v43 = *((void *)v38 + 2);
      uint64_t v42 = *((void *)v38 + 3);
      uint64_t v44 = (void *)*((void *)v38 + 4);
      uint64_t v322 = *((void *)v38 + 5);
      char v45 = (unsigned int (**)(char *, uint64_t, uint64_t))*((void *)v38 + 6);
      uint64_t v46 = *((void *)v38 + 7);
      unint64_t v47 = *((void *)v38 + 8);
      uint64_t v48 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))*((void *)v38 + 9);
      switch(v47 >> 61)
      {
        case 1uLL:
          v310 = (int *)*((void *)v38 + 8);
          uint64_t v312 = v48;
          v313 = v45;
          uint64_t v318 = v44;
          uint64_t v49 = v42;
          uint64_t v50 = v43;
          uint64_t v51 = v307[3];
          uint64_t v52 = v307[4];
          uint64_t v316 = v46;
          unint64_t v317 = v51;
          uint64_t v53 = (char *)v39;
          id v54 = __swift_project_boxed_opaque_existential_2Tm(v307, v51);
          unint64_t v319 = v49;
          unint64_t v320 = v40;
          uint64_t v335 = v49;
          id v303 = *(void **)(v52 + 24);
          unint64_t v304 = (unint64_t)v54;
          unint64_t v321 = v53;
          uint64_t v55 = v40;
          unint64_t v308 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v41;
          unsigned __int8 v56 = v50;
          sub_24988247C(v53, v55, v41, v323, v50);
          if (((uint64_t (*)(uint64_t *, unint64_t, uint64_t))v303)(&v335, v317, v52))
          {
            unint64_t v317 = v50;
            if ((char)v50 < 0)
            {
              uint64_t v9 = v321;
              uint64_t v335 = (uint64_t)v321;
              uint64_t v336 = v320;
              long long v115 = v308;
              uint64_t v337 = (unsigned int (**)(char *, uint64_t, uint64_t))v308;
              unint64_t v116 = v323;
              unint64_t v338 = v323;
              long long v117 = v321;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v118 = v305;
              ImageAsset.LocalizedImage.restore(from:)(v307);
              uint64_t v305 = v118;
              uint64_t v17 = (uint64_t)v295;
              uint64_t v18 = v311;
              if (v118) {
                goto LABEL_133;
              }
              uint64_t v68 = v319;
              sub_249970B30(v9, v320, v115, v116, v317, v319, v318, v322, v313, v316, (unint64_t)v310);
              uint64_t v70 = (int *)v335;
              uint64_t v60 = v336;
              unsigned __int8 v56 = 0x80;
              uint64_t v69 = v337;
              unint64_t v66 = v338;
            }
            else
            {
              uint64_t v58 = v307[3];
              id v303 = (void *)v307[4];
              unint64_t v57 = v303;
              __swift_project_boxed_opaque_existential_2Tm(v307, v58);
              LOBYTE(v335) = 0;
              unint64_t v304 = v57[1];
              uint64_t v59 = v308;
              uint64_t v60 = v320;
              swift_bridgeObjectRetain();
              uint64_t v61 = v321;
              uint64_t v62 = v305;
              uint64_t v63 = ((uint64_t (*)(void))v304)();
              uint64_t v305 = v62;
              if (v62)
              {
                uint64_t v263 = v316;
                uint64_t v264 = v313;
                uint64_t v265 = v61;
                uint64_t v266 = v308;
                uint64_t v268 = v322;
                uint64_t v267 = v323;
                uint64_t v269 = v318;
                uint64_t v270 = v319;
                sub_249970B30(v265, v60, v308, v323, v317, v319, v318, v322, v313, v316, (unint64_t)v310);
                sub_249970B30(v321, v60, v266, v267, v317, v270, v269, v268, v264, v263, (unint64_t)v310);
                return;
              }
              uint64_t v64 = (unsigned int (**)(char *, uint64_t, uint64_t))v63;

              uint64_t v65 = v61;
              unint64_t v66 = v323;
              char v67 = v317;
              uint64_t v68 = v319;
              sub_249970B30(v65, v60, v308, v323, v317, v319, v318, v322, v313, v316, (unint64_t)v310);
              unsigned __int8 v56 = v67 & 1;
              uint64_t v69 = v64;
              uint64_t v17 = (uint64_t)v295;
              uint64_t v18 = v311;
              uint64_t v70 = (int *)v321;
            }
          }
          else
          {
            uint64_t v17 = (uint64_t)v295;
            uint64_t v18 = v311;
            unint64_t v66 = v323;
            uint64_t v60 = v320;
            uint64_t v70 = (int *)v321;
            uint64_t v68 = v319;
            uint64_t v69 = (unsigned int (**)(char *, uint64_t, uint64_t))v308;
          }
          uint64_t v119 = (void *)*((void *)v38 - 2);
          uint64_t v120 = *((void *)v38 - 1);
          long long v121 = *(void **)v38;
          uint64_t v122 = *((void *)v38 + 1);
          uint64_t v123 = *((void *)v38 + 2);
          uint64_t v124 = *((void *)v38 + 3);
          uint64_t v125 = (void *)*((void *)v38 + 4);
          uint64_t v126 = *((void *)v38 + 5);
          uint64_t v127 = (void *)*((void *)v38 + 6);
          uint64_t v128 = *((void *)v38 + 7);
          unint64_t v129 = *((void *)v38 + 8);
          *((void *)v38 - 2) = v70;
          *((void *)v38 - 1) = v60;
          *(void *)int8x16_t v38 = v69;
          *((void *)v38 + 1) = v66;
          *((void *)v38 + 2) = v56;
          *((void *)v38 + 3) = v68;
          *((_OWORD *)v38 + 2) = 0u;
          *((_OWORD *)v38 + 3) = 0u;
          *((_OWORD *)v38 + 4) = v300;
          sub_249970B30(v119, v120, v121, v122, v123, v124, v125, v126, v127, v128, v129);
          goto LABEL_12;
        case 2uLL:
          uint64_t v318 = v44;
          unint64_t v319 = v42;
          unint64_t v320 = v40;
          uint64_t v71 = v307;
          uint64_t v72 = v307[4];
          uint64_t v316 = v307[3];
          uint64_t v73 = v43;
          uint64_t v74 = (char *)v39;
          unint64_t v75 = (unsigned int (**)(char *, uint64_t, uint64_t))__swift_project_boxed_opaque_existential_2Tm(v307, v316);
          uint64_t v335 = 1;
          uint64_t v312 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v72 + 24);
          v313 = v75;
          swift_bridgeObjectRetain();
          unint64_t v321 = v74;
          v310 = v74;
          swift_bridgeObjectRetain();
          unint64_t v317 = v73;
          swift_bridgeObjectRetain();
          if ((v312(&v335, v316, v72) & 1) == 0) {
            goto LABEL_9;
          }
          uint64_t v76 = v71[3];
          uint64_t v77 = v71[4];
          __swift_project_boxed_opaque_existential_2Tm(v71, v76);
          LOBYTE(v335) = 0;
          uint64_t v78 = v305;
          uint64_t v79 = (char *)(*(uint64_t (**)(unint64_t, uint64_t (*)(uint64_t *, uint64_t, uint64_t), uint64_t *, uint64_t, uint64_t))(v77 + 8))(v320, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v41, &v335, v76, v77);
          if (v78)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            return;
          }
          unint64_t v321 = v79;
          uint64_t v305 = 0;

LABEL_9:
          uint64_t v21 = v322;
          uint64_t v22 = v319;
          uint64_t v23 = (void *)*((void *)v38 - 2);
          uint64_t v24 = *((void *)v38 - 1);
          int v25 = *(void **)v38;
          uint64_t v26 = *((void *)v38 + 1);
          uint64_t v27 = *((void *)v38 + 2);
          uint64_t v28 = *((void *)v38 + 3);
          uint64_t v29 = (void *)*((void *)v38 + 4);
          uint64_t v30 = *((void *)v38 + 5);
          int8x16_t v31 = (void *)*((void *)v38 + 6);
          uint64_t v32 = *((void *)v38 + 7);
          unint64_t v33 = *((void *)v38 + 8);
          unint64_t v34 = v320;
          *((void *)v38 - 2) = v321;
          *((void *)v38 - 1) = v34;
          unint64_t v35 = v323;
          *(void *)int8x16_t v38 = v41;
          *((void *)v38 + 1) = v35;
          *((void *)v38 + 2) = v317;
          *((void *)v38 + 3) = v22;
          *((void *)v38 + 4) = v318;
          *((void *)v38 + 5) = v21;
          *((void *)v38 + 6) = 0;
          *((void *)v38 + 7) = 0;
          long long v36 = v299;
          goto LABEL_10;
        case 4uLL:
          uint64_t v312 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))*((void *)v38 + 9);
          unint64_t v304 = (char)v43;
          LODWORD(v301) = (char)v47;
          uint64_t v80 = v42;
          uint64_t v316 = v46;
          unint64_t v317 = v43;
          uint64_t v81 = v307[4];
          unint64_t v308 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v307[3];
          uint64_t v82 = (char *)v39;
          char v83 = v44;
          uint64_t v84 = v45;
          v310 = (int *)v47;
          uint64_t v85 = __swift_project_boxed_opaque_existential_2Tm(v307, (uint64_t)v308);
          unint64_t v319 = v80;
          unint64_t v320 = v40;
          uint64_t v335 = v80;
          unint64_t v302 = *(uint64_t (**)(uint64_t *, void (**)(uint64_t, void, uint64_t, uint64_t), uint64_t))(v81 + 24);
          id v303 = v85;
          unint64_t v321 = v82;
          uint64_t v86 = v82;
          uint64_t v87 = v40;
          char v88 = (unsigned int (**)(char *, uint64_t, uint64_t))v41;
          uint64_t v89 = v323;
          sub_24988247C(v86, v87, v41, v323, v317);
          uint64_t v318 = v83;
          v313 = v84;
          sub_24988247C(v83, v322, v84, v316, (char)v310);
          if (v302(&v335, (void (**)(uint64_t, void, uint64_t, uint64_t))v308, v81))
          {
            char v90 = v304;
            if ((v304 & 0x80000000) != 0)
            {
              uint64_t v130 = v320;
              uint64_t v131 = v321;
              uint64_t v335 = (uint64_t)v321;
              uint64_t v336 = v320;
              uint64_t v337 = (unsigned int (**)(char *, uint64_t, uint64_t))v41;
              unint64_t v338 = v89;
              uint64_t v132 = v321;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v133 = v305;
              ImageAsset.LocalizedImage.restore(from:)(v307);
              uint64_t v305 = v133;
              uint64_t v17 = (uint64_t)v295;
              if (v133)
              {
                uint64_t v282 = (void *)v335;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                sub_2498826E4(v318, v322, v313, v316, v301);
                uint64_t v273 = v131;
                uint64_t v274 = v130;
                uint64_t v275 = v41;
                uint64_t v276 = v89;
                char v277 = v90;
                goto LABEL_137;
              }
              sub_2498826E4(v131, v130, v41, v89, v90);
              unint64_t v320 = v336;
              unint64_t v321 = (char *)v335;
              uint64_t v101 = 128;
              char v88 = v337;
              uint64_t v89 = v338;
            }
            else
            {
              uint64_t v91 = v307[4];
              unint64_t v317 = v307[3];
              __swift_project_boxed_opaque_existential_2Tm(v307, v317);
              LOBYTE(v335) = 0;
              uint64_t v92 = v41;
              unint64_t v308 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v91 + 8);
              uint64_t v93 = v41;
              uint64_t v94 = v320;
              swift_bridgeObjectRetain();
              long long v95 = v321;
              uint64_t v96 = v305;
              uint64_t v97 = ((uint64_t (*)(char *, uint64_t, uint64_t *, unint64_t, uint64_t))v308)(v321, v94, &v335, v317, v91);
              uint64_t v305 = v96;
              if (v96)
              {
                unint64_t v271 = v323;
                char v272 = v304;
                sub_2498826E4(v95, v94, v92, v323, v304);
                sub_2498826E4(v318, v322, v313, v316, v301);
                uint64_t v273 = v95;
                uint64_t v274 = v94;
                uint64_t v275 = v92;
                uint64_t v276 = v271;
                char v277 = v272;
                goto LABEL_137;
              }
              uint64_t v98 = (unsigned int (**)(char *, uint64_t, uint64_t))v97;

              uint64_t v99 = v92;
              uint64_t v89 = v323;
              char v100 = v304;
              sub_2498826E4(v95, v94, v99, v323, v304);
              uint64_t v101 = v100 & 1;
              char v88 = v98;
              uint64_t v17 = (uint64_t)v295;
            }
          }
          else
          {
            uint64_t v17 = (uint64_t)v295;
            uint64_t v101 = v304;
          }
          uint64_t v134 = v307[3];
          uint64_t v135 = v307[4];
          __swift_project_boxed_opaque_existential_2Tm(v307, v134);
          uint64_t v335 = (uint64_t)v312;
          char v136 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v135 + 24))(&v335, v134, v135);
          unint64_t v308 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v88;
          if (v136)
          {
            unint64_t v304 = v101;
            if ((v301 & 0x80000000) != 0)
            {
              long long v151 = v318;
              uint64_t v335 = (uint64_t)v318;
              uint64_t v152 = v322;
              uint64_t v336 = v322;
              long long v153 = v313;
              uint64_t v337 = v313;
              uint64_t v154 = v316;
              unint64_t v338 = v316;
              id v155 = v318;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v156 = v305;
              ImageAsset.LocalizedImage.restore(from:)(v307);
              uint64_t v305 = v156;
              if (v156)
              {
                os_log_t v283 = (void *)v335;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                sub_2498826E4(v151, v152, v153, v154, v301);
                uint64_t v274 = v320;
                uint64_t v273 = v321;
                uint64_t v275 = v308;
                uint64_t v276 = v89;
LABEL_136:
                char v277 = v304;
LABEL_137:
                sub_2498826E4(v273, v274, v275, v276, v277);
                return;
              }
              sub_2498826E4(v151, v152, v153, v154, v301);
              long long v141 = (void *)v335;
              uint64_t v148 = v336;
              unsigned __int8 v147 = 0x80;
              uint64_t v144 = (uint64_t)v337;
              uint64_t v146 = v338;
            }
            else
            {
              unint64_t v323 = v89;
              uint64_t v137 = v307[4];
              unint64_t v317 = v307[3];
              __swift_project_boxed_opaque_existential_2Tm(v307, v317);
              LOBYTE(v335) = 0;
              id v303 = *(void **)(v137 + 8);
              uint64_t v138 = v313;
              uint64_t v139 = v313;
              uint64_t v140 = v322;
              swift_bridgeObjectRetain();
              long long v141 = v318;
              uint64_t v142 = v305;
              uint64_t v143 = ((uint64_t (*)(void *, uint64_t, uint64_t *, unint64_t, uint64_t))v303)(v318, v140, &v335, v317, v137);
              uint64_t v305 = v142;
              if (v142)
              {
                uint64_t v278 = v316;
                char v279 = v301;
                sub_2498826E4(v141, v140, v138, v316, v301);
                sub_2498826E4(v141, v140, v138, v278, v279);
                uint64_t v274 = v320;
                uint64_t v273 = v321;
                uint64_t v275 = v308;
                uint64_t v276 = v323;
                goto LABEL_136;
              }
              uint64_t v144 = v143;

              uint64_t v145 = v316;
              sub_2498826E4(v141, v140, v138, v316, v301);
              uint64_t v146 = v145;
              unsigned __int8 v147 = v310 & 1;
              uint64_t v17 = (uint64_t)v295;
              uint64_t v148 = v140;
              uint64_t v89 = v323;
            }
            unint64_t v149 = v320;
            uint64_t v150 = v321;
            LOBYTE(v101) = v304;
          }
          else
          {
            unint64_t v149 = v320;
            uint64_t v150 = v321;
            uint64_t v148 = v322;
            long long v141 = v318;
            uint64_t v146 = v316;
            uint64_t v144 = (uint64_t)v313;
            unsigned __int8 v147 = v310;
          }
          unint64_t v157 = v147 | 0x8000000000000000;
          uint64_t v158 = (void *)*((void *)v38 - 2);
          uint64_t v159 = *((void *)v38 - 1);
          uint64_t v160 = *(void **)v38;
          uint64_t v161 = *((void *)v38 + 1);
          uint64_t v162 = *((void *)v38 + 2);
          uint64_t v163 = *((void *)v38 + 3);
          long long v164 = (void *)*((void *)v38 + 4);
          uint64_t v165 = *((void *)v38 + 5);
          uint64_t v166 = (void *)*((void *)v38 + 6);
          uint64_t v167 = *((void *)v38 + 7);
          unint64_t v168 = *((void *)v38 + 8);
          *((void *)v38 - 2) = v150;
          *((void *)v38 - 1) = v149;
          *(void *)int8x16_t v38 = v308;
          *((void *)v38 + 1) = v89;
          *((void *)v38 + 2) = v101;
          *((void *)v38 + 3) = v319;
          *((void *)v38 + 4) = v141;
          *((void *)v38 + 5) = v148;
          *((void *)v38 + 6) = v144;
          *((void *)v38 + 7) = v146;
          *((void *)v38 + 8) = v157;
          *((void *)v38 + 9) = v312;
          sub_249970B30(v158, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168);
LABEL_11:
          uint64_t v18 = v311;
LABEL_12:
          uint64_t v14 = v306;
LABEL_13:
          uint64_t v3 = v297;
          uint64_t v15 = *(void **)&v14[v297];
          uint64_t v20 = v324 + 152;
          unint64_t v19 = v339;
          uint64_t v9 = v309;
          if (v315 == v339) {
            goto LABEL_50;
          }
          break;
        case 5uLL:
          uint64_t v318 = v44;
          unint64_t v319 = v42;
          unint64_t v320 = v40;
          uint64_t v102 = v307;
          uint64_t v103 = v307[4];
          uint64_t v312 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v307[3];
          v313 = v45;
          uint64_t v104 = v43;
          uint64_t v105 = (char *)v39;
          uint64_t v106 = v46;
          v310 = (int *)__swift_project_boxed_opaque_existential_2Tm(v307, (uint64_t)v312);
          uint64_t v335 = 1;
          unint64_t v308 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v103 + 24);
          uint64_t v316 = v106;
          swift_bridgeObjectRetain();
          unint64_t v321 = v105;
          unint64_t v304 = v105;
          swift_bridgeObjectRetain();
          unint64_t v317 = v104;
          swift_bridgeObjectRetain();
          uint64_t v107 = v322;
          swift_bridgeObjectRetain();
          if (v308(&v335, (uint64_t)v312, v103))
          {
            uint64_t v108 = v102[3];
            uint64_t v109 = v102[4];
            __swift_project_boxed_opaque_existential_2Tm(v102, v108);
            LOBYTE(v335) = 0;
            uint64_t v110 = v305;
            long long v111 = (char *)(*(uint64_t (**)(unint64_t, uint64_t (*)(uint64_t *, uint64_t, uint64_t), uint64_t *, uint64_t, uint64_t))(v109 + 8))(v320, (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v41, &v335, v108, v109);
            unint64_t v112 = v323;
            if (v110)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              return;
            }
            unint64_t v321 = v111;
            uint64_t v305 = 0;
          }
          else
          {
            unint64_t v112 = v323;
          }
          uint64_t v113 = v319;
          uint64_t v23 = (void *)*((void *)v38 - 2);
          uint64_t v24 = *((void *)v38 - 1);
          int v25 = *(void **)v38;
          uint64_t v26 = *((void *)v38 + 1);
          uint64_t v27 = *((void *)v38 + 2);
          uint64_t v28 = *((void *)v38 + 3);
          uint64_t v29 = (void *)*((void *)v38 + 4);
          uint64_t v30 = *((void *)v38 + 5);
          int8x16_t v31 = (void *)*((void *)v38 + 6);
          uint64_t v32 = *((void *)v38 + 7);
          unint64_t v33 = *((void *)v38 + 8);
          unint64_t v114 = v320;
          *((void *)v38 - 2) = v321;
          *((void *)v38 - 1) = v114;
          *(void *)int8x16_t v38 = v41;
          *((void *)v38 + 1) = v112;
          *((void *)v38 + 2) = v317;
          *((void *)v38 + 3) = v113;
          *((void *)v38 + 4) = v318;
          *((void *)v38 + 5) = v107;
          *((void *)v38 + 6) = v313;
          *((void *)v38 + 7) = v316;
          long long v36 = v298;
LABEL_10:
          *((_OWORD *)v38 + 4) = v36;
          sub_249970B30(v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);
          uint64_t v17 = (uint64_t)v295;
          goto LABEL_11;
        default:
          goto LABEL_13;
      }
    }
  }
LABEL_50:
  long long v115 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))*(int *)(v294 + 24);
  unint64_t v285 = *(void **)(*(void *)((char *)v115 + v3) + 16);
  if (!v285) {
    return;
  }
  unint64_t v169 = 0;
  uint64_t v312 = v115;
  v313 = (unsigned int (**)(char *, uint64_t, uint64_t))(v296 + 48);
  unint64_t v308 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))(v296 + 56);
  while (1)
  {
    uint64_t v170 = *(void *)((char *)v115 + v3);
    if (v169 >= *(void *)(v170 + 16)) {
      goto LABEL_142;
    }
    uint64_t v171 = type metadata accessor for Zone();
    uint64_t v172 = *(void *)(v171 - 8);
    unint64_t v323 = (*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80);
    uint64_t v322 = *(void *)(v172 + 72) * v169;
    uint64_t v324 = v171;
    uint64_t v289 = *(void *)(*(void *)(v170 + v323 + v322 + *(int *)(v171 + 28)) + 16);
    if (v289) {
      break;
    }
LABEL_112:
    if ((void *)++v169 == v285) {
      return;
    }
  }
  unint64_t v173 = 0;
  uint64_t v318 = (void *)v169;
  while (1)
  {
    uint64_t v174 = *(void *)((char *)v115 + v3);
    if (v169 >= *(void *)(v174 + 16)) {
      goto LABEL_140;
    }
    uint64_t v175 = *(void *)(v174 + v323 + v322 + *(int *)(v324 + 28));
    if (v173 >= *(void *)(v175 + 16)) {
      goto LABEL_141;
    }
    unint64_t v339 = v173;
    uint64_t v176 = (int *)type metadata accessor for Component();
    uint64_t v177 = *((void *)v176 - 1);
    unint64_t v320 = (*(unsigned __int8 *)(v177 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v177 + 80);
    unint64_t v178 = v339;
    unint64_t v319 = *(void *)(v177 + 72) * v339;
    unint64_t v321 = (char *)v176;
    uint64_t v315 = *(void *)(*(void *)(v175 + v320 + v319 + v176[8]) + 16);
    if (v315) {
      break;
    }
LABEL_55:
    unint64_t v173 = v178 + 1;
    if (v173 == v289) {
      goto LABEL_112;
    }
  }
  unint64_t v179 = 0;
  while (1)
  {
    uint64_t v180 = *(void *)((char *)v115 + v3);
    if (v169 >= *(void *)(v180 + 16))
    {
      __break(1u);
LABEL_119:
      __break(1u);
LABEL_120:
      __break(1u);
LABEL_121:
      uint64_t v261 = v330;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v257 = v300;
      char v255 = v294;
      uint64_t v17 = (uint64_t)v295;
      uint64_t v254 = v18;
      uint64_t v218 = (void *)v298;
      uint64_t v258 = v301;
      uint64_t v217 = (uint64_t (*)(void, void, void))v302;
      int v259 = v306;
      uint64_t v256 = v303;
      goto LABEL_123;
    }
    uint64_t v181 = *(void *)(v180 + v323 + v322 + *(int *)(v324 + 28));
    if (v178 >= *(void *)(v181 + 16)) {
      goto LABEL_119;
    }
    uint64_t v182 = *(void *)(v181 + v320 + v319 + *((int *)v321 + 8));
    if (v179 >= *(void *)(v182 + 16)) {
      goto LABEL_120;
    }
    unint64_t v116 = type metadata accessor for Slot();
    unint64_t v183 = (*(unsigned __int8 *)(*(void *)(v116 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v116 - 8) + 80);
    uint64_t v316 = *(void *)(*(void *)(v116 - 8) + 72) * v179;
    unint64_t v317 = v183;
    sub_2498D6084(v182 + v183 + v316 + *(int *)(v116 + 36), (uint64_t)v9, &qword_2696DE540);
    if ((*v313)(v9, 1, v18) == 1)
    {
      sub_2498D60E8((uint64_t)v9, &qword_2696DE540);
      goto LABEL_61;
    }
    sub_249970DA4((uint64_t)v9, v17, (uint64_t (*)(void))type metadata accessor for Instrument);
    uint64_t v184 = (int *)(v17 + *(int *)(v18 + 20));
    sub_2498A4990((uint64_t)v184, (uint64_t)v334);
    sub_2498A4990((uint64_t)v334, (uint64_t)&v335);
    int v185 = sub_2498B8790((uint64_t)&v335);
    if (v185 == 1)
    {
      uint64_t v196 = sub_2498B87AC((uint64_t)&v335);
      sub_2499441A8((void *)v196, &v330);
      int v197 = sub_249944500((uint64_t)&v330);
      v310 = v184;
      switch(v197)
      {
        case 1:
          uint64_t v222 = (const void *)sub_24994451C((uint64_t)&v330);
          memcpy(v328, v222, 0x130uLL);
          sub_249944E84(v328);
          goto LABEL_92;
        case 2:
          uint64_t v223 = sub_24994451C((uint64_t)&v330);
          uint64_t v224 = *(void *)(v223 + 8);
          char v225 = *(unsigned char *)(v223 + 48);
          LOWORD(v327[0]) = *(_WORD *)v223;
          *((void *)&v327[0] + 1) = v224;
          long long v226 = *(_OWORD *)(v223 + 32);
          v327[1] = *(_OWORD *)(v223 + 16);
          v327[2] = v226;
          LOBYTE(v327[3]) = v225;
          sub_2498FC9D8(v334, sub_2498FB4B4);
          sub_249970ED8(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
          uint64_t v227 = v305;
          ImageGroupConfiguration.restoreAssets(from:)(v307);
          uint64_t v305 = v227;
          if (!v227)
          {
            sub_249970ED8(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
            sub_2498FC9D8(v334, sub_2498FCAAC);
            LOWORD(v328[0]) = v327[0];
            *((void *)&v328[0] + 1) = *((void *)&v327[0] + 1);
            v328[1] = v327[1];
            v328[2] = v327[2];
            LOBYTE(v328[3]) = v327[3];
            sub_249944DD8(v328);
LABEL_92:
            uint64_t v198 = v328;
LABEL_93:
            sub_2499441A8(v198, v329);
            uint64_t v232 = *(void *)(v196 + 504);
            char v233 = *(unsigned char *)(v196 + 496);
            sub_2499441A8(v329, v327);
            LOBYTE(v327[31]) = v233;
            *((void *)&v327[31] + 1) = v232;
            memcpy(v328, v327, sizeof(v328));
            sub_249970E74(v328);
            sub_2498A4990((uint64_t)v328, (uint64_t)v310);
            uint64_t v9 = v309;
            long long v115 = v312;
            goto LABEL_100;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 3:
          uint64_t v228 = (const void *)sub_24994451C((uint64_t)&v330);
          memcpy(v328, v228, 0x1F0uLL);
          sub_2498FC9D8(v334, sub_2498FB4B4);
          sub_249970ED8(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
          uint64_t v229 = v305;
          TextElementConfiguration.restoreAssets(from:)((uint64_t)v307);
          if (v229)
          {
            memcpy(v327, v328, 0x1F0uLL);
            sub_249970ED8((uint64_t)v327, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FD37C);
            sub_2498FC9D8(v334, sub_2498FCAAC);
LABEL_125:
            sub_249970D04(v17, (uint64_t (*)(void))type metadata accessor for Instrument);
            return;
          }
          uint64_t v305 = 0;
          sub_249970ED8(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
          sub_2498FC9D8(v334, sub_2498FCAAC);
          memcpy(v327, v328, 0x1F0uLL);
          sub_249944D2C(v327);
          uint64_t v198 = v327;
          goto LABEL_93;
        case 4:
          uint64_t v230 = sub_24994451C((uint64_t)&v330);
          sub_24994452C(v230, (uint64_t)v327);
          switch(sub_249944588((uint64_t)v327))
          {
            case 4u:
              sub_249944640((uint64_t)v327);
              sub_249970ED8(v196, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
              goto LABEL_90;
            case 6u:
              int v252 = (const void *)sub_249944640((uint64_t)v327);
              sub_2499457D8((uint64_t)v252, (uint64_t)v328);
              sub_249945834((uint64_t)v328);
              sub_249945840((uint64_t)v328);
              memcpy(v325, v252, 0x154uLL);
              sub_249945850(v325);
              uint64_t v231 = v325;
              break;
            default:
              sub_249944640((uint64_t)v327);
LABEL_90:
              uint64_t v231 = (void *)v230;
              break;
          }
          sub_24994452C((uint64_t)v231, (uint64_t)v326);
          sub_24994452C((uint64_t)v326, (uint64_t)v325);
          memcpy(v328, v325, 0x154uLL);
          sub_249944C04(v328);
          goto LABEL_92;
        case 5:
        case 6:
          goto LABEL_72;
        default:
          sub_24994451C((uint64_t)&v330);
LABEL_72:
          uint64_t v198 = (_OWORD *)v196;
          goto LABEL_93;
      }
LABEL_124:
      sub_2498FC9D8(v334, sub_2498FCAAC);
      goto LABEL_125;
    }
    if (v185 != 2) {
      goto LABEL_100;
    }
    v310 = v184;
    uint64_t v186 = sub_2498B87AC((uint64_t)&v335);
    uint64_t v187 = *(void **)(v186 + 8);
    *(void *)&long long v300 = *(void *)(v186 + 16);
    v306 = *(char **)(v186 + 24);
    uint64_t v188 = *(void *)(v186 + 40);
    *(void *)&long long v299 = *(void *)(v186 + 32);
    uint64_t v189 = *(void **)(v186 + 48);
    *(void *)&long long v298 = *(void *)(v186 + 56);
    unint64_t v302 = *(uint64_t (**)(uint64_t *, void (**)(uint64_t, void, uint64_t, uint64_t), uint64_t))(v186 + 64);
    id v303 = v187;
    v296 = *(char **)(v186 + 72);
    uint64_t v190 = *(void *)(v186 + 88);
    uint64_t v301 = *(void *)(v186 + 80);
    unint64_t v304 = *(void *)(v186 + 96);
    if ((~(_BYTE)v188 & 0xFE) != 0)
    {
      uint64_t v294 = (char)v188;
      uint64_t v290 = v190;
      int v293 = (char)v190;
      uint64_t v199 = v307[3];
      uint64_t v200 = v307[4];
      __swift_project_boxed_opaque_existential_2Tm(v307, v199);
      id v330 = v189;
      uint64_t v201 = *(uint64_t (**)(id *, uint64_t, uint64_t))(v200 + 24);
      uint64_t v291 = v189;
      v292 = v201;
      sub_2498A4990((uint64_t)v334, (uint64_t)v327);
      uint64_t v202 = (uint64_t *)sub_2498B87AC((uint64_t)v327);
      sub_2498A4990((uint64_t)v334, (uint64_t)v328);
      uint64_t v203 = (uint64_t *)sub_2498B87AC((uint64_t)v328);
      sub_249971000(v203);
      sub_249971000(v202);
      if ((v292(&v330, v199, v200) & 1) == 0) {
        goto LABEL_77;
      }
      if ((v294 & 0x80000000) != 0)
      {
        id v330 = v303;
        uint64_t v234 = v300;
        uint64_t v331 = (uint64_t (*)(uint64_t *, void (**)(uint64_t, void, uint64_t, uint64_t), uint64_t))v300;
        unint64_t v332 = v306;
        uint64_t v18 = v299;
        uint64_t v333 = v299;
        uint64_t v235 = v303;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v212 = v307;
        uint64_t v236 = v305;
        ImageAsset.LocalizedImage.restore(from:)(v307);
        uint64_t v305 = v236;
        if (v236) {
          goto LABEL_121;
        }
        sub_2498826E4(v303, v234, v306, v18, v294);
        id v303 = v330;
        *(void *)&long long v300 = v331;
        uint64_t v294 = 128;
        v306 = v332;
        *(void *)&long long v299 = v333;
        goto LABEL_78;
      }
      uint64_t v204 = v307[4];
      v292 = (uint64_t (*)(id *, uint64_t, uint64_t))v307[3];
      uint64_t v287 = v204;
      __swift_project_boxed_opaque_existential_2Tm(v307, (uint64_t)v292);
      LOBYTE(v330) = 0;
      uint64_t v288 = *(uint64_t (**)(void *, uint64_t, id *, uint64_t (*)(void, void, void), uint64_t))(v204 + 8);
      uint64_t v205 = v306;
      uint64_t v206 = v300;
      swift_bridgeObjectRetain();
      uint64_t v207 = v303;
      uint64_t v208 = v305;
      uint64_t v209 = v288(v303, v206, &v330, (uint64_t (*)(void, void, void))v292, v287);
      uint64_t v305 = v208;
      if (v208)
      {
        uint64_t v253 = v306;
        uint64_t v254 = v299;
        char v255 = v294;
        sub_2498826E4(v207, v206, v306, v299, v294);
        uint64_t v17 = (uint64_t)v295;
        uint64_t v256 = v207;
        uint64_t v257 = v206;
        uint64_t v218 = (void *)v298;
        uint64_t v258 = v301;
        uint64_t v217 = (uint64_t (*)(void, void, void))v302;
        int v259 = v253;
      }
      else
      {
        uint64_t v210 = (char *)v209;

        char v211 = v294;
        sub_2498826E4(v207, v206, v306, v299, v294);
        uint64_t v294 = v211 & 1;
        v306 = v210;
LABEL_77:
        uint64_t v212 = v307;
LABEL_78:
        uint64_t v213 = v212[3];
        uint64_t v214 = v212[4];
        __swift_project_boxed_opaque_existential_2Tm(v212, v213);
        id v330 = (id)v304;
        if (((*(uint64_t (**)(id *, uint64_t, uint64_t))(v214 + 24))(&v330, v213, v214) & 1) == 0)
        {
          sub_2498FC9D8(v334, sub_2498FCAAC);
          sub_2498FC9D8(v334, sub_2498FCAAC);
          uint64_t v18 = v311;
          double v195 = v296;
          LOBYTE(v194) = v290;
          goto LABEL_98;
        }
        if (v293 < 0)
        {
          uint64_t v237 = (void *)v298;
          id v330 = (id)v298;
          uint64_t v331 = v302;
          unint64_t v332 = v296;
          uint64_t v333 = v301;
          id v238 = (id)v298;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v239 = v305;
          ImageAsset.LocalizedImage.restore(from:)(v212);
          uint64_t v305 = v239;
          uint64_t v18 = v311;
          if (!v239)
          {
            sub_2498826E4(v237, (uint64_t)v302, v296, v301, v293);
            sub_2498FC9D8(v334, sub_2498FCAAC);
            sub_2498FC9D8(v334, sub_2498FCAAC);
            *(void *)&long long v298 = v330;
            LOBYTE(v194) = 0x80;
            double v195 = v332;
            uint64_t v301 = v333;
            unint64_t v302 = v331;
            goto LABEL_98;
          }
          uint64_t v262 = v330;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          uint64_t v218 = (void *)v298;
          char v255 = v294;
          uint64_t v17 = (uint64_t)v295;
          uint64_t v217 = (uint64_t (*)(void, void, void))v302;
          uint64_t v256 = v303;
          uint64_t v257 = v300;
          uint64_t v254 = v299;
          int v259 = v306;
          uint64_t v258 = v301;
        }
        else
        {
          uint64_t v215 = v212[4];
          v292 = (uint64_t (*)(id *, uint64_t, uint64_t))v212[3];
          uint64_t v287 = v215;
          __swift_project_boxed_opaque_existential_2Tm(v212, (uint64_t)v292);
          LOBYTE(v330) = 0;
          uint64_t v288 = *(uint64_t (**)(void *, uint64_t, id *, uint64_t (*)(void, void, void), uint64_t))(v215 + 8);
          uint64_t v216 = v296;
          uint64_t v286 = v296;
          uint64_t v217 = (uint64_t (*)(void, void, void))v302;
          swift_bridgeObjectRetain();
          uint64_t v218 = (void *)v298;
          uint64_t v219 = v305;
          uint64_t v220 = v288((void *)v298, (uint64_t)v217, &v330, (uint64_t (*)(void, void, void))v292, v287);
          uint64_t v305 = v219;
          if (!v219)
          {
            uint64_t v221 = (char *)v220;

            sub_2498826E4(v218, (uint64_t)v217, v216, v301, v293);
            sub_2498FC9D8(v334, sub_2498FCAAC);
            sub_2498FC9D8(v334, sub_2498FCAAC);
            LOBYTE(v194) = v290 & 1;
            double v195 = v221;
            uint64_t v18 = v311;
LABEL_98:
            uint64_t v188 = v294;
            uint64_t v194 = v194;
            long long v115 = v312;
            uint64_t v189 = v291;
            goto LABEL_99;
          }
          unint64_t v260 = v216;
          uint64_t v258 = v301;
          sub_2498826E4(v218, (uint64_t)v217, v260, v301, v293);
          char v255 = v294;
          uint64_t v17 = (uint64_t)v295;
          uint64_t v256 = v303;
          uint64_t v257 = v300;
          uint64_t v254 = v299;
          int v259 = v306;
        }
      }
LABEL_123:
      sub_2498826E4(v256, v257, v259, v254, v255);
      sub_2498826E4(v218, (uint64_t)v217, v296, v258, v293);
      goto LABEL_124;
    }
    unint64_t v191 = v116;
    uint64_t v192 = v18;
    uint64_t v193 = v190;
    sub_2498FC9D8(v334, sub_2498FCAAC);
    uint64_t v194 = v193;
    uint64_t v18 = v192;
    unint64_t v116 = v191;
    double v195 = v296;
LABEL_99:
    char v240 = *(unsigned char *)(v186 + 104);
    LOBYTE(v328[0]) = *(unsigned char *)v186;
    *((void *)&v328[0] + 1) = v303;
    *(void *)&v328[1] = v300;
    *((void *)&v328[1] + 1) = v306;
    *(void *)&v328[2] = v299;
    *((void *)&v328[2] + 1) = v188;
    *(void *)&v328[3] = v189;
    *((void *)&v328[3] + 1) = v298;
    *(void *)&v328[4] = v302;
    *((void *)&v328[4] + 1) = v195;
    *(void *)&v328[5] = v301;
    *((void *)&v328[5] + 1) = v194;
    *(void *)&v328[6] = v304;
    BYTE8(v328[6]) = v240;
    long long v241 = *(_OWORD *)(v186 + 128);
    v328[7] = *(_OWORD *)(v186 + 112);
    v328[8] = v241;
    sub_249970F9C(v328);
    sub_2498A4990((uint64_t)v328, (uint64_t)v310);
    uint64_t v9 = v309;
    uint64_t v3 = v297;
    uint64_t v17 = (uint64_t)v295;
LABEL_100:
    uint64_t v242 = v314;
    sub_249970E0C(v17, v314, (uint64_t (*)(void))type metadata accessor for Instrument);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))v308)(v242, 0, 1, v18);
    unint64_t v243 = *(void *)((char *)v115 + v3);
    char v244 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)((char *)v115 + v3) = v243;
    if ((v244 & 1) == 0)
    {
      unint64_t v243 = sub_249970048(v243);
      *(void *)((char *)v115 + v3) = v243;
    }
    if ((unint64_t)v318 >= *(void *)(v243 + 16)) {
      break;
    }
    long long v115 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))(v243 + v323 + v322);
    uint64_t v245 = *(int *)(v324 + 28);
    unint64_t v246 = *(void *)((char *)v115 + v245);
    char v247 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)((char *)v115 + v245) = v246;
    if ((v247 & 1) == 0)
    {
      unint64_t v246 = sub_24996FFF8(v246);
      *(void *)((char *)v115 + v245) = v246;
    }
    if (v339 >= *(void *)(v246 + 16)) {
      goto LABEL_131;
    }
    unint64_t v248 = v246 + v320 + v319;
    uint64_t v249 = *((int *)v321 + 8);
    unint64_t v250 = *(void *)(v248 + v249);
    char v251 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v248 + v249) = v250;
    if ((v251 & 1) == 0)
    {
      unint64_t v250 = sub_249970034(v250);
      *(void *)(v248 + v249) = v250;
    }
    uint64_t v18 = v311;
    long long v115 = v312;
    if (v179 >= *(void *)(v250 + 16)) {
      goto LABEL_132;
    }
    sub_24992ED50(v314, v250 + v317 + v316 + *(int *)(v116 + 36));
    sub_249970D04(v17, (uint64_t (*)(void))type metadata accessor for Instrument);
LABEL_61:
    ++v179;
    unint64_t v169 = (unint64_t)v318;
    unint64_t v178 = v339;
    if (v315 == v179) {
      goto LABEL_55;
    }
  }
  __break(1u);
LABEL_131:
  __break(1u);
LABEL_132:
  __break(1u);
LABEL_133:
  uint64_t v280 = v115;
  uint64_t v281 = (void *)v335;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_249970B30(v9, v320, v280, v116, v317, v319, v318, v322, v313, v316, (unint64_t)v310);
}

void Layout.Preview.restoreAssets(from:)(void *a1)
{
  uint64_t v3 = (id *)v1;
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, v5);
  uint64_t v14 = 1;
  if ((*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v6 + 24))(&v14, v5, v6))
  {
    uint64_t v7 = a1[3];
    uint64_t v8 = a1[4];
    __swift_project_boxed_opaque_existential_2Tm(a1, v7);
    uint64_t v9 = *(void *)(v1 + 8);
    uint64_t v10 = *(void *)(v1 + 16);
    char v13 = 0;
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t))(v8 + 8))(v9, v10, &v13, v7, v8);
    if (!v2)
    {
      uint64_t v12 = (void *)v11;

      *uint64_t v3 = v12;
    }
  }
}

uint64_t Layout.updating(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v6;
  uint64_t v7 = (int *)type metadata accessor for Layout();
  uint64_t v8 = *(void *)(a1 + v7[6]);
  uint64_t v42 = v2;
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_2498F31C4((void (*)(uint64_t))sub_249971068, (uint64_t)v41, v8, (uint64_t)v50);
  swift_bridgeObjectRelease();
  sub_2498D6084(v2, (uint64_t)v6, &qword_2696DFCB0);
  uint64_t v9 = (uint64_t *)(a1 + v7[5]);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  uint64_t v36 = v11;
  uint64_t v40 = v10;
  uint64_t v12 = v7[10];
  char v49 = *(unsigned char *)(a1 + v7[9]);
  uint64_t v13 = a1 + v12;
  LOWORD(v12) = *(_WORD *)(a1 + v12 + 64);
  char v14 = *(unsigned char *)(v13 + 66);
  long long v15 = *(_OWORD *)(v13 + 16);
  v46[0] = *(_OWORD *)v13;
  v46[1] = v15;
  long long v16 = *(_OWORD *)(v13 + 48);
  v46[2] = *(_OWORD *)(v13 + 32);
  v46[3] = v16;
  char v48 = v14;
  __int16 v47 = v12;
  uint64_t v17 = v7[7];
  uint64_t v35 = *(void *)(a1 + v7[8]);
  uint64_t v18 = v7[12];
  unint64_t v19 = (double *)(a1 + v7[11]);
  double v20 = *v19;
  double v21 = v19[1];
  double v22 = v19[2];
  double v23 = v19[3];
  uint64_t v24 = *(void *)(a1 + v17 + 8);
  v45[0] = *(void *)(a1 + v17);
  v45[1] = v24;
  uint64_t v26 = *(void *)(a1 + v18 + 8);
  uint64_t v27 = *(void *)(a1 + v18 + 16);
  uint64_t v28 = *(void *)(a1 + v18 + 24);
  uint64_t v29 = *(void *)(a1 + v18 + 32);
  uint64_t v30 = *(void *)(a1 + v18 + 40);
  uint64_t v31 = *(void *)(a1 + v18 + 48);
  LOBYTE(v8) = *(unsigned char *)(a1 + v18 + 56);
  v43[0] = *(void *)(a1 + v18);
  int v25 = (void *)v43[0];
  v43[1] = v26;
  v43[2] = v27;
  v43[3] = v28;
  v43[4] = v29;
  v43[5] = v30;
  v43[6] = v31;
  char v44 = v8;
  uint64_t v32 = *(void *)(a1 + v7[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v33 = v35;
  swift_retain();
  sub_24997024C(v25, v26, v27, v28, v29, v30, v31, v8);
  swift_bridgeObjectRetain();
  return Layout.init(id:displayName:zones:layoutType:systemUILayout:backgroundColor:safeAreaInsets:layoutStyleID:preview:wallpapers:)((uint64_t)v37, v36, v40, v38, &v49, (uint64_t *)v46, v33, v45, v39, v20, v21, v22, v23, (uint64_t)v43, v32);
}

uint64_t sub_24996E21C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC90);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Zone();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v30 = (uint64_t)&v26 - v15;
  uint64_t v16 = *(void *)(a2 + *(int *)(type metadata accessor for Layout() + 24));
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    uint64_t v27 = a3;
    uint64_t v28 = a1;
    uint64_t v29 = v3;
    uint64_t v18 = v16 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    unint64_t v19 = (void *)(a1 + *(int *)(v10 + 20));
    uint64_t v20 = *(void *)(v11 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_249970E0C(v18, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Zone);
      double v21 = &v14[*(int *)(v10 + 20)];
      BOOL v22 = *(void *)v21 == *v19 && *((void *)v21 + 1) == v19[1];
      if (v22 || (sub_249AEE0D8() & 1) != 0) {
        break;
      }
      sub_249970D04((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Zone);
      v18 += v20;
      if (!--v17)
      {
        uint64_t v23 = 1;
        goto LABEL_11;
      }
    }
    sub_249970DA4((uint64_t)v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v23 = 0;
LABEL_11:
    a1 = v28;
    a3 = v27;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v23, 1, v10);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_2498D60E8((uint64_t)v9, &qword_2696DFC90);
    return sub_249970E0C(a1, a3, (uint64_t (*)(void))type metadata accessor for Zone);
  }
  else
  {
    uint64_t v25 = v30;
    sub_249970DA4((uint64_t)v9, v30, (uint64_t (*)(void))type metadata accessor for Zone);
    Zone.updating(with:)(a1, a3);
    return sub_249970D04(v25, (uint64_t (*)(void))type metadata accessor for Zone);
  }
}

void sub_24996E524(uint64_t a1)
{
}

uint64_t Layout.isUserSelectable.getter()
{
  if (*(unsigned char *)(v0 + *(int *)(type metadata accessor for Layout() + 36))) {
    char v1 = sub_249AEE0D8();
  }
  else {
    char v1 = 1;
  }
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t Layout.Preview.AppearanceState.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  if (*(unsigned char *)(v1 + 16))
  {
    sub_249AEE348();
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 8);
    sub_249AEE348();
    sub_24988B5C8(a1, v3);
    uint64_t v3 = v4;
  }

  return sub_24988B5C8(a1, v3);
}

uint64_t sub_24996E634()
{
  if (*v0) {
    return 0x796C6E4F6B726164;
  }
  else {
    return 0x63696D616E7964;
  }
}

uint64_t sub_24996E670@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24997354C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24996E698(uint64_t a1)
{
  unint64_t v2 = sub_249971088();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24996E6D4(uint64_t a1)
{
  unint64_t v2 = sub_249971088();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24996E710(uint64_t a1)
{
  unint64_t v2 = sub_2499710DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24996E74C(uint64_t a1)
{
  unint64_t v2 = sub_2499710DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24996E788()
{
  if (*v0) {
    return 1802658148;
  }
  else {
    return 0x746867696CLL;
  }
}

uint64_t sub_24996E7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249973640(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24996E7E0(uint64_t a1)
{
  unint64_t v2 = sub_2499711D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24996E81C(uint64_t a1)
{
  unint64_t v2 = sub_2499711D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Layout.Preview.AppearanceState.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DA0);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DA8);
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DB0);
  uint64_t v9 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *v1;
  uint64_t v20 = v1[1];
  char v12 = *((unsigned char *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249971088();
  sub_249AEE468();
  if (v12)
  {
    LOBYTE(v29) = 1;
    sub_2499710DC();
    uint64_t v13 = v27;
    sub_249AEDE48();
    uint64_t v29 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DC8);
    sub_249971130();
    uint64_t v14 = v22;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v13);
  }
  else
  {
    LOBYTE(v29) = 0;
    sub_2499711D0();
    uint64_t v16 = v27;
    sub_249AEDE48();
    uint64_t v29 = v25;
    char v28 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DC8);
    sub_249971130();
    uint64_t v17 = v24;
    uint64_t v18 = v26;
    sub_249AEDF08();
    if (!v18)
    {
      uint64_t v29 = v20;
      char v28 = 1;
      sub_249AEDF08();
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v16);
  }
}

uint64_t Layout.Preview.AppearanceState.hashValue.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_249AEE338();
  sub_249AEE348();
  if (v3) {
    uint64_t v2 = v1;
  }
  else {
    sub_24988B5C8((uint64_t)v5, v1);
  }
  sub_24988B5C8((uint64_t)v5, v2);
  return sub_249AEE388();
}

uint64_t Layout.Preview.AppearanceState.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DE0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v34 = v3;
  uint64_t v35 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DE8);
  uint64_t v36 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DF0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v37 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v14);
  sub_249971088();
  uint64_t v15 = v38;
  sub_249AEE428();
  if (v15) {
    goto LABEL_6;
  }
  uint64_t v16 = v11;
  uint64_t v38 = v13;
  uint64_t v17 = sub_249AEDE18();
  uint64_t v18 = v17;
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v22 = sub_249AEDB08();
    swift_allocError();
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v24 = &type metadata for Layout.Preview.AppearanceState;
    uint64_t v25 = v38;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v22 - 8) + 104))(v24, *MEMORY[0x263F8DCB0], v22);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v25, v10);
LABEL_6:
    uint64_t v31 = (uint64_t)v37;
    return __swift_destroy_boxed_opaque_existential_2Tm(v31);
  }
  char v19 = *(unsigned char *)(v17 + 32);
  if (v19)
  {
    LOBYTE(v41) = 1;
    sub_2499710DC();
    uint64_t v20 = v6;
    uint64_t v21 = v38;
    sub_249AEDD38();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DC8);
    sub_249971224();
    uint64_t v28 = v34;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v20, v28);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v10);
    uint64_t v29 = 0;
    uint64_t v30 = v41;
    uint64_t v31 = (uint64_t)v37;
  }
  else
  {
    LOBYTE(v41) = 0;
    sub_2499711D0();
    sub_249AEDD38();
    uint64_t v35 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0DC8);
    LOBYTE(v40) = 0;
    sub_249971224();
    sub_249AEDE08();
    uint64_t v27 = v41;
    char v39 = 1;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v9, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v38, v10);
    uint64_t v29 = v40;
    uint64_t v31 = (uint64_t)v37;
    uint64_t v30 = v27;
  }
  uint64_t v32 = v33;
  *uint64_t v33 = v30;
  v32[1] = v29;
  *((unsigned char *)v32 + 16) = v19;
  return __swift_destroy_boxed_opaque_existential_2Tm(v31);
}

uint64_t sub_24996F1F8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Layout.Preview.AppearanceState.init(from:)(a1, a2);
}

uint64_t sub_24996F210(void *a1)
{
  return Layout.Preview.AppearanceState.encode(to:)(a1);
}

uint64_t sub_24996F228()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_249AEE338();
  sub_249AEE348();
  if (v3) {
    uint64_t v2 = v1;
  }
  else {
    sub_24988B5C8((uint64_t)v5, v1);
  }
  sub_24988B5C8((uint64_t)v5, v2);
  return sub_249AEE388();
}

uint64_t sub_24996F2AC(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  if (*(unsigned char *)(v1 + 16))
  {
    sub_249AEE348();
  }
  else
  {
    uint64_t v4 = *(void *)(v1 + 8);
    sub_249AEE348();
    sub_24988B5C8(a1, v3);
    uint64_t v3 = v4;
  }

  return sub_24988B5C8(a1, v3);
}

uint64_t sub_24996F328()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  sub_249AEE338();
  sub_249AEE348();
  if (v3) {
    uint64_t v2 = v1;
  }
  else {
    sub_24988B5C8((uint64_t)v5, v1);
  }
  sub_24988B5C8((uint64_t)v5, v2);
  return sub_249AEE388();
}

uint64_t Layout.Preview.package.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v2 = *((void *)v1 + 3);
  uint64_t v4 = *((void *)v1 + 4);
  long long v5 = *v1;
  *(_OWORD *)a1 = *v1;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v2;
  *(void *)(a1 + 32) = v4;
  id v6 = (id)v5;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

__n128 Layout.Preview.package.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *(void **)v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  __n128 result = v5;
  *(_OWORD *)uint64_t v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(void *)(v1 + 32) = v2;
  return result;
}

uint64_t (*Layout.Preview.package.modify())()
{
  return nullsub_1;
}

uint64_t Layout.Preview.state.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  char v4 = *(unsigned char *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  return sub_249930CE0(v2, v3, v4);
}

uint64_t Layout.Preview.state.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_249930F4C(*(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56));
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v3;
  *(unsigned char *)(v1 + 56) = v4;
  return result;
}

uint64_t (*Layout.Preview.state.modify())()
{
  return nullsub_1;
}

__n128 Layout.Preview.init(package:stateForPaletteID:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(__n128 *)(a3 + 16) = result;
  *(void *)(a3 + 32) = v3;
  *(void *)(a3 + 40) = a2;
  *(void *)(a3 + 48) = 0;
  *(unsigned char *)(a3 + 56) = 1;
  return result;
}

__n128 Layout.Preview.init(package:state:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 32);
  unsigned __int8 v4 = a2[1].n128_u8[0];
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v5;
  *(void *)(a3 + 32) = v3;
  __n128 result = *a2;
  *(__n128 *)(a3 + 40) = *a2;
  *(unsigned char *)(a3 + 56) = v4;
  return result;
}

uint64_t Layout.Preview.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  char v6 = *(unsigned char *)(v1 + 56);
  if (*(void *)v1)
  {
    sub_249AEE358();
    id v7 = v3;
    sub_249AED898();
  }
  else
  {
    sub_249AEE358();
  }
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE348();
  if (v6) {
    uint64_t v5 = v4;
  }
  else {
    sub_24988B5C8(a1, v4);
  }

  return sub_24988B5C8(a1, v5);
}

uint64_t sub_24996F660()
{
  if (*v0) {
    return 0x6574617473;
  }
  else {
    return 0x6567616B636170;
  }
}

uint64_t sub_24996F698@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24997371C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24996F6C0(uint64_t a1)
{
  unint64_t v2 = sub_2499712C4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24996F6FC(uint64_t a1)
{
  unint64_t v2 = sub_2499712C4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Layout.Preview.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0E00);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *v1;
  long long v14 = v1[1];
  long long v15 = v8;
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v9 = *((void *)v1 + 5);
  uint64_t v12 = *((void *)v1 + 6);
  uint64_t v13 = v9;
  int v19 = *((unsigned __int8 *)v1 + 56);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499712C4();
  sub_249AEE468();
  long long v16 = v15;
  long long v17 = v14;
  uint64_t v18 = v10;
  char v20 = 0;
  sub_249971318();
  sub_249AEDF08();
  if (!v2)
  {
    *(void *)&long long v16 = v13;
    *((void *)&v16 + 1) = v12;
    LOBYTE(v17) = v19;
    char v20 = 1;
    sub_24997136C();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Layout.Preview.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  char v4 = *(unsigned char *)(v0 + 56);
  sub_249AEE338();
  sub_249AEE358();
  if (v1)
  {
    id v5 = v1;
    sub_249AED898();
  }
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE348();
  if (v4) {
    uint64_t v3 = v2;
  }
  else {
    sub_24988B5C8((uint64_t)v7, v2);
  }
  sub_24988B5C8((uint64_t)v7, v3);
  return sub_249AEE388();
}

void Layout.Preview.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0E20);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499712C4();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    char v31 = 0;
    sub_2499713C0();
    sub_249AEDE08();
    uint64_t v9 = v26;
    uint64_t v10 = v28;
    uint64_t v21 = v29;
    uint64_t v22 = v27;
    uint64_t v11 = v30;
    char v31 = 1;
    unint64_t v12 = sub_249971414();
    uint64_t v23 = v9;
    unint64_t v24 = v12;
    id v13 = v9;
    uint64_t v14 = v10;
    id v25 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = (uint64_t)v26;
    uint64_t v16 = v27;
    char v17 = v28;
    id v18 = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249930CE0(v15, v16, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v19 = v22;
    *(void *)a2 = v23;
    *(void *)(a2 + 8) = v19;
    uint64_t v20 = v21;
    *(void *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v20;
    *(void *)(a2 + 32) = v11;
    *(void *)(a2 + 40) = v15;
    *(void *)(a2 + 48) = v16;
    *(unsigned char *)(a2 + 56) = v17;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    sub_249930F4C(v15, v16, v17);
  }
}

uint64_t sub_24996FCD8()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_249AF0A70;
  *(void *)(v6 + 56) = &type metadata for CAPackageAsset;
  *(void *)(v6 + 64) = &protocol witness table for CAPackageAsset;
  uint64_t v7 = (void *)swift_allocObject();
  *(void *)(v6 + 32) = v7;
  _OWORD v7[2] = v1;
  v7[3] = v2;
  v7[4] = v3;
  v7[5] = v4;
  v7[6] = v5;
  id v8 = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v6;
}

void sub_24996FD88(void *a1)
{
}

void sub_24996FDA0(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_24996FDB8(void *a1)
{
  return Layout.Preview.encode(to:)(a1);
}

uint64_t sub_24996FDD4(uint64_t a1)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = *(void *)(v1 + 40);
  uint64_t v5 = *(void *)(v1 + 48);
  char v6 = *(unsigned char *)(v1 + 56);
  if (*(void *)v1)
  {
    sub_249AEE358();
    id v7 = v3;
    sub_249AED898();
  }
  else
  {
    sub_249AEE358();
  }
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE348();
  if (v6) {
    uint64_t v5 = v4;
  }
  else {
    sub_24988B5C8(a1, v4);
  }

  return sub_24988B5C8(a1, v5);
}

uint64_t sub_24996FEE4()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  char v4 = *(unsigned char *)(v0 + 56);
  sub_249AEE338();
  sub_249AEE358();
  if (v1)
  {
    id v5 = v1;
    sub_249AED898();
  }
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE348();
  if (v4) {
    uint64_t v3 = v2;
  }
  else {
    sub_24988B5C8((uint64_t)v7, v2);
  }
  sub_24988B5C8((uint64_t)v7, v3);
  return sub_249AEE388();
}

uint64_t sub_24996FFF8(unint64_t a1)
{
  return sub_2498AB974(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_24997000C(uint64_t a1)
{
  return sub_2498ABF58(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_249970020(void *a1)
{
  return sub_2498AC088(0, a1[2], 0, a1);
}

uint64_t sub_249970034(unint64_t a1)
{
  return sub_2498AC054(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_249970048(unint64_t a1)
{
  return sub_2498AC1B4(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_24997005C(unint64_t a1)
{
  return sub_2498AB3DC(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_249970070(void *a1)
{
  return sub_2498AC3FC(0, a1[2], 0, a1);
}

uint64_t _s14CarPlayAssetUI6LayoutV7PreviewV15AppearanceStateO2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  if (v4)
  {
    if (*(unsigned char *)(a2 + 16))
    {
      char v4 = 1;
      sub_249930CE0(*(void *)a2, *(void *)(a2 + 8), 1);
      sub_249930CE0(v2, v3, 1);
      char v8 = sub_2499FDE68(v2, v5);
      char v7 = 1;
      goto LABEL_8;
    }
LABEL_5:
    sub_249930CE0(*(void *)a2, *(void *)(a2 + 8), v7);
    sub_249930CE0(v2, v3, v4);
    char v8 = 0;
    goto LABEL_8;
  }
  if (*(unsigned char *)(a2 + 16)) {
    goto LABEL_5;
  }
  sub_249930CE0(*(void *)a2, *(void *)(a2 + 8), 0);
  sub_249930CE0(v2, v3, 0);
  char v4 = 0;
  char v7 = 0;
  char v8 = 0;
  if (sub_2499FDE68(v2, v5))
  {
    char v8 = sub_2499FDE68(v3, v6);
    char v4 = 0;
    char v7 = 0;
  }
LABEL_8:
  sub_249930F4C(v2, v3, v4);
  sub_249930F4C(v5, v6, v7);
  return v8 & 1;
}

uint64_t _s14CarPlayAssetUI6LayoutV7PreviewV2eeoiySbAE_AEtFZ_0(long long *a1, long long *a2)
{
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  uint64_t v4 = *((void *)a1 + 6);
  char v5 = *((unsigned char *)a1 + 56);
  uint64_t v6 = *((void *)a2 + 4);
  uint64_t v7 = *((void *)a2 + 5);
  uint64_t v8 = *((void *)a2 + 6);
  char v9 = *((unsigned char *)a2 + 56);
  long long v10 = a1[1];
  long long v17 = *a1;
  long long v18 = v10;
  uint64_t v19 = v2;
  long long v11 = a2[1];
  long long v14 = *a2;
  long long v15 = v11;
  uint64_t v16 = v6;
  if (_s14CarPlayAssetUI09CAPackageC0V2eeoiySbAC_ACtFZ_0((uint64_t)&v17, (uint64_t)&v14))
  {
    *(void *)&long long v17 = v3;
    *((void *)&v17 + 1) = v4;
    LOBYTE(v18) = v5;
    *(void *)&long long v14 = v7;
    *((void *)&v14 + 1) = v8;
    LOBYTE(v15) = v9;
    char v12 = _s14CarPlayAssetUI6LayoutV7PreviewV15AppearanceStateO2eeoiySbAG_AGtFZ_0((uint64_t)&v17, (uint64_t)&v14);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

void *sub_24997024C(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a3)
  {
    id v11 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (void *)sub_249930CE0(a6, a7, a8 & 1);
  }
  return result;
}

uint64_t sub_2499702C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a3)
  {
    id v11 = (void *)result;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return sub_249930F4C(a6, a7, a8 & 1);
  }
  return result;
}

unint64_t sub_24997033C()
{
  unint64_t result = qword_2696E0CE8;
  if (!qword_2696E0CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0CE8);
  }
  return result;
}

unint64_t sub_249970390()
{
  unint64_t result = qword_2696E0D10;
  if (!qword_2696E0D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0D10);
  }
  return result;
}

uint64_t sub_2499703E4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249970450()
{
  unint64_t result = qword_2696E0D28;
  if (!qword_2696E0D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0D28);
  }
  return result;
}

unint64_t sub_2499704A4()
{
  unint64_t result = qword_2696E0D40;
  if (!qword_2696E0D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0D40);
  }
  return result;
}

uint64_t sub_2499704F8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFCB0);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F07508];
    sub_2499715C8(&qword_2696DF428, MEMORY[0x263F07508]);
    sub_2499715C8(&qword_2696DF430, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2499705C4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0CF8);
    sub_2499715C8(a2, (void (*)(uint64_t))type metadata accessor for Zone);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249970658()
{
  unint64_t result = qword_2696E0D68;
  if (!qword_2696E0D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0D68);
  }
  return result;
}

unint64_t sub_2499706AC()
{
  unint64_t result = qword_2696E0D78;
  if (!qword_2696E0D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0D78);
  }
  return result;
}

unint64_t sub_249970700()
{
  unint64_t result = qword_2696E0D88;
  if (!qword_2696E0D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0D88);
  }
  return result;
}

unint64_t sub_249970754()
{
  unint64_t result = qword_2696E0D98;
  if (!qword_2696E0D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0D98);
  }
  return result;
}

uint64_t sub_2499707A8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  if (a3 != 1) {
    return sub_2499702C4(result, a2, a3, a4, a5, a6, a7, a8);
  }
  return result;
}

void *sub_2499707B8(void *result, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, unint64_t a11)
{
  char v12 = result;
  switch(a11 >> 61)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      goto LABEL_8;
    case 2uLL:
      swift_bridgeObjectRetain();
      id v13 = v12;
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 3uLL:
      swift_retain();
LABEL_4:
      return (void *)swift_retain();
    case 4uLL:
      sub_24988247C(result, a2, a3, a4, a5);
      unint64_t result = a7;
      a2 = a8;
      a3 = a9;
      a4 = a10;
      a5 = a11;
LABEL_8:
      unint64_t result = (void *)sub_24988247C(result, a2, a3, a4, a5);
      break;
    case 5uLL:
      swift_bridgeObjectRetain();
      id v15 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_12:
      unint64_t result = (void *)swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24997096C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void **)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  long long v10 = *(_OWORD *)(a1 + 96);
  unint64_t v8 = *(void *)(a1 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2499707B8(v12, v11, v2, v3, v4, v5, v6, v7, (void *)v10, *((uint64_t *)&v10 + 1), v8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_249970A28()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_249970A70(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 40);
  char v12 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void **)(a1 + 80);
  uint64_t v7 = *(void *)(a1 + 88);
  long long v10 = *(_OWORD *)(a1 + 96);
  unint64_t v8 = *(void *)(a1 + 112);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249970B30(v12, v11, v2, v3, v4, v5, v6, v7, (void *)v10, *((uint64_t *)&v10 + 1), v8);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_249970B30(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, unint64_t a11)
{
  char v12 = a1;
  switch(a11 >> 61)
  {
    case 0uLL:
      goto LABEL_4;
    case 1uLL:
      goto LABEL_8;
    case 2uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_12;
    case 3uLL:
      swift_release();
LABEL_4:
      swift_release();
      return;
    case 4uLL:
      sub_2498826E4(a1, a2, a3, a4, a5);
      a1 = a7;
      a2 = a8;
      a3 = a9;
      a4 = a10;
      a5 = a11;
LABEL_8:
      sub_2498826E4(a1, a2, a3, a4, a5);
      break;
    case 5uLL:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

uint64_t sub_249970CC4()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_249970D04(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_249970D64()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_249970DA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_249970E0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_249970E74(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xFE00000000000007;
  uint64_t v7 = result[62] & 1 | 0x1000000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

uint64_t sub_249970ED8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v18 = *(_OWORD *)(a1 + 448);
  long long v19 = *(_OWORD *)(a1 + 464);
  long long v16 = *(_OWORD *)(a1 + 416);
  long long v17 = *(_OWORD *)(a1 + 432);
  long long v14 = *(_OWORD *)(a1 + 384);
  long long v15 = *(_OWORD *)(a1 + 400);
  long long v12 = *(_OWORD *)(a1 + 352);
  long long v13 = *(_OWORD *)(a1 + 368);
  long long v10 = *(_OWORD *)(a1 + 320);
  long long v11 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    v12,
    *((void *)&v12 + 1),
    v13,
    *((void *)&v13 + 1),
    v14,
    *((void *)&v14 + 1),
    v15,
    *((void *)&v15 + 1),
    v16,
    *((void *)&v16 + 1),
    v17,
    *((void *)&v17 + 1),
    v18,
    *((void *)&v18 + 1),
    v19,
    *((void *)&v19 + 1),
    *(void *)(a1 + 480),
    *(void *)(a1 + 488));
  return a1;
}

void *sub_249970F9C(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xFE00000000000007;
  uint64_t v7 = result[62] & 1 | 0x2000000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

uint64_t *sub_249971000(uint64_t *a1)
{
  return a1;
}

uint64_t sub_249971068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24996E21C(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_249971088()
{
  unint64_t result = qword_2696E0DB8;
  if (!qword_2696E0DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0DB8);
  }
  return result;
}

unint64_t sub_2499710DC()
{
  unint64_t result = qword_2696E0DC0;
  if (!qword_2696E0DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0DC0);
  }
  return result;
}

unint64_t sub_249971130()
{
  unint64_t result = qword_2696E0DD0;
  if (!qword_2696E0DD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0DC8);
    sub_2498B4CA0(&qword_2696DDC00, &qword_2696DDB20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0DD0);
  }
  return result;
}

unint64_t sub_2499711D0()
{
  unint64_t result = qword_2696E0DD8;
  if (!qword_2696E0DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0DD8);
  }
  return result;
}

unint64_t sub_249971224()
{
  unint64_t result = qword_2696E0DF8;
  if (!qword_2696E0DF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0DC8);
    sub_2498B4CA0(&qword_2696DDC38, &qword_2696DDB20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0DF8);
  }
  return result;
}

unint64_t sub_2499712C4()
{
  unint64_t result = qword_2696E0E08;
  if (!qword_2696E0E08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E08);
  }
  return result;
}

unint64_t sub_249971318()
{
  unint64_t result = qword_2696E0E10;
  if (!qword_2696E0E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E10);
  }
  return result;
}

unint64_t sub_24997136C()
{
  unint64_t result = qword_2696E0E18;
  if (!qword_2696E0E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E18);
  }
  return result;
}

unint64_t sub_2499713C0()
{
  unint64_t result = qword_2696E0E28;
  if (!qword_2696E0E28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E28);
  }
  return result;
}

unint64_t sub_249971414()
{
  unint64_t result = qword_2696E0E30;
  if (!qword_2696E0E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E30);
  }
  return result;
}

unint64_t sub_24997146C()
{
  unint64_t result = qword_2696E0E38;
  if (!qword_2696E0E38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E38);
  }
  return result;
}

unint64_t sub_2499714CC()
{
  unint64_t result = qword_2696E0E48;
  if (!qword_2696E0E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E48);
  }
  return result;
}

unint64_t sub_249971524()
{
  unint64_t result = qword_2696E0E50;
  if (!qword_2696E0E50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFCB0);
    sub_2499715C8(&qword_2696DF388, MEMORY[0x263F07508]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E50);
  }
  return result;
}

uint64_t sub_2499715C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249971614()
{
  unint64_t result = qword_2696E0E58;
  if (!qword_2696E0E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E58);
  }
  return result;
}

unint64_t sub_24997166C()
{
  unint64_t result = qword_2696E0E60;
  if (!qword_2696E0E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E60);
  }
  return result;
}

uint64_t sub_2499716D0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + *(int *)(type metadata accessor for Layout() + 52));

  return swift_bridgeObjectRetain();
}

ValueMetadata *type metadata accessor for LayoutType()
{
  return &type metadata for LayoutType;
}

void *initializeBufferWithCopyOfBuffer for Layout(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v40 = *a2;
    *a1 = *a2;
    a1 = (void *)(v40 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_249AEB808();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    long long v10 = (void *)((char *)a1 + v8);
    long long v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *long long v10 = *v11;
    v10[1] = v12;
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    long long v15 = (void *)((char *)a1 + v13);
    long long v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *long long v15 = *v16;
    v15[1] = v17;
    *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v18 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    long long v19 = (_OWORD *)((char *)a1 + v18);
    uint64_t v20 = (_OWORD *)((char *)a2 + v18);
    long long v21 = v20[4];
    long long v22 = v20[2];
    v19[3] = v20[3];
    v19[4] = v21;
    long long v23 = v20[1];
    *long long v19 = *v20;
    v19[1] = v23;
    _OWORD v19[2] = v22;
    uint64_t v24 = a3[11];
    uint64_t v25 = a3[12];
    uint64_t v26 = (_OWORD *)((char *)a1 + v24);
    uint64_t v27 = (_OWORD *)((char *)a2 + v24);
    long long v28 = v27[1];
    *uint64_t v26 = *v27;
    v26[1] = v28;
    uint64_t v29 = (char *)a1 + v25;
    uint64_t v30 = (char *)a2 + v25;
    uint64_t v31 = *(void *)((char *)a2 + v25 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v31)
    {
      uint64_t v32 = *(void **)v30;
      uint64_t v33 = *((void *)v30 + 1);
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = v33;
      uint64_t v34 = *((void *)v30 + 3);
      uint64_t v35 = *((void *)v30 + 4);
      *((void *)v29 + 2) = v31;
      *((void *)v29 + 3) = v34;
      *((void *)v29 + 4) = v35;
      uint64_t v36 = *((void *)v30 + 5);
      uint64_t v37 = *((void *)v30 + 6);
      char v38 = v30[56];
      id v39 = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_249930CE0(v36, v37, v38);
      *((void *)v29 + 5) = v36;
      *((void *)v29 + 6) = v37;
      v29[56] = v38;
    }
    else
    {
      long long v41 = *((_OWORD *)v30 + 1);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *((_OWORD *)v29 + 1) = v41;
      *((_OWORD *)v29 + 2) = *((_OWORD *)v30 + 2);
      *(_OWORD *)(v29 + 41) = *(_OWORD *)(v30 + 41);
    }
    *((void *)v29 + 8) = *((void *)v30 + 8);
    uint64_t v42 = a3[13];
    uint64_t v43 = (void *)((char *)a1 + v42);
    char v44 = (void *)((char *)a2 + v42);
    uint64_t v45 = *v44;
    uint64_t v46 = v44[1];
    *uint64_t v43 = v45;
    v43[1] = v46;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Layout(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v5 = a1 + *(int *)(a2 + 48);
  if (*(void *)(v5 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249930F4C(*(void *)(v5 + 40), *(void *)(v5 + 48), *(unsigned char *)(v5 + 56));
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Layout(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  long long v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v12);
  long long v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v17 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v18 = (_OWORD *)(a1 + v17);
  long long v19 = (_OWORD *)(a2 + v17);
  long long v20 = v19[4];
  long long v21 = v19[2];
  _OWORD v18[3] = v19[3];
  v18[4] = v20;
  long long v22 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v22;
  void v18[2] = v21;
  uint64_t v23 = a3[11];
  uint64_t v24 = a3[12];
  uint64_t v25 = (_OWORD *)(a1 + v23);
  uint64_t v26 = (_OWORD *)(a2 + v23);
  long long v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = a1 + v24;
  uint64_t v29 = a2 + v24;
  uint64_t v30 = *(void *)(a2 + v24 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v30)
  {
    uint64_t v31 = *(void **)v29;
    uint64_t v32 = *(void *)(v29 + 8);
    *(void *)uint64_t v28 = *(void *)v29;
    *(void *)(v28 + 8) = v32;
    uint64_t v33 = *(void *)(v29 + 24);
    uint64_t v34 = *(void *)(v29 + 32);
    *(void *)(v28 + 16) = v30;
    *(void *)(v28 + 24) = v33;
    *(void *)(v28 + 32) = v34;
    uint64_t v35 = *(void *)(v29 + 40);
    uint64_t v36 = *(void *)(v29 + 48);
    char v37 = *(unsigned char *)(v29 + 56);
    id v38 = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249930CE0(v35, v36, v37);
    *(void *)(v28 + 40) = v35;
    *(void *)(v28 + 48) = v36;
    *(unsigned char *)(v28 + 56) = v37;
  }
  else
  {
    long long v39 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v39;
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    *(_OWORD *)(v28 + 41) = *(_OWORD *)(v29 + 41);
  }
  *(void *)(v28 + 64) = *(void *)(v29 + 64);
  uint64_t v40 = a3[13];
  long long v41 = (void *)(a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v43 = *v42;
  uint64_t v44 = v42[1];
  *long long v41 = v43;
  v41[1] = v44;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Layout(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = a3[10];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  long long v16 = *(_OWORD *)(v15 + 16);
  long long v17 = *(_OWORD *)(v15 + 32);
  long long v18 = *(_OWORD *)(v15 + 48);
  *(_DWORD *)(v14 + 63) = *(_DWORD *)(v15 + 63);
  *(_OWORD *)(v14 + 32) = v17;
  *(_OWORD *)(v14 + 48) = v18;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 72) = *(void *)(v15 + 72);
  uint64_t v19 = a3[11];
  long long v20 = (void *)(a1 + v19);
  long long v21 = (void *)(a2 + v19);
  *long long v20 = *v21;
  v20[1] = v21[1];
  unsigned char v20[2] = v21[2];
  void v20[3] = v21[3];
  uint64_t v22 = a3[12];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (long long *)(a2 + v22);
  uint64_t v25 = *(void *)(a1 + v22 + 16);
  uint64_t v26 = *(void *)(a2 + v22 + 16);
  if (v25)
  {
    if (v26)
    {
      long long v27 = *(void **)v23;
      uint64_t v28 = *(void **)v24;
      *(void *)uint64_t v23 = *(void *)v24;
      id v29 = v28;

      *(void *)(v23 + 8) = *((void *)v24 + 1);
      *(void *)(v23 + 16) = *((void *)v24 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v23 + 24) = *((void *)v24 + 3);
      *(void *)(v23 + 32) = *((void *)v24 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v30 = *((void *)v24 + 5);
      uint64_t v31 = *((void *)v24 + 6);
      char v32 = *((unsigned char *)v24 + 56);
      sub_249930CE0(v30, v31, v32);
      uint64_t v33 = *(void *)(v23 + 40);
      uint64_t v34 = *(void *)(v23 + 48);
      char v35 = *(unsigned char *)(v23 + 56);
      *(void *)(v23 + 40) = v30;
      *(void *)(v23 + 48) = v31;
      *(unsigned char *)(v23 + 56) = v32;
      sub_249930F4C(v33, v34, v35);
    }
    else
    {
      sub_249931FAC(v23);
      long long v42 = v24[1];
      long long v41 = v24[2];
      long long v43 = *v24;
      *(_OWORD *)(v23 + 41) = *(long long *)((char *)v24 + 41);
      *(_OWORD *)(v23 + 16) = v42;
      *(_OWORD *)(v23 + 32) = v41;
      *(_OWORD *)uint64_t v23 = v43;
    }
  }
  else if (v26)
  {
    uint64_t v36 = *(void **)v24;
    *(void *)uint64_t v23 = *(void *)v24;
    *(void *)(v23 + 8) = *((void *)v24 + 1);
    *(void *)(v23 + 16) = *((void *)v24 + 2);
    *(void *)(v23 + 24) = *((void *)v24 + 3);
    *(void *)(v23 + 32) = *((void *)v24 + 4);
    uint64_t v37 = *((void *)v24 + 5);
    uint64_t v38 = *((void *)v24 + 6);
    char v39 = *((unsigned char *)v24 + 56);
    id v40 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249930CE0(v37, v38, v39);
    *(void *)(v23 + 40) = v37;
    *(void *)(v23 + 48) = v38;
    *(unsigned char *)(v23 + 56) = v39;
  }
  else
  {
    long long v44 = *v24;
    long long v45 = v24[1];
    long long v46 = v24[2];
    *(_OWORD *)(v23 + 41) = *(long long *)((char *)v24 + 41);
    *(_OWORD *)(v23 + 16) = v45;
    *(_OWORD *)(v23 + 32) = v46;
    *(_OWORD *)uint64_t v23 = v44;
  }
  *(void *)(v23 + 64) = *((void *)v24 + 8);
  uint64_t v47 = a3[13];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  *(void *)(a1 + v47) = *(void *)(a2 + v47);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v48 + 8) = *(void *)(v49 + 8);
  return a1;
}

uint64_t initializeWithTake for Layout(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = (_OWORD *)(a2 + v9);
  long long v12 = v11[4];
  long long v13 = v11[2];
  v10[3] = v11[3];
  void v10[4] = v12;
  long long v14 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v14;
  void v10[2] = v13;
  uint64_t v15 = a3[11];
  uint64_t v16 = a3[12];
  long long v17 = (_OWORD *)(a1 + v15);
  long long v18 = (_OWORD *)(a2 + v15);
  long long v19 = v18[1];
  *long long v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = a1 + v16;
  uint64_t v21 = a2 + v16;
  long long v22 = *(_OWORD *)(v21 + 48);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v21 + 32);
  *(_OWORD *)(v20 + 48) = v22;
  *(void *)(v20 + 64) = *(void *)(v21 + 64);
  long long v23 = *(_OWORD *)(v21 + 16);
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(_OWORD *)(v20 + 16) = v23;
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for Layout(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  long long v13 = (void *)(a1 + v12);
  long long v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *long long v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  uint64_t v17 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  *(_DWORD *)(v18 + 63) = *(_DWORD *)(v19 + 63);
  long long v20 = *(_OWORD *)(v19 + 48);
  *(_OWORD *)(v18 + 32) = *(_OWORD *)(v19 + 32);
  *(_OWORD *)(v18 + 48) = v20;
  long long v21 = *(_OWORD *)(v19 + 16);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *(_OWORD *)(v18 + 16) = v21;
  *(void *)(v18 + 72) = *(void *)(v19 + 72);
  uint64_t v22 = a3[11];
  uint64_t v23 = a3[12];
  uint64_t v24 = (_OWORD *)(a1 + v22);
  uint64_t v25 = (_OWORD *)(a2 + v22);
  long long v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a1 + v23;
  uint64_t v28 = a2 + v23;
  if (!*(void *)(a1 + v23 + 16)) {
    goto LABEL_5;
  }
  if (!*(void *)(v28 + 16))
  {
    sub_249931FAC(a1 + v23);
LABEL_5:
    long long v36 = *(_OWORD *)(v28 + 16);
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    *(_OWORD *)(v27 + 16) = v36;
    *(_OWORD *)(v27 + 32) = *(_OWORD *)(v28 + 32);
    *(_OWORD *)(v27 + 41) = *(_OWORD *)(v28 + 41);
    goto LABEL_6;
  }
  id v29 = *(void **)v27;
  *(void *)uint64_t v27 = *(void *)v28;

  uint64_t v30 = *(void *)(v28 + 16);
  *(void *)(v27 + 8) = *(void *)(v28 + 8);
  *(void *)(v27 + 16) = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v28 + 32);
  *(void *)(v27 + 24) = *(void *)(v28 + 24);
  *(void *)(v27 + 32) = v31;
  swift_bridgeObjectRelease();
  char v32 = *(unsigned char *)(v28 + 56);
  uint64_t v33 = *(void *)(v27 + 40);
  uint64_t v34 = *(void *)(v27 + 48);
  char v35 = *(unsigned char *)(v27 + 56);
  *(_OWORD *)(v27 + 40) = *(_OWORD *)(v28 + 40);
  *(unsigned char *)(v27 + 56) = v32;
  sub_249930F4C(v33, v34, v35);
LABEL_6:
  *(void *)(v27 + 64) = *(void *)(v28 + 64);
  uint64_t v37 = a3[13];
  uint64_t v38 = a1 + v37;
  char v39 = (void *)(a2 + v37);
  *(void *)(a1 + v37) = *v39;
  swift_bridgeObjectRelease();
  *(void *)(v38 + 8) = v39[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for Layout(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499721AC);
}

uint64_t sub_2499721AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Layout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249972288);
}

uint64_t sub_249972288(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_24997234C()
{
  uint64_t result = sub_249AEB808();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Layout.Preview(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v4 = *(unsigned char *)(a1 + 56);

  return sub_249930F4C(v2, v3, v4);
}

uint64_t initializeWithCopy for Layout.Preview(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  id v9 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_249930CE0(v6, v7, v8);
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = v8;
  return a1;
}

uint64_t assignWithCopy for Layout.Preview(uint64_t a1, void **a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  id v6 = v5;

  *(void *)(a1 + 8) = v2[1];
  *(void *)(a1 + 16) = v2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = v2[3];
  *(void *)(a1 + 32) = v2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t)v2[5];
  uint64_t v8 = (uint64_t)v2[6];
  LOBYTE(v2) = *((unsigned char *)v2 + 56);
  sub_249930CE0(v7, v8, (char)v2);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  char v11 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = (_BYTE)v2;
  sub_249930F4C(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for Layout.Preview(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  char v10 = *(unsigned char *)(a1 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = v7;
  sub_249930F4C(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Layout.Preview(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Layout.Preview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Layout.Preview()
{
  return &type metadata for Layout.Preview;
}

uint64_t destroy for Layout.Preview.AppearanceState(uint64_t a1)
{
  return sub_249930F4C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s14CarPlayAssetUI6LayoutV7PreviewV15AppearanceStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_249930CE0(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Layout.Preview.AppearanceState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_249930CE0(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_249930F4C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Layout.Preview.AppearanceState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_249930F4C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Layout.Preview.AppearanceState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Layout.Preview.AppearanceState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_249972858(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_249972860(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Layout.Preview.AppearanceState()
{
  return &type metadata for Layout.Preview.AppearanceState;
}

ValueMetadata *type metadata accessor for Layout.Preview.CodingKeys()
{
  return &type metadata for Layout.Preview.CodingKeys;
}

ValueMetadata *type metadata accessor for Layout.Preview.AppearanceState.CodingKeys()
{
  return &type metadata for Layout.Preview.AppearanceState.CodingKeys;
}

unsigned char *_s14CarPlayAssetUI10LayoutTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249972968);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Layout.Preview.AppearanceState.DynamicCodingKeys()
{
  return &type metadata for Layout.Preview.AppearanceState.DynamicCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Layout.Preview.AppearanceState.DarkOnlyCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249972A3CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Layout.Preview.AppearanceState.DarkOnlyCodingKeys()
{
  return &type metadata for Layout.Preview.AppearanceState.DarkOnlyCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Layout.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249972B40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Layout.CodingKeys()
{
  return &type metadata for Layout.CodingKeys;
}

unint64_t sub_249972B7C()
{
  unint64_t result = qword_2696E0E78;
  if (!qword_2696E0E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E78);
  }
  return result;
}

unint64_t sub_249972BD4()
{
  unint64_t result = qword_2696E0E80;
  if (!qword_2696E0E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E80);
  }
  return result;
}

unint64_t sub_249972C2C()
{
  unint64_t result = qword_2696E0E88;
  if (!qword_2696E0E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E88);
  }
  return result;
}

unint64_t sub_249972C84()
{
  unint64_t result = qword_2696E0E90;
  if (!qword_2696E0E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E90);
  }
  return result;
}

unint64_t sub_249972CDC()
{
  unint64_t result = qword_2696E0E98;
  if (!qword_2696E0E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0E98);
  }
  return result;
}

unint64_t sub_249972D34()
{
  unint64_t result = qword_2696E0EA0;
  if (!qword_2696E0EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0EA0);
  }
  return result;
}

unint64_t sub_249972D8C()
{
  unint64_t result = qword_2696E0EA8;
  if (!qword_2696E0EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0EA8);
  }
  return result;
}

unint64_t sub_249972DE4()
{
  unint64_t result = qword_2696E0EB0;
  if (!qword_2696E0EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0EB0);
  }
  return result;
}

unint64_t sub_249972E3C()
{
  unint64_t result = qword_2696E0EB8;
  if (!qword_2696E0EB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0EB8);
  }
  return result;
}

unint64_t sub_249972E94()
{
  unint64_t result = qword_2696E0EC0;
  if (!qword_2696E0EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0EC0);
  }
  return result;
}

unint64_t sub_249972EEC()
{
  unint64_t result = qword_2696E0EC8;
  if (!qword_2696E0EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0EC8);
  }
  return result;
}

unint64_t sub_249972F44()
{
  unint64_t result = qword_2696E0ED0;
  if (!qword_2696E0ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0ED0);
  }
  return result;
}

unint64_t sub_249972F9C()
{
  unint64_t result = qword_2696E0ED8;
  if (!qword_2696E0ED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0ED8);
  }
  return result;
}

unint64_t sub_249972FF4()
{
  unint64_t result = qword_2696E0EE0;
  if (!qword_2696E0EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0EE0);
  }
  return result;
}

unint64_t sub_24997304C()
{
  unint64_t result = qword_2696E0EE8;
  if (!qword_2696E0EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0EE8);
  }
  return result;
}

uint64_t sub_2499730A0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4E79616C70736964 && a2 == 0xEB00000000656D61 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x745374756F79616CLL && a2 == 0xED00004449656C79 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x795474756F79616CLL && a2 == 0xEA00000000006570 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x49556D6574737973 && a2 == 0xEE0074756F79614CLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xEE00737465736E49 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x77656976657270 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x657061706C6C6177 && a2 == 0xEA00000000007372)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_24997354C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x63696D616E7964 && a2 == 0xE700000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x796C6E4F6B726164 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_249973640(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746867696CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1802658148 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24997371C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6567616B636170 && a2 == 0xE700000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6574617473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_249973808()
{
  unint64_t result = qword_2696E0EF0;
  if (!qword_2696E0EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0EF0);
  }
  return result;
}

uint64_t sub_24997385C(_OWORD *a1)
{
  return sub_249967F4C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_249973878(_OWORD *a1)
{
  return sub_249967D1C(a1, *(uint64_t **)(v1 + 16));
}

CarPlayAssetUI::DriverAssistanceLabelState_optional __swiftcall DriverAssistanceLabelState.init(rawValue:)(Swift::Int rawValue)
{
  unsigned int v2 = 0x2010003u >> (8 * rawValue);
  if ((unint64_t)rawValue >= 4) {
    LOBYTE(v2) = 3;
  }
  *uint64_t v1 = v2;
  return (CarPlayAssetUI::DriverAssistanceLabelState_optional)rawValue;
}

uint64_t DriverAssistanceLabelState.rawValue.getter()
{
  return *v0 + 1;
}

CarPlayAssetUI::DriverAssistanceLabelState_optional sub_2499738C4(Swift::Int *a1)
{
  return DriverAssistanceLabelState.init(rawValue:)(*a1);
}

void DriverAssistanceDataIdentifiers.cruiseControlSpeedDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *DriverAssistanceDataIdentifiers.cruiseControlSpeedDataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.cruiseControlSpeedDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.cruiseControlStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *DriverAssistanceDataIdentifiers.cruiseControlStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.cruiseControlStateDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.speedDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *DriverAssistanceDataIdentifiers.speedDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.speedDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.speedUnitDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *DriverAssistanceDataIdentifiers.speedUnitDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.speedUnitDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.speedMaxDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 4);
}

unsigned char *DriverAssistanceDataIdentifiers.speedMaxDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.speedMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.speedLimitedDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 5);
}

unsigned char *DriverAssistanceDataIdentifiers.speedLimitedDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 5) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.speedLimitedDataIdentifier.modify())()
{
  return nullsub_1;
}

void DriverAssistanceDataIdentifiers.uiSceneStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 6);
}

unsigned char *DriverAssistanceDataIdentifiers.uiSceneStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 6) = *result;
  return result;
}

uint64_t (*DriverAssistanceDataIdentifiers.uiSceneStateDataIdentifier.modify())()
{
  return nullsub_1;
}

unsigned char *DriverAssistanceDataIdentifiers.init(cruiseControlSpeedDataIdentifier:cruiseControlStateDataIdentifier:speedDataIdentifier:speedUnitDataIdentifier:speedMaxDataIdentifier:speedLimitedDataIdentifier:uiSceneStateDataIdentifier:)@<X0>(unsigned char *result@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, char *a5@<X4>, char *a6@<X5>, char *a7@<X6>, unsigned char *a8@<X8>)
{
  char v8 = *a2;
  char v9 = *a3;
  char v10 = *a4;
  char v11 = *a5;
  char v12 = *a6;
  char v13 = *a7;
  *a8 = *result;
  a8[1] = v8;
  a8[2] = v9;
  a8[3] = v10;
  a8[4] = v11;
  a8[5] = v12;
  a8[6] = v13;
  return result;
}

uint64_t DriverAssistanceDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_249973C30(char a1)
{
  unint64_t result = 0xD000000000000020;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000020;
      break;
    case 2:
      unint64_t result = 0xD000000000000013;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000016;
      break;
    case 5:
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249973D00()
{
  return sub_249973C30(*v0);
}

uint64_t sub_249973D08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249974E34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249973D30(uint64_t a1)
{
  unint64_t v2 = sub_2499748FC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249973D6C(uint64_t a1)
{
  unint64_t v2 = sub_2499748FC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DriverAssistanceDataIdentifiers.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0EF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v20 = v1[2];
  int v21 = v9;
  int v10 = v1[3];
  int v18 = v1[4];
  int v19 = v10;
  int v11 = v1[5];
  int v16 = v1[6];
  int v17 = v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499748FC();
  sub_249AEE468();
  char v35 = v8;
  char v34 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v12 = v19;
    char v13 = v20;
    char v14 = v18;
    char v33 = v21;
    char v32 = 1;
    sub_249AEDF08();
    char v31 = v13;
    char v30 = 2;
    sub_249AEDF08();
    char v29 = v12;
    char v28 = 3;
    sub_249AEDF08();
    char v27 = v14;
    char v26 = 4;
    sub_249AEDF08();
    char v25 = v17;
    char v24 = 5;
    sub_249AEDF08();
    char v23 = v16;
    char v22 = 6;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DriverAssistanceDataIdentifiers.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t DriverAssistanceDataIdentifiers.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0F08);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499748FC();
  sub_249AEE428();
  if (!v2)
  {
    char v34 = 0;
    sub_24989C988();
    sub_249AEDE08();
    int v9 = v35;
    char v32 = 1;
    sub_249AEDE08();
    int v21 = v9;
    int v10 = v33;
    char v30 = 2;
    sub_249AEDE08();
    int v20 = v10;
    int v11 = v31;
    char v28 = 3;
    sub_249AEDE08();
    int v19 = v11;
    int v12 = v29;
    char v26 = 4;
    sub_249AEDE08();
    int v18 = v12;
    char v13 = v27;
    char v24 = 5;
    sub_249AEDE08();
    char v14 = v25;
    char v23 = 6;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0F10);
    sub_249974950();
    sub_249AEDDA8();
    if (v22 == 57) {
      char v16 = 56;
    }
    else {
      char v16 = v22;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v21;
    a2[1] = v20;
    a2[2] = v19;
    a2[3] = v18;
    a2[4] = v13;
    a2[5] = v14;
    a2[6] = v16;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249974434@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return DriverAssistanceDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_24997444C(void *a1)
{
  return DriverAssistanceDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_249974464()
{
  return sub_249AEE388();
}

uint64_t sub_2499744C4()
{
  return sub_249AEE388();
}

uint64_t _s14CarPlayAssetUI31DriverAssistanceDataIdentifiersV2eeoiySbAC_ACtFZ_0()
{
  unint64_t v0 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == InstrumentDataIdentifier.rawValue.getter() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v4 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v4 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v6 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v8 = v7;
  if (v6 == InstrumentDataIdentifier.rawValue.getter() && v8 == v9)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v10 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v11 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v13 = v12;
  if (v11 == InstrumentDataIdentifier.rawValue.getter() && v13 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v15 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v15 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v16 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v18 = v17;
  if (v16 == InstrumentDataIdentifier.rawValue.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v20 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v20 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v21 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v23 = v22;
  if (v21 == InstrumentDataIdentifier.rawValue.getter() && v23 == v24)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v25 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v25 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v26 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v28 = v27;
  if (v26 == InstrumentDataIdentifier.rawValue.getter() && v28 == v29)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v30 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v5 = 0;
    if ((v30 & 1) == 0) {
      return v5 & 1;
    }
  }
  unint64_t v31 = InstrumentDataIdentifier.rawValue.getter();
  uint64_t v33 = v32;
  if (v31 == InstrumentDataIdentifier.rawValue.getter() && v33 == v34) {
    char v5 = 1;
  }
  else {
    char v5 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_2499748FC()
{
  unint64_t result = qword_2696E0F00;
  if (!qword_2696E0F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F00);
  }
  return result;
}

unint64_t sub_249974950()
{
  unint64_t result = qword_2696E0F18;
  if (!qword_2696E0F18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F18);
  }
  return result;
}

unint64_t sub_2499749B0()
{
  unint64_t result = qword_2696E0F20;
  if (!qword_2696E0F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F20);
  }
  return result;
}

unint64_t sub_249974A08()
{
  unint64_t result = qword_2696E0F28;
  if (!qword_2696E0F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F28);
  }
  return result;
}

uint64_t sub_249974A5C@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 6);
  return result;
}

unsigned char *sub_249974A68(unsigned char *result, uint64_t a2)
{
  *(unsigned char *)(a2 + 6) = *result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for DriverAssistanceLabelState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249974B40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DriverAssistanceLabelState()
{
  return &type metadata for DriverAssistanceLabelState;
}

_DWORD *__swift_memcpy7_1(_DWORD *result, int *a2)
{
  int v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TemperatureDataIdentifiers(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC8 && a1[7]) {
    return (*(_DWORD *)a1 + 200);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 0x39;
  int v5 = v3 - 57;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TemperatureDataIdentifiers(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC7)
  {
    *(unsigned char *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 200;
    if (a3 >= 0xC8) {
      *(unsigned char *)(result + 7) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC8) {
      *(unsigned char *)(result + 7) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 56;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DriverAssistanceDataIdentifiers()
{
  return &type metadata for DriverAssistanceDataIdentifiers;
}

unsigned char *storeEnumTagSinglePayload for DriverAssistanceDataIdentifiers.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249974CF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DriverAssistanceDataIdentifiers.CodingKeys()
{
  return &type metadata for DriverAssistanceDataIdentifiers.CodingKeys;
}

unint64_t sub_249974D30()
{
  unint64_t result = qword_2696E0F30;
  if (!qword_2696E0F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F30);
  }
  return result;
}

unint64_t sub_249974D88()
{
  unint64_t result = qword_2696E0F38;
  if (!qword_2696E0F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F38);
  }
  return result;
}

unint64_t sub_249974DE0()
{
  unint64_t result = qword_2696E0F40;
  if (!qword_2696E0F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F40);
  }
  return result;
}

uint64_t sub_249974E34(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000020 && a2 == 0x8000000249B15D70 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000249B15DA0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000249B15DD0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000249B15DF0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000249B15E10 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000249B15E30 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000249B15E50)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v5) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void TemperatureDataIdentifiers.dataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *TemperatureDataIdentifiers.dataIdentifier.setter(unsigned char *result)
{
  *uint64_t v1 = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.dataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.temperatureMinDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

unsigned char *TemperatureDataIdentifiers.temperatureMinDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 1) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.temperatureMinDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.temperatureMaxDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *TemperatureDataIdentifiers.temperatureMaxDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.temperatureMaxDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.temperatureStateDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 3);
}

unsigned char *TemperatureDataIdentifiers.temperatureStateDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 3) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.temperatureStateDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.coldTemperatureMarkerDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 4);
}

unsigned char *TemperatureDataIdentifiers.coldTemperatureMarkerDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 4) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.coldTemperatureMarkerDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.hotTemperatureMarkerDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 5);
}

unsigned char *TemperatureDataIdentifiers.hotTemperatureMarkerDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 5) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.hotTemperatureMarkerDataIdentifier.modify())()
{
  return nullsub_1;
}

void TemperatureDataIdentifiers.temperatureUnitDataIdentifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 6);
}

unsigned char *TemperatureDataIdentifiers.temperatureUnitDataIdentifier.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 6) = *result;
  return result;
}

uint64_t (*TemperatureDataIdentifiers.temperatureUnitDataIdentifier.modify())()
{
  return nullsub_1;
}

unint64_t TemperatureDataIdentifiers.description.getter()
{
  unint64_t v0 = InstrumentDataIdentifier.rawValue.getter();
  unint64_t v2 = sub_249AE34DC(v0, v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t TemperatureDataIdentifiers.hash(into:)()
{
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  InstrumentDataIdentifier.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

unint64_t sub_249975450(char a1)
{
  unint64_t result = 0x6E65644961746164;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 4:
      unint64_t result = 0xD000000000000023;
      break;
    case 5:
      unint64_t result = 0xD000000000000022;
      break;
    case 6:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249975544()
{
  return sub_249975450(*v0);
}

uint64_t sub_24997554C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249976054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249975574(uint64_t a1)
{
  unint64_t v2 = sub_249975D8C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499755B0(uint64_t a1)
{
  unint64_t v2 = sub_249975D8C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TemperatureDataIdentifiers.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0F48);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v9 = v1[1];
  int v20 = v1[2];
  int v21 = v9;
  int v10 = v1[3];
  int v18 = v1[4];
  int v19 = v10;
  int v11 = v1[5];
  int v16 = v1[6];
  int v17 = v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249975D8C();
  sub_249AEE468();
  char v35 = v8;
  char v34 = 0;
  sub_24989C934();
  sub_249AEDF08();
  if (!v2)
  {
    char v12 = v19;
    char v13 = v20;
    char v14 = v18;
    char v33 = v21;
    char v32 = 1;
    sub_249AEDF08();
    char v31 = v13;
    char v30 = 2;
    sub_249AEDF08();
    char v29 = v12;
    char v28 = 3;
    sub_249AEDF08();
    char v27 = v14;
    char v26 = 4;
    sub_249AEDF08();
    char v25 = v17;
    char v24 = 5;
    sub_249AEDF08();
    char v23 = v16;
    char v22 = 6;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TemperatureDataIdentifiers.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t TemperatureDataIdentifiers.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0F58);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249975D8C();
  sub_249AEE428();
  if (!v2)
  {
    char v32 = 0;
    sub_24989C988();
    sub_249AEDE08();
    int v9 = v33;
    char v30 = 1;
    sub_249AEDE08();
    int v19 = v9;
    int v10 = v31;
    char v28 = 2;
    sub_249AEDE08();
    int v18 = v10;
    int v11 = v29;
    char v26 = 3;
    sub_249AEDE08();
    int v17 = v11;
    int v12 = v27;
    char v24 = 4;
    sub_249AEDE08();
    int v16 = v12;
    LOBYTE(v12) = v25;
    char v22 = 5;
    sub_249AEDE08();
    HIDWORD(v15) = v23;
    char v20 = 6;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v14 = v21;
    *a2 = v19;
    a2[1] = v18;
    a2[2] = v17;
    a2[3] = v16;
    a2[4] = v12;
    a2[5] = BYTE4(v15);
    a2[6] = v14;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249975C64@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return TemperatureDataIdentifiers.init(from:)(a1, a2);
}

uint64_t sub_249975C7C(void *a1)
{
  return TemperatureDataIdentifiers.encode(to:)(a1);
}

uint64_t sub_249975C94()
{
  return sub_249AEE388();
}

uint64_t sub_249975CF4()
{
  return sub_249AEE388();
}

double static TemperatureDataIdentifiers.engineTemperature.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 404034579;
  *(_DWORD *)a1 = 404034579;
  *(_WORD *)(a1 + 4) = 5910;
  *(unsigned char *)(a1 + 6) = 44;
  return result;
}

double static TemperatureDataIdentifiers.batteryTemperature.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = 84017408;
  *(_DWORD *)a1 = 84017408;
  *(_WORD *)(a1 + 4) = 1027;
  *(unsigned char *)(a1 + 6) = 44;
  return result;
}

unint64_t sub_249975D8C()
{
  unint64_t result = qword_2696E0F50;
  if (!qword_2696E0F50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F50);
  }
  return result;
}

unint64_t sub_249975DE4()
{
  unint64_t result = qword_2696E0F60;
  if (!qword_2696E0F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F60);
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureDataIdentifiers()
{
  return &type metadata for TemperatureDataIdentifiers;
}

unsigned char *storeEnumTagSinglePayload for TemperatureDataIdentifiers.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249975F14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureDataIdentifiers.CodingKeys()
{
  return &type metadata for TemperatureDataIdentifiers.CodingKeys;
}

unint64_t sub_249975F50()
{
  unint64_t result = qword_2696E0F68;
  if (!qword_2696E0F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F68);
  }
  return result;
}

unint64_t sub_249975FA8()
{
  unint64_t result = qword_2696E0F70;
  if (!qword_2696E0F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F70);
  }
  return result;
}

unint64_t sub_249976000()
{
  unint64_t result = qword_2696E0F78;
  if (!qword_2696E0F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F78);
  }
  return result;
}

uint64_t sub_249976054(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEE00726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B150A0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000249B150C0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000249B15E70 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x8000000249B15E90 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000249B15EC0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000249B15EF0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_249976320()
{
  return sub_249AEE388();
}

uint64_t Instrument.native.getter()
{
  uint64_t v1 = type metadata accessor for Instrument();
  sub_2498A4990(v0 + *(int *)(v1 + 20), (uint64_t)v5);
  sub_2498A4990((uint64_t)v5, (uint64_t)v6);
  int v2 = sub_2498B8790((uint64_t)v6);
  uint64_t result = 0;
  switch(v2)
  {
    case 1:
      uint64_t result = *(unsigned __int8 *)(sub_2498B87AC((uint64_t)v6) + 496);
      break;
    case 2:
      BOOL v4 = (~*(_DWORD *)(sub_2498B87AC((uint64_t)v6) + 40) & 0xFELL) == 0;
      goto LABEL_6;
    case 3:
    case 4:
    case 5:
      sub_2498B87AC((uint64_t)v6);
      uint64_t result = 1;
      break;
    case 8:
      BOOL v4 = *(void *)(sub_2498B87AC((uint64_t)v6) + 8) == 0;
LABEL_6:
      uint64_t result = !v4;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t type metadata accessor for Instrument()
{
  uint64_t result = qword_2696E1100;
  if (!qword_2696E1100) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2499765C0()
{
  int64_t v0 = *(void *)(sub_2499679BC() + 16);
  if (v0)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_249A21F10(0, v0, 0);
    uint64_t v1 = 0;
    uint64_t v2 = v11;
    do
    {
      uint64_t v3 = sub_249AED128();
      uint64_t v5 = v4;
      unint64_t v7 = *(void *)(v11 + 16);
      unint64_t v6 = *(void *)(v11 + 24);
      if (v7 >= v6 >> 1) {
        sub_249A21F10(v6 > 1, v7 + 1, 1);
      }
      ++v1;
      *(void *)(v11 + 16) = v7 + 1;
      unint64_t v8 = v11 + 16 * v7;
      *(void *)(v8 + 32) = v3;
      *(void *)(v8 + 40) = v5;
    }
    while (v0 != v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = MEMORY[0x263F8EE78];
  }
  uint64_t v9 = sub_2498DA294(v2);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t Instrument.Kind.appBundleId.getter()
{
  sub_2498A4990(v0, (uint64_t)v3);
  sub_2498A4990((uint64_t)v3, (uint64_t)v4);
  if (sub_2498B8790((uint64_t)v4) != 6) {
    return 0;
  }
  uint64_t v1 = *(void *)sub_2498B87AC((uint64_t)v4);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.init(id:kind:backgroundColor:shadowID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  int v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  char v14 = (char *)&v32 - v13;
  sub_2498A4990(a2, (uint64_t)v40);
  sub_249AEB7F8();
  sub_2498D6084((uint64_t)v14, (uint64_t)v12, &qword_2696DF438);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_2696E2ED8;
  sub_2498D60E8((uint64_t)v14, &qword_2696DF438);
  sub_249882788((uint64_t)v12, a6, &qword_2696DF438);
  uint64_t v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440) + 52);
  *(void *)(a6 + v16) = v15;
  uint64_t v17 = v35;
  sub_2498D6084(v35, (uint64_t)v14, &qword_2696DF438);
  sub_2498D60E8(a6, &qword_2696DF440);
  sub_2498D6084((uint64_t)v14, (uint64_t)v12, &qword_2696DF438);
  uint64_t v18 = qword_2696E2ED8;
  sub_2498D60E8((uint64_t)v14, &qword_2696DF438);
  sub_249882788((uint64_t)v12, a6, &qword_2696DF438);
  *(void *)(a6 + v16) = v18;
  uint64_t v19 = type metadata accessor for Instrument();
  sub_2498A4990((uint64_t)v40, a6 + *(int *)(v19 + 20));
  uint64_t v20 = a6 + *(int *)(v19 + 24);
  *(void *)uint64_t v20 = a3;
  *(_WORD *)(v20 + 24) = 256;
  uint64_t v21 = v34;
  *(void *)(v20 + 32) = v33;
  *(void *)(v20 + 40) = v21;
  sub_2498A4990((uint64_t)v40, (uint64_t)v41);
  swift_retain();
  sub_2498FC9D8(v40, sub_2498FB4B4);
  *(void *)(v20 + 8) = Instrument.Kind.defaultVerifierIdentifier.getter();
  *(void *)(v20 + 16) = v22;
  sub_2498A4990((uint64_t)v40, (uint64_t)v41);
  if (sub_2498B8790((uint64_t)v41) != 1)
  {
    sub_2498FC9D8(v40, sub_2498FB4B4);
    goto LABEL_8;
  }
  unsigned __int8 v23 = (void *)sub_2498B87AC((uint64_t)v41);
  sub_2499441A8(v23, v38);
  if (sub_249944500((uint64_t)v38) != 3
    || (uint64_t v24 = sub_24994451C((uint64_t)v38), sub_249944658(v24, (uint64_t)v37), sub_24994AD58((uint64_t)v37)))
  {
    sub_2498A4990((uint64_t)v40, (uint64_t)v39);
    uint64_t v25 = sub_2498B87AC((uint64_t)v39);
    sub_249944360(v25);
LABEL_8:
    swift_release();
LABEL_9:
    char v26 = 0;
    goto LABEL_10;
  }
  char v36 = *(unsigned char *)sub_24994AD64((uint64_t)v37);
  if (InstrumentDataIdentifier.rawValue.getter() == 0x53656C6369686576 && v28 == 0xEC00000064656570)
  {
    sub_2498A4990((uint64_t)v40, (uint64_t)v39);
    uint64_t v29 = sub_2498B87AC((uint64_t)v39);
    sub_249944360(v29);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v30 = sub_249AEE0D8();
    sub_2498A4990((uint64_t)v40, (uint64_t)v39);
    uint64_t v31 = sub_2498B87AC((uint64_t)v39);
    sub_249944360(v31);
    swift_release();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0) {
      goto LABEL_9;
    }
  }
  char v26 = 1;
LABEL_10:
  sub_2498D60E8(v17, &qword_2696DF438);
  sub_2498FC9D8(v40, sub_2498FCAAC);
  *(unsigned char *)(v20 + 24) = v26;
  sub_2498A4990((uint64_t)v40, (uint64_t)v39);
  uint64_t result = sub_2498B8790((uint64_t)v39);
  if (result == 9)
  {
LABEL_13:
    *(unsigned char *)(v20 + 25) = 0;
    return result;
  }
  if (result == 2)
  {
    sub_2498B87AC((uint64_t)v39);
    uint64_t result = sub_2498FC9D8(v40, sub_2498FCAAC);
    goto LABEL_13;
  }
  return sub_2498FC9D8(v40, sub_2498FCAAC);
}

uint64_t sub_249976BAC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1228);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - v12;
  char v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0FB0);
  sub_2499811DC(&qword_2696E1120, &qword_2696DF438);
  uint64_t result = sub_249AEDDA8();
  if (!v2)
  {
    uint64_t v15 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_2498D60E8((uint64_t)v6, &qword_2696E1228);
      uint64_t v16 = v15;
      sub_249AEB7F8();
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_2696E2ED8;
    }
    else
    {
      sub_249882788((uint64_t)v6, (uint64_t)v13, &qword_2696DF438);
      sub_2498D6084((uint64_t)v13, (uint64_t)v11, &qword_2696DF438);
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_2696E2ED8;
      sub_2498D60E8((uint64_t)v13, &qword_2696DF438);
      uint64_t v18 = (uint64_t)v11;
      uint64_t v16 = v15;
      sub_249882788(v18, v15, &qword_2696DF438);
    }
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)(v16 + *(int *)(result + 52)) = v17;
  }
  return result;
}

uint64_t sub_249976E64@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1210);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - v12;
  char v21 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1218);
  sub_2499811DC(&qword_2696E1220, &qword_2696DF408);
  uint64_t result = sub_249AEDDA8();
  if (!v2)
  {
    uint64_t v15 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_2498D60E8((uint64_t)v6, &qword_2696E1210);
      uint64_t v16 = v15;
      sub_249AEB7F8();
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_2696E2ED8;
    }
    else
    {
      sub_249882788((uint64_t)v6, (uint64_t)v13, &qword_2696DF408);
      sub_2498D6084((uint64_t)v13, (uint64_t)v11, &qword_2696DF408);
      if (qword_2696DD758 != -1) {
        swift_once();
      }
      uint64_t v17 = qword_2696E2ED8;
      sub_2498D60E8((uint64_t)v13, &qword_2696DF408);
      uint64_t v18 = (uint64_t)v11;
      uint64_t v16 = v15;
      sub_249882788(v18, v15, &qword_2696DF408);
    }
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
    *(void *)(v16 + *(int *)(result + 52)) = v17;
  }
  return result;
}

uint64_t Instrument.restoreAssets(from:)(void *a1)
{
  return Instrument.Kind.restoreAssets(from:)(a1);
}

uint64_t Instrument.Configuration.backgroundColor.getter()
{
  return swift_retain();
}

uint64_t Instrument.Configuration.backgroundColor.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Instrument.Configuration.backgroundColor.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.Configuration.verifierIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.Configuration.verifierIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 8) = a1;
  *(void *)(v2 + 16) = a2;
  return result;
}

uint64_t (*Instrument.Configuration.verifierIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.Configuration.persistent.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t Instrument.Configuration.persistent.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 24) = result;
  return result;
}

uint64_t (*Instrument.Configuration.persistent.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.Configuration.clipsToShape.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t Instrument.Configuration.clipsToShape.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

uint64_t (*Instrument.Configuration.clipsToShape.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.Configuration.shadowID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Instrument.Configuration.shadowID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*Instrument.Configuration.shadowID.modify())()
{
  return nullsub_1;
}

unint64_t sub_249977328()
{
  unint64_t result = 0x756F72676B636162;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x6574736973726570;
      break;
    case 3:
      unint64_t result = 0x536F547370696C63;
      break;
    case 4:
      unint64_t result = 0x4449776F64616873;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2499773F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499832CC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249977418(uint64_t a1)
{
  unint64_t v2 = sub_24997E9B0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249977454(uint64_t a1)
{
  unint64_t v2 = sub_24997E9B0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.Configuration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0F80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v15 = v1[2];
  uint64_t v16 = v8;
  LODWORD(v8) = *((unsigned __int8 *)v1 + 24);
  int v13 = *((unsigned __int8 *)v1 + 25);
  int v14 = v8;
  uint64_t v10 = v1[4];
  v12[0] = v1[5];
  v12[1] = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24997E9B0();
  sub_249AEE468();
  uint64_t v22 = v9;
  char v21 = 0;
  sub_24988CC10();
  sub_249AEDF08();
  if (!v2)
  {
    char v20 = 1;
    sub_249AEDE58();
    char v19 = 2;
    sub_249AEDEC8();
    char v18 = 3;
    sub_249AEDEC8();
    char v17 = 4;
    sub_249AEDE58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.Configuration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0F90);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24997E9B0();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v27 = 0;
    sub_24988CBBC();
    sub_249AEDE08();
    uint64_t v9 = v28;
    char v26 = 1;
    swift_retain();
    uint64_t v10 = sub_249AEDD58();
    uint64_t v12 = v11;
    uint64_t v22 = v10;
    char v25 = 2;
    swift_bridgeObjectRetain();
    int v21 = sub_249AEDDC8();
    char v24 = 3;
    int v20 = sub_249AEDDC8();
    char v23 = 4;
    uint64_t v13 = sub_249AEDD58();
    uint64_t v15 = v14;
    v20 &= 1u;
    v21 &= 1u;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v19 = v13;
    v16(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v17 = v22;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v17;
    *(void *)(a2 + 16) = v12;
    *(unsigned char *)(a2 + 24) = v21;
    *(unsigned char *)(a2 + 25) = v20;
    *(void *)(a2 + 32) = v19;
    *(void *)(a2 + 40) = v15;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_2499779D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.Configuration.init(from:)(a1, a2);
}

uint64_t sub_2499779EC(void *a1)
{
  return Instrument.Configuration.encode(to:)(a1);
}

uint64_t Instrument.NavigationStyle.description.getter()
{
  if (*v0) {
    return 0x726143206E727554;
  }
  else {
    return 7364941;
  }
}

CarPlayAssetUI::Instrument::NavigationStyle_optional __swiftcall Instrument.NavigationStyle.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  char *v2 = v5;
  return result;
}

void *static Instrument.NavigationStyle.allCases.getter()
{
  return &unk_26FDA16B8;
}

uint64_t Instrument.NavigationStyle.rawValue.getter()
{
  if (*v0) {
    return 0x647261436E727574;
  }
  else {
    return 7364973;
  }
}

uint64_t sub_249977AE0(char *a1, char *a2)
{
  return sub_2498F1DD4(*a1, *a2);
}

CarPlayAssetUI::Instrument::NavigationStyle_optional sub_249977AEC(Swift::String *a1)
{
  return Instrument.NavigationStyle.init(rawValue:)(*a1);
}

void sub_249977AF8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7364973;
  if (*v1) {
    uint64_t v2 = 0x647261436E727574;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

void sub_249977B30(void *a1@<X8>)
{
  *a1 = &unk_26FDA1428;
}

uint64_t sub_249977B40()
{
  return sub_249AED3A8();
}

uint64_t sub_249977BA0()
{
  return sub_249AED348();
}

uint64_t sub_249977BF0()
{
  return sub_249AEE388();
}

uint64_t sub_249977C6C()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249977CD4()
{
  return sub_249AEE388();
}

uint64_t sub_249977D4C()
{
  if (*v0) {
    return 0x726143206E727554;
  }
  else {
    return 7364941;
  }
}

uint64_t Instrument.PunchThroughType.description.getter()
{
  return 0x676E6974746553;
}

uint64_t Instrument.PunchThroughType.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void *static Instrument.PunchThroughType.allCases.getter()
{
  return &unk_26FDA1718;
}

uint64_t Instrument.PunchThroughType.rawValue.getter()
{
  return 0x676E6974746573;
}

uint64_t sub_249977E18@<X0>(BOOL *a1@<X8>)
{
  return sub_24997C478(a1);
}

void sub_249977E24(void *a1@<X8>)
{
  *a1 = 0x676E6974746573;
  a1[1] = 0xE700000000000000;
}

void sub_249977E40(void *a1@<X8>)
{
  *a1 = &unk_26FDA1450;
}

uint64_t sub_249977E50()
{
  return sub_249AED3A8();
}

uint64_t sub_249977EB0()
{
  return sub_249AED348();
}

uint64_t sub_249977F00()
{
  return sub_24997C3B0();
}

uint64_t sub_249977F18()
{
  return sub_249AECF78();
}

uint64_t sub_249977F30()
{
  return sub_24997C420();
}

uint64_t sub_249977F48()
{
  return 0x676E6974746553;
}

unint64_t Instrument.Kind.icon.getter()
{
  sub_2498A4990(v0, (uint64_t)v4);
  sub_2498A4990((uint64_t)v4, (uint64_t)v5);
  int v1 = sub_2498B8790((uint64_t)v5);
  unint64_t result = 0xD000000000000016;
  unint64_t v3 = 0x637269632E70616DLL;
  switch(v1)
  {
    case 1:
      unint64_t v3 = 0x6567756167;
      goto LABEL_10;
    case 2:
    case 8:
      unint64_t v3 = 0xD000000000000018;
      goto LABEL_10;
    case 3:
      unint64_t v3 = 0x6F65646976;
      goto LABEL_10;
    case 4:
      unint64_t v3 = 0x616C75636F6E6962;
      goto LABEL_10;
    case 5:
      unint64_t v3 = 0x616C75636F6E6962;
      goto LABEL_10;
    case 6:
      unint64_t v3 = 0xD000000000000011;
      goto LABEL_10;
    case 7:
      unint64_t v3 = 0xD000000000000012;
      goto LABEL_10;
    case 9:
      return result;
    default:
LABEL_10:
      sub_2498B87AC((uint64_t)v5);
      return v3;
  }
}

uint64_t Instrument.Kind.shortName.getter()
{
  sub_2498A4990(v0, (uint64_t)v4);
  sub_2498A4990((uint64_t)v4, (uint64_t)v5);
  int v1 = sub_2498B8790((uint64_t)v5);
  uint64_t v2 = 0x697461676976614ELL;
  uint64_t result = 1970169165;
  switch(v1)
  {
    case 1:
      uint64_t v2 = 0x6567756147;
      goto LABEL_10;
    case 2:
      uint64_t v2 = 0x6F74616369646E49;
      goto LABEL_10;
    case 3:
      uint64_t v2 = 0x7453207475706E49;
      goto LABEL_10;
    case 4:
      uint64_t v2 = 0x746E656449205450;
      goto LABEL_10;
    case 5:
      uint64_t v2 = 0x65707954205450;
      goto LABEL_10;
    case 6:
      uint64_t v2 = 7368769;
      goto LABEL_10;
    case 7:
      uint64_t v2 = 0x746567646957;
      goto LABEL_10;
    case 8:
      uint64_t v2 = 0x5020746567646957;
      goto LABEL_10;
    case 9:
      return result;
    default:
LABEL_10:
      sub_2498B87AC((uint64_t)v5);
      return v2;
  }
}

unint64_t Instrument.Kind.name.getter()
{
  sub_2498A4990(v0, (uint64_t)v19);
  sub_2498A4990((uint64_t)v19, (uint64_t)v20);
  int v1 = sub_2498B8790((uint64_t)v20);
  unint64_t result = 1970169165;
  switch(v1)
  {
    case 1:
      unint64_t v3 = (void *)sub_2498B87AC((uint64_t)v20);
      uint64_t v17 = 0x28206567756147;
      unint64_t v18 = 0xE700000000000000;
      sub_2499441A8(v3, &__dst);
      sub_2498FC9D8(v19, sub_2498FB4B4);
      Instrument.GaugeStyle.description.getter();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      sub_2498FC9D8(v19, sub_2498FCAAC);
      return v17;
    case 2:
      *(void *)&long long __dst = 0x6F74616369646E49;
      *((void *)&__dst + 1) = 0xEB00000000282072;
      LOBYTE(v17) = *(unsigned char *)sub_2498B87AC((uint64_t)v20);
      unint64_t v4 = InstrumentDataIdentifier.rawValue.getter();
      unint64_t v6 = v5;
      sub_2498FC9D8(v19, sub_2498FB4B4);
      sub_249AE34DC(v4, v6);
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      goto LABEL_15;
    case 3:
      sub_2498B87AC((uint64_t)v20);
      *(void *)&long long __dst = 0;
      *((void *)&__dst + 1) = 0xE000000000000000;
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      unint64_t v7 = 0x7453207475706E49;
      unint64_t v8 = 0xEE0028206D616572;
      goto LABEL_7;
    case 4:
      sub_2498B87AC((uint64_t)v20);
      *(void *)&long long __dst = 0;
      *((void *)&__dst + 1) = 0xE000000000000000;
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xD00000000000001ALL;
      unint64_t v8 = 0x8000000249B15FF0;
LABEL_7:
      *(void *)&long long __dst = v7;
      *((void *)&__dst + 1) = v8;
      sub_249AED1E8();
      goto LABEL_13;
    case 5:
      sub_2498B87AC((uint64_t)v20);
      *(void *)&long long __dst = 0;
      *((void *)&__dst + 1) = 0xE000000000000000;
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      return 0xD00000000000001CLL;
    case 6:
      uint64_t v9 = sub_2498B87AC((uint64_t)v20);
      long long v13 = *(_OWORD *)v9;
      uint64_t v10 = *(void *)(v9 + 16);
      uint64_t v11 = *(void *)(v9 + 24);
      uint64_t v17 = 0;
      unint64_t v18 = 0xE000000000000000;
      sub_249AED1E8();
      long long __dst = v13;
      uint64_t v15 = v10;
      uint64_t v16 = v11;
      sub_249AEDC08();
      sub_249AED1E8();
      return v17;
    case 7:
      sub_2498B87AC((uint64_t)v20);
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      *(void *)&long long __dst = 0x2820656C646E7542;
      *((void *)&__dst + 1) = 0xE800000000000000;
      swift_bridgeObjectRetain();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      swift_bridgeObjectRetain();
      goto LABEL_12;
    case 8:
      uint64_t v12 = sub_2498B87AC((uint64_t)v20);
      sub_2498FC8BC(*(void *)v12, *(void *)(v12 + 8), *(void **)(v12 + 16), *(void *)(v12 + 24), *(void **)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void **)(v12 + 64), *(void *)(v12 + 72), *(void **)(v12 + 80), *(void *)(v12 + 88), *(void *)(v12 + 96));
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      *(void *)&long long __dst = 0xD000000000000010;
      *((void *)&__dst + 1) = 0x8000000249B15FB0;
      sub_249AED1E8();
LABEL_15:
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      sub_2498FC9D8(v19, sub_2498FCAAC);
      return __dst;
    case 9:
      return result;
    default:
      sub_2498B87AC((uint64_t)v20);
      strcpy((char *)&__dst, "Navigation (");
      BYTE13(__dst) = 0;
      HIWORD(__dst) = -5120;
LABEL_12:
      sub_249AED1E8();
      swift_bridgeObjectRelease();
LABEL_13:
      sub_249AED1E8();
      return __dst;
  }
}

uint64_t Instrument.Kind.detail.getter()
{
  unint64_t v1 = 0xD000000000000017;
  sub_2498A4990(v0, (uint64_t)v4);
  sub_2498A4990((uint64_t)v4, (uint64_t)v5);
  int v2 = sub_2498B8790((uint64_t)v5);
  uint64_t result = 1970169165;
  switch(v2)
  {
    case 1:
      unint64_t v1 = 0xD000000000000035;
      goto LABEL_11;
    case 2:
      unint64_t v1 = 0xD000000000000044;
      goto LABEL_11;
    case 3:
      unint64_t v1 = 0x7453206F65646956;
      goto LABEL_11;
    case 4:
      unint64_t v1 = 0xD00000000000003ALL;
      goto LABEL_11;
    case 5:
      unint64_t v1 = 0xD000000000000036;
      goto LABEL_11;
    case 6:
      unint64_t v1 = 0x746163696C707041;
      goto LABEL_11;
    case 7:
      unint64_t v1 = 0x746567646957;
      goto LABEL_11;
    case 8:
      unint64_t v1 = 0x5020746567646957;
      goto LABEL_11;
    case 9:
      return result;
    default:
LABEL_11:
      sub_2498B87AC((uint64_t)v5);
      return v1;
  }
}

uint64_t Instrument.Kind.defaultVerifierIdentifier.getter()
{
  sub_2498A4990(v0, (uint64_t)v9);
  sub_2498A4990((uint64_t)v9, (uint64_t)v10);
  int v1 = sub_2498B8790((uint64_t)v10);
  if (v1 != 1)
  {
    if (v1 == 2)
    {
      sub_2498B87AC((uint64_t)v10);
      return 0x6163696669746F6ELL;
    }
    return 0;
  }
  unint64_t v3 = (void *)sub_2498B87AC((uint64_t)v10);
  sub_2499441A8(v3, __dst);
  if (sub_249944500((uint64_t)__dst) == 3)
  {
    uint64_t v4 = sub_24994451C((uint64_t)__dst);
    sub_249944658(v4, (uint64_t)v7);
    if (sub_24994AD58((uint64_t)v7) == 2)
    {
      sub_24994AD64((uint64_t)v7);
      if (InstrumentDataIdentifier.rawValue.getter() == 0x73696D736E617274 && v5 == 0xEC0000006E6F6973)
      {
        sub_24997EA04((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
        sub_24997EA04((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
        sub_2498FC9D8(v9, sub_2498FB4B4);
        swift_bridgeObjectRelease();
LABEL_10:
        sub_24997EA04((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
        sub_24997EA04((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
        sub_2498FC9D8(v9, sub_2498FCAAC);
        return 0x6C646E7270;
      }
      char v6 = sub_249AEE0D8();
      sub_24997EA04((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_24997EA04((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
      sub_2498FC9D8(v9, sub_2498FB4B4);
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_10;
      }
      sub_24997EA04((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
      sub_2498FC9D8(v9, sub_2498FCAAC);
      sub_24997EA04((uint64_t)v3, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
    }
  }
  return 0;
}

BOOL Instrument.Kind.defaultPersistent.getter()
{
  sub_2498A4990(v0, (uint64_t)v8);
  sub_2498A4990((uint64_t)v8, (uint64_t)v9);
  if (sub_2498B8790((uint64_t)v9) != 1) {
    return 0;
  }
  int v1 = (void *)sub_2498B87AC((uint64_t)v9);
  sub_2499441A8(v1, __dst);
  if (sub_249944500((uint64_t)__dst) != 3) {
    return 0;
  }
  uint64_t v2 = sub_24994451C((uint64_t)__dst);
  sub_249944658(v2, (uint64_t)v6);
  if (sub_24994AD58((uint64_t)v6)) {
    return 0;
  }
  sub_24994AD64((uint64_t)v6);
  if (InstrumentDataIdentifier.rawValue.getter() == 0x53656C6369686576 && v4 == 0xEC00000064656570)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  char v5 = sub_249AEE0D8();
  swift_bridgeObjectRelease();
  return (v5 & 1) != 0;
}

char *Instrument.Kind.focusableStateDataIdentifier.getter@<X0>(char *a1@<X8>)
{
  sub_2498A4990(v1, (uint64_t)v5);
  sub_2498A4990((uint64_t)v5, (uint64_t)v6);
  uint64_t result = (char *)sub_2498B8790((uint64_t)v6);
  char v4 = 53;
  switch((int)result)
  {
    case 2:
      uint64_t result = (char *)sub_2498B87AC((uint64_t)v6);
      char v4 = *result;
      break;
    case 9:
      break;
    default:
      uint64_t result = (char *)sub_2498B87AC((uint64_t)v6);
      char v4 = 57;
      break;
  }
  *a1 = v4;
  return result;
}

void Instrument.Kind.hash(into:)(uint64_t a1)
{
  sub_2498A4990(v1, (uint64_t)v59);
  sub_2498A4990((uint64_t)v59, (uint64_t)v60);
  switch(sub_2498B8790((uint64_t)v60))
  {
    case 1u:
      unint64_t v3 = (void *)sub_2498B87AC((uint64_t)v60);
      sub_249AEE348();
      sub_2499441A8(v3, __dst);
      sub_2498A4990((uint64_t)v59, (uint64_t)&v47);
      uint64_t v4 = sub_2498B87AC((uint64_t)&v47);
      sub_249944360(v4);
      Instrument.GaugeStyle.hash(into:)(a1);
      uint64_t v5 = v3[63];
      sub_249AEE358();
      sub_249AEE348();
      uint64_t v6 = *(void *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        sub_249890C54(v5 + 32, (uint64_t)__dst);
        sub_249890C54((uint64_t)__dst, (uint64_t)v45);
        VisibilityRule.hash(into:)();
        uint64_t v7 = v6 - 1;
        if (v6 != 1)
        {
          uint64_t v8 = v5 + 168;
          do
          {
            sub_249890C54(v8, (uint64_t)__dst);
            sub_249890C54((uint64_t)__dst, (uint64_t)v45);
            VisibilityRule.hash(into:)();
            v8 += 136;
            --v7;
          }
          while (v7);
        }
        swift_bridgeObjectRelease();
      }
      sub_2498FC9D8(v59, sub_2498FCAAC);
      break;
    case 2u:
      uint64_t v9 = sub_2498B87AC((uint64_t)v60);
      sub_249AEE348();
      int v10 = ~*(_DWORD *)(v9 + 40);
      uint64_t v37 = *(void *)(v9 + 64);
      uint64_t v39 = *(void *)(v9 + 56);
      uint64_t v33 = *(void *)(v9 + 80);
      uint64_t v35 = *(void *)(v9 + 72);
      uint64_t v42 = *(void *)(v9 + 88);
      LOBYTE(v47) = *(unsigned char *)v9;
      InstrumentDataIdentifier.rawValue.getter();
      sub_249971000((uint64_t *)v9);
      sub_249AECF78();
      swift_bridgeObjectRelease();
      if ((v10 & 0xFE) != 0)
      {
        sub_249AEE348();
        sub_249971000((uint64_t *)v9);
        ImageAsset.ImageType.hash(into:)(a1);
        sub_249AEE348();
        *(void *)&long long v47 = v39;
        *((void *)&v47 + 1) = v37;
        *(void *)&long long v48 = v35;
        *((void *)&v48 + 1) = v33;
        LOBYTE(v49) = v42;
        ImageAsset.ImageType.hash(into:)(a1);
      }
      sub_249AEE348();
      sub_2498FC9D8(v59, sub_2498FCAAC);
      sub_249AEBB68();
      sub_249AEE358();
      sub_249AEE378();
      sub_249AEE378();
      sub_249AEE378();
      sub_249AEE378();
      sub_2498FC9D8(v59, sub_2498FCAAC);
      break;
    case 3u:
      uint64_t v11 = *(void *)(sub_2498B87AC((uint64_t)v60) + 16);
      sub_249AEE348();
      sub_249AECF78();
      if (!v11) {
        goto LABEL_25;
      }
      sub_249AEE358();
      sub_249AEE348();
      uint64_t v12 = *(void *)(v11 + 16);
      if (v12)
      {
        swift_bridgeObjectRetain();
        sub_249890C54(v11 + 32, (uint64_t)&v47);
        sub_249890C54((uint64_t)&v47, (uint64_t)__dst);
        VisibilityRule.hash(into:)();
        uint64_t v13 = v12 - 1;
        if (v12 != 1)
        {
          uint64_t v14 = v11 + 168;
          do
          {
            sub_249890C54(v14, (uint64_t)&v47);
            sub_249890C54((uint64_t)&v47, (uint64_t)__dst);
            VisibilityRule.hash(into:)();
            v14 += 136;
            --v13;
          }
          while (v13);
        }
        goto LABEL_21;
      }
      break;
    case 4u:
      char v15 = *(unsigned char *)sub_2498B87AC((uint64_t)v60);
      sub_249AEE348();
      LOBYTE(v47) = v15;
      InstrumentDataIdentifier.rawValue.getter();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      sub_249AECF78();
      break;
    case 5u:
      sub_2498B87AC((uint64_t)v60);
      sub_249AEE348();
      sub_249AECF78();
      break;
    case 6u:
      uint64_t v16 = *(void *)(sub_2498B87AC((uint64_t)v60) + 24);
      sub_249AEE348();
      sub_249AECF78();
      if (v16)
      {
        sub_249AEE358();
        swift_bridgeObjectRetain();
        sub_249AECF78();
LABEL_21:
        swift_bridgeObjectRelease();
      }
      else
      {
LABEL_25:
        sub_249AEE358();
      }
      break;
    case 7u:
      uint64_t v17 = sub_2498B87AC((uint64_t)v60);
      long long v40 = *(_OWORD *)(v17 + 16);
      long long v43 = *(_OWORD *)v17;
      uint64_t v18 = *(void *)(v17 + 32);
      uint64_t v19 = *(void *)(v17 + 40);
      char v20 = *(unsigned char *)(v17 + 48);
      uint64_t v21 = *(void *)(v17 + 56);
      uint64_t v22 = *(void *)(v17 + 64);
      sub_249AEE348();
      long long v47 = v43;
      long long v48 = v40;
      uint64_t v49 = v18;
      uint64_t v50 = v19;
      char v51 = v20;
      uint64_t v52 = v21;
      uint64_t v53 = v22;
      AvocadoWidgetInfo.hash(into:)();
      break;
    case 8u:
      char v23 = (uint64_t *)sub_2498B87AC((uint64_t)v60);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      uint64_t v26 = v23[2];
      uint64_t v27 = v23[3];
      uint64_t v28 = v23[4];
      uint64_t v29 = v23[5];
      uint64_t v44 = v23[6];
      uint64_t v38 = v23[8];
      uint64_t v41 = v23[7];
      uint64_t v34 = v23[10];
      uint64_t v36 = v23[9];
      uint64_t v30 = v23[12];
      uint64_t v32 = v23[11];
      uint64_t v31 = v23[13];
      sub_249AEE348();
      if (!v24) {
        goto LABEL_28;
      }
      sub_249AEE348();
      *(void *)&long long v47 = v25;
      *((void *)&v47 + 1) = v24;
      *(void *)&long long v48 = v26;
      *((void *)&v48 + 1) = v27;
      uint64_t v49 = v28;
      uint64_t v50 = v29;
      char v51 = v44;
      uint64_t v52 = v41;
      uint64_t v53 = v38;
      uint64_t v54 = v36;
      uint64_t v55 = v34;
      uint64_t v56 = v32;
      uint64_t v57 = v30;
      uint64_t v58 = v31;
      Instrument.PopoverLocation.LocalConfiguration.hash(into:)(a1);
      break;
    case 9u:
LABEL_28:
      sub_249AEE348();
      break;
    default:
      sub_2498B87AC((uint64_t)v60);
      sub_249AEE348();
      sub_249AECF78();
      swift_bridgeObjectRelease();
      break;
  }
}

uint64_t Instrument.Kind.hashValue.getter()
{
  sub_2498A4990(v0, (uint64_t)v4);
  sub_2498A4990((uint64_t)v4, (uint64_t)v3);
  sub_249AEE338();
  Instrument.Kind.hash(into:)((uint64_t)v2);
  return sub_249AEE388();
}

uint64_t sub_2499794CC()
{
  sub_2498A4990(v0, (uint64_t)v4);
  sub_2498A4990((uint64_t)v4, (uint64_t)v3);
  sub_249AEE338();
  Instrument.Kind.hash(into:)((uint64_t)v2);
  return sub_249AEE388();
}

uint64_t sub_24997952C()
{
  sub_2498A4990(v0, (uint64_t)v4);
  sub_2498A4990((uint64_t)v4, (uint64_t)v3);
  sub_249AEE338();
  Instrument.Kind.hash(into:)((uint64_t)v2);
  return sub_249AEE388();
}

uint64_t Instrument.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v1, (uint64_t)v5, &qword_2696DF440);
  return sub_249882788((uint64_t)v5, a1, &qword_2696DF438);
}

uint64_t sub_249979634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(a1, (uint64_t)v6, &qword_2696DF440);
  return sub_249882788((uint64_t)v6, a2, &qword_2696DF438);
}

uint64_t sub_2499796D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(a1, (uint64_t)v6, &qword_2696DF438);
  return sub_24997ED24((uint64_t)v6, a2, &qword_2696DF438);
}

uint64_t Instrument.id.setter(uint64_t a1)
{
  return sub_24997ED24(a1, v1, &qword_2696DF438);
}

uint64_t (*Instrument.id.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.kind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Instrument();
  sub_2498A4990(v1 + *(int *)(v3 + 20), (uint64_t)v5);
  sub_2498A4990((uint64_t)v5, a1);
  return sub_2498FC9D8(v5, sub_2498FB4B4);
}

uint64_t Instrument.kind.setter(uint64_t a1)
{
  sub_2498A4990(a1, (uint64_t)v4);
  uint64_t v2 = v1 + *(int *)(type metadata accessor for Instrument() + 20);
  sub_2498A4990(v2, (uint64_t)v5);
  sub_2498FC9D8(v5, sub_2498FCAAC);
  return sub_2498A4990((uint64_t)v4, v2);
}

uint64_t (*Instrument.kind.modify())(void)
{
  return nullsub_1;
}

uint64_t Instrument.configuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for Instrument() + 24);
  uint64_t v4 = *(void *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 16);
  char v6 = *(unsigned char *)(v3 + 24);
  char v7 = *(unsigned char *)(v3 + 25);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v8 = *(void *)(v3 + 40);
  *(void *)a1 = *(void *)v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 25) = v7;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRetain();
  swift_retain();

  return swift_bridgeObjectRetain();
}

__n128 Instrument.configuration.setter(__n128 *a1)
{
  __n128 v9 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unsigned __int8 v3 = a1[1].n128_u8[8];
  unsigned __int8 v4 = a1[1].n128_u8[9];
  unint64_t v5 = a1[2].n128_u64[0];
  unint64_t v6 = a1[2].n128_u64[1];
  char v7 = (__n128 *)(v1 + *(int *)(type metadata accessor for Instrument() + 24));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  __n128 result = v9;
  *char v7 = v9;
  v7[1].n128_u64[0] = v2;
  v7[1].n128_u8[8] = v3;
  v7[1].n128_u8[9] = v4;
  v7[2].n128_u64[0] = v5;
  v7[2].n128_u64[1] = v6;
  return result;
}

uint64_t (*Instrument.configuration.modify())(void)
{
  return nullsub_1;
}

BOOL Instrument.external.getter()
{
  uint64_t v1 = type metadata accessor for Instrument();
  sub_2498A4990(v0 + *(int *)(v1 + 20), (uint64_t)v5);
  int v2 = sub_2498B8790((uint64_t)v5);
  return !v2 || v2 == 6;
}

uint64_t Instrument.trackable.getter()
{
  uint64_t v1 = type metadata accessor for Instrument();
  sub_2498A4990(v0 + *(int *)(v1 + 20), (uint64_t)v10);
  sub_2498A4990((uint64_t)v10, (uint64_t)v11);
  int v2 = sub_2498B8790((uint64_t)v11);
  if (v2 == 4)
  {
    uint64_t v6 = sub_2498B87AC((uint64_t)v11);
    uint64_t v4 = *(void *)(v6 + 8);
    uint64_t v5 = *(void *)(v6 + 16);
  }
  else
  {
    if (v2 != 3)
    {
      char v8 = 0;
      return v8 & 1;
    }
    unsigned __int8 v3 = (uint64_t *)sub_2498B87AC((uint64_t)v11);
    uint64_t v4 = *v3;
    uint64_t v5 = v3[1];
  }
  if (v4 == 0x7765695673616461 && v5 == 0xE800000000000000) {
    char v8 = 1;
  }
  else {
    char v8 = sub_249AEE0D8();
  }
  return v8 & 1;
}

uint64_t Instrument.assets.getter()
{
  uint64_t v1 = type metadata accessor for Instrument();
  sub_2498A4990(v0 + *(int *)(v1 + 20), (uint64_t)v40);
  sub_2498A4990((uint64_t)v40, (uint64_t)v41);
  int v2 = sub_2498B8790((uint64_t)v41);
  if (v2 == 1)
  {
    uint64_t v13 = (void *)sub_2498B87AC((uint64_t)v41);
    sub_2499441A8(v13, v39);
    switch(sub_249944500((uint64_t)v39))
    {
      case 1u:
        uint64_t v14 = (const void *)sub_24994451C((uint64_t)v39);
        memcpy(__dst, v14, 0x130uLL);
        uint64_t v10 = (uint64_t)Instrument.GaugeStyle.DialConfiguration.assets.getter();
        break;
      case 2u:
        uint64_t v15 = *(void *)(sub_24994451C((uint64_t)v39) + 8);
        swift_getKeyPath();
        sub_24997EA04((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v10 = sub_249943E98(v15, (void (*)(long long *__return_ptr, long long *))sub_249945790);
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_24997EA04((uint64_t)v13, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
        break;
      case 3u:
        uint64_t v16 = (const void *)sub_24994451C((uint64_t)v39);
        memcpy(__dst, v16, sizeof(__dst));
        uint64_t v10 = (uint64_t)TextElementConfiguration.assets.getter();
        break;
      case 4u:
        uint64_t v17 = sub_24994451C((uint64_t)v39);
        sub_24994452C(v17, (uint64_t)__dst);
        switch(sub_249944588((uint64_t)__dst))
        {
          case 6u:
            uint64_t v30 = sub_249944640((uint64_t)__dst);
            sub_2499457D8(v30, (uint64_t)v37);
            sub_249945834((uint64_t)v37);
            sub_249945840((uint64_t)v37);
            return MEMORY[0x263F8EE78];
          case 8u:
          case 9u:
            uint64_t v19 = sub_249944640((uint64_t)__dst);
            char v20 = *(unsigned char *)(v19 + 24);
            uint64_t v21 = *(void *)(v19 + 32);
            uint64_t v22 = *(void **)(v19 + 40);
            uint64_t v23 = *(void *)(v19 + 48);
            char v24 = *(unsigned char *)(v19 + 56);
            char v25 = *(unsigned char *)(v19 + 57);
            uint64_t v27 = *(void *)(v19 + 64);
            uint64_t v26 = *(void *)(v19 + 72);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
            uint64_t v10 = swift_allocObject();
            *(_OWORD *)(v10 + 16) = xmmword_249AF0A70;
            *(void *)(v10 + 56) = &type metadata for InstrumentFont;
            *(void *)(v10 + 64) = &protocol witness table for InstrumentFont;
            uint64_t v28 = swift_allocObject();
            *(void *)(v10 + 32) = v28;
            *(unsigned char *)(v28 + 16) = v20;
            *(void *)(v28 + 24) = v21;
            *(void *)(v28 + 32) = v22;
            *(void *)(v28 + 40) = v23;
            *(unsigned char *)(v28 + 48) = v24;
            *(unsigned char *)(v28 + 49) = v25;
            *(void *)(v28 + 56) = v27;
            *(void *)(v28 + 64) = v26;
            id v29 = v22;
            swift_bridgeObjectRetain();
            break;
          default:
            sub_249944640((uint64_t)__dst);
            return MEMORY[0x263F8EE78];
        }
        break;
      case 5u:
      case 6u:
        return MEMORY[0x263F8EE78];
      default:
        sub_24994451C((uint64_t)v39);
        return MEMORY[0x263F8EE78];
    }
  }
  else if (v2 == 2 {
         && (uint64_t v3 = sub_2498B87AC((uint64_t)v41), v4 = *(void *)(v3 + 40), (~*(_DWORD *)(v3 + 40) & 0xFELL) != 0))
  }
  {
    uint64_t v35 = *(void *)(v3 + 80);
    uint64_t v36 = *(void *)(v3 + 96);
    uint64_t v33 = *(void *)(v3 + 64);
    uint64_t v34 = *(void **)(v3 + 72);
    uint64_t v31 = *(void *)(v3 + 48);
    uint64_t v32 = *(void **)(v3 + 56);
    uint64_t v6 = *(void **)(v3 + 24);
    uint64_t v5 = *(void *)(v3 + 32);
    char v8 = *(void **)(v3 + 8);
    uint64_t v7 = *(void *)(v3 + 16);
    char v9 = *(unsigned char *)(v3 + 88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_249AFA7A0;
    *(void *)(v10 + 56) = &type metadata for ImageAsset;
    *(void *)(v10 + 64) = &protocol witness table for ImageAsset;
    uint64_t v11 = swift_allocObject();
    *(void *)(v10 + 32) = v11;
    *(void *)(v11 + 16) = v8;
    *(void *)(v11 + 24) = v7;
    *(void *)(v11 + 32) = v6;
    *(void *)(v11 + 40) = v5;
    *(unsigned char *)(v11 + 48) = v4;
    *(void *)(v11 + 56) = v31;
    *(void *)(v10 + 96) = &type metadata for ImageAsset;
    *(void *)(v10 + 104) = &protocol witness table for ImageAsset;
    uint64_t v12 = swift_allocObject();
    *(void *)(v10 + 72) = v12;
    *(void *)(v12 + 16) = v32;
    *(void *)(v12 + 24) = v33;
    *(void *)(v12 + 32) = v34;
    *(void *)(v12 + 40) = v35;
    *(unsigned char *)(v12 + 48) = v9;
    *(void *)(v12 + 56) = v36;
    sub_24988247C(v8, v7, v6, v5, v4);
    sub_24988247C(v32, v33, v34, v35, v9);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return v10;
}

uint64_t Instrument.Kind.assets.getter()
{
  sub_2498A4990(v0, (uint64_t)v21);
  sub_2498A4990((uint64_t)v21, (uint64_t)v22);
  int v1 = sub_2498B8790((uint64_t)v22);
  if (v1 == 1)
  {
    uint64_t v5 = (void *)sub_2498B87AC((uint64_t)v22);
    sub_2499441A8(v5, __dst);
    return Instrument.GaugeStyle.assets.getter();
  }
  else if (v1 == 2 {
         && (v2 = sub_2498B87AC((uint64_t)v22), uint64_t v3 = *(void *)(v2 + 40), (~*(_DWORD *)(v2 + 40) & 0xFELL) != 0))
  }
  {
    uint64_t v18 = *(void *)(v2 + 80);
    uint64_t v19 = *(void *)(v2 + 96);
    uint64_t v16 = *(void *)(v2 + 64);
    uint64_t v17 = *(void **)(v2 + 72);
    uint64_t v14 = *(void *)(v2 + 48);
    uint64_t v15 = *(void **)(v2 + 56);
    uint64_t v7 = *(void **)(v2 + 24);
    uint64_t v6 = *(void *)(v2 + 32);
    char v9 = *(void **)(v2 + 8);
    uint64_t v8 = *(void *)(v2 + 16);
    char v10 = *(unsigned char *)(v2 + 88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_249AFA7A0;
    *(void *)(v4 + 56) = &type metadata for ImageAsset;
    *(void *)(v4 + 64) = &protocol witness table for ImageAsset;
    uint64_t v11 = swift_allocObject();
    *(void *)(v4 + 32) = v11;
    *(void *)(v11 + 16) = v9;
    *(void *)(v11 + 24) = v8;
    *(void *)(v11 + 32) = v7;
    *(void *)(v11 + 40) = v6;
    *(unsigned char *)(v11 + 48) = v3;
    *(void *)(v11 + 56) = v14;
    *(void *)(v4 + 96) = &type metadata for ImageAsset;
    *(void *)(v4 + 104) = &protocol witness table for ImageAsset;
    uint64_t v12 = swift_allocObject();
    *(void *)(v4 + 72) = v12;
    *(void *)(v12 + 16) = v15;
    *(void *)(v12 + 24) = v16;
    *(void *)(v12 + 32) = v17;
    *(void *)(v12 + 40) = v18;
    *(unsigned char *)(v12 + 48) = v10;
    *(void *)(v12 + 56) = v19;
    sub_24988247C(v9, v8, v7, v6, v3);
    sub_24988247C(v15, v16, v17, v18, v10);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return v4;
}

uint64_t Instrument.Kind.restoreAssets(from:)(void *a1)
{
  sub_2498A4990(v1, (uint64_t)v51);
  sub_2498A4990((uint64_t)v51, (uint64_t)v52);
  uint64_t result = sub_2498B8790((uint64_t)v52);
  if (result == 1)
  {
    uint64_t v34 = (const void *)sub_2498B87AC((uint64_t)v52);
    memcpy(__dst, v34, sizeof(__dst));
    sub_2498A4990((uint64_t)v51, (uint64_t)v47);
    uint64_t v35 = sub_2498B87AC((uint64_t)v47);
    sub_249944360(v35);
    Instrument.GaugeStyle.restoreAssets(from:)(a1);
    if (v2)
    {
      memcpy(v45, __dst, sizeof(v45));
      return sub_249944430((uint64_t)v45);
    }
    sub_2498FC9D8(v51, sub_2498FCAAC);
    memcpy(v45, __dst, sizeof(v45));
    sub_249970E74(v45);
    uint64_t v32 = v45;
    uint64_t v33 = v1;
  }
  else
  {
    if (result != 2) {
      return result;
    }
    uint64_t v43 = v1;
    uint64_t v5 = sub_2498B87AC((uint64_t)v52);
    uint64_t v6 = *(void **)(v5 + 8);
    uint64_t v7 = *(void **)(v5 + 16);
    char v9 = *(void **)(v5 + 24);
    uint64_t v8 = *(void **)(v5 + 32);
    uint64_t v11 = *(void *)(v5 + 40);
    char v10 = *(void **)(v5 + 48);
    int v12 = ~*(_DWORD *)(v5 + 40);
    uint64_t v14 = *(void **)(v5 + 56);
    uint64_t v13 = *(void **)(v5 + 64);
    uint64_t v15 = *(void **)(v5 + 72);
    uint64_t v16 = *(void **)(v5 + 80);
    uint64_t v17 = *(void *)(v5 + 88);
    uint64_t v18 = *(void **)(v5 + 96);
    uint64_t v53 = v13;
    uint64_t v44 = v14;
    if ((v12 & 0xFE) != 0)
    {
      __dst[0] = v6;
      __dst[1] = v7;
      __dst[2] = v9;
      __dst[3] = v8;
      LOBYTE(__dst[4]) = v11;
      __dst[5] = v10;
      __dst[6] = v14;
      __dst[7] = v13;
      __dst[8] = v15;
      __dst[9] = v16;
      LOBYTE(__dst[10]) = v17;
      __dst[11] = v18;
      uint64_t v36 = v15;
      uint64_t v40 = (uint64_t)v16;
      char v42 = v17;
      sub_2498A4990((uint64_t)v51, (uint64_t)v47);
      uint64_t v37 = (uint64_t *)sub_2498B87AC((uint64_t)v47);
      sub_249971000(v37);
      sub_24988247C(v6, (uint64_t)v7, v9, (uint64_t)v8, v11);
      sub_24988247C(v44, (uint64_t)v53, v36, v40, v42);
      ImageAsset.restore(from:)(a1);
      if (v2)
      {
        sub_2498826E4(__dst[0], (uint64_t)__dst[1], __dst[2], (uint64_t)__dst[3], (char)__dst[4]);
        sub_2498826E4(__dst[6], (uint64_t)__dst[7], __dst[8], (uint64_t)__dst[9], (char)__dst[10]);
        return sub_2498FC9D8(v51, sub_2498FCAAC);
      }
      ImageAsset.restore(from:)(a1);
      sub_2498FC9D8(v51, sub_2498FCAAC);
      sub_2498FC9D8(v51, sub_2498FCAAC);
      char v25 = __dst[0];
      id v29 = __dst[1];
      char v9 = __dst[2];
      uint64_t v8 = __dst[3];
      uint64_t v26 = LOBYTE(__dst[4]);
      char v24 = __dst[5];
      uint64_t v28 = __dst[6];
      uint64_t v27 = __dst[7];
      char v20 = __dst[8];
      uint64_t v21 = __dst[9];
      uint64_t v22 = LOBYTE(__dst[10]);
      uint64_t v23 = __dst[11];
    }
    else
    {
      uint64_t v39 = v6;
      uint64_t v41 = v7;
      uint64_t v38 = v10;
      uint64_t v19 = v11;
      char v20 = v15;
      uint64_t v21 = v16;
      uint64_t v22 = v17;
      uint64_t v23 = v18;
      sub_2498FC9D8(v51, sub_2498FCAAC);
      char v24 = v38;
      char v25 = v39;
      uint64_t v26 = v19;
      uint64_t v27 = v53;
      uint64_t v28 = v14;
      id v29 = v41;
    }
    char v30 = *(unsigned char *)(v5 + 104);
    LOBYTE(v47[0]) = *(unsigned char *)v5;
    v47[1] = v25;
    v47[2] = v29;
    v47[3] = v9;
    v47[4] = v8;
    v47[5] = v26;
    v47[6] = v24;
    v47[7] = v28;
    v47[8] = v27;
    v47[9] = v20;
    v47[10] = v21;
    v47[11] = v22;
    v47[12] = v23;
    char v48 = v30;
    long long v31 = *(_OWORD *)(v5 + 128);
    long long v49 = *(_OWORD *)(v5 + 112);
    long long v50 = v31;
    sub_249970F9C(v47);
    uint64_t v32 = v47;
    uint64_t v33 = v43;
  }
  return sub_2498A4990((uint64_t)v32, v33);
}

uint64_t Instrument.dataIdentifiers.getter()
{
  uint64_t v1 = sub_249AEE3E8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Instrument();
  sub_2498A4990(v0 + *(int *)(v5 + 20), (uint64_t)v9);
  v8[3] = &type metadata for Instrument.Kind;
  v8[0] = swift_allocObject();
  sub_2498A4990((uint64_t)v9, v8[0] + 16);
  sub_2498FC9D8(v9, sub_2498FB4B4);
  sub_249AEE398();
  uint64_t v6 = sub_2499765C0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_24997A654()
{
  uint64_t v1 = 1684957547;
  if (*v0 != 1) {
    uint64_t v1 = 0x72756769666E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_24997A6A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24998352C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24997A6D0(uint64_t a1)
{
  unint64_t v2 = sub_24997EC28();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24997A70C(uint64_t a1)
{
  unint64_t v2 = sub_24997EC28();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF448);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24997EC28();
  sub_249AEE468();
  sub_2498DE200(v3, 0);
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for Instrument();
    sub_2498A4990(v3 + *(int *)(v9 + 20), (uint64_t)v20);
    sub_2498A4990((uint64_t)v20, (uint64_t)&v15);
    char v21 = 1;
    sub_24997EC7C();
    sub_249AEDF08();
    uint64_t v10 = v3 + *(int *)(v9 + 24);
    char v11 = *(unsigned char *)(v10 + 24);
    char v12 = *(unsigned char *)(v10 + 25);
    uint64_t v15 = *(void *)v10;
    long long v16 = *(_OWORD *)(v10 + 8);
    char v17 = v11;
    char v18 = v12;
    long long v19 = *(_OWORD *)(v10 + 32);
    char v21 = 2;
    sub_24997ECD0();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Instrument.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  MEMORY[0x270FA5388](v3);
  uint64_t v29 = (uint64_t)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0FB0);
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  char v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v25 - v12;
  uint64_t v30 = type metadata accessor for Instrument();
  MEMORY[0x270FA5388](v30);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249AEB7F8();
  sub_2498D6084((uint64_t)v13, (uint64_t)v11, &qword_2696DF438);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_2696E2ED8;
  sub_2498D60E8((uint64_t)v13, &qword_2696DF438);
  sub_249882788((uint64_t)v11, (uint64_t)v15, &qword_2696DF438);
  *(void *)&v15[*(int *)(v3 + 52)] = v16;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24997EC28();
  uint64_t v17 = v31;
  sub_249AEE428();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    return sub_2498D60E8((uint64_t)v15, &qword_2696DF440);
  }
  else
  {
    uint64_t v18 = v29;
    sub_249976BAC(0, v29);
    sub_24997ED24(v18, (uint64_t)v15, &qword_2696DF440);
    v38[535] = 1;
    sub_24997ED88();
    uint64_t v19 = v28;
    sub_249AEDE08();
    uint64_t v20 = v30;
    sub_2498A4990((uint64_t)v38, (uint64_t)v37);
    sub_2498A4990((uint64_t)v37, (uint64_t)&v15[*(int *)(v20 + 20)]);
    v38[534] = 2;
    sub_24997EDDC();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v7, v19);
    char v21 = v34;
    char v22 = v35;
    uint64_t v23 = &v15[*(int *)(v20 + 24)];
    *(void *)uint64_t v23 = v32;
    *(_OWORD *)(v23 + 8) = v33;
    v23[24] = v21;
    v23[25] = v22;
    *((_OWORD *)v23 + 2) = v36;
    sub_2498B86D0((uint64_t)v15, v26);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    return sub_2498B8734((uint64_t)v15);
  }
}

unint64_t sub_24997ADCC(char a1)
{
  unint64_t result = 0x697461676976616ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6567756167;
      break;
    case 2:
      unint64_t result = 0x6F74616369646E69;
      break;
    case 3:
      unint64_t result = 0x7274537475706E69;
      break;
    case 4:
      unint64_t result = 0x72685468636E7570;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 1970169197;
      break;
    case 7:
      unint64_t result = 0x6F50746567646977;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24997AEEC(char a1)
{
  unint64_t result = 0x697461676976616ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6567756167;
      break;
    case 2:
      unint64_t result = 0x6F74616369646E69;
      break;
    case 3:
      unint64_t result = 0x7274537475706E69;
      break;
    case 4:
      unint64_t result = 0x72685468636E7570;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 1970169197;
      break;
    case 7:
      unint64_t result = 0x6F50746567646977;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24997B010(void *a1)
{
  return Instrument.Kind.restoreAssets(from:)(a1);
}

uint64_t sub_24997B038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v1, (uint64_t)v5, &qword_2696DF440);
  return sub_249882788((uint64_t)v5, a1, &qword_2696DF438);
}

uint64_t sub_24997B0D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.init(from:)(a1, a2);
}

uint64_t sub_24997B0EC(void *a1)
{
  return Instrument.encode(to:)(a1);
}

uint64_t sub_24997B104(unsigned __int8 *a1, char *a2)
{
  return sub_2498F23AC(*a1, *a2);
}

uint64_t sub_24997B110()
{
  return sub_249976320();
}

uint64_t sub_24997B11C()
{
  return sub_249A1F26C();
}

uint64_t sub_24997B124()
{
  return sub_249976320();
}

uint64_t sub_24997B12C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249983680();
  *a1 = result;
  return result;
}

unint64_t sub_24997B15C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24997ADCC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_24997B188()
{
  return sub_24997AEEC(*v0);
}

uint64_t sub_24997B190@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249983680();
  *a1 = result;
  return result;
}

uint64_t sub_24997B1B8(uint64_t a1)
{
  unint64_t v2 = sub_24997EE30();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24997B1F4(uint64_t a1)
{
  unint64_t v2 = sub_24997EE30();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24997B230(unsigned __int8 *a1, char *a2)
{
  return sub_2498F21CC(*a1, *a2);
}

uint64_t sub_24997B23C()
{
  return sub_249AEE388();
}

uint64_t sub_24997B340()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24997B42C()
{
  return sub_249AEE388();
}

uint64_t sub_24997B52C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2499836CC();
  *a1 = result;
  return result;
}

void sub_24997B55C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEA0000000000656CLL;
  uint64_t v3 = 0x7974536567756167;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEE00796C6C61636FLL;
      uint64_t v3 = 0x4C737265646E6572;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "backgroundBlur");
      *(unsigned char *)(a1 + 15) = -18;
      break;
    case 3:
      strcpy((char *)a1, "configuration");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_24997B620()
{
  uint64_t result = 0x7974536567756167;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4C737265646E6572;
      break;
    case 2:
      uint64_t result = 0x756F72676B636162;
      break;
    case 3:
      uint64_t result = 0x72756769666E6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24997B6D8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2499836CC();
  *a1 = result;
  return result;
}

uint64_t sub_24997B700(uint64_t a1)
{
  unint64_t v2 = sub_24997F2A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24997B73C(uint64_t a1)
{
  unint64_t v2 = sub_24997F2A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24997B778(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498F1FDC(*a1, *a2);
}

uint64_t sub_24997B784()
{
  return sub_249AEE388();
}

uint64_t sub_24997B83C()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24997B8E0()
{
  return sub_249AEE388();
}

uint64_t sub_24997B994@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249983718();
  *a1 = result;
  return result;
}

void sub_24997B9C4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEE00726569666974;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x656C797473;
  if (v2 != 1)
  {
    uint64_t v5 = 0x72756769666E6F63;
    unint64_t v4 = 0xED00006E6F697461;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6E65644961746164;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_24997BA38()
{
  uint64_t v1 = 0x656C797473;
  if (*v0 != 1) {
    uint64_t v1 = 0x72756769666E6F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E65644961746164;
  }
}

uint64_t sub_24997BAA8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249983718();
  *a1 = result;
  return result;
}

uint64_t sub_24997BAD0(uint64_t a1)
{
  unint64_t v2 = sub_24997F1F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24997BB0C(uint64_t a1)
{
  unint64_t v2 = sub_24997F1F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24997BB48(char *a1, char *a2)
{
  return sub_2498F2118(*a1, *a2);
}

uint64_t sub_24997BB54()
{
  return sub_249AEE388();
}

uint64_t sub_24997BBE4()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24997BC60()
{
  return sub_249AEE388();
}

uint64_t sub_24997BCEC@<X0>(char *a1@<X8>)
{
  return sub_2499628D8(a1);
}

void sub_24997BCF8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6E6F697461636F6CLL;
  if (*v1) {
    uint64_t v2 = 0x72756769666E6F63;
  }
  unint64_t v3 = 0xE800000000000000;
  if (*v1) {
    unint64_t v3 = 0xED00006E6F697461;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_24997BD44()
{
  if (*v0) {
    return 0x72756769666E6F63;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

uint64_t sub_24997BD8C@<X0>(char *a1@<X8>)
{
  return sub_2499629BC(a1);
}

uint64_t sub_24997BD98(uint64_t a1)
{
  unint64_t v2 = sub_24997EE84();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24997BDD4(uint64_t a1)
{
  unint64_t v2 = sub_24997EE84();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24997BE10(char *a1, char *a2)
{
  return sub_2498F1F2C(*a1, *a2);
}

uint64_t sub_24997BE1C()
{
  return sub_249AEE388();
}

uint64_t sub_24997BEA8()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24997BF20()
{
  return sub_249AEE388();
}

uint64_t sub_24997BFA8@<X0>(char *a1@<X8>)
{
  return sub_2499628D8(a1);
}

void sub_24997BFB4(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x696669746E656469;
  if (*v1) {
    unint64_t v2 = 0xD000000000000017;
  }
  unint64_t v3 = 0x8000000249B13580;
  if (!*v1) {
    unint64_t v3 = 0xEA00000000007265;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_24997BFFC()
{
  if (*v0) {
    return 0xD000000000000017;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_24997C040@<X0>(char *a1@<X8>)
{
  return sub_2499629BC(a1);
}

uint64_t sub_24997C04C(uint64_t a1)
{
  unint64_t v2 = sub_24997F1A4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24997C088(uint64_t a1)
{
  unint64_t v2 = sub_24997F1A4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24997C0C4(char *a1, char *a2)
{
  return sub_2498F1E74(*a1, *a2);
}

uint64_t sub_24997C0D0()
{
  return sub_249AEE388();
}

uint64_t sub_24997C164()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24997C1E4()
{
  return sub_249AEE388();
}

uint64_t sub_24997C274@<X0>(char *a1@<X8>)
{
  return sub_2499628D8(a1);
}

void sub_24997C280(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x696669746E656469;
  if (*v1) {
    uint64_t v2 = 0x6E65644961746164;
  }
  unint64_t v3 = 0xEA00000000007265;
  if (*v1) {
    unint64_t v3 = 0xEE00726569666974;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_24997C2D0()
{
  if (*v0) {
    return 0x6E65644961746164;
  }
  else {
    return 0x696669746E656469;
  }
}

uint64_t sub_24997C31C@<X0>(char *a1@<X8>)
{
  return sub_2499629BC(a1);
}

uint64_t sub_24997C328(uint64_t a1)
{
  unint64_t v2 = sub_24997F0EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24997C364(uint64_t a1)
{
  unint64_t v2 = sub_24997F0EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24997C3A0()
{
  return sub_24997C3B0();
}

uint64_t sub_24997C3B0()
{
  return sub_249AEE388();
}

uint64_t sub_24997C400()
{
  return sub_249AECF78();
}

uint64_t sub_24997C410()
{
  return sub_24997C420();
}

uint64_t sub_24997C420()
{
  return sub_249AEE388();
}

uint64_t sub_24997C46C@<X0>(BOOL *a1@<X8>)
{
  return sub_24997C478(a1);
}

uint64_t sub_24997C478@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_24997C4C8(void *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_24997C4DC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_24997C534(uint64_t a1)
{
  unint64_t v2 = sub_24997EFE0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24997C570(uint64_t a1)
{
  unint64_t v2 = sub_24997EFE0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.Kind.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v94 = a2;
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0FC8);
  uint64_t v90 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v92 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0FD0);
  uint64_t v84 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v97 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0FD8);
  uint64_t v89 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  long long v95 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0FE0);
  uint64_t v85 = *(void *)(v6 - 8);
  uint64_t v86 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v93 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0FE8);
  uint64_t v82 = *(void *)(v8 - 8);
  uint64_t v83 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0FF0);
  uint64_t v81 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0FF8);
  uint64_t v14 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1[3];
  uint64_t v98 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v17);
  sub_24997EE30();
  uint64_t v18 = v99;
  sub_249AEE428();
  uint64_t v99 = v18;
  if (v18)
  {
    uint64_t v19 = v98;
  }
  else
  {
    uint64_t v20 = v13;
    uint64_t v79 = v11;
    uint64_t v80 = v14;
    uint64_t v22 = v96;
    char v21 = v97;
    uint64_t v23 = v95;
    uint64_t v24 = sub_249AEDE18();
    if (*(void *)(v24 + 16))
    {
      uint64_t v25 = *(unsigned __int8 *)(v24 + 32);
      swift_bridgeObjectRelease();
      uint64_t v19 = v98;
      switch(v25)
      {
        case 1:
          LOBYTE(v101[0]) = 1;
          sub_24997F2A0();
          uint64_t v33 = v99;
          sub_249AEDD38();
          uint64_t v99 = v33;
          if (v33) {
            goto LABEL_21;
          }
          char v103 = 3;
          sub_24997F2F4();
          uint64_t v34 = v79;
          uint64_t v35 = v99;
          sub_249AEDE08();
          long long v36 = (void (**)(char *, uint64_t))(v81 + 8);
          uint64_t v37 = (void (**)(char *, uint64_t))(v80 + 8);
          uint64_t v99 = v35;
          if (v35)
          {
            (*v36)(v20, v34);
            goto LABEL_32;
          }
          (*v36)(v20, v34);
          (*v37)(v16, v22);
          memcpy(v100, v101, sizeof(v100));
          sub_249970E74(v100);
          uint64_t v52 = v100;
          goto LABEL_25;
        case 2:
          LOBYTE(v101[0]) = 2;
          sub_24997F1F8();
          uint64_t v38 = v99;
          sub_249AEDD38();
          uint64_t v99 = v38;
          if (v38) {
            goto LABEL_21;
          }
          char v103 = 2;
          sub_24997F24C();
          uint64_t v39 = v83;
          uint64_t v40 = v99;
          sub_249AEDE08();
          uint64_t v41 = (void (**)(char *, uint64_t))(v82 + 8);
          uint64_t v37 = (void (**)(char *, uint64_t))(v80 + 8);
          uint64_t v99 = v40;
          if (v40)
          {
            (*v41)(v10, v39);
            goto LABEL_32;
          }
          (*v41)(v10, v39);
          (*v37)(v16, v22);
          v101[6] = v100[6];
          v101[7] = v100[7];
          v101[8] = v100[8];
          v101[2] = v100[2];
          v101[3] = v100[3];
          v101[4] = v100[4];
          v101[5] = v100[5];
          v101[0] = v100[0];
          v101[1] = v100[1];
          sub_249970F9C(v101);
          goto LABEL_24;
        case 3:
          LOBYTE(v101[0]) = 3;
          sub_24997F1A4();
          char v42 = v93;
          uint64_t v26 = v16;
          uint64_t v43 = v99;
          sub_249AEDD38();
          uint64_t v99 = v43;
          if (v43) {
            goto LABEL_16;
          }
          uint64_t v56 = v22;
          LOBYTE(v101[0]) = 0;
          uint64_t v57 = v86;
          uint64_t v58 = sub_249AEDDB8();
          uint64_t v99 = 0;
          uint64_t v72 = v58;
          uint64_t v73 = v59;
          char v103 = 1;
          sub_24994430C();
          uint64_t v74 = v99;
          sub_249AEDDA8();
          uint64_t v75 = v80;
          uint64_t v99 = v74;
          if (v74)
          {
            swift_bridgeObjectRelease();
            (*(void (**)(char *, uint64_t))(v85 + 8))(v42, v57);
            (*(void (**)(char *, uint64_t))(v75 + 8))(v26, v56);
            return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
          }
          (*(void (**)(char *, uint64_t))(v85 + 8))(v42, v57);
          (*(void (**)(char *, uint64_t))(v75 + 8))(v26, v56);
          *(void *)&v101[0] = v72;
          *((void *)&v101[0] + 1) = v73;
          *(void *)&v101[1] = *(void *)&v100[0];
          sub_2498A492C(v101);
          goto LABEL_24;
        case 4:
          LOBYTE(v101[0]) = 4;
          sub_24997F0EC();
          uint64_t v44 = v22;
          long long v45 = v23;
          long long v46 = v16;
          uint64_t v47 = v99;
          sub_249AEDD38();
          uint64_t v99 = v47;
          if (v47) {
            goto LABEL_29;
          }
          LOBYTE(v100[0]) = 1;
          sub_24989C988();
          uint64_t v48 = v91;
          uint64_t v49 = v99;
          sub_249AEDE08();
          uint64_t v99 = v49;
          if (!v49)
          {
            char v67 = v101[0];
            LOBYTE(v100[0]) = 0;
            uint64_t v68 = sub_249AEDDB8();
            uint64_t v69 = v48;
            uint64_t v70 = v45;
            uint64_t v71 = v80;
            uint64_t v99 = 0;
            uint64_t v77 = v76;
            (*(void (**)(char *, uint64_t))(v89 + 8))(v70, v69);
            (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v44);
            LOBYTE(v101[0]) = v67;
            *((void *)&v101[0] + 1) = v68;
            *(void *)&v101[1] = v77;
            sub_24997F140(v101);
            goto LABEL_24;
          }
          (*(void (**)(char *, uint64_t))(v89 + 8))(v23, v48);
LABEL_29:
          (*(void (**)(char *, uint64_t))(v80 + 8))(v46, v44);
          return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
        case 5:
          LOBYTE(v101[0]) = 5;
          sub_24997EFE0();
          uint64_t v50 = v99;
          sub_249AEDD38();
          uint64_t v99 = v50;
          if (v50)
          {
LABEL_21:
            (*(void (**)(char *, uint64_t))(v80 + 8))(v16, v22);
            return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
          }
          sub_24997F034();
          uint64_t v60 = v87;
          uint64_t v61 = v99;
          sub_249AEDE08();
          uint64_t v62 = (void (**)(char *, uint64_t))(v84 + 8);
          uint64_t v37 = (void (**)(char *, uint64_t))(v80 + 8);
          uint64_t v99 = v61;
          if (!v61)
          {
            (*v62)(v21, v60);
            (*v37)(v16, v22);
            sub_24997F088(v101);
            goto LABEL_24;
          }
          (*v62)(v21, v60);
LABEL_32:
          (*v37)(v16, v22);
          return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
        case 6:
          (*(void (**)(char *, uint64_t))(v80 + 8))(v16, v22);
          sub_24997EF90(v101);
          goto LABEL_24;
        case 7:
          LOBYTE(v101[0]) = 7;
          sub_24997EE84();
          uint64_t v53 = v22;
          uint64_t v54 = v92;
          uint64_t v55 = v99;
          sub_249AEDD38();
          uint64_t v99 = v55;
          if (v55)
          {
            (*(void (**)(char *, uint64_t))(v80 + 8))(v16, v53);
            return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
          }
          char v103 = 1;
          sub_24997EED8();
          uint64_t v63 = v88;
          uint64_t v64 = v99;
          sub_249AEDE08();
          uint64_t v65 = (void (**)(char *, uint64_t))(v90 + 8);
          unint64_t v66 = (void (**)(char *, uint64_t))(v80 + 8);
          uint64_t v99 = v64;
          if (v64)
          {
            (*v65)(v54, v63);
            (*v66)(v16, v53);
            return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
          }
          (*v65)(v54, v63);
          (*v66)(v16, v53);
          v101[0] = v100[0];
          v101[1] = v100[1];
          v101[2] = v100[2];
          v101[3] = v100[3];
          v101[4] = v100[4];
          v101[5] = v100[5];
          v101[6] = v100[6];
          sub_24997EF2C(v101);
          goto LABEL_24;
        default:
          LOBYTE(v101[0]) = 0;
          uint64_t v26 = v16;
          uint64_t v27 = v99;
          sub_249AEDD28();
          uint64_t v99 = v27;
          if (v27)
          {
LABEL_16:
            (*(void (**)(char *, uint64_t))(v80 + 8))(v26, v22);
          }
          else
          {
            __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v100, *((uint64_t *)&v100[1] + 1));
            sub_24997F348();
            uint64_t v28 = v99;
            sub_249AEDF58();
            uint64_t v99 = v28;
            if (v28)
            {
              (*(void (**)(char *, uint64_t))(v80 + 8))(v16, v22);
              __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v100);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v80 + 8))(v16, v22);
              LOBYTE(v101[0]) = v103;
              sub_24997F39C(v101);
              __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v100);
LABEL_24:
              uint64_t v52 = v101;
LABEL_25:
              sub_2498A4990((uint64_t)v52, (uint64_t)v102);
              sub_2498A4990((uint64_t)v102, v94);
            }
          }
          break;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_249AEDB08();
      uint64_t v99 = swift_allocError();
      uint64_t v31 = v30;
      uint64_t v32 = v98;
      __swift_project_boxed_opaque_existential_2Tm(v98, v98[3]);
      sub_249AEE3F8();
      sub_249AEDAE8();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, *MEMORY[0x263F8DCB8], v29);
      swift_willThrow();
      uint64_t v19 = v32;
      (*(void (**)(char *, uint64_t))(v80 + 8))(v16, v22);
    }
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v19);
}

uint64_t Instrument.Kind.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1060);
  uint64_t v81 = *(void *)(v4 - 8);
  uint64_t v82 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v80 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1068);
  *(void *)&long long v76 = *(void *)(v77 - 8);
  MEMORY[0x270FA5388](v77);
  uint64_t v72 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1070);
  *(void *)&long long v78 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  *(void *)&long long v74 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1078);
  uint64_t v73 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1080);
  uint64_t v70 = *(void *)(v10 - 8);
  uint64_t v71 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1088);
  uint64_t v69 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1090);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v85 = v16;
  uint64_t v86 = v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498A4990(v2, (uint64_t)v89);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_24997EE30();
  uint64_t v84 = v19;
  sub_249AEE468();
  sub_2498A4990((uint64_t)v89, (uint64_t)v90);
  switch(sub_2498B8790((uint64_t)v90))
  {
    case 1u:
      uint64_t v50 = (const void *)sub_2498B87AC((uint64_t)v90);
      LOBYTE(v87[0]) = 1;
      sub_2498A4990((uint64_t)v89, (uint64_t)v88);
      uint64_t v51 = sub_2498B87AC((uint64_t)v88);
      sub_249944360(v51);
      sub_24997F2A0();
      uint64_t v53 = v84;
      uint64_t v52 = v85;
      sub_249AEDE48();
      memcpy(v87, v50, sizeof(v87));
      char v91 = 3;
      sub_24997F4F8();
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v15, v13);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v53, v52);
      return sub_2498FC9D8(v89, sub_2498FCAAC);
    case 2u:
      uint64_t v34 = (_OWORD *)sub_2498B87AC((uint64_t)v90);
      LOBYTE(v87[0]) = 2;
      sub_2498A4990((uint64_t)v89, (uint64_t)v88);
      uint64_t v35 = (uint64_t *)sub_2498B87AC((uint64_t)v88);
      sub_249971000(v35);
      sub_24997F1F8();
      uint64_t v37 = v84;
      uint64_t v36 = v85;
      sub_249AEDE48();
      v87[0] = *v34;
      long long v38 = v34[1];
      long long v39 = v34[2];
      long long v40 = v34[4];
      v87[3] = v34[3];
      v87[4] = v40;
      v87[1] = v38;
      v87[2] = v39;
      long long v41 = v34[5];
      long long v42 = v34[6];
      long long v43 = v34[8];
      v87[7] = v34[7];
      v87[8] = v43;
      v87[5] = v41;
      v87[6] = v42;
      char v91 = 2;
      sub_24997F4A4();
      uint64_t v44 = v71;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v12, v44);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v37, v36);
      return sub_2498FC9D8(v89, sub_2498FCAAC);
    case 3u:
      uint64_t v45 = *(void *)(sub_2498B87AC((uint64_t)v90) + 16);
      LOBYTE(v88[0]) = 3;
      sub_24997F1A4();
      long long v46 = v84;
      uint64_t v26 = v85;
      sub_249AEDE48();
      LOBYTE(v88[0]) = 0;
      uint64_t v47 = v75;
      uint64_t v48 = v83;
      sub_249AEDEB8();
      if (!v48)
      {
        if (v45)
        {
          v88[0] = v45;
          LOBYTE(v87[0]) = 1;
          sub_249944264();
          sub_249AEDF08();
        }
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v9, v47);
      uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v86 + 8);
      uint64_t v31 = v46;
      goto LABEL_12;
    case 4u:
      char v24 = *(unsigned char *)sub_2498B87AC((uint64_t)v90);
      LOBYTE(v88[0]) = 4;
      sub_24997F0EC();
      uint64_t v25 = v74;
      uint64_t v27 = v84;
      uint64_t v26 = v85;
      sub_249AEDE48();
      LOBYTE(v88[0]) = v24;
      LOBYTE(v87[0]) = 1;
      sub_24989C934();
      uint64_t v28 = v79;
      uint64_t v29 = v83;
      sub_249AEDF08();
      if (!v29)
      {
        LOBYTE(v88[0]) = 0;
        sub_249AEDEB8();
      }
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v25, v28);
      uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v86 + 8);
      uint64_t v31 = v27;
LABEL_12:
      uint64_t v49 = v26;
      goto LABEL_19;
    case 5u:
      sub_2498B87AC((uint64_t)v90);
      LOBYTE(v88[0]) = 5;
      sub_24997EFE0();
      uint64_t v65 = v72;
      unint64_t v66 = v84;
      uint64_t v33 = v85;
      sub_249AEDE48();
      sub_24997F450();
      uint64_t v67 = v77;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v76 + 8))(v65, v67);
      uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v86 + 8);
      uint64_t v31 = v66;
      goto LABEL_18;
    case 6u:
    case 7u:
      sub_2498B87AC((uint64_t)v90);
      sub_249AEDC58();
      __break(1u);
      JUMPOUT(0x24997DDFCLL);
    case 8u:
      uint64_t v54 = sub_2498B87AC((uint64_t)v90);
      long long v55 = *(_OWORD *)v54;
      long long v78 = *(_OWORD *)(v54 + 16);
      long long v79 = v55;
      long long v56 = *(_OWORD *)(v54 + 32);
      long long v76 = *(_OWORD *)(v54 + 48);
      long long v77 = v56;
      long long v57 = *(_OWORD *)(v54 + 64);
      long long v74 = *(_OWORD *)(v54 + 80);
      long long v75 = v57;
      uint64_t v58 = *(void *)(v54 + 96);
      uint64_t v59 = *(void *)(v54 + 104);
      LOBYTE(v87[0]) = 7;
      sub_2498A4990((uint64_t)v89, (uint64_t)v88);
      uint64_t v60 = sub_2498B87AC((uint64_t)v88);
      sub_2498FC8BC(*(void *)v60, *(void *)(v60 + 8), *(void **)(v60 + 16), *(void *)(v60 + 24), *(void **)(v60 + 32), *(void *)(v60 + 40), *(void *)(v60 + 48), *(void *)(v60 + 56), *(void **)(v60 + 64), *(void *)(v60 + 72), *(void **)(v60 + 80), *(void *)(v60 + 88), *(void *)(v60 + 96));
      sub_24997EE84();
      uint64_t v61 = v80;
      uint64_t v63 = v84;
      uint64_t v62 = v85;
      sub_249AEDE48();
      v87[0] = v79;
      v87[1] = v78;
      v87[2] = v77;
      v87[3] = v76;
      v87[4] = v75;
      v87[5] = v74;
      *(void *)&v87[6] = v58;
      *((void *)&v87[6] + 1) = v59;
      char v91 = 1;
      sub_24997F3FC();
      uint64_t v64 = v82;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v81 + 8))(v61, v64);
      (*(void (**)(char *, uint64_t))(v86 + 8))(v63, v62);
      return sub_2498FC9D8(v89, sub_2498FCAAC);
    case 9u:
      LOBYTE(v88[0]) = 6;
      uint64_t v32 = v84;
      uint64_t v33 = v85;
      sub_249AEDEC8();
      uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v86 + 8);
      uint64_t v31 = v32;
LABEL_18:
      uint64_t v49 = v33;
LABEL_19:
      uint64_t result = v30(v31, v49);
      break;
    default:
      char v20 = *(unsigned char *)sub_2498B87AC((uint64_t)v90);
      LOBYTE(v87[0]) = 0;
      uint64_t v22 = v84;
      uint64_t v21 = v85;
      sub_249AEDE38();
      LOBYTE(v87[0]) = v20;
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v88, v88[3]);
      sub_24997F54C();
      sub_249AEDF78();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v22, v21);
      uint64_t result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v88);
      break;
  }
  return result;
}

uint64_t sub_24997DE24@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Instrument.Kind.init(from:)(a1, a2);
}

uint64_t sub_24997DE3C(void *a1)
{
  return Instrument.Kind.encode(to:)(a1);
}

uint64_t sub_24997DE58(void *a1)
{
  return Instrument.Kind.restoreAssets(from:)(a1);
}

uint64_t _s14CarPlayAssetUI10InstrumentV4KindO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  uint64_t v1 = MEMORY[0x270FA5388](a1);
  uint64_t v3 = v2;
  sub_2498A4990(v1, (uint64_t)v94);
  sub_2498A4990(v3, (uint64_t)v95);
  sub_2498A4990((uint64_t)v94, (uint64_t)v96);
  sub_2498A4990((uint64_t)v95, (uint64_t)&v97);
  sub_2498A4990((uint64_t)v94, (uint64_t)v98);
  switch(sub_2498B8790((uint64_t)v98))
  {
    case 1u:
      uint64_t v10 = (const void *)sub_2498B87AC((uint64_t)v98);
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93) == 1)
      {
        uint64_t v11 = (const void *)sub_2498B87AC((uint64_t)v93);
        memcpy(__dst, v10, sizeof(__dst));
        memcpy(v91, v11, sizeof(v91));
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        char v12 = _s14CarPlayAssetUI10InstrumentV18GaugeConfigurationV2eeoiySbAE_AEtFZ_0((uint64_t)__dst, (uint64_t)v91);
        goto LABEL_49;
      }
      sub_2498A4990((uint64_t)v94, (uint64_t)__dst);
      uint64_t v79 = sub_2498B87AC((uint64_t)__dst);
      sub_249944360(v79);
      goto LABEL_59;
    case 2u:
      uint64_t v13 = (_OWORD *)sub_2498B87AC((uint64_t)v98);
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93) == 2)
      {
        uint64_t v14 = (_OWORD *)sub_2498B87AC((uint64_t)v93);
        __dst[5] = v13[5];
        __dst[6] = v13[6];
        __dst[7] = v13[7];
        __dst[8] = v13[8];
        __dst[1] = v13[1];
        __dst[2] = v13[2];
        __dst[3] = v13[3];
        __dst[4] = v13[4];
        __dst[0] = *v13;
        long long v15 = v14[7];
        v91[6] = v14[6];
        v91[7] = v15;
        v91[8] = v14[8];
        long long v16 = v14[3];
        v91[2] = v14[2];
        v91[3] = v16;
        long long v17 = v14[5];
        v91[4] = v14[4];
        v91[5] = v17;
        long long v18 = v14[1];
        v91[0] = *v14;
        v91[1] = v18;
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        char v12 = _s14CarPlayAssetUI10InstrumentV22IndicatorConfigurationV2eeoiySbAE_AEtFZ_0((uint64_t)__dst, (char *)v91);
        goto LABEL_49;
      }
      sub_2498A4990((uint64_t)v94, (uint64_t)__dst);
      uint64_t v80 = (uint64_t *)sub_2498B87AC((uint64_t)__dst);
      sub_249971000(v80);
      goto LABEL_59;
    case 3u:
      uint64_t v19 = (uint64_t *)sub_2498B87AC((uint64_t)v98);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      uint64_t v22 = v19[2];
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93) != 3) {
        goto LABEL_56;
      }
      uint64_t v23 = (void *)sub_2498B87AC((uint64_t)v93);
      uint64_t v24 = v23[2];
      if ((v20 != *v23 || v21 != v23[1]) && (sub_249AEE0D8() & 1) == 0) {
        goto LABEL_64;
      }
      if (!v22)
      {
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        swift_bridgeObjectRetain();
        sub_24998380C((uint64_t)v96);
        if (!v24) {
          goto LABEL_80;
        }
        goto LABEL_77;
      }
      if (!v24)
      {
        swift_bridgeObjectRetain();
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        swift_bridgeObjectRetain();
        sub_24998380C((uint64_t)v96);
        swift_bridgeObjectRelease();
LABEL_77:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_62;
      }
      swift_bridgeObjectRetain();
      sub_2498FC9D8(v95, sub_2498FB4B4);
      sub_2498FC9D8(v94, sub_2498FB4B4);
      swift_bridgeObjectRetain();
      uint64_t v25 = swift_bridgeObjectRetain();
      char v26 = sub_249888DF0(v25, v24);
      sub_24998380C((uint64_t)v96);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        goto LABEL_62;
      }
LABEL_80:
      char v63 = 1;
      return v63 & 1;
    case 4u:
      uint64_t v27 = sub_2498B87AC((uint64_t)v98);
      char v28 = *(unsigned char *)v27;
      uint64_t v29 = *(void *)(v27 + 8);
      uint64_t v30 = *(void *)(v27 + 16);
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93) != 4)
      {
        sub_2498A4990((uint64_t)v94, (uint64_t)__dst);
        sub_2498B87AC((uint64_t)__dst);
        swift_bridgeObjectRetain();
        goto LABEL_59;
      }
      uint64_t v31 = sub_2498B87AC((uint64_t)v93);
      char v32 = *(unsigned char *)v31;
      uint64_t v33 = *(void *)(v31 + 8);
      uint64_t v34 = *(void *)(v31 + 16);
      LOBYTE(__dst[0]) = v28;
      LOBYTE(v91[0]) = v32;
      unint64_t v35 = InstrumentDataIdentifier.rawValue.getter();
      uint64_t v37 = v36;
      if (v35 == InstrumentDataIdentifier.rawValue.getter() && v37 == v38)
      {
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v84 = sub_249AEE0D8();
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v84 & 1) == 0) {
          goto LABEL_61;
        }
      }
      if (v29 == v33 && v30 == v34) {
        goto LABEL_68;
      }
      char v86 = sub_249AEE0D8();
      goto LABEL_79;
    case 5u:
      sub_2498B87AC((uint64_t)v98);
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93) != 5) {
        goto LABEL_59;
      }
      sub_2498B87AC((uint64_t)v93);
      goto LABEL_68;
    case 6u:
      long long v39 = (uint64_t *)sub_2498B87AC((uint64_t)v98);
      uint64_t v40 = *v39;
      uint64_t v41 = v39[1];
      uint64_t v43 = v39[2];
      uint64_t v42 = v39[3];
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93) != 6)
      {
LABEL_56:
        sub_2498A4990((uint64_t)v94, (uint64_t)__dst);
        sub_2498B87AC((uint64_t)__dst);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_59;
      }
      uint64_t v44 = (void *)sub_2498B87AC((uint64_t)v93);
      uint64_t v46 = v44[2];
      uint64_t v45 = v44[3];
      if ((v40 != *v44 || v41 != v44[1]) && (sub_249AEE0D8() & 1) == 0) {
        goto LABEL_64;
      }
      if (v42)
      {
        if (!v45)
        {
LABEL_64:
          sub_2498FC9D8(v95, sub_2498FB4B4);
          uint64_t v82 = v94;
          goto LABEL_60;
        }
        if (v43 == v46 && v42 == v45)
        {
          sub_2498FC9D8(v95, sub_2498FB4B4);
          sub_2498FC9D8(v94, sub_2498FB4B4);
          sub_24998380C((uint64_t)v96);
          goto LABEL_80;
        }
        char v86 = sub_249AEE0D8();
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
LABEL_79:
        sub_24998380C((uint64_t)v96);
        if ((v86 & 1) == 0) {
          goto LABEL_62;
        }
      }
      else
      {
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        sub_24998380C((uint64_t)v96);
        if (v45) {
          goto LABEL_62;
        }
      }
      goto LABEL_80;
    case 7u:
      uint64_t v47 = sub_2498B87AC((uint64_t)v98);
      uint64_t v48 = *(void *)v47;
      uint64_t v49 = *(void *)(v47 + 8);
      uint64_t v50 = *(void *)(v47 + 16);
      uint64_t v51 = *(void *)(v47 + 24);
      uint64_t v52 = *(void *)(v47 + 32);
      uint64_t v53 = *(void *)(v47 + 40);
      char v54 = *(unsigned char *)(v47 + 48);
      uint64_t v55 = *(void *)(v47 + 56);
      uint64_t v56 = *(void *)(v47 + 64);
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93) == 7)
      {
        uint64_t v57 = sub_2498B87AC((uint64_t)v93);
        long long v58 = *(_OWORD *)v57;
        long long v59 = *(_OWORD *)(v57 + 16);
        uint64_t v60 = *(void *)(v57 + 32);
        uint64_t v61 = *(void *)(v57 + 40);
        char v62 = *(unsigned char *)(v57 + 48);
        *(void *)&__dst[0] = v48;
        *((void *)&__dst[0] + 1) = v49;
        *(void *)&__dst[1] = v50;
        *((void *)&__dst[1] + 1) = v51;
        *(void *)&__dst[2] = v52;
        *((void *)&__dst[2] + 1) = v53;
        LOBYTE(__dst[3]) = v54;
        *((void *)&__dst[3] + 1) = v55;
        *(void *)&__dst[4] = v56;
        v91[0] = v58;
        v91[1] = v59;
        *(void *)&v91[2] = v60;
        *((void *)&v91[2] + 1) = v61;
        LOBYTE(v91[3]) = v62;
        *(_OWORD *)((char *)&v91[3] + 8) = *(_OWORD *)(v57 + 56);
        char v63 = _s14CarPlayAssetUI17AvocadoWidgetInfoV2eeoiySbAC_ACtFZ_0((uint64_t)__dst, (uint64_t)v91);
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        sub_24998380C((uint64_t)v96);
        return v63 & 1;
      }
      sub_2498A4990((uint64_t)v94, (uint64_t)__dst);
      sub_2498B87AC((uint64_t)__dst);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_59;
    case 8u:
      uint64_t v64 = (uint64_t *)sub_2498B87AC((uint64_t)v98);
      uint64_t v65 = *v64;
      uint64_t v66 = v64[1];
      uint64_t v67 = v64[2];
      uint64_t v68 = v64[3];
      uint64_t v69 = v64[4];
      uint64_t v70 = v64[5];
      uint64_t v71 = v64[6];
      uint64_t v72 = v64[7];
      uint64_t v73 = v64[8];
      uint64_t v74 = v64[9];
      uint64_t v89 = v64[11];
      uint64_t v90 = v64[10];
      uint64_t v87 = v64[13];
      uint64_t v88 = v64[12];
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93) == 8)
      {
        long long v75 = (_OWORD *)sub_2498B87AC((uint64_t)v93);
        *(void *)&__dst[0] = v65;
        *((void *)&__dst[0] + 1) = v66;
        *(void *)&__dst[1] = v67;
        *((void *)&__dst[1] + 1) = v68;
        *(void *)&__dst[2] = v69;
        *((void *)&__dst[2] + 1) = v70;
        *(void *)&__dst[3] = v71;
        *((void *)&__dst[3] + 1) = v72;
        *(void *)&__dst[4] = v73;
        *((void *)&__dst[4] + 1) = v74;
        *(void *)&__dst[5] = v90;
        *((void *)&__dst[5] + 1) = v89;
        *(void *)&__dst[6] = v88;
        *((void *)&__dst[6] + 1) = v87;
        long long v76 = v75[1];
        v91[0] = *v75;
        v91[1] = v76;
        long long v77 = v75[3];
        v91[2] = v75[2];
        v91[3] = v77;
        long long v78 = v75[5];
        v91[4] = v75[4];
        v91[5] = v78;
        v91[6] = v75[6];
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        sub_2498FC9D8(v95, sub_2498FB4B4);
        sub_2498FC9D8(v94, sub_2498FB4B4);
        char v12 = _s14CarPlayAssetUI10InstrumentV15PopoverLocationO2eeoiySbAE_AEtFZ_0((uint64_t *)__dst, (uint64_t *)v91);
LABEL_49:
        char v63 = v12;
        sub_24998380C((uint64_t)v96);
        sub_2498FC9D8(v95, sub_2498FCAAC);
        sub_2498FC9D8(v94, sub_2498FCAAC);
        return v63 & 1;
      }
      sub_2498A4990((uint64_t)v94, (uint64_t)__dst);
      uint64_t v81 = sub_2498B87AC((uint64_t)__dst);
      sub_2498FC8BC(*(void *)v81, *(void *)(v81 + 8), *(void **)(v81 + 16), *(void *)(v81 + 24), *(void **)(v81 + 32), *(void *)(v81 + 40), *(void *)(v81 + 48), *(void *)(v81 + 56), *(void **)(v81 + 64), *(void *)(v81 + 72), *(void **)(v81 + 80), *(void *)(v81 + 88), *(void *)(v81 + 96));
LABEL_59:
      uint64_t v82 = v95;
LABEL_60:
      sub_2498FC9D8(v82, sub_2498FB4B4);
LABEL_61:
      sub_24998380C((uint64_t)v96);
      goto LABEL_62;
    case 9u:
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93) == 9) {
        goto LABEL_68;
      }
      goto LABEL_59;
    default:
      int v4 = *(unsigned __int8 *)sub_2498B87AC((uint64_t)v98);
      sub_2498A4990((uint64_t)v95, (uint64_t)v93);
      if (sub_2498B8790((uint64_t)v93)) {
        goto LABEL_59;
      }
      int v5 = *(unsigned __int8 *)sub_2498B87AC((uint64_t)v93);
      if (v4) {
        uint64_t v6 = 0x647261436E727574;
      }
      else {
        uint64_t v6 = 7364973;
      }
      if (v4) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0xE300000000000000;
      }
      if (v5) {
        uint64_t v8 = 0x647261436E727574;
      }
      else {
        uint64_t v8 = 7364973;
      }
      if (v5) {
        unint64_t v9 = 0xE800000000000000;
      }
      else {
        unint64_t v9 = 0xE300000000000000;
      }
      if (v6 == v8 && v7 == v9)
      {
        swift_bridgeObjectRelease_n();
LABEL_68:
        sub_24998380C((uint64_t)v96);
        char v63 = 1;
        return v63 & 1;
      }
      char v85 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24998380C((uint64_t)v96);
      if ((v85 & 1) == 0)
      {
LABEL_62:
        char v63 = 0;
        return v63 & 1;
      }
      goto LABEL_80;
  }
}

unint64_t sub_24997E9B0()
{
  unint64_t result = qword_2696E0F88;
  if (!qword_2696E0F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F88);
  }
  return result;
}

uint64_t sub_24997EA04(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v18 = *(_OWORD *)(a1 + 448);
  long long v19 = *(_OWORD *)(a1 + 464);
  long long v16 = *(_OWORD *)(a1 + 416);
  long long v17 = *(_OWORD *)(a1 + 432);
  long long v14 = *(_OWORD *)(a1 + 384);
  long long v15 = *(_OWORD *)(a1 + 400);
  long long v12 = *(_OWORD *)(a1 + 352);
  long long v13 = *(_OWORD *)(a1 + 368);
  long long v10 = *(_OWORD *)(a1 + 320);
  long long v11 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    v12,
    *((void *)&v12 + 1),
    v13,
    *((void *)&v13 + 1),
    v14,
    *((void *)&v14 + 1),
    v15,
    *((void *)&v15 + 1),
    v16,
    *((void *)&v16 + 1),
    v17,
    *((void *)&v17 + 1),
    v18,
    *((void *)&v18 + 1),
    v19,
    *((void *)&v19 + 1),
    *(void *)(a1 + 480),
    *(void *)(a1 + 488));
  return a1;
}

uint64_t sub_24997EAC8()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_24997EB08()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

uint64_t sub_24997EB48()
{
  long long v17 = *(_OWORD *)(v0 + 480);
  long long v18 = *(_OWORD *)(v0 + 496);
  long long v15 = *(_OWORD *)(v0 + 448);
  long long v16 = *(_OWORD *)(v0 + 464);
  long long v13 = *(_OWORD *)(v0 + 416);
  long long v14 = *(_OWORD *)(v0 + 432);
  long long v11 = *(_OWORD *)(v0 + 384);
  long long v12 = *(_OWORD *)(v0 + 400);
  long long v9 = *(_OWORD *)(v0 + 352);
  long long v10 = *(_OWORD *)(v0 + 368);
  long long v7 = *(_OWORD *)(v0 + 320);
  long long v8 = *(_OWORD *)(v0 + 336);
  long long v5 = *(_OWORD *)(v0 + 288);
  long long v6 = *(_OWORD *)(v0 + 304);
  long long v3 = *(_OWORD *)(v0 + 256);
  long long v4 = *(_OWORD *)(v0 + 272);
  long long v2 = *(_OWORD *)(v0 + 224);
  sub_2498FCAAC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(void **)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160),
    *(void *)(v0 + 168),
    *(void **)(v0 + 176),
    *(void *)(v0 + 184),
    *(void *)(v0 + 192),
    *(void *)(v0 + 200),
    *(void *)(v0 + 208),
    *(void *)(v0 + 216),
    v2,
    *((void **)&v2 + 1),
    *(void **)(v0 + 240),
    *(void *)(v0 + 248),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((unint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(void *)(v0 + 512));

  return MEMORY[0x270FA0238](v0, 528, 7);
}

unint64_t sub_24997EC28()
{
  unint64_t result = qword_2696E0F98;
  if (!qword_2696E0F98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0F98);
  }
  return result;
}

unint64_t sub_24997EC7C()
{
  unint64_t result = qword_2696E0FA0;
  if (!qword_2696E0FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0FA0);
  }
  return result;
}

unint64_t sub_24997ECD0()
{
  unint64_t result = qword_2696E0FA8;
  if (!qword_2696E0FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0FA8);
  }
  return result;
}

uint64_t sub_24997ED24(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

unint64_t sub_24997ED88()
{
  unint64_t result = qword_2696E0FB8;
  if (!qword_2696E0FB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0FB8);
  }
  return result;
}

unint64_t sub_24997EDDC()
{
  unint64_t result = qword_2696E0FC0;
  if (!qword_2696E0FC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E0FC0);
  }
  return result;
}

unint64_t sub_24997EE30()
{
  unint64_t result = qword_2696E1000;
  if (!qword_2696E1000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1000);
  }
  return result;
}

unint64_t sub_24997EE84()
{
  unint64_t result = qword_2696E1008;
  if (!qword_2696E1008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1008);
  }
  return result;
}

unint64_t sub_24997EED8()
{
  unint64_t result = qword_2696E1010;
  if (!qword_2696E1010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1010);
  }
  return result;
}

void *sub_24997EF2C(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xFE00000000000007;
  unint64_t v7 = result[62] & 1 | 0x8000000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

double sub_24997EF90(_OWORD *a1)
{
  double result = 0.0;
  a1[28] = 0u;
  a1[29] = 0u;
  a1[26] = 0u;
  a1[27] = 0u;
  a1[24] = 0u;
  a1[25] = 0u;
  a1[22] = 0u;
  a1[23] = 0u;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  a1[30] = 0u;
  a1[31] = xmmword_249AFD170;
  return result;
}

unint64_t sub_24997EFE0()
{
  unint64_t result = qword_2696E1018;
  if (!qword_2696E1018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1018);
  }
  return result;
}

unint64_t sub_24997F034()
{
  unint64_t result = qword_2696E1020;
  if (!qword_2696E1020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1020);
  }
  return result;
}

void *sub_24997F088(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xFE00000000000007;
  uint64_t v7 = result[62] & 1 | 0x5000000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

unint64_t sub_24997F0EC()
{
  unint64_t result = qword_2696E1028;
  if (!qword_2696E1028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1028);
  }
  return result;
}

void *sub_24997F140(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xFE00000000000007;
  uint64_t v7 = result[62] & 1 | 0x4000000000000000;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

unint64_t sub_24997F1A4()
{
  unint64_t result = qword_2696E1030;
  if (!qword_2696E1030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1030);
  }
  return result;
}

unint64_t sub_24997F1F8()
{
  unint64_t result = qword_2696E1038;
  if (!qword_2696E1038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1038);
  }
  return result;
}

unint64_t sub_24997F24C()
{
  unint64_t result = qword_2696E1040;
  if (!qword_2696E1040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1040);
  }
  return result;
}

unint64_t sub_24997F2A0()
{
  unint64_t result = qword_2696E1048;
  if (!qword_2696E1048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1048);
  }
  return result;
}

unint64_t sub_24997F2F4()
{
  unint64_t result = qword_2696E1050;
  if (!qword_2696E1050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1050);
  }
  return result;
}

unint64_t sub_24997F348()
{
  unint64_t result = qword_2696E1058;
  if (!qword_2696E1058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1058);
  }
  return result;
}

void *sub_24997F39C(void *result)
{
  uint64_t v1 = result[45] & 7;
  uint64_t v2 = result[48] & 7;
  uint64_t v3 = result[51] & 7;
  uint64_t v4 = result[54] & 7;
  uint64_t v5 = result[57] & 7;
  unint64_t v6 = result[60] & 0xFE00000000000007;
  uint64_t v7 = result[62] & 1;
  result[42] = *((unsigned int *)result + 84);
  result[45] = v1;
  result[48] = v2;
  result[51] = v3;
  result[54] = v4;
  result[57] = v5;
  result[60] = v6;
  result[62] = v7;
  return result;
}

unint64_t sub_24997F3FC()
{
  unint64_t result = qword_2696E1098;
  if (!qword_2696E1098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1098);
  }
  return result;
}

unint64_t sub_24997F450()
{
  unint64_t result = qword_2696E10A0;
  if (!qword_2696E10A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E10A0);
  }
  return result;
}

unint64_t sub_24997F4A4()
{
  unint64_t result = qword_2696E10A8;
  if (!qword_2696E10A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E10A8);
  }
  return result;
}

unint64_t sub_24997F4F8()
{
  unint64_t result = qword_2696E10B0;
  if (!qword_2696E10B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E10B0);
  }
  return result;
}

unint64_t sub_24997F54C()
{
  unint64_t result = qword_2696E10B8;
  if (!qword_2696E10B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E10B8);
  }
  return result;
}

uint64_t sub_24997F5A0()
{
  return sub_24997F648(&qword_2696E10C0, &qword_2696E10C8);
}

unint64_t sub_24997F5CC()
{
  unint64_t result = qword_2696E10D0;
  if (!qword_2696E10D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E10D0);
  }
  return result;
}

uint64_t sub_24997F620()
{
  return sub_24997F648(&qword_2696E10D8, &qword_2696E10E0);
}

uint64_t sub_24997F648(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24997F69C()
{
  unint64_t result = qword_2696E10E8;
  if (!qword_2696E10E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E10E8);
  }
  return result;
}

unint64_t sub_24997F6F4()
{
  unint64_t result = qword_2696E10F0;
  if (!qword_2696E10F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E10F0);
  }
  return result;
}

unint64_t sub_24997F74C()
{
  unint64_t result = qword_2696E10F8;
  if (!qword_2696E10F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF438);
    sub_2498EC32C(&qword_2696DF388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E10F8);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Instrument(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    uint64_t v21 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_249AEB808();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)((char *)a1 + *(int *)(v8 + 52)) = *(void *)((char *)a2 + *(int *)(v8 + 52));
    uint64_t v9 = *(int *)(a3 + 20);
    long long v10 = (void *)((char *)a1 + v9);
    long long v11 = (void *)((char *)a2 + v9);
    uint64_t v59 = a3;
    long long v58 = a2;
    char v85 = (void *)v11[10];
    char v86 = (void *)v11[9];
    uint64_t v83 = v11[12];
    unint64_t v84 = v11[11];
    uint64_t v81 = v11[14];
    uint64_t v82 = v11[13];
    uint64_t v79 = v11[16];
    uint64_t v80 = v11[15];
    uint64_t v77 = v11[18];
    uint64_t v78 = v11[17];
    long long v75 = (void *)v11[20];
    uint64_t v76 = v11[19];
    uint64_t v73 = v11[22];
    uint64_t v74 = v11[21];
    uint64_t v71 = v11[24];
    uint64_t v72 = v11[23];
    uint64_t v69 = v11[26];
    uint64_t v70 = v11[25];
    uint64_t v67 = (void *)v11[28];
    uint64_t v68 = (void *)v11[27];
    uint64_t v66 = v11[29];
    uint64_t v65 = v11[30];
    uint64_t v64 = v11[31];
    uint64_t v63 = v11[32];
    uint64_t v62 = v11[33];
    uint64_t v61 = v11[34];
    uint64_t v60 = v11[35];
    uint64_t v29 = v11[36];
    uint64_t v30 = v11[37];
    uint64_t v57 = a1;
    uint64_t v31 = v11[38];
    uint64_t v32 = v11[39];
    uint64_t v33 = v11[40];
    unint64_t v34 = v11[41];
    uint64_t v35 = v11[42];
    uint64_t v36 = v11[43];
    uint64_t v37 = v11[44];
    uint64_t v38 = v11[45];
    uint64_t v39 = v11[46];
    uint64_t v40 = v11[47];
    uint64_t v41 = v11[48];
    uint64_t v42 = v11[49];
    uint64_t v43 = v11[50];
    uint64_t v44 = v11[51];
    uint64_t v45 = v11[52];
    uint64_t v46 = v11[53];
    uint64_t v47 = v11[54];
    uint64_t v48 = v11[55];
    uint64_t v49 = v11[56];
    uint64_t v50 = v11[57];
    uint64_t v51 = v11[58];
    uint64_t v52 = v11[59];
    unint64_t v53 = v11[60];
    uint64_t v54 = v11[61];
    unint64_t v55 = v11[62];
    uint64_t v56 = v11[63];
    long long v12 = (void *)v11[8];
    uint64_t v13 = *v11;
    uint64_t v14 = v11[1];
    long long v15 = (void *)v11[2];
    long long v16 = (void *)v11[3];
    long long v17 = (void *)v11[4];
    long long v18 = (void *)v11[5];
    uint64_t v19 = v11[6];
    uint64_t v20 = v11[7];
    sub_2498FB4B4(*v11, v14, v15, v16, v17, v18, v19, v20, v12, v86, v85, v84, v83, v82, v81, v80, v79, v78, v77,
      v76,
      v75,
      v74,
      v73,
      v72,
      v71,
      v70,
      v69,
      v68,
      v67,
      v66,
      v65,
      v64,
      v63,
      v62,
      v61,
      v60,
      v29,
      v30,
      v31,
      v32,
      v33,
      v34,
      v35,
      v36,
      v37,
      v38,
      v39,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55);
    *long long v10 = v13;
    v10[1] = v14;
    void v10[2] = (uint64_t)v15;
    v10[3] = (uint64_t)v16;
    void v10[4] = (uint64_t)v17;
    void v10[5] = (uint64_t)v18;
    v10[6] = v19;
    v10[7] = v20;
    v10[8] = (uint64_t)v12;
    uint64_t v21 = v57;
    v10[9] = (uint64_t)v86;
    v10[10] = (uint64_t)v85;
    v10[11] = v84;
    v10[12] = v83;
    v10[13] = v82;
    v10[14] = v81;
    v10[15] = v80;
    v10[16] = v79;
    v10[17] = v78;
    v10[18] = v77;
    v10[19] = v76;
    v10[20] = (uint64_t)v75;
    v10[21] = v74;
    v10[22] = v73;
    v10[23] = v72;
    unsigned char v10[24] = v71;
    v10[25] = v70;
    v10[26] = v69;
    v10[27] = (uint64_t)v68;
    v10[28] = (uint64_t)v67;
    v10[29] = v66;
    v10[30] = v65;
    v10[31] = v64;
    v10[32] = v63;
    v10[33] = v62;
    v10[34] = v61;
    v10[35] = v60;
    v10[36] = v29;
    v10[37] = v30;
    v10[38] = v31;
    v10[39] = v32;
    v10[40] = v33;
    v10[41] = v34;
    v10[42] = v35;
    v10[43] = v36;
    v10[44] = v37;
    v10[45] = v38;
    v10[46] = v39;
    v10[47] = v40;
    v10[48] = v41;
    v10[49] = v42;
    v10[50] = v43;
    v10[51] = v44;
    v10[52] = v45;
    v10[53] = v46;
    v10[54] = v47;
    v10[55] = v48;
    v10[56] = v49;
    v10[57] = v50;
    v10[58] = v51;
    v10[59] = v52;
    v10[60] = v53;
    v10[61] = v54;
    v10[62] = v55;
    v10[63] = v56;
    uint64_t v22 = *(int *)(v59 + 24);
    uint64_t v23 = (char *)v57 + v22;
    uint64_t v24 = (char *)v58 + v22;
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    *((void *)v23 + 2) = *((void *)v24 + 2);
    *((_WORD *)v23 + 12) = *((_WORD *)v24 + 12);
    uint64_t v26 = *((void *)v24 + 5);
    *((void *)v23 + 4) = *((void *)v24 + 4);
    *((void *)v23 + 5) = v26;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v21;
}

uint64_t destroy for Instrument(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  long long v21 = *(_OWORD *)(v5 + 464);
  long long v22 = *(_OWORD *)(v5 + 480);
  long long v19 = *(_OWORD *)(v5 + 432);
  long long v20 = *(_OWORD *)(v5 + 448);
  long long v17 = *(_OWORD *)(v5 + 400);
  long long v18 = *(_OWORD *)(v5 + 416);
  long long v15 = *(_OWORD *)(v5 + 368);
  long long v16 = *(_OWORD *)(v5 + 384);
  long long v13 = *(_OWORD *)(v5 + 336);
  long long v14 = *(_OWORD *)(v5 + 352);
  long long v11 = *(_OWORD *)(v5 + 304);
  long long v12 = *(_OWORD *)(v5 + 320);
  long long v9 = *(_OWORD *)(v5 + 272);
  long long v10 = *(_OWORD *)(v5 + 288);
  long long v7 = *(_OWORD *)(v5 + 240);
  long long v8 = *(_OWORD *)(v5 + 256);
  sub_2498FCAAC(*(void *)v5, *(void *)(v5 + 8), *(void **)(v5 + 16), *(void **)(v5 + 24), *(void **)(v5 + 32), *(void **)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void **)(v5 + 64), *(void **)(v5 + 72), *(void **)(v5 + 80), *(void *)(v5 + 88), *(void *)(v5 + 96), *(void *)(v5 + 104), *(void *)(v5 + 112), *(void *)(v5 + 120), *(void *)(v5 + 128), *(void *)(v5 + 136), *(void *)(v5 + 144),
    *(void *)(v5 + 152),
    *(void **)(v5 + 160),
    *(void *)(v5 + 168),
    *(void *)(v5 + 176),
    *(void *)(v5 + 184),
    *(void *)(v5 + 192),
    *(void *)(v5 + 200),
    *(void *)(v5 + 208),
    *(void **)(v5 + 216),
    *(void **)(v5 + 224),
    *(void *)(v5 + 232),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((unint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    SBYTE8(v14),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    SBYTE8(v17),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    SBYTE8(v20),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    *(void *)(v5 + 496));
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Instrument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  uint64_t v55 = a2;
  uint64_t v54 = a1;
  *(void *)(a1 + *(int *)(v7 + 52)) = *(void *)(a2 + *(int *)(v7 + 52));
  uint64_t v8 = *(int *)(a3 + 20);
  long long v9 = (uint64_t *)(a1 + v8);
  long long v10 = (uint64_t *)(a2 + v8);
  uint64_t v82 = (void *)v10[10];
  uint64_t v83 = (void *)v10[9];
  uint64_t v80 = v10[12];
  unint64_t v81 = v10[11];
  uint64_t v78 = v10[14];
  uint64_t v79 = v10[13];
  uint64_t v76 = v10[16];
  uint64_t v77 = v10[15];
  uint64_t v74 = v10[18];
  uint64_t v75 = v10[17];
  uint64_t v72 = (void *)v10[20];
  uint64_t v73 = v10[19];
  uint64_t v70 = v10[22];
  uint64_t v71 = v10[21];
  uint64_t v68 = v10[24];
  uint64_t v69 = v10[23];
  uint64_t v66 = v10[26];
  uint64_t v67 = v10[25];
  uint64_t v64 = (void *)v10[28];
  uint64_t v65 = (void *)v10[27];
  uint64_t v63 = v10[29];
  uint64_t v62 = v10[30];
  uint64_t v61 = v10[31];
  uint64_t v60 = v10[32];
  uint64_t v59 = v10[33];
  uint64_t v58 = v10[34];
  uint64_t v57 = v10[35];
  uint64_t v26 = v10[36];
  uint64_t v27 = v10[37];
  uint64_t v28 = v10[38];
  uint64_t v29 = v10[39];
  uint64_t v30 = v10[40];
  unint64_t v31 = v10[41];
  uint64_t v32 = v10[42];
  uint64_t v33 = v10[43];
  uint64_t v34 = v10[44];
  uint64_t v35 = v10[45];
  uint64_t v36 = v10[46];
  uint64_t v37 = v10[47];
  uint64_t v38 = v10[48];
  uint64_t v39 = v10[49];
  uint64_t v40 = v10[50];
  uint64_t v41 = v10[51];
  uint64_t v42 = v10[52];
  uint64_t v43 = v10[53];
  uint64_t v44 = v10[54];
  uint64_t v45 = v10[55];
  uint64_t v46 = v10[56];
  uint64_t v47 = v10[57];
  uint64_t v48 = v10[58];
  uint64_t v49 = v10[59];
  unint64_t v50 = v10[60];
  uint64_t v51 = v10[61];
  unint64_t v52 = v10[62];
  uint64_t v53 = v10[63];
  long long v11 = (void *)v10[8];
  uint64_t v12 = *v10;
  uint64_t v13 = v10[1];
  long long v14 = (void *)v10[2];
  long long v15 = (void *)v10[3];
  long long v16 = (void *)v10[4];
  long long v17 = (void *)v10[5];
  uint64_t v18 = v10[6];
  uint64_t v19 = v10[7];
  sub_2498FB4B4(*v10, v13, v14, v15, v16, v17, v18, v19, v11, v83, v82, v81, v80, v79, v78, v77, v76, v75, v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v66,
    v65,
    v64,
    v63,
    v62,
    v61,
    v60,
    v59,
    v58,
    v57,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52);
  *long long v9 = v12;
  v9[1] = v13;
  void v9[2] = (uint64_t)v14;
  void v9[3] = (uint64_t)v15;
  uint64_t v9[4] = (uint64_t)v16;
  v9[5] = (uint64_t)v17;
  v9[6] = v18;
  v9[7] = v19;
  unsigned char v9[8] = (uint64_t)v11;
  v9[9] = (uint64_t)v83;
  v9[10] = (uint64_t)v82;
  v9[11] = v81;
  v9[12] = v80;
  v9[13] = v79;
  v9[14] = v78;
  v9[15] = v77;
  v9[16] = v76;
  v9[17] = v75;
  v9[18] = v74;
  v9[19] = v73;
  v9[20] = (uint64_t)v72;
  v9[21] = v71;
  v9[22] = v70;
  v9[23] = v69;
  v9[24] = v68;
  v9[25] = v67;
  v9[26] = v66;
  v9[27] = (uint64_t)v65;
  v9[28] = (uint64_t)v64;
  v9[29] = v63;
  v9[30] = v62;
  v9[31] = v61;
  v9[32] = v60;
  v9[33] = v59;
  v9[34] = v58;
  v9[35] = v57;
  v9[36] = v26;
  v9[37] = v27;
  v9[38] = v28;
  v9[39] = v29;
  v9[40] = v30;
  v9[41] = v31;
  v9[42] = v32;
  v9[43] = v33;
  v9[44] = v34;
  v9[45] = v35;
  v9[46] = v36;
  v9[47] = v37;
  v9[48] = v38;
  v9[49] = v39;
  v9[50] = v40;
  v9[51] = v41;
  v9[52] = v42;
  v9[53] = v43;
  v9[54] = v44;
  v9[55] = v45;
  v9[56] = v46;
  v9[57] = v47;
  v9[58] = v48;
  v9[59] = v49;
  v9[60] = v50;
  v9[61] = v51;
  v9[62] = v52;
  v9[63] = v53;
  uint64_t v20 = *(int *)(a3 + 24);
  uint64_t v21 = v54 + v20;
  uint64_t v22 = v55 + v20;
  uint64_t v23 = *(void *)(v22 + 8);
  *(void *)uint64_t v21 = *(void *)v22;
  *(void *)(v21 + 8) = v23;
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  *(_WORD *)(v21 + 24) = *(_WORD *)(v22 + 24);
  uint64_t v24 = *(void *)(v22 + 40);
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  *(void *)(v21 + 40) = v24;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v54;
}

uint64_t assignWithCopy for Instrument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  uint64_t v8 = a2;
  uint64_t v82 = a2;
  uint64_t v80 = a1;
  *(void *)(a1 + *(int *)(v7 + 52)) = *(void *)(a2 + *(int *)(v7 + 52));
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  long long v11 = (uint64_t *)(v8 + v9);
  uint64_t v117 = v11[1];
  uint64_t v118 = *v11;
  long long v115 = (void *)v11[3];
  unint64_t v116 = (void *)v11[2];
  uint64_t v113 = (void *)v11[5];
  unint64_t v114 = (void *)v11[4];
  uint64_t v111 = v11[7];
  uint64_t v112 = v11[6];
  uint64_t v109 = (void *)v11[9];
  uint64_t v110 = (void *)v11[8];
  unint64_t v107 = v11[11];
  uint64_t v108 = (void *)v11[10];
  uint64_t v105 = v11[13];
  uint64_t v106 = v11[12];
  uint64_t v103 = v11[15];
  uint64_t v104 = v11[14];
  uint64_t v102 = v11[16];
  uint64_t v101 = v11[17];
  uint64_t v100 = v11[18];
  uint64_t v99 = v11[19];
  uint64_t v98 = (void *)v11[20];
  uint64_t v97 = v11[21];
  uint64_t v96 = v11[22];
  uint64_t v95 = v11[23];
  uint64_t v94 = v11[24];
  uint64_t v93 = v11[25];
  uint64_t v92 = v11[26];
  char v91 = (void *)v11[27];
  uint64_t v90 = (void *)v11[28];
  uint64_t v89 = v11[29];
  uint64_t v88 = v11[30];
  uint64_t v87 = v11[31];
  uint64_t v86 = v11[32];
  uint64_t v85 = v11[33];
  uint64_t v84 = v11[34];
  uint64_t v83 = v11[35];
  uint64_t v13 = v11[37];
  uint64_t v12 = v11[38];
  uint64_t v15 = v11[39];
  uint64_t v14 = v11[40];
  unint64_t v17 = v11[41];
  uint64_t v16 = v11[42];
  uint64_t v19 = v11[43];
  uint64_t v18 = v11[44];
  uint64_t v20 = v11[45];
  uint64_t v61 = v11[36];
  uint64_t v62 = v11[46];
  uint64_t v63 = v11[47];
  uint64_t v64 = v11[48];
  uint64_t v65 = v11[49];
  uint64_t v66 = v11[50];
  uint64_t v67 = v11[51];
  uint64_t v68 = v11[52];
  uint64_t v69 = v11[53];
  uint64_t v70 = v11[54];
  uint64_t v71 = v11[55];
  uint64_t v72 = v11[56];
  uint64_t v73 = v11[57];
  uint64_t v74 = v11[58];
  uint64_t v75 = v11[59];
  unint64_t v76 = v11[60];
  uint64_t v77 = v11[61];
  unint64_t v78 = v11[62];
  uint64_t v79 = v11[63];
  sub_2498FB4B4(*v11, v117, v116, v115, v114, v113, v112, v111, v110, v109, v108, v107, v106, v105, v104, v103, v102, v101, v100,
    v99,
    v98,
    v97,
    v96,
    v95,
    v94,
    v93,
    v92,
    v91,
    v90,
    v89,
    v88,
    v87,
    v86,
    v85,
    v84,
    v83,
    v61,
    v13,
    v12,
    v15,
    v14,
    v17,
    v16,
    v19,
    v18,
    v20,
    v62,
    v63,
    *((_OWORD *)v11 + 24),
    v65,
    v66,
    v67,
    v68,
    v69,
    v70,
    v71,
    v72,
    v73,
    v74,
    v75,
    v76,
    v77,
    v78);
  uint64_t v21 = *(void *)v10;
  uint64_t v22 = *(void *)(v10 + 8);
  *(void *)uint64_t v10 = v118;
  *(void *)(v10 + 8) = v117;
  uint64_t v23 = *(void **)(v10 + 16);
  uint64_t v24 = *(void **)(v10 + 24);
  *(void *)(v10 + 16) = v116;
  *(void *)(v10 + 24) = v115;
  uint64_t v25 = *(void **)(v10 + 32);
  uint64_t v26 = *(void **)(v10 + 40);
  *(void *)(v10 + 32) = v114;
  *(void *)(v10 + 40) = v113;
  uint64_t v27 = *(void *)(v10 + 48);
  uint64_t v28 = *(void *)(v10 + 56);
  *(void *)(v10 + 48) = v112;
  *(void *)(v10 + 56) = v111;
  long long v29 = *(_OWORD *)(v10 + 64);
  long long v30 = *(_OWORD *)(v10 + 80);
  *(void *)(v10 + 64) = v110;
  *(void *)(v10 + 72) = v109;
  *(void *)(v10 + 80) = v108;
  *(void *)(v10 + 88) = v107;
  long long v31 = *(_OWORD *)(v10 + 96);
  long long v32 = *(_OWORD *)(v10 + 112);
  *(void *)(v10 + 96) = v106;
  *(void *)(v10 + 104) = v105;
  *(void *)(v10 + 112) = v104;
  *(void *)(v10 + 120) = v103;
  long long v33 = *(_OWORD *)(v10 + 128);
  long long v34 = *(_OWORD *)(v10 + 144);
  *(void *)(v10 + 128) = v102;
  *(void *)(v10 + 136) = v101;
  *(void *)(v10 + 144) = v100;
  *(void *)(v10 + 152) = v99;
  long long v35 = *(_OWORD *)(v10 + 160);
  long long v36 = *(_OWORD *)(v10 + 176);
  *(void *)(v10 + 160) = v98;
  *(void *)(v10 + 168) = v97;
  *(void *)(v10 + 176) = v96;
  *(void *)(v10 + 184) = v95;
  long long v37 = *(_OWORD *)(v10 + 192);
  long long v38 = *(_OWORD *)(v10 + 208);
  *(void *)(v10 + 192) = v94;
  *(void *)(v10 + 200) = v93;
  *(void *)(v10 + 208) = v92;
  *(void *)(v10 + 216) = v91;
  long long v39 = *(_OWORD *)(v10 + 224);
  long long v40 = *(_OWORD *)(v10 + 240);
  *(void *)(v10 + 224) = v90;
  *(void *)(v10 + 232) = v89;
  *(void *)(v10 + 240) = v88;
  *(void *)(v10 + 248) = v87;
  long long v41 = *(_OWORD *)(v10 + 256);
  long long v42 = *(_OWORD *)(v10 + 272);
  *(void *)(v10 + 256) = v86;
  *(void *)(v10 + 264) = v85;
  *(void *)(v10 + 272) = v84;
  *(void *)(v10 + 280) = v83;
  long long v43 = *(_OWORD *)(v10 + 288);
  long long v44 = *(_OWORD *)(v10 + 304);
  *(void *)(v10 + 288) = v61;
  *(void *)(v10 + 296) = v13;
  *(void *)(v10 + 304) = v12;
  *(void *)(v10 + 312) = v15;
  long long v45 = *(_OWORD *)(v10 + 320);
  long long v46 = *(_OWORD *)(v10 + 336);
  *(void *)(v10 + 320) = v14;
  *(void *)(v10 + 328) = v17;
  *(void *)(v10 + 336) = v16;
  *(void *)(v10 + 344) = v19;
  long long v47 = *(_OWORD *)(v10 + 352);
  long long v48 = *(_OWORD *)(v10 + 368);
  *(void *)(v10 + 352) = v18;
  *(void *)(v10 + 360) = v20;
  *(void *)(v10 + 368) = v62;
  *(void *)(v10 + 376) = v63;
  long long v49 = *(_OWORD *)(v10 + 384);
  long long v50 = *(_OWORD *)(v10 + 400);
  *(void *)(v10 + 384) = v64;
  *(void *)(v10 + 392) = v65;
  *(void *)(v10 + 400) = v66;
  *(void *)(v10 + 408) = v67;
  long long v51 = *(_OWORD *)(v10 + 416);
  long long v52 = *(_OWORD *)(v10 + 432);
  *(void *)(v10 + 416) = v68;
  *(void *)(v10 + 424) = v69;
  *(void *)(v10 + 432) = v70;
  *(void *)(v10 + 440) = v71;
  long long v53 = *(_OWORD *)(v10 + 448);
  long long v54 = *(_OWORD *)(v10 + 464);
  *(void *)(v10 + 448) = v72;
  *(void *)(v10 + 456) = v73;
  *(void *)(v10 + 464) = v74;
  *(void *)(v10 + 472) = v75;
  long long v55 = *(_OWORD *)(v10 + 480);
  *(void *)(v10 + 480) = v76;
  *(void *)(v10 + 488) = v77;
  unint64_t v56 = *(void *)(v10 + 496);
  *(void *)(v10 + 496) = v78;
  *(void *)(v10 + 504) = v79;
  sub_2498FCAAC(v21, v22, v23, v24, v25, v26, v27, v28, (void *)v29, *((void **)&v29 + 1), (void *)v30, *((unint64_t *)&v30 + 1), v31, *((uint64_t *)&v31 + 1), v32, *((uint64_t *)&v32 + 1), v33, *((uint64_t *)&v33 + 1), v34,
    *((uint64_t *)&v34 + 1),
    (void *)v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((void **)&v38 + 1),
    (void *)v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    *((unint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    SBYTE8(v47),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    SBYTE8(v50),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    SBYTE8(v53),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56);
  uint64_t v57 = *(int *)(a3 + 24);
  uint64_t v58 = v80 + v57;
  uint64_t v59 = v82 + v57;
  *(void *)(v80 + v57) = *(void *)(v82 + v57);
  swift_retain();
  swift_release();
  *(void *)(v58 + 8) = *(void *)(v59 + 8);
  *(void *)(v58 + 16) = *(void *)(v59 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v58 + 24) = *(unsigned char *)(v59 + 24);
  *(unsigned char *)(v58 + 25) = *(unsigned char *)(v59 + 25);
  *(void *)(v58 + 32) = *(void *)(v59 + 32);
  *(void *)(v58 + 40) = *(void *)(v59 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v80;
}

uint64_t initializeWithTake for Instrument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v7 + 52)) = *(void *)(a2 + *(int *)(v7 + 52));
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x200uLL);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (_OWORD *)(a1 + v8);
  uint64_t v10 = (_OWORD *)(a2 + v8);
  long long v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  void v9[2] = v10[2];
  return a1;
}

uint64_t assignWithTake for Instrument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(a1 + *(int *)(v7 + 52)) = *(void *)(a2 + *(int *)(v7 + 52));
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (_OWORD *)(a2 + v8);
  uint64_t v11 = *(void *)v9;
  uint64_t v12 = *(void *)(v9 + 8);
  uint64_t v13 = *(void **)(v9 + 16);
  uint64_t v14 = *(void **)(v9 + 24);
  uint64_t v15 = *(void **)(v9 + 32);
  uint64_t v16 = *(void **)(v9 + 40);
  uint64_t v17 = *(void *)(v9 + 48);
  uint64_t v18 = *(void *)(v9 + 56);
  long long v19 = *(_OWORD *)(v9 + 64);
  long long v20 = *(_OWORD *)(v9 + 80);
  long long v21 = *(_OWORD *)(v9 + 96);
  long long v22 = *(_OWORD *)(v9 + 112);
  long long v23 = *(_OWORD *)(v9 + 128);
  long long v24 = *(_OWORD *)(v9 + 144);
  long long v25 = *(_OWORD *)(v9 + 160);
  long long v26 = *(_OWORD *)(v9 + 176);
  long long v27 = *(_OWORD *)(v9 + 192);
  long long v28 = *(_OWORD *)(v9 + 208);
  long long v29 = *(_OWORD *)(v9 + 224);
  long long v30 = *(_OWORD *)(v9 + 240);
  long long v31 = *(_OWORD *)(v9 + 256);
  long long v32 = *(_OWORD *)(v9 + 272);
  long long v33 = *(_OWORD *)(v9 + 288);
  long long v34 = *(_OWORD *)(v9 + 304);
  long long v35 = *(_OWORD *)(v9 + 320);
  long long v36 = *(_OWORD *)(v9 + 336);
  long long v37 = *(_OWORD *)(v9 + 352);
  long long v38 = *(_OWORD *)(v9 + 368);
  long long v39 = *(_OWORD *)(v9 + 384);
  long long v40 = *(_OWORD *)(v9 + 400);
  long long v41 = *(_OWORD *)(v9 + 416);
  long long v42 = *(_OWORD *)(v9 + 432);
  long long v43 = *(_OWORD *)(v9 + 448);
  long long v44 = *(_OWORD *)(v9 + 464);
  long long v45 = *(_OWORD *)(v9 + 480);
  unint64_t v46 = *(void *)(v9 + 496);
  long long v47 = v10[1];
  *(_OWORD *)uint64_t v9 = *v10;
  *(_OWORD *)(v9 + 16) = v47;
  long long v48 = v10[3];
  *(_OWORD *)(v9 + 32) = v10[2];
  *(_OWORD *)(v9 + 48) = v48;
  long long v49 = v10[5];
  *(_OWORD *)(v9 + 64) = v10[4];
  *(_OWORD *)(v9 + 80) = v49;
  long long v50 = v10[7];
  *(_OWORD *)(v9 + 96) = v10[6];
  *(_OWORD *)(v9 + 112) = v50;
  long long v51 = v10[9];
  *(_OWORD *)(v9 + 128) = v10[8];
  *(_OWORD *)(v9 + 144) = v51;
  long long v52 = v10[11];
  *(_OWORD *)(v9 + 160) = v10[10];
  *(_OWORD *)(v9 + 176) = v52;
  long long v53 = v10[13];
  *(_OWORD *)(v9 + 192) = v10[12];
  *(_OWORD *)(v9 + 208) = v53;
  long long v54 = v10[15];
  *(_OWORD *)(v9 + 224) = v10[14];
  *(_OWORD *)(v9 + 240) = v54;
  long long v55 = v10[17];
  *(_OWORD *)(v9 + 256) = v10[16];
  *(_OWORD *)(v9 + 272) = v55;
  long long v56 = v10[19];
  *(_OWORD *)(v9 + 288) = v10[18];
  *(_OWORD *)(v9 + 304) = v56;
  long long v57 = v10[21];
  *(_OWORD *)(v9 + 320) = v10[20];
  *(_OWORD *)(v9 + 336) = v57;
  long long v58 = v10[23];
  *(_OWORD *)(v9 + 352) = v10[22];
  *(_OWORD *)(v9 + 368) = v58;
  long long v59 = v10[25];
  *(_OWORD *)(v9 + 384) = v10[24];
  *(_OWORD *)(v9 + 400) = v59;
  long long v60 = v10[27];
  *(_OWORD *)(v9 + 416) = v10[26];
  *(_OWORD *)(v9 + 432) = v60;
  long long v61 = v10[29];
  *(_OWORD *)(v9 + 448) = v10[28];
  *(_OWORD *)(v9 + 464) = v61;
  long long v62 = v10[31];
  *(_OWORD *)(v9 + 480) = v10[30];
  *(_OWORD *)(v9 + 496) = v62;
  sub_2498FCAAC(v11, v12, v13, v14, v15, v16, v17, v18, (void *)v19, *((void **)&v19 + 1), (void *)v20, *((unint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24,
    *((uint64_t *)&v24 + 1),
    (void *)v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((void **)&v28 + 1),
    (void *)v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((unint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    SBYTE8(v37),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    SBYTE8(v40),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    SBYTE8(v43),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v46);
  uint64_t v63 = *(int *)(a3 + 24);
  uint64_t v64 = a1 + v63;
  uint64_t v65 = a2 + v63;
  *(void *)(a1 + v63) = *(void *)v65;
  swift_release();
  uint64_t v66 = *(void *)(v65 + 16);
  *(void *)(v64 + 8) = *(void *)(v65 + 8);
  *(void *)(v64 + 16) = v66;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v64 + 24) = *(unsigned char *)(v65 + 24);
  *(unsigned char *)(v64 + 25) = *(unsigned char *)(v65 + 25);
  uint64_t v67 = *(void *)(v65 + 40);
  *(void *)(v64 + 32) = *(void *)(v65 + 32);
  *(void *)(v64 + 40) = v67;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Instrument(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_249980E0C);
}

uint64_t sub_249980E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(_DWORD *)(a1 + *(int *)(a3 + 20) + 340);
    if (v10 > 0x80000000) {
      return -v10;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for Instrument(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249980EE4);
}

double sub_249980EE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    double result = 0.0;
    *(_OWORD *)(v12 + 304) = 0u;
    *(_OWORD *)(v12 + 320) = 0u;
    *(_OWORD *)(v12 + 272) = 0u;
    *(_OWORD *)(v12 + 288) = 0u;
    *(_OWORD *)(v12 + 240) = 0u;
    *(_OWORD *)(v12 + 256) = 0u;
    *(_OWORD *)(v12 + 208) = 0u;
    *(_OWORD *)(v12 + 224) = 0u;
    *(_OWORD *)(v12 + 176) = 0u;
    *(_OWORD *)(v12 + 192) = 0u;
    *(_OWORD *)(v12 + 144) = 0u;
    *(_OWORD *)(v12 + 160) = 0u;
    *(_OWORD *)(v12 + 112) = 0u;
    *(_OWORD *)(v12 + 128) = 0u;
    *(_OWORD *)(v12 + 80) = 0u;
    *(_OWORD *)(v12 + 96) = 0u;
    *(_OWORD *)(v12 + 48) = 0u;
    *(_OWORD *)(v12 + 64) = 0u;
    *(_OWORD *)(v12 + 16) = 0u;
    *(_OWORD *)(v12 + 32) = 0u;
    *(_OWORD *)uint64_t v12 = 0u;
    *(void *)(v12 + 336) = (unint64_t)-(int)a2 << 32;
    *(_OWORD *)(v12 + 344) = 0u;
    *(_OWORD *)(v12 + 360) = 0u;
    *(_OWORD *)(v12 + 376) = 0u;
    *(_OWORD *)(v12 + 392) = 0u;
    *(_OWORD *)(v12 + 408) = 0u;
    *(_OWORD *)(v12 + 424) = 0u;
    *(_OWORD *)(v12 + 440) = 0u;
    *(_OWORD *)(v12 + 456) = 0u;
    *(_OWORD *)(v12 + 472) = 0u;
    *(_OWORD *)(v12 + 488) = 0u;
    *(void *)(v12 + 504) = 0;
  }
  return result;
}

void sub_249980FF8()
{
  sub_249981098();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_249981098()
{
  if (!qword_2696E1110)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF438);
    sub_249981170();
    sub_2499811DC(&qword_2696E1120, &qword_2696DF438);
    sub_2499811DC(&qword_2696DF450, &qword_2696DF438);
    unint64_t v0 = type metadata accessor for SkipEncode();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E1110);
    }
  }
}

unint64_t sub_249981170()
{
  unint64_t result = qword_2696E1118;
  if (!qword_2696E1118)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1118);
  }
  return result;
}

uint64_t sub_2499811DC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2498EC32C(&qword_2696DF428);
    sub_2498EC32C(&qword_2696DF430);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for Instrument.Configuration()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Instrument.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Instrument.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Instrument.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Instrument.Configuration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Instrument.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Configuration()
{
  return &type metadata for Instrument.Configuration;
}

ValueMetadata *type metadata accessor for Instrument.NavigationStyle()
{
  return &type metadata for Instrument.NavigationStyle;
}

ValueMetadata *type metadata accessor for Instrument.PunchThroughType()
{
  return &type metadata for Instrument.PunchThroughType;
}

void destroy for Instrument.Kind(uint64_t a1)
{
  long long v15 = *(_OWORD *)(a1 + 464);
  long long v16 = *(_OWORD *)(a1 + 480);
  long long v13 = *(_OWORD *)(a1 + 432);
  long long v14 = *(_OWORD *)(a1 + 448);
  long long v11 = *(_OWORD *)(a1 + 400);
  long long v12 = *(_OWORD *)(a1 + 416);
  long long v9 = *(_OWORD *)(a1 + 368);
  long long v10 = *(_OWORD *)(a1 + 384);
  long long v7 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 352);
  long long v5 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 320);
  long long v3 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 288);
  long long v1 = *(_OWORD *)(a1 + 240);
  long long v2 = *(_OWORD *)(a1 + 256);
  sub_2498FCAAC(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void **)(a1 + 72), *(void **)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void **)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216),
    *(void **)(a1 + 224),
    *(void *)(a1 + 232),
    v1,
    *((uint64_t *)&v1 + 1),
    v2,
    *((uint64_t *)&v2 + 1),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((unint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    SBYTE8(v8),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    SBYTE8(v11),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    SBYTE8(v14),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    *(void *)(a1 + 496));
}

uint64_t *initializeWithCopy for Instrument.Kind(uint64_t *a1, uint64_t *a2)
{
  uint64_t v66 = (void *)a2[10];
  uint64_t v67 = (void *)a2[9];
  uint64_t v64 = a2[12];
  unint64_t v65 = a2[11];
  uint64_t v62 = a2[14];
  uint64_t v63 = a2[13];
  uint64_t v60 = a2[16];
  uint64_t v61 = a2[15];
  uint64_t v58 = a2[18];
  uint64_t v59 = a2[17];
  long long v56 = (void *)a2[20];
  uint64_t v57 = a2[19];
  uint64_t v54 = a2[22];
  uint64_t v55 = a2[21];
  uint64_t v52 = a2[24];
  uint64_t v53 = a2[23];
  uint64_t v50 = a2[26];
  uint64_t v51 = a2[25];
  long long v48 = (void *)a2[28];
  long long v49 = (void *)a2[27];
  uint64_t v47 = a2[29];
  uint64_t v46 = a2[30];
  uint64_t v45 = a2[31];
  uint64_t v44 = a2[32];
  uint64_t v43 = a2[33];
  uint64_t v42 = a2[34];
  uint64_t v41 = a2[35];
  uint64_t v13 = a2[36];
  uint64_t v14 = a2[37];
  uint64_t v15 = a2[38];
  uint64_t v16 = a2[39];
  uint64_t v17 = a2[40];
  unint64_t v18 = a2[41];
  uint64_t v19 = a2[42];
  uint64_t v20 = a2[43];
  uint64_t v21 = a2[44];
  uint64_t v22 = a2[45];
  uint64_t v23 = a2[46];
  uint64_t v24 = a2[47];
  uint64_t v25 = a2[48];
  uint64_t v26 = a2[49];
  uint64_t v27 = a2[50];
  uint64_t v28 = a2[51];
  uint64_t v29 = a2[52];
  uint64_t v30 = a2[53];
  uint64_t v31 = a2[54];
  uint64_t v32 = a2[55];
  uint64_t v33 = a2[56];
  uint64_t v34 = a2[57];
  uint64_t v35 = a2[58];
  uint64_t v36 = a2[59];
  unint64_t v37 = a2[60];
  uint64_t v38 = a2[61];
  unint64_t v39 = a2[62];
  uint64_t v40 = a2[63];
  long long v3 = (void *)a2[8];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  long long v6 = (void *)a2[2];
  long long v7 = (void *)a2[3];
  long long v8 = (void *)a2[4];
  long long v9 = (void *)a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  sub_2498FB4B4(*a2, v5, v6, v7, v8, v9, v10, v11, v3, v67, v66, v65, v64, v63, v62, v61, v60, v59, v58,
    v57,
    v56,
    v55,
    v54,
    v53,
    v52,
    v51,
    v50,
    v49,
    v48,
    v47,
    v46,
    v45,
    v44,
    v43,
    v42,
    v41,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    v38,
    v39);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = (uint64_t)v6;
  a1[3] = (uint64_t)v7;
  a1[4] = (uint64_t)v8;
  a1[5] = (uint64_t)v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = (uint64_t)v3;
  a1[9] = (uint64_t)v67;
  a1[10] = (uint64_t)v66;
  a1[11] = v65;
  a1[12] = v64;
  a1[13] = v63;
  a1[14] = v62;
  a1[15] = v61;
  a1[16] = v60;
  a1[17] = v59;
  a1[18] = v58;
  a1[19] = v57;
  a1[20] = (uint64_t)v56;
  a1[21] = v55;
  a1[22] = v54;
  a1[23] = v53;
  a1[24] = v52;
  a1[25] = v51;
  a1[26] = v50;
  a1[27] = (uint64_t)v49;
  a1[28] = (uint64_t)v48;
  a1[29] = v47;
  a1[30] = v46;
  a1[31] = v45;
  a1[32] = v44;
  a1[33] = v43;
  a1[34] = v42;
  a1[35] = v41;
  a1[36] = v13;
  a1[37] = v14;
  a1[38] = v15;
  a1[39] = v16;
  a1[40] = v17;
  a1[41] = v18;
  a1[42] = v19;
  a1[43] = v20;
  a1[44] = v21;
  a1[45] = v22;
  a1[46] = v23;
  a1[47] = v24;
  a1[48] = v25;
  a1[49] = v26;
  a1[50] = v27;
  a1[51] = v28;
  a1[52] = v29;
  a1[53] = v30;
  a1[54] = v31;
  a1[55] = v32;
  a1[56] = v33;
  a1[57] = v34;
  a1[58] = v35;
  a1[59] = v36;
  a1[60] = v37;
  a1[61] = v38;
  a1[62] = v39;
  a1[63] = v40;
  return a1;
}

uint64_t assignWithCopy for Instrument.Kind(uint64_t a1, uint64_t *a2)
{
  uint64_t v102 = *a2;
  uint64_t v103 = a2[1];
  uint64_t v100 = (void *)a2[3];
  uint64_t v101 = (void *)a2[2];
  uint64_t v98 = (void *)a2[5];
  uint64_t v99 = (void *)a2[4];
  uint64_t v96 = a2[7];
  uint64_t v97 = a2[6];
  uint64_t v94 = (void *)a2[9];
  uint64_t v95 = (void *)a2[8];
  unint64_t v92 = a2[11];
  uint64_t v93 = (void *)a2[10];
  uint64_t v90 = a2[13];
  uint64_t v91 = a2[12];
  uint64_t v88 = a2[15];
  uint64_t v89 = a2[14];
  uint64_t v87 = a2[16];
  uint64_t v86 = a2[17];
  uint64_t v85 = a2[18];
  uint64_t v84 = a2[19];
  uint64_t v83 = (void *)a2[20];
  uint64_t v82 = a2[21];
  uint64_t v81 = a2[22];
  uint64_t v80 = a2[23];
  uint64_t v79 = a2[24];
  uint64_t v78 = a2[25];
  uint64_t v77 = a2[26];
  unint64_t v76 = (void *)a2[27];
  uint64_t v75 = (void *)a2[28];
  uint64_t v74 = a2[29];
  uint64_t v73 = a2[30];
  uint64_t v72 = a2[31];
  uint64_t v71 = a2[32];
  uint64_t v70 = a2[33];
  uint64_t v69 = a2[34];
  uint64_t v68 = a2[35];
  uint64_t v4 = a2[37];
  uint64_t v3 = a2[38];
  uint64_t v6 = a2[39];
  uint64_t v5 = a2[40];
  unint64_t v8 = a2[41];
  uint64_t v7 = a2[42];
  uint64_t v10 = a2[43];
  uint64_t v9 = a2[44];
  uint64_t v11 = a2[45];
  uint64_t v49 = a2[36];
  uint64_t v50 = a2[46];
  uint64_t v51 = a2[47];
  uint64_t v52 = a2[48];
  uint64_t v53 = a2[49];
  uint64_t v54 = a2[50];
  uint64_t v55 = a2[51];
  uint64_t v56 = a2[52];
  uint64_t v57 = a2[53];
  uint64_t v58 = a2[54];
  uint64_t v59 = a2[55];
  uint64_t v60 = a2[56];
  uint64_t v61 = a2[57];
  uint64_t v62 = a2[58];
  uint64_t v63 = a2[59];
  unint64_t v64 = a2[60];
  uint64_t v65 = a2[61];
  unint64_t v66 = a2[62];
  uint64_t v67 = a2[63];
  sub_2498FB4B4(*a2, v103, v101, v100, v99, v98, v97, v96, v95, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v49,
    v4,
    v3,
    v6,
    v5,
    v8,
    v7,
    v10,
    v9,
    v11,
    v50,
    v51,
    *((_OWORD *)a2 + 24),
    v53,
    v54,
    v55,
    v56,
    v57,
    *((_OWORD *)a2 + 27),
    v59,
    v60,
    v61,
    v62,
    v63,
    v64,
    v65,
    v66);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v102;
  *(void *)(a1 + 8) = v103;
  uint64_t v14 = *(void **)(a1 + 16);
  uint64_t v15 = *(void **)(a1 + 24);
  *(void *)(a1 + 16) = v101;
  *(void *)(a1 + 24) = v100;
  uint64_t v16 = *(void **)(a1 + 32);
  uint64_t v17 = *(void **)(a1 + 40);
  *(void *)(a1 + 32) = v99;
  *(void *)(a1 + 40) = v98;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v97;
  *(void *)(a1 + 56) = v96;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v95;
  *(void *)(a1 + 72) = v94;
  *(void *)(a1 + 80) = v93;
  *(void *)(a1 + 88) = v92;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v91;
  *(void *)(a1 + 104) = v90;
  *(void *)(a1 + 112) = v89;
  *(void *)(a1 + 120) = v88;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v87;
  *(void *)(a1 + 136) = v86;
  *(void *)(a1 + 144) = v85;
  *(void *)(a1 + 152) = v84;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 160) = v83;
  *(void *)(a1 + 168) = v82;
  *(void *)(a1 + 176) = v81;
  *(void *)(a1 + 184) = v80;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 192) = v79;
  *(void *)(a1 + 200) = v78;
  *(void *)(a1 + 208) = v77;
  *(void *)(a1 + 216) = v76;
  long long v30 = *(_OWORD *)(a1 + 224);
  long long v31 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 224) = v75;
  *(void *)(a1 + 232) = v74;
  *(void *)(a1 + 240) = v73;
  *(void *)(a1 + 248) = v72;
  long long v32 = *(_OWORD *)(a1 + 256);
  long long v33 = *(_OWORD *)(a1 + 272);
  *(void *)(a1 + 256) = v71;
  *(void *)(a1 + 264) = v70;
  *(void *)(a1 + 272) = v69;
  *(void *)(a1 + 280) = v68;
  long long v34 = *(_OWORD *)(a1 + 288);
  long long v35 = *(_OWORD *)(a1 + 304);
  *(void *)(a1 + 288) = v49;
  *(void *)(a1 + 296) = v4;
  *(void *)(a1 + 304) = v3;
  *(void *)(a1 + 312) = v6;
  long long v36 = *(_OWORD *)(a1 + 320);
  long long v37 = *(_OWORD *)(a1 + 336);
  *(void *)(a1 + 320) = v5;
  *(void *)(a1 + 328) = v8;
  *(void *)(a1 + 336) = v7;
  *(void *)(a1 + 344) = v10;
  long long v38 = *(_OWORD *)(a1 + 352);
  long long v39 = *(_OWORD *)(a1 + 368);
  *(void *)(a1 + 352) = v9;
  *(void *)(a1 + 360) = v11;
  *(void *)(a1 + 368) = v50;
  *(void *)(a1 + 376) = v51;
  long long v40 = *(_OWORD *)(a1 + 384);
  long long v41 = *(_OWORD *)(a1 + 400);
  *(void *)(a1 + 384) = v52;
  *(void *)(a1 + 392) = v53;
  *(void *)(a1 + 400) = v54;
  *(void *)(a1 + 408) = v55;
  long long v42 = *(_OWORD *)(a1 + 416);
  long long v43 = *(_OWORD *)(a1 + 432);
  *(void *)(a1 + 416) = v56;
  *(void *)(a1 + 424) = v57;
  *(void *)(a1 + 432) = v58;
  *(void *)(a1 + 440) = v59;
  long long v44 = *(_OWORD *)(a1 + 448);
  long long v45 = *(_OWORD *)(a1 + 464);
  *(void *)(a1 + 448) = v60;
  *(void *)(a1 + 456) = v61;
  *(void *)(a1 + 464) = v62;
  *(void *)(a1 + 472) = v63;
  long long v46 = *(_OWORD *)(a1 + 480);
  *(void *)(a1 + 480) = v64;
  *(void *)(a1 + 488) = v65;
  unint64_t v47 = *(void *)(a1 + 496);
  *(void *)(a1 + 496) = v66;
  *(void *)(a1 + 504) = v67;
  sub_2498FCAAC(v12, v13, v14, v15, v16, v17, v18, v19, (void *)v20, *((void **)&v20 + 1), (void *)v21, *((unint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    (void *)v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((void **)&v29 + 1),
    (void *)v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((unint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    SBYTE8(v38),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    SBYTE8(v41),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    SBYTE8(v44),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47);
  return a1;
}

uint64_t assignWithTake for Instrument.Kind(uint64_t a1, _OWORD *a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void **)(a1 + 24);
  unint64_t v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void **)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  long long v18 = *(_OWORD *)(a1 + 160);
  long long v19 = *(_OWORD *)(a1 + 176);
  long long v20 = *(_OWORD *)(a1 + 192);
  long long v21 = *(_OWORD *)(a1 + 208);
  long long v22 = *(_OWORD *)(a1 + 224);
  long long v23 = *(_OWORD *)(a1 + 240);
  long long v24 = *(_OWORD *)(a1 + 256);
  long long v25 = *(_OWORD *)(a1 + 272);
  long long v26 = *(_OWORD *)(a1 + 288);
  long long v27 = *(_OWORD *)(a1 + 304);
  long long v28 = *(_OWORD *)(a1 + 320);
  long long v29 = *(_OWORD *)(a1 + 336);
  long long v30 = *(_OWORD *)(a1 + 352);
  long long v31 = *(_OWORD *)(a1 + 368);
  long long v32 = *(_OWORD *)(a1 + 384);
  long long v33 = *(_OWORD *)(a1 + 400);
  long long v34 = *(_OWORD *)(a1 + 416);
  long long v35 = *(_OWORD *)(a1 + 432);
  long long v36 = *(_OWORD *)(a1 + 448);
  long long v37 = *(_OWORD *)(a1 + 464);
  long long v38 = *(_OWORD *)(a1 + 480);
  unint64_t v39 = *(void *)(a1 + 496);
  long long v40 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v40;
  long long v41 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v41;
  long long v42 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v42;
  long long v43 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v43;
  long long v44 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v44;
  long long v45 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v45;
  long long v46 = a2[13];
  *(_OWORD *)(a1 + 192) = a2[12];
  *(_OWORD *)(a1 + 208) = v46;
  long long v47 = a2[15];
  *(_OWORD *)(a1 + 224) = a2[14];
  *(_OWORD *)(a1 + 240) = v47;
  long long v48 = a2[17];
  *(_OWORD *)(a1 + 256) = a2[16];
  *(_OWORD *)(a1 + 272) = v48;
  long long v49 = a2[19];
  *(_OWORD *)(a1 + 288) = a2[18];
  *(_OWORD *)(a1 + 304) = v49;
  long long v50 = a2[21];
  *(_OWORD *)(a1 + 320) = a2[20];
  *(_OWORD *)(a1 + 336) = v50;
  long long v51 = a2[23];
  *(_OWORD *)(a1 + 352) = a2[22];
  *(_OWORD *)(a1 + 368) = v51;
  long long v52 = a2[25];
  *(_OWORD *)(a1 + 384) = a2[24];
  *(_OWORD *)(a1 + 400) = v52;
  long long v53 = a2[27];
  *(_OWORD *)(a1 + 416) = a2[26];
  *(_OWORD *)(a1 + 432) = v53;
  long long v54 = a2[29];
  *(_OWORD *)(a1 + 448) = a2[28];
  *(_OWORD *)(a1 + 464) = v54;
  long long v55 = a2[31];
  *(_OWORD *)(a1 + 480) = a2[30];
  *(_OWORD *)(a1 + 496) = v55;
  sub_2498FCAAC(v4, v5, v6, v7, v8, v9, v10, v11, (void *)v12, *((void **)&v12 + 1), (void *)v13, *((unint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    (void *)v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((void **)&v21 + 1),
    (void *)v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((unint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    SBYTE8(v30),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    SBYTE8(v33),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    SBYTE8(v36),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39);
  return a1;
}