double storeEnumTagSinglePayload for Instrument.Kind(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(void *)(a1 + 504) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 512) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      result = 0.0;
      *(_OWORD *)(a1 + 304) = 0u;
      *(_OWORD *)(a1 + 320) = 0u;
      *(_OWORD *)(a1 + 272) = 0u;
      *(_OWORD *)(a1 + 288) = 0u;
      *(_OWORD *)(a1 + 240) = 0u;
      *(_OWORD *)(a1 + 256) = 0u;
      *(_OWORD *)(a1 + 208) = 0u;
      *(_OWORD *)(a1 + 224) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      *(_OWORD *)(a1 + 192) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 336) = (unint64_t)-a2 << 32;
      *(_OWORD *)(a1 + 344) = 0u;
      *(_OWORD *)(a1 + 360) = 0u;
      *(_OWORD *)(a1 + 376) = 0u;
      *(_OWORD *)(a1 + 392) = 0u;
      *(_OWORD *)(a1 + 408) = 0u;
      *(_OWORD *)(a1 + 424) = 0u;
      *(_OWORD *)(a1 + 440) = 0u;
      *(_OWORD *)(a1 + 456) = 0u;
      *(_OWORD *)(a1 + 472) = 0u;
      *(_OWORD *)(a1 + 488) = 0u;
      *(void *)(a1 + 504) = 0;
      return result;
    }
    *(unsigned char *)(a1 + 512) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_249982270(uint64_t result, uint64_t a2)
{
  if (a2 < 9)
  {
    uint64_t v2 = *(void *)(result + 360) & 7;
    uint64_t v3 = *(void *)(result + 384) & 7;
    uint64_t v4 = *(void *)(result + 408) & 7;
    uint64_t v5 = *(void *)(result + 432) & 7;
    uint64_t v6 = *(void *)(result + 456) & 7;
    unint64_t v7 = *(void *)(result + 480) & 0xFE00000000000007;
    uint64_t v8 = *(void *)(result + 496) & 1 | (a2 << 60);
    *(void *)(result + 336) = *(unsigned int *)(result + 336);
    *(void *)(result + 360) = v2;
    *(void *)(result + 384) = v3;
    *(void *)(result + 408) = v4;
    *(void *)(result + 432) = v5;
    *(void *)(result + 456) = v6;
    *(void *)(result + 480) = v7;
    *(void *)(result + 496) = v8;
  }
  else
  {
    *(void *)result = (a2 - 9);
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)(result + 488) = 0;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 496) = xmmword_249AFD170;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind()
{
  return &type metadata for Instrument.Kind;
}

unsigned char *storeEnumTagSinglePayload for Instrument.Kind.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249982434);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind.CodingKeys()
{
  return &type metadata for Instrument.Kind.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Instrument.Kind.GaugeCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249982538);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind.GaugeCodingKeys()
{
  return &type metadata for Instrument.Kind.GaugeCodingKeys;
}

ValueMetadata *type metadata accessor for Instrument.Kind.IndicatorCodingKeys()
{
  return &type metadata for Instrument.Kind.IndicatorCodingKeys;
}

ValueMetadata *type metadata accessor for Instrument.Kind.InputStreamCodingKeys()
{
  return &type metadata for Instrument.Kind.InputStreamCodingKeys;
}

ValueMetadata *type metadata accessor for Instrument.Kind.PunchThroughCodingKeys()
{
  return &type metadata for Instrument.Kind.PunchThroughCodingKeys;
}

unsigned char *_s14CarPlayAssetUI10InstrumentV16PunchThroughTypeOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *result = a2;
        return result;
      case 2:
        *(_WORD *)result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *result = 0;
      break;
    case 2:
      *(_WORD *)result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249982640);
    case 4:
      *(_DWORD *)result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind.PunchThroughTypeCodingKeys()
{
  return &type metadata for Instrument.Kind.PunchThroughTypeCodingKeys;
}

unsigned char *_s14CarPlayAssetUI10InstrumentV15NavigationStyleOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249982744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Kind.PopoverCodingKeys()
{
  return &type metadata for Instrument.Kind.PopoverCodingKeys;
}

unsigned char *_s14CarPlayAssetUI10InstrumentV4KindO19IndicatorCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249982848);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.CodingKeys()
{
  return &type metadata for Instrument.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Instrument.Configuration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24998294CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.Configuration.CodingKeys()
{
  return &type metadata for Instrument.Configuration.CodingKeys;
}

unint64_t sub_249982988()
{
  unint64_t result = qword_2696E1128;
  if (!qword_2696E1128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1128);
  }
  return result;
}

unint64_t sub_2499829E0()
{
  unint64_t result = qword_2696E1130;
  if (!qword_2696E1130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1130);
  }
  return result;
}

unint64_t sub_249982A38()
{
  unint64_t result = qword_2696E1138;
  if (!qword_2696E1138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1138);
  }
  return result;
}

unint64_t sub_249982A90()
{
  unint64_t result = qword_2696E1140;
  if (!qword_2696E1140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1140);
  }
  return result;
}

unint64_t sub_249982AE8()
{
  unint64_t result = qword_2696E1148;
  if (!qword_2696E1148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1148);
  }
  return result;
}

unint64_t sub_249982B40()
{
  unint64_t result = qword_2696E1150;
  if (!qword_2696E1150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1150);
  }
  return result;
}

unint64_t sub_249982B98()
{
  unint64_t result = qword_2696E1158;
  if (!qword_2696E1158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1158);
  }
  return result;
}

unint64_t sub_249982BF0()
{
  unint64_t result = qword_2696E1160;
  if (!qword_2696E1160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1160);
  }
  return result;
}

unint64_t sub_249982C48()
{
  unint64_t result = qword_2696E1168;
  if (!qword_2696E1168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1168);
  }
  return result;
}

unint64_t sub_249982CA0()
{
  unint64_t result = qword_2696E1170;
  if (!qword_2696E1170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1170);
  }
  return result;
}

unint64_t sub_249982CF8()
{
  unint64_t result = qword_2696E1178;
  if (!qword_2696E1178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1178);
  }
  return result;
}

unint64_t sub_249982D50()
{
  unint64_t result = qword_2696E1180;
  if (!qword_2696E1180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1180);
  }
  return result;
}

unint64_t sub_249982DA8()
{
  unint64_t result = qword_2696E1188;
  if (!qword_2696E1188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1188);
  }
  return result;
}

unint64_t sub_249982E00()
{
  unint64_t result = qword_2696E1190;
  if (!qword_2696E1190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1190);
  }
  return result;
}

unint64_t sub_249982E58()
{
  unint64_t result = qword_2696E1198;
  if (!qword_2696E1198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1198);
  }
  return result;
}

unint64_t sub_249982EB0()
{
  unint64_t result = qword_2696E11A0;
  if (!qword_2696E11A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11A0);
  }
  return result;
}

unint64_t sub_249982F08()
{
  unint64_t result = qword_2696E11A8;
  if (!qword_2696E11A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11A8);
  }
  return result;
}

unint64_t sub_249982F60()
{
  unint64_t result = qword_2696E11B0;
  if (!qword_2696E11B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11B0);
  }
  return result;
}

unint64_t sub_249982FB8()
{
  unint64_t result = qword_2696E11B8;
  if (!qword_2696E11B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11B8);
  }
  return result;
}

unint64_t sub_249983010()
{
  unint64_t result = qword_2696E11C0;
  if (!qword_2696E11C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11C0);
  }
  return result;
}

unint64_t sub_249983068()
{
  unint64_t result = qword_2696E11C8;
  if (!qword_2696E11C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11C8);
  }
  return result;
}

unint64_t sub_2499830C0()
{
  unint64_t result = qword_2696E11D0;
  if (!qword_2696E11D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11D0);
  }
  return result;
}

unint64_t sub_249983118()
{
  unint64_t result = qword_2696E11D8;
  if (!qword_2696E11D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11D8);
  }
  return result;
}

unint64_t sub_249983170()
{
  unint64_t result = qword_2696E11E0;
  if (!qword_2696E11E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11E0);
  }
  return result;
}

unint64_t sub_2499831C8()
{
  unint64_t result = qword_2696E11E8;
  if (!qword_2696E11E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11E8);
  }
  return result;
}

unint64_t sub_249983220()
{
  unint64_t result = qword_2696E11F0;
  if (!qword_2696E11F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11F0);
  }
  return result;
}

unint64_t sub_249983278()
{
  unint64_t result = qword_2696E11F8;
  if (!qword_2696E11F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E11F8);
  }
  return result;
}

uint64_t sub_2499832CC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x756F72676B636162 && a2 == 0xEF726F6C6F43646ELL;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B161A0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6574736973726570 && a2 == 0xEA0000000000746ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x536F547370696C63 && a2 == 0xEC00000065706168 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4449776F64616873 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24998352C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684957547 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_249983680()
{
  unint64_t v0 = sub_249AEDCF8();
  swift_bridgeObjectRelease();
  if (v0 >= 8) {
    return 8;
  }
  else {
    return v0;
  }
}

uint64_t sub_2499836CC()
{
  unint64_t v0 = sub_249AEDCF8();
  swift_bridgeObjectRelease();
  if (v0 >= 4) {
    return 4;
  }
  else {
    return v0;
  }
}

uint64_t sub_249983718()
{
  unint64_t v0 = sub_249AEDCF8();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

unint64_t sub_249983764()
{
  unint64_t result = qword_2696E1200;
  if (!qword_2696E1200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1200);
  }
  return result;
}

unint64_t sub_2499837B8()
{
  unint64_t result = qword_2696E1208;
  if (!qword_2696E1208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1208);
  }
  return result;
}

uint64_t sub_24998380C(uint64_t a1)
{
  uint64_t v54 = *(void *)(a1 + 512);
  uint64_t v2 = *(void *)(a1 + 520);
  int v3 = *(void **)(a1 + 528);
  unsigned int v4 = *(void **)(a1 + 536);
  uint64_t v5 = *(void **)(a1 + 544);
  char v6 = *(void **)(a1 + 552);
  uint64_t v7 = *(void *)(a1 + 560);
  uint64_t v8 = *(void *)(a1 + 568);
  long long v53 = *(_OWORD *)(a1 + 576);
  long long v52 = *(_OWORD *)(a1 + 592);
  long long v51 = *(_OWORD *)(a1 + 608);
  long long v50 = *(_OWORD *)(a1 + 624);
  unint64_t v9 = *(void *)(a1 + 1008);
  long long v49 = *(_OWORD *)(a1 + 640);
  long long v48 = *(_OWORD *)(a1 + 656);
  long long v47 = *(_OWORD *)(a1 + 672);
  long long v46 = *(_OWORD *)(a1 + 688);
  long long v45 = *(_OWORD *)(a1 + 704);
  long long v44 = *(_OWORD *)(a1 + 720);
  long long v43 = *(_OWORD *)(a1 + 736);
  long long v42 = *(_OWORD *)(a1 + 752);
  long long v41 = *(_OWORD *)(a1 + 768);
  long long v40 = *(_OWORD *)(a1 + 784);
  long long v39 = *(_OWORD *)(a1 + 800);
  long long v38 = *(_OWORD *)(a1 + 816);
  long long v37 = *(_OWORD *)(a1 + 832);
  long long v36 = *(_OWORD *)(a1 + 848);
  long long v35 = *(_OWORD *)(a1 + 864);
  long long v34 = *(_OWORD *)(a1 + 880);
  long long v33 = *(_OWORD *)(a1 + 896);
  long long v32 = *(_OWORD *)(a1 + 912);
  long long v31 = *(_OWORD *)(a1 + 928);
  long long v30 = *(_OWORD *)(a1 + 944);
  long long v29 = *(_OWORD *)(a1 + 960);
  long long v28 = *(_OWORD *)(a1 + 976);
  long long v27 = *(_OWORD *)(a1 + 992);
  long long v25 = *(_OWORD *)(a1 + 464);
  long long v26 = *(_OWORD *)(a1 + 480);
  long long v23 = *(_OWORD *)(a1 + 432);
  long long v24 = *(_OWORD *)(a1 + 448);
  long long v21 = *(_OWORD *)(a1 + 400);
  long long v22 = *(_OWORD *)(a1 + 416);
  long long v19 = *(_OWORD *)(a1 + 368);
  long long v20 = *(_OWORD *)(a1 + 384);
  long long v17 = *(_OWORD *)(a1 + 336);
  long long v18 = *(_OWORD *)(a1 + 352);
  long long v15 = *(_OWORD *)(a1 + 304);
  long long v16 = *(_OWORD *)(a1 + 320);
  long long v13 = *(_OWORD *)(a1 + 272);
  long long v14 = *(_OWORD *)(a1 + 288);
  long long v11 = *(_OWORD *)(a1 + 240);
  long long v12 = *(_OWORD *)(a1 + 256);
  sub_2498FCAAC(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void **)(a1 + 72), *(void **)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void **)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216),
    *(void **)(a1 + 224),
    *(void *)(a1 + 232),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((unint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    SBYTE8(v21),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    SBYTE8(v24),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    *(void *)(a1 + 496));
  sub_2498FCAAC(v54, v2, v3, v4, v5, v6, v7, v8, (void *)v53, *((void **)&v53 + 1), (void *)v52, *((unint64_t *)&v52 + 1), v51, *((uint64_t *)&v51 + 1), v50, *((uint64_t *)&v50 + 1), v49, *((uint64_t *)&v49 + 1), v48,
    *((uint64_t *)&v48 + 1),
    (void *)v47,
    *((uint64_t *)&v47 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v44,
    *((void **)&v44 + 1),
    (void *)v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v37,
    *((unint64_t *)&v37 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v35,
    SBYTE8(v35),
    v34,
    *((uint64_t *)&v34 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v32,
    SBYTE8(v32),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v29,
    SBYTE8(v29),
    v28,
    *((uint64_t *)&v28 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v9);
  return a1;
}

uint64_t sub_249983AFC@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  long long v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14D0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  long long v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A8);
  unint64_t v9 = *(void **)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  long long v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v14 = (char *)&v28 - v13;
  sub_2498DB20C(0, &qword_2696E14B0);
  id v15 = a1;
  sub_249AEB5D8();
  id v16 = v15;
  sub_249AEB5D8();
  sub_249987B20(&qword_2696E14D8, &qword_2696E14A8);
  uint64_t result = sub_249AED018();
  if (result)
  {
    uint64_t v18 = *(int *)(v3 + 48);
    long long v31 = v7;
    long long v19 = &v7[v18];
    long long v20 = (void (*)(char *, char *, uint64_t))v9[4];
    v20(v7, v14, v8);
    v20(v19, v12, v8);
    long long v21 = v29;
    long long v22 = v30;
    long long v23 = &v29[*(int *)(v3 + 48)];
    uint64_t v28 = v3;
    long long v24 = (void (*)(char *, char *, uint64_t))v9[2];
    v24(v29, v31, v8);
    v24(v23, v19, v8);
    v20(v22, v21, v8);
    long long v25 = (void (*)(char *, uint64_t))v9[1];
    v25(v23, v8);
    long long v26 = &v21[*(int *)(v28 + 48)];
    v20(v21, v31, v8);
    v20(v26, v19, v8);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C0);
    v20(&v22[*(int *)(v27 + 36)], v26, v8);
    return ((uint64_t (*)(char *, uint64_t))v25)(v21, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249983E18@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  long long v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1540);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  long long v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF08);
  unint64_t v9 = *(void **)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  long long v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v14 = (char *)&v28 - v13;
  sub_2498DB20C(0, (unint64_t *)&qword_2696DFF10);
  id v15 = a1;
  sub_249AEB5D8();
  id v16 = v15;
  sub_249AEB5D8();
  sub_249987B20(&qword_2696E1548, &qword_2696DFF08);
  uint64_t result = sub_249AED018();
  if (result)
  {
    uint64_t v18 = *(int *)(v3 + 48);
    long long v31 = v7;
    long long v19 = &v7[v18];
    long long v20 = (void (*)(char *, char *, uint64_t))v9[4];
    v20(v7, v14, v8);
    v20(v19, v12, v8);
    long long v21 = v29;
    long long v22 = v30;
    long long v23 = &v29[*(int *)(v3 + 48)];
    uint64_t v28 = v3;
    long long v24 = (void (*)(char *, char *, uint64_t))v9[2];
    v24(v29, v31, v8);
    v24(v23, v19, v8);
    v20(v22, v21, v8);
    long long v25 = (void (*)(char *, uint64_t))v9[1];
    v25(v23, v8);
    long long v26 = &v21[*(int *)(v28 + 48)];
    v20(v21, v31, v8);
    v20(v26, v19, v8);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1530);
    v20(&v22[*(int *)(v27 + 36)], v26, v8);
    return ((uint64_t (*)(char *, uint64_t))v25)(v21, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249984134@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  long long v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1490);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  long long v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1478);
  unint64_t v9 = *(void **)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  long long v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v14 = (char *)&v28 - v13;
  sub_2498DB20C(0, &qword_2696E1480);
  id v15 = a1;
  sub_249AEB5D8();
  id v16 = v15;
  sub_249AEB5D8();
  sub_249987B20(&qword_2696E1498, &qword_2696E1478);
  uint64_t result = sub_249AED018();
  if (result)
  {
    uint64_t v18 = *(int *)(v3 + 48);
    long long v31 = v7;
    long long v19 = &v7[v18];
    long long v20 = (void (*)(char *, char *, uint64_t))v9[4];
    v20(v7, v14, v8);
    v20(v19, v12, v8);
    long long v21 = v29;
    long long v22 = v30;
    long long v23 = &v29[*(int *)(v3 + 48)];
    uint64_t v28 = v3;
    long long v24 = (void (*)(char *, char *, uint64_t))v9[2];
    v24(v29, v31, v8);
    v24(v23, v19, v8);
    v20(v22, v21, v8);
    long long v25 = (void (*)(char *, uint64_t))v9[1];
    v25(v23, v8);
    long long v26 = &v21[*(int *)(v28 + 48)];
    v20(v21, v31, v8);
    v20(v26, v19, v8);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1470);
    v20(&v22[*(int *)(v27 + 36)], v26, v8);
    return ((uint64_t (*)(char *, uint64_t))v25)(v21, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_249984450@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  long long v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1450);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  long long v29 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0E8);
  unint64_t v9 = *(void **)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  long long v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v14 = (char *)&v28 - v13;
  sub_2498DB20C(0, (unint64_t *)&qword_2696DF158);
  id v15 = a1;
  sub_249AEB5D8();
  id v16 = v15;
  sub_249AEB5D8();
  sub_249987B20(&qword_2696E1458, &qword_2696DF0E8);
  uint64_t result = sub_249AED018();
  if (result)
  {
    uint64_t v18 = *(int *)(v3 + 48);
    long long v31 = v7;
    long long v19 = &v7[v18];
    long long v20 = (void (*)(char *, char *, uint64_t))v9[4];
    v20(v7, v14, v8);
    v20(v19, v12, v8);
    long long v21 = v29;
    long long v22 = v30;
    long long v23 = &v29[*(int *)(v3 + 48)];
    uint64_t v28 = v3;
    long long v24 = (void (*)(char *, char *, uint64_t))v9[2];
    v24(v29, v31, v8);
    v24(v23, v19, v8);
    v20(v22, v21, v8);
    long long v25 = (void (*)(char *, uint64_t))v9[1];
    v25(v23, v8);
    long long v26 = &v21[*(int *)(v28 + 48)];
    v20(v21, v31, v8);
    v20(v26, v19, v8);
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1440);
    v20(&v22[*(int *)(v27 + 36)], v26, v8);
    return ((uint64_t (*)(char *, uint64_t))v25)(v21, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

double sub_24998476C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14E0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 56) = 0x3FF0000000000000;
  double result = 0.45;
  *(_OWORD *)(v0 + 40) = xmmword_249AFE270;
  *(unsigned char *)(v0 + 16) = 6;
  *(void *)(v0 + 24) = MEMORY[0x263F8D538];
  *(void *)(v0 + 32) = &protocol witness table for Double;
  qword_2696E1230 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargeLevel.getter()
{
  return sub_249903350(&qword_2696DD438);
}

uint64_t sub_2499847F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &unk_26FDA0F18;
  *(unsigned char *)(result + 16) = 7;
  *(void *)(result + 24) = MEMORY[0x263F8D6C8];
  *(void *)(result + 32) = &protocol witness table for Int;
  qword_2696E1238 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargeLevelState.getter()
{
  return sub_249903350(&qword_2696DD440);
}

uint64_t sub_24998487C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 8;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E1240 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargeLevelMarkerLow.getter()
{
  return sub_249903350(&qword_2696DD448);
}

uint64_t sub_2499848F4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &unk_26FDA0F50;
  *(unsigned char *)(result + 16) = 9;
  *(void *)(result + 24) = MEMORY[0x263F8D6C8];
  *(void *)(result + 32) = &protocol witness table for Int;
  qword_2696E1248 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargePortSideIndicator.getter()
{
  return sub_249903350(&qword_2696DD450);
}

uint64_t sub_249984974()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_kilowatts);
  sub_2498DB20C(0, &qword_2696E14B0);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_kilowatts);
  sub_249983AFC(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C8);
  uint64_t v10 = swift_allocObject();
  sub_249882788((uint64_t)v2, v10 + *(void *)(*(void *)v10 + 152), &qword_2696E14C0);
  *(unsigned char *)(v10 + 16) = 10;
  *(void *)(v10 + 24) = v3;
  *(void *)(v10 + 32) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + *(void *)(*(void *)v10 + 112), v6, v3);
  qword_2696E1250 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.chargingRate.getter()
{
  return sub_249903350(&qword_2696DD458);
}

uint64_t sub_249984BBC()
{
  if (qword_2696DD5F8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2696E13F0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 40) = 0;
  *(void *)(v1 + 48) = v0;
  uint64_t v2 = MEMORY[0x263F8D6C8];
  *(unsigned char *)(v1 + 16) = 11;
  *(void *)(v1 + 24) = v2;
  *(void *)(v1 + 32) = &protocol witness table for Int;
  qword_2696E1258 = v1;

  return swift_bridgeObjectRetain();
}

uint64_t static InstrumentDataTypeCatalog.cruiseControlState.getter()
{
  return sub_249903350(&qword_2696DD460);
}

uint64_t sub_249984C88()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 12;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E1260 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.cruiseControlSpeed.getter()
{
  return sub_249903350(&qword_2696DD468);
}

uint64_t sub_249984D00()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0x647261646E617473;
  *(void *)(result + 48) = 0xE800000000000000;
  *(void *)(result + 56) = &unk_26FDA0FE0;
  *(unsigned char *)(result + 16) = 13;
  *(void *)(result + 24) = MEMORY[0x263F8D310];
  *(void *)(result + 32) = &protocol witness table for String;
  qword_2696E1268 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.drivingMode.getter()
{
  return sub_249903350(&qword_2696DD470);
}

uint64_t sub_249984D98()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0x40BF400000000000;
  *(unsigned char *)(result + 16) = 14;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E1270 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineMarkerRedlineRPM.getter()
{
  return sub_249903350(&qword_2696DD478);
}

uint64_t sub_249984E18()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_milliwatts);
  sub_2498DB20C(0, &qword_2696E14B0);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_milliwatts);
  sub_249983AFC(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C8);
  uint64_t v10 = swift_allocObject();
  sub_249882788((uint64_t)v2, v10 + *(void *)(*(void *)v10 + 152), &qword_2696E14C0);
  *(unsigned char *)(v10 + 16) = 16;
  *(void *)(v10 + 24) = v3;
  *(void *)(v10 + 32) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + *(void *)(*(void *)v10 + 112), v6, v3);
  qword_2696E1278 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.enginePower.getter()
{
  return sub_249903350(&qword_2696DD480);
}

uint64_t sub_249985060()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 17;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E1280 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineRPM.getter()
{
  return sub_249903350(&qword_2696DD488);
}

uint64_t sub_2499850D8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &unk_26FDA1040;
  *(unsigned char *)(result + 16) = 15;
  *(void *)(result + 24) = MEMORY[0x263F8D6C8];
  *(void *)(result + 32) = &protocol witness table for Int;
  qword_2696E1288 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineRPMState.getter()
{
  return sub_249903350(&qword_2696DD490);
}

uint64_t sub_249985158()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0x40C3880000000000;
  *(unsigned char *)(result + 16) = 18;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E1290 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineRPMMax.getter()
{
  return sub_249903350(&qword_2696DD498);
}

uint64_t sub_2499851D8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1530);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_celsius);
  sub_2498DB20C(0, (unint64_t *)&qword_2696DFF10);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_celsius);
  sub_249983E18(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1538);
  uint64_t v10 = (unsigned char *)swift_allocObject();
  sub_249882788((uint64_t)v2, (uint64_t)&v10[*(void *)(*(void *)v10 + 152)], &qword_2696E1530);
  v10[16] = 0;
  *((void *)v10 + 3) = v3;
  *((void *)v10 + 4) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(v4 + 32))(&v10[*(void *)(*(void *)v10 + 112)], v6, v3);
  off_2696E1298 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperature.getter()
{
  return sub_249903350(&qword_2696DD4A0);
}

uint64_t sub_24998541C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &unk_26FDA12A0;
  *(unsigned char *)(result + 16) = 5;
  *(void *)(result + 24) = MEMORY[0x263F8D6C8];
  *(void *)(result + 32) = &protocol witness table for Int;
  qword_2696E12A0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureState.getter()
{
  return sub_249903350(&qword_2696DD4A8);
}

uint64_t sub_24998549C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 1;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E12A8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureMin.getter()
{
  return sub_249903350(&qword_2696DD4B0);
}

uint64_t sub_249985514()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0x4062C00000000000;
  *(unsigned char *)(result + 16) = 2;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E12B0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureMax.getter()
{
  return sub_249903350(&qword_2696DD4B8);
}

uint64_t sub_249985594(uint64_t a1)
{
  return sub_2499855E8(a1, &qword_2696E12B8);
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureMarkerCold.getter()
{
  return sub_249903350(&qword_2696DD4C0);
}

uint64_t sub_2499855D0(uint64_t a1)
{
  return sub_2499855E8(a1, &qword_2696E12C0);
}

uint64_t sub_2499855E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_celsius);
  sub_2498DB20C(0, (unint64_t *)&qword_2696DFF10);
  sub_249AEB5D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1550);
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = 44;
  *(void *)(v8 + 24) = v3;
  *(void *)(v8 + 32) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v8 + *(void *)(*(void *)v8 + 112), v6, v3);
  *a2 = v8;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.batteryTemperatureMarkerHot.getter()
{
  return sub_249903350(&qword_2696DD4C8);
}

uint64_t sub_24998577C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1530);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = self;
  id v8 = objc_msgSend(v7, sel_celsius);
  sub_2498DB20C(0, (unint64_t *)&qword_2696DFF10);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_celsius);
  sub_249983E18(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1538);
  uint64_t v10 = (unsigned char *)swift_allocObject();
  sub_249882788((uint64_t)v2, (uint64_t)&v10[*(void *)(*(void *)v10 + 152)], &qword_2696E1530);
  v10[16] = 19;
  *((void *)v10 + 3) = v3;
  *((void *)v10 + 4) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(v4 + 32))(&v10[*(void *)(*(void *)v10 + 112)], v6, v3);
  off_2696E12C8 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineTemperature.getter()
{
  return sub_249903350(&qword_2696DD4D0);
}

uint64_t sub_2499859C4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 20;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E12D0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureMin.getter()
{
  return sub_249903350(&qword_2696DD4D8);
}

uint64_t sub_249985A3C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0x4062C00000000000;
  *(unsigned char *)(result + 16) = 21;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E12D8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureMax.getter()
{
  return sub_249903350(&qword_2696DD4E0);
}

uint64_t sub_249985ABC(uint64_t a1)
{
  return sub_2499855E8(a1, &qword_2696E12E0);
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureMarkerCold.getter()
{
  return sub_249903350(&qword_2696DD4E8);
}

uint64_t sub_249985AF8(uint64_t a1)
{
  return sub_2499855E8(a1, &qword_2696E12E8);
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureMarkerHot.getter()
{
  return sub_249903350(&qword_2696DD4F0);
}

uint64_t sub_249985B34()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &unk_26FDA1070;
  *(unsigned char *)(result + 16) = 24;
  *(void *)(result + 24) = MEMORY[0x263F8D6C8];
  *(void *)(result + 32) = &protocol witness table for Int;
  qword_2696E12F0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.engineTemperatureState.getter()
{
  return sub_249903350(&qword_2696DD4F8);
}

uint64_t sub_249985BB4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1530);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF08);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = self;
  id v8 = objc_msgSend(v7, sel_celsius);
  sub_2498DB20C(0, (unint64_t *)&qword_2696DFF10);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_celsius);
  sub_249983E18(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1538);
  uint64_t v10 = swift_allocObject();
  sub_249882788((uint64_t)v2, v10 + *(void *)(*(void *)v10 + 152), &qword_2696E1530);
  *(unsigned char *)(v10 + 16) = 36;
  *(void *)(v10 + 24) = v3;
  *(void *)(v10 + 32) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + *(void *)(*(void *)v10 + 112), v6, v3);
  qword_2696E12F8 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.outsideTemperature.getter()
{
  return sub_249903350(&qword_2696DD500);
}

uint64_t sub_249985DFC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E13F8);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 25;
  *(void *)(result + 24) = MEMORY[0x263F8D4F8];
  *(void *)(result + 32) = &protocol witness table for Bool;
  qword_2696E1300 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fillLevelLabel.getter()
{
  return sub_249903350(&qword_2696DD508);
}

double sub_249985E74()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14E0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 56) = 0x3FF0000000000000;
  double result = 0.45;
  *(_OWORD *)(v0 + 40) = xmmword_249AFE270;
  *(unsigned char *)(v0 + 16) = 26;
  *(void *)(v0 + 24) = MEMORY[0x263F8D538];
  *(void *)(v0 + 32) = &protocol witness table for Double;
  qword_2696E1308 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fuelLevel.getter()
{
  return sub_249903350(&qword_2696DD510);
}

uint64_t sub_249985EFC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &unk_26FDA10A8;
  *(unsigned char *)(result + 16) = 27;
  *(void *)(result + 24) = MEMORY[0x263F8D6C8];
  *(void *)(result + 32) = &protocol witness table for Int;
  qword_2696E1310 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fuelLevelState.getter()
{
  return sub_249903350(&qword_2696DD518);
}

uint64_t sub_249985F7C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 28;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E1318 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fuelLevelMarkerLow.getter()
{
  return sub_249903350(&qword_2696DD520);
}

uint64_t sub_249985FF4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E13F8);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 52;
  *(void *)(result + 24) = MEMORY[0x263F8D4F8];
  *(void *)(result + 32) = &protocol witness table for Bool;
  qword_2696E1320 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.speedLimited.getter()
{
  return sub_249903350(&qword_2696DD528);
}

uint64_t sub_24998606C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &unk_26FDA10E0;
  *(unsigned char *)(result + 16) = 29;
  *(void *)(result + 24) = MEMORY[0x263F8D6C8];
  *(void *)(result + 32) = &protocol witness table for Int;
  qword_2696E1328 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.fuelPortSideIndicator.getter()
{
  return sub_249903350(&qword_2696DD530);
}

uint64_t sub_2499860EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(void *)(result + 48) = &unk_26FDA12D8;
  *(unsigned char *)(result + 16) = 56;
  *(void *)(result + 24) = MEMORY[0x263F8D6C8];
  *(void *)(result + 32) = &protocol witness table for Int;
  qword_2696E1330 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.uiSceneState.getter()
{
  return sub_249903350(&qword_2696DD538);
}

uint64_t sub_249986174()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1520);
  uint64_t v0 = swift_allocObject();
  int64_t v1 = _swift_stdlib_malloc_size((const void *)v0);
  uint64_t v2 = v1 - 32;
  if (v1 < 32) {
    uint64_t v2 = v1 - 25;
  }
  *(void *)(v0 + 16) = 15;
  *(void *)(v0 + 24) = 2 * (v2 >> 3);
  *(_OWORD *)(v0 + 32) = xmmword_249AFE280;
  *(_OWORD *)(v0 + 48) = xmmword_249AFE290;
  *(_OWORD *)(v0 + 64) = xmmword_249AFE2A0;
  *(_OWORD *)(v0 + 80) = xmmword_249AFE2B0;
  *(_OWORD *)(v0 + 96) = xmmword_249AF0A70;
  *(_OWORD *)(v0 + 112) = xmmword_249AFE2C0;
  *(_OWORD *)(v0 + 128) = xmmword_249AFE2D0;
  *(void *)(v0 + 144) = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1528);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 4;
  *(void *)(result + 48) = v0;
  *(unsigned char *)(result + 16) = 30;
  *(void *)(result + 24) = MEMORY[0x263F8D6C8];
  *(void *)(result + 32) = &protocol witness table for Int;
  qword_2696E1338 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.gearShiftRecommendation.getter()
{
  return sub_249903350(&qword_2696DD540);
}

uint64_t sub_249986284()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1508);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 64) = &unk_26FDA1128;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1510);
  *(void *)(v0 + 40) = 0;
  *(void *)(v0 + 48) = 0;
  *(_WORD *)(v0 + 56) = 0;
  *(unsigned char *)(v0 + 16) = 31;
  uint64_t result = sub_249987ABC(&qword_2696E1518, &qword_2696E1510);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = result;
  qword_2696E1340 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.localNotification.getter()
{
  return sub_249903350(&qword_2696DD548);
}

uint64_t sub_24998633C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1468);
  uint64_t result = swift_allocObject();
  *(_WORD *)(result + 40) = 164;
  *(unsigned char *)(result + 16) = 25;
  *(void *)(result + 24) = MEMORY[0x263F8E888];
  *(void *)(result + 32) = &protocol witness table for UInt16;
  qword_2696E1348 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.lengthUnit.getter()
{
  return sub_249903350(&qword_2696DD550);
}

uint64_t sub_2499863B8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14E8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_249AFA7A0;
  *(_OWORD *)(v0 + 32) = xmmword_249AFE2E0;
  *(void *)(v0 + 48) = 0xD000000000000012;
  *(void *)(v0 + 56) = 0x8000000249B161C0;
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  *(void *)(v0 + 64) = 0;
  *(void *)(v0 + 88) = nullsub_1;
  *(_OWORD *)(v0 + 96) = 0u;
  *(_OWORD *)(v0 + 112) = 0u;
  *(void *)(v0 + 128) = 0;
  *(void *)(v0 + 136) = nullsub_1;
  *(void *)(v0 + 144) = 0;
  uint64_t v1 = sub_249AEC8D8();
  *(_OWORD *)(v0 + 152) = xmmword_249AFE2F0;
  *(void *)(v0 + 168) = 0xD000000000000014;
  *(void *)(v0 + 176) = 0x8000000249B161E0;
  *(void *)(v0 + 184) = 0xD00000000000002ELL;
  *(void *)(v0 + 192) = 0x8000000249B16200;
  *(void *)(v0 + 208) = 0;
  *(void *)(v0 + 216) = 0;
  *(void *)(v0 + 200) = 1;
  *(_OWORD *)(v0 + 224) = xmmword_249AFE300;
  *(void *)(v0 + 240) = 0x8000000249B16230;
  *(void *)(v0 + 248) = v1;
  *(void *)(v0 + 256) = nullsub_1;
  *(void *)(v0 + 264) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14F0);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 160) = v0;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14F8);
  *(_OWORD *)(v2 + 40) = 0u;
  *(_OWORD *)(v2 + 56) = 0u;
  *(_OWORD *)(v2 + 72) = 0u;
  *(_OWORD *)(v2 + 88) = 0u;
  *(_OWORD *)(v2 + 104) = 0u;
  *(_OWORD *)(v2 + 120) = 0u;
  *(_OWORD *)(v2 + 136) = 0u;
  *(void *)(v2 + 152) = 0;
  *(unsigned char *)(v2 + 16) = 33;
  uint64_t result = sub_249987ABC(&qword_2696E1500, &qword_2696E14F8);
  *(void *)(v2 + 24) = v3;
  *(void *)(v2 + 32) = result;
  qword_2696E1350 = v2;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.message.getter()
{
  return sub_249903350(&qword_2696DD558);
}

uint64_t sub_249986580()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14E0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 48) = 0;
  *(void *)(result + 56) = 0x3FF0000000000000;
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 34;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E1358 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.nowPlayingProgess.getter()
{
  return sub_249903350(&qword_2696DD560);
}

uint64_t sub_249986600()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1470);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1478);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = self;
  id v8 = objc_msgSend(v7, sel_meters);
  sub_2498DB20C(0, &qword_2696E1480);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_meters);
  sub_249984134(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1488);
  uint64_t v10 = (unsigned char *)swift_allocObject();
  sub_249882788((uint64_t)v2, (uint64_t)&v10[*(void *)(*(void *)v10 + 152)], &qword_2696E1470);
  v10[16] = 35;
  *((void *)v10 + 3) = v3;
  *((void *)v10 + 4) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(v4 + 32))(&v10[*(void *)(*(void *)v10 + 112)], v6, v3);
  off_2696E1360 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.odometer.getter()
{
  return sub_249903350(&qword_2696DD568);
}

uint64_t sub_249986840()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_milliwatts);
  sub_2498DB20C(0, &qword_2696E14B0);
  sub_249AEB5D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14B8);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 37;
  *(void *)(v5 + 24) = v0;
  *(void *)(v5 + 32) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5 + *(void *)(*(void *)v5 + 112), v3, v0);
  qword_2696E1368 = v5;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.powerMax.getter()
{
  return sub_249903350(&qword_2696DD570);
}

uint64_t sub_2499869D0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_milliwatts);
  sub_2498DB20C(0, &qword_2696E14B0);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_milliwatts);
  sub_249983AFC(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C8);
  uint64_t v10 = swift_allocObject();
  sub_249882788((uint64_t)v2, v10 + *(void *)(*(void *)v10 + 152), &qword_2696E14C0);
  *(unsigned char *)(v10 + 16) = 38;
  *(void *)(v10 + 24) = v3;
  *(void *)(v10 + 32) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(v10 + *(void *)(*(void *)v10 + 112), v6, v3);
  qword_2696E1370 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.powerMarkerAvailableMax.getter()
{
  return sub_249903350(&qword_2696DD578);
}

uint64_t sub_249986C24()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_milliwatts);
  sub_2498DB20C(0, &qword_2696E14B0);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_milliwatts);
  sub_249983AFC(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14C8);
  uint64_t v10 = (unsigned char *)swift_allocObject();
  sub_249882788((uint64_t)v2, (uint64_t)&v10[*(void *)(*(void *)v10 + 152)], &qword_2696E14C0);
  v10[16] = 39;
  *((void *)v10 + 3) = v3;
  *((void *)v10 + 4) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(v4 + 32))(&v10[*(void *)(*(void *)v10 + 112)], v6, v3);
  off_2696E1378 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.powerMarkerAvailableMin.getter()
{
  return sub_249903350(&qword_2696DD580);
}

uint64_t sub_249986E78()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A8);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_milliwatts);
  sub_2498DB20C(0, &qword_2696E14B0);
  sub_249AEB5D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14B8);
  uint64_t v5 = swift_allocObject();
  *(unsigned char *)(v5 + 16) = 40;
  *(void *)(v5 + 24) = v0;
  *(void *)(v5 + 32) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v1 + 32))(v5 + *(void *)(*(void *)v5 + 112), v3, v0);
  qword_2696E1380 = v5;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.powerMin.getter()
{
  return sub_249903350(&qword_2696DD588);
}

uint64_t sub_249987008()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E14A0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 48;
  *(void *)(result + 48) = 0xE100000000000000;
  *(void *)(result + 56) = &unk_26FDA1190;
  *(unsigned char *)(result + 16) = 41;
  *(void *)(result + 24) = MEMORY[0x263F8D310];
  *(void *)(result + 32) = &protocol witness table for String;
  qword_2696E1388 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.punchThrough.getter()
{
  return sub_249903350(&qword_2696DD590);
}

uint64_t sub_249987094()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1470);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1478);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_miles);
  sub_2498DB20C(0, &qword_2696E1480);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_miles);
  sub_249984134(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1488);
  uint64_t v10 = (unsigned char *)swift_allocObject();
  sub_249882788((uint64_t)v2, (uint64_t)&v10[*(void *)(*(void *)v10 + 152)], &qword_2696E1470);
  v10[16] = 42;
  *((void *)v10 + 3) = v3;
  *((void *)v10 + 4) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(v4 + 32))(&v10[*(void *)(*(void *)v10 + 112)], v6, v3);
  off_2696E1390 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.remainingDistance.getter()
{
  return sub_249903350(&qword_2696DD598);
}

uint64_t sub_2499872D4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E13F8);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 43;
  *(void *)(result + 24) = MEMORY[0x263F8D4F8];
  *(void *)(result + 32) = &protocol witness table for Bool;
  qword_2696E1398 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.remainingRangeHidden.getter()
{
  return sub_249903350(&qword_2696DD5A0);
}

uint64_t sub_24998734C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1468);
  uint64_t result = swift_allocObject();
  *(_WORD *)(result + 40) = 1081;
  *(unsigned char *)(result + 16) = 44;
  *(void *)(result + 24) = MEMORY[0x263F8E888];
  *(void *)(result + 32) = &protocol witness table for UInt16;
  qword_2696E13A0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.temperatureUnit.getter()
{
  return sub_249903350(&qword_2696DD5A8);
}

uint64_t sub_2499873C8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1460);
  uint64_t result = swift_allocObject();
  *(void *)(result + 48) = &unk_26FDA0878;
  *(unsigned char *)(result + 40) = 68;
  *(unsigned char *)(result + 16) = 45;
  *(void *)(result + 24) = MEMORY[0x263F8E778];
  *(void *)(result + 32) = &protocol witness table for UInt8;
  qword_2696E13A8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.transmission.getter()
{
  return sub_249903350(&qword_2696DD5B0);
}

uint64_t sub_249987450()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1440);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF0E8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = self;
  id v8 = objc_msgSend(v7, sel_degrees);
  sub_2498DB20C(0, (unint64_t *)&qword_2696DF158);
  sub_249AEB5D8();
  id v9 = objc_msgSend(v7, sel_degrees);
  sub_249984450(v9, v2);

  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1448);
  uint64_t v10 = (unsigned char *)swift_allocObject();
  sub_249882788((uint64_t)v2, (uint64_t)&v10[*(void *)(*(void *)v10 + 152)], &qword_2696E1440);
  v10[16] = 46;
  *((void *)v10 + 3) = v3;
  *((void *)v10 + 4) = &protocol witness table for Measurement<A>;
  uint64_t result = (*(uint64_t (**)(unsigned char *, char *, uint64_t))(v4 + 32))(&v10[*(void *)(*(void *)v10 + 112)], v6, v3);
  off_2696E13B0 = v10;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.trueHeading.getter()
{
  return sub_249903350(&qword_2696DD5B8);
}

uint64_t sub_249987690()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 47;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E13B8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.vehicleSpeed.getter()
{
  return sub_249903350(&qword_2696DD5C0);
}

uint64_t sub_249987708()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1438);
  uint64_t result = swift_allocObject();
  *(void *)(result + 48) = &unk_26FDA11E0;
  *(_WORD *)(result + 40) = 1033;
  *(unsigned char *)(result + 16) = 49;
  *(void *)(result + 24) = MEMORY[0x263F8E888];
  *(void *)(result + 32) = &protocol witness table for UInt16;
  qword_2696E13C0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.vehicleSpeedUnit.getter()
{
  return sub_249903350(&qword_2696DD5C8);
}

uint64_t sub_249987790()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1430);
  uint64_t result = swift_allocObject();
  *(void *)(result + 40) = 0x406F400000000000;
  *(unsigned char *)(result + 16) = 48;
  *(void *)(result + 24) = MEMORY[0x263F8D538];
  *(void *)(result + 32) = &protocol witness table for Double;
  qword_2696E13C8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.vehicleSpeedMax.getter()
{
  return sub_249903350(&qword_2696DD5D0);
}

uint64_t sub_249987818()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E13F8);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 40) = 1;
  *(unsigned char *)(result + 16) = 51;
  *(void *)(result + 24) = MEMORY[0x263F8D4F8];
  *(void *)(result + 32) = &protocol witness table for Bool;
  qword_2696E13D0 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.showSecondarySpeed.getter()
{
  return sub_249903350(&qword_2696DD5D8);
}

uint64_t sub_249987894()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1418);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 160) = &unk_26FDA1208;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1420);
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  *(_OWORD *)(v0 + 104) = 0u;
  *(_OWORD *)(v0 + 120) = 0u;
  *(_OWORD *)(v0 + 136) = 0u;
  *(unsigned char *)(v0 + 152) = 0;
  *(unsigned char *)(v0 + 16) = 50;
  uint64_t result = sub_249987ABC(&qword_2696E1428, &qword_2696E1420);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = result;
  qword_2696E13D8 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.requestContent.getter()
{
  return sub_249903350(&qword_2696DD5E0);
}

uint64_t sub_249987968()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1400);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1408);
  *(_OWORD *)(v0 + 40) = 0u;
  *(_OWORD *)(v0 + 56) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(void *)(v0 + 88) = 0;
  *(unsigned char *)(v0 + 16) = 53;
  uint64_t result = sub_249987ABC(&qword_2696E1410, &qword_2696E1408);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = result;
  qword_2696E13E0 = v0;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.menu.getter()
{
  return sub_249903350(&qword_2696DD5E8);
}

uint64_t sub_249987A20()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E13F8);
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 40) = 0;
  *(unsigned char *)(result + 16) = 55;
  *(void *)(result + 24) = MEMORY[0x263F8D4F8];
  *(void *)(result + 32) = &protocol witness table for Bool;
  qword_2696E13E8 = result;
  return result;
}

uint64_t static InstrumentDataTypeCatalog.buttonInput.getter()
{
  return sub_249903350(&qword_2696DD5F0);
}

ValueMetadata *type metadata accessor for InstrumentDataTypeCatalog()
{
  return &type metadata for InstrumentDataTypeCatalog;
}

void sub_249987AA8()
{
  qword_2696E13F0 = (uint64_t)&unk_26FDA0F98;
}

uint64_t sub_249987ABC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_249987B20(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t EnvironmentValues.layoutOutput.getter()
{
  sub_2498B89F8();

  return sub_249AEBFF8();
}

uint64_t EnvironmentValues.layoutOutput.setter()
{
  return sub_249AEC008();
}

uint64_t EnvironmentValues.zoneIdentifier.getter()
{
  sub_249902780();

  return sub_249AEBFF8();
}

uint64_t EnvironmentValues.zoneIdentifier.setter(uint64_t a1)
{
  return sub_2499884C4(a1, &qword_2696DF8C8, (void (*)(uint64_t))sub_249902780);
}

uint64_t RenderingMode.isThumbnail.getter()
{
  return *v0;
}

BOOL static RenderingMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t RenderingMode.hash(into:)()
{
  return sub_249AEE348();
}

uint64_t RenderingMode.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_249987CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_249989B20();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.renderingMode.getter()
{
  sub_249987DA8();

  return sub_249AEBFF8();
}

unint64_t sub_249987DA8()
{
  unint64_t result = qword_2696E15B8;
  if (!qword_2696E15B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E15B8);
  }
  return result;
}

uint64_t EnvironmentValues.renderingMode.setter()
{
  return sub_249AEC008();
}

uint64_t (*EnvironmentValues.renderingMode.modify(void *a1))(uint64_t a1)
{
  *a1 = v1;
  a1[1] = sub_249987DA8();
  sub_249AEBFF8();
  return sub_249987EA8;
}

uint64_t sub_249987EA8(uint64_t a1)
{
  return sub_2499897C8(a1);
}

uint64_t sub_249987EB4()
{
  if (qword_2696DD340 != -1) {
    uint64_t result = swift_once();
  }
  qword_2696E1558 = qword_2696DE538;
  return result;
}

uint64_t sub_249987F08@<X0>(void *a1@<X8>)
{
  if (qword_2696DD600 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_2696E1558;
  return result;
}

uint64_t sub_249987F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_2498B8870();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t (*EnvironmentValues.layoutOutput.modify(uint64_t a1))(void *a1)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_2498B89F8();
  sub_249AEBFF8();
  return sub_249988028;
}

uint64_t sub_249988028(void *a1)
{
  a1[1] = *a1;
  return sub_249AEC008();
}

uint64_t sub_249988060(uint64_t a1)
{
  return sub_249988234(a1, &qword_2696DF8C8, qword_2696E1560, &qword_2696DDB10);
}

uint64_t sub_24998807C@<X0>(uint64_t a1@<X8>)
{
  return sub_2499882FC(&qword_2696DD608, &qword_2696DF8C8, (uint64_t)qword_2696E1560, a1);
}

uint64_t sub_2499880A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24998A04C(&qword_2696E1630, &qword_2696DF8C8, (void (*)(void))sub_249989ED4);

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

void (*EnvironmentValues.zoneIdentifier.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_249902780();
  sub_249AEBFF8();
  return sub_249988204;
}

void sub_249988204(uint64_t **a1, char a2)
{
}

uint64_t sub_249988218(uint64_t a1)
{
  return sub_249988234(a1, &qword_2696DFCA8, qword_2696E1578, &qword_2696DFCB0);
}

uint64_t sub_249988234(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  __swift_allocate_value_buffer(v6, a3);
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)a3);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a4);
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(v7, 1, 1, v8);
}

uint64_t sub_2499882D0@<X0>(uint64_t a1@<X8>)
{
  return sub_2499882FC(&qword_2696DD610, &qword_2696DFCA8, (uint64_t)qword_2696E1578, a1);
}

uint64_t sub_2499882FC@<X0>(void *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  return sub_2498D6084(v8, a4, a2);
}

uint64_t sub_249988364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24998A04C(&qword_2696E1640, &qword_2696DFCA8, (void (*)(void))sub_249989F68);

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.layoutID.getter()
{
  sub_249988448();

  return sub_249AEBFF8();
}

unint64_t sub_249988448()
{
  unint64_t result = qword_2696E15C0;
  if (!qword_2696E15C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E15C0);
  }
  return result;
}

uint64_t EnvironmentValues.layoutID.setter(uint64_t a1)
{
  return sub_2499884C4(a1, &qword_2696DFCA8, (void (*)(uint64_t))sub_249988448);
}

uint64_t sub_2499884C4(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = sub_2498D6084(a1, (uint64_t)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  a3(v8);
  sub_249AEC008();
  return sub_2498D60E8(a1, a2);
}

void (*EnvironmentValues.layoutID.modify(void *a1))(uint64_t **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  size_t v4 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v3[3] = malloc(v4);
  v3[4] = sub_249988448();
  sub_249AEBFF8();
  return sub_249988640;
}

void sub_249988640(uint64_t **a1, char a2)
{
}

void sub_249988654(uint64_t **a1, char a2, uint64_t *a3)
{
  uint64_t v5 = *a1;
  sub_2498D6084((*a1)[3], (*a1)[2], a3);
  uint64_t v6 = (void *)v5[3];
  uint64_t v7 = (void *)v5[1];
  uint64_t v8 = (void *)v5[2];
  if (a2)
  {
    sub_2498D6084(v5[2], v5[1], a3);
    sub_249AEC008();
    sub_2498D60E8((uint64_t)v8, a3);
  }
  else
  {
    sub_249AEC008();
  }
  sub_2498D60E8((uint64_t)v6, a3);
  free(v6);
  free(v8);
  free(v7);

  free(v5);
}

void sub_249988734(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t EnvironmentValues.externalViewBuilder.getter()
{
  sub_249988788();

  return sub_249AEBFF8();
}

unint64_t sub_249988788()
{
  unint64_t result = qword_2696E15C8;
  if (!qword_2696E15C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E15C8);
  }
  return result;
}

uint64_t EnvironmentValues.externalViewBuilder.setter(uint64_t a1)
{
  return sub_249988964(a1, (void (*)(uint64_t, void))sub_249988788);
}

void (*EnvironmentValues.externalViewBuilder.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_249988788();
  sub_249AEBFF8();
  return sub_249988874;
}

void sub_249988874(void **a1, char a2)
{
}

uint64_t EnvironmentValues.externalLayoutBackgroundViewBuilder.getter()
{
  sub_2499888F0();

  return sub_249AEBFF8();
}

unint64_t sub_2499888F0()
{
  unint64_t result = qword_2696E15D0;
  if (!qword_2696E15D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E15D0);
  }
  return result;
}

uint64_t EnvironmentValues.externalLayoutBackgroundViewBuilder.setter(uint64_t a1)
{
  return sub_249988964(a1, (void (*)(uint64_t, void))sub_2499888F0);
}

uint64_t sub_249988964(uint64_t a1, void (*a2)(uint64_t, void))
{
  return sub_249AEC008();
}

void (*EnvironmentValues.externalLayoutBackgroundViewBuilder.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_2499888F0();
  sub_249AEBFF8();
  return sub_249988A28;
}

void sub_249988A28(void **a1, char a2)
{
}

void sub_249988A5C(void **a1, char a2, uint64_t a3, void (*a4)(void), void (*a5)(void, void))
{
  uint64_t v6 = *a1;
  uint64_t v7 = (*a1)[1];
  v6[2] = **a1;
  v6[3] = v7;
  if (a2)
  {
    a4();
    sub_249AEC008();
    a5(*v6, v6[1]);
  }
  else
  {
    sub_249AEC008();
  }

  free(v6);
}

void sub_249988B04(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

uint64_t sub_249988B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_249989FA4();

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.frameRateLimit.getter()
{
  sub_249988BB8();
  sub_249AEBFF8();
  return v1;
}

unint64_t sub_249988BB8()
{
  unint64_t result = qword_2696E15D8;
  if (!qword_2696E15D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E15D8);
  }
  return result;
}

uint64_t EnvironmentValues.frameRateLimit.setter()
{
  return sub_249AEC008();
}

void (*EnvironmentValues.frameRateLimit.modify(void *a1))(void **a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_249988BB8();
  sub_249AEBFF8();
  char v4 = *((unsigned char *)v3 + 24);
  *uint64_t v3 = v3[2];
  *((unsigned char *)v3 + 8) = v4;
  return sub_249988CDC;
}

void sub_249988CDC(void **a1)
{
  char v2 = *((unsigned char *)*a1 + 8);
  uint64_t v1 = *a1;
  *((void *)v1 + 2) = **a1;
  v1[24] = v2;
  sub_249AEC008();

  free(v1);
}

void sub_249988D38()
{
  qword_2696E1590 = MEMORY[0x263F8EE80];
}

uint64_t sub_249988D4C@<X0>(void *a1@<X8>)
{
  if (qword_2696DD618 != -1) {
    swift_once();
  }
  *a1 = qword_2696E1590;

  return swift_bridgeObjectRetain();
}

uint64_t sub_249988DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24998A04C(&qword_2696E1660, &qword_2696E1668, (void (*)(void))sub_24998A010);

  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, v8);
}

uint64_t EnvironmentValues.activeComponents.getter()
{
  sub_249988E90();
  sub_249AEBFF8();
  return v1;
}

unint64_t sub_249988E90()
{
  unint64_t result = qword_2696E15E0;
  if (!qword_2696E15E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E15E0);
  }
  return result;
}

uint64_t sub_249988EE4()
{
  return sub_249AEC008();
}

uint64_t EnvironmentValues.activeComponents.setter()
{
  return sub_249AEC008();
}

uint64_t (*EnvironmentValues.activeComponents.modify(uint64_t a1))(void *a1, char a2)
{
  *(void *)(a1 + 16) = v1;
  *(void *)(a1 + 24) = sub_249988E90();
  sub_249AEBFF8();
  return sub_249988FE0;
}

uint64_t sub_249988FE0(void *a1, char a2)
{
  a1[1] = *a1;
  if ((a2 & 1) == 0) {
    return sub_249AEC008();
  }
  swift_bridgeObjectRetain();
  sub_249AEC008();

  return swift_bridgeObjectRelease();
}

void sub_249989074()
{
  qword_2696E1598 = 0;
  byte_2696E15A0 = 1;
}

uint64_t sub_24998908C@<X0>(uint64_t a1@<X8>)
{
  return sub_249989270(&qword_2696DD620, (uint64_t)&qword_2696E1598, &qword_2696E15F0, a1);
}

uint64_t EnvironmentValues.widgetManager.getter()
{
  return sub_2499892FC((void (*)(void))sub_2499890E8, (uint64_t)&type metadata for WidgetManagerKey, &qword_2696E15F8, &qword_2696E15F0);
}

unint64_t sub_2499890E8()
{
  unint64_t result = qword_2696E15E8;
  if (!qword_2696E15E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E15E8);
  }
  return result;
}

uint64_t EnvironmentValues.widgetManager.setter(uint64_t a1)
{
  return sub_2499893FC(a1, &qword_2696E15F8, (void (*)(uint64_t))sub_2499890E8);
}

void (*EnvironmentValues.widgetManager.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_2499890E8();
  sub_249AEBFF8();
  if (v3[1])
  {
    uint64_t Strong = 0;
    uint64_t v5 = &qword_2696E15F0;
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t v5 = &qword_2696E15F8;
  }
  sub_2498D60E8((uint64_t)v3, v5);
  v3[2] = Strong;
  return sub_249989218;
}

void sub_249989218(uint64_t a1, char a2)
{
}

void sub_24998922C()
{
  qword_2696E15A8 = 0;
  byte_2696E15B0 = 1;
}

uint64_t sub_249989244@<X0>(uint64_t a1@<X8>)
{
  return sub_249989270(&qword_2696DD628, (uint64_t)&qword_2696E15A8, &qword_2696E1608, a1);
}

uint64_t sub_249989270@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t *a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  return sub_2498D6084(a2, a4, a3);
}

uint64_t EnvironmentValues.widgetRegistry.getter()
{
  return sub_2499892FC((void (*)(void))sub_249989380, (uint64_t)&type metadata for WidgetRegistryKey, &qword_2696E1610, &qword_2696E1608);
}

uint64_t sub_2499892FC(void (*a1)(void), uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  a1();
  sub_249AEBFF8();
  if (v8[8])
  {
    uint64_t Strong = 0;
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    a4 = a3;
  }
  sub_2498D60E8((uint64_t)v8, a4);
  return Strong;
}

unint64_t sub_249989380()
{
  unint64_t result = qword_2696E1600;
  if (!qword_2696E1600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1600);
  }
  return result;
}

uint64_t EnvironmentValues.widgetRegistry.setter(uint64_t a1)
{
  return sub_2499893FC(a1, &qword_2696E1610, (void (*)(uint64_t))sub_249989380);
}

uint64_t sub_2499893FC(uint64_t a1, uint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v4 = a1;
  if (a1)
  {
    swift_weakInit();
    swift_weakAssign();
    a1 = sub_249882788((uint64_t)v7, (uint64_t)&v8, a2);
  }
  else
  {
    uint64_t v8 = 0;
  }
  BOOL v9 = v4 == 0;
  a3(a1);
  sub_249AEC008();
  return swift_release();
}

void (*EnvironmentValues.widgetRegistry.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_249989380();
  sub_249AEBFF8();
  if (v3[1])
  {
    uint64_t Strong = 0;
    uint64_t v5 = &qword_2696E1608;
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t v5 = &qword_2696E1610;
  }
  sub_2498D60E8((uint64_t)v3, v5);
  v3[2] = Strong;
  return sub_249989558;
}

void sub_249989558(uint64_t a1, char a2)
{
}

void sub_24998956C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = *(unsigned char **)a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    if (v5) {
      goto LABEL_5;
    }
    *(void *)uint64_t v4 = 0;
  }
  else
  {
    if (v5)
    {
LABEL_5:
      swift_weakInit();
      uint64_t v6 = swift_weakAssign();
      sub_249882788(v6, (uint64_t)v4, a3);
      goto LABEL_8;
    }
    *(void *)uint64_t v4 = 0;
  }
LABEL_8:
  v4[8] = v5 == 0;
  sub_249AEC008();
  swift_release();

  free(v4);
}

uint64_t sub_249989670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270EFF9B8](a1, a2, a3, a4, MEMORY[0x263F8D510]);
}

uint64_t EnvironmentValues.canShowCloseButtonFocusEffect.getter()
{
  sub_2499896B8();
  sub_249AEBFF8();
  return v1;
}

unint64_t sub_2499896B8()
{
  unint64_t result = qword_2696E1618;
  if (!qword_2696E1618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1618);
  }
  return result;
}

uint64_t EnvironmentValues.canShowCloseButtonFocusEffect.setter()
{
  return sub_249AEC008();
}

uint64_t (*EnvironmentValues.canShowCloseButtonFocusEffect.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(void *)(a1 + 8) = sub_2499896B8();
  sub_249AEBFF8();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a1 + 17);
  return sub_2499897BC;
}

uint64_t sub_2499897BC(uint64_t a1)
{
  return sub_2499897C8(a1);
}

uint64_t sub_2499897C8(uint64_t a1)
{
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a1 + 16);
  return sub_249AEC008();
}

uint64_t SymbolImageProvider.init(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t SymbolImageProvider.callAsFunction(_:)()
{
  return (*v0)();
}

uint64_t sub_249989828()
{
  swift_bridgeObjectRetain();

  return sub_249AEC9A8();
}

void sub_24998986C(uint64_t (**a1)()@<X8>)
{
  *a1 = sub_249989828;
  a1[1] = 0;
}

uint64_t EnvironmentValues.symbolImageProvider.getter()
{
  sub_2499898CC();

  return sub_249AEBFF8();
}

unint64_t sub_2499898CC()
{
  unint64_t result = qword_2696E1620;
  if (!qword_2696E1620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1620);
  }
  return result;
}

double sub_249989920@<D0>(_OWORD *a1@<X8>)
{
  sub_2499898CC();
  sub_249AEBFF8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_249989970()
{
  return sub_249AEC008();
}

uint64_t EnvironmentValues.symbolImageProvider.setter()
{
  return sub_249AEC008();
}

void (*EnvironmentValues.symbolImageProvider.modify(void *a1))(uint64_t **a1, char a2)
{
  long long v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_2499898CC();
  sub_249AEBFF8();
  return sub_249989A88;
}

void sub_249989A88(uint64_t **a1, char a2)
{
  char v2 = *a1;
  uint64_t v4 = **a1;
  uint64_t v3 = (*a1)[1];
  v2[2] = v4;
  v2[3] = v3;
  if (a2)
  {
    swift_retain();
    sub_249AEC008();
    swift_release();
  }
  else
  {
    sub_249AEC008();
  }

  free(v2);
}

unint64_t sub_249989B20()
{
  unint64_t result = qword_2696E1628;
  if (!qword_2696E1628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1628);
  }
  return result;
}

uint64_t sub_249989B74@<X0>(unsigned char *a1@<X8>)
{
  sub_249987DA8();
  uint64_t result = sub_249AEBFF8();
  *a1 = v3;
  return result;
}

uint64_t sub_249989BC4()
{
  return sub_249AEC008();
}

uint64_t sub_249989C40@<X0>(void *a1@<X8>)
{
  sub_249988E90();
  uint64_t result = sub_249AEBFF8();
  *a1 = v3;
  return result;
}

double sub_249989CAC@<D0>(_OWORD *a1@<X8>)
{
  sub_2499898CC();
  sub_249AEBFF8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

unsigned char *storeEnumTagSinglePayload for RenderingMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249989DCCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RenderingMode()
{
  return &type metadata for RenderingMode;
}

ValueMetadata *type metadata accessor for SymbolImageProvider()
{
  return &type metadata for SymbolImageProvider;
}

ValueMetadata *type metadata accessor for SymbolImageProviderKey()
{
  return &type metadata for SymbolImageProviderKey;
}

ValueMetadata *type metadata accessor for CanShowCloseButtonFocusEffectKey()
{
  return &type metadata for CanShowCloseButtonFocusEffectKey;
}

ValueMetadata *type metadata accessor for WidgetRegistryKey()
{
  return &type metadata for WidgetRegistryKey;
}

ValueMetadata *type metadata accessor for WidgetManagerKey()
{
  return &type metadata for WidgetManagerKey;
}

ValueMetadata *type metadata accessor for ActiveComponentsKey()
{
  return &type metadata for ActiveComponentsKey;
}

ValueMetadata *type metadata accessor for FrameRateLimit()
{
  return &type metadata for FrameRateLimit;
}

ValueMetadata *type metadata accessor for ExternalLayoutBackgroundViewBuilderKey()
{
  return &type metadata for ExternalLayoutBackgroundViewBuilderKey;
}

ValueMetadata *type metadata accessor for ExternalViewBuilderKey()
{
  return &type metadata for ExternalViewBuilderKey;
}

ValueMetadata *type metadata accessor for LayoutIdentifierKey()
{
  return &type metadata for LayoutIdentifierKey;
}

ValueMetadata *type metadata accessor for RenderingModeKey()
{
  return &type metadata for RenderingModeKey;
}

ValueMetadata *type metadata accessor for ZoneIdentifierKey()
{
  return &type metadata for ZoneIdentifierKey;
}

ValueMetadata *type metadata accessor for LayoutOutputKey()
{
  return &type metadata for LayoutOutputKey;
}

uint64_t sub_249989ED4()
{
  return sub_24998A04C(&qword_2696E1638, &qword_2696DDB10, (void (*)(void))sub_249989F10);
}

unint64_t sub_249989F10()
{
  unint64_t result = qword_2696DF568;
  if (!qword_2696DF568)
  {
    sub_249AEB808();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696DF568);
  }
  return result;
}

uint64_t sub_249989F68()
{
  return sub_24998A04C(&qword_2696E1648, &qword_2696DFCB0, (void (*)(void))sub_249989F10);
}

unint64_t sub_249989FA4()
{
  unint64_t result = qword_2696E1650;
  if (!qword_2696E1650)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1658);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1650);
  }
  return result;
}

uint64_t sub_24998A010()
{
  return sub_24998A04C(qword_2696E1670, qword_2696DF810, (void (*)(void))sub_249989F10);
}

uint64_t sub_24998A04C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24998A0C0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24998A10C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  sub_249882C34(a1, inited + 32);
  swift_bridgeObjectRetain();
  sub_249894354(inited);
  return v3;
}

void *sub_24998A1B8(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (void *)swift_allocObject();
  v4[2] = sub_2498ECD24(MEMORY[0x263F8EE78]);
  v4[3] = a1;
  v4[4] = a2;
  return v4;
}

uint64_t sub_24998A210()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24998A240()
{
  sub_24998A210();

  return swift_deallocClassInstance();
}

uint64_t _s14KeyedContainerCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24998A28C(uint64_t a1)
{
  sub_24998A2F8(a1, v2);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v2[3]);
  sub_249AEE188();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v2);
}

uint64_t sub_24998A2F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  long long v25 = a2;
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v24 - v6;
  v27[3] = v4;
  v27[4] = *(void *)(v8 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
  uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16);
  v10(boxed_opaque_existential_0, a1, v4);
  uint64_t v11 = sub_24998A10C((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v27);
  uint64_t v12 = v2[4];
  uint64_t v24 = _s20SingleValueContainerCMa();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v13 + 24) = 0xE000000000000000;
  *(unsigned char *)(v13 + 32) = 1;
  *(void *)(v13 + 40) = v11;
  *(void *)(v13 + 48) = v12;
  v10((uint64_t *)v7, a1, v4);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_249ABFF50((uint64_t)v7, v4);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v2[2];
  v2[2] = 0x8000000000000000;
  sub_24998EFF4(v13, v14, v16, v18, v20, isUniquelyReferenced_nonNull_native, &v26, (uint64_t)&off_26FDAE250);
  v2[2] = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  long long v22 = v25;
  v25[3] = v24;
  uint64_t result = sub_24998F3B0(&qword_2696E1708, (void (*)(uint64_t))_s20SingleValueContainerCMa);
  v22[4] = result;
  *long long v22 = v13;
  return result;
}

uint64_t sub_24998A54C(uint64_t a1, uint64_t a2)
{
  sub_24998A2F8(a2, v3);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v3, v3[3]);
  sub_249AEE178();
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v3);
}

uint64_t sub_24998A5E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  long long v25 = a2;
  uint64_t v4 = *(void *)(*v2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v24 - v6;
  v27[3] = v4;
  v27[4] = *(void *)(v8 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v27);
  uint64_t v10 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16);
  v10(boxed_opaque_existential_0, a1, v4);
  uint64_t v11 = sub_24998A10C((uint64_t)v27);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v27);
  uint64_t v12 = v2[4];
  uint64_t v24 = _s16UnkeyedContainerCMa();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = MEMORY[0x263F8EE78];
  v13[3] = v11;
  v13[4] = v12;
  v10((uint64_t *)v7, a1, v4);
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_249ABFF50((uint64_t)v7, v4);
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v26 = v2[2];
  v2[2] = 0x8000000000000000;
  sub_24998EFF4((uint64_t)v13, v14, v16, v18, v20, isUniquelyReferenced_nonNull_native, &v26, (uint64_t)&off_26FDB0E08);
  v2[2] = v26;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  long long v22 = v25;
  v25[3] = v24;
  uint64_t result = sub_24998F3B0(&qword_2696E1700, (void (*)(uint64_t))_s16UnkeyedContainerCMa);
  v22[4] = result;
  *long long v22 = v13;
  return result;
}

uint64_t sub_24998A834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 80);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = _s14KeyedContainerCMa();
  v30[3] = v7;
  v30[4] = *(void *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v30);
  uint64_t v13 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16);
  v13(boxed_opaque_existential_0, a2, v7);
  uint64_t v14 = sub_24998A10C((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v30);
  uint64_t v15 = v4[4];
  uint64_t v16 = (void *)swift_allocObject();
  swift_bridgeObjectRetain();
  v16[2] = sub_2498ECD24(MEMORY[0x263F8EE78]);
  v16[3] = v14;
  v16[4] = v15;
  v13((uint64_t *)v10, v26, v7);
  uint64_t v17 = sub_249ABFF50((uint64_t)v10, v7);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  LOBYTE(v10) = v22 & 1;
  swift_beginAccess();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = v4[2];
  v4[2] = 0x8000000000000000;
  sub_24998F178((uint64_t)v16, v17, v19, v21, (char)v10, isUniquelyReferenced_nonNull_native, &v29, v11, (uint64_t)&off_26FDAB6A8);
  v4[2] = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  v30[0] = (uint64_t)v16;
  swift_getWitnessTable();
  return sub_249AEDF28();
}

uint64_t sub_24998AA94@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  *(void *)(inited + 56) = &type metadata for AnyCodingKey;
  *(void *)(inited + 64) = sub_249896A10();
  uint64_t v6 = swift_allocObject();
  *(void *)(inited + 32) = v6;
  *(void *)(v6 + 16) = 0x7265707573;
  *(void *)(v6 + 24) = 0xE500000000000000;
  *(void *)(v6 + 32) = 0;
  *(unsigned char *)(v6 + 40) = 1;
  swift_bridgeObjectRetain();
  sub_249894354(inited);
  uint64_t v7 = v4;
  uint64_t v8 = *(void *)(v2 + 32);
  uint64_t v9 = type metadata accessor for _LuaEncoder();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v7;
  v10[3] = v8;
  v10[4] = 0;
  v10[5] = 0;
  a1[3] = v9;
  a1[4] = sub_24998F3B0((unint64_t *)&qword_2696E16F8, (void (*)(uint64_t))type metadata accessor for _LuaEncoder);
  *a1 = v10;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24998ABFC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  uint64_t v7 = v3[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  uint64_t v9 = *(void *)(v6 + 80);
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 64) = *(void *)(v6 + 88);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  swift_bridgeObjectRetain();
  sub_249894354(inited);
  uint64_t v11 = v3[4];
  uint64_t v12 = type metadata accessor for _LuaEncoder();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v7;
  v13[3] = v11;
  v13[4] = 0;
  v13[5] = 0;
  a2[3] = v12;
  a2[4] = sub_24998F3B0((unint64_t *)&qword_2696E16F8, (void (*)(uint64_t))type metadata accessor for _LuaEncoder);
  *a2 = v13;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24998AD90()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24998AD9C(uint64_t a1)
{
  return sub_24998A28C(a1);
}

uint64_t sub_24998ADC0(char a1, uint64_t a2)
{
  char v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998ADFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[1] = a2;
  v4[0] = a1;
  return sub_24998A54C((uint64_t)v4, a3);
}

uint64_t sub_24998AE48(uint64_t a1, double a2)
{
  double v3 = a2;
  return sub_24998A54C((uint64_t)&v3, a1);
}

uint64_t sub_24998AE88(uint64_t a1, float a2)
{
  float v3 = a2;
  return sub_24998A54C((uint64_t)&v3, a1);
}

uint64_t sub_24998AEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998AF04(char a1, uint64_t a2)
{
  char v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998AF40(__int16 a1, uint64_t a2)
{
  __int16 v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998AF7C(int a1, uint64_t a2)
{
  int v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998AFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998AFF4()
{
  return sub_249AEE288();
}

uint64_t sub_24998B00C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998B048(char a1, uint64_t a2)
{
  char v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998B084(__int16 a1, uint64_t a2)
{
  __int16 v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998B0C0(int a1, uint64_t a2)
{
  int v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998B0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  return sub_24998A54C((uint64_t)&v3, a2);
}

uint64_t sub_24998B138()
{
  return sub_249AEE298();
}

uint64_t sub_24998B150(uint64_t a1, uint64_t a2)
{
  return sub_24998A54C(a1, a2);
}

uint64_t sub_24998B174()
{
  return sub_249AEE278();
}

uint64_t sub_24998B1A0()
{
  return sub_249AEE1E8();
}

uint64_t sub_24998B1B8()
{
  return sub_249AEE1D8();
}

uint64_t sub_24998B1D0()
{
  return sub_249AEE1F8();
}

uint64_t sub_24998B1EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24998B3E0(a1, a2, a3, a4, MEMORY[0x263F8E3C0]);
}

uint64_t sub_24998B218()
{
  return sub_249AEE208();
}

uint64_t sub_24998B234(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24998B338(a1, a2, a3, a4, MEMORY[0x263F8E3D8]);
}

uint64_t sub_24998B260(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24998B38C(a1, a2, a3, a4, MEMORY[0x263F8E3E0]);
}

uint64_t sub_24998B28C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24998B3E0(a1, a2, a3, a4, MEMORY[0x263F8E3E8]);
}

uint64_t sub_24998B2B8()
{
  return sub_249AEE238();
}

uint64_t sub_24998B2D4()
{
  return sub_249AEE248();
}

uint64_t sub_24998B2F0()
{
  return sub_249AEE218();
}

uint64_t sub_24998B30C(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24998B338(a1, a2, a3, a4, MEMORY[0x263F8E3F8]);
}

uint64_t sub_24998B338(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_24998B360(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24998B38C(a1, a2, a3, a4, MEMORY[0x263F8E408]);
}

uint64_t sub_24998B38C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_24998B3B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24998B3E0(a1, a2, a3, a4, MEMORY[0x263F8E410]);
}

uint64_t sub_24998B3E0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_24998B410()
{
  return sub_249AEE258();
}

uint64_t sub_24998B42C()
{
  return sub_249AEE268();
}

uint64_t sub_24998B448()
{
  return sub_249AEE228();
}

uint64_t sub_24998B474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_24998A834(a1, a2, a3, a4);
}

uint64_t sub_24998B498@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24998A5E4(a1, a2);
}

uint64_t sub_24998B4BC@<X0>(void *a1@<X8>)
{
  return sub_24998AA94(a1);
}

uint64_t sub_24998B4E0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24998ABFC(a1, a2);
}

uint64_t sub_24998B504()
{
  swift_beginAccess();
  if (!*(void *)(*(void *)(v0 + 16) + 16)) {
    return 32123;
  }
  uint64_t v1 = MEMORY[0x24C5AE400](8224, 0xE200000000000000, *(void *)(*(void *)(v0 + 24) + 16));
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v5 = sub_2498E8FE0(v4);
  swift_bridgeObjectRelease();
  v11[0] = (uint64_t)v5;
  sub_24998E054(v11);
  uint64_t v6 = swift_bridgeObjectRelease();
  uint64_t v7 = v11[0];
  MEMORY[0x270FA5388](v6);
  v10[2] = v1;
  v10[3] = v3;
  v10[4] = v0;
  uint64_t v8 = sub_2498F2B64((void (*)(void *__return_ptr, void *))sub_24998F3F8, (uint64_t)v10, v7);
  swift_release();
  v11[0] = 2683;
  v11[1] = 0xE200000000000000;
  v10[6] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0800);
  sub_2499544D0();
  sub_249AECFE8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  return v11[0];
}

uint64_t sub_24998B6C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  unint64_t v46 = a3;
  uint64_t v47 = a4;
  uint64_t v45 = a2;
  uint64_t v7 = sub_249AEB648();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v14 = *(void *)a1;
  unint64_t v15 = *(void *)(a1 + 8);
  uint64_t v44 = *(void *)(a1 + 16);
  int v43 = *(unsigned __int8 *)(a1 + 24);
  swift_bridgeObjectRetain();
  uint64_t v56 = v14;
  sub_2498D918C(v14, v15);
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if (v17)
  {
    char v18 = sub_249AECF98();
    swift_bridgeObjectRelease();
    if (v18) {
      goto LABEL_5;
    }
  }
  uint64_t v54 = v56;
  unint64_t v55 = v15;
  swift_bridgeObjectRetain();
  sub_249AEB628();
  sub_249AEB638();
  unint64_t v42 = v15;
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v13, v7);
  sub_24988CE30();
  uint64_t v20 = sub_249AED928();
  unint64_t v22 = v21;
  char v24 = v23;
  v19(v11, v7);
  unint64_t v15 = v42;
  swift_bridgeObjectRelease();
  if ((v24 & 1) == 0 && (v20 ^ v22) >= 0x4000)
  {
LABEL_5:
    uint64_t v54 = v45;
    unint64_t v55 = v46;
    swift_bridgeObjectRetain();
    sub_249AED1E8();
    uint64_t v26 = v54;
    unint64_t v25 = v55;
    uint64_t v54 = 8795;
    unint64_t v55 = 0xE200000000000000;
    uint64_t v27 = v56;
    uint64_t v52 = v56;
    unint64_t v53 = v15;
    uint64_t v50 = 34;
    unint64_t v51 = 0xE100000000000000;
    uint64_t v48 = 8796;
    unint64_t v49 = 0xE200000000000000;
    sub_24988CE30();
    sub_249AED948();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
    uint64_t v54 = v26;
    unint64_t v55 = v25;
    swift_bridgeObjectRetain();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    uint64_t v29 = v54;
    unint64_t v28 = v55;
    uint64_t v30 = v47;
    swift_beginAccess();
    uint64_t v31 = *(void *)(v30 + 16);
    if (*(void *)(v31 + 16))
    {
      swift_bridgeObjectRetain();
      unint64_t v32 = sub_2498EF298(v27, v15, v44, v43);
      if (v33)
      {
LABEL_11:
        uint64_t v37 = *(void *)(*(void *)(v31 + 56) + 16 * v32 + 8);
        swift_endAccess();
        swift_unknownObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v37 + 8))(ObjectType, v37);
        swift_unknownObjectRelease();
        uint64_t v54 = v29;
        unint64_t v55 = v28;
        swift_bridgeObjectRetain();
        sub_249AED1E8();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v40 = v55;
        *a5 = v54;
        a5[1] = v40;
        return result;
      }
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    __break(1u);
  }
  uint64_t v54 = v45;
  unint64_t v55 = v46;
  swift_bridgeObjectRetain();
  sub_249AED1E8();
  swift_bridgeObjectRetain();
  uint64_t v34 = v56;
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  uint64_t v29 = v54;
  unint64_t v28 = v55;
  uint64_t v35 = v47;
  swift_beginAccess();
  uint64_t v31 = *(void *)(v35 + 16);
  if (*(void *)(v31 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v32 = sub_2498EF298(v34, v15, v44, v43);
    if (v36) {
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_endAccess();
  __break(1u);
  return result;
}

uint64_t sub_24998BB78(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_24998BB80()
{
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 41, 7);
}

uint64_t sub_24998BBB8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2D8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 480);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[480 * v8]) {
      memmove(v12, v13, 480 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[480 * v8] || v12 >= &v13[480 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998BD40(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF508);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998BECC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF4C8);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 120 * v8) {
      memmove(v10 + 4, a4 + 4, 120 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 120 * v8 || v12 >= v13 + 120 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE530);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998C074(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE328);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998C1E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF378);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998C348(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998C4EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE368);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998C668(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1758);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1760);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998C810(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1730);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[120 * v8]) {
      memmove(v12, v13, 120 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[120 * v8] || v12 >= &v13[120 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998C998(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE310);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998CAF8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1738);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1740);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998CCA0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1748);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 13 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1750);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998CE40(char a1, int64_t a2, char a3, void *a4)
{
  return sub_24998CE68(a1, a2, a3, a4, &qword_2696E1788, &qword_2696E1790);
}

uint64_t sub_24998CE54(char a1, int64_t a2, char a3, void *a4)
{
  return sub_24998CE68(a1, a2, a3, a4, &qword_2696E1798, &qword_2696E17A0);
}

uint64_t sub_24998CE68(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = _swift_stdlib_malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 1;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 5);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 32 * v11) {
      memmove(v13 + 4, a4 + 4, 32 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 32 * v11 || v16 >= v17 + 32 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998CFF8(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE388);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEC0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998D184(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1720);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1728);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998D32C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1780);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB20);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998D4B8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3A8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 95;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 7);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  size_t v15 = v8 << 7;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998D620(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E17A8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E17B0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998D7AC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_24998D82C(a1, a2, a3, a4, &qword_2696DE2D0, (uint64_t (*)(void))type metadata accessor for Layout);
}

uint64_t sub_24998D7CC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_24998D82C(a1, a2, a3, a4, &qword_2696DE2E8, (uint64_t (*)(void))type metadata accessor for Component);
}

uint64_t sub_24998D7EC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_24998D82C(a1, a2, a3, a4, &qword_2696DE2E0, (uint64_t (*)(void))type metadata accessor for Slot);
}

uint64_t sub_24998D80C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_24998D82C(a1, a2, a3, a4, &qword_2696DE338, (uint64_t (*)(void))type metadata accessor for Zone);
}

uint64_t sub_24998D82C(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (char *)v16 + v20;
  unint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  char v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998DA74(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1778);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 479;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 9);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 4;
  uint64_t v14 = a4 + 4;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v10 + 4, a4 + 4, v8 << 9);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0C0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998DC00(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1770);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998DD6C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1768);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998DECC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1718);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[88 * v8]) {
      memmove(v12, v13, 88 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[88 * v8] || v12 >= &v13[88 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t sub_24998E054(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24998EFCC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_24998E0C0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_24998E0C0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_249AEDF38();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_155;
    }
    if (v3) {
      return sub_24998E7EC(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_163;
  }
  uint64_t v111 = result;
  v108 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      size_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_121:
      v99 = v11;
      uint64_t v110 = v8;
      if (v12 >= 2)
      {
        uint64_t v100 = *v108;
        do
        {
          unint64_t v101 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_150;
          }
          if (!v100) {
            goto LABEL_162;
          }
          v102 = v99;
          uint64_t v103 = *(void *)&v99[16 * v101 + 32];
          uint64_t v104 = *(void *)&v99[16 * v12 + 24];
          sub_24998E8D0((char *)(v100 + 32 * v103), (char *)(v100 + 32 * *(void *)&v99[16 * v12 + 16]), v100 + 32 * v104, __dst);
          if (v1) {
            break;
          }
          if (v104 < v103) {
            goto LABEL_151;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v102 = sub_24998EF90((uint64_t)v102);
          }
          if (v101 >= *((void *)v102 + 2)) {
            goto LABEL_152;
          }
          v105 = &v102[16 * v101 + 32];
          *(void *)v105 = v103;
          *((void *)v105 + 1) = v104;
          unint64_t v106 = *((void *)v102 + 2);
          if (v12 > v106) {
            goto LABEL_153;
          }
          memmove(&v102[16 * v12 + 16], &v102[16 * v12 + 32], 16 * (v106 - v12));
          v99 = v102;
          *((void *)v102 + 2) = v106 - 1;
          unint64_t v12 = v106 - 1;
        }
        while (v106 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      *(void *)(v110 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v110 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_249AED488();
    *(void *)(v7 + 16) = v6;
    uint64_t v110 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v109 = *a1 + 8;
  uint64_t v107 = *a1 + 24;
  size_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v112 = v3;
  uint64_t v114 = *a1;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_49;
    }
    uint64_t v14 = (uint64_t *)(v10 + 32 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    size_t v17 = (void *)(v10 + 32 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_48;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_249AEE0D8();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    unint64_t v21 = (void *)(v109 + 32 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 32 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_249AEE0D8()))
      {
        goto LABEL_36;
      }
      v21 += 4;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_158;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 32 * v20 - 32;
        uint64_t v26 = 32 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_161;
            }
            uint64_t v31 = (_OWORD *)(v10 + v26);
            unint64_t v32 = (_OWORD *)(v10 + v25);
            uint64_t v33 = *(void *)(v10 + v26);
            uint64_t v34 = *(void *)(v10 + v26 + 8);
            uint64_t v35 = *(void *)(v10 + v26 + 16);
            char v36 = *(unsigned char *)(v10 + v26 + 24);
            if (v26 != v25 || v31 >= v32 + 2)
            {
              long long v29 = v32[1];
              *uint64_t v31 = *v32;
              v31[1] = v29;
            }
            uint64_t v30 = v10 + v25;
            *(void *)uint64_t v30 = v33;
            *(void *)(v30 + 8) = v34;
            *(void *)(v30 + 16) = v35;
            *(unsigned char *)(v30 + 24) = v36;
          }
          ++v28;
          v25 -= 32;
          v26 += 32;
        }
        while (v28 < v27);
      }
LABEL_48:
      uint64_t v9 = v20;
    }
LABEL_49:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_154;
      }
      if (v9 - v13 < v111) {
        break;
      }
    }
LABEL_70:
    if (v9 < v13) {
      goto LABEL_149;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      size_t v11 = sub_24998EB7C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v49 = *((void *)v11 + 2);
    unint64_t v48 = *((void *)v11 + 3);
    unint64_t v12 = v49 + 1;
    if (v49 >= v48 >> 1) {
      size_t v11 = sub_24998EB7C((char *)(v48 > 1), v49 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v50 = v11 + 32;
    unint64_t v51 = &v11[16 * v49 + 32];
    *(void *)unint64_t v51 = v13;
    *((void *)v51 + 1) = v9;
    if (v49)
    {
      uint64_t v10 = v114;
      while (1)
      {
        unint64_t v52 = v12 - 1;
        if (v12 >= 4)
        {
          v57 = &v50[16 * v12];
          uint64_t v58 = *((void *)v57 - 8);
          uint64_t v59 = *((void *)v57 - 7);
          BOOL v63 = __OFSUB__(v59, v58);
          uint64_t v60 = v59 - v58;
          if (v63) {
            goto LABEL_138;
          }
          uint64_t v62 = *((void *)v57 - 6);
          uint64_t v61 = *((void *)v57 - 5);
          BOOL v63 = __OFSUB__(v61, v62);
          uint64_t v55 = v61 - v62;
          char v56 = v63;
          if (v63) {
            goto LABEL_139;
          }
          unint64_t v64 = v12 - 2;
          v65 = &v50[16 * v12 - 32];
          uint64_t v67 = *(void *)v65;
          uint64_t v66 = *((void *)v65 + 1);
          BOOL v63 = __OFSUB__(v66, v67);
          uint64_t v68 = v66 - v67;
          if (v63) {
            goto LABEL_141;
          }
          BOOL v63 = __OFADD__(v55, v68);
          uint64_t v69 = v55 + v68;
          if (v63) {
            goto LABEL_144;
          }
          if (v69 >= v60)
          {
            v87 = &v50[16 * v52];
            uint64_t v89 = *(void *)v87;
            uint64_t v88 = *((void *)v87 + 1);
            BOOL v63 = __OFSUB__(v88, v89);
            uint64_t v90 = v88 - v89;
            if (v63) {
              goto LABEL_148;
            }
            BOOL v80 = v55 < v90;
            goto LABEL_108;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v81 = *((void *)v11 + 4);
            uint64_t v82 = *((void *)v11 + 5);
            BOOL v63 = __OFSUB__(v82, v81);
            uint64_t v74 = v82 - v81;
            char v75 = v63;
            goto LABEL_102;
          }
          uint64_t v54 = *((void *)v11 + 4);
          uint64_t v53 = *((void *)v11 + 5);
          BOOL v63 = __OFSUB__(v53, v54);
          uint64_t v55 = v53 - v54;
          char v56 = v63;
        }
        if (v56) {
          goto LABEL_140;
        }
        unint64_t v64 = v12 - 2;
        v70 = &v50[16 * v12 - 32];
        uint64_t v72 = *(void *)v70;
        uint64_t v71 = *((void *)v70 + 1);
        BOOL v73 = __OFSUB__(v71, v72);
        uint64_t v74 = v71 - v72;
        char v75 = v73;
        if (v73) {
          goto LABEL_143;
        }
        v76 = &v50[16 * v52];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        BOOL v63 = __OFSUB__(v77, v78);
        uint64_t v79 = v77 - v78;
        if (v63) {
          goto LABEL_146;
        }
        if (__OFADD__(v74, v79)) {
          goto LABEL_147;
        }
        if (v74 + v79 >= v55)
        {
          BOOL v80 = v55 < v79;
LABEL_108:
          if (v80) {
            unint64_t v52 = v64;
          }
          goto LABEL_110;
        }
LABEL_102:
        if (v75) {
          goto LABEL_142;
        }
        v83 = &v50[16 * v52];
        uint64_t v85 = *(void *)v83;
        uint64_t v84 = *((void *)v83 + 1);
        BOOL v63 = __OFSUB__(v84, v85);
        uint64_t v86 = v84 - v85;
        if (v63) {
          goto LABEL_145;
        }
        if (v86 < v74) {
          goto LABEL_15;
        }
LABEL_110:
        unint64_t v91 = v52 - 1;
        if (v52 - 1 >= v12)
        {
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
          goto LABEL_157;
        }
        if (!v10) {
          goto LABEL_160;
        }
        v92 = v11;
        uint64_t v93 = v10;
        v94 = &v50[16 * v91];
        uint64_t v95 = *(void *)v94;
        v96 = &v50[16 * v52];
        uint64_t v97 = *((void *)v96 + 1);
        sub_24998E8D0((char *)(v93 + 32 * *(void *)v94), (char *)(v93 + 32 * *(void *)v96), v93 + 32 * v97, __dst);
        if (v1) {
          goto LABEL_118;
        }
        if (v97 < v95) {
          goto LABEL_135;
        }
        if (v52 > *((void *)v92 + 2)) {
          goto LABEL_136;
        }
        *(void *)v94 = v95;
        *(void *)&v50[16 * v91 + 8] = v97;
        unint64_t v98 = *((void *)v92 + 2);
        if (v52 >= v98) {
          goto LABEL_137;
        }
        size_t v11 = v92;
        unint64_t v12 = v98 - 1;
        memmove(&v50[16 * v52], v96 + 16, 16 * (v98 - 1 - v52));
        *((void *)v92 + 2) = v98 - 1;
        BOOL v80 = v98 > 2;
        uint64_t v10 = v114;
        if (!v80) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v114;
LABEL_15:
    uint64_t v3 = v112;
    if (v9 >= v112)
    {
      uint64_t v8 = v110;
      goto LABEL_121;
    }
  }
  if (__OFADD__(v13, v111)) {
    goto LABEL_156;
  }
  if (v13 + v111 >= v3) {
    uint64_t v37 = v3;
  }
  else {
    uint64_t v37 = v13 + v111;
  }
  if (v37 >= v13)
  {
    if (v9 != v37)
    {
      uint64_t v113 = v13;
      uint64_t v38 = v107 + 32 * v9;
      do
      {
        uint64_t v39 = v113;
        uint64_t v40 = v38;
        do
        {
          uint64_t v41 = (_OWORD *)(v40 - 24);
          BOOL v42 = *(void *)(v40 - 24) == *(void *)(v40 - 56) && *(void *)(v40 - 16) == *(void *)(v40 - 48);
          if (v42 || (sub_249AEE0D8() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_159;
          }
          long long v44 = *(_OWORD *)(v40 - 56);
          long long v43 = *(_OWORD *)(v40 - 40);
          *(unsigned char *)(v40 - 32) = *(unsigned char *)v40;
          v40 -= 32;
          uint64_t v45 = *(void *)(v40 + 8);
          uint64_t v46 = *(void *)(v40 + 16);
          uint64_t v47 = *(void *)(v40 + 24);
          *uint64_t v41 = v44;
          v41[1] = v43;
          *(void *)(v40 - 24) = v45;
          *(void *)(v40 - 16) = v46;
          *(void *)(v40 - 8) = v47;
          ++v39;
        }
        while (v9 != v39);
        ++v9;
        v38 += 32;
      }
      while (v9 != v37);
      uint64_t v9 = v37;
      uint64_t v13 = v113;
    }
    goto LABEL_70;
  }
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  uint64_t result = sub_249AEDC48();
  __break(1u);
  return result;
}

uint64_t sub_24998E7EC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 32 * a3 + 24;
LABEL_5:
    uint64_t v9 = v6;
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t result = *(void *)(v10 - 24);
      size_t v11 = (_OWORD *)(v10 - 24);
      BOOL v12 = result == *(void *)(v10 - 56) && *(void *)(v10 - 16) == *(void *)(v10 - 48);
      if (v12 || (uint64_t result = sub_249AEE0D8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 32;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      long long v14 = *(_OWORD *)(v10 - 56);
      long long v13 = *(_OWORD *)(v10 - 40);
      *(unsigned char *)(v10 - 32) = *(unsigned char *)v10;
      v10 -= 32;
      uint64_t v15 = *(void *)(v10 + 8);
      uint64_t v16 = *(void *)(v10 + 16);
      uint64_t v17 = *(void *)(v10 + 24);
      *size_t v11 = v14;
      v11[1] = v13;
      *(void *)(v10 - 24) = v15;
      *(void *)(v10 - 16) = v16;
      *(void *)(v10 - 8) = v17;
      if (v4 == ++v9) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24998E8D0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 31;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 5;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 31;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 5;
  uint64_t v33 = __src;
  unint64_t v32 = __dst;
  if (v10 >= v13)
  {
    if (v11 >= -31)
    {
      uint64_t v20 = 32 * v13;
      if (__dst != a2 || &a2[v20] <= __dst) {
        memmove(__dst, a2, 32 * v13);
      }
      unint64_t v21 = &v4[v20];
      uint64_t v31 = v21;
      uint64_t v33 = v6;
      if (v7 < v6 && (unint64_t)(v11 - 32) <= 0xFFFFFFFFFFFFFFC0)
      {
        uint64_t v22 = (char *)(a3 - 32);
        uint64_t v23 = v6;
        while (1)
        {
          char v24 = v22 + 32;
          uint64_t v25 = *((void *)v23 - 4);
          uint64_t v26 = *((void *)v23 - 3);
          v23 -= 32;
          BOOL v27 = *((void *)v21 - 4) == v25 && *((void *)v21 - 3) == v26;
          if (v27 || (sub_249AEE0D8() & 1) == 0)
          {
            uint64_t v31 = v21 - 32;
            if (v24 < v21 || v22 >= v21 || v24 != v21)
            {
              long long v29 = *((_OWORD *)v21 - 1);
              *(_OWORD *)uint64_t v22 = *((_OWORD *)v21 - 2);
              *((_OWORD *)v22 + 1) = v29;
            }
            uint64_t v23 = v6;
            v21 -= 32;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v24 != v6 || v22 >= v6)
            {
              long long v28 = *((_OWORD *)v23 + 1);
              *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
              *((_OWORD *)v22 + 1) = v28;
            }
            uint64_t v33 = v23;
            if (v23 <= v7) {
              goto LABEL_50;
            }
          }
          v22 -= 32;
          uint64_t v6 = v23;
          if (v21 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -31)
  {
    size_t v14 = 32 * v10;
    if (__dst != __src || &__src[v14] <= __dst) {
      memmove(__dst, __src, v14);
    }
    uint64_t v15 = &v4[v14];
    uint64_t v31 = v15;
    if ((unint64_t)v6 < a3 && (unint64_t)(v8 - 32) <= 0xFFFFFFFFFFFFFFC0)
    {
      do
      {
        BOOL v16 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v16 || (sub_249AEE0D8() & 1) == 0)
        {
          if (v7 != v4)
          {
            long long v19 = *((_OWORD *)v4 + 1);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
            *((_OWORD *)v7 + 1) = v19;
          }
          v4 += 32;
          unint64_t v32 = v4;
          uint64_t v17 = v6;
        }
        else
        {
          uint64_t v17 = v6 + 32;
          if (v7 < v6 || v7 >= v17 || v7 != v6)
          {
            long long v18 = *((_OWORD *)v6 + 1);
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
            *((_OWORD *)v7 + 1) = v18;
          }
        }
        v7 += 32;
        if (v4 >= v15) {
          break;
        }
        uint64_t v6 = v17;
      }
      while ((unint64_t)v17 < a3);
      uint64_t v33 = v7;
    }
LABEL_50:
    sub_24998EE1C((void **)&v33, (const void **)&v32, &v31);
    return 1;
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

char *sub_24998EB7C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1710);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24998EC78(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -56)
  {
    uint64_t result = (char *)sub_249AEDCB8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 56;
    if (result != v3 || result >= &v3[56 * v6])
    {
      return (char *)memmove(result, v3, 56 * v6);
    }
  }
  return result;
}

char *sub_24998ED4C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -120)
  {
    uint64_t result = (char *)sub_249AEDCB8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 120;
    if (result != v3 || result >= &v3[120 * v6])
    {
      return (char *)memmove(result, v3, 120 * v6);
    }
  }
  return result;
}

char *sub_24998EE1C(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -32)
  {
    uint64_t result = (char *)sub_249AEDCB8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = (v4 + (v4 < 0 ? 0x1FuLL : 0)) & 0xFFFFFFFFFFFFFFE0;
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_24998EED4(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_249AEDCB8();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_24998EF90(uint64_t a1)
{
  return sub_24998EB7C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24998EFA4(uint64_t a1)
{
  return sub_24998BD40(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24998EFB8(void *a1)
{
  return sub_24998BECC(0, a1[2], 0, a1);
}

uint64_t sub_24998EFCC(uint64_t a1)
{
  return sub_24998C1E0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24998EFE0(uint64_t a1)
{
  return sub_24998C074(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_24998EFF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, void *a7, uint64_t a8)
{
  size_t v14 = (void *)*a7;
  char v15 = a5 & 1;
  unint64_t v17 = sub_2498EF298(a2, a3, a4, a5 & 1);
  uint64_t v18 = v14[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = v14[3];
  if (v22 >= v20 && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = (void *)*a7;
    if (v21)
    {
LABEL_8:
      char v24 = (uint64_t *)(v23[7] + 16 * v17);
      uint64_t result = swift_unknownObjectRelease();
      *char v24 = a1;
      v24[1] = a8;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a6 & 1) == 0)
  {
    sub_2498E1C3C();
    goto LABEL_7;
  }
  sub_2498E719C(v20, a6 & 1);
  unint64_t v26 = sub_2498EF298(a2, a3, a4, v15);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_15:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = (void *)*a7;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24998F2FC(v17, a2, a3, a4, v15, a1, v23, a8);

  return swift_bridgeObjectRetain();
}

uint64_t sub_24998F178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6, void *a7, uint64_t a8, uint64_t a9)
{
  size_t v14 = (void *)*a7;
  char v15 = a5 & 1;
  unint64_t v17 = sub_2498EF298(a2, a3, a4, a5 & 1);
  uint64_t v18 = v14[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = v14[3];
  if (v22 >= v20 && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = (void *)*a7;
    if (v21)
    {
LABEL_8:
      char v24 = (uint64_t *)(v23[7] + 16 * v17);
      uint64_t result = swift_unknownObjectRelease();
      *char v24 = a1;
      v24[1] = a9;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a6 & 1) == 0)
  {
    sub_2498E1C3C();
    goto LABEL_7;
  }
  sub_2498E719C(v20, a6 & 1);
  unint64_t v26 = sub_2498EF298(a2, a3, a4, v15);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_15:
    uint64_t result = sub_249AEE2D8();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = (void *)*a7;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24998F354(v17, a2, a3, a4, v15, a1, v23, a8, a9);

  return swift_bridgeObjectRetain();
}

unint64_t sub_24998F2FC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = a7[6] + 32 * result;
  *(void *)uint64_t v8 = a2;
  *(void *)(v8 + 8) = a3;
  *(void *)(v8 + 16) = a4;
  *(unsigned char *)(v8 + 24) = a5 & 1;
  uint64_t v9 = (void *)(a7[7] + 16 * result);
  *uint64_t v9 = a6;
  v9[1] = a8;
  uint64_t v10 = a7[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a7[2] = v12;
  }
  return result;
}

unint64_t sub_24998F354(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v9 = a7[6] + 32 * result;
  *(void *)uint64_t v9 = a2;
  *(void *)(v9 + 8) = a3;
  *(void *)(v9 + 16) = a4;
  *(unsigned char *)(v9 + 24) = a5 & 1;
  uint64_t v10 = (void *)(a7[7] + 16 * result);
  *uint64_t v10 = a6;
  v10[1] = a9;
  uint64_t v11 = a7[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a7[2] = v13;
  }
  return result;
}

uint64_t sub_24998F3B0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24998F3F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24998B6C8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t Slot.init(positionId:style:frame:safeAreaInsets:zIndex:instrument:parentPositionId:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, CGFloat a10@<D0>, CGFloat a11@<D1>, CGFloat a12@<D2>, CGFloat a13@<D3>)
{
  uint64_t v58 = a8;
  uint64_t v57 = a7;
  uint64_t v56 = a6;
  uint64_t v55 = a5;
  uint64_t v53 = a2;
  uint64_t v52 = a1;
  uint64_t v54 = a4;
  sub_249882788(a4, (uint64_t)v60, &qword_2696E17B8);
  double v19 = *(double *)v60;
  uint64_t v20 = v60[1];
  uint64_t v21 = v60[2];
  uint64_t v22 = v60[3];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v24 = MEMORY[0x270FA5388](v23 - 8);
  unint64_t v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  long long v28 = (char *)&v48 - v27;
  uint64_t v30 = *a3;
  uint64_t v29 = a3[1];
  uint64_t v31 = a3[2];
  uint64_t v50 = a3[3];
  uint64_t v49 = a3[4];
  uint64_t v48 = a3[5];
  unint64_t v32 = (int *)type metadata accessor for Slot();
  uint64_t v33 = a9 + v32[9];
  uint64_t v34 = type metadata accessor for Instrument();
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
  uint64_t v51 = v33;
  v35(v33, 1, 1, v34);
  char v36 = (void *)(a9 + v32[10]);
  *char v36 = 0;
  v36[1] = 0;
  uint64_t v37 = a9 + v32[11];
  sub_249AEB7F8();
  sub_2498D6084((uint64_t)v28, (uint64_t)v26, &qword_2696DF408);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v38 = qword_2696E2ED8;
  sub_2498D60E8((uint64_t)v28, &qword_2696DF408);
  sub_249882788((uint64_t)v26, v37, &qword_2696DF408);
  *(void *)(v37 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v38;
  uint64_t v39 = v53;
  *(void *)(a9 + 120) = v52;
  *(void *)(a9 + 128) = v39;
  *(void *)a9 = v30;
  *(void *)(a9 + 8) = v29;
  uint64_t v40 = v50;
  *(void *)(a9 + 16) = v31;
  *(void *)(a9 + 24) = v40;
  uint64_t v41 = v49;
  uint64_t v42 = v48;
  *(void *)(a9 + 32) = v49;
  *(void *)(a9 + 40) = v42;
  *(CGFloat *)(a9 + 48) = a10;
  *(CGFloat *)(a9 + 56) = a11;
  *(CGFloat *)(a9 + 64) = a12;
  *(CGFloat *)(a9 + 72) = a13;
  sub_249882788(v54, (uint64_t)v61, &qword_2696E17B8);
  if (v61[32] == 1)
  {
    v59[0] = v30;
    v59[1] = v29;
    v59[2] = v31;
    v59[3] = v40;
    v59[4] = v41;
    v59[5] = v42;
    double v19 = sub_249990F74((uint64_t)v59, a10, a11, a12, a13);
    uint64_t v20 = v43;
    uint64_t v21 = v44;
    uint64_t v22 = v45;
  }
  *(double *)(a9 + 80) = v19;
  *(void *)(a9 + 88) = v20;
  *(void *)(a9 + 96) = v21;
  *(void *)(a9 + 104) = v22;
  *(void *)(a9 + 112) = v55;
  sub_24997ED24(v56, v51, &qword_2696DE540);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v47 = v58;
  *char v36 = v57;
  v36[1] = v47;
  return result;
}

uint64_t type metadata accessor for Slot()
{
  uint64_t result = qword_2696E1888;
  if (!qword_2696E1888) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Slot.assets.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Slot();
  sub_2498D6084(v0 + *(int *)(v4 + 36), (uint64_t)v3, &qword_2696DE540);
  uint64_t v5 = type metadata accessor for Instrument();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_2498D60E8((uint64_t)v3, &qword_2696DE540);
    return MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = Instrument.assets.getter();
    sub_2499929B0((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for Instrument);
  }
  return v6;
}

uint64_t sub_24998F8D0(uint64_t a1)
{
  unint64_t v2 = sub_2499927D4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24998F90C(uint64_t a1)
{
  unint64_t v2 = sub_2499927D4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24998F948()
{
  uint64_t v1 = 0x75676E6174636572;
  if (*v0 != 1) {
    uint64_t v1 = 0x72656E726F63;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x72616C7563726963;
  }
}

uint64_t sub_24998F9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249996444(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24998F9D0(uint64_t a1)
{
  unint64_t v2 = sub_2499926D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24998FA0C(uint64_t a1)
{
  unint64_t v2 = sub_2499926D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

unint64_t sub_24998FA48()
{
  unint64_t result = 1802723693;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x69646152676E6972;
      break;
    case 2:
      unint64_t result = 0x746E6543676E6972;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24998FAE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499965AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24998FB0C(uint64_t a1)
{
  unint64_t v2 = sub_24999272C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24998FB48(uint64_t a1)
{
  unint64_t v2 = sub_24999272C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24998FB84(uint64_t a1)
{
  unint64_t v2 = sub_249992780();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24998FBC0(uint64_t a1)
{
  unint64_t v2 = sub_249992780();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Slot.Style.encode(to:)(void *a1)
{
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E17C0);
  uint64_t v27 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  unint64_t v32 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E17C8);
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E17D0);
  uint64_t v29 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E17D8);
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  MEMORY[0x270FA5388](v10);
  BOOL v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *v1;
  uint64_t v14 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v15 = v1[3];
  uint64_t v16 = v1[5];
  uint64_t v26 = v1[4];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499926D8();
  unint64_t v17 = v12;
  sub_249AEE468();
  if (v16)
  {
    if (v16 == 1)
    {
      LOBYTE(v37) = 1;
      sub_249992780();
      uint64_t v18 = v35;
      sub_249AEDE48();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v18);
    }
    else
    {
      LOBYTE(v37) = 2;
      sub_24999272C();
      uint64_t v21 = v32;
      uint64_t v22 = v35;
      uint64_t v23 = v17;
      sub_249AEDE48();
      uint64_t v37 = v28;
      char v39 = 0;
      type metadata accessor for CACornerMask(0);
      sub_249996AD4(&qword_2696E17F0, type metadata accessor for CACornerMask);
      uint64_t v24 = v33;
      uint64_t v25 = v36;
      sub_249AEDF08();
      if (!v25)
      {
        uint64_t v37 = v14;
        char v39 = 1;
        sub_24988E51C();
        sub_249AEDF08();
        uint64_t v37 = v13;
        uint64_t v38 = v15;
        char v39 = 2;
        type metadata accessor for CGPoint(0);
        sub_249996AD4(&qword_2696E17F8, type metadata accessor for CGPoint);
        sub_249AEDF08();
        LOBYTE(v37) = 3;
        sub_249AEDEB8();
      }
      (*(void (**)(char *, uint64_t))(v27 + 8))(v21, v24);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v23, v22);
    }
  }
  else
  {
    LOBYTE(v37) = 0;
    sub_2499927D4();
    uint64_t v20 = v35;
    sub_249AEDE48();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v12, v20);
  }
}

uint64_t Slot.Style.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1810);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v46 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1818);
  *(void *)&long long v40 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1820);
  uint64_t v45 = *(char **)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1828);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v47 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v15);
  sub_2499926D8();
  uint64_t v16 = v48;
  sub_249AEE428();
  if (v16)
  {
    uint64_t v17 = (uint64_t)v47;
    return __swift_destroy_boxed_opaque_existential_2Tm(v17);
  }
  uint64_t v39 = v8;
  double v19 = v45;
  uint64_t v18 = v46;
  uint64_t v48 = v12;
  uint64_t v20 = sub_249AEDE18();
  uint64_t v21 = v20;
  if (*(void *)(v20 + 16) != 1)
  {
    uint64_t v25 = sub_249AEDB08();
    swift_allocError();
    uint64_t v27 = v26;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v27 = &type metadata for Slot.Style;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, *MEMORY[0x263F8DCB0], v25);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v11);
    uint64_t v17 = (uint64_t)v47;
    return __swift_destroy_boxed_opaque_existential_2Tm(v17);
  }
  if (*(unsigned char *)(v20 + 32))
  {
    uint64_t v22 = v11;
    uint64_t v23 = v44;
    if (*(unsigned char *)(v20 + 32) == 1)
    {
      LOBYTE(v50) = 1;
      sub_249992780();
      sub_249AEDD38();
      uint64_t v24 = v48;
      (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v22);
      uint64_t v30 = 0;
      uint64_t v31 = 0;
      uint64_t v32 = 0;
      long long v33 = 0uLL;
      uint64_t v34 = 1;
    }
    else
    {
      LOBYTE(v50) = 2;
      sub_24999272C();
      sub_249AEDD38();
      uint64_t v29 = v48;
      type metadata accessor for CACornerMask(0);
      LOBYTE(v50) = 0;
      sub_249996AD4(&qword_2696E1830, type metadata accessor for CACornerMask);
      uint64_t v36 = v42;
      sub_249AEDE08();
      uint64_t v45 = v14;
      uint64_t v30 = v52;
      LOBYTE(v50) = 1;
      sub_24988E570();
      sub_249AEDE08();
      uint64_t v41 = v21;
      uint64_t v31 = v51;
      type metadata accessor for CGPoint(0);
      char v49 = 2;
      sub_249996AD4(&qword_2696E1838, type metadata accessor for CGPoint);
      sub_249AEDE08();
      long long v40 = v50;
      char v49 = 3;
      uint64_t v32 = sub_249AEDDB8();
      uint64_t v34 = v37;
      (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v45, v22);
      uint64_t v23 = v44;
      long long v33 = v40;
    }
  }
  else
  {
    LOBYTE(v50) = 0;
    sub_2499927D4();
    sub_249AEDD38();
    uint64_t v28 = v11;
    uint64_t v23 = v44;
    (*((void (**)(char *, uint64_t))v19 + 1))(v10, v39);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v28);
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v34 = 0;
    long long v33 = 0uLL;
  }
  *(void *)uint64_t v23 = v30;
  *(void *)(v23 + 8) = v31;
  *(_OWORD *)(v23 + 16) = v33;
  *(void *)(v23 + 32) = v32;
  *(void *)(v23 + 40) = v34;
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v47);
}

uint64_t sub_249990968@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Slot.Style.init(from:)(a1, a2);
}

uint64_t sub_249990980(void *a1)
{
  return Slot.Style.encode(to:)(a1);
}

uint64_t Slot.style.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  unint64_t v7 = v1[5];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_249992828(v2, v3, v4, v5, v6, v7);
}

__n128 Slot.style.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  sub_24999283C(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
  __n128 result = v5;
  *(_OWORD *)uint64_t v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  return result;
}

uint64_t (*Slot.style.modify())()
{
  return nullsub_1;
}

double Slot.frame.getter()
{
  return *(double *)(v0 + 48);
}

void Slot.frame.setter(double a1, double a2, double a3, double a4)
{
  v4[6] = a1;
  v4[7] = a2;
  v4[8] = a3;
  v4[9] = a4;
}

uint64_t (*Slot.frame.modify())()
{
  return nullsub_1;
}

double Slot.safeAreaInsets.getter()
{
  return *(double *)(v0 + 80);
}

void Slot.safeAreaInsets.setter(double a1, double a2, double a3, double a4)
{
  v4[10] = a1;
  v4[11] = a2;
  v4[12] = a3;
  v4[13] = a4;
}

uint64_t (*Slot.safeAreaInsets.modify())()
{
  return nullsub_1;
}

uint64_t Slot.zIndex.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t Slot.zIndex.setter(uint64_t result)
{
  *(void *)(v1 + 112) = result;
  return result;
}

uint64_t (*Slot.zIndex.modify())()
{
  return nullsub_1;
}

uint64_t Slot.positionId.getter()
{
  uint64_t v1 = *(void *)(v0 + 120);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Slot.positionId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return result;
}

uint64_t (*Slot.positionId.modify())()
{
  return nullsub_1;
}

uint64_t Slot.instrument.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Slot();
  return sub_2498D6084(v1 + *(int *)(v3 + 36), a1, &qword_2696DE540);
}

uint64_t Slot.instrument.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Slot();
  return sub_24997ED24(a1, v1 + *(int *)(v3 + 36), &qword_2696DE540);
}

uint64_t (*Slot.instrument.modify())(void)
{
  return nullsub_1;
}

uint64_t Slot.parentPositionId.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Slot() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Slot.parentPositionId.setter(uint64_t a1, uint64_t a2)
{
  __n128 v5 = (void *)(v2 + *(int *)(type metadata accessor for Slot() + 40));
  uint64_t result = swift_bridgeObjectRelease();
  *__n128 v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*Slot.parentPositionId.modify())(void)
{
  return nullsub_1;
}

uint64_t Slot.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  MEMORY[0x270FA5388](v3 - 8);
  __n128 v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Slot();
  sub_2498D6084(v1 + *(int *)(v6 + 44), (uint64_t)v5, &qword_2696DF410);
  return sub_249882788((uint64_t)v5, a1, &qword_2696DF408);
}

uint64_t sub_249990D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Slot();
  sub_2498D6084(a1 + *(int *)(v7 + 44), (uint64_t)v6, &qword_2696DF410);
  return sub_249882788((uint64_t)v6, a2, &qword_2696DF408);
}

uint64_t sub_249990E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(a1, (uint64_t)v6, &qword_2696DF408);
  uint64_t v7 = type metadata accessor for Slot();
  return sub_24997ED24((uint64_t)v6, a2 + *(int *)(v7 + 44), &qword_2696DF408);
}

uint64_t Slot.id.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Slot();
  return sub_24997ED24(a1, v1 + *(int *)(v3 + 44), &qword_2696DF408);
}

uint64_t (*Slot.id.modify())(void)
{
  return nullsub_1;
}

double sub_249990F74(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v6 = 0.0;
  if (!*(void *)(a1 + 40))
  {
    CGFloat v10 = CGRectGetWidth(*(CGRect *)&a2) * 0.707106781;
    v22.origin.x = a2;
    v22.origin.y = a3;
    v22.size.width = a4;
    v22.size.CGFloat height = a5;
    CGFloat v11 = CGRectGetHeight(v22) * 0.707106781;
    v23.origin.x = a2;
    v23.origin.y = a3;
    v23.size.width = a4;
    v23.size.CGFloat height = a5;
    CGFloat rect = a5;
    CGFloat v12 = CGRectGetMidX(v23) - v10 * 0.5;
    v24.origin.x = a2;
    v24.origin.y = a3;
    v24.size.width = a4;
    v24.size.CGFloat height = a5;
    CGFloat v13 = CGRectGetMidY(v24) - v11 * 0.5;
    v25.origin.x = v12;
    v25.origin.y = v13;
    v25.size.width = v10;
    v25.size.CGFloat height = v11;
    CGFloat v20 = round(CGRectGetMinX(v25));
    v26.origin.x = v12;
    v26.origin.y = v13;
    v26.size.width = v10;
    v26.size.CGFloat height = v11;
    CGFloat v19 = round(CGRectGetMinY(v26));
    v27.origin.x = v12;
    v27.origin.y = v13;
    v27.size.width = v10;
    v27.size.CGFloat height = v11;
    CGFloat v18 = round(CGRectGetWidth(v27));
    v28.origin.x = v12;
    v28.origin.y = v13;
    v28.size.width = v10;
    v28.size.CGFloat height = v11;
    v29.size.CGFloat height = round(CGRectGetHeight(v28));
    v29.origin.x = v20;
    v29.origin.y = v19;
    v29.size.width = v18;
    CGFloat height = v29.size.height;
    CGFloat v17 = v29.size.height;
    double MinY = CGRectGetMinY(v29);
    v30.origin.x = a2;
    v30.origin.y = a3;
    v30.size.width = a4;
    v30.size.CGFloat height = rect;
    double v6 = MinY - CGRectGetMinY(v30);
    v31.origin.x = v20;
    v31.origin.y = v19;
    v31.size.width = v18;
    v31.size.CGFloat height = height;
    CGRectGetMinX(v31);
    v32.origin.x = a2;
    v32.origin.y = a3;
    v32.size.width = a4;
    v32.size.CGFloat height = rect;
    CGRectGetMinX(v32);
    v33.origin.x = a2;
    v33.origin.y = a3;
    v33.size.width = a4;
    v33.size.CGFloat height = rect;
    CGRectGetMaxY(v33);
    v34.origin.x = v20;
    v34.origin.y = v19;
    v34.size.width = v18;
    v34.size.CGFloat height = v17;
    CGRectGetMaxY(v34);
    v35.origin.x = a2;
    v35.origin.y = a3;
    v35.size.width = a4;
    v35.size.CGFloat height = rect;
    CGRectGetMaxX(v35);
    v36.origin.x = v20;
    v36.origin.y = v19;
    v36.size.width = v18;
    v36.size.CGFloat height = v17;
    CGRectGetMaxX(v36);
  }
  return v6;
}

unint64_t sub_2499911A4(char a1)
{
  unint64_t result = 0x656C797473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D617266;
      break;
    case 2:
      unint64_t result = 0x6165724165666173;
      break;
    case 3:
      unint64_t result = 0x7865646E497ALL;
      break;
    case 4:
      unint64_t result = 0x6E6F697469736F70;
      break;
    case 5:
      unint64_t result = 0x656D757274736E69;
      break;
    case 6:
      unint64_t result = 0xD000000000000010;
      break;
    case 7:
      unint64_t result = 25705;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2499912A4()
{
  return sub_2499911A4(*v0);
}

uint64_t sub_2499912AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249996784(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499912D4(uint64_t a1)
{
  unint64_t v2 = sub_249992850();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249991310(uint64_t a1)
{
  unint64_t v2 = sub_249992850();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Slot.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF418);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249992850();
  sub_249AEE468();
  long long v9 = v3[1];
  long long v16 = *v3;
  long long v17 = v9;
  long long v18 = v3[2];
  char v15 = 0;
  sub_2499928A4();
  sub_249AEDF08();
  if (!v2)
  {
    long long v10 = v3[4];
    long long v16 = v3[3];
    long long v17 = v10;
    char v15 = 1;
    type metadata accessor for CGRect(0);
    sub_249996AD4(&qword_2696DF690, type metadata accessor for CGRect);
    sub_249AEDF08();
    long long v11 = v3[6];
    long long v16 = v3[5];
    long long v17 = v11;
    char v15 = 2;
    sub_2498F8D04();
    sub_249AEDF08();
    LOBYTE(v16) = 3;
    sub_249AEDEE8();
    LOBYTE(v16) = 4;
    sub_249AEDEB8();
    uint64_t v12 = type metadata accessor for Slot();
    LOBYTE(v16) = 5;
    type metadata accessor for Instrument();
    sub_249996AD4(&qword_2696E1850, (void (*)(uint64_t))type metadata accessor for Instrument);
    sub_249AEDEA8();
    LOBYTE(v16) = 6;
    sub_249AEDE58();
    sub_2498DE598((uint64_t)v3 + *(int *)(v12 + 44), 7);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t Slot.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  MEMORY[0x270FA5388](v3);
  uint64_t v44 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v46 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1218);
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  long long v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  CGFloat v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  char v15 = (char *)&v43 - v14;
  uint64_t v16 = type metadata accessor for Slot();
  long long v17 = (int *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  CGFloat v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = (uint64_t)&v19[v17[11]];
  uint64_t v21 = type metadata accessor for Instrument();
  CGRect v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v50 = v20;
  uint64_t v45 = v21;
  v22(v20, 1, 1);
  CGRect v23 = &v19[v17[12]];
  *(void *)CGRect v23 = 0;
  *((void *)v23 + 1) = 0;
  char v49 = v23;
  uint64_t v24 = (uint64_t)&v19[v17[13]];
  sub_249AEB7F8();
  sub_2498D6084((uint64_t)v15, (uint64_t)v13, &qword_2696DF408);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_2696E2ED8;
  sub_2498D60E8((uint64_t)v15, &qword_2696DF408);
  sub_249882788((uint64_t)v13, v24, &qword_2696DF408);
  uint64_t v26 = *(int *)(v3 + 52);
  uint64_t v52 = v24;
  *(void *)(v24 + v26) = v25;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249992850();
  uint64_t v27 = v51;
  sub_249AEE428();
  uint64_t v28 = (uint64_t)a1;
  if (v27)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2498D60E8(v50, &qword_2696DE540);
    swift_bridgeObjectRelease();
    return sub_2498D60E8(v52, &qword_2696DF410);
  }
  else
  {
    char v56 = 0;
    sub_2499928F8();
    uint64_t v29 = v48;
    sub_249AEDE08();
    long long v30 = v54;
    *(_OWORD *)CGFloat v19 = v53;
    *((_OWORD *)v19 + 1) = v30;
    *((_OWORD *)v19 + 2) = v55;
    type metadata accessor for CGRect(0);
    char v56 = 1;
    sub_249996AD4(&qword_2696DF6D8, type metadata accessor for CGRect);
    sub_249AEDE08();
    long long v31 = v54;
    *((_OWORD *)v19 + 3) = v53;
    *((_OWORD *)v19 + 4) = v31;
    char v56 = 2;
    sub_2498F8E7C();
    sub_249AEDE08();
    long long v32 = v54;
    *((_OWORD *)v19 + 5) = v53;
    *((_OWORD *)v19 + 6) = v32;
    LOBYTE(v53) = 3;
    *((void *)v19 + 14) = sub_249AEDDE8();
    LOBYTE(v53) = 4;
    *((void *)v19 + 15) = sub_249AEDDB8();
    *((void *)v19 + 16) = v33;
    LOBYTE(v53) = 5;
    sub_249996AD4(&qword_2696E1860, (void (*)(uint64_t))type metadata accessor for Instrument);
    uint64_t v34 = (uint64_t)v46;
    sub_249AEDDA8();
    CGRect v35 = v9;
    sub_24997ED24(v34, v50, &qword_2696DE540);
    LOBYTE(v53) = 6;
    uint64_t v36 = sub_249AEDD58();
    uint64_t v37 = v49;
    uint64_t v38 = v36;
    uint64_t v40 = v39;
    swift_bridgeObjectRelease();
    *uint64_t v37 = v38;
    v37[1] = v40;
    uint64_t v41 = v44;
    sub_249976E64(7, v44);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v29);
    sub_24997ED24(v41, v52, &qword_2696DF410);
    sub_24999294C((uint64_t)v19, v43);
    __swift_destroy_boxed_opaque_existential_2Tm(v28);
    return sub_2499929B0((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for Slot);
  }
}

uint64_t sub_249991D54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v2 + *(int *)(a1 + 44), (uint64_t)v7, &qword_2696DF410);
  return sub_249882788((uint64_t)v7, a2, &qword_2696DF408);
}

uint64_t sub_249991E00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Slot.init(from:)(a1, a2);
}

uint64_t sub_249991E18(void *a1)
{
  return Slot.encode(to:)(a1);
}

uint64_t Slot.shape.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[5];
  if (v3)
  {
    if (v3 == 1)
    {
      sub_249902AD8();
    }
    else
    {
      sub_249991F04(*v1, (uint64_t)&v5);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1868);
      sub_249992A10();
    }
  }
  else
  {
    sub_249902B2C();
  }
  uint64_t result = sub_249AECB78();
  *a1 = result;
  return result;
}

__n128 sub_249991F04@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_249AEC618();
  sub_249AEC5D8();
  sub_249AEC608();
  sub_249AEC608();
  sub_249AEC608();
  sub_249AEC5F8();
  sub_249AEC5F8();
  sub_249AEC608();
  sub_249AEC608();
  sub_249AEC608();
  sub_249AEC608();
  sub_249AEC5F8();
  sub_249AEC608();
  sub_249AEC608();
  sub_249AEC5F8();
  sub_249AEC5F8();
  sub_249AEC5C8();
  switch(a1)
  {
    case 8:
      CGAffineTransformMakeScale(&t1, -1.0, -1.0);
      long long v32 = *(_OWORD *)&t1.c;
      long long v34 = *(_OWORD *)&t1.a;
      long long v31 = *(_OWORD *)&t1.tx;
      CGFloat v6 = 282.0;
      CGFloat v7 = 204.0;
      break;
    case 4:
      CGAffineTransformMakeScale(&t1, 1.0, -1.0);
      long long v32 = *(_OWORD *)&t1.c;
      long long v34 = *(_OWORD *)&t1.a;
      long long v31 = *(_OWORD *)&t1.tx;
      CGFloat v7 = 204.0;
      CGFloat v6 = 0.0;
      break;
    case 2:
      CGAffineTransformMakeScale(&t1, -1.0, 1.0);
      long long v32 = *(_OWORD *)&t1.c;
      long long v34 = *(_OWORD *)&t1.a;
      long long v31 = *(_OWORD *)&t1.tx;
      CGFloat v6 = 282.0;
      CGFloat v7 = 0.0;
      break;
    default:
      long long v8 = xmmword_249AFEB70;
      long long v10 = xmmword_249AFEB80;
      long long v9 = 0uLL;
      long long v11 = xmmword_249AFEB80;
      long long v12 = xmmword_249AFEB70;
      long long v13 = 0uLL;
      goto LABEL_9;
  }
  CGAffineTransformMakeTranslation(&t1, v6, v7);
  long long v9 = v31;
  long long v8 = v32;
  long long v10 = v34;
  long long v11 = *(_OWORD *)&t1.a;
  long long v12 = *(_OWORD *)&t1.c;
  long long v13 = *(_OWORD *)&t1.tx;
LABEL_9:
  *(_OWORD *)&t1.a = v10;
  *(_OWORD *)&t1.c = v8;
  *(_OWORD *)&t1.CGFloat tx = v9;
  *(_OWORD *)&t2.a = v11;
  *(_OWORD *)&t2.c = v12;
  *(_OWORD *)&t2.CGFloat tx = v13;
  CGAffineTransformConcat(&v36, &t1, &t2);
  __n128 v33 = *(__n128 *)&v36.c;
  long long v35 = *(_OWORD *)&v36.a;
  CGFloat tx = v36.tx;
  CGFloat ty = v36.ty;
  uint64_t v16 = v39;
  uint64_t v17 = v40;
  uint64_t v18 = v41;
  uint64_t v19 = v42;
  CGFloat v20 = v3[6];
  CGFloat v21 = v3[7];
  CGFloat v22 = v3[8];
  CGFloat v23 = v3[9];
  unsigned __int8 v24 = v43;
  sub_249950064(v39, v40, v41, v42, v43);
  v44.origin.x = v20;
  v44.origin.y = v21;
  v44.size.width = v22;
  v44.size.CGFloat height = v23;
  CGFloat v25 = CGRectGetWidth(v44) / 282.0;
  sub_249AECCD8();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_2499500E8(v16, v17, v18, v19, v24);
  *(void *)a2 = v16;
  *(void *)(a2 + 8) = v17;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v19;
  *(unsigned char *)(a2 + 32) = v24;
  *(_OWORD *)(a2 + 40) = v35;
  __n128 result = v33;
  *(__n128 *)(a2 + 56) = v33;
  *(CGFloat *)(a2 + 72) = tx;
  *(CGFloat *)(a2 + 80) = ty;
  *(CGFloat *)(a2 + 88) = v25;
  *(CGFloat *)(a2 + 96) = v25;
  *(void *)(a2 + 104) = v27;
  *(void *)(a2 + 112) = v29;
  return result;
}

BOOL Slot.isChild.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for Slot() + 40) + 8) != 0;
}

uint64_t EdgeInsets.encode(to:)(void *a1, double a2, double a3, double a4, double a5)
{
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE448();
  double v13 = a2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
  sub_24988E51C();
  sub_249AEDF78();
  if (!v5)
  {
    double v13 = a3;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_249AEDF78();
    double v13 = a4;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_249AEDF78();
    double v13 = a5;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
    sub_249AEDF78();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v11);
}

double EdgeInsets.init(from:)(void *a1)
{
  return sub_249992A6C(a1);
}

void sub_249992578(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_249992A6C(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
}

uint64_t sub_2499925A8(void *a1)
{
  return EdgeInsets.encode(to:)(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_2499925C8()
{
  return sub_249AED3C8();
}

uint64_t sub_249992658()
{
  return sub_249AED368();
}

unint64_t sub_2499926D8()
{
  unint64_t result = qword_2696E17E0;
  if (!qword_2696E17E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E17E0);
  }
  return result;
}

unint64_t sub_24999272C()
{
  unint64_t result = qword_2696E17E8;
  if (!qword_2696E17E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E17E8);
  }
  return result;
}

unint64_t sub_249992780()
{
  unint64_t result = qword_2696E1800;
  if (!qword_2696E1800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1800);
  }
  return result;
}

unint64_t sub_2499927D4()
{
  unint64_t result = qword_2696E1808;
  if (!qword_2696E1808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1808);
  }
  return result;
}

uint64_t sub_249992828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24999283C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (a6 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_249992850()
{
  unint64_t result = qword_2696E1840;
  if (!qword_2696E1840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1840);
  }
  return result;
}

unint64_t sub_2499928A4()
{
  unint64_t result = qword_2696E1848;
  if (!qword_2696E1848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1848);
  }
  return result;
}

unint64_t sub_2499928F8()
{
  unint64_t result = qword_2696E1858;
  if (!qword_2696E1858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1858);
  }
  return result;
}

uint64_t sub_24999294C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Slot();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499929B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_249992A10()
{
  unint64_t result = qword_2696E1870;
  if (!qword_2696E1870)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1868);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1870);
  }
  return result;
}

double sub_249992A6C(void *a1)
{
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE408();
  if (!v1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_24988E570();
    sub_249AEDF58();
    double v2 = v5;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_249AEDF58();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_249AEDF58();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v6, v7);
    sub_249AEDF58();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v6);
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return v2;
}

unint64_t sub_249992C38()
{
  unint64_t result = qword_2696E1878;
  if (!qword_2696E1878)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF408);
    sub_249996AD4(&qword_2696DF388, MEMORY[0x263F07508]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1878);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Slot(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    unint64_t v7 = a2[5];
    long long v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    if (v7 >= 2)
    {
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    }
    long long v10 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 64) = v10;
    long long v11 = *((_OWORD *)a2 + 6);
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 96) = v11;
    *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
    uint64_t v12 = v6[9];
    double v13 = (char *)(a1 + v12);
    uint64_t v14 = (char *)a2 + v12;
    *(void *)(a1 + 128) = a2[16];
    uint64_t v15 = type metadata accessor for Instrument();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
    swift_bridgeObjectRetain();
    if (v17(v14, 1, v15))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
      memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      uint64_t v19 = sub_249AEB808();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v13, v14, v19);
      uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
      *(void *)&v13[*(int *)(v20 + 52)] = *(void *)&v14[*(int *)(v20 + 52)];
      uint64_t v21 = *(int *)(v15 + 20);
      CGFloat v22 = (uint64_t *)&v13[v21];
      CGFloat v23 = (uint64_t *)&v14[v21];
      uint64_t v78 = v16;
      uint64_t v77 = v13;
      uint64_t v76 = v15;
      char v75 = v14;
      uint64_t v74 = v6;
      v108 = (void *)v23[8];
      uint64_t v109 = v23[7];
      unint64_t v106 = (void *)v23[10];
      uint64_t v107 = (void *)v23[9];
      uint64_t v104 = v23[12];
      unint64_t v105 = v23[11];
      uint64_t v102 = v23[14];
      uint64_t v103 = v23[13];
      uint64_t v100 = v23[16];
      uint64_t v101 = v23[15];
      uint64_t v98 = v23[18];
      uint64_t v99 = v23[17];
      v96 = (void *)v23[20];
      uint64_t v97 = v23[19];
      uint64_t v94 = v23[22];
      uint64_t v95 = v23[21];
      uint64_t v92 = v23[24];
      uint64_t v93 = v23[23];
      uint64_t v90 = v23[26];
      uint64_t v91 = v23[25];
      uint64_t v89 = (void *)v23[27];
      uint64_t v88 = (void *)v23[28];
      uint64_t v87 = v23[29];
      uint64_t v86 = v23[30];
      uint64_t v85 = v23[31];
      uint64_t v84 = v23[32];
      uint64_t v83 = v23[33];
      uint64_t v82 = v23[34];
      uint64_t v81 = v23[35];
      uint64_t v80 = v23[36];
      uint64_t v79 = v23[37];
      uint64_t v48 = v23[38];
      uint64_t v49 = v23[39];
      uint64_t v50 = v23[40];
      unint64_t v51 = v23[41];
      uint64_t v52 = v23[42];
      uint64_t v53 = v23[43];
      uint64_t v54 = v23[44];
      uint64_t v55 = v23[45];
      uint64_t v56 = v23[46];
      uint64_t v57 = v23[47];
      uint64_t v58 = v23[48];
      uint64_t v59 = v23[49];
      uint64_t v60 = v23[50];
      uint64_t v61 = v23[51];
      uint64_t v62 = v23[52];
      uint64_t v63 = v23[53];
      uint64_t v64 = v23[54];
      uint64_t v65 = v23[55];
      uint64_t v66 = v23[56];
      uint64_t v67 = v23[57];
      uint64_t v68 = v23[58];
      uint64_t v69 = v23[59];
      unint64_t v70 = v23[60];
      uint64_t v71 = v23[61];
      unint64_t v72 = v23[62];
      uint64_t v73 = v23[63];
      uint64_t v24 = *v23;
      uint64_t v25 = v23[1];
      uint64_t v26 = (void *)v23[2];
      uint64_t v27 = (void *)v23[3];
      uint64_t v28 = (void *)v23[4];
      uint64_t v29 = (void *)v23[5];
      uint64_t v30 = v23[6];
      sub_2498FB4B4(*v23, v25, v26, v27, v28, v29, v30, v109, v108, v107, v106, v105, v104, v103, v102, v101, v100, v99, v98,
        v97,
        v96,
        v95,
        v94,
        v93,
        v92,
        v91,
        v90,
        v89,
        v88,
        v87,
        v86,
        v85,
        v84,
        v83,
        v82,
        v81,
        v80,
        v79,
        v48,
        v49,
        v50,
        v51,
        v52,
        v53,
        v54,
        v55,
        v56,
        v57,
        v58,
        v59,
        v60,
        v61,
        v62,
        v63,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71,
        v72);
      *CGFloat v22 = v24;
      v22[1] = v25;
      v22[2] = (uint64_t)v26;
      v22[3] = (uint64_t)v27;
      v22[4] = (uint64_t)v28;
      v22[5] = (uint64_t)v29;
      v22[6] = v30;
      uint64_t v6 = v74;
      v22[7] = v109;
      v22[8] = (uint64_t)v108;
      v22[9] = (uint64_t)v107;
      v22[10] = (uint64_t)v106;
      v22[11] = v105;
      v22[12] = v104;
      v22[13] = v103;
      v22[14] = v102;
      v22[15] = v101;
      v22[16] = v100;
      v22[17] = v99;
      v22[18] = v98;
      v22[19] = v97;
      v22[20] = (uint64_t)v96;
      v22[21] = v95;
      v22[22] = v94;
      v22[23] = v93;
      v22[24] = v92;
      v22[25] = v91;
      v22[26] = v90;
      v22[27] = (uint64_t)v89;
      v22[28] = (uint64_t)v88;
      v22[29] = v87;
      v22[30] = v86;
      v22[31] = v85;
      v22[32] = v84;
      v22[33] = v83;
      v22[34] = v82;
      v22[35] = v81;
      v22[36] = v80;
      v22[37] = v79;
      v22[38] = v48;
      v22[39] = v49;
      v22[40] = v50;
      v22[41] = v51;
      v22[42] = v52;
      v22[43] = v53;
      v22[44] = v54;
      v22[45] = v55;
      v22[46] = v56;
      v22[47] = v57;
      v22[48] = v58;
      v22[49] = v59;
      v22[50] = v60;
      v22[51] = v61;
      v22[52] = v62;
      v22[53] = v63;
      v22[54] = v64;
      v22[55] = v65;
      v22[56] = v66;
      v22[57] = v67;
      v22[58] = v68;
      v22[59] = v69;
      v22[60] = v70;
      v22[61] = v71;
      v22[62] = v72;
      v22[63] = v73;
      uint64_t v31 = *(int *)(v76 + 24);
      long long v32 = &v77[v31];
      __n128 v33 = &v75[v31];
      uint64_t v34 = *((void *)v33 + 1);
      *(void *)long long v32 = *(void *)v33;
      *((void *)v32 + 1) = v34;
      *((void *)v32 + 2) = *((void *)v33 + 2);
      *((_WORD *)v32 + 12) = *((_WORD *)v33 + 12);
      uint64_t v35 = *((void *)v33 + 5);
      *((void *)v32 + 4) = *((void *)v33 + 4);
      *((void *)v32 + 5) = v35;
      CGAffineTransform v36 = *(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v36(v77, 0, 1, v76);
    }
    uint64_t v37 = v6[10];
    uint64_t v38 = v6[11];
    uint64_t v39 = (void *)(a1 + v37);
    uint64_t v40 = (uint64_t *)((char *)a2 + v37);
    uint64_t v41 = v40[1];
    *uint64_t v39 = *v40;
    v39[1] = v41;
    uint64_t v42 = a1 + v38;
    uint64_t v43 = (uint64_t)a2 + v38;
    uint64_t v44 = sub_249AEB808();
    uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16);
    swift_bridgeObjectRetain();
    v45(v42, v43, v44);
    uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
    *(void *)(v42 + *(int *)(v46 + 52)) = *(void *)(v43 + *(int *)(v46 + 52));
  }
  return a1;
}

uint64_t destroy for Slot(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for Instrument();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = sub_249AEB808();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = v4 + *(int *)(v5 + 20);
    long long v26 = *(_OWORD *)(v7 + 464);
    long long v27 = *(_OWORD *)(v7 + 480);
    long long v24 = *(_OWORD *)(v7 + 432);
    long long v25 = *(_OWORD *)(v7 + 448);
    long long v22 = *(_OWORD *)(v7 + 400);
    long long v23 = *(_OWORD *)(v7 + 416);
    long long v20 = *(_OWORD *)(v7 + 368);
    long long v21 = *(_OWORD *)(v7 + 384);
    long long v18 = *(_OWORD *)(v7 + 336);
    long long v19 = *(_OWORD *)(v7 + 352);
    long long v16 = *(_OWORD *)(v7 + 304);
    long long v17 = *(_OWORD *)(v7 + 320);
    long long v14 = *(_OWORD *)(v7 + 272);
    long long v15 = *(_OWORD *)(v7 + 288);
    long long v12 = *(_OWORD *)(v7 + 240);
    long long v13 = *(_OWORD *)(v7 + 256);
    sub_2498FCAAC(*(void *)v7, *(void *)(v7 + 8), *(void **)(v7 + 16), *(void **)(v7 + 24), *(void **)(v7 + 32), *(void **)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void **)(v7 + 64), *(void **)(v7 + 72), *(void **)(v7 + 80), *(void *)(v7 + 88), *(void *)(v7 + 96), *(void *)(v7 + 104), *(void *)(v7 + 112), *(void *)(v7 + 120), *(void *)(v7 + 128), *(void *)(v7 + 136), *(void *)(v7 + 144),
      *(void *)(v7 + 152),
      *(void **)(v7 + 160),
      *(void *)(v7 + 168),
      *(void *)(v7 + 176),
      *(void *)(v7 + 184),
      *(void *)(v7 + 192),
      *(void *)(v7 + 200),
      *(void *)(v7 + 208),
      *(void **)(v7 + 216),
      *(void **)(v7 + 224),
      *(void *)(v7 + 232),
      v12,
      *((uint64_t *)&v12 + 1),
      v13,
      *((uint64_t *)&v13 + 1),
      v14,
      *((uint64_t *)&v14 + 1),
      v15,
      *((uint64_t *)&v15 + 1),
      v16,
      *((uint64_t *)&v16 + 1),
      v17,
      *((unint64_t *)&v17 + 1),
      v18,
      *((uint64_t *)&v18 + 1),
      v19,
      SBYTE8(v19),
      v20,
      *((uint64_t *)&v20 + 1),
      v21,
      *((uint64_t *)&v21 + 1),
      v22,
      SBYTE8(v22),
      v23,
      *((uint64_t *)&v23 + 1),
      v24,
      *((uint64_t *)&v24 + 1),
      v25,
      SBYTE8(v25),
      v26,
      *((uint64_t *)&v26 + 1),
      v27,
      *((uint64_t *)&v27 + 1),
      *(void *)(v7 + 496));
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v8 = a1 + *(int *)(a2 + 44);
  uint64_t v9 = sub_249AEB808();
  long long v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

uint64_t initializeWithCopy for Slot(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = *(void *)(a2 + 40);
  long long v7 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  if (v6 >= 2)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  uint64_t v10 = a3[9];
  long long v11 = (char *)(a1 + v10);
  long long v12 = (char *)(a2 + v10);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  uint64_t v13 = type metadata accessor for Instrument();
  uint64_t v14 = *(void *)(v13 - 8);
  long long v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    uint64_t v17 = sub_249AEB808();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v11, v12, v17);
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)&v11[*(int *)(v18 + 52)] = *(void *)&v12[*(int *)(v18 + 52)];
    uint64_t v19 = *(int *)(v13 + 20);
    long long v20 = (uint64_t *)&v11[v19];
    long long v21 = (uint64_t *)&v12[v19];
    uint64_t v76 = v14;
    char v75 = a3;
    uint64_t v74 = v11;
    uint64_t v73 = v13;
    unint64_t v72 = v12;
    unint64_t v106 = (void *)v21[8];
    uint64_t v107 = v21[7];
    uint64_t v104 = (void *)v21[10];
    unint64_t v105 = (void *)v21[9];
    uint64_t v102 = v21[12];
    unint64_t v103 = v21[11];
    uint64_t v100 = v21[14];
    uint64_t v101 = v21[13];
    uint64_t v98 = v21[16];
    uint64_t v99 = v21[15];
    uint64_t v96 = v21[18];
    uint64_t v97 = v21[17];
    uint64_t v94 = (void *)v21[20];
    uint64_t v95 = v21[19];
    uint64_t v92 = v21[22];
    uint64_t v93 = v21[21];
    uint64_t v90 = v21[24];
    uint64_t v91 = v21[23];
    uint64_t v88 = v21[26];
    uint64_t v89 = v21[25];
    uint64_t v87 = (void *)v21[27];
    uint64_t v86 = (void *)v21[28];
    uint64_t v85 = v21[29];
    uint64_t v84 = v21[30];
    uint64_t v83 = v21[31];
    uint64_t v82 = v21[32];
    uint64_t v81 = v21[33];
    uint64_t v80 = v21[34];
    uint64_t v79 = v21[35];
    uint64_t v78 = v21[36];
    uint64_t v77 = v21[37];
    uint64_t v46 = v21[38];
    uint64_t v47 = v21[39];
    uint64_t v48 = v21[40];
    unint64_t v49 = v21[41];
    uint64_t v50 = v21[42];
    uint64_t v51 = v21[43];
    uint64_t v52 = v21[44];
    uint64_t v53 = v21[45];
    uint64_t v54 = v21[46];
    uint64_t v55 = v21[47];
    uint64_t v56 = v21[48];
    uint64_t v57 = v21[49];
    uint64_t v58 = v21[50];
    uint64_t v59 = v21[51];
    uint64_t v60 = v21[52];
    uint64_t v61 = v21[53];
    uint64_t v62 = v21[54];
    uint64_t v63 = v21[55];
    uint64_t v64 = v21[56];
    uint64_t v65 = v21[57];
    uint64_t v66 = v21[58];
    uint64_t v67 = v21[59];
    unint64_t v68 = v21[60];
    uint64_t v69 = v21[61];
    unint64_t v70 = v21[62];
    uint64_t v71 = v21[63];
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    long long v24 = (void *)v21[2];
    long long v25 = (void *)v21[3];
    long long v26 = (void *)v21[4];
    long long v27 = (void *)v21[5];
    uint64_t v28 = v21[6];
    sub_2498FB4B4(*v21, v23, v24, v25, v26, v27, v28, v107, v106, v105, v104, v103, v102, v101, v100, v99, v98, v97, v96,
      v95,
      v94,
      v93,
      v92,
      v91,
      v90,
      v89,
      v88,
      v87,
      v86,
      v85,
      v84,
      v83,
      v82,
      v81,
      v80,
      v79,
      v78,
      v77,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66,
      v67,
      v68,
      v69,
      v70);
    *long long v20 = v22;
    v20[1] = v23;
    v20[2] = (uint64_t)v24;
    v20[3] = (uint64_t)v25;
    a3 = v75;
    v20[4] = (uint64_t)v26;
    v20[5] = (uint64_t)v27;
    v20[6] = v28;
    v20[7] = v107;
    v20[8] = (uint64_t)v106;
    v20[9] = (uint64_t)v105;
    v20[10] = (uint64_t)v104;
    v20[11] = v103;
    v20[12] = v102;
    v20[13] = v101;
    v20[14] = v100;
    v20[15] = v99;
    v20[16] = v98;
    v20[17] = v97;
    v20[18] = v96;
    v20[19] = v95;
    v20[20] = (uint64_t)v94;
    v20[21] = v93;
    v20[22] = v92;
    v20[23] = v91;
    v20[24] = v90;
    v20[25] = v89;
    v20[26] = v88;
    v20[27] = (uint64_t)v87;
    v20[28] = (uint64_t)v86;
    v20[29] = v85;
    v20[30] = v84;
    v20[31] = v83;
    v20[32] = v82;
    v20[33] = v81;
    v20[34] = v80;
    v20[35] = v79;
    v20[36] = v78;
    v20[37] = v77;
    v20[38] = v46;
    v20[39] = v47;
    v20[40] = v48;
    v20[41] = v49;
    v20[42] = v50;
    v20[43] = v51;
    v20[44] = v52;
    v20[45] = v53;
    v20[46] = v54;
    v20[47] = v55;
    v20[48] = v56;
    v20[49] = v57;
    v20[50] = v58;
    v20[51] = v59;
    v20[52] = v60;
    v20[53] = v61;
    v20[54] = v62;
    v20[55] = v63;
    v20[56] = v64;
    v20[57] = v65;
    v20[58] = v66;
    v20[59] = v67;
    v20[60] = v68;
    v20[61] = v69;
    v20[62] = v70;
    v20[63] = v71;
    uint64_t v29 = *(int *)(v73 + 24);
    uint64_t v30 = &v74[v29];
    uint64_t v31 = &v72[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    *((void *)v30 + 2) = *((void *)v31 + 2);
    *((_WORD *)v30 + 12) = *((_WORD *)v31 + 12);
    uint64_t v33 = *((void *)v31 + 5);
    *((void *)v30 + 4) = *((void *)v31 + 4);
    *((void *)v30 + 5) = v33;
    uint64_t v34 = *(void (**)(char *, void, uint64_t, uint64_t))(v76 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34(v74, 0, 1, v73);
  }
  uint64_t v35 = a3[10];
  uint64_t v36 = a3[11];
  uint64_t v37 = (void *)(a1 + v35);
  uint64_t v38 = (void *)(a2 + v35);
  uint64_t v39 = v38[1];
  *uint64_t v37 = *v38;
  v37[1] = v39;
  uint64_t v40 = a1 + v36;
  uint64_t v41 = a2 + v36;
  uint64_t v42 = sub_249AEB808();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16);
  swift_bridgeObjectRetain();
  v43(v40, v41, v42);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v40 + *(int *)(v44 + 52)) = *(void *)(v41 + *(int *)(v44 + 52));
  return a1;
}

void *assignWithCopy for Slot(void *a1, void *a2, int *a3)
{
  unint64_t v5 = a2[5];
  if (a1[5] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_2498D60E8((uint64_t)a1, &qword_2696E1880);
      long long v9 = *((_OWORD *)a2 + 1);
      long long v8 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v9;
      *((_OWORD *)a1 + 2) = v8;
    }
  }
  else if (v5 >= 2)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    a1[4] = a2[4];
    a1[5] = a2[5];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)a2;
    long long v7 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v7;
    *(_OWORD *)a1 = v6;
  }
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[9];
  long long v11 = (char *)a1 + v10;
  long long v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Instrument();
  uint64_t v14 = *(void *)(v13 - 8);
  long long v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v16 = v11;
  int v17 = v15(v11, 1, v13);
  uint64_t v18 = v12;
  int v19 = v15(v12, 1, v13);
  if (!v17)
  {
    if (!v19)
    {
      uint64_t v46 = sub_249AEB808();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 24))(v16, v12, v46);
      uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
      *(void *)&v16[*(int *)(v47 + 52)] = *(void *)&v12[*(int *)(v47 + 52)];
      uint64_t v48 = v13;
      uint64_t v49 = *(int *)(v13 + 20);
      uint64_t v50 = &v16[v49];
      uint64_t v51 = (uint64_t *)&v12[v49];
      uint64_t v210 = v51[1];
      uint64_t v212 = *v51;
      v206 = (void *)v51[3];
      v208 = (void *)v51[2];
      v202 = (void *)v51[5];
      v204 = (void *)v51[4];
      uint64_t v198 = v51[7];
      uint64_t v200 = v51[6];
      v194 = (void *)v51[9];
      v196 = (void *)v51[8];
      unint64_t v190 = v51[11];
      v192 = (void *)v51[10];
      uint64_t v188 = v51[12];
      uint64_t v186 = v51[13];
      uint64_t v184 = v51[14];
      uint64_t v182 = v51[15];
      uint64_t v180 = v51[16];
      uint64_t v178 = v51[17];
      uint64_t v176 = v51[18];
      uint64_t v174 = v51[19];
      v172 = (void *)v51[20];
      uint64_t v170 = v51[21];
      uint64_t v168 = v51[22];
      uint64_t v166 = v51[23];
      uint64_t v164 = v51[24];
      uint64_t v162 = v51[25];
      uint64_t v160 = v51[26];
      v158 = (void *)v51[27];
      v156 = (void *)v51[28];
      uint64_t v154 = v51[29];
      uint64_t v152 = v51[30];
      uint64_t v150 = v51[31];
      uint64_t v148 = v51[32];
      uint64_t v146 = v51[33];
      uint64_t v144 = v51[34];
      uint64_t v142 = v51[35];
      uint64_t v140 = v51[36];
      uint64_t v139 = v51[37];
      uint64_t v107 = v51[38];
      uint64_t v53 = v51[39];
      uint64_t v52 = v51[40];
      unint64_t v54 = v51[41];
      uint64_t v109 = v51[42];
      uint64_t v111 = v51[43];
      uint64_t v113 = v51[44];
      uint64_t v55 = v51[46];
      uint64_t v115 = v51[45];
      v218 = v18;
      uint64_t v56 = v51[47];
      uint64_t v117 = v51[48];
      v216 = v16;
      uint64_t v57 = v51[49];
      uint64_t v119 = v51[50];
      uint64_t v58 = v51[52];
      uint64_t v121 = v51[51];
      uint64_t v214 = v48;
      uint64_t v123 = v51[53];
      uint64_t v125 = v51[54];
      uint64_t v127 = v51[55];
      uint64_t v129 = v51[56];
      uint64_t v131 = v51[57];
      uint64_t v133 = v51[58];
      uint64_t v134 = v51[59];
      unint64_t v135 = v51[60];
      uint64_t v136 = v51[61];
      unint64_t v137 = v51[62];
      uint64_t v138 = v51[63];
      sub_2498FB4B4(*v51, v210, v208, v206, v204, v202, v200, v198, v196, v194, v192, v190, v188, v186, v184, v182, v180, v178, v176,
        v174,
        v172,
        v170,
        v168,
        v166,
        v164,
        v162,
        v160,
        v158,
        v156,
        v154,
        v152,
        v150,
        v148,
        v146,
        v144,
        v142,
        v140,
        v139,
        v107,
        v53,
        v52,
        v54,
        v109,
        v111,
        v113,
        v115,
        v55,
        v56,
        v117,
        v57,
        v119,
        v121,
        v58,
        v123,
        v125,
        v127,
        v129,
        v131,
        v133,
        v134,
        v135,
        v136,
        v137);
      uint64_t v59 = *(void *)v50;
      uint64_t v60 = *((void *)v50 + 1);
      *(void *)uint64_t v50 = v212;
      *((void *)v50 + 1) = v210;
      uint64_t v61 = (void *)*((void *)v50 + 2);
      uint64_t v62 = (void *)*((void *)v50 + 3);
      *((void *)v50 + 2) = v208;
      *((void *)v50 + 3) = v206;
      uint64_t v63 = (void *)*((void *)v50 + 4);
      uint64_t v64 = (void *)*((void *)v50 + 5);
      *((void *)v50 + 4) = v204;
      *((void *)v50 + 5) = v202;
      uint64_t v65 = *((void *)v50 + 6);
      uint64_t v66 = *((void *)v50 + 7);
      *((void *)v50 + 6) = v200;
      *((void *)v50 + 7) = v198;
      long long v67 = *((_OWORD *)v50 + 4);
      long long v68 = *((_OWORD *)v50 + 5);
      *((void *)v50 + 8) = v196;
      *((void *)v50 + 9) = v194;
      *((void *)v50 + 10) = v192;
      *((void *)v50 + 11) = v190;
      long long v69 = *((_OWORD *)v50 + 6);
      long long v70 = *((_OWORD *)v50 + 7);
      *((void *)v50 + 12) = v188;
      *((void *)v50 + 13) = v186;
      *((void *)v50 + 14) = v184;
      *((void *)v50 + 15) = v182;
      long long v71 = *((_OWORD *)v50 + 8);
      long long v72 = *((_OWORD *)v50 + 9);
      *((void *)v50 + 16) = v180;
      *((void *)v50 + 17) = v178;
      *((void *)v50 + 18) = v176;
      *((void *)v50 + 19) = v174;
      long long v73 = *((_OWORD *)v50 + 10);
      long long v74 = *((_OWORD *)v50 + 11);
      *((void *)v50 + 20) = v172;
      *((void *)v50 + 21) = v170;
      *((void *)v50 + 22) = v168;
      *((void *)v50 + 23) = v166;
      long long v75 = *((_OWORD *)v50 + 12);
      long long v76 = *((_OWORD *)v50 + 13);
      *((void *)v50 + 24) = v164;
      *((void *)v50 + 25) = v162;
      *((void *)v50 + 26) = v160;
      *((void *)v50 + 27) = v158;
      long long v77 = *((_OWORD *)v50 + 14);
      long long v78 = *((_OWORD *)v50 + 15);
      *((void *)v50 + 28) = v156;
      *((void *)v50 + 29) = v154;
      *((void *)v50 + 30) = v152;
      *((void *)v50 + 31) = v150;
      long long v79 = *((_OWORD *)v50 + 16);
      long long v80 = *((_OWORD *)v50 + 17);
      *((void *)v50 + 32) = v148;
      *((void *)v50 + 33) = v146;
      *((void *)v50 + 34) = v144;
      *((void *)v50 + 35) = v142;
      long long v81 = *((_OWORD *)v50 + 18);
      long long v82 = *((_OWORD *)v50 + 19);
      *((void *)v50 + 36) = v140;
      *((void *)v50 + 37) = v139;
      *((void *)v50 + 38) = v107;
      *((void *)v50 + 39) = v53;
      long long v83 = *((_OWORD *)v50 + 20);
      long long v84 = *((_OWORD *)v50 + 21);
      *((void *)v50 + 40) = v52;
      *((void *)v50 + 41) = v54;
      *((void *)v50 + 42) = v109;
      *((void *)v50 + 43) = v111;
      long long v85 = *((_OWORD *)v50 + 22);
      long long v86 = *((_OWORD *)v50 + 23);
      *((void *)v50 + 44) = v113;
      *((void *)v50 + 45) = v115;
      *((void *)v50 + 46) = v55;
      long long v87 = *((_OWORD *)v50 + 24);
      long long v88 = *((_OWORD *)v50 + 25);
      *((void *)v50 + 47) = v56;
      *((void *)v50 + 48) = v117;
      *((void *)v50 + 49) = v57;
      *((void *)v50 + 50) = v119;
      long long v89 = *((_OWORD *)v50 + 26);
      long long v90 = *((_OWORD *)v50 + 27);
      *((void *)v50 + 51) = v121;
      *((void *)v50 + 52) = v58;
      *((void *)v50 + 53) = v123;
      *((void *)v50 + 54) = v125;
      *((void *)v50 + 55) = v127;
      long long v91 = *((_OWORD *)v50 + 28);
      long long v92 = *((_OWORD *)v50 + 29);
      *((void *)v50 + 56) = v129;
      *((void *)v50 + 57) = v131;
      *((void *)v50 + 58) = v133;
      *((void *)v50 + 59) = v134;
      long long v93 = *((_OWORD *)v50 + 30);
      *((void *)v50 + 60) = v135;
      *((void *)v50 + 61) = v136;
      unint64_t v94 = *((void *)v50 + 62);
      *((void *)v50 + 62) = v137;
      *((void *)v50 + 63) = v138;
      sub_2498FCAAC(v59, v60, v61, v62, v63, v64, v65, v66, (void *)v67, *((void **)&v67 + 1), (void *)v68, *((unint64_t *)&v68 + 1), v69, *((uint64_t *)&v69 + 1), v70, *((uint64_t *)&v70 + 1), v71, *((uint64_t *)&v71 + 1), v72,
        *((uint64_t *)&v72 + 1),
        (void *)v73,
        *((uint64_t *)&v73 + 1),
        v74,
        *((uint64_t *)&v74 + 1),
        v75,
        *((uint64_t *)&v75 + 1),
        v76,
        *((void **)&v76 + 1),
        (void *)v77,
        *((uint64_t *)&v77 + 1),
        v78,
        *((uint64_t *)&v78 + 1),
        v79,
        *((uint64_t *)&v79 + 1),
        v80,
        *((uint64_t *)&v80 + 1),
        v81,
        *((uint64_t *)&v81 + 1),
        v82,
        *((uint64_t *)&v82 + 1),
        v83,
        *((unint64_t *)&v83 + 1),
        v84,
        *((uint64_t *)&v84 + 1),
        v85,
        SBYTE8(v85),
        v86,
        *((uint64_t *)&v86 + 1),
        v87,
        *((uint64_t *)&v87 + 1),
        v88,
        SBYTE8(v88),
        v89,
        *((uint64_t *)&v89 + 1),
        v90,
        *((uint64_t *)&v90 + 1),
        v91,
        SBYTE8(v91),
        v92,
        *((uint64_t *)&v92 + 1),
        v93,
        *((uint64_t *)&v93 + 1),
        v94);
      uint64_t v95 = *(int *)(v214 + 24);
      uint64_t v96 = &v216[v95];
      uint64_t v97 = &v218[v95];
      *(void *)&v216[v95] = *(void *)&v218[v95];
      swift_retain();
      swift_release();
      *((void *)v96 + 1) = *((void *)v97 + 1);
      *((void *)v96 + 2) = *((void *)v97 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v96[24] = v97[24];
      v96[25] = v97[25];
      *((void *)v96 + 4) = *((void *)v97 + 4);
      *((void *)v96 + 5) = *((void *)v97 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_2499929B0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for Instrument);
    goto LABEL_13;
  }
  if (v19)
  {
LABEL_13:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    memcpy(v16, v12, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v20 = sub_249AEB808();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v16, v12, v20);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  v215 = v16;
  v217 = v12;
  *(void *)&v16[*(int *)(v21 + 52)] = *(void *)&v12[*(int *)(v21 + 52)];
  uint64_t v213 = v13;
  uint64_t v22 = *(int *)(v13 + 20);
  uint64_t v23 = (uint64_t *)&v16[v22];
  long long v24 = (uint64_t *)&v12[v22];
  uint64_t v149 = v14;
  v209 = (void *)v24[8];
  uint64_t v211 = v24[7];
  v205 = (void *)v24[10];
  v207 = (void *)v24[9];
  uint64_t v201 = v24[12];
  unint64_t v203 = v24[11];
  uint64_t v197 = v24[14];
  uint64_t v199 = v24[13];
  uint64_t v193 = v24[16];
  uint64_t v195 = v24[15];
  uint64_t v189 = v24[18];
  uint64_t v191 = v24[17];
  uint64_t v187 = v24[19];
  v185 = (void *)v24[20];
  uint64_t v183 = v24[21];
  uint64_t v181 = v24[22];
  uint64_t v179 = v24[23];
  uint64_t v177 = v24[24];
  uint64_t v175 = v24[25];
  uint64_t v173 = v24[26];
  v171 = (void *)v24[27];
  v169 = (void *)v24[28];
  uint64_t v167 = v24[29];
  uint64_t v165 = v24[30];
  uint64_t v163 = v24[31];
  uint64_t v161 = v24[32];
  uint64_t v159 = v24[33];
  uint64_t v157 = v24[34];
  uint64_t v155 = v24[35];
  uint64_t v153 = v24[36];
  uint64_t v151 = v24[37];
  uint64_t v98 = v24[38];
  uint64_t v99 = v24[39];
  uint64_t v100 = v24[40];
  unint64_t v101 = v24[41];
  uint64_t v102 = v24[42];
  uint64_t v103 = v24[43];
  uint64_t v104 = v24[44];
  uint64_t v105 = v24[45];
  uint64_t v106 = v24[46];
  uint64_t v108 = v24[47];
  uint64_t v110 = v24[48];
  uint64_t v112 = v24[49];
  uint64_t v114 = v24[50];
  uint64_t v116 = v24[51];
  uint64_t v118 = v24[52];
  uint64_t v120 = v24[53];
  uint64_t v122 = v24[54];
  uint64_t v124 = v24[55];
  uint64_t v126 = v24[56];
  uint64_t v128 = v24[57];
  uint64_t v130 = v24[58];
  uint64_t v132 = v24[59];
  unint64_t v141 = v24[60];
  uint64_t v143 = v24[61];
  unint64_t v145 = v24[62];
  uint64_t v147 = v24[63];
  uint64_t v25 = *v24;
  uint64_t v26 = v24[1];
  long long v27 = (void *)v24[2];
  uint64_t v28 = (void *)v24[3];
  uint64_t v29 = (void *)v24[4];
  uint64_t v30 = (void *)v24[5];
  uint64_t v31 = v24[6];
  sub_2498FB4B4(*v24, v26, v27, v28, v29, v30, v31, v211, v209, v207, v205, v203, v201, v199, v197, v195, v193, v191, v189,
    v187,
    v185,
    v183,
    v181,
    v179,
    v177,
    v175,
    v173,
    v171,
    v169,
    v167,
    v165,
    v163,
    v161,
    v159,
    v157,
    v155,
    v153,
    v151,
    v98,
    v99,
    v100,
    v101,
    v102,
    v103,
    v104,
    v105,
    v106,
    v108,
    *((_OWORD *)v24 + 24),
    v112,
    v114,
    v116,
    v118,
    v120,
    v122,
    v124,
    v126,
    v128,
    v130,
    v132,
    v141,
    v143,
    v145);
  *uint64_t v23 = v25;
  v23[1] = v26;
  v23[2] = (uint64_t)v27;
  v23[3] = (uint64_t)v28;
  v23[4] = (uint64_t)v29;
  v23[5] = (uint64_t)v30;
  v23[6] = v31;
  v23[7] = v211;
  v23[8] = (uint64_t)v209;
  v23[9] = (uint64_t)v207;
  v23[10] = (uint64_t)v205;
  v23[11] = v203;
  v23[12] = v201;
  v23[13] = v199;
  v23[14] = v197;
  v23[15] = v195;
  v23[16] = v193;
  v23[17] = v191;
  v23[18] = v189;
  v23[19] = v187;
  v23[20] = (uint64_t)v185;
  v23[21] = v183;
  v23[22] = v181;
  v23[23] = v179;
  v23[24] = v177;
  v23[25] = v175;
  v23[26] = v173;
  v23[27] = (uint64_t)v171;
  v23[28] = (uint64_t)v169;
  v23[29] = v167;
  v23[30] = v165;
  v23[31] = v163;
  v23[32] = v161;
  v23[33] = v159;
  v23[34] = v157;
  v23[35] = v155;
  v23[36] = v153;
  v23[37] = v151;
  v23[38] = v98;
  v23[39] = v99;
  v23[40] = v100;
  v23[41] = v101;
  v23[42] = v102;
  v23[43] = v103;
  v23[44] = v104;
  v23[45] = v105;
  v23[46] = v106;
  v23[47] = v108;
  v23[48] = v110;
  v23[49] = v112;
  v23[50] = v114;
  v23[51] = v116;
  v23[52] = v118;
  v23[53] = v120;
  v23[54] = v122;
  v23[55] = v124;
  v23[56] = v126;
  v23[57] = v128;
  v23[58] = v130;
  v23[59] = v132;
  v23[60] = v141;
  v23[61] = v143;
  v23[62] = v145;
  v23[63] = v147;
  uint64_t v32 = *(int *)(v213 + 24);
  uint64_t v33 = &v215[v32];
  uint64_t v34 = &v217[v32];
  *(void *)uint64_t v33 = *(void *)v34;
  *((void *)v33 + 1) = *((void *)v34 + 1);
  *((void *)v33 + 2) = *((void *)v34 + 2);
  v33[24] = v34[24];
  v33[25] = v34[25];
  *((void *)v33 + 4) = *((void *)v34 + 4);
  *((void *)v33 + 5) = *((void *)v34 + 5);
  uint64_t v35 = *(void (**)(char *, void, uint64_t, uint64_t))(v149 + 56);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35(v215, 0, 1, v213);
LABEL_14:
  uint64_t v37 = a3[10];
  uint64_t v38 = (void *)((char *)a1 + v37);
  uint64_t v39 = (void *)((char *)a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[11];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = sub_249AEB808();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 24))(v41, v42, v43);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)&v41[*(int *)(v44 + 52)] = *(void *)&v42[*(int *)(v44 + 52)];
  return a1;
}

uint64_t initializeWithTake for Slot(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  uint64_t v9 = a3[9];
  uint64_t v10 = (char *)(a1 + v9);
  long long v11 = (char *)(a2 + v9);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  uint64_t v12 = type metadata accessor for Instrument();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = sub_249AEB808();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v10, v11, v15);
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)&v10[*(int *)(v16 + 52)] = *(void *)&v11[*(int *)(v16 + 52)];
    memcpy(&v10[*(int *)(v12 + 20)], &v11[*(int *)(v12 + 20)], 0x200uLL);
    uint64_t v17 = *(int *)(v12 + 24);
    uint64_t v18 = &v10[v17];
    int v19 = &v11[v17];
    long long v20 = *((_OWORD *)v19 + 1);
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
    *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  uint64_t v21 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v22 + *(int *)(v25 + 52)) = *(void *)(v23 + *(int *)(v25 + 52));
  return a1;
}

uint64_t assignWithTake for Slot(uint64_t a1, uint64_t a2, int *a3)
{
  if (*(void *)(a1 + 40) < 2uLL) {
    goto LABEL_4;
  }
  unint64_t v6 = *(void *)(a2 + 40);
  if (v6 < 2)
  {
    sub_2498D60E8(a1, &qword_2696E1880);
LABEL_4:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  long long v8 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v8;
  long long v9 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v9;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[9];
  long long v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Instrument();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v36 = sub_249AEB808();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v11, v12, v36);
      uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
      *(void *)&v11[*(int *)(v37 + 52)] = *(void *)&v12[*(int *)(v37 + 52)];
      uint64_t v38 = *(int *)(v13 + 20);
      uint64_t v39 = &v11[v38];
      uint64_t v40 = &v12[v38];
      uint64_t v41 = *(void *)v39;
      uint64_t v42 = *((void *)v39 + 1);
      uint64_t v43 = (void *)*((void *)v39 + 2);
      uint64_t v44 = (void *)*((void *)v39 + 3);
      uint64_t v45 = (void *)*((void *)v39 + 4);
      uint64_t v46 = (void *)*((void *)v39 + 5);
      uint64_t v47 = *((void *)v39 + 6);
      uint64_t v48 = *((void *)v39 + 7);
      long long v49 = *((_OWORD *)v39 + 4);
      long long v50 = *((_OWORD *)v39 + 5);
      long long v51 = *((_OWORD *)v39 + 6);
      long long v52 = *((_OWORD *)v39 + 7);
      long long v53 = *((_OWORD *)v39 + 8);
      long long v54 = *((_OWORD *)v39 + 9);
      long long v55 = *((_OWORD *)v39 + 10);
      long long v56 = *((_OWORD *)v39 + 11);
      long long v57 = *((_OWORD *)v39 + 12);
      long long v58 = *((_OWORD *)v39 + 13);
      long long v59 = *((_OWORD *)v39 + 14);
      long long v60 = *((_OWORD *)v39 + 15);
      long long v61 = *((_OWORD *)v39 + 16);
      long long v62 = *((_OWORD *)v39 + 17);
      long long v63 = *((_OWORD *)v39 + 18);
      long long v64 = *((_OWORD *)v39 + 19);
      long long v65 = *((_OWORD *)v39 + 20);
      long long v66 = *((_OWORD *)v39 + 21);
      long long v67 = *((_OWORD *)v39 + 22);
      long long v68 = *((_OWORD *)v39 + 23);
      long long v69 = *((_OWORD *)v39 + 24);
      long long v70 = *((_OWORD *)v39 + 25);
      long long v71 = *((_OWORD *)v39 + 26);
      long long v72 = *((_OWORD *)v39 + 27);
      long long v73 = *((_OWORD *)v39 + 28);
      long long v74 = *((_OWORD *)v39 + 29);
      long long v75 = *((_OWORD *)v39 + 30);
      unint64_t v76 = *((void *)v39 + 62);
      long long v77 = *((_OWORD *)v40 + 1);
      *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
      *((_OWORD *)v39 + 1) = v77;
      long long v78 = *((_OWORD *)v40 + 3);
      *((_OWORD *)v39 + 2) = *((_OWORD *)v40 + 2);
      *((_OWORD *)v39 + 3) = v78;
      long long v79 = *((_OWORD *)v40 + 5);
      *((_OWORD *)v39 + 4) = *((_OWORD *)v40 + 4);
      *((_OWORD *)v39 + 5) = v79;
      long long v80 = *((_OWORD *)v40 + 7);
      *((_OWORD *)v39 + 6) = *((_OWORD *)v40 + 6);
      *((_OWORD *)v39 + 7) = v80;
      long long v81 = *((_OWORD *)v40 + 9);
      *((_OWORD *)v39 + 8) = *((_OWORD *)v40 + 8);
      *((_OWORD *)v39 + 9) = v81;
      long long v82 = *((_OWORD *)v40 + 11);
      *((_OWORD *)v39 + 10) = *((_OWORD *)v40 + 10);
      *((_OWORD *)v39 + 11) = v82;
      long long v83 = *((_OWORD *)v40 + 13);
      *((_OWORD *)v39 + 12) = *((_OWORD *)v40 + 12);
      *((_OWORD *)v39 + 13) = v83;
      long long v84 = *((_OWORD *)v40 + 15);
      *((_OWORD *)v39 + 14) = *((_OWORD *)v40 + 14);
      *((_OWORD *)v39 + 15) = v84;
      long long v85 = *((_OWORD *)v40 + 17);
      *((_OWORD *)v39 + 16) = *((_OWORD *)v40 + 16);
      *((_OWORD *)v39 + 17) = v85;
      long long v86 = *((_OWORD *)v40 + 19);
      *((_OWORD *)v39 + 18) = *((_OWORD *)v40 + 18);
      *((_OWORD *)v39 + 19) = v86;
      long long v87 = *((_OWORD *)v40 + 21);
      *((_OWORD *)v39 + 20) = *((_OWORD *)v40 + 20);
      *((_OWORD *)v39 + 21) = v87;
      long long v88 = *((_OWORD *)v40 + 23);
      *((_OWORD *)v39 + 22) = *((_OWORD *)v40 + 22);
      *((_OWORD *)v39 + 23) = v88;
      long long v89 = *((_OWORD *)v40 + 25);
      *((_OWORD *)v39 + 24) = *((_OWORD *)v40 + 24);
      *((_OWORD *)v39 + 25) = v89;
      long long v90 = *((_OWORD *)v40 + 27);
      *((_OWORD *)v39 + 26) = *((_OWORD *)v40 + 26);
      *((_OWORD *)v39 + 27) = v90;
      long long v91 = *((_OWORD *)v40 + 29);
      *((_OWORD *)v39 + 28) = *((_OWORD *)v40 + 28);
      *((_OWORD *)v39 + 29) = v91;
      long long v92 = *((_OWORD *)v40 + 31);
      *((_OWORD *)v39 + 30) = *((_OWORD *)v40 + 30);
      *((_OWORD *)v39 + 31) = v92;
      sub_2498FCAAC(v41, v42, v43, v44, v45, v46, v47, v48, (void *)v49, *((void **)&v49 + 1), (void *)v50, *((unint64_t *)&v50 + 1), v51, *((uint64_t *)&v51 + 1), v52, *((uint64_t *)&v52 + 1), v53, *((uint64_t *)&v53 + 1), v54,
        *((uint64_t *)&v54 + 1),
        (void *)v55,
        *((uint64_t *)&v55 + 1),
        v56,
        *((uint64_t *)&v56 + 1),
        v57,
        *((uint64_t *)&v57 + 1),
        v58,
        *((void **)&v58 + 1),
        (void *)v59,
        *((uint64_t *)&v59 + 1),
        v60,
        *((uint64_t *)&v60 + 1),
        v61,
        *((uint64_t *)&v61 + 1),
        v62,
        *((uint64_t *)&v62 + 1),
        v63,
        *((uint64_t *)&v63 + 1),
        v64,
        *((uint64_t *)&v64 + 1),
        v65,
        *((unint64_t *)&v65 + 1),
        v66,
        *((uint64_t *)&v66 + 1),
        v67,
        SBYTE8(v67),
        v68,
        *((uint64_t *)&v68 + 1),
        v69,
        *((uint64_t *)&v69 + 1),
        v70,
        SBYTE8(v70),
        v71,
        *((uint64_t *)&v71 + 1),
        v72,
        *((uint64_t *)&v72 + 1),
        v73,
        SBYTE8(v73),
        v74,
        *((uint64_t *)&v74 + 1),
        v75,
        *((uint64_t *)&v75 + 1),
        v76);
      uint64_t v93 = *(int *)(v13 + 24);
      unint64_t v94 = &v11[v93];
      uint64_t v95 = &v12[v93];
      *(void *)unint64_t v94 = *(void *)v95;
      swift_release();
      uint64_t v96 = *((void *)v95 + 2);
      *((void *)v94 + 1) = *((void *)v95 + 1);
      *((void *)v94 + 2) = v96;
      swift_bridgeObjectRelease();
      v94[24] = v95[24];
      v94[25] = v95[25];
      uint64_t v97 = *((void *)v95 + 5);
      *((void *)v94 + 4) = *((void *)v95 + 4);
      *((void *)v94 + 5) = v97;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_2499929B0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Instrument);
    goto LABEL_11;
  }
  if (v17)
  {
LABEL_11:
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    memcpy(v11, v12, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_12;
  }
  uint64_t v18 = sub_249AEB808();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v11, v12, v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)&v11[*(int *)(v19 + 52)] = *(void *)&v12[*(int *)(v19 + 52)];
  memcpy(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], 0x200uLL);
  uint64_t v20 = *(int *)(v13 + 24);
  uint64_t v21 = &v11[v20];
  uint64_t v22 = &v12[v20];
  long long v23 = *((_OWORD *)v22 + 1);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *((_OWORD *)v21 + 1) = v23;
  *((_OWORD *)v21 + 2) = *((_OWORD *)v22 + 2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_12:
  uint64_t v25 = a3[10];
  uint64_t v26 = (void *)(a1 + v25);
  long long v27 = (uint64_t *)(a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *uint64_t v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[11];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v31 + *(int *)(v34 + 52)) = *(void *)(v32 + *(int *)(v34 + 52));
  return a1;
}

uint64_t getEnumTagSinglePayload for Slot(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499953E0);
}

uint64_t sub_2499953E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 128);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 44);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for Slot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_249995528);
}

uint64_t sub_249995528(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 128) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 44);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_24999565C()
{
  sub_24999575C();
  if (v0 <= 0x3F)
  {
    sub_2499957B4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24999575C()
{
  if (!qword_2696E1898)
  {
    type metadata accessor for Instrument();
    unint64_t v0 = sub_249AED8D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E1898);
    }
  }
}

void sub_2499957B4()
{
  if (!qword_2696E18A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF408);
    sub_249995878();
    sub_2499958E4(&qword_2696E1220);
    sub_2499958E4(&qword_2696DF420);
    unint64_t v0 = type metadata accessor for SkipEncode();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E18A0);
    }
  }
}

unint64_t sub_249995878()
{
  unint64_t result = qword_2696E18A8;
  if (!qword_2696E18A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF408);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18A8);
  }
  return result;
}

uint64_t sub_2499958E4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF408);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F07508];
    sub_249996AD4(&qword_2696DF428, MEMORY[0x263F07508]);
    sub_249996AD4(&qword_2696DF430, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t destroy for Slot.Style(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 40);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Slot.Style(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  else
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for Slot.Style(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 5);
  if (*(void *)(a1 + 40) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(_OWORD *)(a1 + 16) = a2[1];
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[2];
    *(_OWORD *)(a1 + 16) = a2[1];
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)a1 = v5;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Slot.Style(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 40);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Slot.Style(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Slot.Style(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_249995C44(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_249995C5C(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 40) = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Slot.Style()
{
  return &type metadata for Slot.Style;
}

unsigned char *storeEnumTagSinglePayload for Slot.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *double result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249995D6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Slot.CodingKeys()
{
  return &type metadata for Slot.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Slot.Style.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249995E70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Slot.Style.CodingKeys()
{
  return &type metadata for Slot.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for Slot.Style.CircularCodingKeys()
{
  return &type metadata for Slot.Style.CircularCodingKeys;
}

ValueMetadata *type metadata accessor for Slot.Style.RectangularCodingKeys()
{
  return &type metadata for Slot.Style.RectangularCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Slot.Style.CornerCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249995F94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Slot.Style.CornerCodingKeys()
{
  return &type metadata for Slot.Style.CornerCodingKeys;
}

unint64_t sub_249995FD0()
{
  unint64_t result = qword_2696E18B0;
  if (!qword_2696E18B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18B0);
  }
  return result;
}

unint64_t sub_249996028()
{
  unint64_t result = qword_2696E18B8;
  if (!qword_2696E18B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18B8);
  }
  return result;
}

unint64_t sub_249996080()
{
  unint64_t result = qword_2696E18C0;
  if (!qword_2696E18C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18C0);
  }
  return result;
}

unint64_t sub_2499960D8()
{
  unint64_t result = qword_2696E18C8;
  if (!qword_2696E18C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18C8);
  }
  return result;
}

unint64_t sub_249996130()
{
  unint64_t result = qword_2696E18D0;
  if (!qword_2696E18D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18D0);
  }
  return result;
}

unint64_t sub_249996188()
{
  unint64_t result = qword_2696E18D8;
  if (!qword_2696E18D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18D8);
  }
  return result;
}

unint64_t sub_2499961E0()
{
  unint64_t result = qword_2696E18E0;
  if (!qword_2696E18E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18E0);
  }
  return result;
}

unint64_t sub_249996238()
{
  unint64_t result = qword_2696E18E8;
  if (!qword_2696E18E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18E8);
  }
  return result;
}

unint64_t sub_249996290()
{
  unint64_t result = qword_2696E18F0;
  if (!qword_2696E18F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18F0);
  }
  return result;
}

unint64_t sub_2499962E8()
{
  unint64_t result = qword_2696E18F8;
  if (!qword_2696E18F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E18F8);
  }
  return result;
}

unint64_t sub_249996340()
{
  unint64_t result = qword_2696E1900;
  if (!qword_2696E1900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1900);
  }
  return result;
}

unint64_t sub_249996398()
{
  unint64_t result = qword_2696E1908;
  if (!qword_2696E1908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1908);
  }
  return result;
}

unint64_t sub_2499963F0()
{
  unint64_t result = qword_2696E1910;
  if (!qword_2696E1910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1910);
  }
  return result;
}

uint64_t sub_249996444(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x72616C7563726963 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x75676E6174636572 && a2 == 0xEB0000000072616CLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72656E726F63 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2499965AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1802723693 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x69646152676E6972 && a2 == 0xEA00000000007375 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x746E6543676E6972 && a2 == 0xEF746E696F507265 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000249B16270)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_249996784(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6165724165666173 && a2 == 0xEE00737465736E49 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xEA00000000006449 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D757274736E69 && a2 == 0xEA0000000000746ELL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000249B16290 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 25705 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_249996AD4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t WidgetModel.init(id:isDismissible:dismissedHandler:preferPopoverPresentation:widgetInfo:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  long long v8 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(a8 + 40) = *(_OWORD *)a7;
  *(_OWORD *)(a8 + 56) = v8;
  long long v9 = *(_OWORD *)(a7 + 48);
  *(_OWORD *)(a8 + 72) = *(_OWORD *)(a7 + 32);
  uint64_t v10 = *(void *)(a7 + 64);
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(unsigned char *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 17) = a6;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(_OWORD *)(a8 + 88) = v9;
  *(void *)(a8 + 104) = v10;
  *(unsigned char *)(a8 + 112) = (unint64_t)v9 >> 62 == 2;
  return result;
}

uint64_t WidgetModel.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t WidgetModel.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *BOOL v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WidgetModel.id.modify())()
{
  return nullsub_1;
}

uint64_t WidgetModel.isDismissible.getter()
{
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t WidgetModel.isDismissible.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 16) = result;
  return result;
}

uint64_t (*WidgetModel.isDismissible.modify())()
{
  return nullsub_1;
}

uint64_t WidgetModel.preferPopoverPresentation.getter()
{
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t WidgetModel.preferPopoverPresentation.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 17) = result;
  return result;
}

uint64_t (*WidgetModel.preferPopoverPresentation.modify())()
{
  return nullsub_1;
}

uint64_t sub_249996C4C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    char v6 = sub_2499974F4;
  }
  else
  {
    char v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)())v5;

  return sub_2498B9AA8(v3);
}

uint64_t sub_249996CCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    char v6 = sub_2499974EC;
  }
  else
  {
    char v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *(void *)(a2 + 24);
  sub_2498B9AA8(v3);
  uint64_t result = sub_2498B9AB8(v7);
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v5;
  return result;
}

uint64_t WidgetModel.dismissedHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_2498B9AA8(v1);
  return v1;
}

uint64_t WidgetModel.dismissedHandler.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2498B9AB8(*(void *)(v2 + 24));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*WidgetModel.dismissedHandler.modify())()
{
  return nullsub_1;
}

uint64_t WidgetModel.widgetInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  uint64_t v4 = v1[7];
  uint64_t v5 = v1[8];
  uint64_t v6 = v1[9];
  uint64_t v7 = v1[10];
  unint64_t v8 = v1[11];
  uint64_t v9 = v1[12];
  uint64_t v10 = v1[13];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_2498A48A4(v2, v3, v4, v5, v6, v7, v8);
}

__n128 WidgetModel.widgetInfo.setter(long long *a1)
{
  long long v7 = *a1;
  long long v5 = a1[2];
  long long v6 = a1[1];
  __n128 v4 = (__n128)a1[3];
  uint64_t v2 = *((void *)a1 + 8);
  sub_2498A58D4(v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11]);
  *(_OWORD *)(v1 + 5) = v7;
  *(_OWORD *)(v1 + 7) = v6;
  *(_OWORD *)(v1 + 9) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 11) = v4;
  v1[13] = v2;
  return result;
}

uint64_t (*WidgetModel.widgetInfo.modify())()
{
  return nullsub_1;
}

uint64_t WidgetModel.isLocal.getter()
{
  return *(unsigned __int8 *)(v0 + 112);
}

uint64_t WidgetModel.isLocal.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 112) = result;
  return result;
}

uint64_t (*WidgetModel.isLocal.modify())()
{
  return nullsub_1;
}

Swift::Double_optional __swiftcall WidgetModel.doubleValue()()
{
  Swift::Bool v0 = 0;
  result.is_nil = v0;
  return result;
}

uint64_t _s14CarPlayAssetUI11WidgetModelV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  int v3 = *(unsigned __int8 *)(a1 + 17);
  long long v4 = *(_OWORD *)(a1 + 40);
  long long v5 = *(_OWORD *)(a1 + 56);
  long long v6 = *(_OWORD *)(a1 + 72);
  long long v7 = *(_OWORD *)(a1 + 88);
  uint64_t v8 = *(void *)(a1 + 104);
  int v9 = *(unsigned __int8 *)(a2 + 16);
  int v10 = *(unsigned __int8 *)(a2 + 17);
  long long v11 = *(_OWORD *)(a2 + 40);
  long long v12 = *(_OWORD *)(a2 + 56);
  long long v13 = *(_OWORD *)(a2 + 72);
  long long v14 = *(_OWORD *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 104);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    char v16 = 0;
    if (v2 != v9 || ((v3 ^ v10) & 1) != 0) {
      return v16 & 1;
    }
LABEL_9:
    v29[0] = v4;
    v29[1] = v5;
    v29[2] = v6;
    v29[3] = v7;
    uint64_t v30 = v8;
    v27[0] = v11;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    uint64_t v28 = v15;
    char v16 = _s14CarPlayAssetUI10WidgetInfoO2eeoiySbAC_ACtFZ_0((uint64_t *)v29, (uint64_t *)v27);
    return v16 & 1;
  }
  long long v19 = *(_OWORD *)(a2 + 88);
  long long v20 = *(_OWORD *)(a2 + 72);
  long long v21 = *(_OWORD *)(a2 + 56);
  long long v22 = *(_OWORD *)(a2 + 40);
  long long v23 = *(_OWORD *)(a1 + 88);
  long long v24 = *(_OWORD *)(a1 + 72);
  long long v25 = *(_OWORD *)(a1 + 56);
  long long v26 = *(_OWORD *)(a1 + 40);
  char v17 = sub_249AEE0D8();
  char v16 = 0;
  if ((v17 & 1) != 0 && ((v2 ^ v9) & 1) == 0)
  {
    long long v5 = v25;
    long long v4 = v26;
    long long v7 = v23;
    long long v6 = v24;
    long long v12 = v21;
    long long v11 = v22;
    long long v14 = v19;
    long long v13 = v20;
    if (((v3 ^ v10) & 1) == 0) {
      goto LABEL_9;
    }
  }
  return v16 & 1;
}

uint64_t destroy for WidgetModel(void *a1)
{
  if (a1[3]) {
    swift_release();
  }
  return sub_2498A58D4(a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11]);
}

uint64_t initializeWithCopy for WidgetModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  long long v6 = (_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  unint64_t v14 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  sub_2498A48A4(v8, v9, v10, v11, v12, v13, v14);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v17;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t assignWithCopy for WidgetModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 24);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  uint64_t v5 = *(void *)(a2 + 24);
  if (!v4)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v7;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  swift_retain();
  swift_release();
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  uint64_t v13 = *(void *)(a2 + 80);
  unint64_t v14 = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 96);
  uint64_t v24 = *(void *)(a2 + 104);
  sub_2498A48A4(v8, v9, v10, v11, v12, v13, v14);
  uint64_t v16 = *(void *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 48);
  uint64_t v18 = *(void *)(a1 + 56);
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 80);
  unint64_t v22 = *(void *)(a1 + 88);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(void *)(a1 + 104) = v24;
  sub_2498A58D4(v16, v17, v18, v19, v20, v21, v22);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

__n128 __swift_memcpy113_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for WidgetModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  if (!v6)
  {
    if (v5)
    {
      uint64_t v8 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v7;
  swift_release();
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 104);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 72);
  uint64_t v15 = *(void *)(a1 + 80);
  unint64_t v16 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = v9;
  sub_2498A58D4(v10, v11, v12, v13, v14, v15, v16);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 113)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 112) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 113) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetModel()
{
  return &type metadata for WidgetModel;
}

uint64_t sub_2499974B4()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_2499974EC()
{
  return sub_249A25548(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_2499974F4()
{
  return sub_249A254E8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_249997500(uint64_t a1, const char *a2)
{
  uint64_t v41 = a2;
  uint64_t v3 = sub_249AEB8C8();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v42 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - v7;
  uint64_t v9 = type metadata accessor for AppearanceLogger();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_249AEB908();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  uint64_t v16 = a1 + *(int *)(v9 + 20);
  uint64_t v43 = *(const char **)v16;
  char v17 = *(unsigned char *)(v16 + 16);
  uint64_t v18 = a1;
  uint64_t v19 = v8;
  sub_249998678(v18, (uint64_t)v11);
  sub_249AEB8B8();
  uint64_t v20 = sub_249AEB8E8();
  int v40 = sub_249AED828();
  if ((sub_249AED8B8() & 1) == 0)
  {

    sub_249998980((uint64_t)v11);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v19, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v21 = v20;
  uint64_t v38 = v12;
  uint64_t v39 = v4;
  if (v17)
  {
    unint64_t v22 = v42;
    if ((unint64_t)v43 >> 32)
    {
      __break(1u);
    }
    else
    {
      if (v43 >> 11 == 27)
      {
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      if (v43 >> 16 <= 0x10)
      {
        uint64_t v23 = v3;
        long long v25 = v21;
        uint64_t v43 = &v46;
        uint64_t v24 = v39;
        goto LABEL_10;
      }
    }
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v22 = v42;
  if (!v43)
  {
LABEL_18:
    uint64_t result = sub_249998980((uint64_t)v11);
    __break(1u);
    return result;
  }
  uint64_t v23 = v3;
  uint64_t v24 = v39;
  long long v25 = v21;
LABEL_10:
  long long v27 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v42 = v19;
  v27(v22, v19, v23);
  uint64_t v28 = (uint8_t *)swift_slowAlloc();
  uint64_t v29 = swift_slowAlloc();
  uint64_t v45 = v29;
  *(_DWORD *)uint64_t v28 = 136315138;
  uint64_t v30 = (uint64_t *)&v11[*(int *)(v9 + 24)];
  unint64_t v31 = v30[1];
  uint64_t v37 = v23;
  if (v31)
  {
    uint64_t v32 = *v30;
    unint64_t v33 = v31;
  }
  else
  {
    uint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_249924094(v32, v33, &v45);
  sub_249AED8F8();
  swift_bridgeObjectRelease();
  sub_249998980((uint64_t)v11);
  os_signpost_id_t v34 = sub_249AEB8A8();
  _os_signpost_emit_with_name_impl(&dword_249878000, v25, (os_signpost_type_t)v40, v34, v43, v41, v28, 0xCu);
  swift_arrayDestroy();
  MEMORY[0x24C5B0110](v29, -1, -1);
  MEMORY[0x24C5B0110](v28, -1, -1);

  uint64_t v35 = *(void (**)(char *, uint64_t))(v39 + 8);
  uint64_t v36 = v37;
  v35(v42, v37);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v38);
  return ((uint64_t (*)(char *, uint64_t))v35)(v22, v36);
}

uint64_t sub_249997948()
{
  return sub_249AEBB98();
}

uint64_t sub_249997964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1940);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249998678(v4, (uint64_t)v9);
  unint64_t v14 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  sub_2499986E0((uint64_t)v9, v15 + v14);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1948);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v13, a1, v16);
  char v17 = (uint64_t (**)())&v13[*(int *)(v11 + 44)];
  *char v17 = sub_249998744;
  v17[1] = (uint64_t (*)())v15;
  v17[2] = 0;
  v17[3] = 0;
  sub_249998678(v4, (uint64_t)v9);
  uint64_t v18 = swift_allocObject();
  sub_2499986E0((uint64_t)v9, v18 + v14);
  sub_2499988B8((uint64_t)v13, a3);
  uint64_t v19 = (void *)(a3 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E1950) + 36));
  *uint64_t v19 = 0;
  v19[1] = 0;
  v19[2] = sub_249998848;
  v19[3] = v18;
  return sub_249998920((uint64_t)v13);
}

uint64_t sub_249997B78()
{
  uint64_t v0 = sub_249AEB938();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_249AEB908();
  __swift_allocate_value_buffer(v4, qword_26972C730);
  __swift_project_value_buffer(v4, (uint64_t)qword_26972C730);
  if (qword_2696DD638 != -1) {
    swift_once();
  }
  uint64_t v5 = __swift_project_value_buffer(v0, (uint64_t)qword_26972C748);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return sub_249AEB8D8();
}

uint64_t sub_249997CB4(uint64_t a1)
{
  return sub_249997D14(a1, qword_26972C748);
}

uint64_t sub_249997CD0(uint64_t a1)
{
  return sub_249997D14(a1, qword_26972C760);
}

uint64_t sub_249997CEC(uint64_t a1)
{
  return sub_249997D14(a1, qword_26972C778);
}

uint64_t sub_249997D14(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_249AEB938();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_249AEB928();
}

uint64_t sub_249997D8C()
{
  sub_249997F78();
  uint64_t result = sub_249AED8C8();
  qword_2696E1920 = result;
  return result;
}

id static OS_os_log.runtimeIssuesLog.getter()
{
  if (qword_2696DD650 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = (void *)qword_2696E1920;

  return v0;
}

void static OS_os_log.runtimeIssuesLog.setter(uint64_t a1)
{
  if (qword_2696DD650 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = (void *)qword_2696E1920;
  qword_2696E1920 = a1;
}

uint64_t (*static OS_os_log.runtimeIssuesLog.modify())()
{
  if (qword_2696DD650 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t sub_249997F78()
{
  unint64_t result = qword_2696E1928;
  if (!qword_2696E1928)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2696E1928);
  }
  return result;
}

uint64_t *sub_249997FB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_249AEB908();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    v10[16] = v11[16];
    uint64_t v12 = (uint64_t *)((char *)a1 + v9);
    uint64_t v13 = (uint64_t *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2499980A8(uint64_t a1)
{
  uint64_t v2 = sub_249AEB908();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_249998120(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2499981C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  *(unsigned char *)(v8 + 16) = *(unsigned char *)(v9 + 16);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_249998280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_249998314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB908();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(unsigned char *)(v9 + 16) = *(unsigned char *)(v10 + 16);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2499983B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499983CC);
}

uint64_t sub_2499983CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB908();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_24999849C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499984B0);
}

uint64_t sub_2499984B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_249AEB908();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for AppearanceLogger()
{
  uint64_t result = qword_2696E1930;
  if (!qword_2696E1930) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2499985BC()
{
  uint64_t result = sub_249AEB908();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24999865C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_249998678(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppearanceLogger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499986E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppearanceLogger();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_249998744()
{
  return sub_249998854("onAppear - %s");
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = *(void *)(type metadata accessor for AppearanceLogger() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  uint64_t v7 = sub_249AEB908();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_249998848()
{
  return sub_249998854("onDisappear - %s");
}

uint64_t sub_249998854(const char *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for AppearanceLogger() - 8);
  return sub_249997500(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_2499988B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_249998920(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1940);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_249998980(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppearanceLogger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2499989DC()
{
  return sub_249998A40(&qword_2696E1958, &qword_2696E1950, (void (*)(void))sub_249998A18);
}

uint64_t sub_249998A18()
{
  return sub_249998A40(&qword_2696E1960, &qword_2696E1940, (void (*)(void))sub_249998AC0);
}

uint64_t sub_249998A40(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249998AC0()
{
  unint64_t result = qword_2696E1968;
  if (!qword_2696E1968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1948);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1968);
  }
  return result;
}

uint64_t LayoutTemplate.scaledZones(for:)(double a1, double a2)
{
  uint64_t v60 = type metadata accessor for Component();
  uint64_t v53 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Zone();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  int v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v49 - v12;
  uint64_t v14 = type metadata accessor for LayoutTemplate();
  uint64_t v15 = *(void *)(v2 + *(int *)(v14 + 28));
  int64_t v16 = *(void *)(v15 + 16);
  if (!v16) {
    return MEMORY[0x263F8EE78];
  }
  char v17 = (double *)(v2 + *(int *)(v14 + 24));
  double v18 = v17[1];
  double v19 = a1 / *v17;
  uint64_t v62 = MEMORY[0x263F8EE78];
  double v20 = a2 / v18;
  swift_bridgeObjectRetain();
  sub_249A22150(0, v16, 0);
  uint64_t v21 = 0;
  unint64_t v22 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v49 = v15;
  unint64_t v59 = v22;
  uint64_t v58 = v15 + v22;
  uint64_t v23 = *(void *)(v8 + 72);
  uint64_t v52 = v7;
  long long v51 = v11;
  long long v50 = v13;
  int64_t v54 = v16;
  uint64_t v57 = v23;
  do
  {
    sub_2499A03FC(v58 + v23 * v21, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Zone);
    sub_2499A03FC((uint64_t)v11, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v24 = (CGFloat *)&v13[*(int *)(v7 + 24)];
    CGFloat v25 = *v24;
    CGFloat v26 = v24[1];
    double v27 = v24[2];
    double v28 = v24[3];
    CGAffineTransformMakeScale(&v61, v19, v20);
    v63.origin.x = v25;
    v63.origin.y = v26;
    v63.size.double width = v27;
    v63.size.double height = v28;
    CGRect v64 = CGRectApplyAffineTransform(v63, &v61);
    *(CGRect *)uint64_t v24 = v64;
    if (v64.size.width != v27 || v64.size.height != v28)
    {
      uint64_t v30 = *(int *)(v7 + 28);
      uint64_t v31 = *(void *)&v13[v30];
      int64_t v32 = *(void *)(v31 + 16);
      if (v32)
      {
        double width = v64.size.width;
        double height = v64.size.height;
        uint64_t v56 = *(int *)(v7 + 28);
        *(void *)&v61.CGFloat a = MEMORY[0x263F8EE78];
        swift_bridgeObjectRetain();
        sub_249A22110(0, v32, 0);
        CGFloat a = v61.a;
        unint64_t v36 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
        uint64_t v55 = v31;
        uint64_t v37 = v31 + v36;
        uint64_t v38 = *(void *)(v53 + 72);
        do
        {
          sub_2499A03FC(v37, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Component);
          uint64_t v39 = (double *)&v6[*(int *)(v60 + 28)];
          double v40 = *v39;
          double v41 = v39[1];
          *uint64_t v39 = width;
          v39[1] = height;
          if (width != v40 || height != v41) {
            sub_2499BDAA0(width / v40, height / v41);
          }
          v61.CGFloat a = a;
          unint64_t v44 = *(void *)(*(void *)&a + 16);
          unint64_t v43 = *(void *)(*(void *)&a + 24);
          if (v44 >= v43 >> 1)
          {
            sub_249A22110(v43 > 1, v44 + 1, 1);
            CGFloat a = v61.a;
          }
          *(void *)(*(void *)&a + 16) = v44 + 1;
          sub_2499A02AC((uint64_t)v6, *(void *)&a + v36 + v44 * v38, (uint64_t (*)(void))type metadata accessor for Component);
          v37 += v38;
          --v32;
        }
        while (v32);
        swift_bridgeObjectRelease_n();
        uint64_t v13 = v50;
        *(CGFloat *)&v50[v56] = a;
        uint64_t v7 = v52;
        int v11 = v51;
      }
      else
      {
        swift_bridgeObjectRelease();
        *(void *)&v13[v30] = MEMORY[0x263F8EE78];
      }
      int64_t v16 = v54;
    }
    sub_2499A103C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v45 = v62;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_249A22150(0, *(void *)(v45 + 16) + 1, 1);
      uint64_t v45 = v62;
    }
    uint64_t v23 = v57;
    unint64_t v47 = *(void *)(v45 + 16);
    unint64_t v46 = *(void *)(v45 + 24);
    if (v47 >= v46 >> 1)
    {
      sub_249A22150(v46 > 1, v47 + 1, 1);
      uint64_t v45 = v62;
    }
    ++v21;
    *(void *)(v45 + 16) = v47 + 1;
    sub_2499A02AC((uint64_t)v13, v45 + v59 + v47 * v23, (uint64_t (*)(void))type metadata accessor for Zone);
  }
  while (v21 != v16);
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t type metadata accessor for LayoutTemplate()
{
  uint64_t result = qword_2696E1A10;
  if (!qword_2696E1A10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t LayoutTemplate.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_249AEB808();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t LayoutTemplate.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for LayoutTemplate() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

double LayoutTemplate.size.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for LayoutTemplate() + 24));
}

int *LayoutTemplate.init(id:name:size:zones:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  uint64_t v14 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(a5, a1, v14);
  uint64_t result = (int *)type metadata accessor for LayoutTemplate();
  int64_t v16 = (void *)(a5 + result[5]);
  *int64_t v16 = a2;
  v16[1] = a3;
  *(void *)(a5 + result[7]) = a4;
  char v17 = (double *)(a5 + result[6]);
  *char v17 = a6;
  v17[1] = a7;
  return result;
}

uint64_t sub_2499991C8()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701667182;
      break;
    case 2:
      uint64_t result = 1702521203;
      break;
    case 3:
      uint64_t result = 0x73656E6F7ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249999238@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499A0EC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249999260(uint64_t a1)
{
  unint64_t v2 = sub_2499A0314();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24999929C(uint64_t a1)
{
  unint64_t v2 = sub_2499A0314();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LayoutTemplate.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E19E8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499A0314();
  sub_249AEE468();
  LOBYTE(v13) = 0;
  sub_249AEB808();
  sub_2499A05DC(&qword_2696DF430, MEMORY[0x263F07508]);
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v9 = type metadata accessor for LayoutTemplate();
    LOBYTE(v13) = 1;
    sub_249AEDEB8();
    long long v13 = *(_OWORD *)(v3 + *(int *)(v9 + 24));
    char v12 = 2;
    type metadata accessor for CGSize(0);
    sub_2499A05DC(&qword_2696E19F8, type metadata accessor for CGSize);
    sub_249AEDF08();
    *(void *)&long long v13 = *(void *)(v3 + *(int *)(v9 + 28));
    char v12 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0CF8);
    sub_2499A0368(&qword_2696E0D00, &qword_2696E0D08);
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t LayoutTemplate.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a2;
  uint64_t v4 = sub_249AEB808();
  uint64_t v23 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v24 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A00);
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for LayoutTemplate();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499A0314();
  CGFloat v26 = v7;
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  double v20 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v23;
  LOBYTE(v27) = 0;
  sub_2499A05DC(&qword_2696DF428, MEMORY[0x263F07508]);
  long long v13 = v24;
  uint64_t v14 = v25;
  sub_249AEDE08();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v13, v4);
  LOBYTE(v27) = 1;
  uint64_t v15 = sub_249AEDDB8();
  int64_t v16 = (uint64_t *)(v11 + v8[5]);
  *int64_t v16 = v15;
  v16[1] = v17;
  type metadata accessor for CGSize(0);
  char v28 = 2;
  sub_2499A05DC(&qword_2696E1A08, type metadata accessor for CGSize);
  sub_249AEDE08();
  *(_OWORD *)(v11 + v8[6]) = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0CF8);
  char v28 = 3;
  sub_2499A0368(&qword_2696E0D58, &qword_2696E0D60);
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v26, v14);
  *(void *)(v11 + v8[7]) = v27;
  sub_2499A03FC(v11, v21, (uint64_t (*)(void))type metadata accessor for LayoutTemplate);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v20);
  return sub_2499A103C(v11, (uint64_t (*)(void))type metadata accessor for LayoutTemplate);
}

uint64_t sub_249999A50@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return LayoutTemplate.init(from:)(a1, a2);
}

uint64_t sub_249999A68(void *a1)
{
  return LayoutTemplate.encode(to:)(a1);
}

double sub_249999A80()
{
  qword_2696E1970 = 0;
  *(void *)algn_2696E1978 = 0;
  double result = 1920.0;
  xmmword_2696E1980 = xmmword_249AFF3B0;
  return result;
}

double static LayoutTemplate.Constants.clusterDisplayRect.getter()
{
  if (qword_2696DD658 != -1) {
    swift_once();
  }
  return *(double *)&qword_2696E1970;
}

double sub_249999AF0()
{
  qword_2696E1990 = 0;
  *(void *)algn_2696E1998 = 0;
  double result = 1920.0;
  xmmword_2696E19A0 = xmmword_249AFF3C0;
  return result;
}

double static LayoutTemplate.Constants.consoleDisplayRect.getter()
{
  if (qword_2696DD660 != -1) {
    swift_once();
  }
  return *(double *)&qword_2696E1990;
}

double sub_249999B60()
{
  qword_2696E19B0 = 0;
  *(void *)algn_2696E19B8 = 0;
  double result = 1920.0;
  xmmword_2696E19C0 = xmmword_249AFF3B0;
  return result;
}

double static LayoutTemplate.Constants.passengerDisplayRect.getter()
{
  if (qword_2696DD668 != -1) {
    swift_once();
  }
  return *(double *)&qword_2696E19B0;
}

uint64_t sub_249999BD0()
{
  uint64_t v71 = sub_249AEB808();
  uint64_t v69 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  long long v68 = (char *)&v55 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = type metadata accessor for Component();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v55 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A38);
  uint64_t v56 = type metadata accessor for LayoutTemplate();
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v56 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v56 - 8) + 80);
  uint64_t v72 = *(void *)(*(void *)(v56 - 8) + 72);
  uint64_t v5 = swift_allocObject();
  long long v57 = xmmword_249AFF3D0;
  *(_OWORD *)(v5 + 16) = xmmword_249AFF3D0;
  if (qword_2696DD658 != -1) {
    swift_once();
  }
  long long v6 = xmmword_2696E1980;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE338);
  uint64_t v7 = *(void *)(type metadata accessor for Zone() - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = (v9 + 32) & ~v9;
  uint64_t v63 = 2 * v8;
  uint64_t v64 = v8;
  uint64_t v58 = 3 * v8;
  uint64_t v61 = v10 + 3 * v8;
  uint64_t v62 = v9 | 7;
  uint64_t v11 = swift_allocObject();
  long long v67 = xmmword_249AFF3E0;
  *(_OWORD *)(v11 + 16) = xmmword_249AFF3E0;
  unint64_t v59 = (void *)v5;
  uint64_t v60 = v10;
  static Component.circular.getter((uint64_t)v3);
  sub_24999B26C(1952867660, 0xE400000000000000, (uint64_t)v3, v11 + v10, 30.0, 30.0, 600.0, 660.0);
  static Component.content.getter((uint64_t)v3);
  sub_24999B26C(0x7265746E6543, 0xE600000000000000, (uint64_t)v3, v11 + v10 + v8, 660.0, 30.0, 600.0, 660.0);
  static Component.circular.getter((uint64_t)v3);
  sub_24999B26C(0x7468676952, 0xE500000000000000, (uint64_t)v3, v11 + v10 + 2 * v8, 1290.0, 30.0, 600.0, 660.0);
  uint64_t v12 = v68;
  sub_249AEB7F8();
  uint64_t v13 = v69 + 32;
  long long v70 = *(void (**)(unint64_t, char *, uint64_t))(v69 + 32);
  v70(v5 + v4, v12, v71);
  uint64_t v14 = (int *)v56;
  uint64_t v15 = *(int *)(v56 + 20);
  unint64_t v66 = v5 + v4;
  int64_t v16 = (void *)(v5 + v4 + v15);
  *int64_t v16 = 0x756147206C617544;
  v16[1] = 0xEA00000000006567;
  *(void *)(v5 + v4 + v14[7]) = v11;
  *(_OWORD *)(v5 + v4 + v14[6]) = v6;
  unint64_t v17 = v5 + v4 + v72;
  long long v18 = xmmword_2696E1980;
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = v67;
  uint64_t v20 = v19 + v10;
  static Component.circular.getter((uint64_t)v3);
  sub_24999B26C(1952867660, 0xE400000000000000, (uint64_t)v3, v19 + v10, 30.0, 30.0, 600.0, 660.0);
  uint64_t v69 = v13;
  uint64_t v21 = v19 + v10 + v64;
  static Component.circular.getter((uint64_t)v3);
  sub_24999B26C(0x7265746E6543, 0xE600000000000000, (uint64_t)v3, v21, 660.0, 30.0, 600.0, 660.0);
  uint64_t v22 = v20 + v63;
  static Component.circular.getter((uint64_t)v3);
  sub_24999B26C(0x7468676952, 0xE500000000000000, (uint64_t)v3, v22, 1290.0, 30.0, 600.0, 660.0);
  sub_249AEB7F8();
  uint64_t v23 = v12;
  uint64_t v24 = v71;
  v70(v17, v23, v71);
  unint64_t v25 = v17 + v14[5];
  strcpy((char *)v25, "Triple Gauge");
  *(unsigned char *)(v25 + 13) = 0;
  *(_WORD *)(v25 + 14) = -5120;
  *(void *)(v17 + v14[7]) = v19;
  *(_OWORD *)(v17 + v14[6]) = v18;
  uint64_t v55 = 2 * v72;
  unint64_t v26 = v66 + 2 * v72;
  long long v27 = xmmword_2696E1980;
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = v67;
  uint64_t v29 = v60;
  uint64_t v30 = v28 + v60;
  static Component.modular.getter((uint64_t)v3);
  sub_24999B26C(1952867660, 0xE400000000000000, (uint64_t)v3, v30, 30.0, 30.0, 600.0, 660.0);
  uint64_t v31 = v30 + v64;
  static Component.modularCompact.getter((uint64_t)v3);
  sub_24999B26C(0x7265746E6543, 0xE600000000000000, (uint64_t)v3, v31, 660.0, 30.0, 600.0, 660.0);
  uint64_t v32 = v63;
  static Component.modularCompact.getter((uint64_t)v3);
  sub_24999B26C(0x7468676952, 0xE500000000000000, (uint64_t)v3, v30 + v32, 1290.0, 30.0, 600.0, 660.0);
  unint64_t v33 = v68;
  sub_249AEB7F8();
  v70(v26, v33, v24);
  os_signpost_id_t v34 = (void *)(v26 + v14[5]);
  *os_signpost_id_t v34 = 0x72616C75646F4DLL;
  v34[1] = 0xE700000000000000;
  *(void *)(v26 + v14[7]) = v28;
  *(_OWORD *)(v26 + v14[6]) = v27;
  unint64_t v35 = v66 + v55 + v72;
  long long v36 = xmmword_2696E1980;
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v67;
  static Component.sportLeft.getter((uint64_t)v3);
  sub_24999B26C(1952867660, 0xE400000000000000, (uint64_t)v3, v37 + v29, 30.0, 30.0, 600.0, 660.0);
  uint64_t v38 = v64;
  static Component.sport.getter((uint64_t)v3);
  sub_24999B26C(0x7265746E6543, 0xE600000000000000, (uint64_t)v3, v37 + v29 + v38, 660.0, 30.0, 600.0, 660.0);
  static Component.sportRight.getter((uint64_t)v3);
  sub_24999B26C(0x7468676952, 0xE500000000000000, (uint64_t)v3, v37 + v29 + v32, 1290.0, 30.0, 600.0, 660.0);
  uint64_t v39 = v68;
  sub_249AEB7F8();
  v70(v35, v39, v71);
  double v40 = (void *)(v35 + v14[5]);
  *double v40 = 0x61472069746C754DLL;
  v40[1] = 0xEB00000000656775;
  *(void *)(v35 + v14[7]) = v37;
  *(_OWORD *)(v35 + v14[6]) = v36;
  unint64_t v41 = v66 + 4 * v72;
  CGSize v42 = (CGSize)xmmword_2696E1980;
  uint64_t v43 = v60;
  uint64_t v44 = swift_allocObject();
  *(_OWORD *)(v44 + 16) = v57;
  uint64_t v45 = v44 + v43;
  double v46 = *(double *)&qword_2696E1970;
  double v47 = *(double *)algn_2696E1978;
  static Component.mapsMediaContent.getter((uint64_t)v3);
  sub_24999B26C(0x616964654D70614DLL, 0xE800000000000000, (uint64_t)v3, v45, v46, v47, v42.width, v42.height);
  static Component.mapsMediaLong.getter((uint64_t)v3);
  sub_24999B26C(1735290700, 0xE400000000000000, (uint64_t)v3, v45 + v38, v46, v47, v42.width, v42.height);
  uint64_t v48 = v45 + v63;
  v73.origin.x = v46;
  v73.origin.y = v47;
  v73.size = v42;
  double Height = CGRectGetHeight(v73);
  static Component.mapsMediaLeft.getter((uint64_t)v3);
  sub_24999B26C(1952867660, 0xE400000000000000, (uint64_t)v3, v48, 30.0, 0.0, 600.0, Height);
  uint64_t v50 = v45 + v58;
  v74.origin.x = v46;
  v74.origin.y = v47;
  v74.size = v42;
  double v51 = CGRectGetHeight(v74);
  static Component.mapsMediaCenter.getter((uint64_t)v3);
  sub_24999B26C(0x7265746E6543, 0xE600000000000000, (uint64_t)v3, v50, 660.0, 0.0, 600.0, v51);
  v75.origin.x = v46;
  v75.origin.y = v47;
  v75.size = v42;
  double v52 = CGRectGetHeight(v75);
  static Component.mapsMediaRight.getter((uint64_t)v3);
  sub_24999B26C(0x7468676952, 0xE500000000000000, (uint64_t)v3, v45 + 4 * v38, 1290.0, 0.0, 600.0, v52);
  sub_249AEB7F8();
  uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v70)(v41, v39, v71);
  unint64_t v54 = v41 + v14[5];
  strcpy((char *)v54, "Maps & Media");
  *(unsigned char *)(v54 + 13) = 0;
  *(_WORD *)(v54 + 14) = -5120;
  *(void *)(v41 + v14[7]) = v44;
  *(CGSize *)(v41 + v14[6]) = v42;
  off_2696E19D0 = v59;
  return result;
}

int *static Component.circular.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v115 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v114 = (char *)&v110 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v110 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)type metadata accessor for Slot();
  unint64_t v13 = (*(unsigned __int8 *)(*((void *)v12 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v12 - 1) + 80);
  uint64_t v120 = *(void *)(*((void *)v12 - 1) + 72);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AFF3F0;
  uint64_t v113 = v14;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void *)(v16 - 8);
  long long v18 = *(void (**)(void))(v17 + 56);
  uint64_t v19 = v17 + 56;
  uint64_t v126 = v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v16);
  uint64_t v20 = v15 + v12[9];
  uint64_t v125 = v16;
  uint64_t v121 = v19;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v20, 1, 1, v16);
  uint64_t v21 = (void *)(v15 + v12[10]);
  *uint64_t v21 = 0;
  v21[1] = 0;
  uint64_t v117 = v12;
  uint64_t v22 = v15 + v12[11];
  sub_249AEB7F8();
  uint64_t v23 = (uint64_t)v6;
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v23, v22);
  uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v22 + *(int *)(v123 + 52)) = v24;
  *(void *)(v15 + 120) = 12621;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF400;
  *(int64x2_t *)(v15 + 64) = vdupq_n_s64(0x4082700000000000uLL);
  long long v128 = 0u;
  long long v129 = 0u;
  long long v127 = 0u;
  *(double *)(v15 + 80) = sub_249990F74((uint64_t)&v127, 5.0, 35.0, 590.0, 590.0);
  *(void *)(v15 + 88) = v25;
  *(void *)(v15 + 96) = v26;
  *(void *)(v15 + 104) = v27;
  *(void *)(v15 + 112) = 0;
  uint64_t v28 = (uint64_t)v126;
  sub_24992ED50((uint64_t)v126, v20);
  swift_bridgeObjectRelease();
  uint64_t v29 = v15 + v120;
  *uint64_t v21 = 0;
  v21[1] = 0;
  uint64_t v30 = v125;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v28, 1, 1, v125);
  uint64_t v31 = v117;
  uint64_t v32 = v117[9];
  unint64_t v33 = v18;
  uint64_t v124 = v18;
  uint64_t v34 = (uint64_t)v8;
  *(void *)&long long v122 = v29 + v32;
  v33();
  unint64_t v35 = (void *)(v29 + v31[10]);
  *unint64_t v35 = 0;
  v35[1] = 0;
  uint64_t v36 = v29 + v31[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, v23);
  uint64_t v37 = v23;
  uint64_t v38 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v37, v36);
  *(void *)(v36 + *(int *)(v123 + 52)) = v38;
  *(void *)(v29 + 120) = 12877;
  *(void *)(v29 + 128) = 0xE200000000000000;
  *(_OWORD *)uint64_t v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  *(_OWORD *)(v29 + 32) = 0u;
  *(_OWORD *)(v29 + 48) = xmmword_249AFF410;
  int64x2_t v116 = vdupq_n_s64(0x4060400000000000uLL);
  *(int64x2_t *)(v29 + 64) = v116;
  long long v128 = 0u;
  long long v129 = 0u;
  long long v127 = 0u;
  *(double *)(v29 + 80) = sub_249990F74((uint64_t)&v127, 235.0, 120.0, 130.0, 130.0);
  *(void *)(v29 + 88) = v39;
  *(void *)(v29 + 96) = v40;
  *(void *)(v29 + 104) = v41;
  *(void *)(v29 + 112) = 1;
  sub_24992ED50((uint64_t)v126, v122);
  swift_bridgeObjectRelease();
  long long v122 = xmmword_249AFF420;
  *(_OWORD *)unint64_t v35 = xmmword_249AFF420;
  uint64_t v42 = v120;
  uint64_t v112 = 2 * v120;
  unint64_t v43 = v15 + 2 * v120;
  uint64_t v44 = v124;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v124)(v126, 1, 1, v30);
  uint64_t v111 = v43 + v31[9];
  v44();
  uint64_t v45 = (void *)(v43 + v31[10]);
  *uint64_t v45 = 0;
  v45[1] = 0;
  uint64_t v46 = v43 + v31[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, v37);
  uint64_t v47 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v37, v46);
  *(void *)(v46 + *(int *)(v123 + 52)) = v47;
  *(void *)(v43 + 120) = 13133;
  *(void *)(v43 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v43 = 0u;
  *(_OWORD *)(v43 + 16) = 0u;
  *(_OWORD *)(v43 + 32) = 0u;
  *(_OWORD *)(v43 + 48) = xmmword_249AFF430;
  *(int64x2_t *)(v43 + 64) = v116;
  long long v128 = 0u;
  long long v129 = 0u;
  long long v127 = 0u;
  *(double *)(v43 + 80) = sub_249990F74((uint64_t)&v127, 90.0, 240.0, 130.0, 130.0);
  *(void *)(v43 + 88) = v48;
  *(void *)(v43 + 96) = v49;
  *(void *)(v43 + 104) = v50;
  *(void *)(v43 + 112) = 1;
  sub_24992ED50((uint64_t)v126, v111);
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v45 = v122;
  unint64_t v118 = v15;
  unint64_t v51 = v15 + v112 + v42;
  uint64_t v52 = v125;
  uint64_t v53 = v124;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v124)(v126, 1, 1, v125);
  uint64_t v54 = v51 + v31[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v53)(v54, 1, 1, v52);
  uint64_t v55 = (void *)(v51 + v31[10]);
  *uint64_t v55 = 0;
  v55[1] = 0;
  uint64_t v56 = v51 + v31[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, v37);
  uint64_t v57 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  uint64_t v119 = v37;
  uint64_t v58 = (uint64_t)v126;
  sub_2499A052C(v37, v56);
  *(void *)(v56 + *(int *)(v123 + 52)) = v57;
  *(void *)(v51 + 120) = 13389;
  *(void *)(v51 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v51 = 0u;
  *(_OWORD *)(v51 + 16) = 0u;
  *(_OWORD *)(v51 + 32) = 0u;
  *(_OWORD *)(v51 + 48) = xmmword_249AFF440;
  *(int64x2_t *)(v51 + 64) = v116;
  long long v128 = 0u;
  long long v129 = 0u;
  long long v127 = 0u;
  *(double *)(v51 + 80) = sub_249990F74((uint64_t)&v127, 380.0, 240.0, 130.0, 130.0);
  *(void *)(v51 + 88) = v59;
  *(void *)(v51 + 96) = v60;
  *(void *)(v51 + 104) = v61;
  *(void *)(v51 + 112) = 1;
  sub_24992ED50(v58, v54);
  swift_bridgeObjectRelease();
  *(_OWORD *)uint64_t v55 = v122;
  if (qword_2696DD690 != -1) {
    swift_once();
  }
  v116.i64[0] = qword_26972C7A0;
  if (qword_2696DD698 != -1) {
    swift_once();
  }
  uint64_t v110 = *((void *)&xmmword_26972C7B0 + 1);
  uint64_t v111 = xmmword_26972C7B0;
  uint64_t v63 = v124;
  uint64_t v62 = v125;
  unint64_t v64 = v118;
  if (qword_2696DD688 != -1) {
    swift_once();
  }
  uint64_t v65 = v120;
  uint64_t v112 = 4 * v120;
  unint64_t v66 = v64 + 4 * v120;
  long long v67 = xmmword_26972C790;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v63)(v58, 1, 1, v62);
  long long v68 = v117;
  uint64_t v69 = v62;
  uint64_t v70 = v66 + v117[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v63)(v70, 1, 1, v69);
  uint64_t v71 = (void *)(v66 + v68[10]);
  *uint64_t v71 = 0;
  v71[1] = 0;
  uint64_t v72 = v66 + v68[11];
  sub_249AEB7F8();
  uint64_t v73 = v119;
  sub_2499A0464(v34, v119);
  uint64_t v74 = qword_2696E2ED8;
  sub_2499A04CC(v34);
  sub_2499A052C(v73, v72);
  *(void *)(v72 + *(int *)(v123 + 52)) = v74;
  *(void *)(v66 + 128) = 0xE200000000000000;
  *(void *)unint64_t v66 = 1;
  uint64_t v75 = v111;
  *(void *)(v66 + 8) = v116.i64[0];
  *(void *)(v66 + 16) = v75;
  *(void *)(v66 + 24) = v110;
  *(_OWORD *)(v66 + 32) = v122;
  *(void *)(v66 + 48) = 0;
  *(void *)(v66 + 56) = 0;
  *(_OWORD *)(v66 + 64) = v67;
  *(_OWORD *)(v66 + 80) = 0u;
  *(_OWORD *)(v66 + 96) = 0u;
  *(void *)(v66 + 112) = 0;
  *(void *)(v66 + 120) = 12611;
  uint64_t v76 = (uint64_t)v126;
  sub_24992ED50((uint64_t)v126, v70);
  swift_bridgeObjectRelease();
  unint64_t v77 = v64 + v112 + v65;
  *uint64_t v71 = 0;
  v71[1] = 0;
  uint64_t v78 = qword_26972C7A0;
  uint64_t v112 = qword_26972C7A0;
  long long v79 = xmmword_26972C7B0;
  v116.i64[0] = xmmword_26972C7B0;
  uint64_t v80 = v76;
  long long v81 = v124;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v124)(v80, 1, 1, v125);
  uint64_t v110 = v77 + v68[9];
  v81();
  long long v82 = (void *)(v77 + v68[10]);
  *long long v82 = 0;
  v82[1] = 0;
  uint64_t v83 = v77 + v68[11];
  sub_249AEB7F8();
  uint64_t v84 = v119;
  sub_2499A0464(v34, v119);
  uint64_t v85 = qword_2696E2ED8;
  sub_2499A04CC(v34);
  sub_2499A052C(v84, v83);
  uint64_t v86 = v123;
  *(void *)(v83 + *(int *)(v123 + 52)) = v85;
  *(void *)(v77 + 120) = 12867;
  *(void *)(v77 + 128) = 0xE200000000000000;
  *(void *)unint64_t v77 = 2;
  *(void *)(v77 + 8) = v78;
  *(_OWORD *)(v77 + 16) = v79;
  uint64_t v111 = *((void *)&v79 + 1);
  *(_OWORD *)(v77 + 32) = v122;
  *(_OWORD *)(v77 + 48) = xmmword_249AFF450;
  *(_OWORD *)(v77 + 64) = v67;
  *(_OWORD *)(v77 + 80) = 0u;
  *(_OWORD *)(v77 + 96) = 0u;
  *(void *)(v77 + 112) = 0;
  uint64_t v87 = (uint64_t)v126;
  sub_24992ED50((uint64_t)v126, v110);
  swift_bridgeObjectRelease();
  unint64_t v88 = v118 + 6 * v120;
  *long long v82 = 0;
  v82[1] = 0;
  long long v89 = v124;
  uint64_t v90 = v125;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v124)(v87, 1, 1, v125);
  uint64_t v91 = v88 + v68[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v89)(v91, 1, 1, v90);
  long long v92 = (void *)(v88 + v68[10]);
  void *v92 = 0;
  v92[1] = 0;
  uint64_t v93 = v88 + v68[11];
  sub_249AEB7F8();
  uint64_t v94 = v119;
  sub_2499A0464(v34, v119);
  uint64_t v95 = qword_2696E2ED8;
  sub_2499A04CC(v34);
  sub_2499A052C(v94, v93);
  *(void *)(v93 + *(int *)(v86 + 52)) = v95;
  *(void *)(v88 + 120) = 13123;
  *(void *)(v88 + 128) = 0xE200000000000000;
  *(void *)unint64_t v88 = 4;
  uint64_t v96 = v112;
  uint64_t v97 = v116.i64[0];
  *(void *)(v88 + 8) = v112;
  *(void *)(v88 + 16) = v97;
  *(void *)(v88 + 24) = *((void *)&v79 + 1);
  *(_OWORD *)(v88 + 32) = v122;
  *(_OWORD *)(v88 + 48) = xmmword_249AFF460;
  *(_OWORD *)(v88 + 64) = v67;
  *(_OWORD *)(v88 + 80) = 0u;
  *(_OWORD *)(v88 + 96) = 0u;
  *(void *)(v88 + 112) = 0;
  uint64_t v98 = (uint64_t)v126;
  sub_24992ED50((uint64_t)v126, v91);
  swift_bridgeObjectRelease();
  uint64_t v99 = v118 - v120 + 8 * v120;
  void *v92 = 0;
  v92[1] = 0;
  unint64_t v101 = v124;
  uint64_t v100 = v125;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v124)(v98, 1, 1, v125);
  uint64_t v102 = v99 + v68[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v101)(v102, 1, 1, v100);
  uint64_t v103 = (void *)(v99 + v68[10]);
  *uint64_t v103 = 0;
  v103[1] = 0;
  uint64_t v104 = v99 + v68[11];
  sub_249AEB7F8();
  uint64_t v105 = v119;
  sub_2499A0464(v34, v119);
  uint64_t v106 = qword_2696E2ED8;
  sub_2499A04CC(v34);
  sub_2499A052C(v105, v104);
  *(void *)(v104 + *(int *)(v123 + 52)) = v106;
  *(void *)(v99 + 120) = 13379;
  *(void *)(v99 + 128) = 0xE200000000000000;
  *(void *)uint64_t v99 = 8;
  *(void *)(v99 + 8) = v96;
  uint64_t v107 = v111;
  *(void *)(v99 + 16) = v97;
  *(void *)(v99 + 24) = v107;
  *(_OWORD *)(v99 + 32) = v122;
  *(_OWORD *)(v99 + 48) = xmmword_249AFF470;
  *(_OWORD *)(v99 + 64) = v67;
  *(_OWORD *)(v99 + 80) = 0u;
  *(_OWORD *)(v99 + 96) = 0u;
  *(void *)(v99 + 112) = 0;
  sub_24992ED50(v98, v102);
  swift_bridgeObjectRelease();
  *uint64_t v103 = 0;
  v103[1] = 0;
  uint64_t v108 = (uint64_t)v114;
  sub_249AEB7F8();
  LOBYTE(v127) = 0;
  return Component.init(id:type:name:size:slots:)(v108, (char *)&v127, 0x72616C7563726943, 0xE800000000000000, v113, v115, 600.0, 660.0);
}

uint64_t sub_24999B26C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  MEMORY[0x270FA5388](v16 - 8);
  long long v18 = (char *)&v24[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E8);
  uint64_t v19 = *(void *)(type metadata accessor for Component() - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_249AF0A70;
  sub_2499A03FC(a3, v21 + v20, (uint64_t (*)(void))type metadata accessor for Component);
  char v28 = 2;
  uint64_t v26 = 0;
  __int16 v27 = 256;
  sub_249AEB7F8();
  v24[0] = 0;
  v24[1] = 0;
  char v25 = 2;
  Zone.init(id:displayName:frame:components:zoneType:zoneRegion:zoneShape:backgroundPlatter:)((uint64_t)v18, a1, a2, v21, (uint64_t)v24, &v28, &v26, 0, a4, a5, a6, a7, a8);
  return sub_2499A103C(a3, (uint64_t (*)(void))type metadata accessor for Component);
}

int *static Component.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)(type metadata accessor for Slot() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AF0A70;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v11, 1, 1, v16);
  uint64_t v18 = v14 + v13 + v12[11];
  v17((char *)(v15 + v12[11]), 1, 1, v16);
  uint64_t v19 = (void *)(v15 + v12[12]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = v12[13];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v21 = v15 + v20;
  uint64_t v22 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v21);
  *(void *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v22;
  *(void *)(v15 + 120) = 12620;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(void *)(v15 + 48) = 0;
  *(void *)(v15 + 56) = 0;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF480;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  sub_24992ED50((uint64_t)v11, v18);
  swift_bridgeObjectRelease();
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v23 = (uint64_t)v26;
  sub_249AEB7F8();
  char v28 = 0;
  return Component.init(id:type:name:size:slots:)(v23, &v28, 0x746E65746E6F43, 0xE700000000000000, v14, v27, 600.0, 660.0);
}

int *static Component.modular.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v35 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)type metadata accessor for Slot();
  unint64_t v13 = (*(unsigned __int8 *)(*((void *)v12 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v12 - 1) + 80);
  uint64_t v32 = *(void *)(*((void *)v12 - 1) + 72);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AFA7A0;
  uint64_t v33 = v14;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void (**)(void))(*(void *)(v16 - 8) + 56);
  uint64_t v34 = v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v11, 1, 1, v16);
  uint64_t v31 = v15 + v12[9];
  v17();
  uint64_t v18 = (void *)(v15 + v12[10]);
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v19 = v12[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v20 = v15 + v19;
  uint64_t v21 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v20);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v20 + *(int *)(v30 + 52)) = v21;
  *(void *)(v15 + 120) = 12621;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF490;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF4A0;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  uint64_t v22 = (uint64_t)v34;
  sub_24992ED50((uint64_t)v34, v31);
  swift_bridgeObjectRelease();
  uint64_t v23 = v15 + v32;
  *uint64_t v18 = 0;
  v18[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v22, 1, 1, v16);
  uint64_t v24 = v23 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v24, 1, 1, v16);
  uint64_t v25 = (void *)(v23 + v12[10]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = v23 + v12[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  uint64_t v27 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v26);
  *(void *)(v26 + *(int *)(v30 + 52)) = v27;
  *(void *)(v23 + 120) = 12627;
  *(void *)(v23 + 128) = 0xE200000000000000;
  *(_OWORD *)uint64_t v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(void *)(v23 + 32) = 0;
  *(void *)(v23 + 40) = 1;
  *(_OWORD *)(v23 + 48) = xmmword_249AFF4B0;
  *(_OWORD *)(v23 + 64) = xmmword_249AFF4C0;
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(void *)(v23 + 112) = 0;
  sub_24992ED50(v22, v24);
  swift_bridgeObjectRelease();
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v28 = (uint64_t)v35;
  sub_249AEB7F8();
  char v37 = 0;
  return Component.init(id:type:name:size:slots:)(v28, &v37, 0x72616C75646F4DLL, 0xE700000000000000, v33, v36, 600.0, 660.0);
}

int *static Component.modularCompact.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  char v37 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v31 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)type metadata accessor for Slot();
  unint64_t v13 = (*(unsigned __int8 *)(*((void *)v12 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v12 - 1) + 80);
  uint64_t v34 = *(void *)(*((void *)v12 - 1) + 72);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AFA7A0;
  uint64_t v35 = v14;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void (**)(void))(*(void *)(v16 - 8) + 56);
  uint64_t v36 = v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v11, 1, 1, v16);
  uint64_t v33 = v15 + v12[9];
  v17();
  uint64_t v18 = (void *)(v15 + v12[10]);
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v19 = v12[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v20 = v15 + v19;
  uint64_t v21 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v20);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v20 + *(int *)(v32 + 52)) = v21;
  *(void *)(v15 + 120) = 12627;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  long long v31 = xmmword_249AFF4C0;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF4D0;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF4C0;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  uint64_t v22 = (uint64_t)v36;
  sub_24992ED50((uint64_t)v36, v33);
  swift_bridgeObjectRelease();
  uint64_t v23 = v15 + v34;
  *uint64_t v18 = 0;
  v18[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v22, 1, 1, v16);
  uint64_t v24 = v23 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v24, 1, 1, v16);
  uint64_t v25 = (void *)(v23 + v12[10]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = v23 + v12[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  uint64_t v27 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v26);
  *(void *)(v26 + *(int *)(v32 + 52)) = v27;
  *(void *)(v23 + 120) = 12883;
  *(void *)(v23 + 128) = 0xE200000000000000;
  *(_OWORD *)uint64_t v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(void *)(v23 + 32) = 0;
  *(void *)(v23 + 40) = 1;
  long long v28 = v31;
  *(_OWORD *)(v23 + 48) = xmmword_249AFF4B0;
  *(_OWORD *)(v23 + 64) = v28;
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(void *)(v23 + 112) = 0;
  sub_24992ED50(v22, v24);
  swift_bridgeObjectRelease();
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v29 = (uint64_t)v37;
  sub_249AEB7F8();
  char v39 = 0;
  return Component.init(id:type:name:size:slots:)(v29, &v39, 0x2072616C75646F4DLL, 0xEF746361706D6F43, v35, v38, 600.0, 660.0);
}

int *static Component.sportLeft.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v70 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v69 = (char *)&v63 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v63 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)type metadata accessor for Slot();
  unint64_t v13 = (*(unsigned __int8 *)(*((void *)v12 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v12 - 1) + 80);
  uint64_t v74 = *(void *)(*((void *)v12 - 1) + 72);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AEFCA0;
  uint64_t v68 = v14;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(void))(v17 + 56);
  uint64_t v19 = v17 + 56;
  uint64_t v75 = v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v16);
  uint64_t v20 = v15 + v12[9];
  uint64_t v72 = v19;
  uint64_t v73 = v16;
  uint64_t v21 = v16;
  uint64_t v22 = v18;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v20, 1, 1, v21);
  uint64_t v23 = (void *)(v15 + v12[10]);
  *uint64_t v23 = 0;
  v23[1] = 0;
  uint64_t v24 = v12[11];
  sub_249AEB7F8();
  uint64_t v25 = (uint64_t)v6;
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v26 = v15 + v24;
  uint64_t v27 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v26);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v26 + *(int *)(v66 + 52)) = v27;
  *(void *)(v15 + 120) = 12611;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF4E0;
  *(int64x2_t *)(v15 + 64) = vdupq_n_s64(0x4077E00000000000uLL);
  long long v77 = 0u;
  long long v78 = 0u;
  long long v76 = 0u;
  *(double *)(v15 + 80) = sub_249990F74((uint64_t)&v76, 197.0, 84.0, 382.0, 382.0);
  *(void *)(v15 + 88) = v28;
  *(void *)(v15 + 96) = v29;
  *(void *)(v15 + 104) = v30;
  *(void *)(v15 + 112) = 0;
  uint64_t v31 = (uint64_t)v75;
  sub_24992ED50((uint64_t)v75, v20);
  swift_bridgeObjectRelease();
  uint64_t v32 = v15 + v74;
  *uint64_t v23 = 0;
  v23[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v22)(v31, 1, 1, v73);
  uint64_t v65 = v32 + v12[9];
  v22();
  uint64_t v33 = (void *)(v32 + v12[10]);
  *uint64_t v33 = 0;
  v33[1] = 0;
  uint64_t v34 = v32 + v12[11];
  sub_249AEB7F8();
  uint64_t v71 = v25;
  sub_2499A0464((uint64_t)v8, v25);
  uint64_t v35 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v25, v34);
  uint64_t v36 = v66;
  *(void *)(v34 + *(int *)(v66 + 52)) = v35;
  *(void *)(v32 + 120) = 12867;
  *(void *)(v32 + 128) = 0xE200000000000000;
  *(_OWORD *)uint64_t v32 = 0u;
  *(_OWORD *)(v32 + 16) = 0u;
  *(_OWORD *)(v32 + 32) = 0u;
  *(_OWORD *)(v32 + 48) = xmmword_249AFF4F0;
  int64x2_t v67 = vdupq_n_s64(0x4064600000000000uLL);
  *(int64x2_t *)(v32 + 64) = v67;
  long long v77 = 0u;
  long long v78 = 0u;
  long long v76 = 0u;
  *(double *)(v32 + 80) = sub_249990F74((uint64_t)&v76, 21.0, 245.0, 163.0, 163.0);
  *(void *)(v32 + 88) = v37;
  *(void *)(v32 + 96) = v38;
  *(void *)(v32 + 104) = v39;
  *(void *)(v32 + 112) = 0;
  uint64_t v40 = (uint64_t)v75;
  sub_24992ED50((uint64_t)v75, v65);
  swift_bridgeObjectRelease();
  uint64_t v65 = 2 * v74;
  unint64_t v41 = v15 + 2 * v74;
  *uint64_t v33 = 0;
  v33[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v22)(v40, 1, 1, v73);
  uint64_t v64 = v41 + v12[9];
  v22();
  uint64_t v42 = (void *)(v41 + v12[10]);
  *uint64_t v42 = 0;
  v42[1] = 0;
  uint64_t v43 = v41 + v12[11];
  sub_249AEB7F8();
  uint64_t v44 = v71;
  sub_2499A0464((uint64_t)v8, v71);
  uint64_t v45 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v44, v43);
  *(void *)(v43 + *(int *)(v36 + 52)) = v45;
  *(void *)(v41 + 120) = 13123;
  *(void *)(v41 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v41 = 0u;
  *(_OWORD *)(v41 + 16) = 0u;
  *(_OWORD *)(v41 + 32) = 0u;
  *(_OWORD *)(v41 + 48) = xmmword_249AFF500;
  *(int64x2_t *)(v41 + 64) = vdupq_n_s64(0x406B600000000000uLL);
  long long v77 = 0u;
  long long v78 = 0u;
  long long v76 = 0u;
  *(double *)(v41 + 80) = sub_249990F74((uint64_t)&v76, 71.0, 420.0, 219.0, 219.0);
  *(void *)(v41 + 88) = v46;
  *(void *)(v41 + 96) = v47;
  *(void *)(v41 + 104) = v48;
  *(void *)(v41 + 112) = 0;
  uint64_t v49 = (uint64_t)v75;
  sub_24992ED50((uint64_t)v75, v64);
  swift_bridgeObjectRelease();
  unint64_t v50 = v15 + v65 + v74;
  *uint64_t v42 = 0;
  v42[1] = 0;
  uint64_t v51 = v49;
  uint64_t v52 = v73;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v22)(v49, 1, 1, v73);
  uint64_t v53 = v50 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v22)(v53, 1, 1, v52);
  uint64_t v54 = (void *)(v50 + v12[10]);
  *uint64_t v54 = 0;
  v54[1] = 0;
  uint64_t v55 = v50 + v12[11];
  sub_249AEB7F8();
  uint64_t v56 = v71;
  sub_2499A0464((uint64_t)v8, v71);
  uint64_t v57 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v56, v55);
  *(void *)(v55 + *(int *)(v36 + 52)) = v57;
  *(void *)(v50 + 120) = 13379;
  *(void *)(v50 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v50 = 0u;
  *(_OWORD *)(v50 + 16) = 0u;
  *(_OWORD *)(v50 + 32) = 0u;
  *(_OWORD *)(v50 + 48) = xmmword_249AFF510;
  *(int64x2_t *)(v50 + 64) = v67;
  long long v77 = 0u;
  long long v78 = 0u;
  long long v76 = 0u;
  *(double *)(v50 + 80) = sub_249990F74((uint64_t)&v76, 417.0, 476.0, 163.0, 163.0);
  *(void *)(v50 + 88) = v58;
  *(void *)(v50 + 96) = v59;
  *(void *)(v50 + 104) = v60;
  *(void *)(v50 + 112) = 0;
  sub_24992ED50(v51, v53);
  swift_bridgeObjectRelease();
  *uint64_t v54 = 0;
  v54[1] = 0;
  uint64_t v61 = (uint64_t)v69;
  sub_249AEB7F8();
  LOBYTE(v76) = 0;
  return Component.init(id:type:name:size:slots:)(v61, (char *)&v76, 0x654C2074726F7053, 0xEA00000000007466, v68, v70, 600.0, 660.0);
}

int *static Component.sport.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v59 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v50 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)type metadata accessor for Slot();
  unint64_t v13 = (*(unsigned __int8 *)(*((void *)v12 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v12 - 1) + 80);
  uint64_t v62 = *(void *)(*((void *)v12 - 1) + 72);
  uint64_t v14 = (uint64_t)v6;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_249AFF3E0;
  uint64_t v58 = v15;
  unint64_t v16 = v15 + v13;
  uint64_t v17 = type metadata accessor for Instrument();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(void))(v18 + 56);
  uint64_t v20 = v18 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v19)(v11, 1, 1, v17);
  uint64_t v21 = v16 + v12[9];
  uint64_t v56 = v20;
  uint64_t v57 = v19;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v21, 1, 1, v17);
  uint64_t v22 = (void *)(v16 + v12[10]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v55 = v12;
  uint64_t v23 = v12[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, v14);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v24 = v16 + v23;
  uint64_t v25 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v14, v24);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v24 + *(int *)(v61 + 52)) = v25;
  *(void *)(v16 + 120) = 12621;
  *(void *)(v16 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(_OWORD *)(v16 + 32) = 0u;
  *(_OWORD *)(v16 + 48) = xmmword_249AFF520;
  *(int64x2_t *)(v16 + 64) = vdupq_n_s64(0x4082200000000000uLL);
  memset(v63, 0, 48);
  *(double *)(v16 + 80) = sub_249990F74((uint64_t)v63, 10.0, 40.0, 580.0, 580.0);
  *(void *)(v16 + 88) = v26;
  *(void *)(v16 + 96) = v27;
  *(void *)(v16 + 104) = v28;
  *(void *)(v16 + 112) = 0;
  sub_24992ED50((uint64_t)v11, v21);
  swift_bridgeObjectRelease();
  uint64_t v29 = v16 + v62;
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v30 = v17;
  uint64_t v53 = v17;
  uint64_t v31 = v57;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v57)(v11, 1, 1, v30);
  uint64_t v32 = v55;
  uint64_t v52 = v29 + v55[9];
  v31();
  uint64_t v33 = v32[10];
  uint64_t v51 = v11;
  uint64_t v34 = v14;
  uint64_t v35 = (void *)(v29 + v33);
  *uint64_t v35 = 0;
  v35[1] = 0;
  uint64_t v36 = v29 + v32[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, v34);
  uint64_t v37 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v34, v36);
  *(void *)(v36 + *(int *)(v61 + 52)) = v37;
  *(void *)(v29 + 120) = 12611;
  *(void *)(v29 + 128) = 0xE200000000000000;
  *(_OWORD *)uint64_t v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  *(void *)(v29 + 32) = 0;
  *(void *)(v29 + 40) = 1;
  *(void *)(v29 + 48) = 0;
  *(void *)(v29 + 56) = 0;
  long long v54 = xmmword_249AFF530;
  *(_OWORD *)(v29 + 64) = xmmword_249AFF530;
  *(_OWORD *)(v29 + 80) = 0u;
  *(_OWORD *)(v29 + 96) = 0u;
  *(void *)(v29 + 112) = 0;
  uint64_t v38 = (uint64_t)v51;
  sub_24992ED50((uint64_t)v51, v52);
  swift_bridgeObjectRelease();
  unint64_t v39 = v16 + 2 * v62;
  *uint64_t v35 = 0;
  v35[1] = 0;
  uint64_t v40 = v38;
  uint64_t v41 = v38;
  uint64_t v42 = v53;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v40, 1, 1, v53);
  uint64_t v43 = v39 + v32[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31)(v43, 1, 1, v42);
  uint64_t v44 = (void *)(v39 + v32[10]);
  *uint64_t v44 = 0;
  v44[1] = 0;
  uint64_t v45 = v39 + v32[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, v34);
  uint64_t v46 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v34, v45);
  *(void *)(v45 + *(int *)(v61 + 52)) = v46;
  *(void *)(v39 + 120) = 12867;
  *(void *)(v39 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v39 = 0u;
  *(_OWORD *)(v39 + 16) = 0u;
  *(void *)(v39 + 32) = 0;
  *(void *)(v39 + 40) = 1;
  long long v47 = v54;
  *(_OWORD *)(v39 + 48) = xmmword_249AFF540;
  *(_OWORD *)(v39 + 64) = v47;
  *(_OWORD *)(v39 + 80) = 0u;
  *(_OWORD *)(v39 + 96) = 0u;
  *(void *)(v39 + 112) = 0;
  sub_24992ED50(v41, v43);
  swift_bridgeObjectRelease();
  *uint64_t v44 = 0;
  v44[1] = 0;
  uint64_t v48 = (uint64_t)v59;
  sub_249AEB7F8();
  LOBYTE(v63[0]) = 0;
  return Component.init(id:type:name:size:slots:)(v48, (char *)v63, 0x74726F7053, 0xE500000000000000, v58, v60, 600.0, 660.0);
}

int *static Component.sportRight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v71 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v65 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)type metadata accessor for Slot();
  unint64_t v13 = (*(unsigned __int8 *)(*((void *)v12 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v12 - 1) + 80);
  uint64_t v78 = *(void *)(*((void *)v12 - 1) + 72);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AEFCA0;
  uint64_t v70 = v14;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(void))(v17 + 56);
  uint64_t v19 = v17 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v16);
  uint64_t v20 = v15 + v12[9];
  long long v76 = v18;
  uint64_t v77 = v16;
  uint64_t v68 = v19;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v20, 1, 1, v16);
  uint64_t v21 = (void *)(v15 + v12[10]);
  *uint64_t v21 = 0;
  v21[1] = 0;
  uint64_t v22 = v12[11];
  sub_249AEB7F8();
  uint64_t v23 = (uint64_t)v6;
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v24 = v15 + v22;
  uint64_t v25 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v24);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v24 + *(int *)(v75 + 52)) = v25;
  *(void *)(v15 + 120) = 12611;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(_OWORD *)(v15 + 32) = 0u;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF550;
  *(int64x2_t *)(v15 + 64) = vdupq_n_s64(0x4077E00000000000uLL);
  long long v80 = 0u;
  long long v81 = 0u;
  long long v79 = 0u;
  *(double *)(v15 + 80) = sub_249990F74((uint64_t)&v79, 21.0, 84.0, 382.0, 382.0);
  *(void *)(v15 + 88) = v26;
  *(void *)(v15 + 96) = v27;
  *(void *)(v15 + 104) = v28;
  *(void *)(v15 + 112) = 0;
  sub_24992ED50((uint64_t)v11, v20);
  swift_bridgeObjectRelease();
  uint64_t v29 = v11;
  uint64_t v73 = v11;
  uint64_t v30 = v77;
  uint64_t v31 = v15 + v78;
  *uint64_t v21 = 0;
  v21[1] = 0;
  uint64_t v32 = v76;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v76)(v29, 1, 1, v30);
  uint64_t v67 = v31 + v12[9];
  v32();
  uint64_t v33 = (void *)(v31 + v12[10]);
  *uint64_t v33 = 0;
  v33[1] = 0;
  uint64_t v34 = v31 + v12[11];
  sub_249AEB7F8();
  uint64_t v74 = v23;
  sub_2499A0464((uint64_t)v8, v23);
  uint64_t v35 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v23, v34);
  uint64_t v36 = v75;
  *(void *)(v34 + *(int *)(v75 + 52)) = v35;
  *(void *)(v31 + 120) = 12867;
  *(void *)(v31 + 128) = 0xE200000000000000;
  *(_OWORD *)uint64_t v31 = 0u;
  *(_OWORD *)(v31 + 16) = 0u;
  *(_OWORD *)(v31 + 32) = 0u;
  *(_OWORD *)(v31 + 48) = xmmword_249AFF560;
  int64x2_t v69 = vdupq_n_s64(0x4064600000000000uLL);
  *(int64x2_t *)(v31 + 64) = v69;
  long long v80 = 0u;
  long long v81 = 0u;
  long long v79 = 0u;
  *(double *)(v31 + 80) = sub_249990F74((uint64_t)&v79, 416.0, 245.0, 163.0, 163.0);
  *(void *)(v31 + 88) = v37;
  *(void *)(v31 + 96) = v38;
  *(void *)(v31 + 104) = v39;
  *(void *)(v31 + 112) = 0;
  uint64_t v40 = (uint64_t)v73;
  sub_24992ED50((uint64_t)v73, v67);
  swift_bridgeObjectRelease();
  uint64_t v67 = 2 * v78;
  unint64_t v41 = v15 + 2 * v78;
  *uint64_t v33 = 0;
  v33[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v32)(v40, 1, 1, v77);
  uint64_t v66 = v41 + v12[9];
  v32();
  uint64_t v42 = (void *)(v41 + v12[10]);
  *uint64_t v42 = 0;
  v42[1] = 0;
  uint64_t v43 = v41 + v12[11];
  sub_249AEB7F8();
  uint64_t v44 = v74;
  sub_2499A0464((uint64_t)v8, v74);
  uint64_t v45 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v44, v43);
  *(void *)(v43 + *(int *)(v36 + 52)) = v45;
  *(void *)(v41 + 120) = 13123;
  *(void *)(v41 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v41 = 0u;
  *(_OWORD *)(v41 + 16) = 0u;
  *(_OWORD *)(v41 + 32) = 0u;
  *(_OWORD *)(v41 + 48) = xmmword_249AFF570;
  *(int64x2_t *)(v41 + 64) = vdupq_n_s64(0x406B600000000000uLL);
  long long v80 = 0u;
  long long v81 = 0u;
  long long v79 = 0u;
  *(double *)(v41 + 80) = sub_249990F74((uint64_t)&v79, 310.0, 420.0, 219.0, 219.0);
  *(void *)(v41 + 88) = v46;
  *(void *)(v41 + 96) = v47;
  *(void *)(v41 + 104) = v48;
  *(void *)(v41 + 112) = 0;
  uint64_t v49 = (uint64_t)v73;
  sub_24992ED50((uint64_t)v73, v66);
  swift_bridgeObjectRelease();
  unint64_t v50 = v15 + v67 + v78;
  *uint64_t v42 = 0;
  v42[1] = 0;
  uint64_t v51 = v49;
  uint64_t v52 = v49;
  long long v54 = v76;
  uint64_t v53 = v77;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v76)(v51, 1, 1, v77);
  uint64_t v55 = v50 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v54)(v55, 1, 1, v53);
  uint64_t v56 = (void *)(v50 + v12[10]);
  *uint64_t v56 = 0;
  v56[1] = 0;
  uint64_t v57 = v50 + v12[11];
  sub_249AEB7F8();
  uint64_t v58 = v74;
  sub_2499A0464((uint64_t)v8, v74);
  uint64_t v59 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C(v58, v57);
  *(void *)(v57 + *(int *)(v75 + 52)) = v59;
  *(void *)(v50 + 120) = 13379;
  *(void *)(v50 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v50 = 0u;
  *(_OWORD *)(v50 + 16) = 0u;
  *(_OWORD *)(v50 + 32) = 0u;
  *(_OWORD *)(v50 + 48) = xmmword_249AFF580;
  *(int64x2_t *)(v50 + 64) = v69;
  long long v80 = 0u;
  long long v81 = 0u;
  long long v79 = 0u;
  *(double *)(v50 + 80) = sub_249990F74((uint64_t)&v79, 20.0, 476.0, 163.0, 163.0);
  *(void *)(v50 + 88) = v60;
  *(void *)(v50 + 96) = v61;
  *(void *)(v50 + 104) = v62;
  *(void *)(v50 + 112) = 0;
  sub_24992ED50(v52, v55);
  swift_bridgeObjectRelease();
  *uint64_t v56 = 0;
  v56[1] = 0;
  uint64_t v63 = (uint64_t)v71;
  sub_249AEB7F8();
  LOBYTE(v79) = 0;
  return Component.init(id:type:name:size:slots:)(v63, (char *)&v79, 0x69522074726F7053, 0xEB00000000746867, v70, v72, 600.0, 660.0);
}

int *static Component.mapsMediaContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)(type metadata accessor for Slot() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AF0A70;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v11, 1, 1, v16);
  uint64_t v18 = v14 + v13 + v12[11];
  v17((char *)(v15 + v12[11]), 1, 1, v16);
  uint64_t v19 = (void *)(v15 + v12[12]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = v12[13];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v21 = v15 + v20;
  uint64_t v22 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v21);
  *(void *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v22;
  *(void *)(v15 + 120) = 12883;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(void *)(v15 + 48) = 0;
  *(void *)(v15 + 56) = 0;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF3B0;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  sub_24992ED50((uint64_t)v11, v18);
  swift_bridgeObjectRelease();
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v23 = (uint64_t)v26;
  sub_249AEB7F8();
  char v28 = 0;
  return Component.init(id:type:name:size:slots:)(v23, &v28, 0xD00000000000001ELL, 0x8000000249B162F0, v14, v27, 1920.0, 720.0);
}

int *static Component.mapsMediaLong.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)(type metadata accessor for Slot() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AF0A70;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v11, 1, 1, v16);
  uint64_t v18 = v14 + v13 + v12[11];
  v17((char *)(v15 + v12[11]), 1, 1, v16);
  uint64_t v19 = (void *)(v15 + v12[12]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = v12[13];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v21 = v15 + v20;
  uint64_t v22 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v21);
  *(void *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v22;
  *(void *)(v15 + 120) = 12627;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF590;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF5A0;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  sub_24992ED50((uint64_t)v11, v18);
  swift_bridgeObjectRelease();
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v23 = (uint64_t)v26;
  sub_249AEB7F8();
  char v28 = 0;
  return Component.init(id:type:name:size:slots:)(v23, &v28, 0xD00000000000001BLL, 0x8000000249B16310, v14, v27, 1920.0, 720.0);
}

int *static Component.mapsMediaLeft.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v35 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)type metadata accessor for Slot();
  unint64_t v13 = (*(unsigned __int8 *)(*((void *)v12 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v12 - 1) + 80);
  uint64_t v32 = *(void *)(*((void *)v12 - 1) + 72);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AFA7A0;
  uint64_t v33 = v14;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void (**)(void))(*(void *)(v16 - 8) + 56);
  uint64_t v34 = v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v11, 1, 1, v16);
  uint64_t v31 = v15 + v12[9];
  v17();
  uint64_t v18 = (void *)(v15 + v12[10]);
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v19 = v12[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v20 = v15 + v19;
  uint64_t v21 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v20);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v20 + *(int *)(v30 + 52)) = v21;
  *(void *)(v15 + 120) = 12627;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF590;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF5B0;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  uint64_t v22 = (uint64_t)v34;
  sub_24992ED50((uint64_t)v34, v31);
  swift_bridgeObjectRelease();
  uint64_t v23 = v15 + v32;
  *uint64_t v18 = 0;
  v18[1] = 0;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v22, 1, 1, v16);
  uint64_t v24 = v23 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17)(v24, 1, 1, v16);
  uint64_t v25 = (void *)(v23 + v12[10]);
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v26 = v23 + v12[11];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  uint64_t v27 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v26);
  *(void *)(v26 + *(int *)(v30 + 52)) = v27;
  *(void *)(v23 + 120) = 12883;
  *(void *)(v23 + 128) = 0xE200000000000000;
  *(_OWORD *)uint64_t v23 = 0u;
  *(_OWORD *)(v23 + 16) = 0u;
  *(void *)(v23 + 32) = 0;
  *(void *)(v23 + 40) = 1;
  *(_OWORD *)(v23 + 48) = xmmword_249AFF5C0;
  *(_OWORD *)(v23 + 64) = xmmword_249AFF5D0;
  *(_OWORD *)(v23 + 80) = 0u;
  *(_OWORD *)(v23 + 96) = 0u;
  *(void *)(v23 + 112) = 0;
  sub_24992ED50(v22, v24);
  swift_bridgeObjectRelease();
  *uint64_t v25 = 0;
  v25[1] = 0;
  uint64_t v28 = (uint64_t)v35;
  sub_249AEB7F8();
  char v37 = 0;
  return Component.init(id:type:name:size:slots:)(v28, &v37, 0xD00000000000001BLL, 0x8000000249B16330, v33, v36, 600.0, 720.0);
}

int *static Component.mapsMediaCenter.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v25 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)(type metadata accessor for Slot() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AF0A70;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v11, 1, 1, v16);
  uint64_t v18 = v14 + v13 + v12[11];
  v17((char *)(v15 + v12[11]), 1, 1, v16);
  uint64_t v19 = (void *)(v15 + v12[12]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = v12[13];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v21 = v15 + v20;
  uint64_t v22 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v21);
  *(void *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v22;
  *(void *)(v15 + 120) = 12627;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF590;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF5E0;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  sub_24992ED50((uint64_t)v11, v18);
  swift_bridgeObjectRelease();
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v23 = (uint64_t)v26;
  sub_249AEB7F8();
  char v28 = 0;
  return Component.init(id:type:name:size:slots:)(v23, &v28, 0xD00000000000001DLL, 0x8000000249B16350, v14, v27, 600.0, 720.0);
}

int *static Component.mapsMediaRight.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v53 = (char *)&v46 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  long long v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v46 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)type metadata accessor for Slot();
  unint64_t v13 = (*(unsigned __int8 *)(*((void *)v12 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v12 - 1) + 80);
  uint64_t v56 = *(void *)(*((void *)v12 - 1) + 72);
  uint64_t v14 = (uint64_t)v6;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_249AFF3E0;
  uint64_t v52 = v15;
  unint64_t v16 = v15 + v13;
  uint64_t v17 = type metadata accessor for Instrument();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void (**)(void))(v18 + 56);
  uint64_t v20 = v18 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v19)(v11, 1, 1, v17);
  uint64_t v21 = v16 + v12[9];
  uint64_t v50 = v20;
  uint64_t v51 = v19;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19)(v21, 1, 1, v17);
  uint64_t v22 = (void *)(v16 + v12[10]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = v12[11];
  sub_249AEB7F8();
  uint64_t v24 = (uint64_t)v8;
  sub_2499A0464((uint64_t)v8, v14);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v25 = v16 + v23;
  uint64_t v26 = qword_2696E2ED8;
  sub_2499A04CC(v24);
  sub_2499A052C(v14, v25);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v25 + *(int *)(v55 + 52)) = v26;
  *(void *)(v16 + 120) = 12627;
  *(void *)(v16 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v16 = 0u;
  *(_OWORD *)(v16 + 16) = 0u;
  *(void *)(v16 + 32) = 0;
  *(void *)(v16 + 40) = 1;
  *(_OWORD *)(v16 + 48) = xmmword_249AFF590;
  *(_OWORD *)(v16 + 64) = xmmword_249AFF5F0;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(void *)(v16 + 112) = 0;
  sub_24992ED50((uint64_t)v11, v21);
  swift_bridgeObjectRelease();
  uint64_t v27 = v16 + v56;
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v28 = v17;
  uint64_t v49 = v17;
  uint64_t v29 = v51;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v51)(v11, 1, 1, v28);
  uint64_t v48 = v27 + v12[9];
  v29();
  uint64_t v30 = v12[10];
  uint64_t v47 = v11;
  uint64_t v31 = v14;
  uint64_t v32 = (void *)(v27 + v30);
  *uint64_t v32 = 0;
  v32[1] = 0;
  uint64_t v33 = v27 + v12[11];
  sub_249AEB7F8();
  sub_2499A0464(v24, v31);
  uint64_t v34 = qword_2696E2ED8;
  sub_2499A04CC(v24);
  sub_2499A052C(v31, v33);
  *(void *)(v33 + *(int *)(v55 + 52)) = v34;
  *(void *)(v27 + 120) = 12883;
  *(void *)(v27 + 128) = 0xE200000000000000;
  *(_OWORD *)uint64_t v27 = 0u;
  *(_OWORD *)(v27 + 16) = 0u;
  *(void *)(v27 + 32) = 0;
  *(void *)(v27 + 40) = 1;
  *(_OWORD *)(v27 + 48) = xmmword_249AFF600;
  *(_OWORD *)(v27 + 64) = xmmword_249AFF610;
  *(_OWORD *)(v27 + 80) = 0u;
  *(_OWORD *)(v27 + 96) = 0u;
  *(void *)(v27 + 112) = 0;
  uint64_t v35 = (uint64_t)v47;
  sub_24992ED50((uint64_t)v47, v48);
  swift_bridgeObjectRelease();
  unint64_t v36 = v16 + 2 * v56;
  *uint64_t v32 = 0;
  v32[1] = 0;
  uint64_t v37 = v35;
  uint64_t v38 = v35;
  uint64_t v39 = v49;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29)(v37, 1, 1, v49);
  uint64_t v40 = v36 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29)(v40, 1, 1, v39);
  unint64_t v41 = (void *)(v36 + v12[10]);
  *unint64_t v41 = 0;
  v41[1] = 0;
  uint64_t v42 = v36 + v12[11];
  sub_249AEB7F8();
  sub_2499A0464(v24, v31);
  uint64_t v43 = qword_2696E2ED8;
  sub_2499A04CC(v24);
  sub_2499A052C(v31, v42);
  *(void *)(v42 + *(int *)(v55 + 52)) = v43;
  *(void *)(v36 + 120) = 13139;
  *(void *)(v36 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v36 = 0u;
  *(_OWORD *)(v36 + 16) = 0u;
  *(void *)(v36 + 32) = 0;
  *(void *)(v36 + 40) = 1;
  *(_OWORD *)(v36 + 48) = xmmword_249AFF620;
  *(_OWORD *)(v36 + 64) = xmmword_249AFF630;
  *(_OWORD *)(v36 + 80) = 0u;
  *(_OWORD *)(v36 + 96) = 0u;
  *(void *)(v36 + 112) = 0;
  sub_24992ED50(v38, v40);
  swift_bridgeObjectRelease();
  *unint64_t v41 = 0;
  v41[1] = 0;
  uint64_t v44 = (uint64_t)v53;
  sub_249AEB7F8();
  char v57 = 0;
  return Component.init(id:type:name:size:slots:)(v44, &v57, 0xD00000000000001CLL, 0x8000000249B16370, v52, v54, 600.0, 720.0);
}

uint64_t static LayoutTemplate.clusterTemplates.getter()
{
  return sub_24999EDD8(&qword_2696DD670);
}

uint64_t sub_24999E894()
{
  uint64_t v0 = sub_249AEB808();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Component();
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A38);
  uint64_t v7 = (int *)type metadata accessor for LayoutTemplate();
  unint64_t v8 = (*(unsigned __int8 *)(*((void *)v7 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v7 - 1) + 80);
  uint64_t v9 = swift_allocObject();
  long long v17 = xmmword_249AF0A70;
  *(_OWORD *)(v9 + 16) = xmmword_249AF0A70;
  if (qword_2696DD660 != -1) {
    swift_once();
  }
  unint64_t v10 = v9 + v8;
  long long v11 = xmmword_2696E19A0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE338);
  uint64_t v12 = *(void *)(type metadata accessor for Zone() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = v17;
  static Component.content.getter((uint64_t)v6);
  sub_24999B26C(0x6163696669746F4ELL, 0xEC0000006E6F6974, (uint64_t)v6, v14 + v13, 660.0, 150.0, 600.0, 660.0);
  sub_249AEB7F8();
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(v10, v3, v0);
  unint64_t v16 = (void *)(v10 + v7[5]);
  *unint64_t v16 = 0x656C6F736E6F43;
  v16[1] = 0xE700000000000000;
  *(void *)(v10 + v7[7]) = v14;
  *(_OWORD *)(v10 + v7[6]) = v11;
  qword_2696E19D8 = v9;
  return result;
}

uint64_t static LayoutTemplate.centerConsoleTemplates.getter()
{
  return sub_24999EDD8(&qword_2696DD678);
}

uint64_t sub_24999EBCC()
{
  uint64_t v0 = sub_249AEB808();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A38);
  uint64_t v4 = (int *)type metadata accessor for LayoutTemplate();
  unint64_t v5 = (*(unsigned __int8 *)(*((void *)v4 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v4 - 1) + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_249AF0A70;
  if (qword_2696DD668 != -1) {
    swift_once();
  }
  unint64_t v7 = v6 + v5;
  long long v8 = xmmword_2696E19C0;
  sub_249AEB7F8();
  uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(v7, v3, v0);
  unint64_t v10 = (void *)(v7 + v4[5]);
  *unint64_t v10 = 0x65676E6573736150;
  v10[1] = 0xE900000000000072;
  *(void *)(v7 + v4[7]) = MEMORY[0x263F8EE78];
  *(_OWORD *)(v7 + v4[6]) = v8;
  qword_2696E19E0 = v6;
  return result;
}

uint64_t static LayoutTemplate.passengerTemplates.getter()
{
  return sub_24999EDD8(&qword_2696DD680);
}

uint64_t sub_24999EDD8(void *a1)
{
  if (*a1 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t static LayoutTemplate.primaryTemplates(for:)(unsigned char *a1)
{
  if (*a1)
  {
    if (*a1 == 1)
    {
      if (qword_2696DD678 == -1) {
        goto LABEL_8;
      }
    }
    else if (qword_2696DD680 == -1)
    {
      goto LABEL_8;
    }
LABEL_11:
    swift_once();
    goto LABEL_8;
  }
  if (qword_2696DD670 != -1) {
    goto LABEL_11;
  }
LABEL_8:

  return swift_bridgeObjectRetain();
}

uint64_t static Component.all.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E8);
  uint64_t v0 = *(void *)(type metadata accessor for Component() - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_249AFF640;
  uint64_t v4 = v3 + v2;
  static Component.circular.getter(v4);
  static Component.sportLeft.getter(v4 + v1);
  static Component.sport.getter(v4 + 2 * v1);
  static Component.mapsMediaLong.getter(v4 + 3 * v1);
  static Component.mapsMediaLeft.getter(v4 + 4 * v1);
  static Component.mapsMediaRight.getter(v4 + 5 * v1);
  static Component.mapsMediaCenter.getter(v4 + 6 * v1);
  static Component.sportRight.getter(v4 + 7 * v1);
  static Component.modular.getter(v4 + 8 * v1);
  static Component.modularCompact.getter(v4 + 9 * v1);
  static Component.modularMinimal.getter(v4 + 10 * v1);
  static Component.content.getter(v4 + 11 * v1);
  static Component.overlay.getter(v4 + 12 * v1);
  return v3;
}

int *static Component.modularMinimal.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v8 = (char *)&v25 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)(type metadata accessor for Slot() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AF0A70;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  long long v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v11, 1, 1, v16);
  uint64_t v18 = v14 + v13 + v12[11];
  v17((char *)(v15 + v12[11]), 1, 1, v16);
  uint64_t v19 = (void *)(v15 + v12[12]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = v12[13];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v21 = v15 + v20;
  uint64_t v22 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v21);
  *(void *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v22;
  *(void *)(v15 + 120) = 12627;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF4B0;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF4C0;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  sub_24992ED50((uint64_t)v11, v18);
  swift_bridgeObjectRelease();
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v23 = (uint64_t)v26;
  sub_249AEB7F8();
  char v28 = 0;
  return Component.init(id:type:name:size:slots:)(v23, &v28, 0x2072616C75646F4DLL, 0xEF6C616D696E694DLL, v14, v27, 600.0, 660.0);
}

int *static Component.overlay.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v26 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v8 = (char *)&v25 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)(type metadata accessor for Slot() - 8);
  unint64_t v13 = (*(unsigned __int8 *)(*(void *)v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AF0A70;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  long long v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v11, 1, 1, v16);
  uint64_t v18 = v14 + v13 + v12[11];
  v17((char *)(v15 + v12[11]), 1, 1, v16);
  uint64_t v19 = (void *)(v15 + v12[12]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v20 = v12[13];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v8, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v21 = v15 + v20;
  uint64_t v22 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v8);
  sub_2499A052C((uint64_t)v6, v21);
  *(void *)(v21 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v22;
  *(void *)(v15 + 120) = 12623;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(void *)(v15 + 48) = 0;
  *(void *)(v15 + 56) = 0;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF480;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  sub_24992ED50((uint64_t)v11, v18);
  swift_bridgeObjectRelease();
  *uint64_t v19 = 0;
  v19[1] = 0;
  uint64_t v23 = (uint64_t)v26;
  sub_249AEB7F8();
  return Component.init(id:type:name:size:slots:)(v23, &v28, 0x79616C7265764FLL, 0xE700000000000000, v14, v27, 600.0, 660.0);
}

double sub_24999F720()
{
  double result = 282.0;
  xmmword_26972C790 = xmmword_249AFF650;
  return result;
}

void sub_24999F734()
{
  qword_26972C7A0 = 0x4074A00000000000;
}

double static Component.cornerRadius(for:)(double a1)
{
  return a1 * 0.5 + 15.0 + 20.0;
}

double sub_24999F764()
{
  double result = 300.0;
  xmmword_26972C7B0 = xmmword_249AFF660;
  return result;
}

int *static Component.modularOverlapping.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v60 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  long long v8 = (char *)&v56 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v12 = (int *)type metadata accessor for Slot();
  unint64_t v13 = (*(unsigned __int8 *)(*((void *)v12 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v12 - 1) + 80);
  uint64_t v68 = *(void *)(*((void *)v12 - 1) + 72);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_249AEFCA0;
  uint64_t v59 = v14;
  unint64_t v15 = v14 + v13;
  uint64_t v16 = type metadata accessor for Instrument();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(void))(v17 + 56);
  uint64_t v19 = v17 + 56;
  uint64_t v20 = (uint64_t)v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v18)(v11, 1, 1, v16);
  uint64_t v21 = v15 + v12[9];
  uint64_t v64 = v16;
  uint64_t v65 = v18;
  uint64_t v58 = v19;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v18)(v21, 1, 1, v16);
  uint64_t v22 = (void *)(v15 + v12[10]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v23 = v12[11];
  sub_249AEB7F8();
  uint64_t v24 = (uint64_t)v8;
  uint64_t v25 = (uint64_t)v8;
  uint64_t v26 = (uint64_t)v6;
  sub_2499A0464(v25, (uint64_t)v6);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v27 = v15 + v23;
  uint64_t v28 = qword_2696E2ED8;
  sub_2499A04CC(v24);
  sub_2499A052C(v26, v27);
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  *(void *)(v27 + *(int *)(v67 + 52)) = v28;
  *(void *)(v15 + 120) = 12627;
  *(void *)(v15 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  long long v66 = xmmword_249AFF680;
  *(void *)(v15 + 32) = 0;
  *(void *)(v15 + 40) = 1;
  *(_OWORD *)(v15 + 48) = xmmword_249AFF670;
  *(_OWORD *)(v15 + 64) = xmmword_249AFF680;
  *(_OWORD *)(v15 + 80) = 0u;
  *(_OWORD *)(v15 + 96) = 0u;
  *(void *)(v15 + 112) = 0;
  uint64_t v62 = v20;
  sub_24992ED50(v20, v21);
  swift_bridgeObjectRelease();
  uint64_t v29 = v15 + v68;
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v30 = v65;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v20, 1, 1, v64);
  uint64_t v57 = v29 + v12[9];
  v30();
  uint64_t v31 = (void *)(v29 + v12[10]);
  *uint64_t v31 = 0;
  v31[1] = 0;
  uint64_t v32 = v29 + v12[11];
  sub_249AEB7F8();
  sub_2499A0464(v24, v26);
  uint64_t v63 = v26;
  uint64_t v33 = qword_2696E2ED8;
  sub_2499A04CC(v24);
  sub_2499A052C(v26, v32);
  *(void *)(v32 + *(int *)(v67 + 52)) = v33;
  *(void *)(v29 + 120) = 12883;
  *(void *)(v29 + 128) = 0xE200000000000000;
  *(_OWORD *)uint64_t v29 = 0u;
  *(_OWORD *)(v29 + 16) = 0u;
  *(void *)(v29 + 32) = 0;
  *(void *)(v29 + 40) = 1;
  long long v34 = v66;
  *(_OWORD *)(v29 + 48) = xmmword_249AFF690;
  *(_OWORD *)(v29 + 64) = v34;
  *(_OWORD *)(v29 + 80) = 0u;
  *(_OWORD *)(v29 + 96) = 0u;
  *(void *)(v29 + 112) = 0;
  uint64_t v35 = v62;
  sub_24992ED50(v62, v57);
  swift_bridgeObjectRelease();
  uint64_t v57 = 2 * v68;
  unint64_t v36 = v15 + 2 * v68;
  *uint64_t v31 = 0;
  v31[1] = 0;
  uint64_t v37 = v64;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v30)(v35, 1, 1, v64);
  uint64_t v56 = v36 + v12[9];
  v30();
  uint64_t v38 = (void *)(v36 + v12[10]);
  *uint64_t v38 = 0;
  v38[1] = 0;
  uint64_t v39 = v36 + v12[11];
  sub_249AEB7F8();
  uint64_t v40 = v63;
  sub_2499A0464(v24, v63);
  uint64_t v41 = qword_2696E2ED8;
  sub_2499A04CC(v24);
  sub_2499A052C(v40, v39);
  *(void *)(v39 + *(int *)(v67 + 52)) = v41;
  *(void *)(v36 + 120) = 13139;
  *(void *)(v36 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v36 = 0u;
  *(_OWORD *)(v36 + 16) = 0u;
  *(void *)(v36 + 32) = 0;
  *(void *)(v36 + 40) = 1;
  long long v42 = v66;
  *(_OWORD *)(v36 + 48) = xmmword_249AFF6A0;
  *(_OWORD *)(v36 + 64) = v42;
  *(_OWORD *)(v36 + 80) = 0u;
  *(_OWORD *)(v36 + 96) = 0u;
  *(void *)(v36 + 112) = 0;
  uint64_t v43 = v62;
  sub_24992ED50(v62, v56);
  swift_bridgeObjectRelease();
  unint64_t v44 = v15 + v57 + v68;
  *uint64_t v38 = 0;
  v38[1] = 0;
  uint64_t v45 = v43;
  uint64_t v46 = v43;
  uint64_t v47 = v65;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v65)(v45, 1, 1, v37);
  uint64_t v48 = v44 + v12[9];
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47)(v48, 1, 1, v37);
  uint64_t v49 = (void *)(v44 + v12[10]);
  *uint64_t v49 = 0;
  v49[1] = 0;
  uint64_t v50 = v44 + v12[11];
  sub_249AEB7F8();
  uint64_t v51 = v63;
  sub_2499A0464(v24, v63);
  uint64_t v52 = qword_2696E2ED8;
  sub_2499A04CC(v24);
  sub_2499A052C(v51, v50);
  *(void *)(v50 + *(int *)(v67 + 52)) = v52;
  *(void *)(v44 + 120) = 13395;
  *(void *)(v44 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v44 = 0u;
  *(_OWORD *)(v44 + 16) = 0u;
  *(void *)(v44 + 32) = 0;
  *(void *)(v44 + 40) = 1;
  long long v53 = v66;
  *(_OWORD *)(v44 + 48) = xmmword_249AFF6B0;
  *(_OWORD *)(v44 + 64) = v53;
  *(_OWORD *)(v44 + 80) = 0u;
  *(_OWORD *)(v44 + 96) = 0u;
  *(void *)(v44 + 112) = 0;
  sub_24992ED50(v46, v48);
  swift_bridgeObjectRelease();
  *uint64_t v49 = 0;
  v49[1] = 0;
  uint64_t v54 = (uint64_t)v60;
  sub_249AEB7F8();
  char v69 = 0;
  return Component.init(id:type:name:size:slots:)(v54, &v69, 0xD000000000000013, 0x8000000249B16390, v59, v61, 600.0, 660.0);
}

int *static Component.video(for:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v38 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v37 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  unint64_t v36 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v35 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE2E0);
  uint64_t v18 = (int *)(type metadata accessor for Slot() - 8);
  unint64_t v19 = (*(unsigned __int8 *)(*(void *)v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v18 + 80);
  uint64_t v20 = swift_allocObject();
  long long v35 = xmmword_249AF0A70;
  *(_OWORD *)(v20 + 16) = xmmword_249AF0A70;
  unint64_t v21 = v20 + v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE0C8);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v35;
  swift_beginAccess();
  LOBYTE(v40[0]) = byte_2696DE830;
  HIDWORD(v40[0]) = dword_2696DE834;
  v40[1] = 1056964608;
  v40[2] = 0x3FB999999999999ALL;
  v40[3] = 0;
  v40[4] = 0;
  v40[5] = 0x3FF0000000000000;
  v40[6] = 1056964608;
  v40[7] = 0x3FB999999999999ALL;
  v40[8] = 0;
  v40[9] = 0;
  v40[10] = 0x3FF0000000000000;
  sub_2498A4888(v40);
  sub_249890C54((uint64_t)v40, v22 + 32);
  VisibilityConfiguration.init(arrayLiteral:)((void *)v22, v41);
  uint64_t v23 = v41[0];
  v41[0] = 0x6956656E6F685069;
  v41[1] = 0xEB000000006F6564;
  v41[2] = v23;
  sub_2498A492C(v41);
  sub_2498A4990((uint64_t)v41, (uint64_t)v39);
  sub_249AEB7F8();
  uint64_t v24 = sub_249AEC888();
  Instrument.init(id:kind:backgroundColor:shadowID:)((uint64_t)v14, (uint64_t)v39, v24, 0, 0, (uint64_t)v17);
  uint64_t v25 = type metadata accessor for Instrument();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56);
  v26(v17, 0, 1, v25);
  uint64_t v27 = v21 + v18[11];
  v26((char *)v27, 1, 1, v25);
  uint64_t v28 = (uint64_t)v36;
  uint64_t v29 = (void *)(v21 + v18[12]);
  *uint64_t v29 = 0;
  v29[1] = 0;
  uint64_t v30 = v18[13];
  sub_249AEB7F8();
  sub_2499A0464((uint64_t)v11, v28);
  if (qword_2696DD758 != -1) {
    swift_once();
  }
  uint64_t v31 = v21 + v30;
  uint64_t v32 = qword_2696E2ED8;
  sub_2499A04CC((uint64_t)v11);
  sub_2499A052C(v28, v31);
  *(void *)(v31 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410) + 52)) = v32;
  *(void *)(v21 + 120) = 12397;
  *(void *)(v21 + 128) = 0xE200000000000000;
  *(_OWORD *)unint64_t v21 = 0u;
  *(_OWORD *)(v21 + 16) = 0u;
  *(void *)(v21 + 32) = 0;
  *(void *)(v21 + 40) = 1;
  *(void *)(v21 + 48) = 0;
  *(void *)(v21 + 56) = 0;
  *(double *)(v21 + 64) = a2;
  *(double *)(v21 + 72) = a3;
  *(_OWORD *)(v21 + 80) = 0u;
  *(_OWORD *)(v21 + 96) = 0u;
  *(void *)(v21 + 112) = 0;
  sub_24992ED50((uint64_t)v17, v27);
  swift_bridgeObjectRelease();
  *uint64_t v29 = 0;
  v29[1] = 0;
  uint64_t v33 = (uint64_t)v37;
  sub_249AEB7F8();
  v39[0] = 0;
  return Component.init(id:type:name:size:slots:)(v33, v39, 0x746E65746E6F43, 0xE700000000000000, v20, v38, a2, a3);
}

uint64_t sub_2499A02AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_2499A0314()
{
  unint64_t result = qword_2696E19F0;
  if (!qword_2696E19F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E19F0);
  }
  return result;
}

uint64_t sub_2499A0368(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0CF8);
    sub_2499A05DC(a2, (void (*)(uint64_t))type metadata accessor for Zone);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2499A03FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2499A0464(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499A04CC(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2499A052C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499A0594()
{
  return sub_2499A05DC(&qword_2696DF388, MEMORY[0x263F07508]);
}

uint64_t sub_2499A05DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for LayoutTemplate(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_249AEB808();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for LayoutTemplate(uint64_t a1)
{
  uint64_t v2 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayoutTemplate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayoutTemplate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LayoutTemplate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for LayoutTemplate(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayoutTemplate(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499A0A60);
}

uint64_t sub_2499A0A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_249AEB808();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for LayoutTemplate(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499A0B38);
}

uint64_t sub_2499A0B38(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_249AEB808();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2499A0BF8()
{
  uint64_t result = sub_249AEB808();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutTemplate.Constants()
{
  return &type metadata for LayoutTemplate.Constants;
}

unsigned char *storeEnumTagSinglePayload for LayoutTemplate.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499A0D80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LayoutTemplate.CodingKeys()
{
  return &type metadata for LayoutTemplate.CodingKeys;
}

unint64_t sub_2499A0DBC()
{
  unint64_t result = qword_2696E1A20;
  if (!qword_2696E1A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1A20);
  }
  return result;
}

unint64_t sub_2499A0E14()
{
  unint64_t result = qword_2696E1A28;
  if (!qword_2696E1A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1A28);
  }
  return result;
}

unint64_t sub_2499A0E6C()
{
  unint64_t result = qword_2696E1A30;
  if (!qword_2696E1A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1A30);
  }
  return result;
}

uint64_t sub_2499A0EC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656E6F7ALL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2499A103C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_2499A109C(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    long long v5 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 32);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = sub_249AEC548();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_2499A1168(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 32);
  uint64_t v3 = sub_249AEC548();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

_OWORD *sub_2499A11D0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_249AEC548();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

void *sub_2499A124C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_249AEC548();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_2499A12E0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_249AEC548();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_2499A135C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_249AEC548();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_2499A13E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499A13FC);
}

uint64_t sub_2499A13FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 32);
  uint64_t v5 = sub_249AEC548();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_2499A146C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499A1480);
}

uint64_t sub_2499A1480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 32);
  uint64_t v6 = sub_249AEC548();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t type metadata accessor for ScaledSystemFont()
{
  uint64_t result = qword_2696E1A40;
  if (!qword_2696E1A40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2499A1540()
{
  uint64_t result = sub_249AEC548();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2499A15E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499A15FC@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v65 = a3;
  uint64_t v4 = sub_249AEC268();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v63 = v4;
  uint64_t v64 = v5;
  MEMORY[0x270FA5388](v4);
  uint64_t v62 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A58);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A60);
  uint64_t v11 = v10 - 8;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A68) - 8;
  MEMORY[0x270FA5388](v57);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A70) - 8;
  MEMORY[0x270FA5388](v58);
  uint64_t v56 = (uint64_t)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A78) - 8;
  MEMORY[0x270FA5388](v61);
  uint64_t v59 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_249AEBC48();
  sub_249AEBC48();
  uint64_t v18 = (char *)a2 + *(int *)(type metadata accessor for ScaledSystemFont() + 32);
  uint64_t v19 = sub_249AEC548();
  uint64_t v20 = *(void *)(v19 - 8);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v9, v18, v19);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v19);
  uint64_t v21 = sub_249AEC588();
  sub_2498D60E8((uint64_t)v9, &qword_2696E1A58);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A50);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v13, v60, v23);
  uint64_t v24 = (uint64_t *)&v13[*(int *)(v11 + 44)];
  *uint64_t v24 = KeyPath;
  v24[1] = v21;
  uint64_t v25 = *a2;
  uint64_t v26 = swift_getKeyPath();
  sub_2498D6084((uint64_t)v13, (uint64_t)v15, &qword_2696E1A60);
  uint64_t v27 = &v15[*(int *)(v57 + 44)];
  *(void *)uint64_t v27 = v26;
  *((void *)v27 + 1) = v25;
  v27[16] = 0;
  sub_2498D60E8((uint64_t)v13, &qword_2696E1A60);
  uint64_t v28 = a2[1];
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = v56;
  sub_2498D6084((uint64_t)v15, v56, &qword_2696E1A68);
  uint64_t v31 = (uint64_t *)(v30 + *(int *)(v58 + 44));
  *uint64_t v31 = v29;
  v31[1] = v28;
  sub_2498D60E8((uint64_t)v15, &qword_2696E1A68);
  uint64_t v32 = v62;
  sub_249AEC2D8();
  uint64_t v33 = v63;
  sub_249AEBC58();
  CGFloat v35 = v34;
  CGFloat v37 = v36;
  CGFloat v39 = v38;
  CGFloat v41 = v40;
  long long v42 = *(void (**)(char *, uint64_t))(v64 + 8);
  v42(v32, v33);
  v66.origin.x = v35;
  v66.origin.y = v37;
  v66.size.double width = v39;
  v66.size.double height = v41;
  CGFloat MidX = CGRectGetMidX(v66);
  sub_249AEC2D8();
  sub_249AEBC58();
  CGFloat v45 = v44;
  CGFloat v47 = v46;
  CGFloat v49 = v48;
  CGFloat v51 = v50;
  v42(v32, v33);
  v67.origin.x = v45;
  v67.origin.y = v47;
  v67.size.double width = v49;
  v67.size.double height = v51;
  CGFloat MidY = CGRectGetMidY(v67);
  uint64_t v53 = v59;
  sub_2498D6084(v30, v59, &qword_2696E1A70);
  uint64_t v54 = (CGFloat *)(v53 + *(int *)(v61 + 44));
  *uint64_t v54 = MidX;
  v54[1] = MidY;
  sub_2498D60E8(v30, &qword_2696E1A70);
  return sub_2499A2038(v53, v65);
}

uint64_t sub_2499A1B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (**a3)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A50);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  sub_2499A1CFC(v4, (uint64_t)v9);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v14 = (v12 + *(unsigned __int8 *)(v7 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v13, (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t result = sub_2499A1ED4((uint64_t)v9, v15 + v14);
  *a3 = sub_2499A1F38;
  a3[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v15;
  return result;
}

uint64_t sub_2499A1CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScaledSystemFont();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499A1D60()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A50);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (int *)(type metadata accessor for ScaledSystemFont() - 8);
  uint64_t v7 = *(unsigned __int8 *)(*(void *)v6 + 80);
  uint64_t v8 = (v4 + v5 + v7) & ~v7;
  uint64_t v9 = v8 + *(void *)(*(void *)v6 + 64);
  uint64_t v10 = v3 | v7 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  uint64_t v11 = v0 + v6[10] + v8;
  uint64_t v12 = sub_249AEC548();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);

  return MEMORY[0x270FA0238](v0, v9, v10);
}

uint64_t sub_2499A1ED4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScaledSystemFont();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499A1F38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A50) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for ScaledSystemFont() - 8);
  uint64_t v7 = (uint64_t *)(v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));

  return sub_2499A15FC(v1 + v4, v7, a1);
}

uint64_t sub_2499A2038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_2499A20A4()
{
  unint64_t result = qword_2696E1A80;
  if (!qword_2696E1A80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1A88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1A80);
  }
  return result;
}

uint64_t sub_2499A2100@<X0>(uint64_t a1@<X8>)
{
  sub_249988BB8();
  uint64_t result = sub_249AEBFF8();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_2499A2158()
{
  return sub_249AEC008();
}

uint64_t sub_2499A21AC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2499A2234((void (*)(void))sub_2499890E8, &qword_2696E15F8, &qword_2696E15F0, a1);
}

uint64_t sub_2499A21DC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499A22F4(a1, a2, a3, a4, &qword_2696E15F8, (void (*)(uint64_t *))sub_2499890E8);
}

uint64_t sub_2499A2204@<X0>(uint64_t *a1@<X8>)
{
  return sub_2499A2234((void (*)(void))sub_249989380, &qword_2696E1610, &qword_2696E1608, a1);
}

uint64_t sub_2499A2234@<X0>(void (*a1)(void)@<X3>, uint64_t *a2@<X5>, uint64_t *a3@<X6>, uint64_t *a4@<X8>)
{
  a1();
  sub_249AEBFF8();
  if (v9[8])
  {
    uint64_t Strong = 0;
  }
  else
  {
    uint64_t Strong = swift_weakLoadStrong();
    a3 = a2;
  }
  uint64_t result = sub_2498D60E8((uint64_t)v9, a3);
  *a4 = Strong;
  return result;
}

uint64_t sub_2499A22CC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499A22F4(a1, a2, a3, a4, &qword_2696E1610, (void (*)(uint64_t *))sub_249989380);
}

uint64_t sub_2499A22F4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t *))
{
  uint64_t v7 = *a1;
  if (*a1)
  {
    swift_weakInit();
    swift_weakAssign();
    a1 = (uint64_t *)sub_249882788((uint64_t)v10, (uint64_t)&v11, a5);
  }
  else
  {
    uint64_t v11 = 0;
  }
  BOOL v12 = v7 == 0;
  a6(a1);
  return sub_249AEC008();
}

uint64_t InstrumentView.init(instrument:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for LayoutTreatment(0);
  sub_2499A8A4C(&qword_2696E1A90, (void (*)(uint64_t))type metadata accessor for LayoutTreatment);
  *(void *)a2 = sub_249AEBE18();
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = swift_getKeyPath();
  *(unsigned char *)(a2 + 24) = 0;
  uint64_t v5 = type metadata accessor for InstrumentView();
  uint64_t v6 = (uint64_t *)(a2 + *(int *)(v5 + 24));
  *uint64_t v6 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A98);
  swift_storeEnumTagMultiPayload();
  return sub_2499AAEA4(a1, a2 + *(int *)(v5 + 28), (uint64_t (*)(void))type metadata accessor for Instrument);
}

uint64_t InstrumentView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v269 = a1;
  uint64_t v255 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AA0);
  MEMORY[0x270FA5388](v255);
  uint64_t v256 = (uint64_t)&v208 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v263 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AA8);
  MEMORY[0x270FA5388](v263);
  uint64_t v257 = (uint64_t)&v208 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Instrument();
  MEMORY[0x270FA5388](v4);
  uint64_t v251 = (uint64_t)&v208 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v254 = type metadata accessor for RequestContentView(0);
  uint64_t v6 = MEMORY[0x270FA5388](v254);
  uint64_t v8 = (uint64_t *)((char *)&v208 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v6);
  uint64_t v252 = (uint64_t)&v208 - v9;
  uint64_t v261 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AB0);
  MEMORY[0x270FA5388](v261);
  v262 = (char **)((char *)&v208 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AB8);
  MEMORY[0x270FA5388](v268);
  v264 = (char *)&v208 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AC0);
  MEMORY[0x270FA5388](v265);
  uint64_t v266 = (uint64_t)&v208 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AC8);
  MEMORY[0x270FA5388](v253);
  v259 = (char **)((char *)&v208 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AD0);
  MEMORY[0x270FA5388](v248);
  v249 = (char **)((char *)&v208 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AD8);
  MEMORY[0x270FA5388](v258);
  v250 = (char *)&v208 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AE0);
  MEMORY[0x270FA5388](v267);
  v260 = (char *)&v208 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AE8);
  MEMORY[0x270FA5388](v234);
  uint64_t v236 = (uint64_t)&v208 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AF0);
  MEMORY[0x270FA5388](v227);
  uint64_t v228 = (uint64_t)&v208 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1AF8);
  MEMORY[0x270FA5388](v235);
  v229 = (char *)&v208 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v246 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B00);
  MEMORY[0x270FA5388](v246);
  v237 = (char *)&v208 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B08);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v208 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_249AECBE8();
  uint64_t v211 = *(void *)(v24 - 8);
  uint64_t v212 = v24;
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (char *)&v208 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B10);
  MEMORY[0x270FA5388](v27);
  uint64_t v214 = (uint64_t *)((char *)&v208 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B18);
  uint64_t v29 = MEMORY[0x270FA5388](v226);
  uint64_t v213 = (uint64_t)&v208 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  uint64_t v215 = (uint64_t)&v208 - v31;
  uint64_t v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B20);
  MEMORY[0x270FA5388](v242);
  uint64_t v244 = (uint64_t)&v208 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v238 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B28);
  MEMORY[0x270FA5388](v238);
  v240 = (char *)&v208 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B30);
  MEMORY[0x270FA5388](v231);
  uint64_t v232 = (uint64_t)&v208 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B38);
  MEMORY[0x270FA5388](v239);
  v233 = (char *)&v208 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v243 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B40);
  MEMORY[0x270FA5388](v243);
  v241 = (char *)&v208 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B48);
  uint64_t v224 = *(void *)(v37 - 8);
  uint64_t v225 = v37;
  MEMORY[0x270FA5388](v37);
  v221 = (char *)&v208 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B50);
  uint64_t v222 = *(void *)(v39 - 8);
  uint64_t v223 = v39;
  MEMORY[0x270FA5388](v39);
  v220 = (char *)&v208 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B58);
  uint64_t v209 = *(void *)(v41 - 8);
  uint64_t v210 = v41;
  MEMORY[0x270FA5388](v41);
  v219 = (char *)&v208 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B60);
  uint64_t v216 = *(void *)(v43 - 8);
  uint64_t v217 = v43;
  MEMORY[0x270FA5388](v43);
  v208 = (char *)&v208 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B68);
  MEMORY[0x270FA5388](v230);
  uint64_t v218 = (uint64_t)&v208 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B70);
  MEMORY[0x270FA5388](v247);
  v245 = (char *)&v208 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v1 + *(int *)(type metadata accessor for InstrumentView() + 28);
  uint64_t v48 = v4;
  sub_2498A4990(v47 + *(int *)(v4 + 20), (uint64_t)v278);
  sub_2498A4990((uint64_t)v278, (uint64_t)v279);
  switch(sub_2498B8790((uint64_t)v279))
  {
    case 1u:
      uint64_t v73 = (char *)sub_2498B87AC((uint64_t)v279);
      sub_2499441A8(v73, &v276);
      switch(sub_249944500((uint64_t)&v276))
      {
        case 1u:
          uint64_t v137 = (uint64_t)v73;
          uint64_t v138 = (unsigned char *)sub_24994451C((uint64_t)&v276);
          uint64_t v139 = *(void *)(v1 + 16);
          char v140 = *(unsigned char *)(v1 + 24);
          sub_2498FC9D8(v278, sub_2498FB4B4);
          sub_24997EA04(v137, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
          j__swift_retain();
          uint64_t v141 = sub_2499A646C(v139, v140, 0xD00000000000001BLL, 0x8000000249B16560, (void (*)(void, void))j_j__swift_release);
          j__swift_release();
          if (v141)
          {
            LOBYTE(v273[0]) = *v138;
            sub_249A299D4((char *)v273, 0, 0);
            swift_release();
            uint64_t v142 = v47 + *(int *)(v48 + 24);
            uint64_t v144 = *(void *)v142;
            uint64_t v143 = *(void *)(v142 + 8);
            uint64_t v145 = *(void *)(v142 + 16);
            uint64_t v146 = *(unsigned __int8 *)(v142 + 24);
            int v147 = *(unsigned __int8 *)(v142 + 25);
            uint64_t v148 = *(void *)(v142 + 32);
            uint64_t v149 = *(void *)(v142 + 40);
            uint64_t v150 = 256;
            if (!v147) {
              uint64_t v150 = 0;
            }
            v271[0] = v144;
            v271[1] = v143;
            v271[2] = v145;
            v271[3] = v150 | v146;
            v271[4] = v148;
            v271[5] = v149;
            memcpy(v273, v138, 0x130uLL);
            sub_24997EA04(v137, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRetain();
            sub_249935FF4(v273, v271, v272);
            swift_beginAccess();
            __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
            uint64_t v151 = v220;
            sub_249AEB9B8();
            swift_endAccess();
            sub_2498D0A3C(&qword_2696E1CA0, &qword_2696E1B50);
            uint64_t v152 = v221;
            uint64_t v153 = v223;
            sub_249AEBA48();
            sub_2498D0A3C(&qword_2696E1CA8, &qword_2696E1B48);
            uint64_t v154 = v225;
            uint64_t v155 = sub_249AEBA28();
            (*(void (**)(char *, uint64_t))(v224 + 8))(v152, v154);
            (*(void (**)(char *, uint64_t))(v222 + 8))(v151, v153);
            uint64_t KeyPath = swift_getKeyPath();
            LODWORD(v271[0]) = 0;
            sub_249AECA48();
            swift_release();
            int v157 = v273[0];
            uint64_t v158 = v273[1];
            LOBYTE(v271[0]) = 0;
            memcpy(v273, v272, 0x120uLL);
            v273[36] = v155;
            LODWORD(v273[37]) = v157;
            v273[38] = v158;
            v273[39] = KeyPath;
            char v274 = 0;
            char v275 = 0;
            nullsub_1(v273);
          }
          else
          {
            sub_2499A834C((uint64_t)v273);
          }
          sub_249882788((uint64_t)v273, (uint64_t)v270, &qword_2696E1C30);
          uint64_t v199 = (uint64_t)v249;
          uint64_t v134 = (uint64_t)v245;
          sub_249882788((uint64_t)v270, (uint64_t)v273, &qword_2696E1C30);
          sub_2499A8380((uint64_t)v273);
          sub_249882788((uint64_t)v273, (uint64_t)v271, &qword_2696E1C90);
          sub_2499A8508((uint64_t)v270, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_2499A8388);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C30);
          sub_2499A5BC4(&qword_2696E1C28, &qword_2696E1C30, (void (*)(void))sub_2499A5C3C);
          sub_249AEC248();
          memcpy(v240, v272, 0x143uLL);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C20);
          sub_2499A57F8();
          sub_2499A5B24();
          uint64_t v202 = (uint64_t)v241;
          sub_249AEC248();
          sub_2498D6084(v202, v244, &qword_2696E1B40);
          swift_storeEnumTagMultiPayload();
          sub_2499A577C();
          sub_2499A5D0C(&qword_2696E1C50, &qword_2696E1B00, (void (*)(void))sub_2499A5D8C);
          sub_249AEC248();
          sub_24997EA04(v137, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
          sub_2499A8508((uint64_t)v270, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_2499A85A4);
          sub_2498D60E8(v202, &qword_2696E1B40);
          goto LABEL_43;
        case 2u:
          sub_24994451C((uint64_t)&v276);
          swift_storeEnumTagMultiPayload();
          sub_2498A4990((uint64_t)v278, (uint64_t)v273);
          uint64_t v130 = sub_2498B87AC((uint64_t)v273);
          sub_249944360(v130);
          sub_2499A5DB4();
          uint64_t v131 = (uint64_t)v229;
          sub_249AEC248();
          sub_2498D6084(v131, v236, &qword_2696E1AF8);
          swift_storeEnumTagMultiPayload();
          sub_2499A5D8C();
          uint64_t v129 = (uint64_t)v237;
          sub_249AEC248();
          sub_2498D60E8(v131, &qword_2696E1AF8);
          goto LABEL_18;
        case 3u:
          sub_24994451C((uint64_t)&v276);
          sub_2499A8340((uint64_t)v272);
          sub_249882788((uint64_t)v272, (uint64_t)v270, &qword_2696E1C90);
          sub_2498A4990((uint64_t)v278, (uint64_t)v273);
          uint64_t v133 = sub_2498B87AC((uint64_t)v273);
          sub_249944360(v133);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C30);
          sub_2499A5BC4(&qword_2696E1C28, &qword_2696E1C30, (void (*)(void))sub_2499A5C3C);
          sub_249AEC248();
          memcpy(v240, v271, 0x143uLL);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C20);
          sub_2499A57F8();
          sub_2499A5B24();
          uint64_t v129 = (uint64_t)v241;
          sub_249AEC248();
          uint64_t v132 = &qword_2696E1B40;
          sub_2498D6084(v129, v244, &qword_2696E1B40);
          swift_storeEnumTagMultiPayload();
          sub_2499A577C();
          goto LABEL_20;
        case 4u:
          sub_24994451C((uint64_t)&v276);
          swift_storeEnumTagMultiPayload();
          sub_2498A4990((uint64_t)v278, (uint64_t)v273);
          uint64_t v128 = sub_2498B87AC((uint64_t)v273);
          sub_249944360(v128);
          sub_2499A5D8C();
          uint64_t v129 = (uint64_t)v237;
          sub_249AEC248();
LABEL_18:
          uint64_t v132 = &qword_2696E1B00;
          sub_2498D6084(v129, v244, &qword_2696E1B00);
          swift_storeEnumTagMultiPayload();
          sub_2499A577C();
LABEL_20:
          sub_2499A5D0C(&qword_2696E1C50, &qword_2696E1B00, (void (*)(void))sub_2499A5D8C);
          uint64_t v134 = (uint64_t)v245;
          sub_249AEC248();
          uint64_t v135 = v129;
          uint64_t v136 = v132;
          goto LABEL_38;
        case 5u:
          uint64_t v159 = *(void *)(v1 + 16);
          char v160 = *(unsigned char *)(v1 + 24);
          sub_2498FC9D8(v278, sub_2498FB4B4);
          j__swift_retain();
          uint64_t v161 = sub_2499A646C(v159, v160, 0xD00000000000001BLL, 0x8000000249B16560, (void (*)(void, void))j_j__swift_release);
          j__swift_release();
          if (v161)
          {
            LOBYTE(v273[0]) = 46;
            uint64_t v162 = sub_249A299D4((char *)v273, 0, 0);
            swift_release();
            uint64_t v163 = v47 + *(int *)(v4 + 24);
            uint64_t v164 = *(void *)v163;
            uint64_t v256 = *(void *)(v163 + 8);
            uint64_t v165 = *(void *)(v163 + 16);
            uint64_t v166 = *(unsigned __int8 *)(v163 + 24);
            int v167 = *(unsigned __int8 *)(v163 + 25);
            uint64_t v168 = *(void *)(v163 + 40);
            v264 = *(char **)(v163 + 32);
            if (v167) {
              uint64_t v169 = 256;
            }
            else {
              uint64_t v169 = 0;
            }
            uint64_t v170 = qword_2696DD398;
            swift_retain();
            uint64_t v255 = v164;
            swift_retain();
            uint64_t v254 = v165;
            swift_bridgeObjectRetain();
            uint64_t v171 = v168;
            swift_bridgeObjectRetain();
            if (v170 != -1) {
              swift_once();
            }
            uint64_t v172 = qword_2696DD3A0;
            uint64_t v263 = qword_2696DFB00;
            swift_retain();
            if (v172 != -1) {
              swift_once();
            }
            v262 = (void *)(v169 | v166);
            uint64_t v173 = qword_2696DD3E0;
            uint64_t v174 = qword_2696DFB08;
            swift_retain();
            if (v173 != -1) {
              swift_once();
            }
            uint64_t v175 = qword_2696DFB48;
            type metadata accessor for InstrumentDataSource();
            sub_2499A8A4C((unint64_t *)&qword_2696DFF18, (void (*)(uint64_t))type metadata accessor for InstrumentDataSource);
            swift_retain();
            swift_retain();
            uint64_t v257 = v162;
            uint64_t v252 = sub_249AEBD48();
            uint64_t v261 = v176;
            uint64_t v177 = v255;
            swift_retain();
            uint64_t v178 = v254;
            swift_bridgeObjectRetain();
            uint64_t v236 = v171;
            swift_bridgeObjectRetain();
            swift_retain();
            swift_release();
            swift_retain();
            v237 = (char *)v174;
            swift_retain();
            uint64_t v251 = v175;
            swift_retain();
            uint64_t v179 = v256;
            sub_2498D55E8(v177);
            swift_release();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v180 = v179;
            sub_249939C70(v177);
            swift_release();
            swift_beginAccess();
            __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
            uint64_t v181 = v220;
            sub_249AEB9B8();
            swift_endAccess();
            sub_2498D0A3C(&qword_2696E1CA0, &qword_2696E1B50);
            uint64_t v182 = v221;
            uint64_t v183 = v223;
            sub_249AEBA48();
            sub_2498D0A3C(&qword_2696E1CA8, &qword_2696E1B48);
            uint64_t v184 = v225;
            uint64_t v185 = sub_249AEBA28();
            (*(void (**)(char *, uint64_t))(v224 + 8))(v182, v184);
            (*(void (**)(char *, uint64_t))(v222 + 8))(v181, v183);
            uint64_t v186 = swift_getKeyPath();
            *(_DWORD *)v272 = 0;
            sub_249AECA48();
            swift_release();
            LOBYTE(v271[0]) = 0;
            *(void *)v272 = 0x3FB657184AE74487;
            *(_OWORD *)&v272[8] = xmmword_249AFF9D0;
            *(void *)&v272[24] = 72;
            *(void *)&v272[32] = v263;
            *(void *)&v272[40] = v237;
            *(void *)&v272[48] = v251;
            *(void *)&v272[56] = v177;
            *(void *)&v272[64] = v180;
            *(void *)&v272[72] = v178;
            *(void *)&v272[80] = v262;
            *(void *)&v272[88] = v264;
            *(void *)&v272[96] = v236;
            *(void *)&v272[104] = v252;
            *(void *)&v272[112] = v261;
            *(void *)&v272[120] = v185;
            *(_DWORD *)&v272[128] = v273[0];
            *(void *)&v272[136] = v273[1];
            *(void *)&v272[144] = v186;
            v272[152] = 0;
            v272[153] = 0;
            nullsub_1(v272);
          }
          else
          {
            sub_2499A87D8(v272);
          }
          sub_249882788((uint64_t)v272, (uint64_t)v273, &qword_2696E1BF8);
          sub_249882788((uint64_t)v273, v232, &qword_2696E1BF8);
          swift_storeEnumTagMultiPayload();
          sub_2499A88EC((uint64_t)v273, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_2499A87F8);
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1BF8);
          sub_2499A5BC4(&qword_2696E1BC0, &qword_2696E1B68, (void (*)(void))sub_2499A58BC);
          sub_2499A5BC4(&qword_2696E1BF0, &qword_2696E1BF8, (void (*)(void))sub_2499A5A54);
          uint64_t v203 = (uint64_t)v233;
          sub_249AEC248();
          sub_2498D6084(v203, (uint64_t)v240, &qword_2696E1B38);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C20);
          sub_2499A57F8();
          sub_2499A5B24();
          uint64_t v204 = (uint64_t)v241;
          sub_249AEC248();
          sub_2498D60E8(v203, &qword_2696E1B38);
          sub_2498D6084(v204, v244, &qword_2696E1B40);
          swift_storeEnumTagMultiPayload();
          sub_2499A577C();
          sub_2499A5D0C(&qword_2696E1C50, &qword_2696E1B00, (void (*)(void))sub_2499A5D8C);
          uint64_t v134 = (uint64_t)v245;
          sub_249AEC248();
          sub_2499A88EC((uint64_t)v273, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))sub_2499A8960);
          sub_2498D60E8(v204, &qword_2696E1B40);
          uint64_t v198 = v266;
          uint64_t v199 = (uint64_t)v249;
          break;
        case 6u:
          sub_2498A4990((uint64_t)v278, (uint64_t)v273);
          uint64_t v187 = sub_2498B87AC((uint64_t)v273);
          sub_249944360(v187);
          uint64_t v188 = sub_249AEC898();
          sub_249AECBC8();
          char v189 = sub_249AEC4E8();
          uint64_t v190 = v211;
          uint64_t v191 = v212;
          (*(void (**)(char *, char *, uint64_t))(v211 + 16))(v23, v26, v212);
          v23[*(int *)(v21 + 36)] = v189;
          v192 = v214;
          sub_2498D6084((uint64_t)v23, (uint64_t)v214 + *(int *)(v27 + 36), &qword_2696E1B08);
          uint64_t *v192 = v188;
          swift_retain();
          sub_2498D60E8((uint64_t)v23, &qword_2696E1B08);
          (*(void (**)(char *, uint64_t))(v190 + 8))(v26, v191);
          swift_release();
          if (!*(void *)v1)
          {
            type metadata accessor for LayoutTreatment(0);
            sub_2499A8A4C(&qword_2696E1A90, (void (*)(uint64_t))type metadata accessor for LayoutTreatment);
            sub_249AEBE08();
            __break(1u);
            JUMPOUT(0x2499A5358);
          }
          swift_getKeyPath();
          swift_getKeyPath();
          swift_retain();
          sub_249AEB9E8();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v193 = *(void *)v272;
          uint64_t v194 = v213;
          sub_2498D6084((uint64_t)v192, v213, &qword_2696E1B10);
          *(void *)(v194 + *(int *)(v226 + 36)) = v193;
          sub_2498D60E8((uint64_t)v192, &qword_2696E1B10);
          uint64_t v195 = v215;
          sub_249882788(v194, v215, &qword_2696E1B18);
          sub_2498D6084(v195, v228, &qword_2696E1B18);
          swift_storeEnumTagMultiPayload();
          sub_2499A5DB4();
          uint64_t v196 = (uint64_t)v229;
          sub_249AEC248();
          sub_2498D6084(v196, v236, &qword_2696E1AF8);
          swift_storeEnumTagMultiPayload();
          sub_2499A5D8C();
          uint64_t v197 = (uint64_t)v237;
          sub_249AEC248();
          sub_2498D60E8(v196, &qword_2696E1AF8);
          sub_2498D6084(v197, v244, &qword_2696E1B00);
          swift_storeEnumTagMultiPayload();
          sub_2499A577C();
          sub_2499A5D0C(&qword_2696E1C50, &qword_2696E1B00, (void (*)(void))sub_2499A5D8C);
          uint64_t v134 = (uint64_t)v245;
          sub_249AEC248();
          sub_2498D60E8(v197, &qword_2696E1B00);
          uint64_t v135 = v195;
          uint64_t v136 = &qword_2696E1B18;
LABEL_38:
          sub_2498D60E8(v135, v136);
          uint64_t v198 = v266;
          uint64_t v199 = (uint64_t)v249;
          break;
        default:
          uint64_t v74 = sub_24994451C((uint64_t)&v276);
          char v75 = *(unsigned char *)v74;
          uint64_t v76 = *(void *)(v74 + 8);
          uint64_t v77 = *(void *)(v74 + 16);
          uint64_t v78 = *(void *)(v74 + 48);
          uint64_t v261 = *(void *)(v74 + 40);
          uint64_t v263 = *(void *)(v74 + 56);
          uint64_t v79 = *(void *)(v74 + 72);
          uint64_t v252 = *(void *)(v74 + 64);
          uint64_t v80 = *(void *)(v74 + 88);
          uint64_t v254 = *(void *)(v74 + 80);
          uint64_t v255 = v80;
          uint64_t v81 = *(void *)(v1 + 16);
          char v82 = *(unsigned char *)(v1 + 24);
          sub_2498FC9D8(v278, sub_2498FB4B4);
          v264 = v73;
          sub_24997EA04((uint64_t)v73, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FB8D8);
          j__swift_retain();
          uint64_t v83 = sub_2499A646C(v81, v82, 0xD00000000000001BLL, 0x8000000249B16560, (void (*)(void, void))j_j__swift_release);
          j__swift_release();
          if (v83)
          {
            LOBYTE(v273[0]) = v75;
            uint64_t v84 = sub_249A299D4((char *)v273, 0, 0);
            swift_release();
            type metadata accessor for InstrumentDataSource();
            sub_2499A8A4C((unint64_t *)&qword_2696DFF18, (void (*)(uint64_t))type metadata accessor for InstrumentDataSource);
            uint64_t v251 = v84;
            swift_retain();
            v237 = (char *)sub_249AEBD48();
            v262 = v85;
            swift_bridgeObjectRetain();
            uint64_t v236 = sub_249AEC988();
            v273[0] = v261;
            v273[1] = v78;
            sub_24988CE30();
            swift_bridgeObjectRetain();
            uint64_t v86 = sub_249AEC668();
            uint64_t v88 = v87;
            char v90 = v89 & 1;
            uint64_t v261 = sub_249AEC628();
            uint64_t v256 = v92;
            uint64_t v257 = v91;
            uint64_t v263 = v93 & 1;
            sub_2498D5E8C(v86, v88, v90);
            swift_bridgeObjectRelease();
            v273[0] = v252;
            v273[1] = v79;
            swift_bridgeObjectRetain();
            uint64_t v94 = sub_249AEC668();
            uint64_t v96 = v95;
            char v98 = v97 & 1;
            uint64_t v99 = sub_249AEC628();
            uint64_t v254 = v99;
            uint64_t v101 = v100;
            uint64_t v103 = v102;
            uint64_t v105 = v104 & 1;
            sub_2498D5E8C(v94, v96, v98);
            swift_bridgeObjectRelease();
            v273[0] = v237;
            v273[1] = v262;
            v273[2] = v76;
            v273[3] = v77;
            v273[4] = v236;
            LOBYTE(v273[5]) = 0;
            v273[6] = v261;
            v273[7] = v257;
            v273[8] = v263;
            v273[9] = v256;
            v273[10] = v99;
            v273[11] = v101;
            v273[12] = v105;
            v273[13] = v103;
            uint64_t v106 = swift_bridgeObjectRetain();
            *(void *)v272 = MEMORY[0x24C5ADD20](v106);
            __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1BD0);
            sub_2498D0A3C(&qword_2696E1BD8, &qword_2696E1BD0);
            sub_2499A59AC();
            sub_249AEC6A8();
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            sub_2499A8A94(v261, v257, v263, v256);
            sub_2499A8A94(v254, v101, v105, v103);
            swift_beginAccess();
            __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
            uint64_t v107 = v220;
            sub_249AEB9B8();
            swift_endAccess();
            sub_2498D0A3C(&qword_2696E1CA0, &qword_2696E1B50);
            uint64_t v108 = v221;
            uint64_t v109 = v223;
            sub_249AEBA48();
            sub_2498D0A3C(&qword_2696E1CA8, &qword_2696E1B48);
            uint64_t v110 = v225;
            uint64_t v111 = sub_249AEBA28();
            (*(void (**)(char *, uint64_t))(v224 + 8))(v108, v110);
            (*(void (**)(char *, uint64_t))(v222 + 8))(v107, v109);
            uint64_t v112 = swift_getKeyPath();
            *(_DWORD *)v272 = 0;
            sub_249AECA48();
            swift_release();
            LODWORD(v109) = v273[0];
            uint64_t v113 = v273[1];
            uint64_t v115 = (uint64_t)v208;
            uint64_t v114 = v209;
            int64x2_t v116 = v219;
            uint64_t v117 = v210;
            (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v208, v219, v210);
            uint64_t v118 = v217;
            uint64_t v119 = v115 + *(int *)(v217 + 36);
            *(void *)uint64_t v119 = v111;
            *(_DWORD *)(v119 + 8) = v109;
            *(void *)(v119 + 16) = v113;
            *(void *)(v119 + 24) = v112;
            *(_WORD *)(v119 + 32) = 0;
            (*(void (**)(char *, uint64_t))(v114 + 8))(v116, v117);
            uint64_t v120 = v218;
            sub_249882788(v115, v218, &qword_2696E1B60);
            uint64_t v121 = 0;
          }
          else
          {
            uint64_t v121 = 1;
            uint64_t v118 = v217;
            uint64_t v120 = v218;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v216 + 56))(v120, v121, 1, v118);
          sub_2498D6084(v120, v232, &qword_2696E1B68);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1BF8);
          sub_2499A5BC4(&qword_2696E1BC0, &qword_2696E1B68, (void (*)(void))sub_2499A58BC);
          sub_2499A5BC4(&qword_2696E1BF0, &qword_2696E1BF8, (void (*)(void))sub_2499A5A54);
          uint64_t v200 = (uint64_t)v233;
          sub_249AEC248();
          sub_2498D6084(v200, (uint64_t)v240, &qword_2696E1B38);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C20);
          sub_2499A57F8();
          sub_2499A5B24();
          uint64_t v201 = (uint64_t)v241;
          sub_249AEC248();
          sub_2498D60E8(v200, &qword_2696E1B38);
          sub_2498D6084(v201, v244, &qword_2696E1B40);
          swift_storeEnumTagMultiPayload();
          sub_2499A577C();
          sub_2499A5D0C(&qword_2696E1C50, &qword_2696E1B00, (void (*)(void))sub_2499A5D8C);
          uint64_t v134 = (uint64_t)v245;
          sub_249AEC248();
          sub_24997EA04((uint64_t)v264, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_2498FCED0);
          sub_2498D60E8(v201, &qword_2696E1B40);
          sub_2498D60E8(v120, &qword_2696E1B68);
          uint64_t v199 = (uint64_t)v249;
LABEL_43:
          uint64_t v198 = v266;
          break;
      }
      sub_2498D6084(v134, v199, &qword_2696E1B70);
      swift_storeEnumTagMultiPayload();
      sub_2499A56DC();
      sub_2499A5ED0();
      uint64_t v205 = v134;
      uint64_t v206 = (uint64_t)v250;
      sub_249AEC248();
      sub_2498D6084(v206, (uint64_t)v259, &qword_2696E1AD8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B80);
      sub_2499A5660();
      sub_2499A54CC();
      uint64_t v207 = (uint64_t)v260;
      sub_249AEC248();
      sub_2498D60E8(v206, &qword_2696E1AD8);
      sub_2498D6084(v207, v198, &qword_2696E1AE0);
      swift_storeEnumTagMultiPayload();
      sub_2499A55E4();
      sub_2499A5F24();
      sub_249AEC248();
      sub_2498FC9D8(v278, sub_2498FCAAC);
      sub_2498D60E8(v207, &qword_2696E1AE0);
      uint64_t v71 = v205;
      uint64_t v72 = &qword_2696E1B70;
      goto LABEL_47;
    case 2u:
    case 8u:
      sub_2498B87AC((uint64_t)v279);
      goto LABEL_3;
    case 3u:
      sub_2498B87AC((uint64_t)v279);
      uint64_t v276 = sub_249AEC988();
      char v277 = 0;
      goto LABEL_12;
    case 4u:
      sub_2498B87AC((uint64_t)v279);
      uint64_t v276 = sub_249AEC988();
      char v277 = 1;
LABEL_12:
      swift_retain();
      sub_249AEC248();
      char v122 = v273[1];
      uint64_t v123 = v259;
      void *v259 = v273[0];
      *((unsigned char *)v123 + 8) = v122;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B80);
      sub_2499A5660();
      sub_2499A54CC();
      uint64_t v124 = (uint64_t)v260;
      sub_249AEC248();
      uint64_t v125 = &qword_2696E1AE0;
      sub_2498D6084(v124, v266, &qword_2696E1AE0);
      goto LABEL_15;
    case 5u:
      sub_2498B87AC((uint64_t)v279);
      uint64_t v276 = sub_249AEC988();
      char v277 = 0;
      goto LABEL_14;
    case 6u:
      sub_2498B87AC((uint64_t)v279);
      uint64_t v276 = sub_249AEC9A8();
      char v277 = 1;
LABEL_14:
      swift_retain();
      sub_249AEC248();
      char v126 = v273[1];
      long long v127 = v262;
      void *v262 = v273[0];
      *((unsigned char *)v127 + 8) = v126;
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B80);
      sub_2499A54CC();
      sub_2499A5538();
      uint64_t v124 = (uint64_t)v264;
      sub_249AEC248();
      uint64_t v125 = &qword_2696E1AB8;
      sub_2498D6084(v124, v266, &qword_2696E1AB8);
LABEL_15:
      swift_storeEnumTagMultiPayload();
      sub_2499A55E4();
      sub_2499A5F24();
      sub_249AEC248();
      sub_2498D60E8(v124, v125);
      uint64_t result = swift_release();
      break;
    case 7u:
      uint64_t v57 = sub_2498B87AC((uint64_t)v279);
      uint64_t v59 = *(void *)v57;
      uint64_t v58 = *(void *)(v57 + 8);
      uint64_t v60 = *(void *)(v57 + 24);
      uint64_t v257 = *(void *)(v57 + 16);
      uint64_t v62 = *(void *)(v57 + 32);
      uint64_t v61 = *(void *)(v57 + 40);
      LODWORD(v256) = *(unsigned __int8 *)(v57 + 48);
      uint64_t v63 = *(void *)(v57 + 64);
      uint64_t v255 = *(void *)(v57 + 56);
      uint64_t v64 = (void *)swift_getKeyPath();
      uint64_t v65 = swift_getKeyPath();
      CGRect v66 = v249;
      void *v249 = v64;
      v262 = v64;
      uint64_t v263 = v65;
      *((unsigned char *)v66 + 8) = 0;
      v66[2] = v65;
      *((unsigned char *)v66 + 24) = 0;
      v66[4] = v59;
      v66[5] = v58;
      v264 = (char *)v58;
      v66[6] = v257;
      v66[7] = v60;
      uint64_t v261 = v60;
      v66[8] = v62;
      v66[9] = v61;
      *((unsigned char *)v66 + 80) = v256;
      v66[11] = v255;
      v66[12] = v63;
      swift_storeEnumTagMultiPayload();
      sub_2498FC9D8(v278, sub_2498FB4B4);
      j__swift_retain();
      j__swift_retain();
      sub_2499A56DC();
      sub_2499A5ED0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v67 = (uint64_t)v250;
      sub_249AEC248();
      sub_2498D6084(v67, (uint64_t)v259, &qword_2696E1AD8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B80);
      sub_2499A5660();
      sub_2499A54CC();
      uint64_t v68 = (uint64_t)v260;
      sub_249AEC248();
      sub_2498D60E8(v67, &qword_2696E1AD8);
      sub_2498D6084(v68, v266, &qword_2696E1AE0);
      swift_storeEnumTagMultiPayload();
      sub_2499A55E4();
      sub_2499A5F24();
      sub_249AEC248();
      sub_2498D60E8(v68, &qword_2696E1AE0);
      j__swift_release();
      j__swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 9u:
LABEL_3:
      uint64_t v49 = v251;
      sub_2499A5FA0(v47, v251, (uint64_t (*)(void))type metadata accessor for Instrument);
      type metadata accessor for ClusterTransitionCoordinator(0);
      sub_2499A8A4C(&qword_2696E1C88, (void (*)(uint64_t))type metadata accessor for ClusterTransitionCoordinator);
      *uint64_t v8 = sub_249AEBE18();
      v8[1] = v50;
      uint64_t v51 = v254;
      uint64_t v52 = (uint64_t *)((char *)v8 + *(int *)(v254 + 20));
      *uint64_t v52 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A98);
      swift_storeEnumTagMultiPayload();
      sub_2499AAEA4(v49, (uint64_t)v8 + *(int *)(v51 + 24), (uint64_t (*)(void))type metadata accessor for Instrument);
      uint64_t v53 = v252;
      sub_2499AAEA4((uint64_t)v8, v252, type metadata accessor for RequestContentView);
      sub_2499A5FA0(v53, v256, type metadata accessor for RequestContentView);
      swift_storeEnumTagMultiPayload();
      sub_2499A8A4C(&qword_2696E1B78, (void (*)(uint64_t))type metadata accessor for RequestContentView);
      uint64_t v54 = v257;
      sub_249AEC248();
      sub_2498D6084(v54, (uint64_t)v262, &qword_2696E1AA8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B80);
      sub_2499A54CC();
      sub_2499A5538();
      uint64_t v55 = (uint64_t)v264;
      sub_249AEC248();
      sub_2498D60E8(v54, &qword_2696E1AA8);
      sub_2498D6084(v55, v266, &qword_2696E1AB8);
      swift_storeEnumTagMultiPayload();
      sub_2499A55E4();
      sub_2499A5F24();
      sub_249AEC248();
      sub_2498D60E8(v55, &qword_2696E1AB8);
      uint64_t result = sub_2499A6008(v53);
      break;
    default:
      sub_2498B87AC((uint64_t)v279);
      swift_storeEnumTagMultiPayload();
      sub_2499A8A4C(&qword_2696E1B78, (void (*)(uint64_t))type metadata accessor for RequestContentView);
      uint64_t v69 = v257;
      sub_249AEC248();
      sub_2498D6084(v69, (uint64_t)v262, &qword_2696E1AA8);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B80);
      sub_2499A54CC();
      sub_2499A5538();
      uint64_t v70 = (uint64_t)v264;
      sub_249AEC248();
      sub_2498D60E8(v69, &qword_2696E1AA8);
      sub_2498D6084(v70, v266, &qword_2696E1AB8);
      swift_storeEnumTagMultiPayload();
      sub_2499A55E4();
      sub_2499A5F24();
      sub_249AEC248();
      uint64_t v71 = v70;
      uint64_t v72 = &qword_2696E1AB8;
LABEL_47:
      uint64_t result = sub_2498D60E8(v71, v72);
      break;
  }
  return result;
}

uint64_t sub_2499A53A0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2499A2234((void (*)(void))sub_2499AAFA0, &qword_2696E1D10, &qword_2696E1D18, a1);
}

uint64_t sub_2499A53D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2499A2234((void (*)(void))sub_2499AAFA0, &qword_2696E1D10, &qword_2696E1D18, a1);
}

uint64_t sub_2499A5414(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499A22F4(a1, a2, a3, a4, &qword_2696E1D10, (void (*)(uint64_t *))sub_2499AAFA0);
}

uint64_t sub_2499A543C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499A22F4(a1, a2, a3, a4, &qword_2696E1D10, (void (*)(uint64_t *))sub_2499AAFA0);
}

uint64_t type metadata accessor for InstrumentView()
{
  uint64_t result = qword_2696E1CB8;
  if (!qword_2696E1CB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_2499A54CC()
{
  unint64_t result = qword_2696E1B88;
  if (!qword_2696E1B88)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1B80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1B88);
  }
  return result;
}

unint64_t sub_2499A5538()
{
  unint64_t result = qword_2696E1B90;
  if (!qword_2696E1B90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1AA8);
    sub_2499A8A4C(&qword_2696E1B78, (void (*)(uint64_t))type metadata accessor for RequestContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1B90);
  }
  return result;
}

unint64_t sub_2499A55E4()
{
  unint64_t result = qword_2696E1B98;
  if (!qword_2696E1B98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1AE0);
    sub_2499A5660();
    sub_2499A54CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1B98);
  }
  return result;
}

unint64_t sub_2499A5660()
{
  unint64_t result = qword_2696E1BA0;
  if (!qword_2696E1BA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1AD8);
    sub_2499A56DC();
    sub_2499A5ED0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1BA0);
  }
  return result;
}

unint64_t sub_2499A56DC()
{
  unint64_t result = qword_2696E1BA8;
  if (!qword_2696E1BA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1B70);
    sub_2499A577C();
    sub_2499A5D0C(&qword_2696E1C50, &qword_2696E1B00, (void (*)(void))sub_2499A5D8C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1BA8);
  }
  return result;
}

unint64_t sub_2499A577C()
{
  unint64_t result = qword_2696E1BB0;
  if (!qword_2696E1BB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1B40);
    sub_2499A57F8();
    sub_2499A5B24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1BB0);
  }
  return result;
}

unint64_t sub_2499A57F8()
{
  unint64_t result = qword_2696E1BB8;
  if (!qword_2696E1BB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1B38);
    sub_2499A5BC4(&qword_2696E1BC0, &qword_2696E1B68, (void (*)(void))sub_2499A58BC);
    sub_2499A5BC4(&qword_2696E1BF0, &qword_2696E1BF8, (void (*)(void))sub_2499A5A54);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1BB8);
  }
  return result;
}

unint64_t sub_2499A58BC()
{
  unint64_t result = qword_2696E1BC8;
  if (!qword_2696E1BC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1B60);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1BD0);
    sub_2498D0A3C(&qword_2696E1BD8, &qword_2696E1BD0);
    sub_2499A59AC();
    swift_getOpaqueTypeConformance2();
    sub_2499A5A00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1BC8);
  }
  return result;
}

unint64_t sub_2499A59AC()
{
  unint64_t result = qword_2696E1BE0;
  if (!qword_2696E1BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1BE0);
  }
  return result;
}

unint64_t sub_2499A5A00()
{
  unint64_t result = qword_2696E1BE8;
  if (!qword_2696E1BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1BE8);
  }
  return result;
}

unint64_t sub_2499A5A54()
{
  unint64_t result = qword_2696E1C00;
  if (!qword_2696E1C00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1C08);
    sub_2499A5AD0();
    sub_2499A5A00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1C00);
  }
  return result;
}

unint64_t sub_2499A5AD0()
{
  unint64_t result = qword_2696E1C10;
  if (!qword_2696E1C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1C10);
  }
  return result;
}

unint64_t sub_2499A5B24()
{
  unint64_t result = qword_2696E1C18;
  if (!qword_2696E1C18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1C20);
    sub_2499A5BC4(&qword_2696E1C28, &qword_2696E1C30, (void (*)(void))sub_2499A5C3C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1C18);
  }
  return result;
}

uint64_t sub_2499A5BC4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499A5C3C()
{
  unint64_t result = qword_2696E1C38;
  if (!qword_2696E1C38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1C40);
    sub_2499A5CB8();
    sub_2499A5A00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1C38);
  }
  return result;
}

unint64_t sub_2499A5CB8()
{
  unint64_t result = qword_2696E1C48;
  if (!qword_2696E1C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1C48);
  }
  return result;
}

uint64_t sub_2499A5D0C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2499A5D8C()
{
  return sub_2499A5D0C(&qword_2696E1C58, &qword_2696E1AF8, (void (*)(void))sub_2499A5DB4);
}

unint64_t sub_2499A5DB4()
{
  unint64_t result = qword_2696E1C60;
  if (!qword_2696E1C60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1B18);
    sub_2499A5E30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1C60);
  }
  return result;
}

unint64_t sub_2499A5E30()
{
  unint64_t result = qword_2696E1C68;
  if (!qword_2696E1C68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1B10);
    sub_2498D0A3C(&qword_2696E1C70, &qword_2696E1B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1C68);
  }
  return result;
}

unint64_t sub_2499A5ED0()
{
  unint64_t result = qword_2696E1C78;
  if (!qword_2696E1C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1C78);
  }
  return result;
}

unint64_t sub_2499A5F24()
{
  unint64_t result = qword_2696E1C80;
  if (!qword_2696E1C80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1AB8);
    sub_2499A54CC();
    sub_2499A5538();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1C80);
  }
  return result;
}

uint64_t sub_2499A5FA0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2499A6008(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RequestContentView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2499A6064@<X0>(uint64_t *a1@<X8>)
{
  return sub_2499A2234((void (*)(void))sub_2499890E8, &qword_2696E15F8, &qword_2696E15F0, a1);
}

uint64_t sub_2499A60A8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499A22F4(a1, a2, a3, a4, &qword_2696E15F8, (void (*)(uint64_t *))sub_2499890E8);
}

uint64_t sub_2499A60E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_2499A2234((void (*)(void))sub_249989380, &qword_2696E1610, &qword_2696E1608, a1);
}

uint64_t sub_2499A6128(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499A22F4(a1, a2, a3, a4, &qword_2696E1610, (void (*)(uint64_t *))sub_249989380);
}

uint64_t sub_2499A6164(uint64_t a1, char a2)
{
  return sub_2499A646C(a1, a2, 0x6C616E6F6974704FLL, 0xEF3E726F6C6F433CLL, (void (*)(void, void))j__swift_release);
}

uint64_t sub_2499A619C(uint64_t a1, char a2)
{
  return sub_2499A646C(a1, a2, 0xD00000000000001BLL, 0x8000000249B16560, (void (*)(void, void))j_j__swift_release);
}

uint64_t sub_2499A61CC@<X0>(uint64_t a1@<X8>)
{
  return sub_2499A7038(&qword_2696E1CE0, MEMORY[0x263F18570], 0x536C6F72746E6F43, 0xEB00000000657A69, a1);
}

uint64_t sub_2499A6208(uint64_t a1, char a2)
{
  uint64_t v4 = sub_249AEBFE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return a1 & 1;
  }
  swift_retain();
  os_log_type_t v8 = sub_249AED7C8();
  uint64_t v9 = sub_249AEC4A8();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v15 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v14 = sub_249924094(1819242306, 0xE400000000000000, &v15);
    sub_249AED8F8();
    _os_log_impl(&dword_249878000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v12, -1, -1);
    MEMORY[0x24C5B0110](v11, -1, -1);
  }

  sub_249AEBFD8();
  swift_getAtKeyPath();
  sub_2499AAF18(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_2499A640C(uint64_t a1, char a2)
{
  return sub_2499A646C(a1, a2, 0xD000000000000017, 0x8000000249B16540, (void (*)(void, void))j__swift_release);
}

uint64_t sub_2499A643C(uint64_t a1, char a2)
{
  return sub_2499A646C(a1, a2, 0xD000000000000018, 0x8000000249B16520, (void (*)(void, void))j_j__swift_release);
}

uint64_t sub_2499A646C(uint64_t a1, char a2, uint64_t a3, unint64_t a4, void (*a5)(void, void))
{
  uint64_t v10 = sub_249AEBFE8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v14 = sub_249AED7C8();
    uint64_t v15 = sub_249AEC4A8();
    if (os_log_type_enabled(v15, v14))
    {
      unint64_t v23 = a4;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = a5;
      uint64_t v17 = (uint8_t *)v16;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = a3;
      uint64_t v20 = v18;
      uint64_t v26 = v18;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v25 = sub_249924094(v19, v23, &v26);
      sub_249AED8F8();
      _os_log_impl(&dword_249878000, v15, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5B0110](v20, -1, -1);
      uint64_t v21 = v17;
      a5 = v24;
      MEMORY[0x24C5B0110](v21, -1, -1);
    }

    sub_249AEBFD8();
    swift_getAtKeyPath();
    a5(a1, 0);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    return v26;
  }
  return a1;
}

void sub_2499A6688(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_249AEBFE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    *a3 = a1;
  }
  else
  {
    sub_2499AAF0C(a1, 0);
    os_log_type_t v10 = sub_249AED7C8();
    uint64_t v11 = sub_249AEC4A8();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v16[1] = a3;
      uint64_t v15 = v14;
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v16[2] = sub_249924094(0x754F74756F79614CLL, 0xEC00000074757074, &v17);
      sub_249AED8F8();
      _os_log_impl(&dword_249878000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5B0110](v15, -1, -1);
      MEMORY[0x24C5B0110](v13, -1, -1);
    }

    sub_249AEBFD8();
    swift_getAtKeyPath();
    sub_2499AAF18(a1, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_2499A68A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  return sub_2499A6D80(a1, a2, a3, (uint64_t (*)(void))sub_24998A0B8, 0xD000000000000025, 0x8000000249B164F0, (uint64_t (*)(void))sub_24998A0BC, a4);
}

uint64_t sub_2499A68EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_249AEBFE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v2, (uint64_t)&v17, &qword_2696E1D00);
  if (v18 == 1) {
    return sub_2499AAF24((uint64_t)&v17, a1);
  }
  os_log_type_t v9 = sub_249AED7C8();
  os_log_type_t v10 = sub_249AEC4A8();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v15[1] = a1;
    uint64_t v14 = v13;
    uint64_t v16 = v13;
    *(_DWORD *)os_log_type_t v12 = 136315138;
    v15[2] = sub_249924094(0xD000000000000019, 0x8000000249B164D0, &v16);
    sub_249AED8F8();
    _os_log_impl(&dword_249878000, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v14, -1, -1);
    MEMORY[0x24C5B0110](v12, -1, -1);
  }

  sub_249AEBFD8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2499A6B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_249AEBFE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_249AED7C8();
    os_log_type_t v9 = sub_249AEC4A8();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      uint64_t v15 = v12;
      *(_DWORD *)os_log_type_t v11 = 136315138;
      v14[0] = v11 + 4;
      v14[1] = sub_249924094(0xD000000000000010, 0x8000000249B163B0, &v15);
      sub_249AED8F8();
      _os_log_impl(&dword_249878000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5B0110](v12, -1, -1);
      MEMORY[0x24C5B0110](v11, -1, -1);
    }

    sub_249AEBFD8();
    swift_getAtKeyPath();
    sub_2499A8720(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_2499A6D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  return sub_2499A6D80(a1, a2, a3, (uint64_t (*)(void))sub_2498B9AA8, 0xD000000000000019, 0x8000000249B164B0, (uint64_t (*)(void))sub_2498B9AB8, a4);
}

uint64_t sub_2499A6D80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t (*a4)(void)@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t (*a7)(void)@<X6>, uint64_t *a8@<X8>)
{
  unint64_t v32 = a6;
  uint64_t v15 = sub_249AEBFE8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  char v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    *a8 = a1;
    a8[1] = a2;
    return sub_2499AAF80(a1, a2, 1, a4);
  }
  else
  {
    uint64_t v31 = a5;
    sub_2499AAF80(a1, a2, 0, a4);
    os_log_type_t v19 = sub_249AED7C8();
    uint64_t v20 = sub_249AEC4A8();
    if (os_log_type_enabled(v20, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v29 = v16;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v23 = swift_slowAlloc();
      uint64_t v30 = a7;
      uint64_t v24 = v23;
      uint64_t v34 = v23;
      *(_DWORD *)uint64_t v22 = 136315138;
      v28[1] = v22 + 4;
      uint64_t v33 = sub_249924094(v31, v32, &v34);
      sub_249AED8F8();
      _os_log_impl(&dword_249878000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
      swift_arrayDestroy();
      uint64_t v25 = v24;
      a7 = v30;
      MEMORY[0x24C5B0110](v25, -1, -1);
      uint64_t v26 = v22;
      uint64_t v16 = v29;
      MEMORY[0x24C5B0110](v26, -1, -1);
    }

    sub_249AEBFD8();
    swift_getAtKeyPath();
    sub_2499AAF90(a1, a2, 0, a7);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
}

uint64_t sub_2499A6FD0@<X0>(uint64_t a1@<X8>)
{
  return sub_2499A7F7C(&qword_2696DFA78, &qword_2696DFCA8, 0xD000000000000023, 0x8000000249B16480, a1);
}

uint64_t sub_2499A6FFC@<X0>(uint64_t a1@<X8>)
{
  return sub_2499A7038(&qword_2696E1D20, MEMORY[0x263F18520], 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_2499A7038@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_249AEBFE8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_249AED7C8();
    uint64_t v21 = sub_249AEC4A8();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v26 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v24 = swift_slowAlloc();
      uint64_t v30 = v24;
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v29 = sub_249924094(v28, v26, &v30);
      sub_249AED8F8();
      _os_log_impl(&dword_249878000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5B0110](v24, -1, -1);
      MEMORY[0x24C5B0110](v23, -1, -1);
    }

    sub_249AEBFD8();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_2499A72F0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_249AEBFE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v10 = sub_249AED7C8();
    uint64_t v11 = sub_249AEC4A8();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v17 = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      v16[0] = v13 + 4;
      v16[1] = sub_249924094(0xD000000000000010, 0x8000000249B163D0, &v17);
      sub_249AED8F8();
      _os_log_impl(&dword_249878000, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24C5B0110](v14, -1, -1);
      MEMORY[0x24C5B0110](v13, -1, -1);
    }

    sub_249AEBFD8();
    swift_getAtKeyPath();
    sub_2499AAE94(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v17;
  }
  return a1;
}

uint64_t sub_2499A7518@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_249AEBFE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v2, (uint64_t)v10, &qword_2696E1CF8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_2499AAEA4((uint64_t)v10, a1, type metadata accessor for BannerConfiguration);
  }
  os_log_type_t v12 = sub_249AED7C8();
  uint64_t v13 = sub_249AEC4A8();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    v18[2] = sub_249924094(0xD000000000000013, 0x8000000249B16460, &v19);
    sub_249AED8F8();
    _os_log_impl(&dword_249878000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v17, -1, -1);
    MEMORY[0x24C5B0110](v15, -1, -1);
  }

  sub_249AEBFD8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2499A77B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_249AEBFE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v2, (uint64_t)v10, &qword_2696E1CF0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_2499AAEA4((uint64_t)v10, a1, type metadata accessor for UserInteractiveConfiguration);
  }
  os_log_type_t v12 = sub_249AED7C8();
  uint64_t v13 = sub_249AEC4A8();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    v18[2] = sub_249924094(0xD00000000000001CLL, 0x8000000249B16440, &v19);
    sub_249AED8F8();
    _os_log_impl(&dword_249878000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v17, -1, -1);
    MEMORY[0x24C5B0110](v15, -1, -1);
  }

  sub_249AEBFD8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2499A7A50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_249AEBFE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v2, (uint64_t)v10, &qword_2696E1CE8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_2499AAEA4((uint64_t)v10, a1, type metadata accessor for NoticeConfiguration);
  }
  os_log_type_t v12 = sub_249AED7C8();
  uint64_t v13 = sub_249AEC4A8();
  os_log_type_t v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    v18[1] = a1;
    uint64_t v17 = v16;
    uint64_t v19 = v16;
    *(_DWORD *)uint64_t v15 = 136315138;
    v18[2] = sub_249924094(0xD000000000000013, 0x8000000249B163F0, &v19);
    sub_249AED8F8();
    _os_log_impl(&dword_249878000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v17, -1, -1);
    MEMORY[0x24C5B0110](v15, -1, -1);
  }

  sub_249AEBFD8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_2499A7CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, void *a4@<X8>)
{
  uint64_t v8 = sub_249AEBFE8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    *a4 = a1;
    a4[1] = a2;
    return sub_2499AAFF4();
  }
  else
  {
    sub_2499AAFF4();
    os_log_type_t v12 = sub_249AED7C8();
    uint64_t v13 = sub_249AEC4A8();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v21 = v9;
      uint64_t v17 = v16;
      uint64_t v23 = v16;
      *(_DWORD *)uint64_t v15 = 136315138;
      os_log_type_t v20 = v15 + 4;
      uint64_t v22 = sub_249924094(0xD000000000000013, 0x8000000249B16580, &v23);
      sub_249AED8F8();
      _os_log_impl(&dword_249878000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      uint64_t v18 = v17;
      uint64_t v9 = v21;
      MEMORY[0x24C5B0110](v18, -1, -1);
      MEMORY[0x24C5B0110](v15, -1, -1);
    }

    sub_249AEBFD8();
    swift_getAtKeyPath();
    sub_2499AB000();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_2499A7F50@<X0>(uint64_t a1@<X8>)
{
  return sub_2499A7F7C(&qword_2696E1A98, &qword_2696DF8C8, 0xD000000000000021, 0x8000000249B16410, a1);
}

uint64_t sub_2499A7F7C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_249AEBFE8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  os_log_type_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2498D6084(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return sub_249882788((uint64_t)v17, a5, a2);
  }
  os_log_type_t v19 = sub_249AED7C8();
  os_log_type_t v20 = sub_249AEC4A8();
  if (os_log_type_enabled(v20, v19))
  {
    unint64_t v25 = a4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v26 = a5;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = v23;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v28 = sub_249924094(v27, v25, &v29);
    sub_249AED8F8();
    _os_log_impl(&dword_249878000, v20, v19, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24C5B0110](v23, -1, -1);
    MEMORY[0x24C5B0110](v22, -1, -1);
  }

  sub_249AEBFD8();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_2499A8204@<X0>(uint64_t a1@<X8>)
{
  return sub_2499A7038(&qword_2696E1D28, MEMORY[0x263F19750], 0xD000000000000011, 0x8000000249B165A0, a1);
}

double sub_2499A823C@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_2499A82C0()
{
  return sub_249AEB9F8();
}

uint64_t sub_2499A8340(uint64_t result)
{
  *(unsigned char *)(result + 322) = 1;
  return result;
}

double sub_2499A834C(uint64_t a1)
{
  *(_WORD *)(a1 + 320) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_2499A8380(uint64_t result)
{
  *(unsigned char *)(result + 322) = 0;
  return result;
}

void sub_2499A8388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned __int16 a41)
{
  if (a7)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_24989CD14(a14, a15, a16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2498D55E8(a25);
    swift_retain();
    swift_retain();
    id v41 = a35;
    id v42 = a36;
    swift_retain();
    sub_2499A84FC(a40, a41, HIBYTE(a41) & 1);
  }
}

uint64_t sub_2499A84FC(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2499A8508(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))
{
  __int16 v9 = *(_WORD *)(a1 + 320);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v5 = *(_OWORD *)(a1 + 240);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v4 = *(_OWORD *)(a1 + 208);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    v4,
    *((void *)&v4 + 1),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    *(void *)(a1 + 304),
    *(void *)(a1 + 312),
    v9);
  return a1;
}

void sub_2499A85A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,void *a35,void *a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,unsigned __int16 a41)
{
  if (a7)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_24989CF3C(a14, a15, a16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249939C70(a25);
    swift_release();

    swift_release();
    swift_release();
    sub_2499A8720(a40, a41, HIBYTE(a41) & 1);
  }
}

uint64_t sub_2499A8720(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2499A872C@<X0>(uint64_t a1@<X8>)
{
  sub_249988BB8();
  uint64_t result = sub_249AEBFF8();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return result;
}

uint64_t sub_2499A8784()
{
  return sub_249AEC008();
}

double sub_2499A87D8(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 138) = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

void sub_2499A87F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int16 a20)
{
  if (a5)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2498D55E8(a8);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_2499A84FC(a19, a20, HIBYTE(a20) & 1);
  }
}

uint64_t sub_2499A88EC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, __int16))
{
  __int16 v4 = *(_WORD *)(a1 + 152);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    v4);
  return a1;
}

void sub_2499A8960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int16 a20)
{
  if (a5)
  {
    swift_release();
    swift_release();
    swift_release();
    sub_249939C70(a8);
    swift_release();
    swift_release();
    swift_release();
    sub_2499A8720(a19, a20, HIBYTE(a20) & 1);
  }
}

uint64_t sub_2499A8A4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2499A8A94(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_2498D5E8C(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2499A8AD8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t initializeBufferWithCopyOfBuffer for InstrumentView(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    char v9 = *((unsigned char *)a2 + 24);
    swift_retain();
    j__swift_retain();
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v9;
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v17 = sub_249AEB808();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v11, v12, v17);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
    }
    else
    {
      *uint64_t v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = a1 + v18;
    uint64_t v70 = a1 + v18;
    uint64_t v69 = (uint64_t)a2 + v18;
    uint64_t v20 = sub_249AEB808();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v69, v20);
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)(v19 + *(int *)(v21 + 52)) = *(void *)(v69 + *(int *)(v21 + 52));
    uint64_t v71 = type metadata accessor for Instrument();
    uint64_t v22 = *(int *)(v71 + 20);
    uint64_t v23 = (uint64_t *)(v19 + v22);
    uint64_t v24 = (uint64_t *)(v69 + v22);
    char v97 = (void *)v24[10];
    char v98 = (void *)v24[9];
    uint64_t v95 = v24[12];
    unint64_t v96 = v24[11];
    uint64_t v93 = v24[14];
    uint64_t v94 = v24[13];
    uint64_t v91 = v24[16];
    uint64_t v92 = v24[15];
    uint64_t v89 = v24[18];
    uint64_t v90 = v24[17];
    uint64_t v87 = (void *)v24[20];
    uint64_t v88 = v24[19];
    uint64_t v85 = v24[22];
    uint64_t v86 = v24[21];
    uint64_t v83 = v24[24];
    uint64_t v84 = v24[23];
    uint64_t v81 = v24[26];
    uint64_t v82 = v24[25];
    uint64_t v79 = (void *)v24[28];
    uint64_t v80 = (void *)v24[27];
    uint64_t v78 = v24[29];
    uint64_t v77 = v24[30];
    uint64_t v76 = v24[31];
    uint64_t v75 = v24[32];
    uint64_t v68 = a1;
    uint64_t v74 = v24[33];
    uint64_t v73 = v24[34];
    uint64_t v72 = v24[35];
    uint64_t v40 = v24[36];
    uint64_t v41 = v24[37];
    uint64_t v42 = v24[38];
    uint64_t v43 = v24[39];
    uint64_t v44 = v24[40];
    unint64_t v45 = v24[41];
    uint64_t v46 = v24[42];
    uint64_t v47 = v24[43];
    uint64_t v48 = v24[44];
    uint64_t v49 = v24[45];
    uint64_t v50 = v24[46];
    uint64_t v51 = v24[47];
    uint64_t v52 = v24[48];
    uint64_t v53 = v24[49];
    uint64_t v54 = v24[50];
    uint64_t v55 = v24[51];
    uint64_t v56 = v24[52];
    uint64_t v57 = v24[53];
    uint64_t v58 = v24[54];
    uint64_t v59 = v24[55];
    uint64_t v60 = v24[56];
    uint64_t v61 = v24[57];
    uint64_t v62 = v24[58];
    uint64_t v63 = v24[59];
    unint64_t v64 = v24[60];
    uint64_t v65 = v24[61];
    unint64_t v66 = v24[62];
    uint64_t v67 = v24[63];
    unint64_t v25 = (void *)v24[8];
    uint64_t v26 = *v24;
    uint64_t v27 = v24[1];
    uint64_t v28 = (void *)v24[2];
    uint64_t v29 = (void *)v24[3];
    uint64_t v30 = (void *)v24[4];
    uint64_t v31 = (void *)v24[5];
    uint64_t v32 = v24[6];
    uint64_t v33 = v24[7];
    sub_2498FB4B4(*v24, v27, v28, v29, v30, v31, v32, v33, v25, v98, v97, v96, v95, v94, v93, v92, v91, v90, v89,
      v88,
      v87,
      v86,
      v85,
      v84,
      v83,
      v82,
      v81,
      v80,
      v79,
      v78,
      v77,
      v76,
      v75,
      v74,
      v73,
      v72,
      v40,
      v41,
      v42,
      v43,
      v44,
      v45,
      v46,
      v47,
      v48,
      v49,
      v50,
      v51,
      v52,
      v53,
      v54,
      v55,
      v56,
      v57,
      v58,
      v59,
      v60,
      v61,
      v62,
      v63,
      v64,
      v65,
      v66);
    *uint64_t v23 = v26;
    v23[1] = v27;
    v23[2] = (uint64_t)v28;
    v23[3] = (uint64_t)v29;
    v23[4] = (uint64_t)v30;
    v23[5] = (uint64_t)v31;
    v23[6] = v32;
    v23[7] = v33;
    v23[8] = (uint64_t)v25;
    uint64_t v16 = v68;
    v23[9] = (uint64_t)v98;
    v23[10] = (uint64_t)v97;
    v23[11] = v96;
    v23[12] = v95;
    v23[13] = v94;
    v23[14] = v93;
    v23[15] = v92;
    v23[16] = v91;
    v23[17] = v90;
    v23[18] = v89;
    v23[19] = v88;
    v23[20] = (uint64_t)v87;
    v23[21] = v86;
    v23[22] = v85;
    v23[23] = v84;
    v23[24] = v83;
    v23[25] = v82;
    v23[26] = v81;
    v23[27] = (uint64_t)v80;
    v23[28] = (uint64_t)v79;
    v23[29] = v78;
    v23[30] = v77;
    v23[31] = v76;
    v23[32] = v75;
    v23[33] = v74;
    v23[34] = v73;
    v23[35] = v72;
    v23[36] = v40;
    v23[37] = v41;
    v23[38] = v42;
    v23[39] = v43;
    v23[40] = v44;
    v23[41] = v45;
    v23[42] = v46;
    v23[43] = v47;
    v23[44] = v48;
    v23[45] = v49;
    v23[46] = v50;
    v23[47] = v51;
    v23[48] = v52;
    v23[49] = v53;
    v23[50] = v54;
    v23[51] = v55;
    v23[52] = v56;
    v23[53] = v57;
    v23[54] = v58;
    v23[55] = v59;
    v23[56] = v60;
    v23[57] = v61;
    v23[58] = v62;
    v23[59] = v63;
    v23[60] = v64;
    v23[61] = v65;
    v23[62] = v66;
    v23[63] = v67;
    uint64_t v34 = *(int *)(v71 + 24);
    uint64_t v35 = v70 + v34;
    uint64_t v36 = v69 + v34;
    uint64_t v37 = *(void *)(v36 + 8);
    *(void *)uint64_t v35 = *(void *)v36;
    *(void *)(v35 + 8) = v37;
    *(void *)(v35 + 16) = *(void *)(v36 + 16);
    *(_WORD *)(v35 + 24) = *(_WORD *)(v36 + 24);
    uint64_t v38 = *(void *)(v36 + 40);
    *(void *)(v35 + 32) = *(void *)(v36 + 32);
    *(void *)(v35 + 40) = v38;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v16;
}

uint64_t destroy for InstrumentView(uint64_t a1, uint64_t a2)
{
  swift_release();
  j__swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
    {
      uint64_t v6 = sub_249AEB808();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = v7 + *(int *)(type metadata accessor for Instrument() + 20);
  long long v25 = *(_OWORD *)(v9 + 464);
  long long v26 = *(_OWORD *)(v9 + 480);
  long long v23 = *(_OWORD *)(v9 + 432);
  long long v24 = *(_OWORD *)(v9 + 448);
  long long v21 = *(_OWORD *)(v9 + 400);
  long long v22 = *(_OWORD *)(v9 + 416);
  long long v19 = *(_OWORD *)(v9 + 368);
  long long v20 = *(_OWORD *)(v9 + 384);
  long long v17 = *(_OWORD *)(v9 + 336);
  long long v18 = *(_OWORD *)(v9 + 352);
  long long v15 = *(_OWORD *)(v9 + 304);
  long long v16 = *(_OWORD *)(v9 + 320);
  long long v13 = *(_OWORD *)(v9 + 272);
  long long v14 = *(_OWORD *)(v9 + 288);
  long long v11 = *(_OWORD *)(v9 + 240);
  long long v12 = *(_OWORD *)(v9 + 256);
  sub_2498FCAAC(*(void *)v9, *(void *)(v9 + 8), *(void **)(v9 + 16), *(void **)(v9 + 24), *(void **)(v9 + 32), *(void **)(v9 + 40), *(void *)(v9 + 48), *(void *)(v9 + 56), *(void **)(v9 + 64), *(void **)(v9 + 72), *(void **)(v9 + 80), *(void *)(v9 + 88), *(void *)(v9 + 96), *(void *)(v9 + 104), *(void *)(v9 + 112), *(void *)(v9 + 120), *(void *)(v9 + 128), *(void *)(v9 + 136), *(void *)(v9 + 144),
    *(void *)(v9 + 152),
    *(void **)(v9 + 160),
    *(void *)(v9 + 168),
    *(void *)(v9 + 176),
    *(void *)(v9 + 184),
    *(void *)(v9 + 192),
    *(void *)(v9 + 200),
    *(void *)(v9 + 208),
    *(void **)(v9 + 216),
    *(void **)(v9 + 224),
    *(void *)(v9 + 232),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((unint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    SBYTE8(v18),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    SBYTE8(v21),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    SBYTE8(v24),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    *(void *)(v9 + 496));
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  swift_retain();
  j__swift_retain();
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  long long v11 = (void *)(a2 + v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v15 = sub_249AEB808();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v10, v11, v15);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  else
  {
    *uint64_t v10 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v64 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v63 = a2 + v16;
  uint64_t v19 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(v17 + *(int *)(v20 + 52)) = *(void *)(v18 + *(int *)(v20 + 52));
  uint64_t v65 = type metadata accessor for Instrument();
  uint64_t v21 = *(int *)(v65 + 20);
  long long v22 = (uint64_t *)(v17 + v21);
  long long v23 = (uint64_t *)(v18 + v21);
  uint64_t v66 = a1;
  uint64_t v95 = (void *)v23[3];
  uint64_t v96 = v23[7];
  uint64_t v97 = v23[6];
  uint64_t v93 = (void *)v23[9];
  uint64_t v94 = (void *)v23[8];
  unint64_t v91 = v23[11];
  uint64_t v92 = (void *)v23[10];
  uint64_t v89 = v23[13];
  uint64_t v90 = v23[12];
  uint64_t v87 = v23[15];
  uint64_t v88 = v23[14];
  uint64_t v85 = v23[17];
  uint64_t v86 = v23[16];
  uint64_t v83 = v23[19];
  uint64_t v84 = v23[18];
  uint64_t v81 = v23[21];
  uint64_t v82 = (void *)v23[20];
  uint64_t v79 = v23[23];
  uint64_t v80 = v23[22];
  uint64_t v77 = v23[25];
  uint64_t v78 = v23[24];
  uint64_t v76 = v23[26];
  uint64_t v75 = (void *)v23[27];
  uint64_t v74 = (void *)v23[28];
  uint64_t v73 = v23[29];
  uint64_t v72 = v23[30];
  uint64_t v71 = v23[31];
  uint64_t v70 = v23[32];
  uint64_t v69 = v23[33];
  uint64_t v68 = v23[34];
  uint64_t v67 = v23[35];
  uint64_t v24 = v23[38];
  uint64_t v39 = v23[36];
  uint64_t v40 = v23[37];
  uint64_t v41 = v23[39];
  uint64_t v42 = v23[40];
  uint64_t v25 = v23[42];
  uint64_t v27 = v23[43];
  uint64_t v26 = v23[44];
  unint64_t v43 = v23[41];
  uint64_t v44 = v23[45];
  uint64_t v45 = v23[46];
  uint64_t v46 = v23[47];
  uint64_t v47 = v23[48];
  uint64_t v48 = v23[49];
  uint64_t v49 = v23[50];
  uint64_t v50 = v23[51];
  uint64_t v51 = v23[52];
  uint64_t v52 = v23[53];
  uint64_t v53 = v23[54];
  uint64_t v54 = v23[55];
  uint64_t v55 = v23[56];
  uint64_t v56 = v23[57];
  uint64_t v57 = v23[58];
  uint64_t v58 = v23[59];
  unint64_t v59 = v23[60];
  uint64_t v60 = v23[61];
  unint64_t v61 = v23[62];
  uint64_t v62 = v23[63];
  uint64_t v28 = *v23;
  uint64_t v29 = v23[1];
  uint64_t v30 = (void *)v23[2];
  uint64_t v31 = (void *)v23[4];
  uint64_t v32 = (void *)v23[5];
  sub_2498FB4B4(*v23, v29, v30, v95, v31, v32, v97, v96, v94, v93, v92, v91, v90, v89, v88, v87, v86, v85, v84,
    v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v39,
    v40,
    v24,
    v41,
    v42,
    v43,
    v25,
    v27,
    v26,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60,
    v61);
  *long long v22 = v28;
  v22[1] = v29;
  v22[2] = (uint64_t)v30;
  v22[3] = (uint64_t)v95;
  v22[4] = (uint64_t)v31;
  v22[5] = (uint64_t)v32;
  v22[6] = v97;
  v22[7] = v96;
  v22[8] = (uint64_t)v94;
  v22[9] = (uint64_t)v93;
  v22[10] = (uint64_t)v92;
  v22[11] = v91;
  v22[12] = v90;
  v22[13] = v89;
  v22[14] = v88;
  v22[15] = v87;
  v22[16] = v86;
  v22[17] = v85;
  v22[18] = v84;
  v22[19] = v83;
  v22[20] = (uint64_t)v82;
  v22[21] = v81;
  v22[22] = v80;
  v22[23] = v79;
  v22[24] = v78;
  v22[25] = v77;
  v22[26] = v76;
  v22[27] = (uint64_t)v75;
  v22[28] = (uint64_t)v74;
  v22[29] = v73;
  v22[30] = v72;
  v22[31] = v71;
  v22[32] = v70;
  v22[33] = v69;
  v22[34] = v68;
  v22[35] = v67;
  v22[36] = v39;
  v22[37] = v40;
  v22[38] = v24;
  v22[39] = v41;
  v22[40] = v42;
  v22[41] = v43;
  v22[42] = v25;
  v22[43] = v27;
  v22[44] = v26;
  v22[45] = v44;
  v22[46] = v45;
  v22[47] = v46;
  v22[48] = v47;
  v22[49] = v48;
  v22[50] = v49;
  v22[51] = v50;
  v22[52] = v51;
  v22[53] = v52;
  v22[54] = v53;
  v22[55] = v54;
  v22[56] = v55;
  v22[57] = v56;
  v22[58] = v57;
  v22[59] = v58;
  v22[60] = v59;
  v22[61] = v60;
  v22[62] = v61;
  v22[63] = v62;
  uint64_t v33 = *(int *)(v65 + 24);
  uint64_t v34 = v64 + v33;
  uint64_t v35 = v63 + v33;
  uint64_t v36 = *(void *)(v35 + 8);
  *(void *)uint64_t v34 = *(void *)v35;
  *(void *)(v34 + 8) = v36;
  *(void *)(v34 + 16) = *(void *)(v35 + 16);
  *(_WORD *)(v34 + 24) = *(_WORD *)(v35 + 24);
  uint64_t v37 = *(void *)(v35 + 40);
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  *(void *)(v34 + 40) = v37;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v66;
}

uint64_t assignWithCopy for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  j__swift_retain();
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  j__swift_release();
  uint64_t v8 = a1;
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (void *)(a1 + v9);
    long long v11 = (void *)(a2 + v9);
    sub_2498D60E8(a1 + v9, &qword_2696E1A98);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v15 = sub_249AEB808();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v10, v11, v15);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v91 = v8;
  uint64_t v17 = v8 + v16;
  uint64_t v94 = v8 + v16;
  uint64_t v93 = a2 + v16;
  uint64_t v18 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v17, v93, v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(v17 + *(int *)(v19 + 52)) = *(void *)(v93 + *(int *)(v19 + 52));
  uint64_t v92 = type metadata accessor for Instrument();
  uint64_t v20 = *(int *)(v92 + 20);
  uint64_t v21 = v17 + v20;
  long long v22 = (uint64_t *)(v93 + v20);
  uint64_t v129 = v22[1];
  uint64_t v130 = *v22;
  long long v127 = (void *)v22[3];
  uint64_t v128 = (void *)v22[2];
  uint64_t v125 = (void *)v22[5];
  char v126 = (void *)v22[4];
  uint64_t v123 = v22[7];
  uint64_t v124 = v22[6];
  uint64_t v121 = (void *)v22[9];
  char v122 = (void *)v22[8];
  unint64_t v119 = v22[11];
  uint64_t v120 = (void *)v22[10];
  uint64_t v117 = v22[13];
  uint64_t v118 = v22[12];
  uint64_t v115 = v22[15];
  uint64_t v116 = v22[14];
  uint64_t v114 = v22[16];
  uint64_t v113 = v22[17];
  uint64_t v112 = v22[18];
  uint64_t v111 = v22[19];
  uint64_t v110 = (void *)v22[20];
  uint64_t v109 = v22[21];
  uint64_t v108 = v22[22];
  uint64_t v107 = v22[23];
  uint64_t v106 = v22[24];
  uint64_t v105 = v22[25];
  uint64_t v104 = v22[26];
  uint64_t v103 = (void *)v22[27];
  uint64_t v102 = (void *)v22[28];
  uint64_t v101 = v22[29];
  uint64_t v100 = v22[30];
  uint64_t v99 = v22[31];
  uint64_t v98 = v22[32];
  uint64_t v97 = v22[33];
  uint64_t v96 = v22[34];
  uint64_t v95 = v22[35];
  uint64_t v23 = v22[37];
  uint64_t v24 = v22[38];
  uint64_t v26 = v22[39];
  uint64_t v25 = v22[40];
  unint64_t v28 = v22[41];
  uint64_t v27 = v22[42];
  uint64_t v30 = v22[43];
  uint64_t v29 = v22[44];
  uint64_t v31 = v22[45];
  uint64_t v72 = v22[36];
  uint64_t v73 = v22[46];
  uint64_t v74 = v22[47];
  uint64_t v75 = v22[48];
  uint64_t v76 = v22[49];
  uint64_t v77 = v22[50];
  uint64_t v78 = v22[51];
  uint64_t v79 = v22[52];
  uint64_t v80 = v22[53];
  uint64_t v81 = v22[54];
  uint64_t v82 = v22[55];
  uint64_t v83 = v22[56];
  uint64_t v84 = v22[57];
  uint64_t v85 = v22[58];
  uint64_t v86 = v22[59];
  unint64_t v87 = v22[60];
  uint64_t v88 = v22[61];
  unint64_t v89 = v22[62];
  uint64_t v90 = v22[63];
  sub_2498FB4B4(*v22, v129, v128, v127, v126, v125, v124, v123, v122, v121, v120, v119, v118, v117, v116, v115, v114, v113, v112,
    v111,
    v110,
    v109,
    v108,
    v107,
    v106,
    v105,
    v104,
    v103,
    v102,
    v101,
    v100,
    v99,
    v98,
    v97,
    v96,
    v95,
    v72,
    v23,
    v24,
    v26,
    v25,
    v28,
    v27,
    v30,
    v29,
    v31,
    v73,
    v74,
    *((_OWORD *)v22 + 24),
    v76,
    v77,
    v78,
    v79,
    v80,
    v81,
    v82,
    v83,
    v84,
    v85,
    v86,
    v87,
    v88,
    v89);
  uint64_t v32 = *(void *)v21;
  uint64_t v33 = *(void *)(v21 + 8);
  *(void *)uint64_t v21 = v130;
  *(void *)(v21 + 8) = v129;
  uint64_t v34 = *(void **)(v21 + 16);
  uint64_t v35 = *(void **)(v21 + 24);
  *(void *)(v21 + 16) = v128;
  *(void *)(v21 + 24) = v127;
  uint64_t v36 = *(void **)(v21 + 32);
  uint64_t v37 = *(void **)(v21 + 40);
  *(void *)(v21 + 32) = v126;
  *(void *)(v21 + 40) = v125;
  uint64_t v38 = *(void *)(v21 + 48);
  uint64_t v39 = *(void *)(v21 + 56);
  *(void *)(v21 + 48) = v124;
  *(void *)(v21 + 56) = v123;
  long long v40 = *(_OWORD *)(v21 + 64);
  long long v41 = *(_OWORD *)(v21 + 80);
  *(void *)(v21 + 64) = v122;
  *(void *)(v21 + 72) = v121;
  *(void *)(v21 + 80) = v120;
  *(void *)(v21 + 88) = v119;
  long long v42 = *(_OWORD *)(v21 + 96);
  long long v43 = *(_OWORD *)(v21 + 112);
  *(void *)(v21 + 96) = v118;
  *(void *)(v21 + 104) = v117;
  *(void *)(v21 + 112) = v116;
  *(void *)(v21 + 120) = v115;
  long long v44 = *(_OWORD *)(v21 + 128);
  long long v45 = *(_OWORD *)(v21 + 144);
  *(void *)(v21 + 128) = v114;
  *(void *)(v21 + 136) = v113;
  *(void *)(v21 + 144) = v112;
  *(void *)(v21 + 152) = v111;
  long long v46 = *(_OWORD *)(v21 + 160);
  long long v47 = *(_OWORD *)(v21 + 176);
  *(void *)(v21 + 160) = v110;
  *(void *)(v21 + 168) = v109;
  *(void *)(v21 + 176) = v108;
  *(void *)(v21 + 184) = v107;
  long long v48 = *(_OWORD *)(v21 + 192);
  long long v49 = *(_OWORD *)(v21 + 208);
  *(void *)(v21 + 192) = v106;
  *(void *)(v21 + 200) = v105;
  *(void *)(v21 + 208) = v104;
  *(void *)(v21 + 216) = v103;
  long long v50 = *(_OWORD *)(v21 + 224);
  long long v51 = *(_OWORD *)(v21 + 240);
  *(void *)(v21 + 224) = v102;
  *(void *)(v21 + 232) = v101;
  *(void *)(v21 + 240) = v100;
  *(void *)(v21 + 248) = v99;
  long long v52 = *(_OWORD *)(v21 + 256);
  long long v53 = *(_OWORD *)(v21 + 272);
  *(void *)(v21 + 256) = v98;
  *(void *)(v21 + 264) = v97;
  *(void *)(v21 + 272) = v96;
  *(void *)(v21 + 280) = v95;
  long long v54 = *(_OWORD *)(v21 + 288);
  long long v55 = *(_OWORD *)(v21 + 304);
  *(void *)(v21 + 288) = v72;
  *(void *)(v21 + 296) = v23;
  *(void *)(v21 + 304) = v24;
  *(void *)(v21 + 312) = v26;
  long long v56 = *(_OWORD *)(v21 + 320);
  long long v57 = *(_OWORD *)(v21 + 336);
  *(void *)(v21 + 320) = v25;
  *(void *)(v21 + 328) = v28;
  *(void *)(v21 + 336) = v27;
  *(void *)(v21 + 344) = v30;
  long long v58 = *(_OWORD *)(v21 + 352);
  long long v59 = *(_OWORD *)(v21 + 368);
  *(void *)(v21 + 352) = v29;
  *(void *)(v21 + 360) = v31;
  *(void *)(v21 + 368) = v73;
  *(void *)(v21 + 376) = v74;
  long long v60 = *(_OWORD *)(v21 + 384);
  long long v61 = *(_OWORD *)(v21 + 400);
  *(void *)(v21 + 384) = v75;
  *(void *)(v21 + 392) = v76;
  *(void *)(v21 + 400) = v77;
  *(void *)(v21 + 408) = v78;
  long long v62 = *(_OWORD *)(v21 + 416);
  long long v63 = *(_OWORD *)(v21 + 432);
  *(void *)(v21 + 416) = v79;
  *(void *)(v21 + 424) = v80;
  *(void *)(v21 + 432) = v81;
  *(void *)(v21 + 440) = v82;
  long long v64 = *(_OWORD *)(v21 + 448);
  long long v65 = *(_OWORD *)(v21 + 464);
  *(void *)(v21 + 448) = v83;
  *(void *)(v21 + 456) = v84;
  *(void *)(v21 + 464) = v85;
  *(void *)(v21 + 472) = v86;
  long long v66 = *(_OWORD *)(v21 + 480);
  *(void *)(v21 + 480) = v87;
  *(void *)(v21 + 488) = v88;
  unint64_t v67 = *(void *)(v21 + 496);
  *(void *)(v21 + 496) = v89;
  *(void *)(v21 + 504) = v90;
  sub_2498FCAAC(v32, v33, v34, v35, v36, v37, v38, v39, (void *)v40, *((void **)&v40 + 1), (void *)v41, *((unint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45,
    *((uint64_t *)&v45 + 1),
    (void *)v46,
    *((uint64_t *)&v46 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((void **)&v49 + 1),
    (void *)v50,
    *((uint64_t *)&v50 + 1),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    *((uint64_t *)&v53 + 1),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    *((unint64_t *)&v56 + 1),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    SBYTE8(v58),
    v59,
    *((uint64_t *)&v59 + 1),
    v60,
    *((uint64_t *)&v60 + 1),
    v61,
    SBYTE8(v61),
    v62,
    *((uint64_t *)&v62 + 1),
    v63,
    *((uint64_t *)&v63 + 1),
    v64,
    SBYTE8(v64),
    v65,
    *((uint64_t *)&v65 + 1),
    v66,
    *((uint64_t *)&v66 + 1),
    v67);
  uint64_t v68 = *(int *)(v92 + 24);
  uint64_t v69 = v94 + v68;
  uint64_t v70 = v93 + v68;
  *(void *)(v94 + v68) = *(void *)(v93 + v68);
  swift_retain();
  swift_release();
  *(void *)(v69 + 8) = *(void *)(v70 + 8);
  *(void *)(v69 + 16) = *(void *)(v70 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v69 + 24) = *(unsigned char *)(v70 + 24);
  *(unsigned char *)(v69 + 25) = *(unsigned char *)(v70 + 25);
  *(void *)(v69 + 32) = *(void *)(v70 + 32);
  *(void *)(v69 + 40) = *(void *)(v70 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v91;
}

uint64_t initializeWithTake for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A98);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_249AEB808();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(v15 + *(int *)(v18 + 52)) = *(void *)(v16 + *(int *)(v18 + 52));
  uint64_t v19 = type metadata accessor for Instrument();
  memcpy((void *)(v15 + *(int *)(v19 + 20)), (const void *)(v16 + *(int *)(v19 + 20)), 0x200uLL);
  uint64_t v20 = *(int *)(v19 + 24);
  uint64_t v21 = (_OWORD *)(v15 + v20);
  long long v22 = (_OWORD *)(v16 + v20);
  long long v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  v21[2] = v22[2];
  return a1;
}

uint64_t assignWithTake for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  char v6 = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v6;
  j__swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (const void *)(a2 + v7);
    sub_2498D60E8(a1 + v7, &qword_2696E1A98);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A98);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v14 = sub_249AEB808();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v8, v9, v14);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v15 = *(int *)(a3 + 28);
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  *(void *)(v16 + *(int *)(v19 + 52)) = *(void *)(v17 + *(int *)(v19 + 52));
  uint64_t v20 = type metadata accessor for Instrument();
  uint64_t v21 = *(int *)(v20 + 20);
  uint64_t v22 = v16 + v21;
  long long v23 = (_OWORD *)(v17 + v21);
  uint64_t v24 = *(void *)v22;
  uint64_t v25 = *(void *)(v22 + 8);
  uint64_t v26 = *(void **)(v22 + 16);
  uint64_t v27 = *(void **)(v22 + 24);
  unint64_t v28 = *(void **)(v22 + 32);
  uint64_t v29 = *(void **)(v22 + 40);
  uint64_t v30 = *(void *)(v22 + 48);
  uint64_t v31 = *(void *)(v22 + 56);
  long long v32 = *(_OWORD *)(v22 + 64);
  long long v33 = *(_OWORD *)(v22 + 80);
  long long v34 = *(_OWORD *)(v22 + 96);
  long long v35 = *(_OWORD *)(v22 + 112);
  long long v36 = *(_OWORD *)(v22 + 128);
  long long v37 = *(_OWORD *)(v22 + 144);
  long long v38 = *(_OWORD *)(v22 + 160);
  long long v39 = *(_OWORD *)(v22 + 176);
  long long v40 = *(_OWORD *)(v22 + 192);
  long long v41 = *(_OWORD *)(v22 + 208);
  long long v42 = *(_OWORD *)(v22 + 224);
  long long v43 = *(_OWORD *)(v22 + 240);
  long long v44 = *(_OWORD *)(v22 + 256);
  long long v45 = *(_OWORD *)(v22 + 272);
  long long v46 = *(_OWORD *)(v22 + 288);
  long long v47 = *(_OWORD *)(v22 + 304);
  long long v48 = *(_OWORD *)(v22 + 320);
  long long v49 = *(_OWORD *)(v22 + 336);
  long long v50 = *(_OWORD *)(v22 + 352);
  long long v51 = *(_OWORD *)(v22 + 368);
  long long v52 = *(_OWORD *)(v22 + 384);
  long long v53 = *(_OWORD *)(v22 + 400);
  long long v54 = *(_OWORD *)(v22 + 416);
  long long v55 = *(_OWORD *)(v22 + 432);
  long long v56 = *(_OWORD *)(v22 + 448);
  long long v57 = *(_OWORD *)(v22 + 464);
  long long v58 = *(_OWORD *)(v22 + 480);
  unint64_t v59 = *(void *)(v22 + 496);
  long long v60 = v23[1];
  *(_OWORD *)uint64_t v22 = *v23;
  *(_OWORD *)(v22 + 16) = v60;
  long long v61 = v23[3];
  *(_OWORD *)(v22 + 32) = v23[2];
  *(_OWORD *)(v22 + 48) = v61;
  long long v62 = v23[5];
  *(_OWORD *)(v22 + 64) = v23[4];
  *(_OWORD *)(v22 + 80) = v62;
  long long v63 = v23[7];
  *(_OWORD *)(v22 + 96) = v23[6];
  *(_OWORD *)(v22 + 112) = v63;
  long long v64 = v23[9];
  *(_OWORD *)(v22 + 128) = v23[8];
  *(_OWORD *)(v22 + 144) = v64;
  long long v65 = v23[11];
  *(_OWORD *)(v22 + 160) = v23[10];
  *(_OWORD *)(v22 + 176) = v65;
  long long v66 = v23[13];
  *(_OWORD *)(v22 + 192) = v23[12];
  *(_OWORD *)(v22 + 208) = v66;
  long long v67 = v23[15];
  *(_OWORD *)(v22 + 224) = v23[14];
  *(_OWORD *)(v22 + 240) = v67;
  long long v68 = v23[17];
  *(_OWORD *)(v22 + 256) = v23[16];
  *(_OWORD *)(v22 + 272) = v68;
  long long v69 = v23[19];
  *(_OWORD *)(v22 + 288) = v23[18];
  *(_OWORD *)(v22 + 304) = v69;
  long long v70 = v23[21];
  *(_OWORD *)(v22 + 320) = v23[20];
  *(_OWORD *)(v22 + 336) = v70;
  long long v71 = v23[23];
  *(_OWORD *)(v22 + 352) = v23[22];
  *(_OWORD *)(v22 + 368) = v71;
  long long v72 = v23[25];
  *(_OWORD *)(v22 + 384) = v23[24];
  *(_OWORD *)(v22 + 400) = v72;
  long long v73 = v23[27];
  *(_OWORD *)(v22 + 416) = v23[26];
  *(_OWORD *)(v22 + 432) = v73;
  long long v74 = v23[29];
  *(_OWORD *)(v22 + 448) = v23[28];
  *(_OWORD *)(v22 + 464) = v74;
  long long v75 = v23[31];
  *(_OWORD *)(v22 + 480) = v23[30];
  *(_OWORD *)(v22 + 496) = v75;
  sub_2498FCAAC(v24, v25, v26, v27, v28, v29, v30, v31, (void *)v32, *((void **)&v32 + 1), (void *)v33, *((unint64_t *)&v33 + 1), v34, *((uint64_t *)&v34 + 1), v35, *((uint64_t *)&v35 + 1), v36, *((uint64_t *)&v36 + 1), v37,
    *((uint64_t *)&v37 + 1),
    (void *)v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((void **)&v41 + 1),
    (void *)v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v48,
    *((unint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    SBYTE8(v50),
    v51,
    *((uint64_t *)&v51 + 1),
    v52,
    *((uint64_t *)&v52 + 1),
    v53,
    SBYTE8(v53),
    v54,
    *((uint64_t *)&v54 + 1),
    v55,
    *((uint64_t *)&v55 + 1),
    v56,
    SBYTE8(v56),
    v57,
    *((uint64_t *)&v57 + 1),
    v58,
    *((uint64_t *)&v58 + 1),
    v59);
  uint64_t v76 = *(int *)(v20 + 24);
  uint64_t v77 = v16 + v76;
  uint64_t v78 = v17 + v76;
  *(void *)uint64_t v77 = *(void *)v78;
  swift_release();
  uint64_t v79 = *(void *)(v78 + 16);
  *(void *)(v77 + 8) = *(void *)(v78 + 8);
  *(void *)(v77 + 16) = v79;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v77 + 24) = *(unsigned char *)(v78 + 24);
  *(unsigned char *)(v77 + 25) = *(unsigned char *)(v78 + 25);
  uint64_t v80 = *(void *)(v78 + 40);
  *(void *)(v77 + 32) = *(void *)(v78 + 32);
  *(void *)(v77 + 40) = v80;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499AAA5C);
}

uint64_t sub_2499AAA5C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CB0);
    uint64_t v10 = *(void *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == a2)
    {
      uint64_t v11 = v9;
      uint64_t v12 = (char *)a1 + *(int *)(a3 + 24);
      uint64_t v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
      return v13(v12, a2, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for Instrument();
      uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
      uint64_t v16 = v14;
      uint64_t v17 = (char *)a1 + *(int *)(a3 + 28);
      return v15(v17, a2, v16);
    }
  }
}

uint64_t storeEnumTagSinglePayload for InstrumentView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499AABAC);
}

void *sub_2499AABAC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  int v5 = result;
  if (a3 == 2147483646)
  {
    *uint64_t result = a2;
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CB0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Instrument();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 28);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_2499AACDC()
{
  sub_2499AADB8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Instrument();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2499AADB8()
{
  if (!qword_2696E1CC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF8C8);
    unint64_t v0 = sub_249AEBB18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E1CC8);
    }
  }
}

unint64_t sub_2499AAE18()
{
  unint64_t result = qword_2696E1CD0;
  if (!qword_2696E1CD0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1CD8);
    sub_2499A55E4();
    sub_2499A5F24();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1CD0);
  }
  return result;
}

uint64_t sub_2499AAE94(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_2499AAEA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2499AAF0C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_2499AAF18(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_2499AAF24(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_2499AAF80(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a3) {
    return a4();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_2499AAF90(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(void))
{
  if (a3) {
    return a4();
  }
  else {
    return swift_release();
  }
}

unint64_t sub_2499AAFA0()
{
  unint64_t result = qword_2696E1D08;
  if (!qword_2696E1D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1D08);
  }
  return result;
}

uint64_t sub_2499AAFF4()
{
  return swift_retain();
}

uint64_t sub_2499AB000()
{
  return swift_release();
}

uint64_t RequestContentModel.displayName.getter()
{
  uint64_t v1 = v0;
  unint64_t v2 = 0xD000000000000012;
  uint64_t v3 = type metadata accessor for PopoverModel(0);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RequestContentModel();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499AB550(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2499AB5B4((uint64_t)v8, (uint64_t)v5);
      v49[0] = 0;
      v49[1] = 0xE000000000000000;
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      unint64_t v46 = 0xD000000000000010;
      unint64_t v47 = 0x8000000249B165E0;
      uint64_t v19 = type metadata accessor for Instrument();
      sub_2498A4990((uint64_t)&v5[*(int *)(v19 + 20)], (uint64_t)v48);
      sub_2498A4990((uint64_t)v48, (uint64_t)v49);
      int v20 = sub_2498B8790((uint64_t)v49);
      if (v20 == 7)
      {
        if (*(void *)(sub_2498B87AC((uint64_t)v49) + 64))
        {
LABEL_8:
          swift_bridgeObjectRetain();
          goto LABEL_18;
        }
      }
      else if (v20 == 6 && *(void *)(sub_2498B87AC((uint64_t)v49) + 24))
      {
        goto LABEL_8;
      }
      swift_bridgeObjectRelease();
LABEL_18:
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      unint64_t v2 = v46;
      sub_2499AB764((uint64_t)v5, type metadata accessor for PopoverModel);
      return v2;
    case 2u:
      uint64_t v22 = *((void *)v8 + 2);
      uint64_t v23 = *((void *)v8 + 3);
      uint64_t v24 = *((void *)v8 + 4);
      uint64_t v25 = *((void *)v8 + 5);
      uint64_t v26 = *((void *)v8 + 7);
      uint64_t v27 = *((void *)v8 + 8);
      uint64_t v28 = *((void *)v8 + 10);
      uint64_t v43 = *((void *)v8 + 11);
      uint64_t v44 = v28;
      uint64_t v42 = *((void *)v8 + 12);
      uint64_t v45 = *((void *)v8 + 14);
      char v29 = v8[48];
      char v30 = v8[72];
      swift_bridgeObjectRelease();
      sub_249934D7C(v22, v23, v24, v25, v29);
      sub_2499AB618(v26, v27, v30);
      sub_2499AB62C(v44, v43);
      swift_release();
      return v2;
    case 3u:
      uint64_t v21 = *((void *)v8 + 5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2498B9AB8(v21);
      return 1970169165;
    case 4u:
      return v2;
    default:
      uint64_t v9 = *((void *)v8 + 1);
      uint64_t v11 = *((void *)v8 + 3);
      uint64_t v10 = *((void *)v8 + 4);
      uint64_t v13 = *((void *)v8 + 5);
      uint64_t v12 = *((void *)v8 + 6);
      uint64_t v14 = *((void *)v8 + 7);
      uint64_t v15 = *((void *)v8 + 8);
      uint64_t v16 = *((void *)v8 + 10);
      unint64_t v18 = *((void *)v8 + 11);
      uint64_t v17 = *((void *)v8 + 12);
      uint64_t v44 = *((void *)v8 + 9);
      uint64_t v45 = v17;
      uint64_t v40 = *((void *)v8 + 13);
      uint64_t v41 = v10;
      LODWORD(v17) = v8[112];
      uint64_t v42 = v11;
      uint64_t v43 = v16;
      if (v17 != 1)
      {
        uint64_t v38 = v9;
        uint64_t v39 = v13;
        v49[0] = 0;
        v49[1] = 0xE000000000000000;
        sub_249AEDA78();
        swift_bridgeObjectRelease();
        v49[0] = 0xD000000000000011;
        v49[1] = 0x8000000249B16600;
        uint64_t v31 = v15;
        if (v18 >> 62)
        {
          if (v18 >> 62 != 1) {
            goto LABEL_19;
          }
          uint64_t v31 = v40;
        }
        if (v31)
        {
          swift_bridgeObjectRetain();
LABEL_20:
          sub_249AED1E8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2498B9AB8(v42);
          uint64_t v32 = v39;
          uint64_t v33 = v12;
          uint64_t v34 = v14;
          uint64_t v35 = v15;
          goto LABEL_22;
        }
LABEL_19:
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
      uint64_t v38 = v15;
      uint64_t v39 = v14;
      v49[0] = 0;
      v49[1] = 0xE000000000000000;
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      strcpy((char *)v49, "Local Widget: ");
      HIBYTE(v49[1]) = -18;
      if (v18 >> 62 == 2) {
        swift_bridgeObjectRetain();
      }
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2498B9AB8(v42);
      uint64_t v32 = v13;
      uint64_t v33 = v12;
      uint64_t v35 = v38;
      uint64_t v34 = v39;
LABEL_22:
      sub_2498A58D4(v32, v33, v34, v35, v44, v43, v18);
      return v49[0];
  }
}

uint64_t type metadata accessor for RequestContentModel()
{
  uint64_t result = qword_2696E1D30;
  if (!qword_2696E1D30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_2499AB550(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RequestContentModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499AB5B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PopoverModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499AB618(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1) {
    return sub_249934DE4(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_2499AB62C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t RequestContentModel.isRemoteFloatingContent.getter()
{
  uint64_t v1 = type metadata accessor for RequestContentModel();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499AB550(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = (uint64_t (*)(void))type metadata accessor for RequestContentModel;
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = 1;
      uint64_t v5 = type metadata accessor for PopoverModel;
    }
    else
    {
      uint64_t v6 = 0;
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for RequestContentModel;
    }
  }
  else
  {
    uint64_t v6 = 1;
  }
  sub_2499AB764((uint64_t)v3, v5);
  return v6;
}

uint64_t sub_2499AB764(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t RequestContentModel.isFocusable.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PopoverModel(0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for RequestContentModel();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499AB550(v1, (uint64_t)v7);
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2499AB5B4((uint64_t)v7, (uint64_t)v4);
      uint64_t v8 = v4[*(int *)(v2 + 20)];
      sub_2499AB764((uint64_t)v4, type metadata accessor for PopoverModel);
      break;
    case 2u:
      uint64_t v17 = *((void *)v7 + 2);
      uint64_t v18 = *((void *)v7 + 3);
      uint64_t v19 = *((void *)v7 + 4);
      uint64_t v20 = *((void *)v7 + 5);
      uint64_t v21 = *((void *)v7 + 7);
      uint64_t v22 = *((void *)v7 + 8);
      uint64_t v23 = *((void *)v7 + 10);
      uint64_t v24 = *((void *)v7 + 11);
      v29[1] = *((void *)v7 + 12);
      uint64_t v30 = v23;
      uint64_t v31 = *((void *)v7 + 14);
      char v25 = v7[48];
      int v26 = v7[72];
      swift_bridgeObjectRelease();
      uint64_t v8 = v26 != 255;
      sub_249934D7C(v17, v18, v19, v20, v25);
      sub_2499AB618(v21, v22, v26);
      sub_2499AB62C(v30, v24);
      swift_release();
      break;
    case 3u:
      uint64_t v27 = *((void *)v7 + 5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2498B9AB8(v27);
      uint64_t v8 = 1;
      break;
    case 4u:
      return v8;
    default:
      uint64_t v9 = *((void *)v7 + 3);
      uint64_t v10 = *((void *)v7 + 5);
      uint64_t v11 = *((void *)v7 + 6);
      uint64_t v12 = *((void *)v7 + 7);
      uint64_t v13 = *((void *)v7 + 8);
      uint64_t v14 = *((void *)v7 + 9);
      uint64_t v15 = *((void *)v7 + 10);
      unint64_t v16 = *((void *)v7 + 11);
      uint64_t v31 = *((void *)v7 + 12);
      swift_bridgeObjectRelease();
      sub_2498B9AB8(v9);
      sub_2498A58D4(v10, v11, v12, v13, v14, v15, v16);
      uint64_t v8 = 0;
      break;
  }
  return v8;
}

uint64_t RequestContentModel.isFloatingContent.getter()
{
  uint64_t v1 = type metadata accessor for RequestContentModel();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499AB550(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = 1;
  uint64_t v6 = type metadata accessor for RequestContentModel;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v7 = (uint64_t (*)())type metadata accessor for PopoverModel;
      goto LABEL_4;
    case 2:
    case 3:
      goto LABEL_5;
    case 4:
      return v5;
    default:
      uint64_t v5 = 0;
      uint64_t v7 = type metadata accessor for RequestContentModel;
LABEL_4:
      uint64_t v6 = v7;
LABEL_5:
      sub_2499AB764((uint64_t)v3, (uint64_t (*)(void))v6);
      return v5;
  }
}

uint64_t RequestContentModel.isLocal.getter()
{
  uint64_t v1 = type metadata accessor for RequestContentModel();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499AB550(v0, (uint64_t)v3);
  uint64_t v4 = 1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = type metadata accessor for PopoverModel;
      goto LABEL_5;
    case 2u:
    case 3u:
      uint64_t v5 = (uint64_t (*)(void))type metadata accessor for RequestContentModel;
LABEL_5:
      sub_2499AB764((uint64_t)v3, v5);
      uint64_t v4 = 0;
      break;
    case 4u:
      return v4;
    default:
      uint64_t v6 = *((void *)v3 + 3);
      uint64_t v7 = *((void *)v3 + 5);
      uint64_t v8 = *((void *)v3 + 6);
      uint64_t v9 = *((void *)v3 + 7);
      uint64_t v10 = *((void *)v3 + 8);
      uint64_t v11 = *((void *)v3 + 9);
      uint64_t v12 = *((void *)v3 + 10);
      unint64_t v15 = *((void *)v3 + 11);
      uint64_t v16 = v7;
      v14[1] = *((void *)v3 + 12);
      uint64_t v4 = v3[112];
      swift_bridgeObjectRelease();
      sub_2498B9AB8(v6);
      sub_2498A58D4(v16, v8, v9, v10, v11, v12, v15);
      break;
  }
  return v4;
}

uint64_t _s14CarPlayAssetUI19RequestContentModelO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PopoverModel(0);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v95 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RequestContentModel();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v95 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v95 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v95 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v95 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D40);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_2499AB550(a1, (uint64_t)v22);
  sub_2499AB550(a2, v23);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_2499AB550((uint64_t)v22, (uint64_t)v16);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_2499AB5B4(v23, (uint64_t)v6);
        char v30 = static PopoverModel.== infix(_:_:)(v16, v6);
        sub_2499AB764((uint64_t)v6, type metadata accessor for PopoverModel);
        sub_2499AB764((uint64_t)v16, type metadata accessor for PopoverModel);
        goto LABEL_17;
      }
      sub_2499AB764((uint64_t)v16, type metadata accessor for PopoverModel);
      goto LABEL_15;
    case 2u:
      sub_2499AB550((uint64_t)v22, (uint64_t)v13);
      uint64_t v31 = *((void *)v13 + 1);
      uint64_t v107 = *((void *)v13 + 2);
      uint64_t v108 = *((void *)v13 + 3);
      uint64_t v109 = *((void *)v13 + 4);
      uint64_t v111 = *((void *)v13 + 5);
      LODWORD(v112) = v13[48];
      uint64_t v32 = *((void *)v13 + 7);
      uint64_t v113 = *((void *)v13 + 8);
      int v33 = v13[72];
      uint64_t v34 = *((void *)v13 + 11);
      uint64_t v110 = *((void *)v13 + 10);
      unint64_t v35 = *((void *)v13 + 12);
      uint64_t v36 = *((void *)v13 + 14);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v37 = *((void *)v13 + 13);
        char v38 = v13[73];
        uint64_t v39 = *(void *)v13;
        uint64_t v40 = *(void *)v23;
        uint64_t v41 = *(void *)(v23 + 8);
        uint64_t v42 = *(void *)(v23 + 16);
        uint64_t v43 = *(void *)(v23 + 24);
        uint64_t v45 = *(void *)(v23 + 32);
        uint64_t v44 = *(void *)(v23 + 40);
        uint64_t v46 = *(void *)(v23 + 64);
        uint64_t v97 = *(void *)(v23 + 56);
        uint64_t v96 = v46;
        char v47 = *(unsigned char *)(v23 + 73);
        BYTE1(v138) = v38;
        unint64_t v141 = v35;
        uint64_t v142 = v37;
        uint64_t v48 = *(void *)(v23 + 88);
        uint64_t v98 = *(void *)(v23 + 80);
        uint64_t v99 = v48;
        uint64_t v114 = v40;
        BYTE1(v123) = v47;
        uint64_t v105 = v36;
        uint64_t v101 = *(void *)(v23 + 96);
        uint64_t v49 = *(void *)(v23 + 104);
        uint64_t v50 = *(void *)(v23 + 112);
        uint64_t v126 = v101;
        uint64_t v127 = v49;
        unint64_t v106 = v35;
        uint64_t v100 = v50;
        uint64_t v129 = v39;
        uint64_t v130 = v31;
        uint64_t v51 = v34;
        uint64_t v104 = v34;
        char v52 = *(unsigned char *)(v23 + 48);
        char v53 = v33;
        LODWORD(v103) = v33;
        char v54 = *(unsigned char *)(v23 + 72);
        uint64_t v131 = v107;
        uint64_t v132 = v108;
        uint64_t v133 = v109;
        uint64_t v134 = v111;
        LOBYTE(v135) = v112;
        uint64_t v102 = v32;
        uint64_t v136 = v32;
        uint64_t v137 = v113;
        LOBYTE(v138) = v53;
        uint64_t v139 = v110;
        unint64_t v140 = v51;
        uint64_t v143 = v36;
        uint64_t v115 = v41;
        uint64_t v116 = v42;
        uint64_t v55 = v42;
        uint64_t v117 = v43;
        uint64_t v118 = v45;
        uint64_t v56 = v45;
        uint64_t v119 = v44;
        uint64_t v57 = v44;
        LOBYTE(v120) = v52;
        uint64_t v121 = v97;
        uint64_t v122 = v46;
        LOBYTE(v123) = v54;
        uint64_t v124 = v98;
        unint64_t v125 = v48;
        uint64_t v128 = v50;
        char v30 = _s14CarPlayAssetUI17NotificationModelV2eeoiySbAC_ACtFZ_0((uint64_t)&v129, (uint64_t)&v114);
        swift_bridgeObjectRelease();
        sub_249934D7C(v55, v43, v56, v57, v52);
        sub_2499AB618(v97, v96, v54);
        sub_2499AB62C(v98, v99);
        swift_bridgeObjectRelease();
        swift_release();
        sub_249934D7C(v107, v108, v109, v111, v112);
        sub_2499AB618(v102, v113, v103);
        sub_2499AB62C(v110, v104);
        swift_release();
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      sub_249934D7C(v107, v108, v109, v111, v112);
      sub_2499AB618(v32, v113, v33);
      sub_2499AB62C(v110, v34);
      swift_release();
      goto LABEL_15;
    case 3u:
      sub_2499AB550((uint64_t)v22, (uint64_t)v10);
      uint64_t v58 = *((void *)v10 + 1);
      uint64_t v59 = *((void *)v10 + 2);
      uint64_t v61 = *((void *)v10 + 5);
      uint64_t v60 = *((void *)v10 + 6);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        char v62 = v10[33];
        char v63 = v10[32];
        uint64_t v64 = *((void *)v10 + 3);
        uint64_t v65 = *(void *)v10;
        uint64_t v66 = *(void *)v23;
        uint64_t v67 = *(void *)(v23 + 8);
        uint64_t v69 = *(void *)(v23 + 16);
        uint64_t v68 = *(void *)(v23 + 24);
        char v70 = *(unsigned char *)(v23 + 32);
        char v71 = *(unsigned char *)(v23 + 33);
        uint64_t v72 = *(void *)(v23 + 40);
        uint64_t v73 = *(void *)(v23 + 48);
        uint64_t v129 = v65;
        uint64_t v130 = v58;
        uint64_t v131 = v59;
        uint64_t v132 = v64;
        LOBYTE(v133) = v63;
        BYTE1(v133) = v62;
        uint64_t v134 = v61;
        uint64_t v135 = v60;
        uint64_t v114 = v66;
        uint64_t v115 = v67;
        uint64_t v116 = v69;
        uint64_t v117 = v68;
        LOBYTE(v118) = v70;
        BYTE1(v118) = v71;
        uint64_t v119 = v72;
        uint64_t v120 = v73;
        char v30 = _s14CarPlayAssetUI21SingleSelectMenuModelV2eeoiySbAC_ACtFZ_0((uint64_t)&v129, (uint64_t)&v114);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2498B9AB8(v72);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2498B9AB8(v61);
        goto LABEL_17;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2498B9AB8(v61);
      goto LABEL_15;
    case 4u:
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_15;
      }
      sub_2499AB764((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      char v30 = 1;
      return v30 & 1;
    default:
      sub_2499AB550((uint64_t)v22, (uint64_t)v18);
      uint64_t v24 = *((void *)v18 + 1);
      uint64_t v25 = *((void *)v18 + 3);
      uint64_t v26 = *((void *)v18 + 4);
      uint64_t v109 = *((void *)v18 + 5);
      uint64_t v110 = *((void *)v18 + 6);
      uint64_t v111 = *((void *)v18 + 7);
      uint64_t v112 = *((void *)v18 + 8);
      uint64_t v27 = *((void *)v18 + 10);
      uint64_t v113 = *((void *)v18 + 9);
      unint64_t v29 = *((void *)v18 + 11);
      uint64_t v28 = *((void *)v18 + 12);
      uint64_t v108 = *((void *)v18 + 13);
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        sub_2498B9AB8(v25);
        sub_2498A58D4(v109, v110, v111, v112, v113, v27, v29);
LABEL_15:
        sub_2499AE7C4((uint64_t)v22);
        char v30 = 0;
      }
      else
      {
        char v74 = v18[112];
        char v75 = v18[17];
        char v76 = v18[16];
        uint64_t v77 = *(void *)v18;
        uint64_t v78 = *(void *)v23;
        uint64_t v79 = *(void *)(v23 + 8);
        char v80 = *(unsigned char *)(v23 + 16);
        char v81 = *(unsigned char *)(v23 + 17);
        uint64_t v83 = *(void *)(v23 + 24);
        uint64_t v82 = *(void *)(v23 + 32);
        uint64_t v129 = v77;
        uint64_t v102 = *(void *)(v23 + 40);
        LOBYTE(v131) = v76;
        BYTE1(v131) = v75;
        uint64_t v84 = *(void *)(v23 + 48);
        uint64_t v100 = *(void *)(v23 + 56);
        uint64_t v85 = *(void *)(v23 + 72);
        uint64_t v101 = *(void *)(v23 + 64);
        LOBYTE(v143) = v74;
        uint64_t v114 = v78;
        uint64_t v98 = v85;
        uint64_t v99 = *(void *)(v23 + 80);
        LOBYTE(v116) = v80;
        char v86 = *(unsigned char *)(v23 + 112);
        BYTE1(v116) = v81;
        LOBYTE(v128) = v86;
        unint64_t v87 = v29;
        unint64_t v106 = v29;
        uint64_t v88 = v27;
        uint64_t v105 = v27;
        unint64_t v89 = *(void *)(v23 + 88);
        uint64_t v90 = *(void *)(v23 + 96);
        uint64_t v91 = v28;
        uint64_t v107 = v28;
        uint64_t v92 = *(void *)(v23 + 104);
        uint64_t v130 = v24;
        uint64_t v103 = v25;
        uint64_t v132 = v25;
        uint64_t v133 = v26;
        uint64_t v104 = v26;
        uint64_t v134 = v109;
        uint64_t v135 = v110;
        uint64_t v136 = v111;
        uint64_t v137 = v112;
        uint64_t v138 = v113;
        uint64_t v139 = v88;
        unint64_t v140 = v87;
        unint64_t v141 = v91;
        uint64_t v142 = v108;
        uint64_t v115 = v79;
        uint64_t v117 = v83;
        uint64_t v118 = v82;
        uint64_t v119 = v102;
        uint64_t v120 = v84;
        uint64_t v93 = v84;
        uint64_t v121 = v100;
        uint64_t v122 = v101;
        uint64_t v123 = v85;
        uint64_t v124 = v99;
        unint64_t v125 = v89;
        uint64_t v126 = v90;
        uint64_t v127 = v92;
        char v30 = _s14CarPlayAssetUI11WidgetModelV2eeoiySbAC_ACtFZ_0((uint64_t)&v129, (uint64_t)&v114);
        swift_bridgeObjectRelease();
        sub_2498B9AB8(v83);
        sub_2498A58D4(v102, v93, v100, v101, v98, v99, v89);
        swift_bridgeObjectRelease();
        sub_2498B9AB8(v103);
        sub_2498A58D4(v109, v110, v111, v112, v113, v105, v106);
LABEL_17:
        sub_2499AB764((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
      }
      return v30 & 1;
  }
}

char *initializeBufferWithCopyOfBuffer for RequestContentModel(char *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v7;
        *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
        uint64_t v8 = a2[3];
        swift_bridgeObjectRetain();
        if (v8)
        {
          uint64_t v9 = a2[4];
          *((void *)a1 + 3) = v8;
          *((void *)a1 + 4) = v9;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
        }
        uint64_t v51 = a2[5];
        uint64_t v52 = a2[6];
        uint64_t v53 = a2[7];
        uint64_t v54 = a2[8];
        uint64_t v55 = a2[9];
        uint64_t v56 = a2[10];
        unint64_t v58 = a2[11];
        uint64_t v57 = a2[12];
        uint64_t v119 = a2[13];
        sub_2498A48A4(v51, v52, v53, v54, v55, v56, v58);
        *((void *)a1 + 5) = v51;
        *((void *)a1 + 6) = v52;
        *((void *)a1 + 7) = v53;
        *((void *)a1 + 8) = v54;
        *((void *)a1 + 9) = v55;
        *((void *)a1 + 10) = v56;
        *((void *)a1 + 11) = v58;
        *((void *)a1 + 12) = v57;
        *((void *)a1 + 13) = v119;
        a1[112] = *((unsigned char *)a2 + 112);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        uint64_t v12 = sub_249AEB808();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
        *(void *)&a1[*(int *)(v13 + 52)] = *(void *)((char *)a2 + *(int *)(v13 + 52));
        uint64_t v85 = type metadata accessor for Instrument();
        uint64_t v14 = *(int *)(v85 + 20);
        uint64_t v15 = (uint64_t *)&a1[v14];
        uint64_t v16 = (void *)((char *)a2 + v14);
        uint64_t v116 = (void *)v16[3];
        uint64_t v117 = v16[7];
        uint64_t v118 = v16[6];
        uint64_t v114 = (void *)v16[9];
        uint64_t v115 = (void *)v16[8];
        unint64_t v112 = v16[11];
        uint64_t v113 = (void *)v16[10];
        uint64_t v110 = v16[13];
        uint64_t v111 = v16[12];
        uint64_t v108 = v16[15];
        uint64_t v109 = v16[14];
        uint64_t v106 = v16[17];
        uint64_t v107 = v16[16];
        uint64_t v104 = v16[19];
        uint64_t v105 = v16[18];
        uint64_t v102 = v16[21];
        uint64_t v103 = (void *)v16[20];
        uint64_t v100 = v16[23];
        uint64_t v101 = v16[22];
        uint64_t v99 = v16[24];
        uint64_t v98 = v16[25];
        uint64_t v97 = v16[26];
        uint64_t v96 = (void *)v16[27];
        uint64_t v95 = (void *)v16[28];
        uint64_t v94 = v16[29];
        uint64_t v93 = v16[30];
        uint64_t v92 = v16[31];
        uint64_t v91 = v16[32];
        uint64_t v90 = v16[33];
        uint64_t v89 = v16[34];
        uint64_t v88 = v16[35];
        uint64_t v87 = v16[36];
        uint64_t v86 = v16[37];
        uint64_t v17 = v16[40];
        uint64_t v61 = v16[38];
        uint64_t v62 = v16[39];
        unint64_t v63 = v16[41];
        uint64_t v64 = v16[42];
        uint64_t v18 = v16[44];
        uint64_t v65 = v16[43];
        uint64_t v66 = v16[45];
        uint64_t v67 = v16[46];
        uint64_t v68 = v16[47];
        uint64_t v69 = v16[48];
        uint64_t v70 = v16[49];
        uint64_t v71 = v16[50];
        uint64_t v72 = v16[51];
        uint64_t v73 = v16[52];
        uint64_t v74 = v16[53];
        uint64_t v75 = v16[54];
        uint64_t v76 = v16[55];
        uint64_t v77 = v16[56];
        uint64_t v78 = v16[57];
        uint64_t v79 = v16[58];
        uint64_t v80 = v16[59];
        unint64_t v81 = v16[60];
        uint64_t v82 = v16[61];
        unint64_t v83 = v16[62];
        uint64_t v84 = v16[63];
        uint64_t v19 = *v16;
        uint64_t v20 = v16[1];
        uint64_t v21 = (void *)v16[2];
        uint64_t v22 = (void *)v16[4];
        uint64_t v23 = (void *)v16[5];
        sub_2498FB4B4(*v16, v20, v21, v116, v22, v23, v118, v117, v115, v114, v113, v112, v111, v110, v109, v108, v107, v106, v105,
          v104,
          v103,
          v102,
          v101,
          v100,
          v99,
          v98,
          v97,
          v96,
          v95,
          v94,
          v93,
          v92,
          v91,
          v90,
          v89,
          v88,
          v87,
          v86,
          v61,
          v62,
          v17,
          v63,
          v64,
          v65,
          v18,
          v66,
          v67,
          v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77,
          v78,
          v79,
          v80,
          v81,
          v82,
          v83);
        *uint64_t v15 = v19;
        v15[1] = v20;
        v15[2] = (uint64_t)v21;
        void v15[3] = (uint64_t)v116;
        v15[4] = (uint64_t)v22;
        v15[5] = (uint64_t)v23;
        v15[6] = v118;
        v15[7] = v117;
        v15[8] = (uint64_t)v115;
        v15[9] = (uint64_t)v114;
        v15[10] = (uint64_t)v113;
        v15[11] = v112;
        v15[12] = v111;
        v15[13] = v110;
        v15[14] = v109;
        v15[15] = v108;
        v15[16] = v107;
        v15[17] = v106;
        v15[18] = v105;
        v15[19] = v104;
        v15[20] = (uint64_t)v103;
        v15[21] = v102;
        v15[22] = v101;
        v15[23] = v100;
        v15[24] = v99;
        v15[25] = v98;
        v15[26] = v97;
        v15[27] = (uint64_t)v96;
        v15[28] = (uint64_t)v95;
        v15[29] = v94;
        v15[30] = v93;
        v15[31] = v92;
        v15[32] = v91;
        v15[33] = v90;
        v15[34] = v89;
        v15[35] = v88;
        v15[36] = v87;
        v15[37] = v86;
        v15[38] = v61;
        v15[39] = v62;
        v15[40] = v17;
        v15[41] = v63;
        v15[42] = v64;
        v15[43] = v65;
        v15[44] = v18;
        v15[45] = v66;
        v15[46] = v67;
        v15[47] = v68;
        v15[48] = v69;
        v15[49] = v70;
        v15[50] = v71;
        v15[51] = v72;
        v15[52] = v73;
        v15[53] = v74;
        v15[54] = v75;
        v15[55] = v76;
        v15[56] = v77;
        v15[57] = v78;
        v15[58] = v79;
        v15[59] = v80;
        v15[60] = v81;
        v15[61] = v82;
        v15[62] = v83;
        v15[63] = v84;
        uint64_t v24 = *(int *)(v85 + 24);
        uint64_t v25 = &a1[v24];
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = *((void *)v26 + 1);
        *(void *)uint64_t v25 = *(void *)v26;
        *((void *)v25 + 1) = v27;
        *((void *)v25 + 2) = *((void *)v26 + 2);
        *((_WORD *)v25 + 12) = *((_WORD *)v26 + 12);
        uint64_t v28 = *((void *)v26 + 5);
        *((void *)v25 + 4) = *((void *)v26 + 4);
        *((void *)v25 + 5) = v28;
        unint64_t v29 = (int *)type metadata accessor for PopoverModel(0);
        a1[v29[5]] = *((unsigned char *)a2 + v29[5]);
        uint64_t v30 = v29[6];
        uint64_t v31 = &a1[v30];
        uint64_t v32 = (void *)((char *)a2 + v30);
        uint64_t v33 = v32[1];
        *(void *)uint64_t v31 = *v32;
        *((void *)v31 + 1) = v33;
        uint64_t v34 = v29[7];
        unint64_t v35 = &a1[v34];
        uint64_t v36 = (void *)((char *)a2 + v34);
        uint64_t v37 = v36[1];
        *(void *)unint64_t v35 = *v36;
        *((void *)v35 + 1) = v37;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v38 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v38;
        uint64_t v39 = a2[2];
        uint64_t v40 = a2[3];
        uint64_t v41 = a2[4];
        uint64_t v42 = a2[5];
        char v43 = *((unsigned char *)a2 + 48);
        swift_bridgeObjectRetain();
        sub_2499ACFC4(v39, v40, v41, v42, v43);
        *((void *)a1 + 2) = v39;
        *((void *)a1 + 3) = v40;
        *((void *)a1 + 4) = v41;
        *((void *)a1 + 5) = v42;
        a1[48] = v43;
        int v44 = *((unsigned __int8 *)a2 + 72);
        if (v44 == 255)
        {
          *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
          a1[72] = *((unsigned char *)a2 + 72);
        }
        else
        {
          uint64_t v45 = a2[7];
          uint64_t v46 = a2[8];
          sub_2499AD02C(v45, v46, *((unsigned char *)a2 + 72));
          *((void *)a1 + 7) = v45;
          *((void *)a1 + 8) = v46;
          a1[72] = v44;
        }
        a1[73] = *((unsigned char *)a2 + 73);
        uint64_t v59 = a2[11];
        if (v59)
        {
          *((void *)a1 + 10) = a2[10];
          *((void *)a1 + 11) = v59;
          *((void *)a1 + 12) = a2[12];
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          *((void *)a1 + 12) = a2[12];
        }
        uint64_t v60 = a2[14];
        *((void *)a1 + 13) = a2[13];
        *((void *)a1 + 14) = v60;
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v47 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v47;
        uint64_t v48 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v48;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        uint64_t v49 = a2[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v49)
        {
          uint64_t v50 = a2[6];
          *((void *)a1 + 5) = v49;
          *((void *)a1 + 6) = v50;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
        }
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_2499ACFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 && a5 != 2)
  {
    if (a5 != 1) {
      return result;
    }
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499AD02C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_retain();
  }
  if (a3 != 1)
  {
    if (a3) {
      return result;
    }
    return swift_retain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t destroy for RequestContentModel(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      if (*(void *)(a1 + 24)) {
        swift_release();
      }
      return sub_2498A58D4(*(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88));
    case 1:
      uint64_t v3 = sub_249AEB808();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = a1 + *(int *)(type metadata accessor for Instrument() + 20);
      long long v20 = *(_OWORD *)(v4 + 464);
      long long v21 = *(_OWORD *)(v4 + 480);
      long long v18 = *(_OWORD *)(v4 + 432);
      long long v19 = *(_OWORD *)(v4 + 448);
      long long v16 = *(_OWORD *)(v4 + 400);
      long long v17 = *(_OWORD *)(v4 + 416);
      long long v14 = *(_OWORD *)(v4 + 368);
      long long v15 = *(_OWORD *)(v4 + 384);
      long long v12 = *(_OWORD *)(v4 + 336);
      long long v13 = *(_OWORD *)(v4 + 352);
      long long v10 = *(_OWORD *)(v4 + 304);
      long long v11 = *(_OWORD *)(v4 + 320);
      long long v8 = *(_OWORD *)(v4 + 272);
      long long v9 = *(_OWORD *)(v4 + 288);
      long long v6 = *(_OWORD *)(v4 + 240);
      long long v7 = *(_OWORD *)(v4 + 256);
      sub_2498FCAAC(*(void *)v4, *(void *)(v4 + 8), *(void **)(v4 + 16), *(void **)(v4 + 24), *(void **)(v4 + 32), *(void **)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void **)(v4 + 64), *(void **)(v4 + 72), *(void **)(v4 + 80), *(void *)(v4 + 88), *(void *)(v4 + 96), *(void *)(v4 + 104), *(void *)(v4 + 112), *(void *)(v4 + 120), *(void *)(v4 + 128), *(void *)(v4 + 136), *(void *)(v4 + 144),
        *(void *)(v4 + 152),
        *(void **)(v4 + 160),
        *(void *)(v4 + 168),
        *(void *)(v4 + 176),
        *(void *)(v4 + 184),
        *(void *)(v4 + 192),
        *(void *)(v4 + 200),
        *(void *)(v4 + 208),
        *(void **)(v4 + 216),
        *(void **)(v4 + 224),
        *(void *)(v4 + 232),
        v6,
        *((uint64_t *)&v6 + 1),
        v7,
        *((uint64_t *)&v7 + 1),
        v8,
        *((uint64_t *)&v8 + 1),
        v9,
        *((uint64_t *)&v9 + 1),
        v10,
        *((uint64_t *)&v10 + 1),
        v11,
        *((unint64_t *)&v11 + 1),
        v12,
        *((uint64_t *)&v12 + 1),
        v13,
        SBYTE8(v13),
        v14,
        *((uint64_t *)&v14 + 1),
        v15,
        *((uint64_t *)&v15 + 1),
        v16,
        SBYTE8(v16),
        v17,
        *((uint64_t *)&v17 + 1),
        v18,
        *((uint64_t *)&v18 + 1),
        v19,
        SBYTE8(v19),
        v20,
        *((uint64_t *)&v20 + 1),
        v21,
        *((uint64_t *)&v21 + 1),
        *(void *)(v4 + 496));
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for PopoverModel(0);
      swift_release();
      goto LABEL_12;
    case 2:
      swift_bridgeObjectRelease();
      sub_249934D7C(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
      int v5 = *(unsigned __int8 *)(a1 + 72);
      if (v5 != 255) {
        sub_249934DE4(*(void *)(a1 + 56), *(void *)(a1 + 64), v5);
      }
      if (*(void *)(a1 + 88))
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      goto LABEL_12;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (*(void *)(a1 + 40))
      {
LABEL_12:
        uint64_t result = swift_release();
      }
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for RequestContentModel(char *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v6;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      uint64_t v7 = a2[3];
      swift_bridgeObjectRetain();
      if (v7)
      {
        uint64_t v8 = a2[4];
        *((void *)a1 + 3) = v7;
        *((void *)a1 + 4) = v8;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      }
      uint64_t v48 = a2[5];
      uint64_t v49 = a2[6];
      uint64_t v50 = a2[7];
      uint64_t v51 = a2[8];
      uint64_t v52 = a2[9];
      uint64_t v53 = a2[10];
      unint64_t v55 = a2[11];
      uint64_t v54 = a2[12];
      uint64_t v117 = a2[13];
      sub_2498A48A4(v48, v49, v50, v51, v52, v53, v55);
      *((void *)a1 + 5) = v48;
      *((void *)a1 + 6) = v49;
      *((void *)a1 + 7) = v50;
      *((void *)a1 + 8) = v51;
      *((void *)a1 + 9) = v52;
      *((void *)a1 + 10) = v53;
      *((void *)a1 + 11) = v55;
      *((void *)a1 + 12) = v54;
      *((void *)a1 + 13) = v117;
      a1[112] = *((unsigned char *)a2 + 112);
      goto LABEL_19;
    case 1u:
      uint64_t v9 = sub_249AEB808();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
      *(void *)&a1[*(int *)(v10 + 52)] = *(void *)((char *)a2 + *(int *)(v10 + 52));
      uint64_t v83 = type metadata accessor for Instrument();
      uint64_t v11 = *(int *)(v83 + 20);
      long long v12 = (uint64_t *)&a1[v11];
      long long v13 = (void *)((char *)a2 + v11);
      uint64_t v114 = (void *)v13[3];
      uint64_t v115 = v13[7];
      uint64_t v116 = v13[6];
      unint64_t v112 = (void *)v13[9];
      uint64_t v113 = (void *)v13[8];
      unint64_t v110 = v13[11];
      uint64_t v111 = (void *)v13[10];
      uint64_t v108 = v13[13];
      uint64_t v109 = v13[12];
      uint64_t v106 = v13[15];
      uint64_t v107 = v13[14];
      uint64_t v104 = v13[17];
      uint64_t v105 = v13[16];
      uint64_t v102 = v13[19];
      uint64_t v103 = v13[18];
      uint64_t v100 = v13[21];
      uint64_t v101 = (void *)v13[20];
      uint64_t v98 = v13[23];
      uint64_t v99 = v13[22];
      uint64_t v97 = v13[24];
      uint64_t v96 = v13[25];
      uint64_t v95 = v13[26];
      uint64_t v94 = (void *)v13[27];
      uint64_t v93 = (void *)v13[28];
      uint64_t v92 = v13[29];
      uint64_t v91 = v13[30];
      uint64_t v90 = v13[31];
      uint64_t v89 = v13[32];
      uint64_t v88 = v13[33];
      uint64_t v87 = v13[34];
      uint64_t v86 = v13[35];
      uint64_t v85 = v13[36];
      uint64_t v84 = v13[37];
      uint64_t v14 = v13[40];
      uint64_t v59 = v13[38];
      uint64_t v60 = v13[39];
      unint64_t v61 = v13[41];
      uint64_t v62 = v13[42];
      uint64_t v15 = v13[44];
      uint64_t v63 = v13[43];
      uint64_t v64 = v13[45];
      uint64_t v65 = v13[46];
      uint64_t v66 = v13[47];
      uint64_t v67 = v13[48];
      uint64_t v68 = v13[49];
      uint64_t v69 = v13[50];
      uint64_t v70 = v13[51];
      uint64_t v71 = v13[52];
      uint64_t v72 = v13[53];
      uint64_t v73 = v13[54];
      uint64_t v74 = v13[55];
      uint64_t v75 = v13[56];
      uint64_t v76 = v13[57];
      uint64_t v77 = v13[58];
      uint64_t v78 = v13[59];
      unint64_t v79 = v13[60];
      uint64_t v80 = v13[61];
      unint64_t v81 = v13[62];
      uint64_t v82 = v13[63];
      uint64_t v16 = *v13;
      uint64_t v17 = v13[1];
      long long v18 = (void *)v13[2];
      long long v19 = (void *)v13[4];
      long long v20 = (void *)v13[5];
      sub_2498FB4B4(*v13, v17, v18, v114, v19, v20, v116, v115, v113, v112, v111, v110, v109, v108, v107, v106, v105, v104, v103,
        v102,
        v101,
        v100,
        v99,
        v98,
        v97,
        v96,
        v95,
        v94,
        v93,
        v92,
        v91,
        v90,
        v89,
        v88,
        v87,
        v86,
        v85,
        v84,
        v59,
        v60,
        v14,
        v61,
        v62,
        v63,
        v15,
        v64,
        v65,
        v66,
        v67,
        v68,
        v69,
        v70,
        v71,
        v72,
        v73,
        v74,
        v75,
        v76,
        v77,
        v78,
        v79,
        v80,
        v81);
      *long long v12 = v16;
      v12[1] = v17;
      v12[2] = (uint64_t)v18;
      v12[3] = (uint64_t)v114;
      v12[4] = (uint64_t)v19;
      v12[5] = (uint64_t)v20;
      v12[6] = v116;
      v12[7] = v115;
      v12[8] = (uint64_t)v113;
      v12[9] = (uint64_t)v112;
      v12[10] = (uint64_t)v111;
      v12[11] = v110;
      v12[12] = v109;
      v12[13] = v108;
      v12[14] = v107;
      v12[15] = v106;
      v12[16] = v105;
      v12[17] = v104;
      v12[18] = v103;
      v12[19] = v102;
      v12[20] = (uint64_t)v101;
      v12[21] = v100;
      v12[22] = v99;
      v12[23] = v98;
      v12[24] = v97;
      v12[25] = v96;
      v12[26] = v95;
      v12[27] = (uint64_t)v94;
      v12[28] = (uint64_t)v93;
      v12[29] = v92;
      v12[30] = v91;
      v12[31] = v90;
      v12[32] = v89;
      v12[33] = v88;
      v12[34] = v87;
      v12[35] = v86;
      v12[36] = v85;
      v12[37] = v84;
      v12[38] = v59;
      v12[39] = v60;
      v12[40] = v14;
      v12[41] = v61;
      v12[42] = v62;
      v12[43] = v63;
      v12[44] = v15;
      v12[45] = v64;
      v12[46] = v65;
      v12[47] = v66;
      v12[48] = v67;
      v12[49] = v68;
      v12[50] = v69;
      v12[51] = v70;
      v12[52] = v71;
      v12[53] = v72;
      v12[54] = v73;
      v12[55] = v74;
      v12[56] = v75;
      v12[57] = v76;
      v12[58] = v77;
      v12[59] = v78;
      v12[60] = v79;
      v12[61] = v80;
      v12[62] = v81;
      v12[63] = v82;
      uint64_t v21 = *(int *)(v83 + 24);
      uint64_t v22 = &a1[v21];
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = *((void *)v23 + 1);
      *(void *)uint64_t v22 = *(void *)v23;
      *((void *)v22 + 1) = v24;
      *((void *)v22 + 2) = *((void *)v23 + 2);
      *((_WORD *)v22 + 12) = *((_WORD *)v23 + 12);
      uint64_t v25 = *((void *)v23 + 5);
      *((void *)v22 + 4) = *((void *)v23 + 4);
      *((void *)v22 + 5) = v25;
      uint64_t v26 = (int *)type metadata accessor for PopoverModel(0);
      a1[v26[5]] = *((unsigned char *)a2 + v26[5]);
      uint64_t v27 = v26[6];
      uint64_t v28 = &a1[v27];
      unint64_t v29 = (void *)((char *)a2 + v27);
      uint64_t v30 = v29[1];
      *(void *)uint64_t v28 = *v29;
      *((void *)v28 + 1) = v30;
      uint64_t v31 = v26[7];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = (void *)((char *)a2 + v31);
      uint64_t v34 = v33[1];
      *(void *)uint64_t v32 = *v33;
      *((void *)v32 + 1) = v34;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      goto LABEL_19;
    case 2u:
      uint64_t v35 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v35;
      uint64_t v36 = a2[2];
      uint64_t v37 = a2[3];
      uint64_t v38 = a2[4];
      uint64_t v39 = a2[5];
      char v40 = *((unsigned char *)a2 + 48);
      swift_bridgeObjectRetain();
      sub_2499ACFC4(v36, v37, v38, v39, v40);
      *((void *)a1 + 2) = v36;
      *((void *)a1 + 3) = v37;
      *((void *)a1 + 4) = v38;
      *((void *)a1 + 5) = v39;
      a1[48] = v40;
      int v41 = *((unsigned __int8 *)a2 + 72);
      if (v41 == 255)
      {
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
        a1[72] = *((unsigned char *)a2 + 72);
      }
      else
      {
        uint64_t v42 = a2[7];
        uint64_t v43 = a2[8];
        sub_2499AD02C(v42, v43, *((unsigned char *)a2 + 72));
        *((void *)a1 + 7) = v42;
        *((void *)a1 + 8) = v43;
        a1[72] = v41;
      }
      a1[73] = *((unsigned char *)a2 + 73);
      uint64_t v56 = a2[11];
      if (v56)
      {
        *((void *)a1 + 10) = a2[10];
        *((void *)a1 + 11) = v56;
        *((void *)a1 + 12) = a2[12];
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
        *((void *)a1 + 12) = a2[12];
      }
      uint64_t v57 = a2[14];
      *((void *)a1 + 13) = a2[13];
      *((void *)a1 + 14) = v57;
      swift_retain();
      goto LABEL_19;
    case 3u:
      uint64_t v44 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v44;
      uint64_t v45 = a2[3];
      *((void *)a1 + 2) = a2[2];
      *((void *)a1 + 3) = v45;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      uint64_t v46 = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v46)
      {
        uint64_t v47 = a2[6];
        *((void *)a1 + 5) = v46;
        *((void *)a1 + 6) = v47;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
      }
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for RequestContentModel(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2499AB764((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[16] = a2[16];
        a1[17] = a2[17];
        uint64_t v6 = *((void *)a2 + 3);
        swift_bridgeObjectRetain();
        if (v6)
        {
          uint64_t v7 = *((void *)a2 + 4);
          *((void *)a1 + 3) = v6;
          *((void *)a1 + 4) = v7;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        uint64_t v46 = *((void *)a2 + 5);
        uint64_t v47 = *((void *)a2 + 6);
        uint64_t v48 = *((void *)a2 + 7);
        uint64_t v49 = *((void *)a2 + 8);
        uint64_t v50 = *((void *)a2 + 9);
        uint64_t v51 = *((void *)a2 + 10);
        unint64_t v53 = *((void *)a2 + 11);
        uint64_t v52 = *((void *)a2 + 12);
        uint64_t v113 = *((void *)a2 + 13);
        sub_2498A48A4(v46, v47, v48, v49, v50, v51, v53);
        *((void *)a1 + 5) = v46;
        *((void *)a1 + 6) = v47;
        *((void *)a1 + 7) = v48;
        *((void *)a1 + 8) = v49;
        *((void *)a1 + 9) = v50;
        *((void *)a1 + 10) = v51;
        *((void *)a1 + 11) = v53;
        *((void *)a1 + 12) = v52;
        *((void *)a1 + 13) = v113;
        a1[112] = a2[112];
        goto LABEL_20;
      case 1u:
        uint64_t v8 = sub_249AEB808();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
        *(void *)&a1[*(int *)(v9 + 52)] = *(void *)&a2[*(int *)(v9 + 52)];
        uint64_t v79 = type metadata accessor for Instrument();
        uint64_t v10 = *(int *)(v79 + 20);
        uint64_t v11 = (uint64_t *)&a1[v10];
        long long v12 = (uint64_t *)&a2[v10];
        unint64_t v110 = (void *)v12[3];
        uint64_t v111 = v12[7];
        uint64_t v112 = v12[6];
        uint64_t v108 = (void *)v12[9];
        uint64_t v109 = (void *)v12[8];
        unint64_t v106 = v12[11];
        uint64_t v107 = (void *)v12[10];
        uint64_t v104 = v12[13];
        uint64_t v105 = v12[12];
        uint64_t v102 = v12[15];
        uint64_t v103 = v12[14];
        uint64_t v100 = v12[17];
        uint64_t v101 = v12[16];
        uint64_t v98 = v12[19];
        uint64_t v99 = v12[18];
        uint64_t v96 = v12[21];
        uint64_t v97 = (void *)v12[20];
        uint64_t v94 = v12[23];
        uint64_t v95 = v12[22];
        uint64_t v93 = v12[24];
        uint64_t v92 = v12[25];
        uint64_t v91 = v12[26];
        uint64_t v90 = (void *)v12[27];
        uint64_t v89 = (void *)v12[28];
        uint64_t v88 = v12[29];
        uint64_t v87 = v12[30];
        uint64_t v86 = v12[31];
        uint64_t v85 = v12[32];
        uint64_t v84 = v12[33];
        uint64_t v83 = v12[34];
        uint64_t v82 = v12[35];
        uint64_t v81 = v12[36];
        uint64_t v80 = v12[37];
        uint64_t v13 = v12[40];
        uint64_t v55 = v12[38];
        uint64_t v56 = v12[39];
        unint64_t v57 = v12[41];
        uint64_t v58 = v12[42];
        uint64_t v14 = v12[44];
        uint64_t v59 = v12[43];
        uint64_t v60 = v12[45];
        uint64_t v61 = v12[46];
        uint64_t v62 = v12[47];
        uint64_t v63 = v12[48];
        uint64_t v64 = v12[49];
        uint64_t v65 = v12[50];
        uint64_t v66 = v12[51];
        uint64_t v67 = v12[52];
        uint64_t v68 = v12[53];
        uint64_t v69 = v12[54];
        uint64_t v70 = v12[55];
        uint64_t v71 = v12[56];
        uint64_t v72 = v12[57];
        uint64_t v73 = v12[58];
        uint64_t v74 = v12[59];
        unint64_t v75 = v12[60];
        uint64_t v76 = v12[61];
        unint64_t v77 = v12[62];
        uint64_t v78 = v12[63];
        uint64_t v15 = *v12;
        uint64_t v16 = v12[1];
        uint64_t v17 = (void *)v12[2];
        long long v18 = (void *)v12[4];
        long long v19 = (void *)v12[5];
        sub_2498FB4B4(*v12, v16, v17, v110, v18, v19, v112, v111, v109, v108, v107, v106, v105, v104, v103, v102, v101, v100, v99,
          v98,
          v97,
          v96,
          v95,
          v94,
          v93,
          v92,
          v91,
          v90,
          v89,
          v88,
          v87,
          v86,
          v85,
          v84,
          v83,
          v82,
          v81,
          v80,
          v55,
          v56,
          v13,
          v57,
          v58,
          v59,
          v14,
          v60,
          v61,
          v62,
          v63,
          v64,
          v65,
          v66,
          v67,
          v68,
          v69,
          v70,
          v71,
          v72,
          v73,
          v74,
          v75,
          v76,
          v77);
        *uint64_t v11 = v15;
        v11[1] = v16;
        uint64_t v11[2] = (uint64_t)v17;
        v11[3] = (uint64_t)v110;
        v11[4] = (uint64_t)v18;
        v11[5] = (uint64_t)v19;
        v11[6] = v112;
        v11[7] = v111;
        v11[8] = (uint64_t)v109;
        v11[9] = (uint64_t)v108;
        v11[10] = (uint64_t)v107;
        v11[11] = v106;
        v11[12] = v105;
        v11[13] = v104;
        v11[14] = v103;
        v11[15] = v102;
        v11[16] = v101;
        v11[17] = v100;
        v11[18] = v99;
        v11[19] = v98;
        v11[20] = (uint64_t)v97;
        v11[21] = v96;
        v11[22] = v95;
        v11[23] = v94;
        unsigned char v11[24] = v93;
        v11[25] = v92;
        v11[26] = v91;
        v11[27] = (uint64_t)v90;
        v11[28] = (uint64_t)v89;
        v11[29] = v88;
        v11[30] = v87;
        v11[31] = v86;
        v11[32] = v85;
        v11[33] = v84;
        v11[34] = v83;
        v11[35] = v82;
        v11[36] = v81;
        v11[37] = v80;
        v11[38] = v55;
        v11[39] = v56;
        v11[40] = v13;
        v11[41] = v57;
        v11[42] = v58;
        v11[43] = v59;
        v11[44] = v14;
        v11[45] = v60;
        v11[46] = v61;
        v11[47] = v62;
        v11[48] = v63;
        v11[49] = v64;
        v11[50] = v65;
        v11[51] = v66;
        v11[52] = v67;
        v11[53] = v68;
        v11[54] = v69;
        v11[55] = v70;
        v11[56] = v71;
        v11[57] = v72;
        v11[58] = v73;
        v11[59] = v74;
        v11[60] = v75;
        v11[61] = v76;
        v11[62] = v77;
        v11[63] = v78;
        uint64_t v20 = *(int *)(v79 + 24);
        uint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = *((void *)v22 + 1);
        *((void *)v21 + 2) = *((void *)v22 + 2);
        v21[24] = v22[24];
        v21[25] = v22[25];
        *((void *)v21 + 4) = *((void *)v22 + 4);
        *((void *)v21 + 5) = *((void *)v22 + 5);
        uint64_t v23 = (int *)type metadata accessor for PopoverModel(0);
        a1[v23[5]] = a2[v23[5]];
        uint64_t v24 = v23[6];
        uint64_t v25 = &a1[v24];
        uint64_t v26 = &a2[v24];
        uint64_t v27 = *((void *)v26 + 1);
        *(void *)uint64_t v25 = *(void *)v26;
        *((void *)v25 + 1) = v27;
        uint64_t v28 = v23[7];
        unint64_t v29 = &a1[v28];
        uint64_t v30 = &a2[v28];
        uint64_t v31 = *((void *)v30 + 1);
        *(void *)unint64_t v29 = *(void *)v30;
        *((void *)v29 + 1) = v31;
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        goto LABEL_20;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        uint64_t v32 = *((void *)a2 + 2);
        uint64_t v33 = *((void *)a2 + 3);
        uint64_t v34 = *((void *)a2 + 4);
        uint64_t v35 = *((void *)a2 + 5);
        char v36 = a2[48];
        swift_bridgeObjectRetain();
        sub_2499ACFC4(v32, v33, v34, v35, v36);
        *((void *)a1 + 2) = v32;
        *((void *)a1 + 3) = v33;
        *((void *)a1 + 4) = v34;
        *((void *)a1 + 5) = v35;
        a1[48] = v36;
        int v37 = a2[72];
        if (v37 == 255)
        {
          long long v43 = *(_OWORD *)(a2 + 56);
          a1[72] = a2[72];
          *(_OWORD *)(a1 + 56) = v43;
        }
        else
        {
          uint64_t v38 = *((void *)a2 + 7);
          uint64_t v39 = *((void *)a2 + 8);
          sub_2499AD02C(v38, v39, a2[72]);
          *((void *)a1 + 7) = v38;
          *((void *)a1 + 8) = v39;
          a1[72] = v37;
        }
        a1[73] = a2[73];
        if (*((void *)a2 + 11))
        {
          *((void *)a1 + 10) = *((void *)a2 + 10);
          *((void *)a1 + 11) = *((void *)a2 + 11);
          *((void *)a1 + 12) = *((void *)a2 + 12);
          swift_bridgeObjectRetain();
          swift_retain();
        }
        else
        {
          long long v44 = *((_OWORD *)a2 + 5);
          *((void *)a1 + 12) = *((void *)a2 + 12);
          *((_OWORD *)a1 + 5) = v44;
        }
        uint64_t v45 = *((void *)a2 + 14);
        *((void *)a1 + 13) = *((void *)a2 + 13);
        *((void *)a1 + 14) = v45;
        swift_retain();
        goto LABEL_20;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        *((void *)a1 + 2) = *((void *)a2 + 2);
        uint64_t v40 = *((void *)a2 + 3);
        a1[32] = a2[32];
        *((void *)a1 + 3) = v40;
        a1[33] = a2[33];
        uint64_t v41 = *((void *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v41)
        {
          uint64_t v42 = *((void *)a2 + 6);
          *((void *)a1 + 5) = v41;
          *((void *)a1 + 6) = v42;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        }
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *initializeWithTake for RequestContentModel(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_249AEB808();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
    *(void *)&a1[*(int *)(v7 + 52)] = *(void *)&a2[*(int *)(v7 + 52)];
    uint64_t v8 = type metadata accessor for Instrument();
    memcpy(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], 0x200uLL);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    long long v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    v10[2] = v11[2];
    uint64_t v13 = (int *)type metadata accessor for PopoverModel(0);
    a1[v13[5]] = a2[v13[5]];
    *(_OWORD *)&a1[v13[6]] = *(_OWORD *)&a2[v13[6]];
    *(_OWORD *)&a1[v13[7]] = *(_OWORD *)&a2[v13[7]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *assignWithTake for RequestContentModel(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2499AB764((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for RequestContentModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_249AEB808();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
      *(void *)&a1[*(int *)(v7 + 52)] = *(void *)&a2[*(int *)(v7 + 52)];
      uint64_t v8 = type metadata accessor for Instrument();
      memcpy(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], 0x200uLL);
      uint64_t v9 = *(int *)(v8 + 24);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      long long v12 = v11[1];
      *uint64_t v10 = *v11;
      v10[1] = v12;
      v10[2] = v11[2];
      uint64_t v13 = (int *)type metadata accessor for PopoverModel(0);
      a1[v13[5]] = a2[v13[5]];
      *(_OWORD *)&a1[v13[6]] = *(_OWORD *)&a2[v13[6]];
      *(_OWORD *)&a1[v13[7]] = *(_OWORD *)&a2[v13[7]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for RequestContentModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for RequestContentModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_2499AE70C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_2499AE71C()
{
  uint64_t result = type metadata accessor for PopoverModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_2499AE7C4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D40);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t MetadataExporter.init(ASCPathsByIdURL:destinationURL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  id v6 = objc_allocWithZone(MEMORY[0x263F08870]);
  sub_24987BE44();
  uint64_t v7 = (void *)sub_249AECE78();
  id v8 = objc_msgSend(v6, sel_initDirectoryWithFileWrappers_, v7);

  *a3 = v8;
  uint64_t v9 = type metadata accessor for MetadataExporter();
  uint64_t v10 = (char *)a3 + *(int *)(v9 + 20);
  uint64_t v11 = sub_249AEB768();
  long long v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v10, a1, v11);
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v12)((char *)a3 + *(int *)(v9 + 24), a2, v11);
}

uint64_t type metadata accessor for MetadataExporter()
{
  uint64_t result = qword_2696E1D68;
  if (!qword_2696E1D68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t MetadataExporter.write(_:)(uint64_t a1)
{
  uint64_t v160 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v150 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_249AEB4E8();
  uint64_t v144 = *(void *)(v6 - 8);
  uint64_t v145 = (void (**)(void, void))v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v143 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_249AEE3E8();
  uint64_t v142 = *(void *)(v147 - 8);
  MEMORY[0x270FA5388](v147);
  uint64_t v146 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v148 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v108 - v12;
  uint64_t v14 = sub_249AED118();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v119 = v14;
  uint64_t v120 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  long long v18 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v118 = *(void *)(a1 + 112);
  uint64_t v19 = type metadata accessor for MetadataExporter();
  uint64_t v20 = (char *)v1 + *(int *)(v19 + 20);
  sub_249AED108();
  uint64_t result = sub_249AED098();
  uint64_t v135 = v2;
  if (!v2)
  {
    uint64_t v141 = (uint64_t)v20;
    uint64_t v113 = v1;
    uint64_t v149 = v13;
    uint64_t v129 = v19;
    sub_249AED108();
    uint64_t v22 = sub_249AED0E8();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v25 = v120 + 8;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v120 + 8);
    v26(v18, v119);
    if (v24 >> 60 == 15)
    {
      sub_249AEB468();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF520);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_249AF0A70;
      *(void *)(v27 + 32) = sub_249AED0D8();
      *(void *)(v27 + 40) = v28;
      *(void *)&long long v156 = 0;
      *((void *)&v156 + 1) = 0xE000000000000000;
      sub_249AEDA78();
      swift_bridgeObjectRelease();
      *(void *)&long long v156 = 0x2064696C61766E49;
      *((void *)&v156 + 1) = 0xE800000000000000;
      sub_249AEB768();
      sub_2499AFC80(&qword_2696E1D48, MEMORY[0x263F06EA8]);
      sub_249AEDF48();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      long long v29 = v156;
      *(void *)(v27 + 72) = MEMORY[0x263F8D310];
      *(_OWORD *)(v27 + 48) = v29;
      sub_2498ECE6C(v27);
      sub_2499AFC80((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
      uint64_t v30 = v143;
      uint64_t v31 = v145;
      sub_249AEB708();
      uint64_t v32 = sub_249AEB458();
      (*(void (**)(char *, void))(v144 + 8))(v30, v31);
      uint64_t v135 = v32;
      return swift_willThrow();
    }
    else
    {
      sub_249AEB518();
      swift_allocObject();
      sub_249AEB508();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D50);
      sub_2499AFCC8();
      uint64_t v33 = v135;
      sub_249AEB4F8();
      uint64_t v135 = v33;
      if (v33)
      {
        sub_249882F14(v22, v24);
        return swift_release();
      }
      else
      {
        uint64_t v111 = v26;
        uint64_t v112 = v18;
        uint64_t v120 = v25;
        unint64_t v110 = v24;
        swift_release();
        uint64_t v128 = v156;
        uint64_t v34 = sub_2498ABD38(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v36 = v34[2];
        unint64_t v35 = v34[3];
        if (v36 >= v35 >> 1) {
          uint64_t v34 = sub_2498ABD38((void *)(v35 > 1), v36 + 1, 1, v34);
        }
        uint64_t v37 = (uint64_t)v149;
        uint64_t v38 = v118;
        uint64_t v39 = v142;
        v34[2] = v36 + 1;
        uint64_t v134 = v34;
        uint64_t v40 = &v34[2 * v36];
        v40[4] = 0xD000000000000030;
        v40[5] = 0x8000000249B16640;
        uint64_t v41 = *(void *)(v38 + 16);
        uint64_t v109 = v22;
        uint64_t v114 = v41;
        if (v41)
        {
          uint64_t v115 = v38 + 32;
          uint64_t v145 = (void (**)(void, void))(v39 + 8);
          swift_bridgeObjectRetain();
          uint64_t v42 = 0;
          uint64_t v43 = v135;
          while (1)
          {
            memcpy(v159, (const void *)(v115 + 480 * v42), sizeof(v159));
            uint64_t v44 = *((void *)&v159[1] + 1);
            uint64_t v123 = *(void *)(*((void *)&v159[1] + 1) + 16);
            if (v123)
            {
              uint64_t v117 = v42;
              uint64_t v127 = type metadata accessor for Layout();
              uint64_t v45 = *(void *)(v127 - 8);
              uint64_t v122 = v44 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
              sub_249882274((uint64_t)v159);
              uint64_t v121 = *(void *)(v45 + 72);
              uint64_t v116 = v44;
              swift_bridgeObjectRetain();
              uint64_t v46 = 0;
              do
              {
                uint64_t v47 = *(int *)(v127 + 24);
                uint64_t v126 = v122 + v121 * v46;
                uint64_t v48 = *(void *)(v126 + v47);
                uint64_t v132 = *(void *)(v48 + 16);
                if (v132)
                {
                  uint64_t v125 = v46;
                  uint64_t v137 = type metadata accessor for Zone();
                  uint64_t v49 = *(void *)(v137 - 8);
                  uint64_t v131 = v48
                       + ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80));
                  uint64_t v130 = *(void *)(v49 + 72);
                  uint64_t v124 = v48;
                  swift_bridgeObjectRetain();
                  uint64_t v50 = 0;
                  uint64_t v51 = (char *)MEMORY[0x263F8EE88];
                  do
                  {
                    uint64_t v138 = v50;
                    uint64_t v151 = v51;
                    uint64_t v52 = *(int *)(v137 + 28);
                    uint64_t v136 = v131 + v130 * v50;
                    uint64_t v53 = *(void *)(v136 + v52);
                    uint64_t v142 = *(void *)(v53 + 16);
                    if (v142)
                    {
                      uint64_t v135 = v43;
                      uint64_t v54 = type metadata accessor for Component();
                      uint64_t v55 = *(void *)(v54 - 8);
                      uint64_t v140 = v53
                           + ((*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80));
                      uint64_t v141 = v54;
                      uint64_t v139 = *(void *)(v55 + 72);
                      uint64_t v133 = v53;
                      swift_bridgeObjectRetain();
                      uint64_t v56 = 0;
                      do
                      {
                        unint64_t v57 = *(char **)(v140 + v139 * v56 + *(int *)(v141 + 32));
                        uint64_t v58 = *((void *)v57 + 2);
                        if (v58)
                        {
                          uint64_t v144 = v56;
                          uint64_t v150 = (char *)type metadata accessor for Slot();
                          uint64_t v59 = &v57[(*(unsigned __int8 *)(*((void *)v150 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v150 - 1) + 80)];
                          uint64_t v60 = *(void *)(*((void *)v150 - 1) + 72);
                          uint64_t v143 = v57;
                          swift_bridgeObjectRetain();
                          do
                          {
                            uint64_t v61 = (uint64_t)&v59[*((int *)v150 + 9)];
                            sub_2498B85A4(v61, v37);
                            uint64_t v62 = type metadata accessor for Instrument();
                            uint64_t v63 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48);
                            if (v63(v37, 1, v62) == 1)
                            {
                              sub_2498B860C(v37);
                            }
                            else
                            {
                              sub_2498A4990(v37 + *(int *)(v62 + 20), (uint64_t)v155);
                              sub_2498A4990((uint64_t)v155, (uint64_t)&v156);
                              switch(sub_2498B8790((uint64_t)&v156))
                              {
                                case 1u:
                                  uint64_t v68 = sub_2498B87AC((uint64_t)&v156);
                                  uint64_t v69 = v37;
                                  char v70 = *(unsigned char *)(v68 + 496);
                                  sub_2498B8734(v69);
                                  if (v70) {
                                    goto LABEL_37;
                                  }
                                  goto LABEL_40;
                                case 2u:
                                  int v71 = ~*(_DWORD *)(sub_2498B87AC((uint64_t)&v156) + 40);
                                  uint64_t v67 = v37;
                                  uint64_t v66 = v71 & 0xFE;
                                  goto LABEL_36;
                                case 3u:
                                case 4u:
                                case 5u:
                                  sub_2498B87AC((uint64_t)&v156);
                                  sub_2498B8734(v37);
                                  goto LABEL_37;
                                case 8u:
                                  uint64_t v64 = sub_2498B87AC((uint64_t)&v156);
                                  uint64_t v65 = v37;
                                  uint64_t v66 = *(void *)(v64 + 8);
                                  uint64_t v67 = v65;
LABEL_36:
                                  sub_2498B8734(v67);
                                  if (v66)
                                  {
LABEL_37:
                                    uint64_t v72 = v148;
                                    sub_2498B85A4(v61, v148);
                                    if (v63(v72, 1, v62) == 1)
                                    {
                                      sub_2498B860C(v72);
                                    }
                                    else
                                    {
                                      sub_2498A4990(v72 + *(int *)(v62 + 20), (uint64_t)v154);
                                      uint64_t v153 = &type metadata for Instrument.Kind;
                                      uint64_t v152 = swift_allocObject();
                                      sub_2498A4990((uint64_t)v154, v152 + 16);
                                      sub_2499B18BC((uint64_t)v154);
                                      uint64_t v73 = v146;
                                      sub_249AEE398();
                                      uint64_t v74 = sub_2499765C0();
                                      (*v145)(v73, v147);
                                      sub_2498B8734(v72);
                                      sub_2499AFA7C(v74);
                                    }
                                  }
LABEL_40:
                                  uint64_t v37 = (uint64_t)v149;
                                  break;
                                default:
                                  sub_2498B8734(v37);
                                  break;
                              }
                            }
                            v59 += v60;
                            --v58;
                          }
                          while (v58);
                          swift_bridgeObjectRelease();
                          uint64_t v56 = v144;
                        }
                        ++v56;
                      }
                      while (v56 != v142);
                      swift_bridgeObjectRelease();
                      unint64_t v75 = v151;
                      uint64_t v43 = v135;
                    }
                    else
                    {
                      unint64_t v75 = v51;
                    }
                    uint64_t v76 = v128;
                    swift_bridgeObjectRetain();
                    uint64_t v77 = swift_bridgeObjectRetain();
                    uint64_t v78 = sub_2499B15FC(v77, v76);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (*(void *)(v78 + 16))
                    {
                      uint64_t v150 = v75;
                      *(void *)&long long v156 = 0;
                      *((void *)&v156 + 1) = 0xE000000000000000;
                      sub_249AEDA78();
                      v155[0] = v156;
                      long long v156 = v159[0];
                      swift_bridgeObjectRetain_n();
                      sub_249AED128();
                      sub_249AED1E8();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      sub_249AED1E8();
                      uint64_t v80 = v126;
                      uint64_t v79 = v127;
                      swift_bridgeObjectRetain();
                      sub_249AED1E8();
                      swift_bridgeObjectRelease();
                      sub_249AED1E8();
                      LOBYTE(v156) = *(unsigned char *)(v80 + *(int *)(v79 + 36));
                      sub_249AEDC08();
                      sub_249AED1E8();
                      uint64_t v82 = v136;
                      uint64_t v81 = v137;
                      swift_bridgeObjectRetain();
                      sub_249AED1E8();
                      swift_bridgeObjectRelease();
                      sub_249AED1E8();
                      uint64_t v83 = (long long *)(v82 + *(int *)(v81 + 24));
                      long long v84 = v83[1];
                      long long v156 = *v83;
                      long long v157 = v84;
                      type metadata accessor for CGRect(0);
                      sub_249AEDC08();
                      sub_249AED1E8();
                      uint64_t v85 = sub_2498DA294(v78);
                      swift_bridgeObjectRelease();
                      uint64_t v86 = *(void *)(v85 + 16);
                      if (v86)
                      {
                        __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE328);
                        uint64_t v87 = (void *)swift_allocObject();
                        int64_t v88 = _swift_stdlib_malloc_size(v87);
                        uint64_t v89 = v88 - 32;
                        if (v88 < 32) {
                          uint64_t v89 = v88 - 17;
                        }
                        v87[2] = v86;
                        v87[3] = 2 * (v89 >> 4);
                        uint64_t v90 = sub_2499B11C8((uint64_t)&v156, v87 + 4, v86, v85);
                        uint64_t v143 = v158;
                        uint64_t v144 = *((void *)&v157 + 1);
                        swift_bridgeObjectRetain_n();
                        sub_249882CD8();
                        if (v90 != v86)
                        {
                          __break(1u);
                          goto LABEL_57;
                        }
                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        uint64_t v87 = (void *)MEMORY[0x263F8EE78];
                      }
                      *(void *)&long long v156 = v87;
                      sub_2499AFC14((uint64_t *)&v156);
                      if (v43)
                      {
                        swift_release();
                        __break(1u);
                        goto LABEL_67;
                      }
                      uint64_t v43 = 0;
                      swift_bridgeObjectRelease();
                      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0800);
                      sub_2499544D0();
                      sub_249AECFE8();
                      swift_release();
                      sub_249AED1E8();
                      swift_bridgeObjectRelease();
                      sub_249AED1E8();
                      long long v91 = v155[0];
                      uint64_t v92 = v134;
                      unint64_t v94 = v134[2];
                      unint64_t v93 = v134[3];
                      if (v94 >= v93 >> 1) {
                        uint64_t v92 = sub_2498ABD38((void *)(v93 > 1), v94 + 1, 1, v134);
                      }
                      v92[2] = v94 + 1;
                      uint64_t v134 = v92;
                      *(_OWORD *)&v92[2 * v94 + 4] = v91;
                      swift_bridgeObjectRelease();
                      uint64_t v37 = (uint64_t)v149;
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                    }
                    uint64_t v50 = v138 + 1;
                    uint64_t v51 = (char *)MEMORY[0x263F8EE88];
                  }
                  while (v138 + 1 != v132);
                  swift_bridgeObjectRelease();
                  uint64_t v46 = v125;
                }
                ++v46;
              }
              while (v46 != v123);
              swift_bridgeObjectRelease();
              sub_2498824DC((uint64_t)v159);
              uint64_t v42 = v117;
            }
            if (++v42 == v114)
            {
              uint64_t v135 = v43;
              swift_bridgeObjectRelease();
              break;
            }
          }
        }
LABEL_57:
        swift_bridgeObjectRelease();
        *(void *)&long long v156 = v134;
        swift_bridgeObjectRetain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0800);
        sub_2499544D0();
        sub_249AECFE8();
        swift_bridgeObjectRelease();
        uint64_t v95 = v112;
        sub_249AED108();
        uint64_t v96 = sub_249AED0E8();
        unint64_t v98 = v97;
        swift_bridgeObjectRelease();
        v111(v95, v119);
        if (v98 >> 60 == 15)
        {
LABEL_67:
          __break(1u);
          JUMPOUT(0x2499AFA5CLL);
        }
        uint64_t v99 = *v113;
        uint64_t v100 = v135;
        NSFileWrapper.addRegularFile(withContents:fileName:)(v96, v98, 0x7368746150435341, 0xEC0000007673632ELL);
        uint64_t v135 = v100;
        if (v100)
        {
          sub_249882F14(v109, v110);
          uint64_t v101 = v96;
          unint64_t v102 = v98;
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v103 = (void *)sub_249AEB738();
          *(void *)&long long v156 = 0;
          unsigned __int8 v104 = objc_msgSend(v99, sel_writeToURL_options_originalContentsURL_error_, v103, 1, 0, &v156);

          if (v104)
          {
            id v105 = (id)v156;
          }
          else
          {
            id v106 = (id)v156;
            uint64_t v107 = sub_249AEB718();

            uint64_t v135 = v107;
            swift_willThrow();
          }
          sub_249882F14(v96, v98);
          uint64_t v101 = v109;
          unint64_t v102 = v110;
        }
        sub_249882F14(v101, v102);
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

uint64_t sub_2499AFA7C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    uint64_t v12 = v10[1];
    swift_bridgeObjectRetain();
    sub_2499248E0(&v16, v11, v12);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_2499AFBFC(uint64_t a1)
{
  return MetadataExporter.write(_:)(a1);
}

uint64_t sub_2499AFC14(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_24998EFE0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_2499AFDB0(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_2499AFC80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499AFCC8()
{
  unint64_t result = qword_2696E1D58;
  if (!qword_2696E1D58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E1D50);
    sub_2499AFD44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1D58);
  }
  return result;
}

unint64_t sub_2499AFD44()
{
  unint64_t result = qword_2696E1D60;
  if (!qword_2696E1D60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E0800);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E1D60);
  }
  return result;
}

uint64_t sub_2499AFDB0(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_249AEDF38();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_2499B049C(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  unint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      uint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      unint64_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          unint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_2499B056C((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v97 = sub_24998EF90((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          unint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_249AED488();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_249AEE0D8();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      unint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_249AEE0D8()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_24998EB7C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_24998EB7C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          unint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        unint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        int64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_2499B056C((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_249AEE0D8() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_249AEDC48();
  __break(1u);
  return result;
}

uint64_t sub_2499B049C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_249AEE0D8(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2499B056C(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        long long v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_249AEE0D8() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)long long v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)long long v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_249AEE0D8() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_24998EED4((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

void *sub_2499B0808(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v25 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v26 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v27 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    long long v18 = (void *)(*(void *)(a4 + 48) + 56 * v14);
    uint64_t v19 = v18[1];
    uint64_t v21 = v18[2];
    uint64_t v20 = v18[3];
    uint64_t v23 = v18[4];
    uint64_t v22 = v18[5];
    uint64_t v24 = v18[6];
    *uint64_t v10 = *v18;
    v10[1] = v19;
    v10[2] = v21;
    v10[3] = v20;
    v10[4] = v23;
    v10[5] = v22;
    v10[6] = v24;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v27)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v27)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v27)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v27)
              {
                unint64_t v8 = 0;
                int64_t v11 = v27 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v25;
      uint64_t result = v26;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_2499B0A74(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a4 + 64;
  uint64_t v30 = (void *)result;
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v4 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v7 = 0;
    a3 = 0;
    goto LABEL_35;
  }
  if (!a3)
  {
    int64_t v7 = 0;
LABEL_35:
    uint64_t v29 = v30;
LABEL_36:
    *uint64_t v29 = a4;
    v29[1] = v33;
    void v29[2] = ~v31;
    v29[3] = v7;
    _OWORD v29[4] = v5;
    return a3;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v6 = a2;
  uint64_t v34 = a3;
  int64_t v7 = 0;
  a3 = 0;
  int64_t v32 = (unint64_t)(63 - v31) >> 6;
  if (!v5) {
    goto LABEL_9;
  }
LABEL_8:
  uint64_t v37 = (v5 - 1) & v5;
  int64_t v38 = v7;
  for (unint64_t i = __clz(__rbit64(v5)) | (v7 << 6); ; unint64_t i = __clz(__rbit64(v10)) + (v9 << 6))
  {
    uint64_t v12 = a3 + 1;
    uint64_t v13 = *(void *)(a4 + 48) + 112 * i;
    uint64_t v15 = *(void *)v13;
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v17 = *(void *)(v13 + 16);
    uint64_t v16 = *(void *)(v13 + 24);
    uint64_t v18 = *(void *)(v13 + 32);
    uint64_t v19 = *(void *)(v13 + 40);
    uint64_t v20 = *(void *)(v13 + 48);
    uint64_t v21 = *(void *)(v13 + 56);
    char v22 = *(unsigned char *)(v13 + 64);
    uint64_t v23 = *(void *)(v13 + 72);
    uint64_t v24 = *(void *)(v13 + 80);
    uint64_t v25 = *(void *)(v13 + 88);
    char v26 = *(unsigned char *)(v13 + 96);
    uint64_t v27 = *(void *)(v13 + 104);
    uint64_t v28 = *(void *)(*(void *)(a4 + 56) + 8 * i);
    *(void *)uint64_t v6 = v15;
    *(void *)(v6 + 8) = v14;
    *(void *)(v6 + 16) = v17;
    *(void *)(v6 + 24) = v16;
    *(void *)(v6 + 32) = v18;
    *(void *)(v6 + 40) = v19;
    *(void *)(v6 + 48) = v20;
    *(void *)(v6 + 56) = v21;
    *(unsigned char *)(v6 + 64) = v22;
    *(void *)(v6 + 72) = v23;
    *(void *)(v6 + 80) = v24;
    *(void *)(v6 + 88) = v25;
    *(unsigned char *)(v6 + 96) = v26;
    *(void *)(v6 + 104) = v27;
    *(void *)(v6 + 112) = v28;
    if (v12 == v34)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24988CD7C(v16, v18, v19, v20, v21, v22);
      sub_24988CDF0(v24);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v29 = v30;
      a3 = v34;
      unint64_t v5 = v37;
      int64_t v7 = v38;
      goto LABEL_36;
    }
    v6 += 120;
    uint64_t v36 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24988CD7C(v16, v18, v19, v20, v21, v22);
    sub_24988CDF0(v24);
    swift_retain();
    uint64_t result = swift_bridgeObjectRetain();
    a3 = v36;
    unint64_t v5 = v37;
    int64_t v7 = v38;
    if (v37) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v9 >= v32) {
      goto LABEL_33;
    }
    unint64_t v10 = *(void *)(v33 + 8 * v9);
    if (!v10) {
      break;
    }
LABEL_18:
    uint64_t v37 = (v10 - 1) & v10;
    int64_t v38 = v9;
  }
  v7 += 2;
  if (v9 + 1 >= v32)
  {
    unint64_t v5 = 0;
    int64_t v7 = v9;
    goto LABEL_35;
  }
  unint64_t v10 = *(void *)(v33 + 8 * v7);
  if (v10) {
    goto LABEL_14;
  }
  int64_t v11 = v9 + 2;
  if (v9 + 2 >= v32) {
    goto LABEL_33;
  }
  unint64_t v10 = *(void *)(v33 + 8 * v11);
  if (v10) {
    goto LABEL_17;
  }
  int64_t v7 = v9 + 3;
  if (v9 + 3 >= v32)
  {
    unint64_t v5 = 0;
    int64_t v7 = v9 + 2;
    goto LABEL_35;
  }
  unint64_t v10 = *(void *)(v33 + 8 * v7);
  if (v10)
  {
LABEL_14:
    int64_t v9 = v7;
    goto LABEL_18;
  }
  int64_t v11 = v9 + 4;
  if (v9 + 4 >= v32)
  {
LABEL_33:
    unint64_t v5 = 0;
    goto LABEL_35;
  }
  unint64_t v10 = *(void *)(v33 + 8 * v11);
  if (v10)
  {
LABEL_17:
    int64_t v9 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v9 >= v32)
    {
      unint64_t v5 = 0;
      int64_t v7 = v32 - 1;
      uint64_t v29 = v30;
      goto LABEL_36;
    }
    unint64_t v10 = *(void *)(v33 + 8 * v9);
    ++v11;
    if (v10) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2499B0DA8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 48) + 32 * v16;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v23 = *(void *)(v20 + 16);
    LOBYTE(v20) = *(unsigned char *)(v20 + 24);
    *(void *)uint64_t v11 = v22;
    *(void *)(v11 + 8) = v21;
    *(void *)(v11 + 16) = v23;
    *(unsigned char *)(v11 + 24) = v20;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 32;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2499B0FB8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
LABEL_36:
    *unint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    int64_t v12 = 0;
    uint64_t v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_249882C34(*(void *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_249882BCC(v21, (uint64_t)v22);
    uint64_t result = sub_249882BCC(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      uint64_t v13 = a3;
LABEL_35:
      uint64_t v7 = v20;
      goto LABEL_36;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18) {
    goto LABEL_23;
  }
  int64_t v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v12 = v17 + 1;
  if (v17 + 2 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  int64_t v12 = v17 + 2;
  if (v17 + 3 >= v14) {
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  int64_t v19 = v17 + 4;
  int64_t v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    unint64_t v9 = 0;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v19;
LABEL_23:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      int64_t v12 = v14 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_2499B11C8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_2499B13C8(void *result, char *__dst, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!__dst)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *unint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = __dst;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (long long *)(*(void *)(a4 + 56) + (v16 << 7));
    long long v21 = v20[3];
    long long v23 = *v20;
    long long v22 = v20[1];
    v27[2] = v20[2];
    v27[3] = v21;
    v27[0] = v23;
    v27[1] = v22;
    long long v25 = v20[5];
    long long v24 = v20[6];
    long long v26 = v20[4];
    *(_OWORD *)&v28[9] = *(long long *)((char *)v20 + 105);
    uint64_t v27[5] = v25;
    *(_OWORD *)uint64_t v28 = v24;
    _OWORD v27[4] = v26;
    memmove(v11, v20, 0x79uLL);
    if (v13 == v10)
    {
      sub_24988E364((uint64_t)v27);
      goto LABEL_38;
    }
    v11 += 128;
    uint64_t result = (void *)sub_24988E364((uint64_t)v27);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_2499B15FC(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = MEMORY[0x263F8EE78];
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_26;
      }
      goto LABEL_8;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v19 >= v8) {
      goto LABEL_27;
    }
    unint64_t v20 = *(void *)(v4 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v8) {
        goto LABEL_27;
      }
      unint64_t v20 = *(void *)(v4 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v8) {
          goto LABEL_27;
        }
        unint64_t v20 = *(void *)(v4 + 8 * v10);
        if (!v20)
        {
          int64_t v10 = v19 + 3;
          if (v19 + 3 >= v8) {
            goto LABEL_27;
          }
          unint64_t v20 = *(void *)(v4 + 8 * v10);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v7 = (v20 - 1) & v20;
    unint64_t v12 = __clz(__rbit64(v20)) + (v10 << 6);
    if (!*(void *)(a2 + 16))
    {
LABEL_26:
      uint64_t v17 = MEMORY[0x263F8EE78];
      goto LABEL_5;
    }
LABEL_8:
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_2498EF01C(v14, v15);
    uint64_t v17 = MEMORY[0x263F8EE78];
    if (v18)
    {
      uint64_t v17 = *(void *)(*(void *)(a2 + 56) + 8 * v16);
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
LABEL_5:
    uint64_t result = sub_249894C58(v17);
  }
  int64_t v21 = v19 + 4;
  if (v21 >= v8)
  {
LABEL_27:
    swift_release();
    return v22;
  }
  unint64_t v20 = *(void *)(v4 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_27;
    }
    unint64_t v20 = *(void *)(v4 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2499B17DC()
{
  long long v17 = *(_OWORD *)(v0 + 480);
  long long v18 = *(_OWORD *)(v0 + 496);
  long long v15 = *(_OWORD *)(v0 + 448);
  long long v16 = *(_OWORD *)(v0 + 464);
  long long v13 = *(_OWORD *)(v0 + 416);
  long long v14 = *(_OWORD *)(v0 + 432);
  long long v11 = *(_OWORD *)(v0 + 384);
  long long v12 = *(_OWORD *)(v0 + 400);
  long long v9 = *(_OWORD *)(v0 + 352);
  long long v10 = *(_OWORD *)(v0 + 368);
  long long v7 = *(_OWORD *)(v0 + 320);
  long long v8 = *(_OWORD *)(v0 + 336);
  long long v5 = *(_OWORD *)(v0 + 288);
  long long v6 = *(_OWORD *)(v0 + 304);
  long long v3 = *(_OWORD *)(v0 + 256);
  long long v4 = *(_OWORD *)(v0 + 272);
  long long v2 = *(_OWORD *)(v0 + 224);
  sub_2498FCAAC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80), *(void **)(v0 + 88), *(void **)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160),
    *(void *)(v0 + 168),
    *(void **)(v0 + 176),
    *(void *)(v0 + 184),
    *(void *)(v0 + 192),
    *(void *)(v0 + 200),
    *(void *)(v0 + 208),
    *(void *)(v0 + 216),
    v2,
    *((void **)&v2 + 1),
    *(void **)(v0 + 240),
    *(void *)(v0 + 248),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((unint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(void *)(v0 + 512));

  return MEMORY[0x270FA0238](v0, 528, 7);
}

uint64_t sub_2499B18BC(uint64_t a1)
{
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v18 = *(_OWORD *)(a1 + 480);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v3 = *(_OWORD *)(a1 + 240);
  long long v4 = *(_OWORD *)(a1 + 256);
  sub_2498FB4B4(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void **)(a1 + 24), *(void **)(a1 + 32), *(void **)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void **)(a1 + 72), *(void **)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void **)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void **)(a1 + 216),
    *(void **)(a1 + 224),
    *(void *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((unint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    SBYTE8(v10),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    SBYTE8(v13),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    SBYTE8(v16),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(void *)(a1 + 496));
  return a1;
}

void **initializeBufferWithCopyOfBuffer for MetadataExporter(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  long long v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    long long v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    long long v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    long long v9 = (char *)a1 + v8;
    long long v10 = (char *)a2 + v8;
    uint64_t v11 = sub_249AEB768();
    long long v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    long long v13 = v4;
    v12(v9, v10, v11);
    v12((char *)v7 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v11);
  }
  return v7;
}

uint64_t destroy for MetadataExporter(id *a1, uint64_t a2)
{
  long long v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_249AEB768();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, char *, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  long long v6 = (char *)a1 + *(int *)(a2 + 24);

  return v8(v6, v5);
}

void **initializeWithCopy for MetadataExporter(void **a1, void **a2, uint64_t a3)
{
  long long v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  long long v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEB768();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  v11((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v10);
  return a1;
}

void **assignWithCopy for MetadataExporter(void **a1, void **a2, uint64_t a3)
{
  long long v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_249AEB768();
  long long v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24);
  v13(v10, v11, v12);
  v13((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v12);
  return a1;
}

char *initializeWithTake for MetadataExporter(char *a1, char *a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  id v8 = &a2[v6];
  uint64_t v9 = sub_249AEB768();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[*(int *)(a3 + 24)], &a2[*(int *)(a3 + 24)], v9);
  return a1;
}

void **assignWithTake for MetadataExporter(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEB768();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11((char *)a1 + *(int *)(a3 + 24), (char *)a2 + *(int *)(a3 + 24), v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for MetadataExporter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499B1E48);
}

uint64_t sub_2499B1E48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_249AEB768();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for MetadataExporter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499B1F0C);
}

void *sub_2499B1F0C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_249AEB768();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2499B1FB4()
{
  uint64_t result = sub_249AEB768();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2499B2050(unsigned __int8 a1)
{
  uint64_t v3 = v1;
  int v5 = a1;
  uint64_t v6 = sub_249AED118();
  uint64_t v25 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_249AEB548();
  MEMORY[0x270FA5388](v9);
  if (v5 != 2)
  {
    uint64_t v27 = &type metadata for ArcPackage;
    unint64_t v28 = sub_2499B7994();
    uint64_t v14 = swift_allocObject();
    v26[0] = v14;
    long long v15 = *(_OWORD *)(v3 + 80);
    *(_OWORD *)(v14 + 80) = *(_OWORD *)(v3 + 64);
    *(_OWORD *)(v14 + 96) = v15;
    *(_OWORD *)(v14 + 112) = *(_OWORD *)(v3 + 96);
    *(void *)(v14 + 128) = *(void *)(v3 + 112);
    long long v16 = *(_OWORD *)(v3 + 16);
    *(_OWORD *)(v14 + 16) = *(_OWORD *)v3;
    *(_OWORD *)(v14 + 32) = v16;
    long long v17 = *(_OWORD *)(v3 + 48);
    *(_OWORD *)(v14 + 48) = *(_OWORD *)(v3 + 32);
    *(_OWORD *)(v14 + 64) = v17;
    sub_249AEB588();
    swift_allocObject();
    sub_2499B7A40(v3);
    sub_249AEB578();
    byte_2696E03A8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2198);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_249AFA7A0;
    sub_249AEB528();
    sub_249AEB538();
    uint64_t v29 = v18;
    sub_2499B787C(&qword_2696E21A0, MEMORY[0x263F06130]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21A8);
    sub_2499B77E8();
    sub_249AED998();
    sub_249AEB558();
    __swift_project_boxed_opaque_existential_2Tm(v26, (uint64_t)v27);
    uint64_t v11 = sub_249AEB568();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
    return v11;
  }
  type metadata accessor for LuaEncoder();
  uint64_t inited = swift_initStackObject();
  sub_2499B7A40(v3);
  *(void *)(inited + 16) = sub_2498ECB24(MEMORY[0x263F8EE78]);
  byte_2696E03A8 = 2;
  uint64_t v11 = inited;
  uint64_t v12 = sub_2499B61F0((long long *)v3);
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_2499B7AAC(v3);
    return v11;
  }
  uint64_t v19 = v12;
  unint64_t v20 = v13;
  Data.utf8.getter(v12, v13);
  sub_249882104(v19, v20);
  v26[0] = 0x206E7275746572;
  v26[1] = 0xE700000000000000;
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED108();
  uint64_t v11 = sub_249AED0E8();
  unint64_t v22 = v21;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v8, v6);
  if (v22 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    sub_2499B7AAC(v3);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_2499B2470(unsigned __int8 a1)
{
  uint64_t v3 = v1;
  int v5 = a1;
  uint64_t v6 = sub_249AED118();
  uint64_t v23 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_249AEB548();
  MEMORY[0x270FA5388](v9);
  if (v5 != 2)
  {
    uint64_t v25 = &type metadata for FontLayoutData;
    unint64_t v26 = sub_2499B771C();
    uint64_t v14 = (_OWORD *)swift_allocObject();
    v24[0] = v14;
    long long v15 = v3[1];
    v14[1] = *v3;
    void v14[2] = v15;
    *(_OWORD *)((char *)v14 + 41) = *(_OWORD *)((char *)v3 + 25);
    sub_249AEB588();
    swift_allocObject();
    sub_2499B77B0((uint64_t)v3);
    sub_249AEB578();
    byte_2696E03A8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2198);
    uint64_t v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_249AFA7A0;
    sub_249AEB528();
    sub_249AEB538();
    uint64_t v27 = v16;
    sub_2499B787C(&qword_2696E21A0, MEMORY[0x263F06130]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21A8);
    sub_2499B77E8();
    sub_249AED998();
    sub_249AEB558();
    __swift_project_boxed_opaque_existential_2Tm(v24, (uint64_t)v25);
    uint64_t v11 = sub_249AEB568();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v24);
    return v11;
  }
  type metadata accessor for LuaEncoder();
  uint64_t inited = swift_initStackObject();
  sub_2499B77B0((uint64_t)v3);
  *(void *)(inited + 16) = sub_2498ECB24(MEMORY[0x263F8EE78]);
  byte_2696E03A8 = 2;
  uint64_t v11 = inited;
  uint64_t v12 = sub_2499B6484((uint64_t)v3);
  if (v2)
  {
    swift_bridgeObjectRelease();
    sub_2499B7844((uint64_t)v3);
    return v11;
  }
  uint64_t v17 = v12;
  unint64_t v18 = v13;
  Data.utf8.getter(v12, v13);
  sub_249882104(v17, v18);
  v24[0] = 0x206E7275746572;
  v24[1] = 0xE700000000000000;
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED108();
  uint64_t v11 = sub_249AED0E8();
  unint64_t v20 = v19;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v8, v6);
  if (v20 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    sub_2499B7844((uint64_t)v3);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_2499B2878(unsigned __int8 a1, uint64_t a2)
{
  int v5 = a1;
  uint64_t v6 = sub_249AED118();
  uint64_t v21 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_249AEB548();
  MEMORY[0x270FA5388](v9);
  if (v5 != 2)
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21B8);
    unint64_t v24 = sub_2499B78C4();
    v22[0] = a2;
    sub_249AEB588();
    swift_allocObject();
    swift_bridgeObjectRetain();
    sub_249AEB578();
    byte_2696E03A8 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2198);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_249AFA7A0;
    sub_249AEB528();
    sub_249AEB538();
    uint64_t v25 = v14;
    sub_2499B787C(&qword_2696E21A0, MEMORY[0x263F06130]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21A8);
    sub_2499B77E8();
    sub_249AED998();
    sub_249AEB558();
    __swift_project_boxed_opaque_existential_2Tm(v22, v23);
    uint64_t v11 = sub_249AEB568();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v22);
    return v11;
  }
  type metadata accessor for LuaEncoder();
  uint64_t inited = swift_initStackObject();
  swift_bridgeObjectRetain();
  *(void *)(inited + 16) = sub_2498ECB24(MEMORY[0x263F8EE78]);
  byte_2696E03A8 = 2;
  uint64_t v11 = inited;
  uint64_t v12 = sub_2499B66EC(a2);
  if (v2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  uint64_t v15 = v12;
  unint64_t v16 = v13;
  Data.utf8.getter(v12, v13);
  sub_249882104(v15, v16);
  v22[0] = 0x206E7275746572;
  v22[1] = 0xE700000000000000;
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED108();
  uint64_t v11 = sub_249AED0E8();
  unint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v8, v6);
  if (v18 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

id InstrumentFont.cpFont.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 32);
  id v3 = InstrumentFont.Face.font(ofSize:weight:)((double)*(uint64_t *)(v0 + 8), *(double *)(v0 + 24));
  id v4 = objc_msgSend(v3, sel_fontDescriptor);
  id v5 = objc_msgSend(v4, sel_fontDescriptorWithDesign_, v1);

  if (!v5)
  {
    id v7 = v3;
    if (!v2) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  objc_msgSend(v3, sel_pointSize);
  id v7 = objc_msgSend(self, sel_fontWithDescriptor_size_, v5, v6);

  if (v2)
  {
LABEL_3:
    id v8 = sub_2498FE588();

    id v3 = v7;
    id v7 = v8;
  }
LABEL_4:

  return v7;
}

uint64_t InstrumentFont.init(face:pointSize:design:weight:italic:stable:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X8>, double a7@<D0>)
{
  char v7 = *a1;
  *(void *)(a6 + 40) = 0x322D6D6574737953;
  *(void *)(a6 + 48) = 0xE900000000000034;
  *(unsigned char *)a6 = v7;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(double *)(a6 + 24) = a7;
  *(unsigned char *)(a6 + 32) = a4;
  *(unsigned char *)(a6 + 33) = a5;
  return sub_2499B34B0();
}

uint64_t InstrumentFont.Face.name.getter()
{
  uint64_t v1 = 1869508429;
  if (*v0 != 1) {
    uint64_t v1 = 0x656D754E74666F53;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D6574737953;
  }
}

id InstrumentFont.Face.font(ofSize:weight:)(double a1, double a2)
{
  if (*v2)
  {
    if (*v2 != 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E20F8);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_249AFA7A0;
      char v7 = (void *)*MEMORY[0x263F81738];
      uint64_t v8 = MEMORY[0x263F8D310];
      *(void *)(inited + 32) = *MEMORY[0x263F81738];
      *(void *)(inited + 40) = 0x2074666F53204653;
      *(void *)(inited + 48) = 0xEF636972656D754ELL;
      uint64_t v9 = (void *)*MEMORY[0x263F817A0];
      *(void *)(inited + 64) = v8;
      *(void *)(inited + 72) = v9;
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2100);
      uint64_t v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_249AF0A70;
      uint64_t v11 = (void *)*MEMORY[0x263F81850];
      *(void *)(v10 + 32) = *MEMORY[0x263F81850];
      id v12 = v7;
      id v13 = v9;
      id v14 = v11;
      *(void *)(v10 + 40) = sub_249AEB858();
      unint64_t v15 = sub_2498ED110(v10);
      *(void *)(inited + 104) = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2108);
      *(void *)(inited + 80) = v15;
      sub_2498ED21C(inited);
      id v16 = objc_allocWithZone(MEMORY[0x263F81720]);
      type metadata accessor for AttributeName(0);
      sub_2499B787C(&qword_2696DDA08, type metadata accessor for AttributeName);
      unint64_t v17 = (void *)sub_249AECE78();
      swift_bridgeObjectRelease();
      id v18 = objc_msgSend(v16, sel_initWithFontAttributes_, v17);

      id v19 = objc_msgSend(self, sel_fontWithDescriptor_size_, v18, a1);
      return v19;
    }
    id v4 = objc_msgSend(self, sel_monospacedDigitSystemFontOfSize_weight_, a1, a2);
  }
  else
  {
    id v4 = objc_msgSend(self, sel_systemFontOfSize_weight_, a1, a2);
  }

  return v4;
}

CarPlayAssetUI::InstrumentFont::Face_optional __swiftcall InstrumentFont.Face.init(rawValue:)(Swift::String rawValue)
{
  int v2 = v1;
  unint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *int v2 = v5;
  return result;
}

uint64_t InstrumentFont.Face.rawValue.getter()
{
  uint64_t v1 = 0x636170736F6E6F6DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x656D754E74666F73;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6D6574737973;
  }
}

uint64_t sub_2499B3174(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498F1B80(*a1, *a2);
}

uint64_t sub_2499B3180()
{
  return sub_249AEE388();
}

uint64_t sub_2499B3234()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2499B32D4()
{
  return sub_249AEE388();
}

CarPlayAssetUI::InstrumentFont::Face_optional sub_2499B3384(Swift::String *a1)
{
  return InstrumentFont.Face.init(rawValue:)(*a1);
}

void sub_2499B3390(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xEF74696769446465;
  uint64_t v5 = 0x636170736F6E6F6DLL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x656D754E74666F73;
    unint64_t v4 = 0xEB00000000636972;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6D6574737973;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_2499B3400()
{
  return sub_249AED3A8();
}

uint64_t sub_2499B3460()
{
  return sub_249AED348();
}

uint64_t sub_2499B34B0()
{
  uint64_t v1 = 0x2D656C62617453;
  if (!*(unsigned char *)(v0 + 33)) {
    uint64_t v1 = 0;
  }
  unint64_t v2 = 0xE000000000000000;
  if (*(unsigned char *)(v0 + 33)) {
    unint64_t v2 = 0xE700000000000000;
  }
  uint64_t v11 = v1;
  unint64_t v12 = v2;
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_249AED0D8();
  uint64_t v5 = v4;
  if (v3 == sub_249AED0D8() && v5 == v6)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_13;
    }
    UIFontDescriptorSystemDesign.name.getter();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
  }
  swift_bridgeObjectRelease();
LABEL_13:
  double v9 = *(double *)(v0 + 24);
  if (v9 != *MEMORY[0x263F81838])
  {
    UIFontWeight.name.getter(v9);
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v0 + 32) == 1) {
    sub_249AED1E8();
  }
  sub_249AEDF48();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v0 + 40) = v11;
  *(void *)(v0 + 48) = v12;
  return result;
}

void InstrumentFont.face.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t InstrumentFont.face.setter(unsigned char *a1)
{
  *uint64_t v1 = *a1;
  return sub_2499B34B0();
}

uint64_t (*InstrumentFont.face.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  return sub_2499B3750;
}

uint64_t sub_2499B3750(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_2499B34B0();
  }
  return result;
}

uint64_t InstrumentFont.pointSize.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t InstrumentFont.pointSize.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
  return sub_2499B34B0();
}

uint64_t (*InstrumentFont.pointSize.modify(void *a1))()
{
  *a1 = v1;
  return sub_2499B7B18;
}

id InstrumentFont.design.getter()
{
  return *(id *)(v0 + 16);
}

void sub_2499B37B8(id *a1, uint64_t a2)
{
  id v2 = *a1;
  uint64_t v3 = (id *)(a2 + 16);
  id v4 = *a1;
  objc_storeStrong(v3, v2);
  sub_2499B34B0();
}

void InstrumentFont.design.setter(id obj)
{
  objc_storeStrong((id *)(v1 + 16), obj);
  sub_2499B34B0();
}

uint64_t (*InstrumentFont.design.modify(void *a1))()
{
  *a1 = v1;
  return sub_2499B7B18;
}

double InstrumentFont.weight.getter()
{
  return *(double *)(v0 + 24);
}

uint64_t InstrumentFont.weight.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
  return sub_2499B34B0();
}

uint64_t (*InstrumentFont.weight.modify(void *a1))()
{
  *a1 = v1;
  return sub_2499B7B18;
}

uint64_t InstrumentFont.italic.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t InstrumentFont.italic.setter(char a1)
{
  *(unsigned char *)(v1 + 32) = a1;
  return sub_2499B34B0();
}

uint64_t (*InstrumentFont.italic.modify(void *a1))()
{
  *a1 = v1;
  return sub_2499B7B18;
}

double InstrumentFont.ascent.getter()
{
  uint64_t v0 = (const __CTFont *)InstrumentFont.cpFont.getter();
  double Ascent = CTFontGetAscent(v0);

  return Ascent;
}

double InstrumentFont.height.getter()
{
  uint64_t v0 = (const __CTFont *)InstrumentFont.cpFont.getter();
  double Ascent = CTFontGetAscent(v0);
  double Descent = CTFontGetDescent(v0);

  return ceil(Ascent + Descent);
}

uint64_t InstrumentFont.stable.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t InstrumentFont.stable.setter(char a1)
{
  *(unsigned char *)(v1 + 33) = a1;
  return sub_2499B34B0();
}

uint64_t (*InstrumentFont.stable.modify(void *a1))()
{
  *a1 = v1;
  return sub_2499B7B18;
}

uint64_t InstrumentFont.advance(for:)()
{
  id v0 = InstrumentFont.cpFont.getter();
  uint64_t v1 = sub_249AA8C84();

  if (*(void *)(v1 + 16)) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_249AEDC58();
  __break(1u);
  return result;
}

uint64_t InstrumentFont.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 40) = a1;
  *(void *)(v2 + 48) = a2;
  return result;
}

uint64_t (*InstrumentFont.name.modify())()
{
  return nullsub_1;
}

uint64_t InstrumentFont.makeStable()@<X0>(uint64_t a1@<X8>)
{
  char v3 = *v1;
  uint64_t v4 = *((void *)v1 + 1);
  uint64_t v5 = (void *)*((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  char v7 = v1[32];
  *(void *)(a1 + 40) = 0x322D6D6574737953;
  *(void *)(a1 + 48) = 0xE900000000000034;
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 33) = 1;
  id v8 = v5;
  return sub_2499B34B0();
}

uint64_t InstrumentFont.softNumeric()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  char v6 = *(unsigned char *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 33);
  *(void *)(a1 + 40) = 0x322D6D6574737953;
  *(void *)(a1 + 48) = 0xE900000000000034;
  *(unsigned char *)a1 = 2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 33) = v7;
  id v8 = v4;
  return sub_2499B34B0();
}

uint64_t InstrumentFont.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_249AEE348();
  sub_249AED0D8();
  id v2 = v1;
  sub_249AECF78();

  swift_bridgeObjectRelease();
  sub_249AEE378();
  sub_249AEE358();
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2499B3DA4()
{
  uint64_t result = 1701011814;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7A6953746E696F70;
      break;
    case 2:
      uint64_t result = 0x6E6769736564;
      break;
    case 3:
      uint64_t result = 0x746867696577;
      break;
    case 4:
      uint64_t result = 0x63696C617469;
      break;
    case 5:
      uint64_t result = 0x656C62617473;
      break;
    case 6:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2499B3E68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499B73C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499B3E90(uint64_t a1)
{
  unint64_t v2 = sub_2499B6C44();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499B3ECC(uint64_t a1)
{
  unint64_t v2 = sub_2499B6C44();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t InstrumentFont.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2110);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v17 = *((void *)v1 + 2);
  uint64_t v18 = v9;
  uint64_t v10 = *((void *)v1 + 3);
  LODWORD(v9) = v1[32];
  int v15 = v1[33];
  int v16 = v9;
  uint64_t v11 = *((void *)v1 + 5);
  v14[1] = *((void *)v1 + 6);
  void v14[2] = v11;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499B6C44();
  sub_249AEE468();
  LOBYTE(v19) = v8;
  char v20 = 0;
  sub_2499B6C98();
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v12 = v17;
    LOBYTE(v19) = 1;
    sub_249AEDEE8();
    uint64_t v19 = v12;
    char v20 = 2;
    type metadata accessor for SystemDesign(0);
    sub_2499B787C(&qword_2696E2128, type metadata accessor for SystemDesign);
    sub_249AEDF08();
    uint64_t v19 = v10;
    char v20 = 3;
    type metadata accessor for Weight(0);
    sub_2499B787C(&qword_2696E2130, type metadata accessor for Weight);
    sub_249AEDF08();
    LOBYTE(v19) = 4;
    sub_249AEDEC8();
    LOBYTE(v19) = 5;
    sub_249AEDEC8();
    LOBYTE(v19) = 6;
    sub_249AEDEB8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t InstrumentFont.hashValue.getter()
{
  return sub_249AEE388();
}

void InstrumentFont.init(from:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2138);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499B6C44();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v24 = 0;
    sub_2499B6CEC();
    sub_249AEDE08();
    int v9 = v23;
    LOBYTE(v23) = 1;
    uint64_t v10 = sub_249AEDDE8();
    type metadata accessor for SystemDesign(0);
    char v24 = 2;
    sub_2499B787C(&qword_2696E2148, type metadata accessor for SystemDesign);
    sub_249AEDE08();
    uint64_t v21 = v10;
    int v22 = v9;
    uint64_t v11 = v23;
    type metadata accessor for Weight(0);
    char v24 = 3;
    sub_2499B787C(&qword_2696E2150, type metadata accessor for Weight);
    id v12 = v11;
    sub_249AEDE08();
    id v13 = v23;
    LOBYTE(v23) = 4;
    LOBYTE(v9) = sub_249AEDDC8();
    LOBYTE(v23) = 5;
    int v20 = sub_249AEDDC8();
    LOBYTE(v23) = 6;
    uint64_t v14 = sub_249AEDDB8();
    uint64_t v16 = v15;
    int v19 = v9 & 1;
    v20 &= 1u;
    uint64_t v17 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v22;
    *(void *)(a2 + 8) = v21;
    *(void *)(a2 + 16) = v12;
    *(void *)(a2 + 24) = v13;
    *(unsigned char *)(a2 + 32) = v19;
    *(unsigned char *)(a2 + 33) = v20;
    *(void *)(a2 + 40) = v17;
    *(void *)(a2 + 48) = v16;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
}

void sub_2499B466C(void *a1@<X0>, uint64_t a2@<X8>)
{
}

uint64_t sub_2499B4684(void *a1)
{
  return InstrumentFont.encode(to:)(a1);
}

uint64_t sub_2499B46A0()
{
  return sub_249AEE388();
}

uint64_t sub_2499B4718()
{
  return sub_249AEE388();
}

uint64_t InstrumentFont.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void InstrumentFont.assetType.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void InstrumentFont.destination.getter(void *a1@<X8>)
{
  *a1 = 2;
}

NSFileWrapper_optional __swiftcall InstrumentFont.generateAsset(destination:)(CarPlayAssetUI::ArcPackageExporter::Destination destination)
{
  char v29 = *(unsigned char *)destination;
  char v2 = *v1;
  uint64_t v4 = *((void *)v1 + 1);
  uint64_t v3 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  unsigned __int8 v6 = v1[32];
  int v7 = v1[33];
  uint64_t v9 = *((void *)v1 + 5);
  char v8 = (UIImage *)*((void *)v1 + 6);
  id v10 = objc_allocWithZone(MEMORY[0x263F08870]);
  sub_24987BE44();
  uint64_t v11 = (void *)sub_249AECE78();
  id v12 = objc_msgSend(v10, sel_initDirectoryWithFileWrappers_, v11);

  swift_bridgeObjectRetain();
  id v13 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setPreferredFilename_, v13);

  char v25 = v7;
  unsigned __int8 v26 = v6;
  uint64_t v30 = v3;
  uint64_t v31 = v9;
  char v28 = v2;
  uint64_t v27 = v4;
  LOBYTE(v40) = v2;
  *(void *)&long long v41 = v4;
  *((void *)&v41 + 1) = v3;
  uint64_t v42 = v5;
  if (v7 == 1)
  {
    LOBYTE(v43) = v6;
    BYTE1(v43) = 1;
    uint64_t v44 = v9;
    uint64_t v45 = v8;
    sub_2499B4AF8((uint64_t)&v32);
    uint64_t v14 = v32;
    long long v15 = v33;
    char v16 = v34;
    char v17 = v35;
    uint64_t v18 = v36;
    char v19 = v37;
    int v20 = v38;
  }
  else
  {
    LOWORD(v43) = v6;
    uint64_t v44 = v9;
    uint64_t v45 = v8;
    id v21 = InstrumentFont.cpFont.getter();
    sub_249AA9700((uint64_t)&v40);
    uint64_t v14 = v40;
    long long v24 = v41;
    char v16 = v42;
    char v17 = BYTE1(v42);
    uint64_t v18 = v43;
    char v19 = v44;
    int v20 = v45;

    long long v15 = v24;
  }
  uint64_t v32 = v14;
  long long v33 = v15;
  char v34 = v16;
  char v35 = v17;
  uint64_t v36 = v18;
  char v37 = v19;
  LOBYTE(v40) = v28;
  *(void *)&long long v41 = v27;
  *((void *)&v41 + 1) = v30;
  uint64_t v42 = v5;
  LOBYTE(v43) = v26;
  BYTE1(v43) = v25;
  uint64_t v44 = v31;
  uint64_t v45 = v8;
  LOBYTE(v39) = v29;
  sub_2499B4EA4((uint64_t)v12, (unsigned __int8 *)&v39, (uint64_t)&v32, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v23 = (objc_class *)v12;
  result.value.super.isCGFloat a = v23;
  result.is_nil = v22;
  return result;
}

void sub_2499B4AF8(uint64_t a1@<X8>)
{
  double v4 = *(double *)(v1 + 8);
  double v5 = *(double *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  char v8 = *(unsigned char *)(v1 + 33);
  uint64_t v9 = *(void *)(v1 + 40);
  id v10 = *(void **)(v1 + 48);
  LOBYTE(v44) = *(unsigned char *)v1;
  double v45 = v4;
  double v46 = v5;
  uint64_t v47 = v6;
  LOBYTE(v48) = v7;
  BYTE1(v48) = v8;
  uint64_t v49 = v9;
  id v50 = v10;
  id v11 = InstrumentFont.cpFont.getter();
  id v12 = (const __CTFontDescriptor *)objc_msgSend(v11, sel_fontDescriptor);
  CFNumberRef v13 = (const __CFNumber *)sub_249AED638();
  CFNumberRef v14 = (const __CFNumber *)sub_249AED638();
  CTFontDescriptorRef CopyWithFeature = CTFontDescriptorCreateCopyWithFeature(v12, v13, v14);

  char v16 = CopyWithFeature;
  objc_msgSend(v11, sel_pointSize);
  id v18 = objc_msgSend(self, sel_fontWithDescriptor_size_, v16, v17);

  if (!v18) {
    goto LABEL_11;
  }
  sub_249AA9700((uint64_t)&v44);
  if (v2)
  {

    return;
  }
  uint64_t v19 = v44;
  double v20 = v45;
  double v21 = v46;
  uint64_t v22 = v48;

  sub_249AA9700((uint64_t)&v44);
  if (v20 != v45) {
    goto LABEL_11;
  }
  if (v21 != v46) {
    goto LABEL_11;
  }
  double v43 = v21;
  double v61 = v20;
  if (!*(void *)(v19 + 16)) {
    goto LABEL_11;
  }
  uint64_t v23 = v44;
  id v42 = v50;
  uint64_t v24 = sub_2498EF01C(49, 0xE100000000000000);
  if ((v25 & 1) == 0) {
    goto LABEL_11;
  }
  if (!*(void *)(v23 + 16)) {
    goto LABEL_11;
  }
  uint64_t v26 = *(void *)(v19 + 56) + 88 * v24;
  uint64_t v27 = *(void *)(v26 + 32);
  uint64_t v28 = *(void *)(v26 + 40);
  uint64_t v29 = *(void *)(v26 + 48);
  uint64_t v30 = *(void *)(v26 + 56);
  uint64_t v31 = *(void *)(v26 + 64);
  uint64_t v32 = *(void *)(v26 + 72);
  char v33 = *(unsigned char *)(v26 + 80);
  uint64_t v34 = sub_2498EF01C(49, 0xE100000000000000);
  if ((v35 & 1) == 0)
  {
LABEL_11:
    while (1)
    {
      sub_249AEDC58();
      __break(1u);
    }
  }
  uint64_t v36 = *(void *)(v23 + 56) + 88 * v34;
  long long v41 = *(_OWORD *)v36;
  uint64_t v37 = *(void *)(v36 + 16);
  uint64_t v38 = *(void *)(v36 + 24);
  swift_bridgeObjectRelease();
  long long v51 = v41;
  uint64_t v52 = v37;
  uint64_t v53 = v38;
  uint64_t v54 = v27;
  uint64_t v55 = v28;
  uint64_t v56 = v29;
  uint64_t v57 = v30;
  uint64_t v58 = v31;
  uint64_t v59 = v32;
  char v60 = v33;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v44 = v23;
  sub_249883770((uint64_t)&v51, 49, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
  uint64_t v40 = v44;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a1 = v40;
  *(double *)(a1 + 8) = v61;
  *(double *)(a1 + 16) = v43;
  *(_WORD *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = v22;
  *(unsigned char *)(a1 + 40) = 1;
  *(void *)(a1 + 48) = v42;
}

uint64_t sub_2499B4EA4(uint64_t a1, unsigned __int8 *a2, uint64_t a3, UIImage *a4)
{
  int v7 = *a2;
  uint64_t v9 = *(void *)(v4 + 40);
  uint64_t v8 = *(void *)(v4 + 48);
  uint64_t result = sub_2499B2470(*a2);
  if (!v5)
  {
    uint64_t v12 = result;
    unint64_t v13 = v11;
    if (v7 == 2) {
      uint64_t v14 = 0x614474756F79614CLL;
    }
    else {
      uint64_t v14 = 0x6A2E74756F79616CLL;
    }
    if (v7 == 2) {
      uint64_t v15 = 0xEE0061756C2E6174;
    }
    else {
      uint64_t v15 = 0xEB000000006E6F73;
    }
    NSFileWrapper.addRegularFile(withContents:fileName:)(result, v11, v14, v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249882104(v12, v13);
    char v16 = UIImagePNGRepresentation(a4);
    if (v16)
    {
      double v17 = v16;
      uint64_t v18 = sub_249AEB798();
      unint64_t v20 = v19;

      swift_bridgeObjectRetain();
      sub_249AED1E8();
      NSFileWrapper.addRegularFile(withContents:fileName:)(v18, v20, v9, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_249882104(v18, v20);
    }
    else
    {
      sub_2499B76C8();
      swift_allocError();
      *double v21 = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_2499B5060()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_2499B5090(void *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_2499B50A0()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1DA0 = 0x322D6D6574737953;
  unk_2696E1DA8 = 0xE900000000000034;
  byte_2696E1D78 = 2;
  qword_2696E1D80 = 170;
  unk_2696E1D88 = v1;
  qword_2696E1D90 = v0;
  word_2696E1D98 = 256;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.title1.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6A0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1D80;
  uint64_t v3 = (void *)unk_2696E1D88;
  uint64_t v4 = qword_2696E1D90;
  char v5 = word_2696E1D98;
  char v6 = HIBYTE(word_2696E1D98);
  uint64_t v7 = qword_2696E1DA0;
  uint64_t v8 = unk_2696E1DA8;
  *(unsigned char *)a1 = byte_2696E1D78;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B51BC()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1DD8 = 0x322D6D6574737953;
  unk_2696E1DE0 = 0xE900000000000034;
  byte_2696E1DB0 = 0;
  qword_2696E1DB8 = 90;
  unk_2696E1DC0 = v1;
  qword_2696E1DC8 = v0;
  word_2696E1DD0 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.title3.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6A8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1DB8;
  uint64_t v3 = (void *)unk_2696E1DC0;
  uint64_t v4 = qword_2696E1DC8;
  char v5 = word_2696E1DD0;
  char v6 = HIBYTE(word_2696E1DD0);
  uint64_t v7 = qword_2696E1DD8;
  uint64_t v8 = unk_2696E1DE0;
  *(unsigned char *)a1 = byte_2696E1DB0;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B52D0()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1E10 = 0x322D6D6574737953;
  unk_2696E1E18 = 0xE900000000000034;
  byte_2696E1DE8 = 2;
  qword_2696E1DF0 = 200;
  unk_2696E1DF8 = v1;
  qword_2696E1E00 = v0;
  word_2696E1E08 = 256;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.largeModularTitle.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6B0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1DF0;
  uint64_t v3 = (void *)unk_2696E1DF8;
  uint64_t v4 = qword_2696E1E00;
  char v5 = word_2696E1E08;
  char v6 = HIBYTE(word_2696E1E08);
  uint64_t v7 = qword_2696E1E10;
  uint64_t v8 = unk_2696E1E18;
  *(unsigned char *)a1 = byte_2696E1DE8;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B53EC()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1E48 = 0x322D6D6574737953;
  unk_2696E1E50 = 0xE900000000000034;
  byte_2696E1E20 = 0;
  qword_2696E1E28 = 36;
  unk_2696E1E30 = v1;
  qword_2696E1E38 = v0;
  word_2696E1E40 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.body.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6B8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1E28;
  uint64_t v3 = (void *)unk_2696E1E30;
  uint64_t v4 = qword_2696E1E38;
  char v5 = word_2696E1E40;
  char v6 = HIBYTE(word_2696E1E40);
  uint64_t v7 = qword_2696E1E48;
  uint64_t v8 = unk_2696E1E50;
  *(unsigned char *)a1 = byte_2696E1E20;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5500()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1E80 = 0x322D6D6574737953;
  unk_2696E1E88 = 0xE900000000000034;
  byte_2696E1E58 = 0;
  qword_2696E1E60 = 30;
  unk_2696E1E68 = v1;
  qword_2696E1E70 = v0;
  word_2696E1E78 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.subheadline.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6C0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1E60;
  uint64_t v3 = (void *)unk_2696E1E68;
  uint64_t v4 = qword_2696E1E70;
  char v5 = word_2696E1E78;
  char v6 = HIBYTE(word_2696E1E78);
  uint64_t v7 = qword_2696E1E80;
  uint64_t v8 = unk_2696E1E88;
  *(unsigned char *)a1 = byte_2696E1E58;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5614()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1EB8 = 0x322D6D6574737953;
  unk_2696E1EC0 = 0xE900000000000034;
  byte_2696E1E90 = 0;
  qword_2696E1E98 = 32;
  unk_2696E1EA0 = v1;
  qword_2696E1EA8 = v0;
  word_2696E1EB0 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.system32.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6C8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1E98;
  uint64_t v3 = (void *)unk_2696E1EA0;
  uint64_t v4 = qword_2696E1EA8;
  char v5 = word_2696E1EB0;
  char v6 = HIBYTE(word_2696E1EB0);
  uint64_t v7 = qword_2696E1EB8;
  uint64_t v8 = unk_2696E1EC0;
  *(unsigned char *)a1 = byte_2696E1E90;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5728()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1EF0 = 0x322D6D6574737953;
  unk_2696E1EF8 = 0xE900000000000034;
  byte_2696E1EC8 = 0;
  qword_2696E1ED0 = 170;
  unk_2696E1ED8 = v1;
  qword_2696E1EE0 = v0;
  word_2696E1EE8 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.largeRadialGaugeHeadlineFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6D0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1ED0;
  uint64_t v3 = (void *)unk_2696E1ED8;
  uint64_t v4 = qword_2696E1EE0;
  char v5 = word_2696E1EE8;
  char v6 = HIBYTE(word_2696E1EE8);
  uint64_t v7 = qword_2696E1EF0;
  uint64_t v8 = unk_2696E1EF8;
  *(unsigned char *)a1 = byte_2696E1EC8;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B583C()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1F28 = 0x322D6D6574737953;
  unk_2696E1F30 = 0xE900000000000034;
  byte_2696E1F00 = 0;
  qword_2696E1F08 = 36;
  unk_2696E1F10 = v1;
  qword_2696E1F18 = v0;
  word_2696E1F20 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.largeRadialGaugeSubheadlineFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6D8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1F08;
  uint64_t v3 = (void *)unk_2696E1F10;
  uint64_t v4 = qword_2696E1F18;
  char v5 = word_2696E1F20;
  char v6 = HIBYTE(word_2696E1F20);
  uint64_t v7 = qword_2696E1F28;
  uint64_t v8 = unk_2696E1F30;
  *(unsigned char *)a1 = byte_2696E1F00;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5950()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1F60 = 0x322D6D6574737953;
  unk_2696E1F68 = 0xE900000000000034;
  byte_2696E1F38 = 0;
  qword_2696E1F40 = 36;
  unk_2696E1F48 = v1;
  qword_2696E1F50 = v0;
  word_2696E1F58 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.largeRadialGaugeFooterFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6E0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1F40;
  uint64_t v3 = (void *)unk_2696E1F48;
  uint64_t v4 = qword_2696E1F50;
  char v5 = word_2696E1F58;
  char v6 = HIBYTE(word_2696E1F58);
  uint64_t v7 = qword_2696E1F60;
  uint64_t v8 = unk_2696E1F68;
  *(unsigned char *)a1 = byte_2696E1F38;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5A64()
{
  uint64_t v0 = (void *)*MEMORY[0x263F81778];
  uint64_t v1 = *MEMORY[0x263F81838];
  qword_2696E1F98 = 0x322D6D6574737953;
  unk_2696E1FA0 = 0xE900000000000034;
  byte_2696E1F70 = 0;
  qword_2696E1F78 = 30;
  unk_2696E1F80 = v0;
  qword_2696E1F88 = v1;
  word_2696E1F90 = 0;
  id v2 = v0;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.largeRadialTextFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6E8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1F78;
  uint64_t v3 = (void *)unk_2696E1F80;
  uint64_t v4 = qword_2696E1F88;
  char v5 = word_2696E1F90;
  char v6 = HIBYTE(word_2696E1F90);
  uint64_t v7 = qword_2696E1F98;
  uint64_t v8 = unk_2696E1FA0;
  *(unsigned char *)a1 = byte_2696E1F70;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5B78()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E1FD0 = 0x322D6D6574737953;
  unk_2696E1FD8 = 0xE900000000000034;
  byte_2696E1FA8 = 0;
  qword_2696E1FB0 = 36;
  unk_2696E1FB8 = v1;
  qword_2696E1FC0 = v0;
  word_2696E1FC8 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.horizontalGaugeRegularFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6F0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1FB0;
  uint64_t v3 = (void *)unk_2696E1FB8;
  uint64_t v4 = qword_2696E1FC0;
  char v5 = word_2696E1FC8;
  char v6 = HIBYTE(word_2696E1FC8);
  uint64_t v7 = qword_2696E1FD0;
  uint64_t v8 = unk_2696E1FD8;
  *(unsigned char *)a1 = byte_2696E1FA8;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5C8C()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E2008 = 0x322D6D6574737953;
  unk_2696E2010 = 0xE900000000000034;
  byte_2696E1FE0 = 0;
  qword_2696E1FE8 = 90;
  unk_2696E1FF0 = v1;
  qword_2696E1FF8 = v0;
  word_2696E2000 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.horizontalGaugeLargeFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD6F8 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E1FE8;
  uint64_t v3 = (void *)unk_2696E1FF0;
  uint64_t v4 = qword_2696E1FF8;
  char v5 = word_2696E2000;
  char v6 = HIBYTE(word_2696E2000);
  uint64_t v7 = qword_2696E2008;
  uint64_t v8 = unk_2696E2010;
  *(unsigned char *)a1 = byte_2696E1FE0;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5DA0()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E2040 = 0x322D6D6574737953;
  unk_2696E2048 = 0xE900000000000034;
  byte_2696E2018 = 0;
  qword_2696E2020 = 30;
  unk_2696E2028 = v1;
  qword_2696E2030 = v0;
  word_2696E2038 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.horizontalGaugeCruiseControlFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD700 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E2020;
  uint64_t v3 = (void *)unk_2696E2028;
  uint64_t v4 = qword_2696E2030;
  char v5 = word_2696E2038;
  char v6 = HIBYTE(word_2696E2038);
  uint64_t v7 = qword_2696E2040;
  uint64_t v8 = unk_2696E2048;
  *(unsigned char *)a1 = byte_2696E2018;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5EB4()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E2078 = 0x322D6D6574737953;
  unk_2696E2080 = 0xE900000000000034;
  byte_2696E2050 = 0;
  qword_2696E2058 = 36;
  unk_2696E2060 = v1;
  qword_2696E2068 = v0;
  word_2696E2070 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.modularGaugeFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD708 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E2058;
  uint64_t v3 = (void *)unk_2696E2060;
  uint64_t v4 = qword_2696E2068;
  char v5 = word_2696E2070;
  char v6 = HIBYTE(word_2696E2070);
  uint64_t v7 = qword_2696E2078;
  uint64_t v8 = unk_2696E2080;
  *(unsigned char *)a1 = byte_2696E2050;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B5FC8()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E20B0 = 0x322D6D6574737953;
  unk_2696E20B8 = 0xE900000000000034;
  byte_2696E2088 = 0;
  qword_2696E2090 = 220;
  unk_2696E2098 = v1;
  qword_2696E20A0 = v0;
  word_2696E20A8 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.modularGaugeSpeedFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD710 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E2090;
  uint64_t v3 = (void *)unk_2696E2098;
  uint64_t v4 = qword_2696E20A0;
  char v5 = word_2696E20A8;
  char v6 = HIBYTE(word_2696E20A8);
  uint64_t v7 = qword_2696E20B0;
  uint64_t v8 = unk_2696E20B8;
  *(unsigned char *)a1 = byte_2696E2088;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B60DC()
{
  uint64_t v0 = *MEMORY[0x263F81828];
  uint64_t v1 = (void *)*MEMORY[0x263F81778];
  qword_2696E20E8 = 0x322D6D6574737953;
  unk_2696E20F0 = 0xE900000000000034;
  byte_2696E20C0 = 0;
  qword_2696E20C8 = 46;
  unk_2696E20D0 = v1;
  qword_2696E20D8 = v0;
  word_2696E20E0 = 0;
  id v2 = v1;
  return sub_2499B34B0();
}

uint64_t static InstrumentFont.digiLinearGearIndicatorFont.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_2696DD718 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_2696E20C8;
  uint64_t v3 = (void *)unk_2696E20D0;
  uint64_t v4 = qword_2696E20D8;
  char v5 = word_2696E20E0;
  char v6 = HIBYTE(word_2696E20E0);
  uint64_t v7 = qword_2696E20E8;
  uint64_t v8 = unk_2696E20F0;
  *(unsigned char *)a1 = byte_2696E20C0;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B61F0(long long *a1)
{
  uint64_t v4 = sub_249AED118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = a1[5];
  long long v26 = a1[4];
  long long v27 = v8;
  long long v28 = a1[6];
  uint64_t v29 = *((void *)a1 + 14);
  long long v9 = a1[1];
  long long v22 = *a1;
  long long v23 = v9;
  long long v10 = a1[3];
  long long v24 = a1[2];
  long long v25 = v10;
  swift_beginAccess();
  uint64_t v11 = *(void *)(v1 + 16);
  uint64_t v12 = type metadata accessor for _LuaEncoder();
  unint64_t v13 = (void *)swift_allocObject();
  v13[4] = 0;
  v13[2] = MEMORY[0x263F8EE78];
  v13[3] = v11;
  v13[5] = 0;
  swift_bridgeObjectRetain();
  v21[3] = v12;
  v21[4] = sub_2499B787C((unint64_t *)&qword_2696E16F8, (void (*)(uint64_t))type metadata accessor for _LuaEncoder);
  v21[0] = v13;
  swift_retain();
  ArcPackage.encode(to:)(v21);
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v21);
    return v12;
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v21);
  if (v13[4])
  {
    uint64_t v14 = v13[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v30 = v4;
    uint64_t v16 = v5;
    double v17 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    swift_unknownObjectRetain();
    v17(ObjectType, v14);
    uint64_t v5 = v16;
    uint64_t v4 = v30;
    swift_unknownObjectRelease();
  }
  sub_249AED108();
  uint64_t v12 = sub_249AED0E8();
  unint64_t v19 = v18;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v19 >> 60 != 15)
  {
    swift_release();
    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_2499B6484(uint64_t a1)
{
  uint64_t v4 = sub_249AED118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = type metadata accessor for _LuaEncoder();
  long long v10 = (void *)swift_allocObject();
  v10[4] = 0;
  v10[2] = MEMORY[0x263F8EE78];
  v10[3] = v8;
  v10[5] = 0;
  swift_bridgeObjectRetain();
  void v18[3] = v9;
  v18[4] = sub_2499B787C((unint64_t *)&qword_2696E16F8, (void (*)(uint64_t))type metadata accessor for _LuaEncoder);
  v18[0] = v10;
  swift_retain();
  sub_249AAA6F8(v18);
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
    return a1;
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
  if (v10[4])
  {
    uint64_t v11 = v10[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v19 = v4;
    uint64_t v13 = v5;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    swift_unknownObjectRetain();
    v14(ObjectType, v11);
    uint64_t v5 = v13;
    uint64_t v4 = v19;
    swift_unknownObjectRelease();
  }
  sub_249AED108();
  a1 = sub_249AED0E8();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v16 >> 60 != 15)
  {
    swift_release();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_2499B66EC(uint64_t a1)
{
  uint64_t v4 = sub_249AED118();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = type metadata accessor for _LuaEncoder();
  long long v10 = (void *)swift_allocObject();
  v10[4] = 0;
  v10[2] = MEMORY[0x263F8EE78];
  v10[3] = v8;
  v10[5] = 0;
  swift_bridgeObjectRetain();
  void v18[3] = v9;
  v18[4] = sub_2499B787C((unint64_t *)&qword_2696E16F8, (void (*)(uint64_t))type metadata accessor for _LuaEncoder);
  v18[0] = v10;
  sub_2499B7940();
  swift_retain();
  sub_249AECEF8();
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
    return a1;
  }
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
  if (v10[4])
  {
    uint64_t v11 = v10[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v19 = v4;
    uint64_t v13 = v5;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    swift_unknownObjectRetain();
    v14(ObjectType, v11);
    uint64_t v5 = v13;
    uint64_t v4 = v19;
    swift_unknownObjectRelease();
  }
  sub_249AED108();
  a1 = sub_249AED0E8();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v16 >> 60 != 15)
  {
    swift_release();
    return a1;
  }
  __break(1u);
  return result;
}

uint64_t _s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, uint64_t a2)
{
  int v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  double v4 = *((double *)a1 + 3);
  int v33 = a1[32];
  int v5 = a1[33];
  uint64_t v7 = *((void *)a1 + 5);
  uint64_t v6 = *((void *)a1 + 6);
  uint64_t v8 = *(void *)(a2 + 8);
  double v9 = *(double *)(a2 + 24);
  int v31 = *(unsigned __int8 *)(a2 + 33);
  int v32 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v10 = 0x636170736F6E6F6DLL;
  unint64_t v11 = 0xEF74696769446465;
  uint64_t v12 = *(void *)(a2 + 48);
  uint64_t v30 = *(void *)(a2 + 40);
  if (v2 != 1)
  {
    uint64_t v10 = 0x656D754E74666F73;
    unint64_t v11 = 0xEB00000000636972;
  }
  if (*a1) {
    uint64_t v13 = v10;
  }
  else {
    uint64_t v13 = 0x6D6574737973;
  }
  if (v2) {
    unint64_t v14 = v11;
  }
  else {
    unint64_t v14 = 0xE600000000000000;
  }
  uint64_t v15 = 0x636170736F6E6F6DLL;
  unint64_t v16 = 0xEF74696769446465;
  if (*(unsigned char *)a2 != 1)
  {
    uint64_t v15 = 0x656D754E74666F73;
    unint64_t v16 = 0xEB00000000636972;
  }
  if (*(unsigned char *)a2) {
    uint64_t v17 = v15;
  }
  else {
    uint64_t v17 = 0x6D6574737973;
  }
  if (*(unsigned char *)a2) {
    unint64_t v18 = v16;
  }
  else {
    unint64_t v18 = 0xE600000000000000;
  }
  if (v13 == v17 && v14 == v18)
  {
    swift_bridgeObjectRelease_n();
    if (v3 != v8) {
      return 0;
    }
  }
  else
  {
    uint64_t v20 = *(void *)(a2 + 48);
    int v21 = v5;
    uint64_t v22 = v6;
    uint64_t v23 = v7;
    char v24 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v24 & 1) == 0) {
      return result;
    }
    uint64_t v7 = v23;
    uint64_t v6 = v22;
    int v5 = v21;
    uint64_t v12 = v20;
    if (v3 != v8) {
      return result;
    }
  }
  uint64_t v25 = sub_249AED0D8();
  uint64_t v27 = v26;
  if (v25 == sub_249AED0D8() && v27 == v28)
  {
    swift_bridgeObjectRelease_n();
    uint64_t result = 0;
  }
  else
  {
    char v29 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v29 & 1) == 0) {
      return result;
    }
  }
  if (v4 == v9 && ((v33 ^ v32) & 1) == 0 && ((v5 ^ v31) & 1) == 0)
  {
    if (v7 == v30 && v6 == v12)
    {
      return 1;
    }
    else
    {
      return sub_249AEE0D8();
    }
  }
  return result;
}

unint64_t sub_2499B6C44()
{
  unint64_t result = qword_2696E2118;
  if (!qword_2696E2118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2118);
  }
  return result;
}

unint64_t sub_2499B6C98()
{
  unint64_t result = qword_2696E2120;
  if (!qword_2696E2120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2120);
  }
  return result;
}

unint64_t sub_2499B6CEC()
{
  unint64_t result = qword_2696E2140;
  if (!qword_2696E2140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2140);
  }
  return result;
}

unint64_t sub_2499B6D44()
{
  unint64_t result = qword_2696E2158;
  if (!qword_2696E2158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2158);
  }
  return result;
}

unint64_t sub_2499B6D9C()
{
  unint64_t result = qword_2696E2160;
  if (!qword_2696E2160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2160);
  }
  return result;
}

unsigned char *sub_2499B6DF0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_2499B6DFC(unsigned char *a1, unsigned char *a2)
{
  *a2 = *a1;
  return sub_2499B34B0();
}

uint64_t sub_2499B6E28@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 8);
  return result;
}

uint64_t sub_2499B6E34(void *a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *a1;
  return sub_2499B34B0();
}

id sub_2499B6E60@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  int v2 = *(void **)(a1 + 16);
  *a2 = v2;
  return v2;
}

double sub_2499B6E70@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = *(double *)(a1 + 24);
  *a2 = result;
  return result;
}

uint64_t sub_2499B6E7C(void *a1, uint64_t a2)
{
  *(void *)(a2 + 24) = *a1;
  return sub_2499B34B0();
}

uint64_t sub_2499B6EA8@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 32);
  return result;
}

uint64_t sub_2499B6EB4(unsigned char *a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 32) = *a1;
  return sub_2499B34B0();
}

uint64_t sub_2499B6EE0@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(result + 33);
  return result;
}

uint64_t sub_2499B6EEC(unsigned char *a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 33) = *a1;
  return sub_2499B34B0();
}

uint64_t destroy for InstrumentFont(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for InstrumentFont(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for InstrumentFont(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for InstrumentFont(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  id v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for InstrumentFont()
{
  return &type metadata for InstrumentFont;
}

unsigned char *storeEnumTagSinglePayload for InstrumentFont.Face(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499B717CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstrumentFont.Face()
{
  return &type metadata for InstrumentFont.Face;
}

unsigned char *storeEnumTagSinglePayload for InstrumentFont.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *double result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499B7280);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstrumentFont.CodingKeys()
{
  return &type metadata for InstrumentFont.CodingKeys;
}

unint64_t sub_2499B72BC()
{
  unint64_t result = qword_2696E2168;
  if (!qword_2696E2168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2168);
  }
  return result;
}

unint64_t sub_2499B7314()
{
  unint64_t result = qword_2696E2170;
  if (!qword_2696E2170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2170);
  }
  return result;
}

unint64_t sub_2499B736C()
{
  unint64_t result = qword_2696E2178;
  if (!qword_2696E2178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2178);
  }
  return result;
}

uint64_t sub_2499B73C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701011814 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A6953746E696F70 && a2 == 0xE900000000000065 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6769736564 && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x63696C617469 && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656C62617473 && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

unint64_t sub_2499B7674()
{
  unint64_t result = qword_2696E2180;
  if (!qword_2696E2180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2180);
  }
  return result;
}

unint64_t sub_2499B76C8()
{
  unint64_t result = qword_2696E2188;
  if (!qword_2696E2188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2188);
  }
  return result;
}

unint64_t sub_2499B771C()
{
  unint64_t result = qword_2696E2190;
  if (!qword_2696E2190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2190);
  }
  return result;
}

uint64_t sub_2499B7770()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 57, 7);
}

uint64_t sub_2499B77B0(uint64_t a1)
{
  return a1;
}

unint64_t sub_2499B77E8()
{
  unint64_t result = qword_2696E21B0;
  if (!qword_2696E21B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E21A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E21B0);
  }
  return result;
}

uint64_t sub_2499B7844(uint64_t a1)
{
  return a1;
}

uint64_t sub_2499B787C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499B78C4()
{
  unint64_t result = qword_2696E21C0;
  if (!qword_2696E21C0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E21B8);
    sub_2499B7940();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E21C0);
  }
  return result;
}

unint64_t sub_2499B7940()
{
  unint64_t result = qword_2696E21C8;
  if (!qword_2696E21C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E21C8);
  }
  return result;
}

unint64_t sub_2499B7994()
{
  unint64_t result = qword_2696E21D0;
  if (!qword_2696E21D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E21D0);
  }
  return result;
}

uint64_t sub_2499B79E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_2499B7A40(uint64_t a1)
{
  return a1;
}

uint64_t sub_2499B7AAC(uint64_t a1)
{
  return a1;
}

uint64_t InstrumentCircularStyle.init(tint:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void InstrumentCircularStyle.init()(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t InstrumentCircularStyle.init(tint:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21D8);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_249AF0A70;
  *(void *)(v4 + 32) = a1;
  uint64_t v6 = v4;
  sub_249AED448();
  uint64_t result = MEMORY[0x24C5ADD20](v6);
  *a2 = result;
  return result;
}

uint64_t InstrumentCircularStyle.makeBody(configuration:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_249AEC398();
  __n128 v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  (*(void (**)(char *, uint64_t, __n128))(v10 + 16))(v8, a1, v6);
  swift_bridgeObjectRetain();
  return sub_2499B7C88((uint64_t)v8, v9, a2);
}

uint64_t sub_2499B7C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v55 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0450);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v52 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0448);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v53 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2208);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2210);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  unint64_t v18 = (char *)v42 - v17;
  *a3 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE0);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = type metadata accessor for CircularInstrument();
  uint64_t v20 = (char *)a3 + *(int *)(v19 + 20);
  uint64_t v21 = sub_249AEC398();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v22 + 16);
  long long v51 = v20;
  uint64_t v54 = a1;
  uint64_t v56 = v21;
  v23(v20, a1);
  *(uint64_t *)((char *)a3 + *(int *)(v19 + 24)) = v55;
  sub_2499B8F9C(v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v54, v56);
    return sub_2498D60E8((uint64_t)v11, &qword_2696E2208);
  }
  else
  {
    uint64_t v50 = v12;
    uint64_t v25 = *(int *)(v12 + 48);
    uint64_t v26 = &v18[v25];
    uint64_t v27 = &v11[v25];
    uint64_t v28 = sub_249AEC308();
    uint64_t v29 = *(void *)(v28 - 8);
    uint64_t v30 = v29;
    v42[0] = *(void *)(v29 + 32);
    v42[1] = v29 + 32;
    ((void (*)(char *, char *, uint64_t))v42[0])(v18, v11, v28);
    uint64_t v31 = sub_249AEC2F8();
    uint64_t v32 = *(void *)(v31 - 8);
    int v33 = v18;
    double v45 = v26;
    double v46 = v18;
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    uint64_t v48 = v32 + 32;
    uint64_t v49 = v34;
    v34(v26, v27, v31);
    uint64_t v35 = *(int *)(v50 + 48);
    uint64_t v43 = v22;
    uint64_t v36 = &v15[v35];
    uint64_t v37 = v30;
    uint64_t v55 = v30;
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
    v47(v15, v33, v28);
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
    v44(v36, v26, v31);
    uint64_t v38 = v53;
    ((void (*)(char *, char *, uint64_t))v42[0])(v53, v15, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v38, 0, 1, v28);
    sub_249AEC358();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v31);
    uint64_t v39 = &v15[*(int *)(v50 + 48)];
    uint64_t v40 = (uint64_t)v46;
    v47(v15, v46, v28);
    v44(v39, v45, v31);
    long long v41 = v52;
    v49(v52, v39, v31);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v41, 0, 1, v31);
    sub_249AEC338();
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v54, v56);
    sub_2498D60E8(v40, &qword_2696E2210);
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v15, v28);
  }
}

uint64_t sub_2499B81E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499B81FC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_249AEC398();
  __n128 v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  (*(void (**)(char *, uint64_t, __n128))(v10 + 16))(v8, a1, v6);
  swift_bridgeObjectRetain();
  return sub_2499B7C88((uint64_t)v8, v9, a2);
}

void *initializeBufferWithCopyOfBuffer for InstrumentCircularStyle(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for InstrumentCircularStyle(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *assignWithTake for InstrumentCircularStyle(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InstrumentCircularStyle(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for InstrumentCircularStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InstrumentCircularStyle()
{
  return &type metadata for InstrumentCircularStyle;
}

uint64_t sub_2499B8440()
{
  return sub_2499B9938(&qword_2696E21E0, (void (*)(uint64_t))type metadata accessor for CircularInstrument);
}

uint64_t type metadata accessor for CircularInstrument()
{
  uint64_t result = qword_2696E21F0;
  if (!qword_2696E21F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_2499B84D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_249AEBB08();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    unint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_249AEC398();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2499B8644(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_249AEBB08();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_249AEC398();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_bridgeObjectRelease();
}

void *sub_2499B872C(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_249AEBB08();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC398();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_2499B884C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2498D60E8((uint64_t)a1, &qword_2696E1CE0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_249AEBB08();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC398();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 24)) = *(void *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_2499B8990(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_249AEBB08();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_249AEC398();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_2499B8AB4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_2498D60E8((uint64_t)a1, &qword_2696E1CE0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CE0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_249AEBB08();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_249AEC398();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2499B8BF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499B8C0C);
}

uint64_t sub_2499B8C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21E8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_249AEC398();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_2499B8D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499B8D44);
}

uint64_t sub_2499B8D44(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21E8);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_249AEC398();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24)) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_2499B8E58()
{
  sub_2499B8F28();
  if (v0 <= 0x3F)
  {
    sub_249AEC398();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2499B8F28()
{
  if (!qword_2696E2200)
  {
    sub_249AEBB08();
    unint64_t v0 = sub_249AEBB18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E2200);
    }
  }
}

uint64_t sub_2499B8F80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499B8F9C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_249AEBB08();
  uint64_t v36 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v35 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v34 = (uint64_t)v30 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0450);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_249AEC2F8();
  uint64_t v37 = *(void *)(v9 - 8);
  uint64_t v38 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0448);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_249AEC308();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for CircularInstrument();
  sub_249AEC348();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_2498D60E8((uint64_t)v14, &qword_2696E0448);
  }
  else
  {
    int v33 = a1;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v32(v18, v14, v15);
    sub_249AEC328();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v8, 1, v38) == 1)
    {
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
      sub_2498D60E8((uint64_t)v8, &qword_2696E0450);
    }
    else
    {
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
      v30[1] = v37 + 32;
      uint64_t v31 = v11;
      v30[0] = v19;
      v19(v11, v8, v38);
      uint64_t v20 = v34;
      sub_2499A61CC(v34);
      uint64_t v21 = v35;
      uint64_t v22 = v36;
      (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, *MEMORY[0x263F18550], v2);
      sub_2499B9938(&qword_2696E2218, MEMORY[0x263F18570]);
      char v23 = sub_249AED088();
      char v24 = *(void (**)(char *, uint64_t))(v22 + 8);
      v24(v21, v2);
      v24((char *)v20, v2);
      if ((v23 & 1) == 0)
      {
        uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2210);
        uint64_t v28 = v33;
        uint64_t v29 = &v33[*(int *)(v27 + 48)];
        v32(v33, v18, v15);
        ((void (*)(char *, char *, uint64_t))v30[0])(v29, v31, v38);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v28, 0, 1, v27);
      }
      (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v38);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
    a1 = v33;
  }
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2210);
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a1, 1, 1, v25);
}

uint64_t sub_2499B94B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v36 = a1;
  uint64_t v2 = sub_249AEBB08();
  uint64_t v32 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_249AEC398();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for HalfOpenCircularInstrument();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v31 = (uint64_t)&v31 - v13;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = type metadata accessor for CircularInstrument();
  uint64_t v18 = v1 + *(int *)(v17 + 20);
  uint64_t v33 = v6;
  uint64_t v34 = v8;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v35 = v5;
  v19(v8, v18, v5);
  uint64_t v20 = v1;
  sub_2499A61CC((uint64_t)v4);
  uint64_t v21 = v32;
  uint64_t v22 = v4;
  char v23 = v4;
  uint64_t v24 = v2;
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v23, v2);
  int v26 = *MEMORY[0x263F18550];
  if (v25 != *MEMORY[0x263F18550]) {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v24);
  }
  uint64_t v27 = *(void *)(v20 + *(int *)(v17 + 24));
  uint64_t v28 = &v11[v9[7]];
  *(void *)uint64_t v28 = swift_getKeyPath();
  v28[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v11, v34, v35);
  v11[v9[5]] = v25 != v26;
  *(void *)&v11[v9[6]] = v27;
  uint64_t v29 = v31;
  sub_24994E858((uint64_t)v11, v31);
  sub_24994E858(v29, (uint64_t)v16);
  sub_24994E858((uint64_t)v16, v36);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2499B97A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AEBE28();
  *a1 = result;
  return result;
}

uint64_t sub_2499B97D4()
{
  uint64_t v0 = swift_retain();
  return MEMORY[0x24C5ACFB0](v0);
}

uint64_t sub_2499B9800()
{
  return sub_249AEBE88();
}

uint64_t sub_2499B9824(uint64_t a1)
{
  uint64_t v2 = sub_249AEBB08();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return MEMORY[0x24C5AD010](v5);
}

uint64_t sub_2499B98F0()
{
  return sub_2499B9938(&qword_2696E2220, (void (*)(uint64_t))type metadata accessor for HalfOpenCircularInstrument);
}

uint64_t sub_2499B9938(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.colorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.colorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.colorIDs.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.overlimitColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.overlimitColorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.overlimitColorIDs.modify())()
{
  return nullsub_1;
}

unint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(_:overlimitColorIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(a1 + 16)
    && (unint64_t result = sub_2498EF16C(0), (v7 & 1) != 0)
    && (!a2 || *(void *)(a2 + 16) && (unint64_t result = sub_2498EF16C(0), (v8 & 1) != 0)))
  {
    *a3 = a1;
    a3[1] = a2;
  }
  else
  {
    unint64_t result = sub_249AEDC58();
    __break(1u);
  }
  return result;
}

unint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(_:overlimitColorID:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  char v6 = *((unsigned char *)a1 + 16);
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  int v9 = *((unsigned __int8 *)a2 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 48) = v5;
  *(unsigned char *)(inited + 56) = v6;
  unint64_t v11 = sub_2498F0E5C(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00C0);
  swift_arrayDestroy();
  if (v9 == 255)
  {
    unint64_t v13 = 0;
  }
  else
  {
    uint64_t v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_249AF0A70;
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 40) = v7;
    *(void *)(v12 + 48) = v8;
    *(unsigned char *)(v12 + 56) = v9;
    unint64_t v13 = sub_2498F0E5C(v12);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  unint64_t result = Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(_:overlimitColorIDs:)(v11, v13, v16);
  uint64_t v15 = v16[1];
  *a3 = v16[0];
  a3[1] = v15;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  swift_bridgeObjectRelease();
  if (!v3) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2499B9CF8()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x734449726F6C6F63;
  }
}

uint64_t sub_2499B9D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499BC728(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499B9D60(uint64_t a1)
{
  unint64_t v2 = sub_2499BBD0C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499B9D9C(uint64_t a1)
{
  unint64_t v2 = sub_2499BBD0C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2258);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499BBD0C();
  sub_249AEE468();
  uint64_t v12 = v8;
  char v11 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  sub_24994507C((unint64_t *)&qword_2696E00E0, (void (*)(void))sub_24988E104);
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    sub_249AEDEA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.hashValue.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_249AEE338();
  sub_24988A2D4((uint64_t)v4, v2);
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24988A2D4((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2268);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499BBD0C();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    unint64_t v13 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
    char v14 = 0;
    sub_24994507C((unint64_t *)&qword_2696E00F8, (void (*)(void))sub_24988E268);
    sub_249AEDE08();
    uint64_t v10 = v15;
    char v14 = 1;
    swift_bridgeObjectRetain();
    sub_249AEDDA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v12 = v13;
    *unint64_t v13 = v10;
    v12[1] = v11;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2499BA2A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(from:)(a1, a2);
}

uint64_t sub_2499BA2B8(void *a1)
{
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.encode(to:)(a1);
}

uint64_t sub_2499BA2D0()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_249AEE338();
  sub_24988A2D4((uint64_t)v4, v2);
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24988A2D4((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t sub_2499BA358(uint64_t a1)
{
  uint64_t v3 = v1[1];
  sub_24988A2D4(a1, *v1);
  if (!v3) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2499BA3DC()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  sub_249AEE338();
  sub_24988A2D4((uint64_t)v4, v2);
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_24988A2D4((uint64_t)v4, v1);
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t static Instrument.GaugeStyle.DigiBarColorsConfiguration.defaultProgressState.getter()
{
  return 0;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.activeColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.activeColorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarColorsConfiguration.activeColorIDs.modify())()
{
  return nullsub_1;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.trackColorIDs.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  *a1 = v2;
  a1[1] = v3;
  return sub_2498FC674(v2);
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.trackColorIDs.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_249882B2C(*(void *)(v1 + 8));
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*Instrument.GaugeStyle.DigiBarColorsConfiguration.trackColorIDs.modify())()
{
  return nullsub_1;
}

unint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.init(activeColorIDs:trackColorIDs:)@<X0>(unint64_t result@<X0>, long long *a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v3 = result;
  long long v5 = *a2;
  if (!result || *(void *)(result + 16) && (v7 = *a2, result = sub_2498EF16C(0), long long v5 = v7, (v6 & 1) != 0))
  {
    *(void *)a3 = v3;
    *(_OWORD *)(a3 + 8) = v5;
  }
  else
  {
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.init(activeColorID:trackColorID:trackOverlimitColorID:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  int v5 = *((unsigned __int8 *)a1 + 16);
  uint64_t v21 = *(void *)(a2 + 8);
  uint64_t v22 = *(void *)a2;
  int v6 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v8 = *(void *)a3;
  uint64_t v7 = *(void *)(a3 + 8);
  int v20 = *(unsigned __int8 *)(a3 + 16);
  if (v5 == 255)
  {
    unint64_t v12 = 0;
    if (v6 != 255) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t result = sub_249890C40(v8, v7, v20);
    unint64_t v17 = 0;
    unint64_t v18 = 0;
    goto LABEL_9;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = a1[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = v9;
  *(void *)(inited + 48) = v10;
  *(unsigned char *)(inited + 56) = v5;
  unint64_t v12 = sub_2498F0E5C(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00C0);
  swift_arrayDestroy();
  if (v6 == 255) {
    goto LABEL_6;
  }
LABEL_3:
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00B8);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_249AF0A70;
  *(void *)(v13 + 32) = 0;
  *(void *)(v13 + 40) = v22;
  *(void *)(v13 + 48) = v21;
  *(unsigned char *)(v13 + 56) = v6;
  unint64_t v19 = sub_2498F0E5C(v13);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  sub_249890C2C(v22, v21, v6);
  sub_249890C2C(v8, v7, v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00C0);
  swift_arrayDestroy();
  if (v20 == 255)
  {
    unint64_t v15 = 0;
  }
  else
  {
    uint64_t v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = xmmword_249AF0A70;
    *(void *)(v14 + 32) = 0;
    *(void *)(v14 + 40) = v8;
    *(void *)(v14 + 48) = v7;
    *(unsigned char *)(v14 + 56) = v20;
    unint64_t v15 = sub_2498F0E5C(v14);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(_:overlimitColorIDs:)(v19, v15, v23);
  sub_249890C40(v8, v7, v20);
  sub_249890C40(v22, v21, v6);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v17 = v23[0];
  unint64_t v18 = v23[1];
LABEL_9:
  *a4 = v12;
  a4[1] = v17;
  a4[2] = v18;
  return result;
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  if (!*v1)
  {
    sub_249AEE358();
    if (v3) {
      goto LABEL_3;
    }
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  swift_bridgeObjectRelease();
  if (!v3) {
    return sub_249AEE358();
  }
LABEL_3:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v3);
  sub_249AEE358();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_24988A2D4(a1, v5);
    swift_bridgeObjectRelease();
  }

  return sub_249882B2C(v3);
}

uint64_t sub_2499BA938()
{
  if (*v0) {
    return 0x6C6F436B63617274;
  }
  else {
    return 0x6F43657669746361;
  }
}

uint64_t sub_2499BA98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499BC818(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499BA9B4(uint64_t a1)
{
  unint64_t v2 = sub_2499BBD60();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499BA9F0(uint64_t a1)
{
  unint64_t v2 = sub_2499BBD60();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2270);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v11 = v1[2];
  uint64_t v12 = v8;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499BBD60();
  sub_249AEE468();
  uint64_t v13 = v9;
  char v15 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  sub_24994507C((unint64_t *)&qword_2696E00E0, (void (*)(void))sub_24988E104);
  sub_249AEDEA8();
  if (!v2)
  {
    uint64_t v13 = v12;
    uint64_t v14 = v11;
    char v15 = 1;
    sub_2499BBDB4();
    sub_249AEDEA8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.hashValue.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  sub_249AEE338();
  if (!v2)
  {
    sub_249AEE358();
    if (v1) {
      goto LABEL_3;
    }
LABEL_6:
    sub_249AEE358();
    return sub_249AEE388();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (!v1) {
    goto LABEL_6;
  }
LABEL_3:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v1);
  sub_249AEE358();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_24988A2D4((uint64_t)v5, v3);
    swift_bridgeObjectRelease();
  }
  sub_249882B2C(v1);
  return sub_249AEE388();
}

uint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2288);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499BBD60();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v13 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
    char v15 = 0;
    sub_24994507C((unint64_t *)&qword_2696E00F8, (void (*)(void))sub_24988E268);
    sub_249AEDDA8();
    uint64_t v9 = v14[0];
    char v15 = 1;
    sub_2499BBE08();
    swift_bridgeObjectRetain();
    sub_249AEDDA8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = v14[0];
    uint64_t v12 = v14[1];
    sub_2498FC674(v14[0]);
    sub_249882B2C(0);
    swift_bridgeObjectRetain();
    sub_2498FC674(v11);
    sub_249882B2C(v11);
    swift_bridgeObjectRelease();
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    uint64_t v13 = v11;
  }
  return sub_249882B2C(v13);
}

uint64_t sub_2499BAFC0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2499BAFD8(void *a1)
{
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.encode(to:)(a1);
}

uint64_t sub_2499BAFF4(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  if (!*v1)
  {
    sub_249AEE358();
    if (v3) {
      goto LABEL_3;
    }
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  swift_bridgeObjectRelease();
  if (!v3) {
    return sub_249AEE358();
  }
LABEL_3:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v3);
  sub_249AEE358();
  if (v5)
  {
    swift_bridgeObjectRetain();
    sub_24988A2D4(a1, v5);
    swift_bridgeObjectRelease();
  }

  return sub_249882B2C(v3);
}

uint64_t sub_2499BB110()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v3 = v0[2];
  sub_249AEE338();
  if (!v2)
  {
    sub_249AEE358();
    if (v1) {
      goto LABEL_3;
    }
LABEL_6:
    sub_249AEE358();
    return sub_249AEE388();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v2);
  swift_bridgeObjectRelease();
  if (!v1) {
    goto LABEL_6;
  }
LABEL_3:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988A2D4((uint64_t)v5, v1);
  sub_249AEE358();
  if (v3)
  {
    swift_bridgeObjectRetain();
    sub_24988A2D4((uint64_t)v5, v3);
    swift_bridgeObjectRelease();
  }
  sub_249882B2C(v1);
  return sub_249AEE388();
}

void static DefaultColorID.default.getter(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

void sub_2499BB224(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
}

uint64_t sub_2499BB230()
{
  v5[0] = 0;
  v5[1] = 0;
  char v6 = 0;
  long long v3 = xmmword_249B000C0;
  char v4 = 0;
  v1[0] = 0;
  v1[1] = 0;
  char v2 = -1;
  return Instrument.GaugeStyle.DigiBarColorsConfiguration.init(activeColorID:trackColorID:trackOverlimitColorID:)(v5, (uint64_t)&v3, (uint64_t)v1, (unint64_t *)&qword_2696E2228);
}

uint64_t static Instrument.GaugeStyle.DigiBarColorsConfiguration.barDefault.getter@<X0>(void *a1@<X8>)
{
  if (qword_2696DD720 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = unk_2696E2230;
  uint64_t v3 = qword_2696E2238;
  *a1 = qword_2696E2228;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return sub_2498FC674(v2);
}

uint64_t static Instrument.GaugeStyle.DigiBarColorsConfiguration.barDefault.setter(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  if (qword_2696DD720 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v4 = unk_2696E2230;
  qword_2696E2228 = v1;
  unk_2696E2230 = v2;
  qword_2696E2238 = v3;
  swift_bridgeObjectRelease();
  return sub_249882B2C(v4);
}

uint64_t (*static Instrument.GaugeStyle.DigiBarColorsConfiguration.barDefault.modify())()
{
  if (qword_2696DD720 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_2499BB454()
{
  if (qword_2696DD720 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v0 = unk_2696E2230;
  qword_2696E2240 = qword_2696E2228;
  *(void *)algn_2696E2248 = unk_2696E2230;
  qword_2696E2250 = qword_2696E2238;
  swift_bridgeObjectRetain();
  return sub_2498FC674(v0);
}

uint64_t static Instrument.GaugeStyle.DigiBarColorsConfiguration.default.getter@<X0>(void *a1@<X8>)
{
  if (qword_2696DD728 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_2696E2248;
  uint64_t v3 = qword_2696E2250;
  *a1 = qword_2696E2240;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();

  return sub_2498FC674(v2);
}

uint64_t sub_2499BB578@<X0>(void *a1@<X8>)
{
  if (qword_2696DD728 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)algn_2696E2248;
  uint64_t v3 = qword_2696E2250;
  *a1 = qword_2696E2240;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();

  return sub_2498FC674(v2);
}

unint64_t Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF3E8);
    uint64_t v3 = sub_249AEDCA8();
  }
  else
  {
    uint64_t v3 = MEMORY[0x263F8EE80];
  }
  uint64_t v8 = v3;
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_2499BB718(v4, 1, &v8);
  swift_bridgeObjectRelease();
  uint64_t v5 = v8;
  if (*(void *)(v8 + 16) && (unint64_t result = sub_2498EF16C(0), (v7 & 1) != 0))
  {
    *a2 = v5;
    a2[1] = 0;
  }
  else
  {
    sub_249AEDC58();
    __break(1u);
    unint64_t result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void sub_2499BB718(uint64_t a1, char a2, void *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v5) {
    goto LABEL_23;
  }
  int v6 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v9 = *(void *)(a1 + 32);
  sub_24988D770(v8, v7, *(unsigned char *)(a1 + 56));
  if (v6 == 255) {
    goto LABEL_23;
  }
  uint64_t v10 = (void *)*a3;
  unint64_t v11 = sub_2498EF16C(v9);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  BOOL v15 = __OFADD__(v13, v14);
  uint64_t v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  LOBYTE(v17) = v12;
  if (v10[3] < v16)
  {
    sub_2498E7500(v16, a2 & 1);
    unint64_t v11 = sub_2498EF16C(v9);
    if ((v17 & 1) == (v18 & 1)) {
      goto LABEL_8;
    }
LABEL_6:
    unint64_t v11 = sub_249AEE2D8();
    __break(1u);
  }
  if (a2)
  {
LABEL_8:
    if (v17) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  unint64_t v21 = v11;
  sub_2498E1E20();
  unint64_t v11 = v21;
  if (v17)
  {
LABEL_9:
    unint64_t v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_24988D788(v8, v7, v6);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_28;
  }
LABEL_12:
  uint64_t v22 = (void *)*a3;
  *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
  *(void *)(v22[6] + 8 * v11) = v9;
  uint64_t v23 = v22[7] + 24 * v11;
  *(void *)uint64_t v23 = v8;
  *(void *)(v23 + 8) = v7;
  *(unsigned char *)(v23 + 16) = v6;
  uint64_t v24 = v22[2];
  BOOL v15 = __OFADD__(v24, 1);
  uint64_t v25 = v24 + 1;
  if (v15)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_249AEDA78();
    sub_249AED1E8();
    sub_249AEDC08();
    sub_249AED1E8();
    sub_249AEDC58();
    __break(1u);
    return;
  }
  long long v22[2] = v25;
  if (v5 != 1)
  {
    unint64_t v17 = (char *)(a1 + 88);
    unint64_t v26 = 1;
    while (v26 < *(void *)(a1 + 16))
    {
      int v6 = *v17;
      uint64_t v8 = *((void *)v17 - 2);
      uint64_t v7 = *((void *)v17 - 1);
      uint64_t v9 = *((void *)v17 - 3);
      sub_24988D770(v8, v7, *v17);
      if (v6 == 255) {
        goto LABEL_23;
      }
      uint64_t v27 = (void *)*a3;
      unint64_t v28 = sub_2498EF16C(v9);
      uint64_t v30 = v27[2];
      BOOL v31 = (v29 & 1) == 0;
      BOOL v15 = __OFADD__(v30, v31);
      uint64_t v32 = v30 + v31;
      if (v15) {
        goto LABEL_25;
      }
      a2 = v29;
      if (v27[3] < v32)
      {
        sub_2498E7500(v32, 1);
        unint64_t v28 = sub_2498EF16C(v9);
        if ((a2 & 1) != (v33 & 1)) {
          goto LABEL_6;
        }
      }
      if (a2) {
        goto LABEL_9;
      }
      uint64_t v34 = (void *)*a3;
      *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
      *(void *)(v34[6] + 8 * v28) = v9;
      uint64_t v35 = v34[7] + 24 * v28;
      *(void *)uint64_t v35 = v8;
      *(void *)(v35 + 8) = v7;
      *(unsigned char *)(v35 + 16) = v6;
      uint64_t v36 = v34[2];
      BOOL v15 = __OFADD__(v36, 1);
      uint64_t v37 = v36 + 1;
      if (v15) {
        goto LABEL_26;
      }
      ++v26;
      v34[2] = v37;
      v17 += 32;
      if (v5 == v26) {
        goto LABEL_23;
      }
    }
    goto LABEL_27;
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO26DigiBarColorsConfigurationV2eeoiySbAG_AGtFZ_0(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v5 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v6 = a2[2];
  if (*a1)
  {
    if (!v5) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v7 = swift_bridgeObjectRetain();
    char v8 = sub_2499FEF30(v7, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  if (!v2)
  {
    if (!v4) {
      return 1;
    }
    goto LABEL_16;
  }
  if (!v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_16:
    sub_2498FC674(v4);
    sub_249882B2C(v2);
    uint64_t v12 = v4;
LABEL_20:
    sub_249882B2C(v12);
    return 0;
  }
  sub_2498FC674(v2);
  sub_2498FC674(v2);
  sub_2498FC674(v4);
  if ((sub_2499FEF30(v2, v4) & 1) == 0) {
    goto LABEL_18;
  }
  if (v3)
  {
    if (v6)
    {
      swift_bridgeObjectRetain();
      uint64_t v9 = swift_bridgeObjectRetain();
      char v10 = sub_2499FEF30(v9, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249882B2C(v4);
      if (v10) {
        goto LABEL_23;
      }
      goto LABEL_19;
    }
LABEL_18:
    sub_249882B2C(v4);
LABEL_19:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = v2;
    goto LABEL_20;
  }
  if (v6) {
    goto LABEL_18;
  }
  sub_249882B2C(v4);
LABEL_23:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249882B2C(v2);
  return 1;
}

uint64_t _s14CarPlayAssetUI10InstrumentV10GaugeStyleO26DigiBarColorsConfigurationV13TrackColorIDsV2eeoiySbAI_AItFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  if (sub_2499FEF30(*a1, *a2))
  {
    if (v2)
    {
      if (v3)
      {
        swift_bridgeObjectRetain();
        uint64_t v4 = swift_bridgeObjectRetain();
        char v5 = sub_2499FEF30(v4, v3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v5) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_2499BBD0C()
{
  unint64_t result = qword_2696E2260;
  if (!qword_2696E2260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2260);
  }
  return result;
}

unint64_t sub_2499BBD60()
{
  unint64_t result = qword_2696E2278;
  if (!qword_2696E2278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2278);
  }
  return result;
}

unint64_t sub_2499BBDB4()
{
  unint64_t result = qword_2696E2280;
  if (!qword_2696E2280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2280);
  }
  return result;
}

unint64_t sub_2499BBE08()
{
  unint64_t result = qword_2696E2290;
  if (!qword_2696E2290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2290);
  }
  return result;
}

unint64_t sub_2499BBE60()
{
  unint64_t result = qword_2696E2298;
  if (!qword_2696E2298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2298);
  }
  return result;
}

unint64_t sub_2499BBEB8()
{
  unint64_t result = qword_2696E22A0;
  if (!qword_2696E22A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22A0);
  }
  return result;
}

unint64_t sub_2499BBF10()
{
  unint64_t result = qword_2696E22A8;
  if (!qword_2696E22A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22A8);
  }
  return result;
}

unint64_t sub_2499BBF68()
{
  unint64_t result = qword_2696E22B0;
  if (!qword_2696E22B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22B0);
  }
  return result;
}

uint64_t _s14descr26FD9EE19O26DigiBarColorsConfigurationVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 8);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s14descr26FD9EE19O26DigiBarColorsConfigurationVwCP_0(void *a1, void *a2)
{
  *a1 = *a2;
  char v5 = a2 + 1;
  uint64_t v4 = a2[1];
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

void *_s14descr26FD9EE19O26DigiBarColorsConfigurationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      a1[1] = v4;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    sub_2499BC150((uint64_t)(a1 + 1));
    goto LABEL_7;
  }
  a1[1] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2499BC150(uint64_t a1)
{
  return a1;
}

void *_s14descr26FD9EE19O26DigiBarColorsConfigurationVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1]) {
    goto LABEL_5;
  }
  if (!v4)
  {
    sub_2499BC150((uint64_t)(a1 + 1));
LABEL_5:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14descr26FD9EE19O26DigiBarColorsConfigurationVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14descr26FD9EE19O26DigiBarColorsConfigurationVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarColorsConfiguration()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration;
}

uint64_t _s14descr26FD9EE19O26DigiBarColorsConfigurationV13TrackColorIDsVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s14descr26FD9EE19O26DigiBarColorsConfigurationV13TrackColorIDsVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14descr26FD9EE19O26DigiBarColorsConfigurationV13TrackColorIDsVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s14descr26FD9EE19O26DigiBarColorsConfigurationV13TrackColorIDsVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs()
{
  return &type metadata for Instrument.GaugeStyle.DigiBarColorsConfiguration.TrackColorIDs;
}

ValueMetadata *type metadata accessor for DefaultColorID()
{
  return &type metadata for DefaultColorID;
}

ValueMetadata *_s14descr26FD9EE19O26DigiBarColorsConfigurationV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O26DigiBarColorsConfigurationV10CodingKeysON;
}

unsigned char *_s14descr26FD9EE19O26DigiBarColorsConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499BC4E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s14descr26FD9EE19O26DigiBarColorsConfigurationV13TrackColorIDsV10CodingKeysOMa()
{
  return &_s14descr26FD9EE19O26DigiBarColorsConfigurationV13TrackColorIDsV10CodingKeysON;
}

unint64_t sub_2499BC51C()
{
  unint64_t result = qword_2696E22B8;
  if (!qword_2696E22B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22B8);
  }
  return result;
}

unint64_t sub_2499BC574()
{
  unint64_t result = qword_2696E22C0;
  if (!qword_2696E22C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22C0);
  }
  return result;
}

unint64_t sub_2499BC5CC()
{
  unint64_t result = qword_2696E22C8;
  if (!qword_2696E22C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22C8);
  }
  return result;
}

unint64_t sub_2499BC624()
{
  unint64_t result = qword_2696E22D0;
  if (!qword_2696E22D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22D0);
  }
  return result;
}

unint64_t sub_2499BC67C()
{
  unint64_t result = qword_2696E22D8;
  if (!qword_2696E22D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22D8);
  }
  return result;
}

unint64_t sub_2499BC6D4()
{
  unint64_t result = qword_2696E22E0;
  if (!qword_2696E22E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22E0);
  }
  return result;
}

uint64_t sub_2499BC728(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x734449726F6C6F63 && a2 == 0xE800000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B16810)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2499BC818(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F43657669746361 && a2 == 0xEE00734449726F6CLL;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F436B63617274 && a2 == 0xED0000734449726FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2499BC954(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC38);
  MEMORY[0x270FA5388](v4 - 8);
  char v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for Slot();
  uint64_t v7 = *(void *)(v49 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v49);
  char v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v48 = (double *)((char *)&v43 - v12);
  MEMORY[0x270FA5388](v11);
  BOOL v14 = (char *)&v43 - v13;
  uint64_t v15 = MEMORY[0x263F8EE78];
  int64_t v55 = *(void *)(a1 + 16);
  if (!v55) {
    return v15;
  }
  uint64_t v43 = v2;
  uint64_t v58 = MEMORY[0x263F8EE78];
  sub_249A22130(0, v55, 0);
  uint64_t v16 = 0;
  unint64_t v56 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = a1 + v56;
  uint64_t v18 = *(void *)(v7 + 72);
  double v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  double v46 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v57 = v18;
  uint64_t v44 = v6;
  uint64_t v47 = v17;
  while (1)
  {
    sub_2499C08F8(v17 + v18 * v16, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for Slot);
    unint64_t v19 = *((void *)v14 + 5);
    if (v19 >= 2) {
      break;
    }
LABEL_19:
    uint64_t v15 = v58;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_249A22130(0, *(void *)(v15 + 16) + 1, 1);
      uint64_t v15 = v58;
    }
    unint64_t v41 = *(void *)(v15 + 16);
    unint64_t v40 = *(void *)(v15 + 24);
    if (v41 >= v40 >> 1)
    {
      sub_249A22130(v40 > 1, v41 + 1, 1);
      uint64_t v15 = v58;
    }
    ++v16;
    *(void *)(v15 + 16) = v41 + 1;
    uint64_t v18 = v57;
    sub_2499C09C0((uint64_t)v14, v15 + v56 + v41 * v57, (uint64_t (*)(void))type metadata accessor for Slot);
    if (v16 == v55) {
      return v15;
    }
  }
  uint64_t v21 = *(void *)v14;
  uint64_t v20 = *((void *)v14 + 1);
  uint64_t v53 = *((void *)v14 + 2);
  uint64_t v22 = *((void *)v14 + 3);
  uint64_t v23 = *((void *)v14 + 4);
  uint64_t v51 = v20;
  uint64_t v52 = v22;
  uint64_t v24 = *(void *)(v50 + *(int *)(type metadata accessor for Component() + 32));
  uint64_t v25 = *(void *)(v24 + 16);
  uint64_t v54 = v21;
  if (v25)
  {
    uint64_t v26 = v24 + v56;
    sub_249992828(v21, v51, v53, v52, v23, v19);
    uint64_t v53 = v24;
    swift_bridgeObjectRetain();
    uint64_t v17 = v47;
    while (1)
    {
      sub_2499C08F8(v26, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Slot);
      BOOL v27 = *((void *)v10 + 15) == v23 && v19 == *((void *)v10 + 16);
      if (v27 || (sub_249AEE0D8() & 1) != 0) {
        break;
      }
      sub_2499C0960((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Slot);
      v26 += v57;
      if (!--v25)
      {
        uint64_t v28 = 1;
        char v6 = v44;
        goto LABEL_15;
      }
    }
    char v6 = v44;
    sub_2499C09C0((uint64_t)v10, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for Slot);
    uint64_t v28 = 0;
  }
  else
  {
    sub_249992828(v21, v51, v53, v52, v23, v19);
    swift_bridgeObjectRetain();
    uint64_t v28 = 1;
    uint64_t v17 = v47;
  }
LABEL_15:
  uint64_t v29 = v49;
  (*v46)(v6, v28, 1, v49);
  swift_bridgeObjectRelease();
  if ((*v45)(v6, 1, v29) != 1)
  {
    uint64_t v30 = v48;
    sub_2499C09C0((uint64_t)v6, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for Slot);
    CGFloat v31 = v30[6];
    CGFloat v32 = v30[7];
    CGFloat v33 = v30[8];
    CGFloat v34 = v30[9];
    v59.origin.x = v31;
    v59.origin.y = v32;
    v59.size.double width = v33;
    v59.size.double height = v34;
    double Width = CGRectGetWidth(v59);
    v60.origin.x = v31;
    v60.origin.y = v32;
    v60.size.double width = v33;
    v60.size.double height = v34;
    double Height = CGRectGetHeight(v60);
    if (Height >= Width) {
      double Height = Width;
    }
    double v37 = Height * 0.5 + 15.0 + 20.0;
    v61.origin.x = v31;
    v61.origin.y = v32;
    v61.size.double width = v33;
    v61.size.double height = v34;
    CGFloat MidX = CGRectGetMidX(v61);
    v62.origin.x = v31;
    v62.origin.y = v32;
    v62.size.double width = v33;
    v62.size.double height = v34;
    CGFloat MidY = CGRectGetMidY(v62);
    sub_2499C0960((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for Slot);
    sub_24999283C(*(void *)v14, *((void *)v14 + 1), *((void *)v14 + 2), *((void *)v14 + 3), *((void *)v14 + 4), *((void *)v14 + 5));
    *(void *)BOOL v14 = v54;
    *((double *)v14 + 1) = v37;
    *((CGFloat *)v14 + 2) = MidX;
    *((CGFloat *)v14 + 3) = MidY;
    *((void *)v14 + 4) = v23;
    *((void *)v14 + 5) = v19;
    goto LABEL_19;
  }
  sub_2498D60E8((uint64_t)v6, &qword_2696DFC38);
  uint64_t result = sub_249AEDC58();
  __break(1u);
  return result;
}

int *Component.updatingWithTemplate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = (int *)type metadata accessor for Component();
  uint64_t v10 = *(void *)(a1 + v9[8]);
  uint64_t v20 = v3;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_2498F2FD4((void (*)(uint64_t))sub_2498FE018, (uint64_t)v19, v10, (uint64_t)v22);
  swift_bridgeObjectRelease();
  sub_2498D6084(v3, (uint64_t)v8, qword_2696DF810);
  uint64_t v12 = v9[6];
  char v21 = *(unsigned char *)(a1 + v9[5]);
  uint64_t v13 = *(void *)(a1 + v12);
  uint64_t v14 = *(void *)(a1 + v12 + 8);
  uint64_t v15 = (double *)(a1 + v9[7]);
  double v16 = *v15;
  double v17 = v15[1];
  swift_bridgeObjectRetain();
  return Component.init(id:type:name:size:slots:)((uint64_t)v8, &v21, v13, v14, v11, a2, v16, v17);
}

uint64_t type metadata accessor for Component()
{
  uint64_t result = qword_2696E2340;
  if (!qword_2696E2340) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t Component.size.setter(double a1, double a2)
{
  uint64_t result = type metadata accessor for Component();
  uint64_t v6 = (double *)(v2 + *(int *)(result + 28));
  double v7 = *v6;
  double v8 = v6[1];
  *uint64_t v6 = a1;
  v6[1] = a2;
  if (v7 != a1 || v8 != a2)
  {
    double v10 = a1 / v7;
    double v11 = a2 / v8;
    return sub_2499BDAA0(v10, v11);
  }
  return result;
}

uint64_t sub_2499BD0F0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Instrument();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Slot();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  double v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v0 + *(int *)(type metadata accessor for Component() + 32));
  uint64_t v13 = *(void *)(v12 + 16);
  if (!v13) {
    return 0;
  }
  uint64_t v14 = &v11[*(int *)(v8 + 36)];
  uint64_t v15 = v12 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  uint64_t v26 = *(void *)(v9 + 72);
  uint64_t v16 = (uint64_t)v14;
  uint64_t v24 = v12;
  swift_bridgeObjectRetain();
  uint64_t v25 = v16;
  while (1)
  {
    sub_2499C08F8(v15, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Slot);
    sub_2498D6084(v16, (uint64_t)v3, &qword_2696DE540);
    sub_2499C0960((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for Slot);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_2498D60E8((uint64_t)v3, &qword_2696DE540);
      goto LABEL_4;
    }
    sub_2499C09C0((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Instrument);
    sub_2498A4990((uint64_t)&v7[*(int *)(v4 + 20)], (uint64_t)v27);
    sub_2498A4990((uint64_t)v27, (uint64_t)v28);
    int v17 = sub_2498B8790((uint64_t)v28);
    if (v17 == 4)
    {
      uint64_t v21 = sub_2498B87AC((uint64_t)v28);
      uint64_t v19 = *(void *)(v21 + 8);
      uint64_t v20 = *(void *)(v21 + 16);
    }
    else
    {
      if (v17 != 3)
      {
        sub_2499C0960((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Instrument);
        goto LABEL_4;
      }
      uint64_t v18 = (uint64_t *)sub_2498B87AC((uint64_t)v28);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
    }
    if (v19 == 0x7765695673616461 && v20 == 0xE800000000000000) {
      break;
    }
    char v22 = sub_249AEE0D8();
    sub_2499C0960((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Instrument);
    if (v22) {
      goto LABEL_18;
    }
    uint64_t v16 = v25;
LABEL_4:
    v15 += v26;
    if (!--v13)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  sub_2499C0960((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for Instrument);
LABEL_18:
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t Component.stableIdentifier.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = &v9[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for Component() + 32));
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for Slot();
  sub_2498D6084(v4+ *(int *)(v5 + 36)+ ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80)), (uint64_t)v3, &qword_2696DE540);
  uint64_t v6 = type metadata accessor for Instrument();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6) == 1)
  {
    sub_2498D60E8((uint64_t)v3, &qword_2696DE540);
    return 0x6469577974706D45;
  }
  else
  {
    sub_2498A4990((uint64_t)&v3[*(int *)(v6 + 20)], (uint64_t)v10);
    sub_2498FC9D8(v10, sub_2498FB4B4);
    sub_2499C0960((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for Instrument);
    sub_2498A4990((uint64_t)v10, (uint64_t)v9);
    unint64_t v7 = Instrument.Kind.name.getter();
    sub_2498FC9D8(v10, sub_2498FCAAC);
  }
  return v7;
}

int *Component.init(id:type:name:size:slots:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>, double a8@<D1>)
{
  char v15 = *a2;
  uint64_t v16 = sub_2499035B8(a5);
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_2498DA294(v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v18 + 16);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v19 == v20)
  {
    sub_249882788(a1, a6, qword_2696DF810);
    uint64_t result = (int *)type metadata accessor for Component();
    *(unsigned char *)(a6 + result[5]) = v15;
    char v22 = (void *)(a6 + result[6]);
    *char v22 = a3;
    v22[1] = a4;
    uint64_t v23 = (double *)(a6 + result[7]);
    *uint64_t v23 = a7;
    v23[1] = a8;
    *(void *)(a6 + result[8]) = a5;
  }
  else
  {
    sub_249AEDA78();
    swift_bridgeObjectRelease();
    sub_2499035B8(a5);
    MEMORY[0x24C5AE5B0]();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = (int *)sub_249AEDC58();
    __break(1u);
  }
  return result;
}

CarPlayAssetUI::ComponentType_optional __swiftcall ComponentType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t ComponentType.rawValue.getter()
{
  if (*v0) {
    return 0x79616C7265766FLL;
  }
  else {
    return 0x7972616D697270;
  }
}

CarPlayAssetUI::ComponentType_optional sub_2499BD8C4(Swift::String *a1)
{
  return ComponentType.init(rawValue:)(*a1);
}

uint64_t sub_2499BD8D0()
{
  return sub_249AED3A8();
}

uint64_t sub_2499BD930()
{
  return sub_249AED348();
}

uint64_t Component.id.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2498D6084(v1, a1, qword_2696DF810);
}

uint64_t Component.type.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for Component();
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t Component.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for Component() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

double Component.size.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for Component() + 28));
}

uint64_t sub_2499BDA44(double *a1, uint64_t a2)
{
  double v3 = *a1;
  double v4 = a1[1];
  uint64_t result = type metadata accessor for Component();
  uint64_t v6 = (double *)(a2 + *(int *)(result + 28));
  double v7 = *v6;
  double v8 = v6[1];
  *uint64_t v6 = v3;
  v6[1] = v4;
  if (v3 != v7 || v4 != v8) {
    return sub_2499BDAA0(v3 / v7, v4 / v8);
  }
  return result;
}

uint64_t sub_2499BDAA0(CGFloat a1, CGFloat a2)
{
  uint64_t v3 = v2;
  CGFloat v50 = a2;
  CGFloat v61 = a1;
  uint64_t v4 = type metadata accessor for Slot();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4 - 8);
  double v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (double *)((char *)&v48 - v9);
  uint64_t v11 = *(int *)(type metadata accessor for Component() + 32);
  uint64_t v12 = *(void *)(v2 + v11);
  int64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = MEMORY[0x263F8EE78];
  if (v13)
  {
    uint64_t v48 = v11;
    uint64_t v49 = v3;
    uint64_t v63 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_249A22130(0, v13, 0);
    unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v16 = v12 + v15;
    uint64_t v17 = *(void *)(v5 + 72);
    do
    {
      sub_2499C08F8(v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Slot);
      sub_2499C08F8((uint64_t)v8, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for Slot);
      CGFloat v18 = v10[6];
      CGFloat v19 = v10[7];
      CGFloat v20 = v10[8];
      CGFloat v21 = v10[9];
      CGFloat v22 = v50;
      CGAffineTransformMakeScale(&v62, v61, v50);
      v64.origin.CGFloat x = v18;
      v64.origin.CGFloat y = v19;
      v64.size.CGFloat width = v20;
      v64.size.CGFloat height = v21;
      CGRect v65 = CGRectApplyAffineTransform(v64, &v62);
      CGFloat y = v65.origin.y;
      CGFloat x = v65.origin.x;
      CGFloat width = v65.size.width;
      CGFloat height = v65.size.height;
      double v24 = v10[10];
      double v23 = v10[11];
      double v25 = v10[13];
      CGFloat v54 = v10[12];
      v65.origin.CGFloat x = v18;
      v65.origin.CGFloat y = v19;
      v65.size.CGFloat width = v20;
      v65.size.CGFloat height = v21;
      CGFloat v56 = v23 + CGRectGetMinX(v65);
      v66.origin.CGFloat x = v18;
      v66.origin.CGFloat y = v19;
      v66.size.CGFloat width = v20;
      v66.size.CGFloat height = v21;
      CGFloat v55 = v24 + CGRectGetMinY(v66);
      v67.origin.CGFloat x = v18;
      v67.origin.CGFloat y = v19;
      v67.size.CGFloat width = v20;
      v67.size.CGFloat height = v21;
      CGFloat v26 = CGRectGetWidth(v67) - v25 - v23;
      v68.origin.CGFloat x = v18;
      v68.origin.CGFloat y = v19;
      v68.size.CGFloat width = v20;
      v68.size.CGFloat height = v21;
      CGFloat v27 = CGRectGetHeight(v68) - v54 - v24;
      CGAffineTransformMakeScale(&v62, v61, v22);
      v69.origin.CGFloat x = v56;
      v69.origin.CGFloat y = v55;
      v69.size.CGFloat width = v26;
      v69.size.CGFloat height = v27;
      CGRect v70 = CGRectApplyAffineTransform(v69, &v62);
      CGFloat v51 = v70.size.width;
      CGFloat v28 = v70.size.height;
      CGFloat v29 = v70.origin.x;
      CGFloat v30 = v70.origin.y;
      CGFloat v54 = v70.origin.y;
      double MinY = CGRectGetMinY(v70);
      CGFloat v33 = y;
      CGFloat v32 = x;
      v71.origin.CGFloat x = x;
      v71.origin.CGFloat y = y;
      CGFloat v34 = width;
      v71.size.CGFloat width = width;
      CGFloat v35 = height;
      v71.size.CGFloat height = height;
      CGFloat v56 = MinY - CGRectGetMinY(v71);
      CGFloat v52 = v29;
      v72.origin.CGFloat x = v29;
      v72.origin.CGFloat y = v30;
      CGFloat v36 = v51;
      v72.size.CGFloat width = v51;
      v72.size.CGFloat height = v28;
      double MinX = CGRectGetMinX(v72);
      v73.origin.CGFloat x = v32;
      v73.origin.CGFloat y = v33;
      v73.size.CGFloat width = v34;
      v73.size.CGFloat height = v35;
      CGFloat v55 = MinX - CGRectGetMinX(v73);
      v74.origin.CGFloat x = v32;
      v74.origin.CGFloat y = v33;
      v74.size.CGFloat width = v34;
      v74.size.CGFloat height = v35;
      double MaxY = CGRectGetMaxY(v74);
      v75.origin.CGFloat x = v29;
      CGFloat v39 = v54;
      v75.origin.CGFloat y = v54;
      v75.size.CGFloat width = v36;
      v75.size.CGFloat height = v28;
      double v53 = MaxY - CGRectGetMaxY(v75);
      v76.origin.CGFloat x = v32;
      v76.origin.CGFloat y = v33;
      v76.size.CGFloat width = v34;
      v76.size.CGFloat height = v35;
      double MaxX = CGRectGetMaxX(v76);
      v77.origin.CGFloat x = v52;
      v77.origin.CGFloat y = v39;
      v77.size.CGFloat width = v36;
      v77.size.CGFloat height = v28;
      CGFloat v41 = CGRectGetMaxX(v77);
      v10[6] = v32;
      void v10[7] = v33;
      unsigned char v10[8] = v34;
      v10[9] = v35;
      CGFloat v42 = v55;
      v10[10] = v56;
      v10[11] = v42;
      v10[12] = v53;
      v10[13] = MaxX - v41;
      sub_2499C0960((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Slot);
      uint64_t v14 = v63;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_249A22130(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v63;
      }
      unint64_t v44 = *(void *)(v14 + 16);
      unint64_t v43 = *(void *)(v14 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_249A22130(v43 > 1, v44 + 1, 1);
        uint64_t v14 = v63;
      }
      *(void *)(v14 + 16) = v44 + 1;
      sub_2499C09C0((uint64_t)v10, v14 + v15 + v44 * v17, (uint64_t (*)(void))type metadata accessor for Slot);
      v16 += v17;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    uint64_t v3 = v49;
    uint64_t v11 = v48;
  }
  swift_bridgeObjectRelease();
  *(void *)(v3 + v11) = v14;
  uint64_t v45 = swift_bridgeObjectRetain();
  uint64_t v46 = sub_2499BC954(v45, v3);
  uint64_t result = swift_bridgeObjectRelease_n();
  *(void *)(v3 + v11) = v46;
  return result;
}

uint64_t (*Component.size.modify(uint64_t a1))(uint64_t result)
{
  *(void *)(a1 + 16) = v1;
  uint64_t v3 = *(int *)(type metadata accessor for Component() + 28);
  long long v4 = *(_OWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 24) = v3;
  *(_OWORD *)a1 = v4;
  return sub_2499BDFF8;
}

uint64_t sub_2499BDFF8(uint64_t result)
{
  uint64_t v1 = (double *)(*(void *)(result + 16) + *(int *)(result + 24));
  double v2 = *(double *)result;
  double v3 = *(double *)(result + 8);
  double v4 = *v1;
  double v5 = v1[1];
  *uint64_t v1 = *(double *)result;
  v1[1] = v3;
  if (v2 != v4 || v3 != v5) {
    return sub_2499BDAA0(v2 / v4, v3 / v5);
  }
  return result;
}

uint64_t Component.slots.getter()
{
  type metadata accessor for Component();

  return swift_bridgeObjectRetain();
}

uint64_t Component.slots.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for Component() + 32);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*Component.slots.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_2499BE100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF440);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v64 = (uint64_t)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v65 = (uint64_t)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1228);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v71 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF438);
  uint64_t v68 = *(void *)(v11 - 8);
  uint64_t v69 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v70 = (uint64_t)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF410);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v72 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1210);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF408);
  uint64_t v73 = *(void *)(v18 - 8);
  uint64_t v74 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v75 = (uint64_t)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC38);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v67 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  double v25 = (char *)&v64 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v76 = (uint64_t)&v64 - v26;
  uint64_t v27 = type metadata accessor for Slot();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  CGFloat v31 = (char *)&v64 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v29);
  CGFloat v33 = (char *)&v64 - v32;
  sub_2499C08F8(a1, (uint64_t)&v64 - v32, (uint64_t (*)(void))type metadata accessor for Slot);
  uint64_t v34 = *(void *)(a2 + *(int *)(type metadata accessor for Component() + 32));
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    CGRect v66 = v17;
    uint64_t v36 = v34 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
    uint64_t v37 = *(void *)(v28 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2499C08F8(v36, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for Slot);
      BOOL v38 = *((void *)v31 + 15) == *((void *)v33 + 15) && *((void *)v31 + 16) == *((void *)v33 + 16);
      if (v38 || (sub_249AEE0D8() & 1) != 0) {
        break;
      }
      sub_2499C0960((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for Slot);
      v36 += v37;
      if (!--v35)
      {
        uint64_t v39 = 1;
        uint64_t v40 = v76;
        uint64_t v17 = v66;
        goto LABEL_12;
      }
    }
    uint64_t v41 = (uint64_t)v31;
    uint64_t v40 = v76;
    sub_2499C09C0(v41, v76, (uint64_t (*)(void))type metadata accessor for Slot);
    uint64_t v39 = 0;
    uint64_t v17 = v66;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v39 = 1;
    uint64_t v40 = v76;
  }
LABEL_12:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v40, v39, 1, v27);
  swift_bridgeObjectRelease();
  sub_2498D6084(v40, (uint64_t)v25, &qword_2696DFC38);
  CGFloat v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48);
  if (v42(v25, 1, v27) == 1)
  {
    sub_2498D60E8((uint64_t)v25, &qword_2696DFC38);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v73 + 56))(v17, 1, 1, v74);
    uint64_t v43 = v75;
LABEL_15:
    sub_249AEB7F8();
    sub_2498D60E8((uint64_t)v17, &qword_2696E1210);
    goto LABEL_17;
  }
  uint64_t v44 = v72;
  sub_2498D6084((uint64_t)&v25[*(int *)(v27 + 44)], v72, &qword_2696DF410);
  sub_249882788(v44, (uint64_t)v17, &qword_2696DF408);
  sub_2499C0960((uint64_t)v25, (uint64_t (*)(void))type metadata accessor for Slot);
  uint64_t v46 = v73;
  uint64_t v45 = v74;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v17, 0, 1, v74);
  int v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48))(v17, 1, v45);
  uint64_t v43 = v75;
  if (v47 == 1) {
    goto LABEL_15;
  }
  sub_249882788((uint64_t)v17, v75, &qword_2696DF408);
LABEL_17:
  sub_24997ED24(v43, (uint64_t)&v33[*(int *)(v27 + 44)], &qword_2696DF408);
  uint64_t v48 = (uint64_t)&v33[*(int *)(v27 + 36)];
  uint64_t v49 = type metadata accessor for Instrument();
  CGFloat v50 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48);
  if (!v50(v48, 1, v49))
  {
    uint64_t v76 = v48;
    uint64_t v51 = v67;
    sub_2498D6084(v40, v67, &qword_2696DFC38);
    if (v42((char *)v51, 1, v27) == 1)
    {
      CGFloat v52 = &qword_2696DFC38;
      uint64_t v53 = v51;
    }
    else
    {
      uint64_t v54 = v65;
      sub_2498D6084(v51 + *(int *)(v27 + 36), v65, &qword_2696DE540);
      sub_2499C0960(v51, (uint64_t (*)(void))type metadata accessor for Slot);
      if (v50(v54, 1, v49) != 1)
      {
        uint64_t v59 = v64;
        sub_2498D6084(v54, v64, &qword_2696DF440);
        uint64_t v60 = v59;
        uint64_t v55 = v71;
        sub_249882788(v60, v71, &qword_2696DF438);
        sub_2499C0960(v54, (uint64_t (*)(void))type metadata accessor for Instrument);
        uint64_t v62 = v68;
        uint64_t v61 = v69;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v68 + 56))(v55, 0, 1, v69);
        int v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v55, 1, v61);
        uint64_t v56 = v70;
        uint64_t v57 = v76;
        if (v63 != 1)
        {
          sub_249882788(v55, v70, &qword_2696DF438);
          goto LABEL_24;
        }
LABEL_23:
        sub_249AEB7F8();
        sub_2498D60E8(v55, &qword_2696E1228);
LABEL_24:
        sub_24997ED24(v56, v57, &qword_2696DF438);
        goto LABEL_25;
      }
      CGFloat v52 = &qword_2696DE540;
      uint64_t v53 = v54;
    }
    sub_2498D60E8(v53, v52);
    uint64_t v56 = v70;
    uint64_t v55 = v71;
    uint64_t v57 = v76;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v68 + 56))(v71, 1, 1, v69);
    goto LABEL_23;
  }
LABEL_25:
  sub_2498D60E8(v40, &qword_2696DFC38);
  sub_2499C08F8((uint64_t)v33, v77, (uint64_t (*)(void))type metadata accessor for Slot);
  return sub_2499C0960((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for Slot);
}

uint64_t Component.updatingSize(_:)@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  uint64_t v4 = v3;
  sub_2499C08F8(v4, a1, (uint64_t (*)(void))type metadata accessor for Component);
  uint64_t result = type metadata accessor for Component();
  uint64_t v9 = (double *)(a1 + *(int *)(result + 28));
  double v10 = *v9;
  double v11 = v9[1];
  *uint64_t v9 = a2;
  v9[1] = a3;
  if (v10 != a2 || v11 != a3) {
    return sub_2499BDAA0(a2 / v10, a3 / v11);
  }
  return result;
}

uint64_t sub_2499BEA54()
{
  uint64_t result = 25705;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701869940;
      break;
    case 2:
      uint64_t result = 1701667182;
      break;
    case 3:
      uint64_t result = 1702521203;
      break;
    case 4:
      uint64_t result = 0x73746F6C73;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2499BEAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499C06D4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499BEB00(uint64_t a1)
{
  unint64_t v2 = sub_2499BF9B8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499BEB3C(uint64_t a1)
{
  unint64_t v2 = sub_2499BF9B8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Component.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  MEMORY[0x270FA5388](v4);
  uint64_t v24 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E22E8);
  uint64_t v23 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for Component();
  MEMORY[0x270FA5388](v8);
  double v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1[3];
  uint64_t v26 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v11);
  sub_2499BF9B8();
  uint64_t v12 = v7;
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
  }
  uint64_t v13 = v23;
  uint64_t v14 = (uint64_t)v10;
  LOBYTE(v27) = 0;
  sub_2499BFB04(&qword_2696E22F8);
  uint64_t v16 = (uint64_t)v24;
  uint64_t v15 = v25;
  sub_249AEDE08();
  sub_249882788(v16, v14, qword_2696DF810);
  char v28 = 1;
  sub_2499BFA0C();
  sub_249AEDE08();
  *(unsigned char *)(v14 + v8[5]) = v27;
  LOBYTE(v27) = 2;
  uint64_t v17 = sub_249AEDDB8();
  uint64_t v18 = (uint64_t *)(v14 + v8[6]);
  *uint64_t v18 = v17;
  v18[1] = v19;
  type metadata accessor for CGSize(0);
  char v28 = 3;
  sub_2499BFC80(&qword_2696E1A08, type metadata accessor for CGSize);
  sub_249AEDE08();
  *(_OWORD *)(v14 + v8[7]) = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFA08);
  char v28 = 4;
  sub_2499BFA60();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v12, v15);
  *(void *)(v14 + v8[8]) = v27;
  sub_2499C08F8(v14, v22, (uint64_t (*)(void))type metadata accessor for Component);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v26);
  return sub_2499C0960(v14, (uint64_t (*)(void))type metadata accessor for Component);
}

uint64_t sub_2499BEFCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Component.init(from:)(a1, a2);
}

uint64_t sub_2499BEFE4@<X0>(uint64_t a1@<X8>)
{
  return sub_2498D6084(v1, a1, qword_2696DF810);
}

uint64_t Component.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE540);
  MEMORY[0x270FA5388](v4 - 8);
  CGFloat v50 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for Instrument();
  uint64_t v48 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v49 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2318);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499BF9B8();
  sub_249AEE468();
  LOBYTE(v55[0]) = 0;
  __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  sub_2499BFB04(&qword_2696E2320);
  uint64_t v14 = v58;
  sub_249AEDF08();
  if (v14) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  int v47 = v9;
  uint64_t v58 = v11;
  uint64_t v16 = (int *)type metadata accessor for Component();
  LOBYTE(v55[0]) = *(unsigned char *)(v2 + v16[5]);
  v54[0] = 1;
  sub_2499BFBD0();
  sub_249AEDF08();
  LOBYTE(v55[0]) = 2;
  sub_249AEDEB8();
  v55[0] = *(_OWORD *)(v2 + v16[7]);
  v54[0] = 3;
  type metadata accessor for CGSize(0);
  sub_2499BFC80(&qword_2696E19F8, type metadata accessor for CGSize);
  sub_249AEDF08();
  LOBYTE(v55[0]) = 4;
  sub_249AEDE38();
  uint64_t v17 = *(void *)(v2 + v16[8]);
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v45 = v13;
    uint64_t v19 = type metadata accessor for Slot();
    uint64_t v20 = v17
        + ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80));
    uint64_t v46 = *(void *)(*(void *)(v19 - 8) + 72);
    v48 += 6;
    uint64_t v44 = v17;
    swift_bridgeObjectRetain();
    uint64_t v21 = (uint64_t)v50;
    uint64_t v22 = (uint64_t)v47;
    while (1)
    {
      sub_2498D6084(v20 + *(int *)(v19 + 36), v21, &qword_2696DE540);
      if ((*v48)(v21, 1, v51) == 1)
      {
        sub_2498D60E8(v21, &qword_2696DE540);
      }
      else
      {
        sub_2499C09C0(v21, v22, (uint64_t (*)(void))type metadata accessor for Instrument);
        if (byte_2696E03A8)
        {
          if (byte_2696E03A8 != 1)
          {
            sub_2498A4990(v22 + *(int *)(v51 + 20), (uint64_t)v54);
            sub_2498A4990((uint64_t)v54, (uint64_t)v55);
            switch(sub_2498B8790((uint64_t)v55))
            {
              case 1u:
                char v39 = *(unsigned char *)(sub_2498B87AC((uint64_t)v55) + 496);
                sub_2499C0960(v22, (uint64_t (*)(void))type metadata accessor for Instrument);
                if (v39) {
                  goto LABEL_29;
                }
                goto LABEL_30;
              case 2u:
                uint64_t v40 = ~*(_DWORD *)(sub_2498B87AC((uint64_t)v55) + 40) & 0xFELL;
                goto LABEL_40;
              case 3u:
              case 4u:
              case 5u:
                sub_2498B87AC((uint64_t)v55);
                goto LABEL_13;
              case 8u:
                uint64_t v40 = *(void *)(sub_2498B87AC((uint64_t)v55) + 8);
LABEL_40:
                sub_2499C0960(v22, (uint64_t (*)(void))type metadata accessor for Instrument);
                if (!v40) {
                  goto LABEL_30;
                }
                goto LABEL_29;
              default:
                sub_2499C0960(v22, (uint64_t (*)(void))type metadata accessor for Instrument);
                goto LABEL_30;
            }
          }
          sub_2498A4990(v22 + *(int *)(v51 + 20), (uint64_t)v54);
          sub_2498A4990((uint64_t)v54, (uint64_t)v55);
          switch(sub_2498B8790((uint64_t)v55))
          {
            case 1u:
              char v26 = *(unsigned char *)(sub_2498B87AC((uint64_t)v55) + 496);
              uint64_t v27 = v22;
              uint64_t v28 = v49;
              sub_2499C08F8(v27, v49, (uint64_t (*)(void))type metadata accessor for Instrument);
              uint64_t v24 = v28;
              uint64_t v22 = (uint64_t)v47;
              if (v26) {
                goto LABEL_20;
              }
              goto LABEL_27;
            case 2u:
              uint64_t v29 = ~*(_DWORD *)(sub_2498B87AC((uint64_t)v55) + 40) & 0xFELL;
              goto LABEL_19;
            case 3u:
            case 4u:
            case 5u:
              sub_2498B87AC((uint64_t)v55);
              uint64_t v23 = v49;
              sub_2499C08F8(v22, v49, (uint64_t (*)(void))type metadata accessor for Instrument);
              uint64_t v24 = v23;
              goto LABEL_20;
            case 8u:
              uint64_t v29 = *(void *)(sub_2498B87AC((uint64_t)v55) + 8);
LABEL_19:
              uint64_t v31 = v22;
              uint64_t v32 = v49;
              sub_2499C08F8(v31, v49, (uint64_t (*)(void))type metadata accessor for Instrument);
              uint64_t v24 = v32;
              uint64_t v22 = (uint64_t)v47;
              if (!v29) {
                goto LABEL_27;
              }
LABEL_20:
              sub_2498A4990(v24 + *(int *)(v51 + 20), (uint64_t)v52);
              sub_2498A4990((uint64_t)v52, (uint64_t)v53);
              int v33 = sub_2498B8790((uint64_t)v53);
              if (v33 == 3)
              {
                uint64_t v37 = (uint64_t *)sub_2498B87AC((uint64_t)v53);
                uint64_t v35 = *v37;
                uint64_t v36 = v37[1];
              }
              else
              {
                if (v33 != 4)
                {
                  sub_2499C0960(v49, (uint64_t (*)(void))type metadata accessor for Instrument);
                  sub_2499C0960(v22, (uint64_t (*)(void))type metadata accessor for Instrument);
                  goto LABEL_30;
                }
                uint64_t v34 = sub_2498B87AC((uint64_t)v53);
                uint64_t v35 = *(void *)(v34 + 8);
                uint64_t v36 = *(void *)(v34 + 16);
              }
              if (v35 == 0x7765695673616461 && v36 == 0xE800000000000000)
              {
                uint64_t v24 = v49;
LABEL_27:
                sub_2499C0960(v24, (uint64_t (*)(void))type metadata accessor for Instrument);
                uint64_t v25 = v22;
                goto LABEL_28;
              }
              uint64_t v43 = v10;
              char v38 = sub_249AEE0D8();
              sub_2499C0960(v49, (uint64_t (*)(void))type metadata accessor for Instrument);
              uint64_t v22 = (uint64_t)v47;
              sub_2499C0960((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for Instrument);
              uint64_t v10 = v43;
              if (v38) {
                goto LABEL_29;
              }
              break;
            default:
              uint64_t v30 = v49;
              sub_2499C08F8(v22, v49, (uint64_t (*)(void))type metadata accessor for Instrument);
              uint64_t v24 = v30;
              goto LABEL_27;
          }
          goto LABEL_30;
        }
LABEL_13:
        uint64_t v25 = v22;
LABEL_28:
        sub_2499C0960(v25, (uint64_t (*)(void))type metadata accessor for Instrument);
      }
LABEL_29:
      __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v56, v57);
      sub_2499BFC80(&qword_2696E2330, (void (*)(uint64_t))type metadata accessor for Slot);
      sub_249AEDF78();
      uint64_t v21 = (uint64_t)v50;
      uint64_t v22 = (uint64_t)v47;
LABEL_30:
      v20 += v46;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v41 = v58;
        uint64_t v13 = v45;
        goto LABEL_43;
      }
    }
  }
  uint64_t v41 = v58;
LABEL_43:
  (*(void (**)(char *, uint64_t))(v41 + 8))(v13, v10);
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v56);
}

uint64_t sub_2499BF9A0(void *a1)
{
  return Component.encode(to:)(a1);
}

unint64_t sub_2499BF9B8()
{
  unint64_t result = qword_2696E22F0;
  if (!qword_2696E22F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E22F0);
  }
  return result;
}

unint64_t sub_2499BFA0C()
{
  unint64_t result = qword_2696E2300;
  if (!qword_2696E2300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2300);
  }
  return result;
}

unint64_t sub_2499BFA60()
{
  unint64_t result = qword_2696E2308;
  if (!qword_2696E2308)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFA08);
    sub_2499BFC80(&qword_2696E2310, (void (*)(uint64_t))type metadata accessor for Slot);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2308);
  }
  return result;
}

uint64_t sub_2499BFB04(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_2696DF810);
    uint64_t v3 = (void (*)(uint64_t))MEMORY[0x263F07508];
    sub_2499BFC80(&qword_2696DF428, MEMORY[0x263F07508]);
    sub_2499BFC80(&qword_2696DF430, v3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499BFBD0()
{
  unint64_t result = qword_2696E2328;
  if (!qword_2696E2328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2328);
  }
  return result;
}

unint64_t sub_2499BFC28()
{
  unint64_t result = qword_2696E2338;
  if (!qword_2696E2338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2338);
  }
  return result;
}

uint64_t sub_2499BFC80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 sub_2499BFCC8@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *(__n128 *)(a1 + *(int *)(type metadata accessor for Component() + 28));
  *a2 = result;
  return result;
}

unsigned char *storeEnumTagSinglePayload for ComponentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499BFDD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentType()
{
  return &type metadata for ComponentType;
}

void *initializeBufferWithCopyOfBuffer for Component(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_249AEB808();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    uint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[8];
    *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
    *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Component(uint64_t a1)
{
  uint64_t v2 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Component(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Component(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Component(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for Component(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Component(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499C0270);
}

uint64_t sub_2499C0270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for Component(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499C034C);
}

uint64_t sub_2499C034C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(qword_2696DF810);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_2499C0410()
{
  uint64_t result = sub_249AEB808();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Component.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499C0594);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Component.CodingKeys()
{
  return &type metadata for Component.CodingKeys;
}

unint64_t sub_2499C05D0()
{
  unint64_t result = qword_2696E2350;
  if (!qword_2696E2350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2350);
  }
  return result;
}

unint64_t sub_2499C0628()
{
  unint64_t result = qword_2696E2358;
  if (!qword_2696E2358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2358);
  }
  return result;
}

unint64_t sub_2499C0680()
{
  unint64_t result = qword_2696E2360;
  if (!qword_2696E2360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2360);
  }
  return result;
}

uint64_t sub_2499C06D4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73746F6C73 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_2499C08A4()
{
  unint64_t result = qword_2696E2368;
  if (!qword_2696E2368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2368);
  }
  return result;
}

uint64_t sub_2499C08F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2499C0960(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2499C09C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2499C0A28(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2499C0A88()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2499C0AC0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_2499C0B08())()
{
  return j__swift_endAccess;
}

uint64_t LuaEncoder.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_2498ECB24(MEMORY[0x263F8EE78]);
  return v0;
}

uint64_t LuaEncoder.init()()
{
  *(void *)(v0 + 16) = sub_2498ECB24(MEMORY[0x263F8EE78]);
  return v0;
}

uint64_t sub_2499C0BC8()
{
  uint64_t v1 = sub_249AED118();
  uint64_t v17 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = type metadata accessor for _LuaEncoder();
  char v6 = (void *)swift_allocObject();
  v6[4] = 0;
  v6[2] = MEMORY[0x263F8EE78];
  v6[3] = v4;
  v6[5] = 0;
  swift_bridgeObjectRetain();
  void v18[3] = v5;
  v18[4] = sub_2499C1458((unint64_t *)&qword_2696E16F8, v7, (void (*)(uint64_t))type metadata accessor for _LuaEncoder);
  v18[0] = v6;
  swift_retain();
  uint64_t v8 = v18[9];
  sub_249AECF08();
  if (v8)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
    return v1;
  }
  uint64_t v9 = v1;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
  if (v6[4])
  {
    uint64_t v10 = v6[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
    swift_unknownObjectRetain();
    v12(ObjectType, v10);
    swift_unknownObjectRelease();
  }
  sub_249AED108();
  uint64_t v1 = sub_249AED0E8();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v3, v9);
  if (v14 >> 60 != 15)
  {
    swift_release();
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for _LuaEncoder()
{
  return self;
}

uint64_t LuaEncoder.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t LuaEncoder.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2499C0EB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2499C0BC8();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_2499C0EE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  *a2 = *(void *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for LuaEncoder()
{
  return self;
}

uint64_t method lookup function for LuaEncoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LuaEncoder);
}

uint64_t dispatch thunk of LuaEncoder.userInfo.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

uint64_t dispatch thunk of LuaEncoder.userInfo.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t dispatch thunk of LuaEncoder.userInfo.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of LuaEncoder.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of LuaEncoder.encode<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t sub_2499C1028()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_2499C1070()
{
  if (v0[4])
  {
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  else
  {
    _s14KeyedContainerCMa();
    uint64_t v1 = v0[2];
    uint64_t v2 = v0[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v0[4] = sub_24998A1B8(v1, v2);
    v0[5] = &off_26FDAB6A8;
    swift_retain();
    swift_unknownObjectRelease();
    swift_getWitnessTable();
    return sub_249AEDF28();
  }
  return result;
}

uint64_t sub_2499C1184@<X0>(void *a1@<X8>)
{
  if (v1[4])
  {
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  else
  {
    uint64_t v3 = v1[2];
    uint64_t v4 = v1[3];
    uint64_t v5 = _s16UnkeyedContainerCMa();
    char v6 = (void *)swift_allocObject();
    v6[2] = MEMORY[0x263F8EE78];
    v6[3] = v3;
    v6[4] = v4;
    v1[4] = v6;
    v1[5] = &off_26FDB0E08;
    a1[3] = v5;
    a1[4] = sub_2499C1458(&qword_2696E1700, 255, (void (*)(uint64_t))_s16UnkeyedContainerCMa);
    *a1 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2499C12B0@<X0>(uint64_t *a1@<X8>)
{
  if (v1[4])
  {
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  else
  {
    uint64_t v3 = v1[2];
    uint64_t v4 = v1[3];
    uint64_t v5 = _s20SingleValueContainerCMa();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = 0;
    *(void *)(v6 + 24) = 0xE000000000000000;
    *(unsigned char *)(v6 + 32) = 1;
    *(void *)(v6 + 40) = v3;
    *(void *)(v6 + 48) = v4;
    v1[4] = v6;
    v1[5] = &off_26FDAE250;
    a1[3] = v5;
    a1[4] = sub_2499C1458(&qword_2696E1708, 255, (void (*)(uint64_t))_s20SingleValueContainerCMa);
    *a1 = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_2499C13E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2499C13EC()
{
  return sub_2499C1070();
}

uint64_t sub_2499C1410@<X0>(void *a1@<X8>)
{
  return sub_2499C1184(a1);
}

uint64_t sub_2499C1434@<X0>(uint64_t *a1@<X8>)
{
  return sub_2499C12B0(a1);
}

uint64_t sub_2499C1458(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double OutsideTemperature.ViewModel.value.getter()
{
  return *(double *)v0;
}

double OutsideTemperature.ViewModel.bounds.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t OutsideTemperature.ViewModel.gradient.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t OutsideTemperature.ViewModel.init(value:bounds:gradient:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>, double a5@<D2>)
{
  *(double *)a2 = a3;
  *(double *)(a2 + 8) = a4;
  *(double *)(a2 + 16) = a5;
  *(void *)(a2 + 24) = result;
  return result;
}

uint64_t OutsideTemperature.ViewModel.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_249AEE378();
  sub_2498ACC00();
  if (!v1) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECB98();

  return swift_bridgeObjectRelease();
}

uint64_t OutsideTemperature.ViewModel.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_249AEE338();
  sub_249AEE378();
  sub_2498ACC00();
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249AECB98();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t sub_2499C1630()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_249AEE378();
  sub_2498ACC00();
  if (!v1) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECB98();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2499C16E4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_249AEE338();
  sub_249AEE378();
  sub_2498ACC00();
  sub_249AEE358();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_249AECB98();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t OutsideTemperature.viewModel.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t OutsideTemperature.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2370);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2378);
  uint64_t v6 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2380);
  MEMORY[0x270FA5388](v27);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2388);
  MEMORY[0x270FA5388](v28);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v14 = *(double *)v1;
  uint64_t v13 = *(void *)(v1 + 8);
  double v15 = *(double *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  double v44 = v15;
  double v45 = v14;
  uint64_t v43 = v13;
  double v39 = v14;
  uint64_t v40 = v13;
  double v41 = v15;
  uint64_t v42 = v16;
  double v35 = v14;
  uint64_t v36 = v13;
  double v37 = v15;
  uint64_t v38 = v16;
  double v31 = v14;
  uint64_t v32 = v13;
  double v33 = v15;
  uint64_t v34 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2390);
  sub_2498D0A3C(&qword_2696E2398, &qword_2696E2390);
  sub_249957448();
  sub_249AEC958();
  uint64_t v43 = v16;
  sub_2498D0A3C(&qword_2696E23A0, &qword_2696E2370);
  sub_2499A59AC();
  sub_249AEC6A8();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v15 * 0.75 >= v14) {
    uint64_t v17 = sub_249AEC8A8();
  }
  else {
    uint64_t v17 = sub_249AEC858();
  }
  uint64_t v18 = v17;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v43 = v18;
  swift_retain();
  uint64_t v20 = sub_249AEBBF8();
  uint64_t v21 = v29;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v10, v8, v29);
  swift_release();
  uint64_t v22 = (uint64_t *)&v10[*(int *)(v27 + 36)];
  *uint64_t v22 = KeyPath;
  v22[1] = v20;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v21);
  uint64_t v23 = sub_249AEC8B8();
  uint64_t v24 = swift_getKeyPath();
  sub_2498D6084((uint64_t)v10, (uint64_t)v12, &qword_2696E2380);
  uint64_t v25 = (uint64_t *)&v12[*(int *)(v28 + 36)];
  *uint64_t v25 = v24;
  v25[1] = v23;
  sub_2498D60E8((uint64_t)v10, &qword_2696E2380);
  return sub_249882788((uint64_t)v12, v30, &qword_2696E2388);
}

uint64_t sub_2499C1C4C()
{
  sub_249AEC0E8();

  return sub_249AEC9D8();
}

uint64_t sub_2499C1CC0@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v4 = sub_249AEC0D8();
  MEMORY[0x270FA5388](v4 - 8);
  sub_249AEC0C8();
  uint64_t result = sub_249AEC0B8();
  if ((~*(void *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 < 9.22337204e18)
  {
    sub_249AEC098();
    sub_249AEC0B8();
    sub_249AEC0F8();
    uint64_t result = sub_249AEC658();
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7 & 1;
    *(void *)(a1 + 24) = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_2499C1E10@<X0>(uint64_t a1@<X8>, double a2@<D1>)
{
  uint64_t v4 = sub_249AEC0D8();
  MEMORY[0x270FA5388](v4 - 8);
  sub_249AEC0C8();
  uint64_t result = sub_249AEC0B8();
  if ((~*(void *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 < 9.22337204e18)
  {
    sub_249AEC098();
    sub_249AEC0B8();
    sub_249AEC0F8();
    uint64_t result = sub_249AEC658();
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7 & 1;
    *(void *)(a1 + 24) = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_2499C1F60@<X0>(uint64_t a1@<X8>, double a2@<D2>)
{
  uint64_t v4 = sub_249AEC0D8();
  MEMORY[0x270FA5388](v4 - 8);
  sub_249AEC0C8();
  uint64_t result = sub_249AEC0B8();
  if ((~*(void *)&a2 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (a2 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 < 9.22337204e18)
  {
    sub_249AEC098();
    sub_249AEC0B8();
    sub_249AEC0F8();
    uint64_t result = sub_249AEC658();
    *(void *)a1 = result;
    *(void *)(a1 + 8) = v6;
    *(unsigned char *)(a1 + 16) = v7 & 1;
    *(void *)(a1 + 24) = v8;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_2499C20B4()
{
  uint64_t v1 = v0;
  long long v13 = *(_OWORD *)v0;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  sub_2498D5C64((uint64_t)&v13);
  if (!v12)
  {
    sub_2498D60E8((uint64_t)v11, &qword_2696DF130);
    goto LABEL_9;
  }
  sub_249882C34((uint64_t)v11, (uint64_t)v8);
  sub_2498D60E8((uint64_t)v11, &qword_2696DF130);
  uint64_t v2 = v9;
  uint64_t v3 = v10;
  __swift_project_boxed_opaque_existential_2Tm(v8, v9);
  double v4 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3));
  LOBYTE(v2) = v5;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v8);
  if (v2)
  {
LABEL_9:
    if (v1[2] <= 0.0 && v1[3] >= 0.0) {
      return;
    }
    goto LABEL_11;
  }
  if (v1[2] > v4 || v1[3] < v4)
  {
LABEL_11:
    sub_249AED7C8();
    if (qword_2696DD650 != -1) {
      swift_once();
    }
    swift_beginAccess();
    id v7 = (id)qword_2696E1920;
    sub_249AEB898();
  }
}

uint64_t sub_2499C22B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v53 = a1;
  uint64_t v3 = sub_249AEC0D8();
  MEMORY[0x270FA5388](v3 - 8);
  double v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2418);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2420);
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  MEMORY[0x270FA5388](v7);
  CGFloat v50 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2428);
  MEMORY[0x270FA5388](v47);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2430);
  MEMORY[0x270FA5388](v49);
  uint64_t v48 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v57 = *(_OWORD *)v1;
  double v13 = v1[2];
  double v12 = v1[3];
  uint64_t v14 = v4[20];
  double v15 = &v6[v4[19]];
  uint64_t v46 = v4[21];
  type metadata accessor for InstrumentDataSource();
  sub_249939AD0();
  swift_retain_n();
  *(void *)uint64_t v6 = sub_249AEBD48();
  *((void *)v6 + 1) = v16;
  *((double *)v6 + 2) = v13;
  *((double *)v6 + 3) = v12;
  sub_249AEC0E8();
  sub_249AEC9D8();
  sub_2499C28D4((uint64_t)&v54);
  uint64_t v17 = v55;
  uint64_t v18 = v56;
  *(_OWORD *)double v15 = v54;
  *((void *)v15 + 2) = v17;
  *((void *)v15 + 3) = v18;
  sub_249AEC0C8();
  uint64_t result = sub_249AEC0B8();
  if ((~*(void *)&v13 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v20 = (uint64_t *)&v6[v14];
  *(void *)&long long v54 = (uint64_t)v13;
  sub_249AEC098();
  sub_249AEC0B8();
  sub_249AEC0F8();
  *uint64_t v20 = sub_249AEC658();
  v20[1] = v21;
  v20[2] = v22 & 1;
  v20[3] = v23;
  sub_249AEC0C8();
  uint64_t result = sub_249AEC0B8();
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v12 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v24 = (uint64_t *)&v6[v46];
  *(void *)&long long v54 = (uint64_t)v12;
  sub_249AEC098();
  sub_249AEC0B8();
  sub_249AEC0F8();
  uint64_t v25 = sub_249AEC658();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30 & 1;
  sub_2498D5C64((uint64_t)&v57);
  *uint64_t v24 = v25;
  v24[1] = v27;
  void v24[2] = v31;
  void v24[3] = v29;
  *(double *)&long long v54 = v2[4];
  sub_2498D0A3C(&qword_2696E2438, &qword_2696E2418);
  sub_2499A59AC();
  uint64_t v32 = v50;
  sub_249AEC6A8();
  sub_2498D60E8((uint64_t)v6, &qword_2696E2418);
  sub_2499C20B4();
  if (v12 * 0.75 >= v33) {
    uint64_t v34 = sub_249AEC8A8();
  }
  else {
    uint64_t v34 = sub_249AEC858();
  }
  uint64_t v35 = v34;
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&long long v54 = v35;
  swift_retain();
  uint64_t v37 = sub_249AEBBF8();
  uint64_t v39 = v51;
  uint64_t v38 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v10, v32, v52);
  swift_release();
  uint64_t v40 = (uint64_t *)&v10[*(int *)(v47 + 36)];
  *uint64_t v40 = KeyPath;
  v40[1] = v37;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v32, v38);
  uint64_t v41 = sub_249AEC8B8();
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = v48;
  sub_2498D6084((uint64_t)v10, v48, &qword_2696E2428);
  double v44 = (uint64_t *)(v43 + *(int *)(v49 + 36));
  *double v44 = v42;
  v44[1] = v41;
  sub_2498D60E8((uint64_t)v10, &qword_2696E2428);
  return sub_249882788(v43, v53, &qword_2696E2430);
}

void sub_2499C28D4(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_249AEC0D8();
  MEMORY[0x270FA5388](v2 - 8);
  sub_249AEC0C8();
  sub_249AEC0B8();
  sub_2499C20B4();
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 < 9.22337204e18)
  {
    sub_249AEC098();
    sub_249AEC0B8();
    sub_249AEC0F8();
    *(void *)a1 = sub_249AEC658();
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = v5 & 1;
    *(void *)(a1 + 24) = v6;
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_2499C2A34@<X0>(uint64_t a1@<X8>)
{
  return sub_2499C22B8(a1);
}

uint64_t sub_2499C2A70()
{
  if (qword_2696DD4D0 != -1) {
    swift_once();
  }
  uint64_t v0 = off_2696E12C8;
  uint64_t v1 = (char *)off_2696E12C8 + *(void *)(*(void *)off_2696E12C8 + 152);
  uint64_t v2 = (char *)off_2696E12C8 + *(void *)(*(void *)off_2696E12C8 + 112);

  return sub_249A63F38(v0, (uint64_t)v1, (uint64_t)v2);
}

uint64_t static OutsideTemperatureDataSource_Previews.previews.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E23A8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_249AEBC98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_249AEC128();
  sub_2499C2D48((uint64_t)v23);
  uint64_t v10 = v23[0];
  uint64_t v9 = v23[1];
  uint64_t v11 = v23[2];
  uint64_t v12 = v23[3];
  uint64_t v13 = v23[4];
  uint64_t v21 = v23[5];
  uint64_t v14 = v23[6];
  uint64_t v15 = v23[7];
  uint64_t v16 = v23[8];
  uint64_t v17 = v23[9];
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F049B8], v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E23B0);
  sub_2498D6084((uint64_t)v4, a1 + *(int *)(v18 + 36), &qword_2696E23A8);
  *(void *)a1 = v22;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  uint64_t v19 = v21;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v19;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2498D60E8((uint64_t)v4, &qword_2696E23A8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2499C2D48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1530);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499C3C64();
  uint64_t v5 = type metadata accessor for InstrumentDataSource();
  sub_249939AD0();
  uint64_t v25 = v5;
  sub_249AEBB28();
  sub_2499C3C6C();
  if (qword_2696DD4D0 != -1) {
    swift_once();
  }
  sub_2498D6084((uint64_t)off_2696E12C8 + *(void *)(*(void *)off_2696E12C8 + 152), (uint64_t)v4, &qword_2696E1530);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFF08);
  sub_249AEB5E8();
  double v7 = v6;
  uint64_t result = sub_249AEB5E8();
  if (v7 > v9)
  {
    __break(1u);
  }
  else
  {
    double v10 = v9;
    sub_2498D60E8((uint64_t)v4, &qword_2696E1530);
    uint64_t v11 = sub_249AEBD48();
    uint64_t v23 = v12;
    uint64_t v24 = v11;
    sub_2499C3C64();
    v22[1] = sub_249AEBB28();
    sub_2499C3C6C();
    sub_2498D6084((uint64_t)off_2696E12C8 + *(void *)(*(void *)off_2696E12C8 + 152), (uint64_t)v4, &qword_2696E1530);
    sub_249AEB5E8();
    double v14 = v13;
    uint64_t result = sub_249AEB5E8();
    if (v14 <= v15)
    {
      double v16 = v15;
      sub_2498D60E8((uint64_t)v4, &qword_2696E1530);
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21D8);
      uint64_t v17 = swift_allocObject();
      *(_OWORD *)(v17 + 16) = xmmword_249AFF3D0;
      *(void *)(v17 + 32) = sub_249AEC868();
      *(void *)(v17 + 40) = sub_249AEC8A8();
      *(void *)(v17 + 48) = sub_249AEC8A8();
      *(void *)(v17 + 56) = sub_249AEC8C8();
      *(void *)(v17 + 64) = sub_249AEC858();
      uint64_t v26 = v17;
      sub_249AED448();
      uint64_t v18 = MEMORY[0x24C5ADD20](v26);
      uint64_t v19 = sub_249AEBD48();
      uint64_t v20 = v23;
      *(void *)a1 = v24;
      *(void *)(a1 + 8) = v20;
      *(double *)(a1 + 16) = v7;
      *(double *)(a1 + 24) = v10;
      *(void *)(a1 + 32) = 0;
      *(void *)(a1 + 40) = v19;
      *(void *)(a1 + 48) = v21;
      *(double *)(a1 + 56) = v14;
      *(double *)(a1 + 64) = v16;
      *(void *)(a1 + 72) = v18;
      return swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2499C307C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E23A8);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_249AEBC98();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_249AEC128();
  sub_2499C2D48((uint64_t)v23);
  uint64_t v10 = v23[0];
  uint64_t v9 = v23[1];
  uint64_t v11 = v23[2];
  uint64_t v12 = v23[3];
  uint64_t v13 = v23[4];
  uint64_t v21 = v23[5];
  uint64_t v14 = v23[6];
  uint64_t v15 = v23[7];
  uint64_t v16 = v23[8];
  uint64_t v17 = v23[9];
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F049B8], v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v8, v5);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E23B0);
  sub_2498D6084((uint64_t)v4, a1 + *(int *)(v18 + 36), &qword_2696E23A8);
  *(void *)a1 = v22;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v10;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v11;
  *(void *)(a1 + 48) = v12;
  uint64_t v19 = v21;
  *(void *)(a1 + 56) = v13;
  *(void *)(a1 + 64) = v19;
  *(void *)(a1 + 72) = v14;
  *(void *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v17;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_2498D60E8((uint64_t)v4, &qword_2696E23A8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_2499C32C4(uint64_t a1)
{
  unint64_t v2 = sub_2499C3C10();

  return MEMORY[0x270F00208](a1, v2);
}

uint64_t sub_2499C3310(uint64_t a1)
{
  unint64_t v2 = sub_2499C3C10();

  return MEMORY[0x270F001F8](a1, v2);
}

uint64_t sub_2499C335C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AEBEA8();
  *a1 = result;
  return result;
}

uint64_t sub_2499C3388()
{
  return sub_249AEBEB8();
}

BOOL _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  uint64_t v5 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24))
  {
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = swift_bridgeObjectRetain();
      char v7 = MEMORY[0x24C5ADD00](v6, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7) {
        return 1;
      }
    }
    return 0;
  }
  return !v5;
}

uint64_t sub_2499C344C@<X0>(uint64_t a1@<X8>)
{
  return sub_2499C1CC0(a1, *(double *)(v1 + 16));
}

uint64_t sub_2499C345C@<X0>(uint64_t a1@<X8>)
{
  return sub_2499C1E10(a1, *(double *)(v1 + 24));
}

uint64_t sub_2499C346C@<X0>(uint64_t a1@<X8>)
{
  return sub_2499C1F60(a1, *(double *)(v1 + 32));
}

uint64_t sub_2499C347C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AEBF68();
  *a1 = result;
  return result;
}

uint64_t sub_2499C34A8()
{
  return sub_249AEBF78();
}

uint64_t sub_2499C34D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_249AEBEA8();
  *a1 = result;
  return result;
}

uint64_t sub_2499C3500()
{
  return sub_249AEBEB8();
}

unint64_t sub_2499C3530()
{
  unint64_t result = qword_2696E23B8;
  if (!qword_2696E23B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E23B8);
  }
  return result;
}

uint64_t sub_2499C3584()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2499C35A4()
{
  unint64_t result = qword_2696E23C0;
  if (!qword_2696E23C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E23C0);
  }
  return result;
}

uint64_t sub_2499C35F8()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for OutsideTemperature()
{
  return &type metadata for OutsideTemperature;
}

uint64_t destroy for OutsideTemperature.ViewModel()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwcp_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

void *_s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s14CarPlayAssetUI18OutsideTemperatureV9ViewModelVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OutsideTemperature.ViewModel()
{
  return &type metadata for OutsideTemperature.ViewModel;
}

ValueMetadata *type metadata accessor for OutsideTemperatureDataSource_Previews()
{
  return &type metadata for OutsideTemperatureDataSource_Previews;
}

uint64_t sub_2499C37E8()
{
  return sub_2499C3CB0(&qword_2696E23C8, &qword_2696E2388, (void (*)(void))sub_2499C3824);
}

unint64_t sub_2499C3824()
{
  unint64_t result = qword_2696E23D0;
  if (!qword_2696E23D0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2380);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2370);
    sub_2498D0A3C(&qword_2696E23A0, &qword_2696E2370);
    sub_2499A59AC();
    swift_getOpaqueTypeConformance2();
    sub_2498D0A3C(&qword_2696E23D8, &qword_2696E23E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E23D0);
  }
  return result;
}

unint64_t sub_2499C393C()
{
  unint64_t result = qword_2696E23F8;
  if (!qword_2696E23F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E23B0);
    sub_2498D0A3C(&qword_2696E2400, &qword_2696E2408);
    sub_2498D0A3C(&qword_2696E2410, &qword_2696E23A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E23F8);
  }
  return result;
}

uint64_t destroy for OutsideTemperatureDataSource()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for OutsideTemperatureDataSource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for OutsideTemperatureDataSource(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for OutsideTemperatureDataSource(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OutsideTemperatureDataSource(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OutsideTemperatureDataSource(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OutsideTemperatureDataSource()
{
  return &type metadata for OutsideTemperatureDataSource;
}

uint64_t sub_2499C3BEC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_2499C3C10()
{
  unint64_t result = qword_2696E2440;
  if (!qword_2696E2440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2440);
  }
  return result;
}

uint64_t sub_2499C3C64()
{
  return swift_retain();
}

uint64_t sub_2499C3C6C()
{
  return swift_release();
}

uint64_t sub_2499C3C74()
{
  return sub_2499C3CB0(&qword_2696E2448, &qword_2696E2430, (void (*)(void))sub_2499C3D54);
}

uint64_t sub_2499C3CB0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    sub_2498D0A3C(&qword_2696E23E8, &qword_2696E23F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499C3D54()
{
  unint64_t result = qword_2696E2450;
  if (!qword_2696E2450)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2428);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2418);
    sub_2498D0A3C(&qword_2696E2438, &qword_2696E2418);
    sub_2499A59AC();
    swift_getOpaqueTypeConformance2();
    sub_2498D0A3C(&qword_2696E23D8, &qword_2696E23E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2450);
  }
  return result;
}

CarPlayAssetUI::Texture::ContentMode_optional __swiftcall Texture.ContentMode.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (CarPlayAssetUI::Texture::ContentMode_optional)rawValue;
}

uint64_t Texture.ContentMode.rawValue.getter()
{
  return *v0;
}

void *sub_2499C3E90@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_2499C3EB0(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_2499C3EBC()
{
  return sub_249AED3B8();
}

uint64_t sub_2499C3F1C()
{
  return sub_249AED358();
}

void *Texture.imageAsset.getter@<X0>(void *a1@<X8>)
{
  char v2 = *(void **)v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void **)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  *a1 = *(void *)v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_249882468(v2, v3, v4, v5, v6);
}

__n128 Texture.imageAsset.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  uint64_t v3 = *((void *)a1 + 5);
  sub_2498826D0(*(void **)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
  __n128 result = v5;
  *(_OWORD *)uint64_t v1 = v6;
  *(__n128 *)(v1 + 16) = v5;
  *(void *)(v1 + 32) = v2;
  *(void *)(v1 + 40) = v3;
  return result;
}

uint64_t (*Texture.imageAsset.modify())()
{
  return nullsub_1;
}

void Texture.contentMode.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 48);
}

unsigned char *Texture.contentMode.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 48) = *result;
  return result;
}

uint64_t (*Texture.contentMode.modify())()
{
  return nullsub_1;
}

uint64_t Texture.name.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Texture.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 56) = a1;
  *(void *)(v2 + 64) = a2;
  return result;
}

uint64_t (*Texture.name.modify())()
{
  return nullsub_1;
}

__n128 Texture.init(imageAsset:contentMode:name:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  char v5 = *a2;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v6;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a5 + 32) = result;
  *(unsigned char *)(a5 + 48) = v5;
  *(void *)(a5 + 56) = a3;
  *(void *)(a5 + 64) = a4;
  return result;
}

uint64_t Texture.identifier.getter()
{
  if ((~*((_DWORD *)v0 + 8) & 0xFELL) == 0) {
    return 0x546E776F6E6B6E55;
  }
  if ((v0[4] & 0x80) != 0) {
    uint64_t v1 = v0[1];
  }
  else {
    uint64_t v1 = *v0;
  }
  swift_bridgeObjectRetain();
  return v1;
}

void Texture.assetType.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

void Texture.destination.getter(void *a1@<X8>)
{
  *a1 = 4;
}

uint64_t Texture.assets.getter()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  if ((~*(_DWORD *)(v0 + 32) & 0xFELL) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_249AF0A70;
    *(void *)(v7 + 56) = &type metadata for ImageAsset;
    *(void *)(v7 + 64) = &protocol witness table for ImageAsset;
    uint64_t v8 = swift_allocObject();
    *(void *)(v7 + 32) = v8;
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = v1;
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v4;
    *(unsigned char *)(v8 + 48) = v5;
    *(void *)(v8 + 56) = v6;
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  sub_249882468(v2, v1, v3, v4, v5);
  return v7;
}

uint64_t sub_2499C4248()
{
  sub_2498826E4(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return MEMORY[0x270FA0238](v0, 64, 7);
}

void Texture.restoreAssets(from:)(void *a1)
{
  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) != 0) {
    ImageAsset.restore(from:)(a1);
  }
}

uint64_t sub_2499C42B0()
{
  uint64_t v1 = 0x4D746E65746E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 1701667182;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7373416567616D69;
  }
}

uint64_t sub_2499C4310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499C5908(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499C4338(uint64_t a1)
{
  unint64_t v2 = sub_2499C45A0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C4374(uint64_t a1)
{
  unint64_t v2 = sub_2499C45A0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t Texture.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2458);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v14 = v1[1];
  long long v15 = v7;
  uint64_t v8 = *((void *)v1 + 4);
  uint64_t v9 = *((void *)v1 + 5);
  int v21 = *((unsigned __int8 *)v1 + 48);
  uint64_t v10 = *((void *)v1 + 7);
  v13[0] = *((void *)v1 + 8);
  v13[1] = v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499C45A0();
  sub_249AEE468();
  long long v17 = v15;
  long long v18 = v14;
  uint64_t v19 = v8;
  uint64_t v20 = v9;
  char v22 = 0;
  sub_24989D190();
  uint64_t v11 = v16;
  sub_249AEDEA8();
  if (!v11)
  {
    LOBYTE(v17) = v21;
    char v22 = 1;
    sub_2499C45F4();
    sub_249AEDF08();
    LOBYTE(v17) = 2;
    sub_249AEDE58();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_2499C45A0()
{
  unint64_t result = qword_2696E2460;
  if (!qword_2696E2460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2460);
  }
  return result;
}

unint64_t sub_2499C45F4()
{
  unint64_t result = qword_2696E2468;
  if (!qword_2696E2468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2468);
  }
  return result;
}

uint64_t Texture.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2470);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499C45A0();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2498826D0(0, 0, 0, 0, 254);
  }
  else
  {
    char v34 = 0;
    sub_24989D2E8();
    sub_249AEDDA8();
    uint64_t v23 = a2;
    uint64_t v10 = v27;
    uint64_t v11 = v28;
    uint64_t v12 = v31;
    char v34 = 1;
    uint64_t v24 = v29;
    uint64_t v25 = v30;
    uint64_t v26 = v32;
    sub_249882468(v27, v28, v29, v30, v31);
    sub_2499C497C();
    sub_249AEDE08();
    int v33 = v27;
    LOBYTE(v27) = 2;
    uint64_t v13 = sub_249AEDD58();
    uint64_t v15 = v14;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v22 = v13;
    v16(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v18 = v24;
    uint64_t v17 = v25;
    uint64_t v19 = v26;
    sub_249882468(v10, v11, v24, v25, v12);
    sub_2498826D0(v10, v11, v18, v17, v12);
    uint64_t v20 = v23;
    *uint64_t v23 = v10;
    v20[1] = v11;
    v20[2] = v18;
    v20[3] = v17;
    v20[4] = v12;
    v20[5] = v19;
    *((unsigned char *)v20 + 48) = v33;
    v20[7] = v22;
    v20[8] = v15;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    sub_2498826D0(v10, v11, v18, v17, v12);
  }
  return swift_bridgeObjectRelease();
}

unint64_t sub_2499C497C()
{
  unint64_t result = qword_2696E2478;
  if (!qword_2696E2478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2478);
  }
  return result;
}

uint64_t sub_2499C49D0()
{
  uint64_t v2 = *(void **)v0;
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  if ((~*(_DWORD *)(v0 + 32) & 0xFELL) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DE370);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_249AF0A70;
    *(void *)(v7 + 56) = &type metadata for ImageAsset;
    *(void *)(v7 + 64) = &protocol witness table for ImageAsset;
    uint64_t v8 = swift_allocObject();
    *(void *)(v7 + 32) = v8;
    *(void *)(v8 + 16) = v2;
    *(void *)(v8 + 24) = v1;
    *(void *)(v8 + 32) = v3;
    *(void *)(v8 + 40) = v4;
    *(unsigned char *)(v8 + 48) = v5;
    *(void *)(v8 + 56) = v6;
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE78];
  }
  sub_249882468(v2, v1, v3, v4, v5);
  return v7;
}

void sub_2499C4AAC(void *a1)
{
  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) != 0) {
    ImageAsset.restore(from:)(a1);
  }
}

uint64_t sub_2499C4AD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Texture.init(from:)(a1, a2);
}

uint64_t sub_2499C4AEC(void *a1)
{
  return Texture.encode(to:)(a1);
}

uint64_t Texture.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(void *)(v1 + 64);
  if ((~*(_DWORD *)(v1 + 32) & 0xFELL) != 0)
  {
    uint64_t v6 = *(void **)(v1 + 16);
    uint64_t v5 = *(void *)(v1 + 24);
    uint64_t v7 = *(void **)v1;
    uint64_t v8 = *(void *)(v1 + 8);
    sub_249AEE358();
    sub_24988247C(v7, v8, v6, v5, v3);
    ImageAsset.ImageType.hash(into:)(a1);
    sub_249AEE348();
    sub_2498826D0(v7, v8, v6, v5, v3);
  }
  else
  {
    sub_249AEE358();
  }
  sub_249AEE348();
  if (!v4) {
    return sub_249AEE358();
  }
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t Texture.hashValue.getter()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  int v6 = ~*(_DWORD *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 64);
  sub_249AEE338();
  sub_249AEE358();
  if ((v6 & 0xFE) != 0)
  {
    sub_24988247C(v1, v2, v3, v4, v5);
    ImageAsset.ImageType.hash(into:)((uint64_t)v9);
    sub_249AEE348();
    sub_2498826D0(v1, v2, v3, v4, v5);
  }
  sub_249AEE348();
  sub_249AEE358();
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t sub_2499C4DA4()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  int v6 = ~*(_DWORD *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 64);
  sub_249AEE338();
  sub_249AEE358();
  if ((v6 & 0xFE) != 0)
  {
    sub_24988247C(v1, v2, v3, v4, v5);
    ImageAsset.ImageType.hash(into:)((uint64_t)v9);
    sub_249AEE348();
    sub_2498826D0(v1, v2, v3, v4, v5);
  }
  sub_249AEE348();
  sub_249AEE358();
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

BOOL _s14CarPlayAssetUI7TextureV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v39 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v10 = *(void **)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v12 = *(void **)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  int v14 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v15 = v13 & 0xFE;
  uint64_t v16 = *(void *)(a2 + 56);
  uint64_t v17 = *(void *)(a2 + 64);
  if ((~*(_DWORD *)(a1 + 32) & 0xFELL) == 0)
  {
    long long v18 = *(void **)a1;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = *(void **)(a1 + 16);
    uint64_t v21 = *(void *)(a1 + 24);
    if (v15 == 254)
    {
      if (*(unsigned __int8 *)(a1 + 48) != v14) {
        return 0;
      }
LABEL_11:
      if (v8) {
        return v17 && (v7 == v16 && v8 == v17 || (sub_249AEE0D8() & 1) != 0);
      }
      return !v17;
    }
LABEL_7:
    uint64_t v38 = v11;
    uint64_t v27 = v12;
    sub_249882468(v10, v9, v12, v11, v13);
    sub_2498826D0(v18, v19, v20, v21, v6);
    sub_2498826D0(v10, v9, v27, v38, v13);
    return 0;
  }
  uint64_t v36 = *(void *)(a2 + 40);
  if (v15 == 254)
  {
    uint64_t v37 = *(void *)(a2 + 24);
    uint64_t v22 = *(void **)(a2 + 16);
    uint64_t v23 = *(void *)(a1 + 24);
    sub_24988247C(v3, v2, v5, v4, v6);
    sub_24988247C(v3, v2, v5, v23, v6);
    long long v18 = v3;
    uint64_t v24 = v3;
    uint64_t v19 = v2;
    uint64_t v25 = v2;
    uint64_t v20 = v5;
    uint64_t v26 = v5;
    uint64_t v21 = v23;
    sub_2498826E4(v24, v25, v26, v23, v6);
    uint64_t v12 = v22;
    uint64_t v11 = v37;
    goto LABEL_7;
  }
  int v31 = *(unsigned __int8 *)(a1 + 48);
  uint64_t v32 = *(void *)(a2 + 56);
  uint64_t v33 = *(void *)(a2 + 64);
  uint64_t v34 = *(void *)(a1 + 56);
  uint64_t v35 = *(void *)(a1 + 64);
  v42[0] = *(void *)a1;
  v42[1] = v2;
  void v42[2] = v5;
  v42[3] = v4;
  char v43 = v6;
  v40[0] = v10;
  v40[1] = v9;
  v40[2] = v12;
  v40[3] = v11;
  char v41 = v13;
  uint64_t v28 = v4;
  sub_249882468(v3, v2, v5, v4, v6);
  sub_24988247C(v3, v2, v5, v28, v6);
  char v29 = _s14CarPlayAssetUI05ImageC0V0E4TypeO2eeoiySbAE_AEtFZ_0((uint64_t)v42, (uint64_t)v40);
  sub_2498826E4(v3, v2, v5, v28, v6);
  sub_2498826D0(v3, v2, v5, v28, v6);
  if ((v29 & 1) == 0) {
    return 0;
  }
  BOOL result = 0;
  uint64_t v8 = v35;
  if (v39 == v36)
  {
    uint64_t v17 = v33;
    uint64_t v7 = v34;
    uint64_t v16 = v32;
    if (((v31 ^ v14) & 1) == 0) {
      goto LABEL_11;
    }
  }
  return result;
}

unint64_t sub_2499C515C()
{
  unint64_t result = qword_2696E2480;
  if (!qword_2696E2480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2480);
  }
  return result;
}

unint64_t sub_2499C51B4()
{
  unint64_t result = qword_2696E2488;
  if (!qword_2696E2488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2488);
  }
  return result;
}

uint64_t destroy for Texture(uint64_t a1)
{
  if ((~*(_DWORD *)(a1 + 32) & 0xFELL) != 0) {
    sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Texture(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 32);
  if ((~*(_DWORD *)(a2 + 32) & 0xFELL) != 0)
  {
    uint64_t v6 = *(void **)a2;
    uint64_t v7 = *(void *)(a2 + 8);
    uint64_t v8 = *(void **)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 24);
    sub_24988247C(*(void **)a2, v7, v8, v9, v4);
    *(void *)a1 = v6;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = v4;
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Texture(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = a2[4];
  uint64_t v5 = v4 & 0xFE;
  if ((~*(_DWORD *)(a1 + 32) & 0xFELL) != 0)
  {
    if (v5 == 254)
    {
      sub_2499C5438(a1);
      long long v9 = *((_OWORD *)a2 + 1);
      long long v8 = *((_OWORD *)a2 + 2);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 32) = v8;
      goto LABEL_9;
    }
    uint64_t v14 = *a2;
    uint64_t v15 = a2[1];
    uint64_t v16 = (void *)a2[2];
    uint64_t v17 = a2[3];
    sub_24988247C((void *)*a2, v15, v16, v17, v4);
    long long v18 = *(void **)a1;
    uint64_t v19 = *(void *)(a1 + 8);
    uint64_t v20 = *(void **)(a1 + 16);
    uint64_t v21 = *(void *)(a1 + 24);
    *(void *)a1 = v14;
    *(void *)(a1 + 8) = v15;
    *(void *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = v17;
    char v22 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v4;
    sub_2498826E4(v18, v19, v20, v21, v22);
LABEL_8:
    *(void *)(a1 + 40) = a2[5];
    goto LABEL_9;
  }
  if (v5 != 254)
  {
    uint64_t v10 = (void *)*a2;
    uint64_t v11 = a2[1];
    uint64_t v12 = (void *)a2[2];
    uint64_t v13 = a2[3];
    sub_24988247C((void *)*a2, v11, v12, v13, v4);
    *(void *)a1 = v10;
    *(void *)(a1 + 8) = v11;
    *(void *)(a1 + 16) = v12;
    *(void *)(a1 + 24) = v13;
    *(unsigned char *)(a1 + 32) = v4;
    goto LABEL_8;
  }
  long long v6 = *(_OWORD *)a2;
  long long v7 = *((_OWORD *)a2 + 2);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(_OWORD *)(a1 + 32) = v7;
  *(_OWORD *)a1 = v6;
LABEL_9:
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(void *)(a1 + 56) = a2[7];
  *(void *)(a1 + 64) = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2499C5438(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for Texture(uint64_t a1, uint64_t a2)
{
  int v4 = *(_DWORD *)(a1 + 32);
  if ((~(_BYTE)v4 & 0xFE) != 0)
  {
    uint64_t v5 = *(void *)(a2 + 32);
    if ((~*(_DWORD *)(a2 + 32) & 0xFELL) != 0)
    {
      long long v7 = *(void **)a1;
      uint64_t v8 = *(void *)(a1 + 8);
      long long v9 = *(void **)(a1 + 16);
      uint64_t v10 = *(void *)(a1 + 24);
      long long v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(unsigned char *)(a1 + 32) = v5;
      sub_2498826E4(v7, v8, v9, v10, v4);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      goto LABEL_6;
    }
    sub_2499C5438(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
LABEL_6:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v12 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v12;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Texture(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Texture(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 64) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Texture()
{
  return &type metadata for Texture;
}

unsigned char *storeEnumTagSinglePayload for Texture.ContentMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499C56C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Texture.ContentMode()
{
  return &type metadata for Texture.ContentMode;
}

unsigned char *storeEnumTagSinglePayload for Texture.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499C57C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Texture.CodingKeys()
{
  return &type metadata for Texture.CodingKeys;
}

unint64_t sub_2499C5804()
{
  unint64_t result = qword_2696E2490;
  if (!qword_2696E2490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2490);
  }
  return result;
}

unint64_t sub_2499C585C()
{
  unint64_t result = qword_2696E2498;
  if (!qword_2696E2498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2498);
  }
  return result;
}

unint64_t sub_2499C58B4()
{
  unint64_t result = qword_2696E24A0;
  if (!qword_2696E24A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E24A0);
  }
  return result;
}

uint64_t sub_2499C5908(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7373416567616D69 && a2 == 0xEA00000000007465;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4D746E65746E6F63 && a2 == 0xEB0000000065646FLL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t sub_2499C5A74()
{
  unint64_t result = qword_2696E24A8;
  if (!qword_2696E24A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E24A8);
  }
  return result;
}

uint64_t DigiBarMarkerType.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  unint64_t v4 = (unint64_t)v1[4] >> 62;
  if (v4)
  {
    if (v4 == 1)
    {
      sub_249AEE348();
      return TickMarkerConfiguration.hash(into:)(a1);
    }
    else
    {
      sub_249AEE348();
      return LabelMarkerConfiguration.hash(into:)(a1);
    }
  }
  else
  {
    sub_249AEE348();
    sub_24988A4E0(a1, v3);
    return sub_249AEE368();
  }
}

uint64_t static DotMarkerConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 8);
  float v3 = *(float *)(a2 + 8);
  return sub_2499FF210(*(void *)a1, *(void *)a2) & (v2 == v3);
}

uint64_t sub_2499C5C3C()
{
  uint64_t v1 = 1801677172;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C6562616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 7630692;
  }
}

uint64_t sub_2499C5C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499CF994(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499C5CAC(uint64_t a1)
{
  unint64_t v2 = sub_2499CC4E0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C5CE8(uint64_t a1)
{
  unint64_t v2 = sub_2499CC4E0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2499C5D24(uint64_t a1)
{
  unint64_t v2 = sub_2499CC684();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C5D60(uint64_t a1)
{
  unint64_t v2 = sub_2499CC684();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2499C5D9C(uint64_t a1)
{
  unint64_t v2 = sub_2499CC534();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C5DD8(uint64_t a1)
{
  unint64_t v2 = sub_2499CC534();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2499C5E14(uint64_t a1)
{
  unint64_t v2 = sub_2499CC5DC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C5E50(uint64_t a1)
{
  unint64_t v2 = sub_2499CC5DC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DigiBarMarkerType.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E24B0);
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v39 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E24B8);
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  char v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E24C0);
  uint64_t v32 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E24C8);
  uint64_t v46 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v1[1];
  unint64_t v47 = *v1;
  uint64_t v48 = v11;
  uint64_t v12 = (void *)v1[2];
  unint64_t v13 = v1[4];
  uint64_t v44 = v1[3];
  uint64_t v45 = v12;
  unint64_t v36 = v1[5];
  unint64_t v14 = v1[6];
  unint64_t v42 = v1[7];
  unint64_t v43 = v14;
  unint64_t v35 = v1[8];
  unint64_t v15 = v1[10];
  unint64_t v34 = v1[9];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CC4E0();
  sub_249AEE468();
  if (v13 >> 62)
  {
    if (v13 >> 62 == 1)
    {
      unsigned int v16 = v47;
      unint64_t v17 = HIDWORD(v47);
      LOBYTE(v49) = 1;
      sub_2499CC5DC();
      uint64_t v18 = v61;
      sub_249AEDE48();
      unint64_t v49 = __PAIR64__(v17, v16);
      LOBYTE(v50) = v48;
      uint64_t v51 = v45;
      sub_2499CC630();
      uint64_t v19 = v38;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v19);
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v10, v18);
    }
    else
    {
      unint64_t v31 = v15;
      uint64_t v38 = HIDWORD(v15);
      LOBYTE(v49) = 2;
      sub_2499CC534();
      uint64_t v23 = v45;
      unint64_t v24 = v43;
      swift_bridgeObjectRetain();
      unint64_t v25 = v42;
      swift_bridgeObjectRetain();
      unint64_t v26 = v35;
      swift_bridgeObjectRetain();
      unint64_t v27 = v34;
      swift_bridgeObjectRetain();
      uint64_t v28 = v39;
      sub_249AEDE48();
      LOBYTE(v49) = v47;
      uint64_t v50 = v48;
      uint64_t v51 = v23;
      uint64_t v52 = v44;
      __int16 v53 = v13 & 0x101;
      unint64_t v54 = v36;
      unint64_t v55 = v24;
      unint64_t v56 = v25;
      unint64_t v57 = v26;
      unint64_t v58 = v27;
      int v59 = v31;
      int v60 = v38;
      sub_2499CC588();
      uint64_t v29 = v41;
      sub_249AEDF08();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v61);
      return sub_2498FDC60(v47, v48, v45, v44, v13);
    }
  }
  else
  {
    LOBYTE(v49) = 0;
    sub_2499CC684();
    uint64_t v21 = v61;
    sub_249AEDE48();
    unint64_t v49 = v47;
    LODWORD(v50) = v48;
    sub_2499CC6D8();
    uint64_t v22 = v33;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v10, v21);
  }
}

uint64_t DigiBarMarkerType.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 10);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  long long v10 = v0[4];
  uint64_t v11 = v1;
  sub_249AEE338();
  DigiBarMarkerType.hash(into:)((uint64_t)v5);
  return sub_249AEE388();
}

uint64_t DigiBarMarkerType.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v45 = a2;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2508);
  uint64_t v44 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v46 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2510);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  uint64_t v43 = v5;
  MEMORY[0x270FA5388](v4);
  long long v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2518);
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  long long v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2520);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  unint64_t v47 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v15);
  sub_2499CC4E0();
  uint64_t v16 = v58;
  sub_249AEE428();
  if (v16) {
    goto LABEL_9;
  }
  unint64_t v17 = v46;
  uint64_t v58 = v12;
  uint64_t v18 = sub_249AEDE18();
  if (*(void *)(v18 + 16) != 1)
  {
    uint64_t v29 = sub_249AEDB08();
    swift_allocError();
    uint64_t v30 = v14;
    uint64_t v32 = v31;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v32 = &type metadata for DigiBarMarkerType;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v32, *MEMORY[0x263F8DCB0], v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v11);
LABEL_9:
    uint64_t v33 = (uint64_t)v47;
    return __swift_destroy_boxed_opaque_existential_2Tm(v33);
  }
  if (*(unsigned char *)(v18 + 32))
  {
    if (*(unsigned char *)(v18 + 32) == 1)
    {
      LOBYTE(v48) = 1;
      sub_2499CC5DC();
      sub_249AEDD38();
      sub_2499CC780();
      uint64_t v19 = v42;
      sub_249AEDE08();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v7, v19);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v11);
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v23 = v48;
      uint64_t v24 = v49;
      long long v25 = 0uLL;
      unint64_t v26 = 0x4000000000000000;
      uint64_t v27 = v50;
      long long v28 = 0uLL;
    }
    else
    {
      LOBYTE(v48) = 2;
      sub_2499CC534();
      sub_249AEDD38();
      sub_2499CC72C();
      uint64_t v35 = v40;
      sub_249AEDE08();
      uint64_t v36 = v58;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v17, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v14, v11);
      uint64_t v23 = v48;
      uint64_t v24 = v49;
      uint64_t v27 = v50;
      uint64_t v20 = v51;
      uint64_t v21 = v54;
      long long v25 = v55;
      long long v28 = v56;
      uint64_t v22 = v57;
      uint64_t v37 = 256;
      if (!v53) {
        uint64_t v37 = 0;
      }
      unint64_t v26 = v37 | v52 | 0x8000000000000000;
    }
  }
  else
  {
    LOBYTE(v48) = 0;
    sub_2499CC684();
    sub_249AEDD38();
    sub_2499CC7D4();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v10, v8);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v14, v11);
    uint64_t v27 = 0;
    uint64_t v20 = 0;
    unint64_t v26 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = v48;
    uint64_t v24 = v49;
    long long v25 = 0uLL;
    long long v28 = 0uLL;
  }
  uint64_t v33 = (uint64_t)v47;
  uint64_t v38 = v45;
  *uint64_t v45 = v23;
  v38[1] = v24;
  v38[2] = v27;
  v38[3] = v20;
  v38[4] = v26;
  v38[5] = v21;
  *((_OWORD *)v38 + 3) = v25;
  *((_OWORD *)v38 + 4) = v28;
  v38[10] = v22;
  return __swift_destroy_boxed_opaque_existential_2Tm(v33);
}

uint64_t sub_2499C6B60@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DigiBarMarkerType.init(from:)(a1, a2);
}

uint64_t sub_2499C6B78(void *a1)
{
  return DigiBarMarkerType.encode(to:)(a1);
}

uint64_t sub_2499C6B90()
{
  uint64_t v1 = *((void *)v0 + 10);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  long long v10 = v0[4];
  uint64_t v11 = v1;
  sub_249AEE338();
  DigiBarMarkerType.hash(into:)((uint64_t)v5);
  return sub_249AEE388();
}

uint64_t sub_2499C6BF8()
{
  uint64_t v1 = *((void *)v0 + 10);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  long long v10 = v0[4];
  uint64_t v11 = v1;
  sub_249AEE338();
  DigiBarMarkerType.hash(into:)((uint64_t)v5);
  return sub_249AEE388();
}

uint64_t static DotMarkerConfiguration.defaultState.getter()
{
  return 0;
}

uint64_t static DotMarkerConfiguration.Style.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2499CC290(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890C40, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890C2C) & 1;
}

uint64_t sub_2499C6CAC()
{
  if (*v0) {
    return 0x726F6C6F63;
  }
  else {
    return 1802723693;
  }
}

uint64_t sub_2499C6CDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499CFBA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499C6D04(uint64_t a1)
{
  unint64_t v2 = sub_2499CC828();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C6D40(uint64_t a1)
{
  unint64_t v2 = sub_2499CC828();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2499C6D7C()
{
  return 17481;
}

uint64_t sub_2499C6D8C(uint64_t a1)
{
  unint64_t v2 = sub_2499CC87C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C6DC8(uint64_t a1)
{
  unint64_t v2 = sub_2499CC87C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2499C6E04(uint64_t a1)
{
  unint64_t v2 = sub_2499CC8D0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C6E40(uint64_t a1)
{
  unint64_t v2 = sub_2499CC8D0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DotMarkerConfiguration.Style.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2540);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2548);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x270FA5388](v6);
  long long v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2550);
  uint64_t v9 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v20 = v1[1];
  uint64_t v21 = v12;
  int v13 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CC828();
  sub_249AEE468();
  if (v13 == 255)
  {
    LOBYTE(v25) = 0;
    sub_2499CC8D0();
    uint64_t v17 = v24;
    sub_249AEDE48();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  }
  else
  {
    LOBYTE(v25) = 1;
    sub_2499CC87C();
    uint64_t v14 = v24;
    sub_249AEDE48();
    uint64_t v25 = v21;
    uint64_t v26 = v20;
    char v27 = v13;
    sub_24988E104();
    uint64_t v15 = v23;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v14);
  }
}

uint64_t DotMarkerConfiguration.Style.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2570);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  uint64_t v29 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2578);
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2580);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  int v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v14);
  sub_2499CC828();
  uint64_t v15 = v35;
  sub_249AEE428();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v16 = v31;
  uint64_t v35 = v11;
  uint64_t v17 = sub_249AEDE18();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v18 = sub_249AEDB08();
    swift_allocError();
    uint64_t v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v20 = &type metadata for DotMarkerConfiguration.Style;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x263F8DCB0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
LABEL_7:
    uint64_t v21 = (uint64_t)v32;
    return __swift_destroy_boxed_opaque_existential_2Tm(v21);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    LOBYTE(v33) = 1;
    sub_2499CC87C();
    sub_249AEDD38();
    sub_24988E268();
    uint64_t v23 = v28;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
    long long v24 = v33;
    char v25 = v34;
  }
  else
  {
    LOBYTE(v33) = 0;
    sub_2499CC8D0();
    sub_249AEDD38();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
    long long v24 = 0uLL;
    char v25 = -1;
  }
  uint64_t v21 = (uint64_t)v32;
  uint64_t v26 = v30;
  *uint64_t v30 = v24;
  *((unsigned char *)v26 + 16) = v25;
  return __swift_destroy_boxed_opaque_existential_2Tm(v21);
}

uint64_t sub_2499C7638@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return DotMarkerConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_2499C7650(void *a1)
{
  return DotMarkerConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_2499C7674(uint64_t *a1, uint64_t *a2)
{
  return sub_2499CC290(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890C40, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890C2C) & 1;
}

uint64_t DotMarkerConfiguration.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DotMarkerConfiguration.styles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

uint64_t (*DotMarkerConfiguration.styles.modify())()
{
  return nullsub_1;
}

float DotMarkerConfiguration.radius.getter()
{
  return *(float *)(v0 + 8);
}

void DotMarkerConfiguration.radius.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t (*DotMarkerConfiguration.radius.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::DotMarkerConfiguration __swiftcall DotMarkerConfiguration.init(styles:radius:)(Swift::OpaquePointer styles, Swift::Float radius)
{
  *(Swift::OpaquePointer *)uint64_t v2 = styles;
  *(Swift::Float *)(v2 + 8) = radius;
  result.styles = styles;
  result.radius = radius;
  return result;
}

uint64_t DotMarkerConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_24988A4E0(a1, v3);
  swift_bridgeObjectRelease();
  return sub_249AEE368();
}

uint64_t sub_2499C77A4()
{
  if (*v0) {
    return 0x737569646172;
  }
  else {
    return 0x73656C797473;
  }
}

uint64_t sub_2499C77D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499CFAC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499C77F8(uint64_t a1)
{
  unint64_t v2 = sub_2499CC924();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C7834(uint64_t a1)
{
  unint64_t v2 = sub_2499CC924();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DotMarkerConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2588);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CC924();
  sub_249AEE468();
  uint64_t v11 = v8;
  void v10[7] = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2598);
  sub_2499CC978();
  sub_249AEDF08();
  if (!v2)
  {
    v10[6] = 1;
    sub_249AEDED8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DotMarkerConfiguration.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_24988A4E0((uint64_t)v3, v1);
  sub_249AEE368();
  return sub_249AEE388();
}

uint64_t DotMarkerConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E25B0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CC924();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2598);
  v13[7] = 0;
  sub_2499CCA48();
  sub_249AEDE08();
  uint64_t v9 = v14;
  v13[6] = 1;
  swift_bridgeObjectRetain();
  sub_249AEDDD8();
  int v11 = v10;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(_DWORD *)(a2 + 8) = v11;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_2499C7C54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DotMarkerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2499C7C6C(void *a1)
{
  return DotMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_2499C7C88(uint64_t a1)
{
  sub_24988A4E0(a1, *v1);
  return sub_249AEE368();
}

uint64_t sub_2499C7CC4()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_24988A4E0((uint64_t)v3, v1);
  sub_249AEE368();
  return sub_249AEE388();
}

uint64_t sub_2499C7D1C(uint64_t a1, uint64_t a2)
{
  float v2 = *(float *)(a1 + 8);
  float v3 = *(float *)(a2 + 8);
  return sub_2499FF210(*(void *)a1, *(void *)a2) & (v2 == v3);
}

uint64_t static TickMarkerConfiguration.defaultState.getter()
{
  return 0;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleO4hash4intoys6HasherVz_tF_0()
{
  if (*(unsigned __int8 *)(v0 + 16) == 255) {
    return sub_249AEE348();
  }
  sub_249AEE348();
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t static TickMarkerConfiguration.Style.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2499CC290(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890CE4, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890CE0) & 1;
}

uint64_t sub_2499C7E64(uint64_t a1)
{
  unint64_t v2 = sub_2499CCB18();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C7EA0(uint64_t a1)
{
  unint64_t v2 = sub_2499CCB18();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2499C7EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 17481 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_2499C7F5C(uint64_t a1)
{
  unint64_t v2 = sub_2499CCB6C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C7F98(uint64_t a1)
{
  unint64_t v2 = sub_2499CCB6C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_2499C7FD4(uint64_t a1)
{
  unint64_t v2 = sub_2499CCBC0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C8010(uint64_t a1)
{
  unint64_t v2 = sub_2499CCBC0();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TickMarkerConfiguration.Style.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E25C8);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E25D0);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E25D8);
  uint64_t v9 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  int v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v1;
  uint64_t v20 = v1[1];
  uint64_t v21 = v12;
  int v13 = *((unsigned __int8 *)v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CCB18();
  sub_249AEE468();
  if (v13 == 255)
  {
    LOBYTE(v25) = 0;
    sub_2499CCBC0();
    uint64_t v17 = v24;
    sub_249AEDE48();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v19);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
  }
  else
  {
    LOBYTE(v25) = 1;
    sub_2499CCB6C();
    uint64_t v14 = v24;
    sub_249AEDE48();
    uint64_t v25 = v21;
    uint64_t v26 = v20;
    char v27 = v13;
    sub_24988E104();
    uint64_t v15 = v23;
    sub_249AEDF08();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v14);
  }
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleO9hashValueSivg_0()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_249AEE338();
  sub_249AEE348();
  if (v1 != 255)
  {
    Theme.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t TickMarkerConfiguration.Style.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E25F8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  uint64_t v29 = v4;
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2600);
  uint64_t v31 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2608);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  int v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v32 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v14);
  sub_2499CCB18();
  uint64_t v15 = v35;
  sub_249AEE428();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v16 = v31;
  uint64_t v35 = v11;
  uint64_t v17 = sub_249AEDE18();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v18 = sub_249AEDB08();
    swift_allocError();
    uint64_t v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDBD0);
    *uint64_t v20 = &type metadata for TickMarkerConfiguration.Style;
    sub_249AEDD48();
    sub_249AEDAE8();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x263F8DCB0], v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
LABEL_7:
    uint64_t v21 = (uint64_t)v32;
    return __swift_destroy_boxed_opaque_existential_2Tm(v21);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    LOBYTE(v33) = 1;
    sub_2499CCB6C();
    sub_249AEDD38();
    sub_24988E268();
    uint64_t v23 = v28;
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
    long long v24 = v33;
    char v25 = v34;
  }
  else
  {
    LOBYTE(v33) = 0;
    sub_2499CCBC0();
    sub_249AEDD38();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v10);
    long long v24 = 0uLL;
    char v25 = -1;
  }
  uint64_t v21 = (uint64_t)v32;
  uint64_t v26 = v30;
  *uint64_t v30 = v24;
  *((unsigned char *)v26 + 16) = v25;
  return __swift_destroy_boxed_opaque_existential_2Tm(v21);
}

uint64_t sub_2499C88A0@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return TickMarkerConfiguration.Style.init(from:)(a1, a2);
}

uint64_t sub_2499C88B8(void *a1)
{
  return TickMarkerConfiguration.Style.encode(to:)(a1);
}

uint64_t sub_2499C88D0()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_249AEE338();
  sub_249AEE348();
  if (v1 != 255)
  {
    Theme.ColorID.rawValue.getter();
    sub_249AECF78();
    swift_bridgeObjectRelease();
  }
  return sub_249AEE388();
}

uint64_t sub_2499C8964(uint64_t *a1, uint64_t *a2)
{
  return sub_2499CC290(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890CE4, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890CE0) & 1;
}

float TickMarkerConfiguration.width.getter()
{
  return *(float *)v0;
}

void TickMarkerConfiguration.width.setter(float a1)
{
  *int v1 = a1;
}

uint64_t (*TickMarkerConfiguration.width.modify())()
{
  return nullsub_1;
}

float TickMarkerConfiguration.length.getter()
{
  return *(float *)(v0 + 4);
}

void TickMarkerConfiguration.length.setter(float a1)
{
  *(float *)(v1 + 4) = a1;
}

uint64_t (*TickMarkerConfiguration.length.modify())()
{
  return nullsub_1;
}

void TickMarkerConfiguration.lineCap.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

unsigned char *TickMarkerConfiguration.lineCap.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 8) = *result;
  return result;
}

uint64_t (*TickMarkerConfiguration.lineCap.modify())()
{
  return nullsub_1;
}

uint64_t TickMarkerConfiguration.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TickMarkerConfiguration.styles.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*TickMarkerConfiguration.styles.modify())()
{
  return nullsub_1;
}

CarPlayAssetUI::TickMarkerConfiguration __swiftcall TickMarkerConfiguration.init(width:length:lineCap:styles:)(Swift::Float width, Swift::Float length, CarPlayAssetUI::DigiBarRadialStyle::LineCap lineCap, Swift::OpaquePointer styles)
{
  char v5 = *(unsigned char *)lineCap;
  *(Swift::Float *)uint64_t v4 = width;
  *(Swift::Float *)(v4 + 4) = length;
  *(unsigned char *)(v4 + 8) = v5;
  *(Swift::OpaquePointer *)(v4 + 16) = styles;
  result.styles = styles;
  result.length = length;
  result.CGFloat width = width;
  result.lineCap = lineCap;
  return result;
}

uint64_t TickMarkerConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE348();
  swift_bridgeObjectRetain();
  sub_24988A4B4(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_2499C8B30()
{
  uint64_t result = 0x6874646977;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6874676E656CLL;
      break;
    case 2:
      uint64_t result = 0x706143656E696CLL;
      break;
    case 3:
      uint64_t result = 0x73656C797473;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2499C8BB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499CFC84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499C8BDC(uint64_t a1)
{
  unint64_t v2 = sub_2499CCC14();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C8C18(uint64_t a1)
{
  unint64_t v2 = sub_2499CCC14();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t TickMarkerConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2610);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  HIDWORD(v11) = *(unsigned __int8 *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CCC14();
  sub_249AEE468();
  char v17 = 0;
  sub_249AEDED8();
  if (!v2)
  {
    char v9 = BYTE4(v11);
    char v16 = 1;
    sub_249AEDED8();
    char v15 = v9;
    char v14 = 2;
    sub_2498D02FC();
    sub_249AEDF08();
    uint64_t v12 = v8;
    char v13 = 3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2620);
    sub_2499CCC68();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t TickMarkerConfiguration.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_249AEE338();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE348();
  swift_bridgeObjectRetain();
  sub_24988A4B4((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

uint64_t TickMarkerConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2638);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CCC14();
  sub_249AEE428();
  if (!v2)
  {
    char v21 = 0;
    sub_249AEDDD8();
    int v10 = v9;
    char v20 = 1;
    sub_249AEDDD8();
    int v12 = v11;
    char v18 = 2;
    sub_2498D0350();
    sub_249AEDE08();
    char v14 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2620);
    char v17 = 3;
    sub_2499CCD38();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = v16[1];
    *(_DWORD *)a2 = v10;
    *(_DWORD *)(a2 + 4) = v12;
    *(unsigned char *)(a2 + 8) = v14;
    *(void *)(a2 + 16) = v15;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2499C9130@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TickMarkerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2499C9148(void *a1)
{
  return TickMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_2499C9168()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_249AEE338();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE348();
  swift_bridgeObjectRetain();
  sub_24988A4B4((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

uint64_t static LabelMarkerConfiguration.defaultState.getter()
{
  return 0;
}

uint64_t LabelMarkerConfiguration.font.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 33);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

void LabelMarkerConfiguration.font.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 3);
  char v6 = a1[32];
  char v7 = a1[33];
  uint64_t v8 = *((void *)a1 + 5);
  uint64_t v9 = *((void *)a1 + 6);
  int v10 = *(void **)(v1 + 16);
  swift_bridgeObjectRelease();

  *(unsigned char *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = v6;
  *(unsigned char *)(v1 + 33) = v7;
  *(void *)(v1 + 40) = v8;
  *(void *)(v1 + 48) = v9;
}

uint64_t (*LabelMarkerConfiguration.font.modify())()
{
  return nullsub_1;
}

uint64_t LabelMarkerConfiguration.textColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LabelMarkerConfiguration.textColorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*LabelMarkerConfiguration.textColorIDs.modify())()
{
  return nullsub_1;
}

uint64_t LabelMarkerConfiguration.backgroundColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LabelMarkerConfiguration.backgroundColorIDs.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*LabelMarkerConfiguration.backgroundColorIDs.modify())()
{
  return nullsub_1;
}

uint64_t LabelMarkerConfiguration.desiredLabelWidths.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t LabelMarkerConfiguration.desiredLabelWidths.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 72) = a1;
  return result;
}

uint64_t (*LabelMarkerConfiguration.desiredLabelWidths.modify())()
{
  return nullsub_1;
}

float LabelMarkerConfiguration.desiredLabelHeight.getter()
{
  return *(float *)(v0 + 80);
}

void LabelMarkerConfiguration.desiredLabelHeight.setter(float a1)
{
  *(float *)(v1 + 80) = a1;
}

uint64_t (*LabelMarkerConfiguration.desiredLabelHeight.modify())()
{
  return nullsub_1;
}

float LabelMarkerConfiguration.cornerRadius.getter()
{
  return *(float *)(v0 + 84);
}

void LabelMarkerConfiguration.cornerRadius.setter(float a1)
{
  *(float *)(v1 + 84) = a1;
}

uint64_t (*LabelMarkerConfiguration.cornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t LabelMarkerConfiguration.init(font:textColorIDs:backgroundColorIDs:desiredLabelWidths:desiredLabelHeight:cornerRadius:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, float a6@<S0>, float a7@<S1>)
{
  uint64_t v7 = *(void *)(result + 8);
  uint64_t v8 = *(void *)(result + 16);
  uint64_t v9 = *(void *)(result + 24);
  char v10 = *(unsigned char *)(result + 32);
  char v11 = *(unsigned char *)(result + 33);
  uint64_t v12 = *(void *)(result + 40);
  uint64_t v13 = *(void *)(result + 48);
  *(unsigned char *)a5 = *(unsigned char *)result;
  *(void *)(a5 + 8) = v7;
  *(void *)(a5 + 16) = v8;
  *(void *)(a5 + 24) = v9;
  *(unsigned char *)(a5 + 32) = v10;
  *(unsigned char *)(a5 + 33) = v11;
  *(void *)(a5 + 40) = v12;
  *(void *)(a5 + 48) = v13;
  *(void *)(a5 + 56) = a2;
  *(void *)(a5 + 64) = a3;
  *(void *)(a5 + 72) = a4;
  *(float *)(a5 + 80) = a6;
  *(float *)(a5 + 84) = a7;
  return result;
}

uint64_t LabelMarkerConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  uint64_t v5 = v1[9];
  InstrumentFont.hash(into:)();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  swift_bridgeObjectRelease();
  sub_24988A070(a1, v5);
  sub_249AEE368();
  return sub_249AEE368();
}

unint64_t sub_2499C9594(char a1)
{
  unint64_t result = 1953394534;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F6C6F4374786574;
      break;
    case 2:
    case 3:
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x615272656E726F63;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2499C9654()
{
  return sub_2499C9594(*v0);
}

uint64_t sub_2499C965C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499CFE28(a1, a2);
  *a3 = result;
  return result;
}

void sub_2499C9684(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_2499C9690(uint64_t a1)
{
  unint64_t v2 = sub_2499CCE08();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499C96CC(uint64_t a1)
{
  unint64_t v2 = sub_2499CCE08();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t LabelMarkerConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2650);
  uint64_t v26 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *v1;
  uint64_t v7 = *((void *)v1 + 1);
  uint64_t v24 = *((void *)v1 + 2);
  uint64_t v8 = *((void *)v1 + 3);
  char v9 = v1[32];
  int v23 = v1[33];
  uint64_t v10 = *((void *)v1 + 5);
  uint64_t v21 = *((void *)v1 + 6);
  uint64_t v22 = v10;
  uint64_t v11 = *((void *)v1 + 7);
  uint64_t v19 = *((void *)v1 + 8);
  uint64_t v20 = v11;
  uint64_t v18 = *((void *)v1 + 9);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CCE08();
  sub_249AEE468();
  LOBYTE(v28) = v6;
  uint64_t v29 = v7;
  uint64_t v30 = v24;
  uint64_t v31 = v8;
  char v32 = v9;
  char v33 = v23;
  uint64_t v34 = v22;
  uint64_t v35 = v21;
  char v27 = 0;
  sub_2498AE9D8();
  uint64_t v12 = v25;
  sub_249AEDF08();
  if (v12) {
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v5, v3);
  }
  uint64_t v14 = v18;
  uint64_t v15 = v19;
  uint64_t v16 = v26;
  uint64_t v28 = v20;
  char v27 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  sub_2499CCE5C();
  sub_249AEDF08();
  uint64_t v28 = v15;
  char v27 = 2;
  sub_249AEDF08();
  uint64_t v28 = v14;
  char v27 = 3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2660);
  sub_2499CCF54(&qword_2696E2668);
  sub_249AEDF08();
  LOBYTE(v28) = 4;
  sub_249AEDED8();
  LOBYTE(v28) = 5;
  sub_249AEDED8();
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v3);
}

uint64_t LabelMarkerConfiguration.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 33);
  uint64_t v6 = *(void *)(v0 + 40);
  unsigned char v9[72] = *(unsigned char *)v0;
  uint64_t v10 = v1;
  uint64_t v11 = v2;
  uint64_t v12 = v3;
  char v13 = v4;
  char v14 = v5;
  uint64_t v15 = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  long long v16 = *(_OWORD *)(v0 + 48);
  long long v17 = v7;
  uint64_t v18 = *(void *)(v0 + 80);
  sub_249AEE338();
  LabelMarkerConfiguration.hash(into:)((uint64_t)v9);
  return sub_249AEE388();
}

void LabelMarkerConfiguration.init(from:)(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2670);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CCE08();
  sub_249AEE428();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  else
  {
    char v39 = 0;
    sub_2498AEAE0();
    sub_249AEDE08();
    uint64_t v36 = a2;
    int v35 = v40;
    char v9 = v42;
    uint64_t v34 = v41;
    uint64_t v10 = v43;
    int v32 = v45;
    int v33 = v44;
    uint64_t v11 = v47;
    uint64_t v31 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
    char v39 = 1;
    unint64_t v12 = sub_2499CCED8();
    id v38 = v9;
    swift_bridgeObjectRetain();
    unint64_t v37 = v12;
    sub_249AEDE08();
    uint64_t v30 = v11;
    char v13 = v38;
    unint64_t v14 = v40;
    char v39 = 2;
    swift_bridgeObjectRetain();
    sub_249AEDE08();
    unint64_t v37 = v14;
    unint64_t v15 = v40;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2660);
    char v39 = 3;
    sub_2499CCF54(&qword_2696E2678);
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    sub_249AEDE08();
    unint64_t v27 = v15;
    unint64_t v16 = v40;
    LOBYTE(v40) = 4;
    swift_bridgeObjectRetain();
    sub_249AEDDD8();
    unint64_t v28 = v16;
    int v18 = v17;
    LOBYTE(v40) = 5;
    sub_249AEDDD8();
    uint64_t v19 = v30;
    int v21 = v20;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    id v22 = v13;

    int v23 = v36;
    unint64_t v24 = v37;
    *uint64_t v36 = v35;
    *((void *)v23 + 1) = v34;
    *((void *)v23 + 2) = v22;
    *((void *)v23 + 3) = v10;
    v23[32] = v33;
    v23[33] = v32;
    *((void *)v23 + 5) = v31;
    *((void *)v23 + 6) = v19;
    unint64_t v25 = v27;
    unint64_t v26 = v28;
    *((void *)v23 + 7) = v24;
    *((void *)v23 + 8) = v25;
    *((void *)v23 + 9) = v26;
    *((_DWORD *)v23 + 20) = v18;
    *((_DWORD *)v23 + 21) = v21;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_2499CA020(void *a1@<X0>, unsigned char *a2@<X8>)
{
}

uint64_t sub_2499CA038(void *a1)
{
  return LabelMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_2499CA050()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 33);
  uint64_t v6 = *(void *)(v0 + 40);
  unsigned char v9[72] = *(unsigned char *)v0;
  uint64_t v10 = v1;
  uint64_t v11 = v2;
  uint64_t v12 = v3;
  char v13 = v4;
  char v14 = v5;
  uint64_t v15 = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  long long v16 = *(_OWORD *)(v0 + 48);
  long long v17 = v7;
  uint64_t v18 = *(void *)(v0 + 80);
  sub_249AEE338();
  LabelMarkerConfiguration.hash(into:)((uint64_t)v9);
  return sub_249AEE388();
}

uint64_t sub_2499CA0DC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  char v5 = *(unsigned char *)(v0 + 33);
  uint64_t v6 = *(void *)(v0 + 40);
  unsigned char v9[72] = *(unsigned char *)v0;
  uint64_t v10 = v1;
  uint64_t v11 = v2;
  uint64_t v12 = v3;
  char v13 = v4;
  char v14 = v5;
  uint64_t v15 = v6;
  long long v7 = *(_OWORD *)(v0 + 64);
  long long v16 = *(_OWORD *)(v0 + 48);
  long long v17 = v7;
  uint64_t v18 = *(void *)(v0 + 80);
  sub_249AEE338();
  LabelMarkerConfiguration.hash(into:)((uint64_t)v9);
  return sub_249AEE388();
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.type.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  char v4 = (void *)v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  uint64_t v11 = v1[9];
  uint64_t v12 = v1[10];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  return sub_2498FC6B8(v2, v3, v4, v5, v6);
}

__n128 DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.type.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  long long v5 = a1[3];
  long long v6 = a1[2];
  __n128 v4 = (__n128)a1[4];
  uint64_t v2 = *((void *)a1 + 10);
  sub_2498FDC60(*(void *)v1, *(void *)(v1 + 8), *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
  *(_OWORD *)uint64_t v1 = v8;
  *(_OWORD *)(v1 + 16) = v7;
  *(_OWORD *)(v1 + 32) = v6;
  *(_OWORD *)(v1 + 48) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 64) = v4;
  *(void *)(v1 + 80) = v2;
  return result;
}

uint64_t (*DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.type.modify())()
{
  return nullsub_1;
}

__n128 DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.init(type:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  __n128 result = *(__n128 *)(a1 + 64);
  *(__n128 *)(a2 + 64) = result;
  *(void *)(a2 + 80) = v2;
  return result;
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.hash(into:)(uint64_t a1)
{
  return DigiBarMarkerType.hash(into:)(a1);
}

uint64_t static DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a2 + 80);
  long long v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(a1 + 64);
  uint64_t v12 = v2;
  long long v6 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v7;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = v3;
  return _s14CarPlayAssetUI17DigiBarMarkerTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)v11, (uint64_t *)v9) & 1;
}

uint64_t sub_2499CA348(uint64_t a1)
{
  unint64_t v2 = sub_2499CCFB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499CA384(uint64_t a1)
{
  unint64_t v2 = sub_2499CCFB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2680);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = *v1;
  long long v14 = v1[1];
  long long v15 = v7;
  long long v8 = v1[2];
  long long v12 = v1[3];
  long long v13 = v8;
  long long v11 = v1[4];
  uint64_t v9 = *((void *)v1 + 10);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CCFB8();
  sub_249AEE468();
  long long v16 = v15;
  long long v17 = v14;
  long long v18 = v13;
  long long v19 = v12;
  long long v20 = v11;
  uint64_t v21 = v9;
  sub_2499CD00C();
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.hashValue.getter()
{
  sub_249AEE338();
  DigiBarMarkerType.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2698);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  long long v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CCFB8();
  sub_249AEE428();
  if (!v2)
  {
    sub_2499CD060();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v9 = v16;
    long long v10 = v15[1];
    long long v11 = v15[2];
    long long v12 = v15[3];
    long long v13 = v15[4];
    *(_OWORD *)a2 = v15[0];
    *(_OWORD *)(a2 + 16) = v10;
    *(_OWORD *)(a2 + 32) = v11;
    *(_OWORD *)(a2 + 48) = v12;
    *(_OWORD *)(a2 + 64) = v13;
    *(void *)(a2 + 80) = v9;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2499CA764@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2499CA77C(void *a1)
{
  return DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_2499CA794()
{
  sub_249AEE338();
  DigiBarMarkerType.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t sub_2499CA828(uint64_t a1)
{
  return DigiBarMarkerType.hash(into:)(a1);
}

uint64_t sub_2499CA874()
{
  sub_249AEE338();
  DigiBarMarkerType.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t sub_2499CA904(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a2 + 80);
  long long v4 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  uint64_t v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v5;
  v11[4] = *(_OWORD *)(a1 + 64);
  uint64_t v12 = v2;
  long long v6 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v7;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = v3;
  return _s14CarPlayAssetUI17DigiBarMarkerTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)v11, (uint64_t *)v9) & 1;
}

__n128 DigiBarSingleMarkerConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  int v2 = *(_DWORD *)(v1 + 48);
  char v3 = *(unsigned char *)(v1 + 52);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  __n128 result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(unsigned char *)(a1 + 52) = v3;
  *(_DWORD *)(a1 + 48) = v2;
  return result;
}

__n128 DigiBarSingleMarkerConfiguration.style.setter(uint64_t a1)
{
  int v2 = *(_DWORD *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 52);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v4;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  *(unsigned char *)(v1 + 52) = v3;
  *(_DWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*DigiBarSingleMarkerConfiguration.style.modify())()
{
  return nullsub_1;
}

uint64_t DigiBarSingleMarkerConfiguration.type.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[7];
  uint64_t v3 = v1[8];
  long long v4 = (void *)v1[9];
  uint64_t v5 = v1[10];
  unint64_t v6 = v1[11];
  uint64_t v7 = v1[12];
  uint64_t v8 = v1[13];
  uint64_t v9 = v1[14];
  uint64_t v10 = v1[15];
  uint64_t v11 = v1[16];
  uint64_t v12 = v1[17];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  return sub_2498FC6B8(v2, v3, v4, v5, v6);
}

__n128 DigiBarSingleMarkerConfiguration.type.setter(long long *a1)
{
  long long v7 = a1[1];
  long long v8 = *a1;
  long long v5 = a1[3];
  long long v6 = a1[2];
  __n128 v4 = (__n128)a1[4];
  uint64_t v2 = *((void *)a1 + 10);
  sub_2498FDC60(*(void *)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
  *(_OWORD *)(v1 + 56) = v8;
  *(_OWORD *)(v1 + 72) = v7;
  *(_OWORD *)(v1 + 88) = v6;
  *(_OWORD *)(v1 + 104) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 120) = v4;
  *(void *)(v1 + 136) = v2;
  return result;
}

uint64_t (*DigiBarSingleMarkerConfiguration.type.modify())()
{
  return nullsub_1;
}

__n128 DigiBarSingleMarkerConfiguration.init(style:type:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a3 = *(_OWORD *)a1;
  *(_OWORD *)(a3 + 16) = v3;
  *(_OWORD *)(a3 + 32) = *(_OWORD *)(a1 + 32);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a3 + 56) = *(_OWORD *)a2;
  *(_OWORD *)(a3 + 72) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a3 + 88) = *(_OWORD *)(a2 + 32);
  int v6 = *(_DWORD *)(a1 + 48);
  uint64_t v7 = *(void *)(a2 + 80);
  *(unsigned char *)(a3 + 52) = *(unsigned char *)(a1 + 52);
  *(_DWORD *)(a3 + 48) = v6;
  *(_OWORD *)(a3 + 104) = v5;
  __n128 result = *(__n128 *)(a2 + 64);
  *(__n128 *)(a3 + 120) = result;
  *(void *)(a3 + 136) = v7;
  return result;
}

uint64_t DigiBarSingleMarkerConfiguration.hash(into:)(uint64_t a1)
{
  if (((*(unsigned int *)(v1 + 48) | (unint64_t)((uint64_t)*(char *)(v1 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_249AEE348();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  return DigiBarMarkerType.hash(into:)(a1);
}

uint64_t sub_2499CACEC()
{
  if (*v0) {
    return 1701869940;
  }
  else {
    return 0x656C797473;
  }
}

uint64_t sub_2499CAD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499D00AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499CAD44(uint64_t a1)
{
  unint64_t v2 = sub_2499CD0B4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499CAD80(uint64_t a1)
{
  unint64_t v2 = sub_2499CD0B4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t DigiBarSingleMarkerConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E26A8);
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v6 = *v1;
  long long v25 = v1[1];
  long long v26 = v6;
  uint64_t v8 = *((void *)v1 + 4);
  uint64_t v7 = *((void *)v1 + 5);
  uint64_t v27 = *((unsigned int *)v1 + 12);
  char v9 = *((unsigned char *)v1 + 52);
  uint64_t v10 = *((void *)v1 + 7);
  uint64_t v23 = *((void *)v1 + 8);
  uint64_t v24 = v10;
  uint64_t v22 = *((void *)v1 + 9);
  uint64_t v21 = *((void *)v1 + 10);
  uint64_t v20 = *((void *)v1 + 11);
  uint64_t v19 = *((void *)v1 + 12);
  uint64_t v18 = *((void *)v1 + 13);
  uint64_t v17 = *((void *)v1 + 14);
  uint64_t v16 = *((void *)v1 + 15);
  uint64_t v15 = *((void *)v1 + 16);
  uint64_t v14 = *((void *)v1 + 17);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CD0B4();
  sub_249AEE468();
  long long v30 = v26;
  long long v31 = v25;
  uint64_t v32 = v8;
  uint64_t v33 = v7;
  BYTE4(v34) = v9;
  LODWORD(v34) = v27;
  char v39 = 0;
  sub_2499CD108();
  uint64_t v11 = v28;
  sub_249AEDF08();
  if (!v11)
  {
    *(void *)&long long v30 = v24;
    *((void *)&v30 + 1) = v23;
    *(void *)&long long v31 = v22;
    *((void *)&v31 + 1) = v21;
    uint64_t v32 = v20;
    uint64_t v33 = v19;
    uint64_t v34 = v18;
    uint64_t v35 = v17;
    uint64_t v36 = v16;
    uint64_t v37 = v15;
    uint64_t v38 = v14;
    char v39 = 1;
    sub_2499CD15C();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v5, v3);
}

uint64_t DigiBarSingleMarkerConfiguration.hashValue.getter()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  DigiBarMarkerType.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

uint64_t DigiBarSingleMarkerConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E26C8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499CD0B4();
  sub_249AEE428();
  if (!v2)
  {
    char v30 = 0;
    sub_2499CD1B0();
    sub_249AEDE08();
    uint64_t v22 = *((void *)&v24 + 1);
    uint64_t v23 = v24;
    uint64_t v20 = *((void *)&v25 + 1);
    uint64_t v21 = v25;
    uint64_t v18 = *((void *)&v26 + 1);
    uint64_t v19 = v26;
    uint64_t v9 = BYTE4(v27);
    uint64_t v10 = v27;
    char v30 = 1;
    sub_2499CD204();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    long long v11 = v25;
    *(_OWORD *)(a2 + 56) = v24;
    *(_OWORD *)(a2 + 72) = v11;
    long long v12 = v27;
    *(_OWORD *)(a2 + 88) = v26;
    uint64_t v13 = v29;
    uint64_t v14 = v22;
    *(void *)a2 = v23;
    *(void *)(a2 + 8) = v14;
    uint64_t v15 = v20;
    *(void *)(a2 + 16) = v21;
    *(void *)(a2 + 24) = v15;
    uint64_t v16 = v18;
    *(void *)(a2 + 32) = v19;
    *(void *)(a2 + 40) = v16;
    *(_DWORD *)(a2 + 48) = v10;
    *(unsigned char *)(a2 + 52) = (v10 | (unint64_t)(v9 << 32)) >> 32;
    *(_OWORD *)(a2 + 104) = v12;
    *(_OWORD *)(a2 + 120) = v28;
    *(void *)(a2 + 136) = v13;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_2499CB4DC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return DigiBarSingleMarkerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2499CB4F4(void *a1)
{
  return DigiBarSingleMarkerConfiguration.encode(to:)(a1);
}

uint64_t sub_2499CB510(uint64_t a1)
{
  if (((*(unsigned int *)(v1 + 48) | (unint64_t)((uint64_t)*(char *)(v1 + 52) << 32)) & 0x8000000000000000) != 0)
  {
    sub_249AEE348();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE348();
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  return DigiBarMarkerType.hash(into:)(a1);
}

uint64_t sub_2499CB6C4()
{
  unint64_t v1 = *(unsigned int *)(v0 + 48) | (unint64_t)((uint64_t)*(char *)(v0 + 52) << 32);
  sub_249AEE338();
  sub_249AEE348();
  if ((v1 & 0x8000000000000000) != 0)
  {
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE358();
  }
  else
  {
    sub_249AEE378();
    sub_249AEE378();
    sub_249AEE358();
    sub_2498ACC00();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE368();
    sub_249AEE348();
  }
  DigiBarMarkerType.hash(into:)((uint64_t)v3);
  return sub_249AEE388();
}

BOOL _s14CarPlayAssetUI24LabelMarkerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, char *a2)
{
  unsigned __int8 v2 = *(unsigned char *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 33);
  uint64_t v8 = *(void *)(a1 + 40);
  uint64_t v9 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v12 = *(void *)(a1 + 72);
  float v14 = *(float *)(a1 + 80);
  float v13 = *(float *)(a1 + 84);
  char v15 = *a2;
  uint64_t v16 = *((void *)a2 + 1);
  uint64_t v17 = *((void *)a2 + 2);
  uint64_t v18 = *((void *)a2 + 3);
  char v19 = a2[32];
  char v20 = a2[33];
  uint64_t v21 = *((void *)a2 + 5);
  uint64_t v22 = *((void *)a2 + 6);
  uint64_t v24 = *((void *)a2 + 7);
  uint64_t v23 = *((void *)a2 + 8);
  uint64_t v25 = *((void *)a2 + 9);
  float v27 = *((float *)a2 + 20);
  float v26 = *((float *)a2 + 21);
  v38[0] = v2;
  uint64_t v39 = v3;
  uint64_t v40 = v4;
  uint64_t v41 = v5;
  char v42 = v6;
  char v43 = v7;
  uint64_t v44 = v8;
  uint64_t v45 = v9;
  v30[0] = v15;
  uint64_t v31 = v16;
  uint64_t v32 = v17;
  uint64_t v33 = v18;
  char v34 = v19;
  char v35 = v20;
  uint64_t v36 = v21;
  uint64_t v37 = v22;
  if ((_s14CarPlayAssetUI14InstrumentFontV2eeoiySbAC_ACtFZ_0(v38, (uint64_t)v30) & 1) == 0
    || (sub_2499FEF30(v11, v24) & 1) == 0
    || (sub_2499FEF30(v10, v23) & 1) == 0)
  {
    return 0;
  }
  BOOL v28 = sub_249889014(v12, v25) && v14 == v27;
  return v13 == v26 && v28;
}

uint64_t _s14CarPlayAssetUI17DigiBarMarkerTypeO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)a1[2];
  uint64_t v5 = a1[3];
  unint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[7];
  uint64_t v10 = a1[8];
  uint64_t v11 = a1[9];
  uint64_t v12 = a1[10];
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  uint64_t v16 = (void *)a2[2];
  uint64_t v15 = a2[3];
  unint64_t v18 = a2[4];
  uint64_t v17 = a2[5];
  uint64_t v20 = a2[6];
  uint64_t v19 = a2[7];
  uint64_t v21 = a2[8];
  uint64_t v22 = a2[9];
  uint64_t v23 = a2[10];
  uint64_t v24 = v3;
  v80[0] = v3;
  v80[1] = v2;
  v80[2] = v4;
  v80[3] = v5;
  v80[4] = v7;
  v80[5] = v6;
  v80[6] = v8;
  v80[7] = v9;
  v80[8] = v10;
  v80[9] = v11;
  uint64_t v25 = v12;
  v80[10] = v12;
  v80[11] = v13;
  uint64_t v26 = v13;
  uint64_t v27 = v14;
  v80[12] = v14;
  v80[13] = v16;
  v80[14] = v15;
  v80[15] = v18;
  unint64_t v28 = v18;
  v80[16] = v17;
  v80[17] = v20;
  v80[18] = v19;
  v80[19] = v21;
  unint64_t v29 = v7;
  v80[20] = v22;
  v80[21] = v23;
  if (!(v7 >> 62))
  {
    if (!(v18 >> 62))
    {
      float v33 = *(float *)&v2;
      uint64_t v44 = v13;
      uint64_t v51 = v4;
      uint64_t v34 = v5;
      uint64_t v56 = v5;
      uint64_t v35 = v2;
      uint64_t v48 = v15;
      char v53 = v16;
      sub_2498FC6B8(v13, v14, v16, v15, v28);
      sub_2498FC6B8(v24, v35, v51, v34, v29);
      sub_2498FC6B8(v24, v35, v51, v56, v29);
      sub_2498FC6B8(v44, v27, v53, v48, v28);
      char v42 = sub_2499FF210(v24, v44);
      sub_2499D0188((uint64_t)v80);
      sub_2498FDC60(v44, v27, v53, v48, v28);
      sub_2498FDC60(v24, v35, v51, v56, v29);
      char v32 = v42 & (v33 == *(float *)&v27);
      return v32 & 1;
    }
    goto LABEL_13;
  }
  if (v7 >> 62 != 1)
  {
    if (v18 >> 62 == 2)
    {
      v69[0] = v24;
      uint64_t v70 = v2;
      uint64_t v71 = v4;
      uint64_t v72 = v5;
      uint64_t v45 = v13;
      uint64_t v46 = v2;
      __int16 v73 = v7 & 0x101;
      uint64_t v74 = v6;
      uint64_t v75 = v8;
      uint64_t v76 = v9;
      uint64_t v77 = v10;
      uint64_t v78 = v11;
      uint64_t v79 = v25;
      v58[0] = v13;
      uint64_t v59 = v14;
      int v60 = v16;
      uint64_t v61 = v15;
      __int16 v62 = v18 & 0x101;
      uint64_t v63 = v17;
      uint64_t v64 = v20;
      uint64_t v65 = v19;
      uint64_t v66 = v21;
      uint64_t v67 = v22;
      uint64_t v68 = v23;
      uint64_t v36 = v4;
      uint64_t v37 = v5;
      uint64_t v57 = v5;
      uint64_t v49 = v15;
      uint64_t v54 = v16;
      sub_2498FC6B8(v13, v14, v16, v15, v18);
      sub_2498FC6B8(v24, v46, v36, v37, v29);
      sub_2498FC6B8(v24, v46, v36, v57, v29);
      sub_2498FC6B8(v45, v27, v54, v49, v18);
      char v32 = _s14CarPlayAssetUI24LabelMarkerConfigurationV2eeoiySbAC_ACtFZ_0((uint64_t)v69, v58);
      sub_2499D0188((uint64_t)v80);
      sub_2498FDC60(v45, v27, v54, v49, v18);
      sub_2498FDC60(v24, v46, v36, v57, v29);
      return v32 & 1;
    }
    goto LABEL_13;
  }
  if (v18 >> 62 != 1
    || *(float *)&v24 != *(float *)&v13
    || *((float *)&v24 + 1) != *((float *)&v13 + 1)
    || v14 != v2)
  {
LABEL_13:
    uint64_t v38 = v15;
    uint64_t v39 = v16;
    sub_2498FC6B8(v24, v2, v4, v5, v7);
    sub_2498FC6B8(v26, v27, v39, v38, v18);
    sub_2499D0188((uint64_t)v80);
    goto LABEL_14;
  }
  uint64_t v43 = v13;
  uint64_t v50 = v4;
  uint64_t v30 = v5;
  uint64_t v55 = v5;
  uint64_t v31 = v2;
  uint64_t v47 = v15;
  unsigned __int8 v52 = v16;
  sub_2498FC6B8(v13, v14, v16, v15, v28);
  sub_2498FC6B8(v24, v31, v50, v30, v29);
  sub_2498FC6B8(v24, v31, v50, v55, v29);
  sub_2498FC6B8(v43, v27, v52, v47, v28);
  char v41 = sub_2499FFABC((uint64_t)v50, (uint64_t)v52);
  sub_2499D0188((uint64_t)v80);
  sub_2498FDC60(v43, v27, v52, v47, v28);
  sub_2498FDC60(v24, v31, v50, v55, v29);
  if ((v41 & 1) == 0)
  {
LABEL_14:
    char v32 = 0;
    return v32 & 1;
  }
  char v32 = 1;
  return v32 & 1;
}

uint64_t _s14CarPlayAssetUI32DigiBarSingleMarkerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v4 = *(unsigned int *)(a1 + 48) | (unint64_t)((uint64_t)*(char *)(a1 + 52) << 32);
  uint64_t v5 = *(void *)(a1 + 136);
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  unint64_t v9 = *(unsigned int *)(a2 + 48) | (unint64_t)((uint64_t)*(char *)(a2 + 52) << 32);
  uint64_t v10 = *(void *)(a2 + 136);
  if ((v4 & 0x8000000000000000) != 0)
  {
    if ((v9 & 0x8000000000000000) == 0) {
      goto LABEL_8;
    }
    long long v16 = *(_OWORD *)(a2 + 120);
    long long v17 = *(_OWORD *)(a2 + 104);
    long long v18 = *(_OWORD *)(a2 + 88);
    long long v19 = *(_OWORD *)(a2 + 72);
    float32x4_t v20 = *(float32x4_t *)(a2 + 56);
    long long v21 = *(_OWORD *)(a1 + 120);
    long long v22 = *(_OWORD *)(a1 + 104);
    long long v23 = *(_OWORD *)(a1 + 88);
    long long v24 = *(_OWORD *)(a1 + 72);
    float32x4_t v25 = *(float32x4_t *)(a1 + 56);
    v31.i64[0] = *(void *)a1;
    v31.i64[1] = v2;
    v32[0] = v3 & 1;
    v26.i64[0] = v7;
    v26.i64[1] = v6;
    v27[0] = v8 & 1;
    if ((_s14CarPlayAssetUI18DigiBarLinearStyleV2eeoiySbAC_ACtFZ_0(&v31, &v26) & 1) == 0) {
      goto LABEL_8;
    }
  }
  else
  {
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_8;
    }
    long long v16 = *(_OWORD *)(a2 + 120);
    long long v17 = *(_OWORD *)(a2 + 104);
    long long v18 = *(_OWORD *)(a2 + 88);
    long long v19 = *(_OWORD *)(a2 + 72);
    float32x4_t v20 = *(float32x4_t *)(a2 + 56);
    long long v21 = *(_OWORD *)(a1 + 120);
    long long v22 = *(_OWORD *)(a1 + 104);
    long long v23 = *(_OWORD *)(a1 + 88);
    long long v24 = *(_OWORD *)(a1 + 72);
    float32x4_t v25 = *(float32x4_t *)(a1 + 56);
    long long v11 = *(_OWORD *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a1 + 40);
    v31.i64[0] = *(void *)a1;
    v31.i64[1] = v2;
    v32[0] = v3 & 1;
    *(_OWORD *)&v32[8] = *(_OWORD *)(a1 + 24);
    *(void *)&v32[24] = v13;
    LODWORD(v33) = v4;
    BYTE4(v33) = BYTE4(v4);
    v26.i64[0] = v7;
    v26.i64[1] = v6;
    v27[0] = v8 & 1;
    *(_OWORD *)&v27[8] = v11;
    *(void *)&v27[24] = v12;
    LODWORD(v28) = v9;
    BYTE4(v28) = BYTE4(v9);
    if (!_s14CarPlayAssetUI18DigiBarRadialStyleV2eeoiySbAC_ACtFZ_0((uint64_t)&v31, (uint64_t)&v26))
    {
LABEL_8:
      char v14 = 0;
      return v14 & 1;
    }
  }
  float32x4_t v31 = v25;
  *(_OWORD *)char v32 = v24;
  *(_OWORD *)&v32[16] = v23;
  long long v33 = v22;
  long long v34 = v21;
  uint64_t v35 = v5;
  float32x4_t v26 = v20;
  *(_OWORD *)uint64_t v27 = v19;
  *(_OWORD *)&v27[16] = v18;
  long long v28 = v17;
  long long v29 = v16;
  uint64_t v30 = v10;
  char v14 = _s14CarPlayAssetUI17DigiBarMarkerTypeO2eeoiySbAC_ACtFZ_0((uint64_t *)&v31, (uint64_t *)&v26);
  return v14 & 1;
}

uint64_t sub_2499CC290(uint64_t *a1, uint64_t *a2, void (*a3)(uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  uint64_t v10 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v11 = *((unsigned __int8 *)a2 + 16);
  if (v8 == 255)
  {
    if (v11 == 255)
    {
      a3(*a1, v6, 255);
      a3(v10, v9, 255);
      char v16 = 1;
      return v16 & 1;
    }
    goto LABEL_7;
  }
  if (v11 == 255)
  {
LABEL_7:
    a4(*a2, a2[1], v11);
    a4(v7, v6, v8);
    a3(v7, v6, v8);
    a3(v10, v9, v11);
    char v16 = 0;
    return v16 & 1;
  }
  a4(v10, v9, v11);
  a4(v7, v6, v8);
  a4(v10, v9, v11);
  a4(v7, v6, v8);
  uint64_t v12 = Theme.ColorID.rawValue.getter();
  uint64_t v14 = v13;
  if (v12 == Theme.ColorID.rawValue.getter() && v14 == v15) {
    char v16 = 1;
  }
  else {
    char v16 = sub_249AEE0D8();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a3(v7, v6, v8);
  a3(v10, v9, v11);
  a3(v10, v9, v11);
  a3(v7, v6, v8);
  return v16 & 1;
}

uint64_t _s14CarPlayAssetUI23TickMarkerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(float *)a1 == *(float *)a2
    && *(float *)(a1 + 4) == *(float *)(a2 + 4)
    && *(unsigned __int8 *)(a1 + 8) == *(unsigned __int8 *)(a2 + 8))
  {
    return sub_2499FFABC(*(void *)(a1 + 16), *(void *)(a2 + 16));
  }
  else
  {
    return 0;
  }
}

unint64_t sub_2499CC4E0()
{
  unint64_t result = qword_2696E24D0;
  if (!qword_2696E24D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E24D0);
  }
  return result;
}

unint64_t sub_2499CC534()
{
  unint64_t result = qword_2696E24D8;
  if (!qword_2696E24D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E24D8);
  }
  return result;
}

unint64_t sub_2499CC588()
{
  unint64_t result = qword_2696E24E0;
  if (!qword_2696E24E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E24E0);
  }
  return result;
}

unint64_t sub_2499CC5DC()
{
  unint64_t result = qword_2696E24E8;
  if (!qword_2696E24E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E24E8);
  }
  return result;
}

unint64_t sub_2499CC630()
{
  unint64_t result = qword_2696E24F0;
  if (!qword_2696E24F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E24F0);
  }
  return result;
}

unint64_t sub_2499CC684()
{
  unint64_t result = qword_2696E24F8;
  if (!qword_2696E24F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E24F8);
  }
  return result;
}

unint64_t sub_2499CC6D8()
{
  unint64_t result = qword_2696E2500;
  if (!qword_2696E2500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2500);
  }
  return result;
}

unint64_t sub_2499CC72C()
{
  unint64_t result = qword_2696E2528;
  if (!qword_2696E2528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2528);
  }
  return result;
}

unint64_t sub_2499CC780()
{
  unint64_t result = qword_2696E2530;
  if (!qword_2696E2530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2530);
  }
  return result;
}

unint64_t sub_2499CC7D4()
{
  unint64_t result = qword_2696E2538;
  if (!qword_2696E2538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2538);
  }
  return result;
}

unint64_t sub_2499CC828()
{
  unint64_t result = qword_2696E2558;
  if (!qword_2696E2558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2558);
  }
  return result;
}

unint64_t sub_2499CC87C()
{
  unint64_t result = qword_2696E2560;
  if (!qword_2696E2560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2560);
  }
  return result;
}

unint64_t sub_2499CC8D0()
{
  unint64_t result = qword_2696E2568;
  if (!qword_2696E2568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2568);
  }
  return result;
}

unint64_t sub_2499CC924()
{
  unint64_t result = qword_2696E2590;
  if (!qword_2696E2590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2590);
  }
  return result;
}

unint64_t sub_2499CC978()
{
  unint64_t result = qword_2696E25A0;
  if (!qword_2696E25A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2598);
    sub_2499CC9F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E25A0);
  }
  return result;
}

unint64_t sub_2499CC9F4()
{
  unint64_t result = qword_2696E25A8;
  if (!qword_2696E25A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E25A8);
  }
  return result;
}

unint64_t sub_2499CCA48()
{
  unint64_t result = qword_2696E25B8;
  if (!qword_2696E25B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2598);
    sub_2499CCAC4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E25B8);
  }
  return result;
}

unint64_t sub_2499CCAC4()
{
  unint64_t result = qword_2696E25C0;
  if (!qword_2696E25C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E25C0);
  }
  return result;
}

unint64_t sub_2499CCB18()
{
  unint64_t result = qword_2696E25E0;
  if (!qword_2696E25E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E25E0);
  }
  return result;
}

unint64_t sub_2499CCB6C()
{
  unint64_t result = qword_2696E25E8;
  if (!qword_2696E25E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E25E8);
  }
  return result;
}

unint64_t sub_2499CCBC0()
{
  unint64_t result = qword_2696E25F0;
  if (!qword_2696E25F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E25F0);
  }
  return result;
}

unint64_t sub_2499CCC14()
{
  unint64_t result = qword_2696E2618;
  if (!qword_2696E2618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2618);
  }
  return result;
}

unint64_t sub_2499CCC68()
{
  unint64_t result = qword_2696E2628;
  if (!qword_2696E2628)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2620);
    sub_2499CCCE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2628);
  }
  return result;
}

unint64_t sub_2499CCCE4()
{
  unint64_t result = qword_2696E2630;
  if (!qword_2696E2630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2630);
  }
  return result;
}

unint64_t sub_2499CCD38()
{
  unint64_t result = qword_2696E2640;
  if (!qword_2696E2640)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2620);
    sub_2499CCDB4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2640);
  }
  return result;
}

unint64_t sub_2499CCDB4()
{
  unint64_t result = qword_2696E2648;
  if (!qword_2696E2648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2648);
  }
  return result;
}

unint64_t sub_2499CCE08()
{
  unint64_t result = qword_2696E2658;
  if (!qword_2696E2658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2658);
  }
  return result;
}

unint64_t sub_2499CCE5C()
{
  unint64_t result = qword_2696E00E0;
  if (!qword_2696E00E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E00D8);
    sub_24988E104();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E00E0);
  }
  return result;
}

unint64_t sub_2499CCED8()
{
  unint64_t result = qword_2696E00F8;
  if (!qword_2696E00F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E00D8);
    sub_24988E268();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E00F8);
  }
  return result;
}

uint64_t sub_2499CCF54(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2660);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499CCFB8()
{
  unint64_t result = qword_2696E2688;
  if (!qword_2696E2688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2688);
  }
  return result;
}

unint64_t sub_2499CD00C()
{
  unint64_t result = qword_2696E2690;
  if (!qword_2696E2690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2690);
  }
  return result;
}

unint64_t sub_2499CD060()
{
  unint64_t result = qword_2696E26A0;
  if (!qword_2696E26A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26A0);
  }
  return result;
}

unint64_t sub_2499CD0B4()
{
  unint64_t result = qword_2696E26B0;
  if (!qword_2696E26B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26B0);
  }
  return result;
}

unint64_t sub_2499CD108()
{
  unint64_t result = qword_2696E26B8;
  if (!qword_2696E26B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26B8);
  }
  return result;
}

unint64_t sub_2499CD15C()
{
  unint64_t result = qword_2696E26C0;
  if (!qword_2696E26C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26C0);
  }
  return result;
}

unint64_t sub_2499CD1B0()
{
  unint64_t result = qword_2696E26D0;
  if (!qword_2696E26D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26D0);
  }
  return result;
}

unint64_t sub_2499CD204()
{
  unint64_t result = qword_2696E26D8;
  if (!qword_2696E26D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26D8);
  }
  return result;
}

unint64_t sub_2499CD25C()
{
  unint64_t result = qword_2696E26E0;
  if (!qword_2696E26E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26E0);
  }
  return result;
}

unint64_t sub_2499CD2B4()
{
  unint64_t result = qword_2696E26E8;
  if (!qword_2696E26E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26E8);
  }
  return result;
}

unint64_t sub_2499CD30C()
{
  unint64_t result = qword_2696E26F0;
  if (!qword_2696E26F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26F0);
  }
  return result;
}

unint64_t sub_2499CD364()
{
  unint64_t result = qword_2696E26F8;
  if (!qword_2696E26F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E26F8);
  }
  return result;
}

unint64_t sub_2499CD3BC()
{
  unint64_t result = qword_2696E2700;
  if (!qword_2696E2700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2700);
  }
  return result;
}

unint64_t sub_2499CD414()
{
  unint64_t result = qword_2696E2708;
  if (!qword_2696E2708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2708);
  }
  return result;
}

unint64_t sub_2499CD46C()
{
  unint64_t result = qword_2696E2710;
  if (!qword_2696E2710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2710);
  }
  return result;
}

unint64_t sub_2499CD4C4()
{
  unint64_t result = qword_2696E2718;
  if (!qword_2696E2718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2718);
  }
  return result;
}

uint64_t sub_2499CD530(uint64_t a1)
{
  return *(void *)(a1 + 32) >> 62;
}

uint64_t sub_2499CD53C(uint64_t result)
{
  *(void *)(result + 32) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_2499CD54C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 32) = *(void *)(result + 32) & 0x101 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType()
{
  return &type metadata for DigiBarMarkerType;
}

uint64_t initializeBufferWithCopyOfBuffer for DotMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DotMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy12_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t assignWithTake for DotMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DotMarkerConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 12)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DotMarkerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 12) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 12) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration()
{
  return &type metadata for DotMarkerConfiguration;
}

uint64_t destroy for DotMarkerConfiguration.Style(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 16);
  if (v1 <= 4) {
    return sub_24988D788(*(void *)result, *(void *)(result + 8), v1);
  }
  return result;
}

uint64_t sub_2499CD718(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 > 4) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_2499CD72C(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.Style()
{
  return &type metadata for DotMarkerConfiguration.Style;
}

uint64_t destroy for TickMarkerConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s14CarPlayAssetUI23TickMarkerConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TickMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TickMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TickMarkerConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TickMarkerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration()
{
  return &type metadata for TickMarkerConfiguration;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwCP_0(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 16);
  if (v3 > 4)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  else
  {
    uint64_t v4 = *a2;
    uint64_t v5 = a2[1];
    sub_24988D770(*a2, v5, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = v3;
  }
  return a1;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwca_0(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  unsigned int v5 = *((unsigned __int8 *)a2 + 16);
  if (v4 > 4)
  {
    if (v5 <= 4)
    {
      uint64_t v12 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      sub_24988D770(*(void *)a2, v11, v5);
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v11;
      *(unsigned char *)(a1 + 16) = v5;
      return a1;
    }
LABEL_7:
    long long v13 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v13;
    return a1;
  }
  if (v5 > 4)
  {
    sub_24988D788(*(void *)a1, *(void *)(a1 + 8), v4);
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *((void *)a2 + 1);
  sub_24988D770(*(void *)a2, v6, v5);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v6;
  char v10 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24988D788(v8, v9, v10);
  return a1;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwta_0(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 > 4) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  if (v5 > 4)
  {
    sub_24988D788(v6, v7, v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24988D788(v6, v7, v4);
  return a1;
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    unsigned int v4 = -1;
  }
  else {
    unsigned int v4 = v3 ^ 0xFF;
  }
  if (v4 + 1 >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t _s14CarPlayAssetUI22DotMarkerConfigurationV5StyleOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)unint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.Style()
{
  return &type metadata for TickMarkerConfiguration.Style;
}

uint64_t destroy for LabelMarkerConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LabelMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  unsigned int v3 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v4;
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LabelMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v4;
  id v6 = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 80) = *(_DWORD *)(a2 + 80);
  *(_DWORD *)(a1 + 84) = *(_DWORD *)(a2 + 84);
  return a1;
}

uint64_t assignWithTake for LabelMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;

  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for LabelMarkerConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LabelMarkerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LabelMarkerConfiguration()
{
  return &type metadata for LabelMarkerConfiguration;
}

uint64_t destroy for DigiBarSingleMarkerConfiguration(uint64_t a1)
{
  return sub_2498FDC60(*(void *)(a1 + 56), *(void *)(a1 + 64), *(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88));
}

uint64_t initializeWithCopy for DigiBarSingleMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 45) = *(void *)(a2 + 45);
  uint64_t v4 = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  id v6 = *(void **)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 80);
  unint64_t v8 = *(void *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 96);
  uint64_t v10 = *(void *)(a2 + 104);
  uint64_t v11 = *(void *)(a2 + 112);
  uint64_t v12 = *(void *)(a2 + 120);
  uint64_t v14 = *(void *)(a2 + 128);
  uint64_t v15 = *(void *)(a2 + 136);
  sub_2498FC6B8(v4, v5, v6, v7, v8);
  *(void *)(a1 + 56) = v4;
  *(void *)(a1 + 64) = v5;
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = v7;
  *(void *)(a1 + 88) = v8;
  *(void *)(a1 + 96) = v9;
  *(void *)(a1 + 104) = v10;
  *(void *)(a1 + 112) = v11;
  *(void *)(a1 + 120) = v12;
  *(void *)(a1 + 128) = v14;
  *(void *)(a1 + 136) = v15;
  return a1;
}

uint64_t assignWithCopy for DigiBarSingleMarkerConfiguration(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  long long v4 = a2[1];
  long long v5 = a2[2];
  *(void *)(a1 + 45) = *(void *)((char *)a2 + 45);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)a1 = v3;
  uint64_t v6 = *((void *)a2 + 7);
  uint64_t v7 = *((void *)a2 + 8);
  unint64_t v8 = (void *)*((void *)a2 + 9);
  uint64_t v9 = *((void *)a2 + 10);
  unint64_t v10 = *((void *)a2 + 11);
  uint64_t v11 = *((void *)a2 + 12);
  uint64_t v12 = *((void *)a2 + 13);
  uint64_t v13 = *((void *)a2 + 14);
  uint64_t v14 = *((void *)a2 + 15);
  uint64_t v21 = *((void *)a2 + 16);
  uint64_t v22 = *((void *)a2 + 17);
  sub_2498FC6B8(v6, v7, v8, v9, v10);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 64);
  long long v17 = *(void **)(a1 + 72);
  uint64_t v18 = *(void *)(a1 + 80);
  unint64_t v19 = *(void *)(a1 + 88);
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  *(void *)(a1 + 80) = v9;
  *(void *)(a1 + 88) = v10;
  *(void *)(a1 + 96) = v11;
  *(void *)(a1 + 104) = v12;
  *(void *)(a1 + 112) = v13;
  *(void *)(a1 + 120) = v14;
  *(void *)(a1 + 128) = v21;
  *(void *)(a1 + 136) = v22;
  sub_2498FDC60(v15, v16, v17, v18, v19);
  return a1;
}

uint64_t assignWithTake for DigiBarSingleMarkerConfiguration(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 45) = *(void *)(a2 + 45);
  uint64_t v4 = *(void *)(a2 + 136);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = *(void **)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  unint64_t v9 = *(void *)(a1 + 88);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = v4;
  sub_2498FDC60(v5, v7, v6, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for DigiBarSingleMarkerConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 144)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 16) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for DigiBarSingleMarkerConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 2 * -a2;
      *(void *)(result + 24) = 0;
      *(void *)(result + 32) = 0;
      *(void *)(result + 40) = 0;
      *(void *)(result + 45) = 0;
      return result;
    }
    *(unsigned char *)(result + 144) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarSingleMarkerConfiguration()
{
  return &type metadata for DigiBarSingleMarkerConfiguration;
}

uint64_t _s14CarPlayAssetUI17DigiBarMarkerTypeOwxx_0(uint64_t a1)
{
  return sub_2498FDC60(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
}

uint64_t *_s14CarPlayAssetUI17DigiBarMarkerTypeOwcp_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v13 = a2[9];
  uint64_t v14 = a2[10];
  sub_2498FC6B8(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (uint64_t)v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  return a1;
}

uint64_t *_s14CarPlayAssetUI17DigiBarMarkerTypeOwca_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = (void *)a2[2];
  uint64_t v6 = a2[3];
  unint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  uint64_t v18 = a2[9];
  uint64_t v19 = a2[10];
  sub_2498FC6B8(*a2, v4, v5, v6, v7);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = (void *)a1[2];
  uint64_t v15 = a1[3];
  unint64_t v16 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = (uint64_t)v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v18;
  a1[10] = v19;
  sub_2498FDC60(v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s14CarPlayAssetUI17DigiBarMarkerTypeOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 80);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  unint64_t v8 = *(void *)(a1 + 32);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  long long v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = v3;
  sub_2498FDC60(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t _s14CarPlayAssetUI17DigiBarMarkerTypeOwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 32) >> 2) & 0xFFFFFF80 | (*(void *)(a1 + 32) >> 1);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double sub_2499CE42C(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = (4 * -a2) & 0x3FFFFFE00 | (2 * (-a2 & 0x7FLL));
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      *(_OWORD *)(a1 + 72) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration()
{
  return &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration;
}

ValueMetadata *type metadata accessor for DigiBarSingleMarkerConfiguration.CodingKeys()
{
  return &type metadata for DigiBarSingleMarkerConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.CodingKeys()
{
  return &type metadata for DigiBarSingleMarkerConfiguration.DigiBarMarkerConfiguration.CodingKeys;
}

uint64_t getEnumTagSinglePayload for LabelMarkerConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LabelMarkerConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *double result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499CE634);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LabelMarkerConfiguration.CodingKeys()
{
  return &type metadata for LabelMarkerConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TickMarkerConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499CE738);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.CodingKeys()
{
  return &type metadata for TickMarkerConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.Style.CodingKeys()
{
  return &type metadata for TickMarkerConfiguration.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.Style.MaskCodingKeys()
{
  return &type metadata for TickMarkerConfiguration.Style.MaskCodingKeys;
}

ValueMetadata *type metadata accessor for TickMarkerConfiguration.Style.ColorCodingKeys()
{
  return &type metadata for TickMarkerConfiguration.Style.ColorCodingKeys;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.CodingKeys()
{
  return &type metadata for DotMarkerConfiguration.CodingKeys;
}

unsigned char *_s14CarPlayAssetUI32DigiBarSingleMarkerConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499CE87CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.Style.CodingKeys()
{
  return &type metadata for DotMarkerConfiguration.Style.CodingKeys;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.Style.MaskCodingKeys()
{
  return &type metadata for DotMarkerConfiguration.Style.MaskCodingKeys;
}

ValueMetadata *type metadata accessor for DotMarkerConfiguration.Style.ColorCodingKeys()
{
  return &type metadata for DotMarkerConfiguration.Style.ColorCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DigiBarMarkerType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *double result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499CE9A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType.CodingKeys()
{
  return &type metadata for DigiBarMarkerType.CodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType.DotCodingKeys()
{
  return &type metadata for DigiBarMarkerType.DotCodingKeys;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType.TickCodingKeys()
{
  return &type metadata for DigiBarMarkerType.TickCodingKeys;
}

unsigned char *_s14CarPlayAssetUI32DigiBarSingleMarkerConfigurationV26DigiBarMarkerConfigurationV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x2499CEA94);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DigiBarMarkerType.LabelCodingKeys()
{
  return &type metadata for DigiBarMarkerType.LabelCodingKeys;
}

unint64_t sub_2499CEAD0()
{
  unint64_t result = qword_2696E2720;
  if (!qword_2696E2720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2720);
  }
  return result;
}

unint64_t sub_2499CEB28()
{
  unint64_t result = qword_2696E2728;
  if (!qword_2696E2728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2728);
  }
  return result;
}

unint64_t sub_2499CEB80()
{
  unint64_t result = qword_2696E2730;
  if (!qword_2696E2730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2730);
  }
  return result;
}

unint64_t sub_2499CEBD8()
{
  unint64_t result = qword_2696E2738;
  if (!qword_2696E2738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2738);
  }
  return result;
}

unint64_t sub_2499CEC30()
{
  unint64_t result = qword_2696E2740;
  if (!qword_2696E2740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2740);
  }
  return result;
}

unint64_t sub_2499CEC88()
{
  unint64_t result = qword_2696E2748;
  if (!qword_2696E2748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2748);
  }
  return result;
}

unint64_t sub_2499CECE0()
{
  unint64_t result = qword_2696E2750;
  if (!qword_2696E2750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2750);
  }
  return result;
}

unint64_t sub_2499CED38()
{
  unint64_t result = qword_2696E2758;
  if (!qword_2696E2758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2758);
  }
  return result;
}

unint64_t sub_2499CED90()
{
  unint64_t result = qword_2696E2760;
  if (!qword_2696E2760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2760);
  }
  return result;
}

unint64_t sub_2499CEDE8()
{
  unint64_t result = qword_2696E2768;
  if (!qword_2696E2768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2768);
  }
  return result;
}

unint64_t sub_2499CEE40()
{
  unint64_t result = qword_2696E2770;
  if (!qword_2696E2770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2770);
  }
  return result;
}

unint64_t sub_2499CEE98()
{
  unint64_t result = qword_2696E2778;
  if (!qword_2696E2778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2778);
  }
  return result;
}

unint64_t sub_2499CEEF0()
{
  unint64_t result = qword_2696E2780;
  if (!qword_2696E2780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2780);
  }
  return result;
}

unint64_t sub_2499CEF48()
{
  unint64_t result = qword_2696E2788;
  if (!qword_2696E2788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2788);
  }
  return result;
}

unint64_t sub_2499CEFA0()
{
  unint64_t result = qword_2696E2790;
  if (!qword_2696E2790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2790);
  }
  return result;
}

unint64_t sub_2499CEFF8()
{
  unint64_t result = qword_2696E2798;
  if (!qword_2696E2798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2798);
  }
  return result;
}

unint64_t sub_2499CF050()
{
  unint64_t result = qword_2696E27A0;
  if (!qword_2696E27A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27A0);
  }
  return result;
}

unint64_t sub_2499CF0A8()
{
  unint64_t result = qword_2696E27A8;
  if (!qword_2696E27A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27A8);
  }
  return result;
}

unint64_t sub_2499CF100()
{
  unint64_t result = qword_2696E27B0;
  if (!qword_2696E27B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27B0);
  }
  return result;
}

unint64_t sub_2499CF158()
{
  unint64_t result = qword_2696E27B8;
  if (!qword_2696E27B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27B8);
  }
  return result;
}

unint64_t sub_2499CF1B0()
{
  unint64_t result = qword_2696E27C0;
  if (!qword_2696E27C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27C0);
  }
  return result;
}

unint64_t sub_2499CF208()
{
  unint64_t result = qword_2696E27C8;
  if (!qword_2696E27C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27C8);
  }
  return result;
}

unint64_t sub_2499CF260()
{
  unint64_t result = qword_2696E27D0;
  if (!qword_2696E27D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27D0);
  }
  return result;
}

unint64_t sub_2499CF2B8()
{
  unint64_t result = qword_2696E27D8;
  if (!qword_2696E27D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27D8);
  }
  return result;
}

unint64_t sub_2499CF310()
{
  unint64_t result = qword_2696E27E0;
  if (!qword_2696E27E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27E0);
  }
  return result;
}

unint64_t sub_2499CF368()
{
  unint64_t result = qword_2696E27E8;
  if (!qword_2696E27E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27E8);
  }
  return result;
}

unint64_t sub_2499CF3C0()
{
  unint64_t result = qword_2696E27F0;
  if (!qword_2696E27F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27F0);
  }
  return result;
}

unint64_t sub_2499CF418()
{
  unint64_t result = qword_2696E27F8;
  if (!qword_2696E27F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E27F8);
  }
  return result;
}

unint64_t sub_2499CF470()
{
  unint64_t result = qword_2696E2800;
  if (!qword_2696E2800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2800);
  }
  return result;
}

unint64_t sub_2499CF4C8()
{
  unint64_t result = qword_2696E2808;
  if (!qword_2696E2808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2808);
  }
  return result;
}

unint64_t sub_2499CF520()
{
  unint64_t result = qword_2696E2810;
  if (!qword_2696E2810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2810);
  }
  return result;
}

unint64_t sub_2499CF578()
{
  unint64_t result = qword_2696E2818;
  if (!qword_2696E2818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2818);
  }
  return result;
}

unint64_t sub_2499CF5D0()
{
  unint64_t result = qword_2696E2820;
  if (!qword_2696E2820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2820);
  }
  return result;
}

unint64_t sub_2499CF628()
{
  unint64_t result = qword_2696E2828;
  if (!qword_2696E2828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2828);
  }
  return result;
}

unint64_t sub_2499CF680()
{
  unint64_t result = qword_2696E2830;
  if (!qword_2696E2830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2830);
  }
  return result;
}

unint64_t sub_2499CF6D8()
{
  unint64_t result = qword_2696E2838;
  if (!qword_2696E2838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2838);
  }
  return result;
}

unint64_t sub_2499CF730()
{
  unint64_t result = qword_2696E2840;
  if (!qword_2696E2840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2840);
  }
  return result;
}

unint64_t sub_2499CF788()
{
  unint64_t result = qword_2696E2848;
  if (!qword_2696E2848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2848);
  }
  return result;
}

unint64_t sub_2499CF7E0()
{
  unint64_t result = qword_2696E2850;
  if (!qword_2696E2850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2850);
  }
  return result;
}

unint64_t sub_2499CF838()
{
  unint64_t result = qword_2696E2858;
  if (!qword_2696E2858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2858);
  }
  return result;
}

unint64_t sub_2499CF890()
{
  unint64_t result = qword_2696E2860;
  if (!qword_2696E2860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2860);
  }
  return result;
}

unint64_t sub_2499CF8E8()
{
  unint64_t result = qword_2696E2868;
  if (!qword_2696E2868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2868);
  }
  return result;
}

unint64_t sub_2499CF940()
{
  unint64_t result = qword_2696E2870;
  if (!qword_2696E2870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2870);
  }
  return result;
}

uint64_t sub_2499CF994(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 7630692 && a2 == 0xE300000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1801677172 && a2 == 0xE400000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C6562616CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_2499CFAC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73656C797473 && a2 == 0xE600000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x737569646172 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2499CFBA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1802723693 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2499CFC84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6874646977 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6874676E656CLL && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x706143656E696CLL && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x73656C797473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_2499CFE28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953394534 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C6F4374786574 && a2 == 0xEC00000073444972 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B16960 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B16980 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B169A0 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_2499D00AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C797473 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_2499D0188(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 88);
  uint64_t v3 = *(void *)(a1 + 96);
  unsigned int v4 = *(void **)(a1 + 104);
  uint64_t v5 = *(void *)(a1 + 112);
  unint64_t v6 = *(void *)(a1 + 120);
  sub_2498FDC60(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32));
  sub_2498FDC60(v2, v3, v4, v5, v6);
  return a1;
}

uint64_t (*LayoutBackgroundViewBuilder.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (**a5)(uint64_t a1)@<X8>))(uint64_t a1)
{
  unint64_t result = (uint64_t (*)(uint64_t))swift_allocObject();
  *((void *)result + 2) = a3;
  *((void *)result + 3) = a4;
  *((void *)result + 4) = a1;
  *((void *)result + 5) = a2;
  *a5 = sub_2499D03A8;
  a5[1] = result;
  return result;
}

uint64_t sub_2499D02D0(uint64_t a1)
{
  __n128 v1 = MEMORY[0x270FA5388](a1);
  uint64_t v3 = v2[1];
  v6[0] = *v2;
  v6[1] = v3;
  v4(v6, v1);
  return sub_249AECAF8();
}

uint64_t sub_2499D0370()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2499D03A8(uint64_t a1)
{
  return sub_2499D02D0(a1);
}

ValueMetadata *type metadata accessor for LayoutBackgroundViewBuilder()
{
  return &type metadata for LayoutBackgroundViewBuilder;
}

unint64_t sub_2499D03C8()
{
  unint64_t result = qword_2696E2878;
  if (!qword_2696E2878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2878);
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentConfigurationError()
{
  return &type metadata for DocumentConfigurationError;
}

uint64_t sub_2499D0450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t sub_2499D0488(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  unsigned int v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    MEMORY[0x270FA5388](TupleTypeMetadata);
    int v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      long long v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        unint64_t v16 = &v8[8 * v9];
        long long v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)unint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadatCGFloat a = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  MEMORY[0x270FA5388](TupleTypeMetadata);
  float32x4_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_249AECCC8();
}

__n128 Carousel.init(model:style:content:)@<Q0>(__n128 *a1@<X1>, unint64_t a2@<X2>, unint64_t a3@<X3>, __n128 *a4@<X8>)
{
  __n128 v12 = *a1;
  unint64_t v7 = a1[1].n128_u64[0];
  unint64_t v8 = a1[1].n128_u64[1];
  unsigned __int8 v9 = a1[2].n128_u8[0];
  a4->n128_u64[0] = sub_2499D7544();
  a4->n128_u64[1] = v10;
  a4[1].n128_u64[0] = a2;
  a4[1].n128_u64[1] = a3;
  __n128 result = v12;
  a4[2] = v12;
  a4[3].n128_u64[0] = v7;
  a4[3].n128_u64[1] = v8;
  a4[4].n128_u8[0] = v9;
  return result;
}

uint64_t CarouselModel.__allocating_init(items:activeItem:alwaysHidesPlatter:platterVisibilityDuration:)(uint64_t a1, uint64_t a2, int a3, double a4)
{
  swift_allocObject();
  uint64_t v8 = sub_2499DBA98(a1, a2, a3, a4);
  uint64_t v9 = sub_249AED8D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a2, v9);
  return v8;
}

uint64_t sub_2499D0768(uint64_t a1)
{
  __n128 v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t PageControlPosition.hash(into:)()
{
  return sub_249AEE378();
}

uint64_t PageControlPosition.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_2499D0880()
{
  return sub_249AEE388();
}

uint64_t sub_2499D08E0()
{
  return sub_249AEE388();
}

uint64_t static CarouselModel.Direction.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  float32x4_t v31 = (char *)&v30 - v10;
  uint64_t v32 = a4;
  uint64_t v33 = a3;
  uint64_t v11 = type metadata accessor for CarouselModel.Direction();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v37 = (char *)&v30 - v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v36 = *(void *)(TupleTypeMetadata2 - 8);
  __n128 v15 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  long long v17 = (char *)&v30 - v16;
  uint64_t v34 = v12;
  uint64_t v35 = v18;
  uint64_t v19 = (char *)&v30 + *(int *)(v18 + 48) - v16;
  float32x4_t v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16);
  v20((char *)&v30 - v16, a1, v11, v15);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v19, a2, v11);
  uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v22 = v21(v17, 2, AssociatedTypeWitness);
  if (v22)
  {
    if (v22 == 1)
    {
      if (v21(v19, 2, AssociatedTypeWitness) != 1) {
        goto LABEL_9;
      }
      goto LABEL_8;
    }
    if (v21(v19, 2, AssociatedTypeWitness) == 2)
    {
LABEL_8:
      char v23 = 1;
LABEL_11:
      uint64_t v24 = v34;
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v30 = v9;
    ((void (*)(char *, char *, uint64_t))v20)(v37, v17, v11);
    if (!v21(v19, 2, AssociatedTypeWitness))
    {
      uint64_t v25 = v30;
      uint64_t v26 = v31;
      (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v31, v19, AssociatedTypeWitness);
      swift_getAssociatedConformanceWitness();
      uint64_t v27 = v37;
      char v23 = sub_249AED088();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
      v28(v26, AssociatedTypeWitness);
      v28(v27, AssociatedTypeWitness);
      goto LABEL_11;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v37, AssociatedTypeWitness);
  }
LABEL_9:
  char v23 = 0;
  uint64_t v11 = v35;
  uint64_t v24 = v36;
LABEL_12:
  (*(void (**)(char *, uint64_t))(v24 + 8))(v17, v11);
  return v23 & 1;
}

uint64_t sub_2499D0CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  __n128 v5 = MEMORY[0x270FA5388](a1);
  unint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v7, a1, a2, v5);
  sub_2499DB810((uint64_t)v7, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_2499D0DD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static CarouselModel.Direction.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_2499D0DE4(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  __n128 v5 = (char *)&v7 - v4;
  sub_2499D0FF4();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2499D0F4C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_2499D1CC8();
}

uint64_t sub_2499D0F4C()
{
  sub_249AED4F8();
  swift_getWitnessTable();
  sub_249AED698();
  if (v2) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_2499D0FF4()
{
  return swift_release();
}

uint64_t sub_2499D10B0()
{
  return swift_endAccess();
}

uint64_t CarouselModel.alwaysHidesPlatter.getter()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 104));
}

uint64_t sub_2499D115C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  long long v10 = *(_OWORD *)(a2 + a1 - 16);
  uint64_t v4 = sub_2499DC760();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  if (v4)
  {
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    uint64_t v8 = sub_2499E0F18;
  }
  else
  {
    uint64_t v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())v4;

  return sub_2498B9AA8(v5);
}

uint64_t sub_2499D1200(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1)
  {
    uint64_t v6 = a4 + a3;
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(void *)(v7 + 32) = v4;
    *(void *)(v7 + 40) = v5;
    uint64_t v8 = sub_2499E0F5C;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  sub_2498B9AA8(v4);
  return sub_2499D12D0((uint64_t)v8, v7);
}

uint64_t sub_2499D129C()
{
  uint64_t v0 = sub_2499DC760();
  sub_2498B9AA8(v0);
  return v0;
}

uint64_t sub_2499D12D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 112));
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_2498B9AB8(v4);
}

uint64_t (*sub_2499D12FC(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 112));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  sub_2498B9AA8(v4);
  return sub_2499D1360;
}

uint64_t sub_2499D1360(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  if (a2)
  {
    sub_2498B9AA8(*a1);
    uint64_t v5 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 112));
    uint64_t v6 = *v5;
    *uint64_t v5 = v3;
    v5[1] = v2;
    sub_2498B9AB8(v6);
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v8 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 112));
    uint64_t v7 = *v8;
    *uint64_t v8 = v3;
    v8[1] = v2;
  }

  return sub_2498B9AB8(v7);
}

uint64_t sub_2499D13FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  long long v10 = *(_OWORD *)(a2 + a1 - 16);
  uint64_t v4 = sub_2499DC780();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  if (v4)
  {
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    uint64_t v8 = sub_2499E0F18;
  }
  else
  {
    uint64_t v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())v4;

  return sub_2498B9AA8(v5);
}

uint64_t sub_2499D14A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1)
  {
    uint64_t v6 = a4 + a3;
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(void *)(v7 + 32) = v4;
    *(void *)(v7 + 40) = v5;
    uint64_t v8 = sub_2499E0F5C;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  sub_2498B9AA8(v4);
  return sub_2499D1570((uint64_t)v8, v7);
}

uint64_t sub_2499D153C()
{
  uint64_t v0 = sub_2499DC780();
  sub_2498B9AA8(v0);
  return v0;
}

uint64_t sub_2499D1570(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 120));
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  v3[1] = a2;
  return sub_2498B9AB8(v4);
}

uint64_t (*sub_2499D159C(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 120));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  *a1 = *v3;
  a1[1] = v5;
  sub_2498B9AA8(v4);
  return sub_2499D1600;
}

uint64_t sub_2499D1600(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  if (a2)
  {
    sub_2498B9AA8(*a1);
    uint64_t v5 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 120));
    uint64_t v6 = *v5;
    *uint64_t v5 = v3;
    v5[1] = v2;
    sub_2498B9AB8(v6);
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v8 = (uint64_t *)(v4 + *(void *)(*(void *)v4 + 120));
    uint64_t v7 = *v8;
    *uint64_t v8 = v3;
    v8[1] = v2;
  }

  return sub_2498B9AB8(v7);
}

uint64_t sub_2499D169C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  long long v10 = *(_OWORD *)(a2 + a1 - 16);
  uint64_t v4 = sub_2499DC7A0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  if (v4)
  {
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    uint64_t v8 = sub_2499E0F18;
  }
  else
  {
    uint64_t v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())v4;

  return sub_2498B9AA8(v5);
}

uint64_t sub_2499D1740(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1)
  {
    uint64_t v6 = a4 + a3;
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(void *)(v7 + 32) = v4;
    *(void *)(v7 + 40) = v5;
    uint64_t v8 = sub_2499E0F5C;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  sub_2498B9AA8(v4);
  return sub_2499D1810((uint64_t)v8, v7);
}

uint64_t sub_2499D17DC()
{
  uint64_t v0 = sub_2499DC7A0();
  sub_2498B9AA8(v0);
  return v0;
}

uint64_t sub_2499D1810(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 128));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_2498B9AB8(v6);
}

uint64_t (*sub_2499D187C())()
{
  return j__swift_endAccess;
}

uint64_t sub_2499D18E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (**a3)()@<X8>)
{
  long long v10 = *(_OWORD *)(a2 + a1 - 16);
  uint64_t v4 = sub_2499DC7F4();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  if (v4)
  {
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = v10;
    *(void *)(v4 + 32) = v5;
    *(void *)(v4 + 40) = v7;
    uint64_t v8 = sub_2499E03BC;
  }
  else
  {
    uint64_t v8 = 0;
  }
  *a3 = v8;
  a3[1] = (uint64_t (*)())v4;

  return sub_2498B9AA8(v5);
}

uint64_t sub_2499D1988(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if (*a1)
  {
    uint64_t v6 = a4 + a3;
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = *(_OWORD *)(v6 - 16);
    *(void *)(v7 + 32) = v4;
    *(void *)(v7 + 40) = v5;
    uint64_t v8 = sub_2499E0394;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  sub_2498B9AA8(v4);
  return sub_2499D1A58((uint64_t)v8, v7);
}

uint64_t sub_2499D1A24()
{
  uint64_t v0 = sub_2499DC7F4();
  sub_2498B9AA8(v0);
  return v0;
}

uint64_t sub_2499D1A58(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 136));
  swift_beginAccess();
  uint64_t v6 = *v5;
  *uint64_t v5 = a1;
  v5[1] = a2;
  return sub_2498B9AB8(v6);
}

uint64_t (*sub_2499D1AC4())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_2499D1B2C()
{
  sub_2499DC4A8();

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499D1B54(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 144));
  swift_beginAccess();
  *uint64_t v3 = a1;
  uint64_t v4 = swift_bridgeObjectRelease();
  return sub_2499D0DE4(v4);
}

uint64_t sub_2499D1BC0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2499D1C14();
  *a1 = result;
  return result;
}

uint64_t sub_2499D1BEC()
{
  return sub_2499D1CC8();
}

uint64_t sub_2499D1C14()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2499D1CC8()
{
  return sub_249AEB9F8();
}

uint64_t sub_2499D1D80(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2AF8);
  __n128 v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v6 + 16))(v5, a1, v3);
  return sub_2499D1EC0((uint64_t)v5);
}

uint64_t sub_2499D1E50()
{
  return swift_endAccess();
}

uint64_t sub_2499D1EC0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2AF8);
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE28);
  sub_249AEB9C8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_2499D1FF8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2499D20AC()
{
  return sub_249AEB9F8();
}

uint64_t sub_2499D2164()
{
  return sub_2499D21A0();
}

uint64_t sub_2499D2178()
{
  return sub_2499D2268();
}

uint64_t sub_2499D218C()
{
  return sub_2499D21A0();
}

uint64_t sub_2499D21A0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_2499D2254()
{
  return sub_2499D2268();
}

uint64_t sub_2499D2268()
{
  return sub_249AEB9F8();
}

uint64_t CarouselModel.init(items:activeItem:alwaysHidesPlatter:platterVisibilityDuration:)(uint64_t a1, uint64_t a2, int a3, double a4)
{
  uint64_t v5 = sub_2499DBA98(a1, a2, a3, a4);
  uint64_t v6 = sub_249AED8D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a2, v6);
  return v5;
}

uint64_t sub_2499D23A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a2;
  uint64_t v19 = sub_249AED8D8();
  uint64_t v4 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v6 = (char *)&v18 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v18 - v12;
  sub_249AEDAA8();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v20, v19);
  uint64_t v14 = *(void *)(a3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, a3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_249AEDAA8();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, a3);
    swift_getAssociatedConformanceWitness();
    char v16 = sub_249AED088();
    long long v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v10, AssociatedTypeWitness);
    v17(v13, AssociatedTypeWitness);
    return v16 & 1;
  }
  return result;
}

uint64_t sub_2499D2644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v28 = *v2;
  uint64_t v29 = a1;
  uint64_t v3 = *(void *)(v28 + 88);
  uint64_t v4 = *(void *)(v28 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v24 = v3;
  uint64_t v25 = (char *)&v24 - v6;
  uint64_t v7 = type metadata accessor for CarouselModel.Direction();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v24 - v9;
  uint64_t v11 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v24 - v13;
  sub_2499D0FF4();
  sub_2499D1FF8();
  uint64_t v15 = sub_2499D0F4C();
  uint64_t v16 = v27;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v29, v7);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v10, 2, AssociatedTypeWitness);
  if (!result)
  {
    uint64_t v19 = v25;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v25, v10, AssociatedTypeWitness);
    uint64_t v30 = sub_2499D1FF8();
    MEMORY[0x270FA5388](v30);
    uint64_t v20 = v24;
    *(&v24 - 4) = v4;
    *(&v24 - 3) = v20;
    *(&v24 - 2) = (uint64_t)v19;
    sub_249AED4F8();
    swift_getWitnessTable();
    sub_249AED2E8();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, AssociatedTypeWitness);
  }
  if (result != 1)
  {
    if (!__OFADD__(v15, 1))
    {
      sub_2499D1FF8();
      uint64_t v21 = MEMORY[0x24C5AE620]();
      swift_bridgeObjectRelease();
      uint64_t v22 = sub_2499D1FF8();
      if (v15 + 1 >= v21)
      {
        uint64_t v30 = v22;
        sub_249AED4F8();
        swift_getWitnessTable();
        sub_249AED6C8();
        return swift_bridgeObjectRelease();
      }
LABEL_9:
      uint64_t v23 = v26;
      sub_249AED518();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v23, 0, 1, v4);
    }
LABEL_14:
    __break(1u);
    return result;
  }
  if (__OFSUB__(v15, 1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v18 = sub_2499D1FF8();
  if (((v15 - 1) & 0x8000000000000000) == 0) {
    goto LABEL_9;
  }
  uint64_t v30 = v18;
  sub_249AED4F8();
  swift_getWitnessTable();
  sub_249AECFB8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2499D2B00(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = a1;
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 80);
  uint64_t v7 = sub_249AED8D8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  long long v10 = (char *)&v50 - v9;
  uint64_t v11 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v55 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v15 = MEMORY[0x270FA5388](v14);
  long long v17 = (char *)&v50 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, a2, v7, v15);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v6);
  uint64_t v54 = v11;
  if (v18 == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v17, v10, v6);
    uint64_t v19 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 144));
    uint64_t v20 = swift_beginAccess();
    uint64_t v59 = *v19;
    MEMORY[0x270FA5388](v20);
    uint64_t v22 = *(void *)(v21 + 88);
    *(&v50 - 4) = v6;
    *(&v50 - 3) = v22;
    uint64_t v51 = v22;
    uint64_t v52 = v21;
    *(&v50 - 2) = (uint64_t)v17;
    sub_249AED4F8();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    sub_249AED698();
    swift_bridgeObjectRelease();
    if (v58 != 1)
    {
      uint64_t v56 = sub_2499D1FF8();
      MEMORY[0x270FA5388](v56);
      uint64_t v23 = v51;
      *(&v50 - 4) = v6;
      *(&v50 - 3) = v23;
      *(&v50 - 2) = (uint64_t)v17;
      sub_249AED698();
      swift_bridgeObjectRelease();
      if (v61 != 1)
      {
        uint64_t v50 = v60;
        uint64_t v27 = v53;
        uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 16);
        uint64_t v44 = v55;
        v43(v55, v53, v6);
        swift_beginAccess();
        sub_249AED4D8();
        uint64_t v45 = swift_endAccess();
        sub_2499D0DE4(v45);
        uint64_t v46 = ((uint64_t (*)(char *, uint64_t, uint64_t))v43)(v44, v27, v6);
        MEMORY[0x270FA5388](v46);
        uint64_t v47 = v51;
        *(&v50 - 2) = v6;
        *(&v50 - 1) = v47;
        uint64_t KeyPath = swift_getKeyPath();
        MEMORY[0x270FA5388](KeyPath);
        *(&v50 - 2) = v6;
        *(&v50 - 1) = v47;
        swift_getKeyPath();
        uint64_t v49 = (void (*)(uint64_t *, void))sub_249AEB9D8();
        sub_249AED4D8();
        v49(&v57, 0);
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v17, v6);
        goto LABEL_13;
      }
      uint64_t v11 = v54;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v17, v6);
    uint64_t v5 = v52;
  }
  uint64_t v24 = v55;
  uint64_t v25 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 144));
  swift_beginAccess();
  uint64_t v60 = *v25;
  sub_249AED4F8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_249AED698();
  swift_bridgeObjectRelease();
  if ((v58 & 1) != 0 || (uint64_t v60 = sub_2499D1FF8(), sub_249AED698(), swift_bridgeObjectRelease(), v58 == 1))
  {
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v27 = v53;
    v26(v24, v53, v6);
    swift_beginAccess();
    sub_249AED4C8();
    uint64_t v28 = swift_endAccess();
    sub_2499D0DE4(v28);
    uint64_t v29 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v24, v27, v6);
    MEMORY[0x270FA5388](v29);
    uint64_t v30 = *(void *)(v5 + 88);
    *(&v50 - 2) = v6;
    *(&v50 - 1) = v30;
    uint64_t v31 = swift_getKeyPath();
    MEMORY[0x270FA5388](v31);
    *(&v50 - 2) = v6;
    *(&v50 - 1) = v30;
    swift_getKeyPath();
    uint64_t v32 = (void (*)(uint64_t *, void))sub_249AEB9D8();
    sub_249AED4C8();
  }
  else
  {
    uint64_t v33 = v5;
    uint64_t v34 = v57;
    uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v27 = v53;
    v35(v24, v53, v6);
    swift_beginAccess();
    sub_249AED4C8();
    uint64_t v36 = swift_endAccess();
    sub_2499D0DE4(v36);
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v35)(v24, v27, v6);
    uint64_t v52 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
      __break(1u);
      return result;
    }
    MEMORY[0x270FA5388](result);
    uint64_t v38 = *(void *)(v33 + 88);
    *(&v50 - 2) = v6;
    *(&v50 - 1) = v38;
    uint64_t v39 = swift_getKeyPath();
    MEMORY[0x270FA5388](v39);
    *(&v50 - 2) = v6;
    *(&v50 - 1) = v38;
    swift_getKeyPath();
    uint64_t v32 = (void (*)(uint64_t *, void))sub_249AEB9D8();
    sub_249AED4D8();
  }
  v32(&v57, 0);
  swift_release();
  swift_release();
LABEL_13:
  swift_beginAccess();
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = MEMORY[0x24C5AE620](v40, v6);
  swift_bridgeObjectRelease();
  if (v41 == 1) {
    sub_2499DC4FC(v27);
  }
  char v42 = v55;
  sub_2499D0FF4();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_2499D0F4C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v6);
  return sub_2499D1CC8();
}

uint64_t sub_2499D34C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)a2 + 88);
  uint64_t v4 = *(void *)(*(void *)a2 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v52 = (char *)v51 - v6;
  uint64_t v7 = sub_249AED8D8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v54 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  __int16 v62 = (char *)v51 - v8;
  uint64_t v56 = sub_249AED8D8();
  uint64_t v9 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v11 = (char *)v51 - v10;
  uint64_t v60 = v7;
  uint64_t v59 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v53 = (char *)v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v51 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v51 - v18;
  uint64_t v55 = v3;
  sub_249AEDAA8();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56);
  uint64_t v57 = v19;
  uint64_t v21 = v19;
  uint64_t v22 = v20;
  uint64_t v61 = AssociatedTypeWitness;
  v20(v21, 0, 1, AssociatedTypeWitness);
  uint64_t v23 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 144));
  swift_beginAccess();
  uint64_t v64 = *v23;
  sub_249AED4F8();
  swift_getWitnessTable();
  sub_249AECFB8();
  uint64_t v24 = *(void *)(v4 - 8);
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v11, 1, v4);
  v51[1] = v4;
  if (v25 == 1)
  {
    uint64_t v26 = v16;
    uint64_t v27 = v56;
    uint64_t v28 = 1;
  }
  else
  {
    sub_249AEDAA8();
    uint64_t v28 = 0;
    uint64_t v9 = v24;
    uint64_t v27 = v4;
    uint64_t v26 = v16;
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v27);
  uint64_t v29 = v61;
  v22(v26, v28, 1, v61);
  uint64_t v30 = v59;
  uint64_t v31 = v62;
  uint64_t v32 = &v62[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  uint64_t v34 = v57;
  uint64_t v35 = v60;
  v33(v62, v57, v60);
  uint64_t v56 = (uint64_t)v32;
  v33(v32, v26, v35);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48);
  if (v36((uint64_t)v31, 1, v29) != 1)
  {
    v51[0] = v26;
    uint64_t v41 = v53;
    uint64_t v42 = v60;
    v33(v53, v62, v60);
    uint64_t v43 = v56;
    uint64_t v44 = v61;
    if (v36(v56, 1, v61) != 1)
    {
      uint64_t v46 = v63;
      uint64_t v47 = v52;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v52, v43, v44);
      swift_getAssociatedConformanceWitness();
      char v40 = sub_249AED088();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v46 + 8);
      v48(v47, v44);
      uint64_t v49 = *(void (**)(char *, uint64_t))(v59 + 8);
      v49((char *)v51[0], v42);
      v49(v57, v42);
      v48(v41, v44);
      v49(v62, v42);
      return v40 & 1;
    }
    uint64_t v45 = *(void (**)(char *, uint64_t))(v59 + 8);
    v45((char *)v51[0], v42);
    v45(v57, v42);
    (*(void (**)(char *, uint64_t))(v63 + 8))(v41, v44);
    goto LABEL_9;
  }
  uint64_t v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v38 = v26;
  uint64_t v39 = v60;
  v37(v38, v60);
  v37(v34, v39);
  if (v36(v56, 1, v61) != 1)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v54 + 8))(v62, TupleTypeMetadata2);
    char v40 = 0;
    return v40 & 1;
  }
  v37(v62, v39);
  char v40 = 1;
  return v40 & 1;
}

uint64_t sub_2499D3B88(uint64_t (*a1)(void, void), uint64_t (*a2)(char *, uint64_t), int a3)
{
  uint64_t v4 = (uint64_t)v3;
  int v52 = a3;
  uint64_t v61 = (uint64_t (*)(char *, uint64_t))a2;
  uint64_t v6 = (void *)*v3;
  uint64_t v55 = sub_249AEC408();
  uint64_t v54 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v53 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v6[10];
  uint64_t v51 = sub_249AED8D8();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v56 = (uint64_t)&v48 - v9;
  uint64_t WitnessTable = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v57 = (char *)&v48 - v11;
  uint64_t v12 = v6[11];
  uint64_t v13 = type metadata accessor for CarouselModel.Direction();
  __int16 v62 = *(uint64_t **)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  char v58 = (char *)&v48 - v14;
  uint64_t v15 = sub_249AED8D8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v63 = (uint64_t)&v48 - v20;
  uint64_t v21 = (uint64_t *)(v4 + v6[18]);
  swift_beginAccess();
  uint64_t v68 = *v21;
  uint64_t v64 = v8;
  uint64_t v65 = v12;
  uint64_t v60 = v12;
  uint64_t v66 = a1;
  sub_249AED4F8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  LOBYTE(v21) = sub_249AED328();
  uint64_t result = swift_bridgeObjectRelease();
  if (v21)
  {
    uint64_t v23 = v63;
    sub_2499D44CC((uint64_t)v61, v4, (uint64_t)a1, v63);
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v23, v15);
    int v24 = ((uint64_t (*)(char *, uint64_t, uint64_t))v62[6])(v18, 1, v13);
    uint64_t v49 = v15;
    if (v24 == 1)
    {
      uint64_t v61 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
      __int16 v62 = (uint64_t *)(v16 + 8);
      uint64_t v25 = v61(v18, v15);
      char v58 = (char *)&v48;
      MEMORY[0x270FA5388](v25);
      uint64_t v26 = v60;
      *(&v48 - 4) = v8;
      *(&v48 - 3) = v26;
      *(&v48 - 2) = (uint64_t)a1;
      swift_beginAccess();
      swift_getWitnessTable();
      uint64_t WitnessTable = swift_getWitnessTable();
      sub_249AED758();
      uint64_t v27 = swift_endAccess();
      uint64_t v28 = sub_2499D0DE4(v27);
      char v58 = (char *)&v48;
      MEMORY[0x270FA5388](v28);
      *(&v48 - 4) = v8;
      *(&v48 - 3) = v26;
      *(&v48 - 2) = (uint64_t)a1;
      MEMORY[0x270FA5388](v29);
      *(&v48 - 2) = v8;
      *(&v48 - 1) = v26;
      uint64_t KeyPath = swift_getKeyPath();
      MEMORY[0x270FA5388](KeyPath);
      *(&v48 - 2) = v8;
      *(&v48 - 1) = v26;
      swift_getKeyPath();
      uint64_t v31 = (void (*)(char *, void))sub_249AEB9D8();
      sub_249AED758();
      v31(v67, 0);
      swift_release();
      swift_release();
      return v61((char *)v63, v49);
    }
    else
    {
      uint64_t v32 = v13;
      uint64_t v61 = (uint64_t (*)(char *, uint64_t))a1;
      uint64_t v33 = v62;
      uint64_t v34 = v63;
      uint64_t v35 = (uint64_t)v58;
      ((void (*)(void))v62[4])();
      uint64_t v36 = v56;
      uint64_t v37 = v32;
      sub_2499D4E54(v35, v56);
      uint64_t v38 = WitnessTable;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(WitnessTable + 48))(v36, 1, v8) == 1)
      {
        ((void (*)(uint64_t, uint64_t))v33[1])(v35, v37);
        (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v34, v49);
        return (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 8))(v36, v51);
      }
      else
      {
        uint64_t v51 = v37;
        uint64_t v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 32))(v57, v36, v8);
        char v40 = v52;
        uint64_t v41 = v33;
        if (v52) {
          uint64_t v39 = swift_retain();
        }
        __int16 v62 = &v48;
        MEMORY[0x270FA5388](v39);
        *(&v48 - 4) = v42;
        *((unsigned char *)&v48 - 24) = v40 & 1;
        uint64_t v43 = v57;
        *(&v48 - 2) = v4;
        *(&v48 - 1) = (uint64_t)v43;
        uint64_t v44 = swift_allocObject();
        swift_weakInit();
        uint64_t v45 = (void *)swift_allocObject();
        uint64_t v46 = v60;
        v45[2] = v8;
        v45[3] = v46;
        v45[4] = v44;
        swift_retain();
        uint64_t v47 = v53;
        sub_249AEC3E8();
        sub_249AEBCA8();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v54 + 8))(v47, v55);
        ((void (*)(char *, uint64_t))v41[1])(v58, v51);
        (*(void (**)(char *, uint64_t))(v16 + 8))((char *)v63, v49);
        (*(void (**)(char *, uint64_t))(WitnessTable + 8))(v43, v8);
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_2499D44CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v53 = a4;
  uint64_t v54 = a3;
  uint64_t v6 = *(void *)(*(void *)a2 + 80);
  uint64_t v57 = *(void *)(*(void *)a2 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v51 = (char *)v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v55 = (char *)v46 - v10;
  uint64_t v11 = sub_249AED8D8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v46 - v16;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v49 = (char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v22 = MEMORY[0x270FA5388](v21);
  uint64_t v56 = (char *)v46 - v23;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v12 + 16))(v17, a1, v11, v22);
  int v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v25 = v24(v17, 1, v6);
  uint64_t v50 = a2;
  if (v25 == 1)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
LABEL_5:
    uint64_t v34 = v51;
    uint64_t v33 = v52;
    goto LABEL_6;
  }
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v47 = v14;
  uint64_t v27 = v56;
  v26(v56, v17, v6);
  uint64_t v28 = *(void *)(*(void *)a2 + 144);
  uint64_t v48 = v24;
  uint64_t v29 = (uint64_t *)(a2 + v28);
  uint64_t v30 = swift_beginAccess();
  v46[1] = v46;
  uint64_t v58 = *v29;
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = v57;
  v46[-4] = v6;
  v46[-3] = v31;
  v46[-2] = v27;
  sub_249AED4F8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v32 = v47;
  sub_249AED2E8();
  swift_bridgeObjectRelease();
  LODWORD(v29) = v48(v32, 1, v6);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v32, v11);
  if (v29 == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v56, v6);
    goto LABEL_5;
  }
  uint64_t v41 = v55;
  sub_249AEDAA8();
  uint64_t v34 = v51;
  sub_249AEDAA8();
  swift_getAssociatedConformanceWitness();
  char v42 = sub_249AED088();
  uint64_t v33 = v52;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v52 + 8);
  v43(v34, AssociatedTypeWitness);
  v43(v41, AssociatedTypeWitness);
  if ((v42 & 1) == 0)
  {
    uint64_t v38 = v53;
    uint64_t v44 = v56;
    sub_249AEDAA8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v44, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v38, 0, 2, AssociatedTypeWitness);
    goto LABEL_12;
  }
  (*(void (**)(char *, uint64_t))(v18 + 8))(v56, v6);
LABEL_6:
  uint64_t v35 = v55;
  sub_249AEDAA8();
  uint64_t v36 = v49;
  sub_2499D0FF4();
  sub_249AEDAA8();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v36, v6);
  swift_getAssociatedConformanceWitness();
  LOBYTE(v36) = sub_249AED088();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v33 + 8);
  v37(v34, AssociatedTypeWitness);
  v37(v35, AssociatedTypeWitness);
  if ((v36 & 1) == 0)
  {
    uint64_t v39 = type metadata accessor for CarouselModel.Direction();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v53, 1, 1, v39);
  }
  uint64_t v38 = v53;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56))(v53, 2, 2, AssociatedTypeWitness);
LABEL_12:
  uint64_t v45 = type metadata accessor for CarouselModel.Direction();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v38, 0, 1, v45);
}

uint64_t sub_2499D4B70(uint64_t a1, int a2, uint64_t *a3)
{
  int v16 = a2;
  uint64_t v5 = *a3;
  uint64_t v6 = *(void *)(*a3 + 80);
  uint64_t v29 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v17 = (char *)&v14 - v7;
  sub_2499DC4FC(v8);
  uint64_t v25 = v6;
  uint64_t v26 = *(void *)(v5 + 88);
  uint64_t v9 = v26;
  uint64_t v27 = a1;
  swift_beginAccess();
  sub_249AED4F8();
  swift_getWitnessTable();
  swift_getWitnessTable();
  sub_249AED758();
  uint64_t v15 = v3;
  uint64_t v10 = swift_endAccess();
  sub_2499D0DE4(v10);
  uint64_t v22 = v6;
  uint64_t v23 = v9;
  uint64_t v24 = a1;
  uint64_t v20 = v6;
  uint64_t v21 = v9;
  swift_getKeyPath();
  uint64_t v18 = v6;
  uint64_t v19 = v9;
  swift_getKeyPath();
  uint64_t v11 = (void (*)(unsigned char *, void))sub_249AEB9D8();
  sub_249AED758();
  v11(v28, 0);
  swift_release();
  swift_release();
  sub_2499D2178();
  sub_2499D2254();
  uint64_t v12 = (uint64_t)v17;
  sub_2499D0FF4();
  sub_2499D6F40(v12);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v12, v6);
}

uint64_t sub_2499D4E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a1;
  uint64_t v64 = *v2;
  uint64_t v4 = *(void *)(v64 + 88);
  uint64_t v5 = *(void *)(v64 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v67 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  __int16 v62 = (char *)&v58 - v7;
  uint64_t v66 = v4;
  uint64_t v8 = type metadata accessor for CarouselModel.Direction();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v58 - v10;
  uint64_t v60 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v65 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  int v16 = (char *)&v58 - v15;
  sub_2499D1FF8();
  uint64_t v17 = MEMORY[0x24C5AE620]();
  swift_bridgeObjectRelease();
  if (v17 >= 2)
  {
    uint64_t v59 = a2;
    sub_2499D0FF4();
    uint64_t v69 = v2;
    sub_2499D1FF8();
    uint64_t v18 = sub_2499D0F4C();
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void (**)(char *, uint64_t))(v60 + 8);
    uint64_t v64 = v60 + 8;
    v63(v16, v5);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v68, v8);
    uint64_t v19 = v67;
    int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v67 + 48))(v11, 2, AssociatedTypeWitness);
    if (v20)
    {
      uint64_t v21 = v66;
      if (v20 == 1) {
        uint64_t v22 = -1;
      }
      else {
        uint64_t v22 = 1;
      }
      goto LABEL_29;
    }
    uint64_t v25 = AssociatedTypeWitness;
    uint64_t v26 = v19;
    uint64_t v27 = v62;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v62, v11, v25);
    uint64_t v68 = v25;
    uint64_t v72 = sub_2499D1FF8();
    MEMORY[0x270FA5388](v72);
    uint64_t v21 = v66;
    *(&v58 - 4) = v5;
    *(&v58 - 3) = v21;
    *(&v58 - 2) = (uint64_t)v27;
    sub_249AED4F8();
    swift_getWitnessTable();
    sub_249AED698();
    uint64_t result = swift_bridgeObjectRelease();
    if (v71)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v27, v68);
      uint64_t v22 = 0;
      goto LABEL_29;
    }
    uint64_t v28 = v68;
    uint64_t v29 = v70;
    uint64_t v30 = v70 - v18;
    BOOL v31 = __OFSUB__(v70, v18);
    if (v70 >= v18)
    {
      if (v31)
      {
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
      sub_2499D1FF8();
      uint64_t v36 = MEMORY[0x24C5AE620]();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v37 = v30 - v36;
      if (__OFSUB__(v30, v36))
      {
LABEL_60:
        __break(1u);
        goto LABEL_61;
      }
      uint64_t v34 = v29 - v18;
      v30 -= v36;
      uint64_t result = (uint64_t)v62;
      uint64_t v35 = v37;
      if ((v37 & 0x8000000000000000) == 0) {
        goto LABEL_24;
      }
    }
    else
    {
      if (v31)
      {
LABEL_56:
        __break(1u);
        goto LABEL_57;
      }
      sub_2499D1FF8();
      uint64_t v32 = MEMORY[0x24C5AE620]();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v33 = v29 + v32;
      if (__OFADD__(v29, v32))
      {
LABEL_57:
        __break(1u);
        goto LABEL_58;
      }
      uint64_t v34 = v33 - v18;
      uint64_t result = (uint64_t)v62;
      if (__OFSUB__(v33, v18))
      {
LABEL_58:
        __break(1u);
        goto LABEL_59;
      }
      uint64_t v35 = v29 - v18;
      if ((v30 & 0x8000000000000000) == 0) {
        goto LABEL_24;
      }
    }
    uint64_t v35 = -v30;
    if (__OFSUB__(0, v30))
    {
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      return result;
    }
LABEL_24:
    uint64_t v38 = v34;
    if (v34 < 0)
    {
      uint64_t v38 = -v34;
      if (__OFSUB__(0, v34)) {
        goto LABEL_62;
      }
    }
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(result, v28);
    if (v35 >= v38) {
      uint64_t v22 = v34;
    }
    else {
      uint64_t v22 = v30;
    }
LABEL_29:
    uint64_t result = v60;
    uint64_t v39 = v18 + v22;
    BOOL v40 = __OFADD__(v18, v22);
    if (__OFADD__(v18, v22))
    {
LABEL_52:
      __break(1u);
    }
    else
    {
      uint64_t v58 = v22;
      __int16 v62 = v16;
      uint64_t v41 = v18 + v22;
      if (v39 < 0) {
        goto LABEL_38;
      }
      sub_2499D1FF8();
      uint64_t v42 = MEMORY[0x24C5AE620]();
      uint64_t result = swift_bridgeObjectRelease();
      if (v39 >= v42)
      {
        uint64_t v43 = v39 + 1;
        if (__OFADD__(v39, 1))
        {
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        sub_2499D1FF8();
        uint64_t v44 = MEMORY[0x24C5AE620]();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v41 = v43 - v44;
        if (__OFSUB__(v43, v44))
        {
LABEL_55:
          __break(1u);
          goto LABEL_56;
        }
        uint64_t result = v60;
        if (v41)
        {
LABEL_38:
          uint64_t v61 = (uint64_t (**)(char *, char *, uint64_t))(result + 16);
          do
          {
            uint64_t v68 = v18;
            MEMORY[0x270FA5388](result);
            *(&v58 - 2) = v5;
            *(&v58 - 1) = v21;
            uint64_t KeyPath = swift_getKeyPath();
            MEMORY[0x270FA5388](KeyPath);
            *(&v58 - 2) = v5;
            *(&v58 - 1) = v21;
            swift_getKeyPath();
            if (v41 < 0)
            {
              uint64_t v52 = (void (*)(uint64_t *, void))sub_249AEB9D8();
              sub_249AED4F8();
              swift_getWitnessTable();
              swift_getWitnessTable();
              uint64_t v53 = v62;
              sub_249AED748();
              v52(&v70, 0);
              swift_release();
              swift_release();
              uint64_t v54 = (*v61)(v65, v53, v5);
              MEMORY[0x270FA5388](v54);
              *(&v58 - 2) = v5;
              *(&v58 - 1) = v21;
              uint64_t v55 = swift_getKeyPath();
              MEMORY[0x270FA5388](v55);
              *(&v58 - 2) = v5;
              *(&v58 - 1) = v21;
              swift_getKeyPath();
              uint64_t v56 = (void (*)(uint64_t *, void))sub_249AEB9D8();
              sub_249AED4D8();
              v56(&v70, 0);
              swift_release();
              swift_release();
              uint64_t result = ((uint64_t (*)(char *, uint64_t))v63)(v53, v5);
              uint64_t v18 = v68 + 1;
              if (__OFADD__(v68, 1)) {
                goto LABEL_51;
              }
              uint64_t v50 = 1;
            }
            else
            {
              uint64_t v67 = v41;
              uint64_t v45 = (void (*)(uint64_t *, void))sub_249AEB9D8();
              sub_249AED4F8();
              swift_getWitnessTable();
              uint64_t v46 = v62;
              sub_249AED728();
              v45(&v70, 0);
              swift_release();
              swift_release();
              uint64_t v47 = (*v61)(v65, v46, v5);
              MEMORY[0x270FA5388](v47);
              *(&v58 - 2) = v5;
              *(&v58 - 1) = v21;
              uint64_t v48 = swift_getKeyPath();
              MEMORY[0x270FA5388](v48);
              *(&v58 - 2) = v5;
              *(&v58 - 1) = v21;
              swift_getKeyPath();
              uint64_t v49 = (void (*)(uint64_t *, void))sub_249AEB9D8();
              sub_249AED4C8();
              v49(&v70, 0);
              swift_release();
              swift_release();
              uint64_t result = ((uint64_t (*)(char *, uint64_t))v63)(v46, v5);
              uint64_t v18 = v68 - 1;
              if (__OFSUB__(v68, 1))
              {
                __break(1u);
LABEL_51:
                __break(1u);
                goto LABEL_52;
              }
              uint64_t v50 = -1;
              uint64_t v41 = v67;
            }
            v41 += v50;
            uint64_t v21 = v66;
          }
          while (v41);
          BOOL v40 = __OFADD__(v18, v58);
        }
      }
      if (!v40)
      {
        sub_2499D1FF8();
        uint64_t v57 = v59;
        sub_249AED518();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v5);
      }
    }
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56);

  return v23(a2, 1, 1, v5);
}

uint64_t sub_2499D58A8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v3 = (char *)&v6 - v2;
  sub_249AEDAA8();
  swift_getAssociatedConformanceWitness();
  char v4 = sub_249AED088();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, AssociatedTypeWitness);
  return v4 & 1;
}

uint64_t sub_2499D59F0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v41 = a2;
  uint64_t v5 = *v3;
  uint64_t v6 = sub_249AEC408();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v42 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v5 + 80);
  uint64_t v48 = *(void *)(v5 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v46 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = sub_249AED8D8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  int v16 = (char *)&v38 - v15;
  uint64_t v17 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v18);
  int v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v38 - v22;
  sub_2499D4E54(a1, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v8) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v23, v16, v8);
  uint64_t v25 = v48;
  sub_249AEDAA8();
  uint64_t v39 = v3;
  sub_2499D0FF4();
  uint64_t v26 = v46;
  sub_249AEDAA8();
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  uint64_t v27 = v17 + 8;
  BOOL v40 = v28;
  v28(v20, v8);
  uint64_t v29 = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  char v30 = sub_249AED088();
  BOOL v31 = *(void (**)(char *, uint64_t))(v47 + 8);
  v31(v26, v29);
  v31(v12, v29);
  if (v30) {
    return v40(v23, v8);
  }
  char v32 = v41;
  uint64_t v38 = v27;
  uint64_t v33 = v39;
  if (v41) {
    swift_retain();
  }
  uint64_t v34 = v42;
  uint64_t v35 = sub_249AEC3F8();
  MEMORY[0x270FA5388](v35);
  *((unsigned char *)&v38 - 32) = v32 & 1;
  *(&v38 - 3) = (uint64_t)v33;
  *(&v38 - 2) = (uint64_t)v23;
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v8;
  v37[3] = v25;
  v37[4] = v36;
  swift_retain();
  sub_249AEBCA8();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v34, v44);
  v40(v23, v8);
  return swift_release();
}

uint64_t sub_2499D5F64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v8 - v4;
  sub_2499DC4FC(v6);
  sub_2499D2178();
  sub_2499D2254();
  sub_2499D0FF4();
  sub_2499D6F40((uint64_t)v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_2499D608C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2499D0FF4();
    sub_2499E0430();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
  }
  return result;
}

uint64_t sub_2499D617C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_249AEC408();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2499D2164();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_2499D218C();
    if ((result & 1) == 0)
    {
      if (*(uint64_t *)((char *)v0 + *(void *)(*v0 + 200)))
      {
        swift_retain();
        sub_249AECD88();
        swift_release();
      }
      uint64_t v7 = swift_allocObject();
      swift_weakInit();
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = *(void *)(v1 + 80);
      void v8[3] = *(void *)(v1 + 88);
      v8[4] = v7;
      swift_retain();
      swift_retain();
      sub_249AEC3E8();
      sub_249AEBCA8();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2499D63A0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)a1 + 80);
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v4 = (char *)&v10 - v3;
  uint64_t v7 = (uint64_t *)(v6 + *(void *)(v5 + 112));
  uint64_t v8 = (void (*)(char *))*v7;
  if (*v7)
  {
    sub_2498B9AA8(*v7);
    sub_2499D0FF4();
    v8(v4);
    sub_2498B9AB8((uint64_t)v8);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_2499D2178();
  return sub_2499D2254();
}

uint64_t sub_2499D650C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2499D65A0(*(double *)(result + *(void *)(*(void *)result + 152)));
    return swift_release();
  }
  return result;
}

uint64_t sub_2499D657C(uint64_t a1)
{
  *(void *)(v1 + *(void *)(*(void *)v1 + 200)) = a1;
  return swift_release();
}

uint64_t sub_2499D65A0(double a1)
{
  uint64_t v3 = *(void **)v1;
  uint64_t v4 = sub_249AECD68();
  uint64_t v20 = *(void *)(v4 - 8);
  uint64_t v21 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = sub_249AECD28();
  MEMORY[0x270FA5388](v10);
  if (*(void *)(v1 + v3[25]))
  {
    swift_retain();
    sub_249AECD88();
    swift_release();
  }
  uint64_t v11 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v3[10];
  v12[3] = v3[11];
  v12[4] = v11;
  aBlock[4] = sub_2499DC9DC;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2499D0768;
  aBlock[3] = &block_descriptor_1;
  _Block_copy(aBlock);
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_2499DCA00();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDD0);
  sub_2498D0A3C((unint64_t *)&qword_2696E5810, &qword_2696DFDD0);
  sub_249AED998();
  sub_249AECD98();
  swift_allocObject();
  uint64_t v13 = sub_249AECD78();
  swift_release();
  swift_release();
  *(void *)(v1 + *(void *)(*(void *)v1 + 200)) = v13;
  uint64_t result = swift_release();
  if (*(void *)(v1 + *(void *)(*(void *)v1 + 200)))
  {
    sub_2499DCA58();
    swift_retain();
    uint64_t v15 = (void *)sub_249AED808();
    sub_249AECD58();
    MEMORY[0x24C5ADF20](v6, a1);
    int v16 = *(void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v17 = v6;
    uint64_t v18 = v21;
    v16(v17, v21);
    sub_249AED7F8();
    swift_release();

    return ((uint64_t (*)(char *, uint64_t))v16)(v9, v18);
  }
  return result;
}

uint64_t sub_2499D6948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_249AEC408();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    uint64_t v11 = (void *)swift_allocObject();
    uint64_t v11[2] = a2;
    v11[3] = a3;
    v11[4] = v10;
    swift_retain();
    swift_retain();
    sub_249AEC3E8();
    sub_249AEBCA8();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return swift_release();
  }
  return result;
}

uint64_t sub_2499D6B30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = (uint64_t *)(result + *(void *)(*(void *)result + 120));
    uint64_t v8 = (void (*)(char *))*v7;
    if (*v7)
    {
      sub_2498B9AA8(*v7);
      sub_2499D0FF4();
      v8(v5);
      swift_release();
      sub_2498B9AB8((uint64_t)v8);
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, a2);
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_2499D6C88()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v2 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v10 - v5;
  sub_249AEDAA8();
  sub_249AEDAA8();
  swift_getAssociatedConformanceWitness();
  char v7 = sub_249AED088();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, AssociatedTypeWitness);
  v8(v6, AssociatedTypeWitness);
  return v7 & 1;
}

double sub_2499D6E1C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v8 - v4;
  sub_2499D0FF4();
  sub_2499D1FF8();
  uint64_t v6 = sub_2499D0F4C();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return -(double)v6;
}

uint64_t sub_2499D6F40(uint64_t result)
{
  uint64_t v2 = result;
  uint64_t v3 = *v1;
  if (*(uint64_t *)((char *)v1 + *(void *)(*v1 + 200)))
  {
    swift_retain();
    sub_249AECD88();
    uint64_t result = swift_release();
    uint64_t v3 = *v1;
  }
  uint64_t v4 = (uint64_t *)((char *)v1 + *(void *)(v3 + 112));
  uint64_t v5 = (void (*)(uint64_t))*v4;
  if (*v4)
  {
    sub_2498B9AA8(*v4);
    v5(v2);
    return sub_2498B9AB8((uint64_t)v5);
  }
  return result;
}

uint64_t CarouselModel.deinit()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_249AEBA18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2498B9AB8(*(void *)(v0 + *(void *)(*(void *)v0 + 112)));
  sub_2498B9AB8(*(void *)(v0 + *(void *)(*(void *)v0 + 120)));
  sub_2498B9AB8(*(void *)(v0 + *(void *)(*(void *)v0 + 128)));
  sub_2498B9AB8(*(void *)(v0 + *(void *)(*(void *)v0 + 136)));
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + *(void *)(*(void *)v0 + 160);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + *(void *)(*(void *)v0 + 168);
  sub_249AED4F8();
  uint64_t v6 = sub_249AEBA18();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v0 + *(void *)(*(void *)v0 + 176);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBC8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v0 + *(void *)(*(void *)v0 + 184), v8);
  swift_release();
  swift_release();
  return v0;
}

uint64_t CarouselModel.__deallocating_deinit()
{
  CarouselModel.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_2499D7304@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CarouselModel();
  uint64_t result = sub_249AEB978();
  *a1 = result;
  return result;
}

double sub_2499D7348()
{
  double result = 0.0;
  xmmword_26972C7C0 = 0u;
  *(_OWORD *)algn_26972C7D0 = 0u;
  return result;
}

double sub_2499D735C@<D0>(_OWORD *a1@<X8>)
{
  if (qword_2696DD730 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_26972C7C0;
  long long v3 = *(_OWORD *)algn_26972C7D0;
  *a1 = xmmword_26972C7C0;
  a1[1] = v3;
  return result;
}

double sub_2499D73BC(_OWORD *a1, void (*a2)(_OWORD *__return_ptr))
{
  a2(v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *a1 = v5[0];
  a1[1] = v4;
  return result;
}

uint64_t CarouselStyle.hash(into:)()
{
  if (*(unsigned __int8 *)(v0 + 32) == 255) {
    return sub_249AEE348();
  }
  sub_249AEE348();
  sub_249AEE378();
  return PageControlPosition.hash(into:)();
}

uint64_t CarouselStyle.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_249AEE338();
  sub_249AEE348();
  if (v1 != 255)
  {
    sub_249AEE378();
    PageControlPosition.hash(into:)();
  }
  return sub_249AEE388();
}

uint64_t sub_2499D7544()
{
  type metadata accessor for CarouselModel();
  swift_getWitnessTable();

  return sub_249AEBD48();
}

uint64_t sub_2499D75DC()
{
  int v1 = *(unsigned __int8 *)(v0 + 32);
  sub_249AEE338();
  sub_249AEE348();
  if (v1 != 255)
  {
    sub_249AEE378();
    PageControlPosition.hash(into:)();
  }
  return sub_249AEE388();
}

uint64_t Carousel.body.getter@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2880);
  uint64_t v3 = a1[3];
  uint64_t v4 = sub_249AED4F8();
  uint64_t v5 = a1[5];
  uint64_t v43 = v3;
  uint64_t v44 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v45 = a1[2];
  sub_249AEBD88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2888);
  sub_249AEBD88();
  uint64_t v38 = sub_249AEBD88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2890);
  uint64_t v39 = (char *)sub_249AEBD88();
  uint64_t v40 = sub_249AEBD88();
  *(void *)&long long v80 = v4;
  *((void *)&v80 + 1) = AssociatedTypeWitness;
  *(void *)&long long v81 = sub_249AEBD88();
  *((void *)&v81 + 1) = swift_getWitnessTable();
  *(void *)&long long v82 = swift_getAssociatedConformanceWitness();
  sub_249AECB68();
  uint64_t v78 = a1[4];
  uint64_t v79 = MEMORY[0x263F18860];
  uint64_t v7 = v78;
  uint64_t v35 = v78;
  uint64_t v8 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v77 = sub_2498D0A3C(&qword_2696E2898, &qword_2696E2888);
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v75 = MEMORY[0x263F18880];
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v73 = sub_2498D0A3C(&qword_2696E28A0, &qword_2696E2890);
  uint64_t v70 = swift_getWitnessTable();
  unint64_t v71 = sub_2499DCA98();
  uint64_t v68 = swift_getWitnessTable();
  unint64_t v69 = sub_2499DCAEC();
  uint64_t v41 = v8;
  uint64_t v67 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_249AECAC8();
  sub_249AEBD88();
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v66 = MEMORY[0x263F189A8];
  swift_getWitnessTable();
  sub_249AEBD38();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E28B8);
  sub_249AEBD88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E28C0);
  sub_249AEBD88();
  swift_getTupleTypeMetadata2();
  sub_249AECCB8();
  swift_getWitnessTable();
  uint64_t v9 = sub_249AECAE8();
  uint64_t v38 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v34 - v10;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E28C8);
  uint64_t v12 = sub_249AEBD88();
  uint64_t v42 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v36 = (char *)&v34 - v13;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E28D0);
  uint64_t v14 = sub_249AEBD88();
  uint64_t v40 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v37 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v39 = (char *)&v34 - v17;
  uint64_t v18 = v45;
  long long v19 = v46[3];
  long long v82 = v46[2];
  long long v83 = v19;
  char v84 = *((unsigned char *)v46 + 64);
  long long v20 = v46[1];
  long long v80 = *v46;
  long long v81 = v20;
  uint64_t v21 = v43;
  uint64_t v53 = v45;
  uint64_t v54 = v43;
  uint64_t v55 = v7;
  uint64_t v22 = v44;
  uint64_t v56 = v44;
  uint64_t v57 = &v80;
  sub_249AECC28();
  sub_249AECAD8();
  long long v62 = v82;
  long long v63 = v83;
  char v64 = v84;
  uint64_t v23 = swift_getWitnessTable();
  sub_2499DCB50();
  uint64_t v24 = v36;
  sub_249AEC738();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v11, v9);
  uint64_t v48 = v18;
  uint64_t v49 = v21;
  uint64_t v50 = v35;
  uint64_t v51 = v22;
  uint64_t v52 = &v80;
  sub_249AECC28();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E28E0);
  uint64_t v25 = sub_2498D0A3C(&qword_2696E28E8, &qword_2696E28C8);
  uint64_t v60 = v23;
  uint64_t v61 = v25;
  uint64_t v26 = swift_getWitnessTable();
  sub_2498D0A3C(&qword_2696E28F0, &qword_2696E28E0);
  uint64_t v27 = v37;
  sub_249AEC798();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v24, v12);
  uint64_t v28 = sub_2498D0A3C(&qword_2696E28F8, &qword_2696E28D0);
  uint64_t v58 = v26;
  uint64_t v59 = v28;
  swift_getWitnessTable();
  char v30 = v39;
  uint64_t v29 = v40;
  BOOL v31 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v31(v39, v27, v14);
  char v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v27, v14);
  v31(v47, v30, v14);
  return ((uint64_t (*)(char *, uint64_t))v32)(v30, v14);
}

uint64_t sub_2499D7E80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v77 = a4;
  uint64_t v78 = a5;
  uint64_t v75 = a6;
  unint64_t v76 = a3;
  uint64_t v68 = a2;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2B00) - 8;
  MEMORY[0x270FA5388](v67);
  uint64_t v8 = (char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_249AECBE8();
  uint64_t v61 = *(void *)(v65 - 8);
  uint64_t v9 = v61;
  MEMORY[0x270FA5388](v65);
  uint64_t v11 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2B08) - 8;
  MEMORY[0x270FA5388](v64);
  long long v63 = (uint64_t *)((char *)&v60 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2880);
  MEMORY[0x270FA5388](v80);
  uint64_t v74 = (uint64_t)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v66 = (uint64_t)&v60 - v15;
  MEMORY[0x270FA5388](v16);
  uint64_t v79 = (uint64_t)&v60 - v17;
  uint64_t v62 = sub_249AEC898();
  uint64_t v60 = v11;
  sub_249AECBB8();
  uint64_t v19 = *(void *)(a1 + 32);
  unint64_t v72 = *(void *)(a1 + 40);
  unint64_t v18 = v72;
  uint64_t v73 = v19;
  uint64_t v21 = *(void *)(a1 + 48);
  uint64_t v70 = *(void *)(a1 + 56);
  uint64_t v20 = v70;
  uint64_t v71 = v21;
  unsigned __int8 v22 = *(unsigned char *)(a1 + 64);
  int v69 = v22;
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v24 = v65;
  v23(v8, v11, v65);
  uint64_t v25 = v67;
  uint64_t v26 = &v8[*(int *)(v67 + 60)];
  *(void *)uint64_t v26 = v19;
  *((void *)v26 + 1) = v18;
  *((void *)v26 + 2) = v21;
  *((void *)v26 + 3) = v20;
  v26[32] = v22;
  *(_WORD *)&v8[*(int *)(v25 + 64)] = 256;
  uint64_t v27 = v63;
  sub_2498D6084((uint64_t)v8, (uint64_t)v63 + *(int *)(v64 + 44), &qword_2696E2B00);
  *uint64_t v27 = v62;
  swift_retain();
  sub_2498D60E8((uint64_t)v8, &qword_2696E2B00);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v60, v24);
  swift_release();
  uint64_t v28 = v68;
  unint64_t v30 = v76;
  uint64_t v29 = v77;
  uint64_t v124 = v68;
  unint64_t v125 = v76;
  uint64_t v31 = v78;
  uint64_t v126 = v77;
  uint64_t v127 = v78;
  type metadata accessor for Carousel();
  swift_retain();
  LOBYTE(v24) = sub_2499D2164();
  swift_release();
  if (v24) {
    double v32 = 1.0;
  }
  else {
    double v32 = 0.0;
  }
  uint64_t v33 = v66;
  sub_2498D6084((uint64_t)v27, v66, &qword_2696E2B08);
  *(double *)(v33 + *(int *)(v80 + 36)) = v32;
  sub_2498D60E8((uint64_t)v27, &qword_2696E2B08);
  sub_2499E050C(v33, v79);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v28;
  *(void *)(v34 + 24) = v30;
  *(void *)(v34 + 32) = v29;
  *(void *)(v34 + 40) = v31;
  long long v35 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v34 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v34 + 96) = v35;
  *(unsigned char *)(v34 + 112) = *(unsigned char *)(a1 + 64);
  long long v36 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v34 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v34 + 64) = v36;
  sub_2499E03F8(a1);
  uint64_t v37 = sub_249AED4F8();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_249AEBD88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2888);
  sub_249AEBD88();
  sub_249AEBD88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2890);
  sub_249AEBD88();
  uint64_t v68 = sub_249AEBD88();
  uint64_t v39 = sub_249AEBD88();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v124 = v37;
  unint64_t v125 = AssociatedTypeWitness;
  uint64_t v126 = v39;
  uint64_t v127 = WitnessTable;
  *(void *)&long long v128 = AssociatedConformanceWitness;
  sub_249AECB68();
  uint64_t v113 = v77;
  uint64_t v114 = MEMORY[0x263F18860];
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = sub_2498D0A3C(&qword_2696E2898, &qword_2696E2888);
  uint64_t v111 = v42;
  uint64_t v112 = v43;
  uint64_t v109 = swift_getWitnessTable();
  uint64_t v110 = MEMORY[0x263F18880];
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = sub_2498D0A3C(&qword_2696E28A0, &qword_2696E2890);
  uint64_t v107 = v44;
  uint64_t v108 = v45;
  uint64_t v46 = swift_getWitnessTable();
  unint64_t v47 = sub_2499DCA98();
  uint64_t v105 = v46;
  unint64_t v106 = v47;
  uint64_t v48 = swift_getWitnessTable();
  unint64_t v49 = sub_2499DCAEC();
  uint64_t v103 = v48;
  unint64_t v104 = v49;
  uint64_t v102 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_249AECAC8();
  sub_249AEBD88();
  uint64_t v100 = swift_getWitnessTable();
  uint64_t v101 = MEMORY[0x263F189A8];
  swift_getWitnessTable();
  uint64_t v124 = sub_249AEBD28();
  unint64_t v125 = v50;
  uint64_t v115 = 0x6B63617473;
  unint64_t v116 = 0xE500000000000000;
  sub_249AEBD38();
  uint64_t v51 = swift_getWitnessTable();
  sub_249AEC748();
  swift_release();
  uint64_t v96 = v85;
  uint64_t v97 = (uint64_t)v86;
  uint64_t v98 = v87;
  uint64_t v99 = v88;
  uint64_t v124 = v73;
  unint64_t v125 = v72;
  uint64_t v126 = v71;
  uint64_t v127 = v70;
  LOBYTE(v128) = v69;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E28B8);
  sub_249AEBD88();
  uint64_t v52 = sub_2498D0A3C(&qword_2696E2B10, &qword_2696E28B8);
  uint64_t v94 = v51;
  uint64_t v95 = v52;
  uint64_t v53 = swift_getWitnessTable();
  sub_2499E00C0();
  sub_249AEC7E8();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v85 = v115;
  uint64_t v86 = (uint64_t *)v116;
  uint64_t v87 = v117;
  uint64_t v88 = v118;
  long long v89 = v119;
  long long v90 = v120;
  char v91 = v121;
  char v92 = v122;
  char v93 = v123;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E28C0);
  uint64_t v54 = sub_249AEBD88();
  uint64_t v55 = sub_2498D0A3C(&qword_2696E2B18, &qword_2696E28C0);
  uint64_t v83 = v53;
  uint64_t v84 = v55;
  uint64_t v56 = swift_getWitnessTable();
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v54 - 8) + 16))(&v124, &v85, v54);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v57 = v79;
  uint64_t v58 = v74;
  sub_2498D6084(v79, v74, &qword_2696E2880);
  uint64_t v115 = v124;
  unint64_t v116 = v125;
  uint64_t v117 = v126;
  uint64_t v118 = v127;
  long long v119 = v128;
  long long v120 = v129;
  char v121 = v130;
  char v122 = v131;
  char v123 = v132;
  uint64_t v85 = v58;
  uint64_t v86 = &v115;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v96 = v80;
  uint64_t v97 = v54;
  unint64_t v81 = sub_2499E05C8();
  uint64_t v82 = v56;
  sub_2499D0488((uint64_t)&v85, 2uLL, (uint64_t)&v96);
  swift_bridgeObjectRelease();
  swift_release();
  sub_2498D60E8(v57, &qword_2696E2880);
  swift_bridgeObjectRelease();
  swift_release();
  return sub_2498D60E8(v58, &qword_2696E2880);
}

uint64_t sub_2499D8828()
{
  uint64_t v0 = sub_249AEBAF8();
  uint64_t v1 = *(void *)(v0 - 8);
  __n128 v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v4, *MEMORY[0x263F18508], v0, v2);
  sub_249AEBAE8();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return 0x7372657474616C70;
}

uint64_t sub_2499D8944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v36 = a5;
  uint64_t v41 = a3;
  uint64_t v42 = a2;
  uint64_t v43 = a1;
  uint64_t v44 = a7;
  uint64_t v9 = sub_249AED4F8();
  uint64_t v40 = a6;
  uint64_t v39 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_249AEBD88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2888);
  sub_249AEBD88();
  sub_249AEBD88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2890);
  sub_249AEBD88();
  uint64_t v37 = sub_249AEBD88();
  uint64_t v66 = v9;
  uint64_t v67 = AssociatedTypeWitness;
  uint64_t v68 = sub_249AEBD88();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = sub_249AECB68();
  uint64_t v12 = v36;
  uint64_t v64 = v36;
  uint64_t v65 = MEMORY[0x263F18860];
  uint64_t v13 = MEMORY[0x263F18E48];
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = sub_2498D0A3C(&qword_2696E2898, &qword_2696E2888);
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v61 = MEMORY[0x263F18880];
  uint64_t v38 = v13;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v59 = sub_2498D0A3C(&qword_2696E28A0, &qword_2696E2890);
  uint64_t v56 = swift_getWitnessTable();
  unint64_t v57 = sub_2499DCA98();
  uint64_t v54 = swift_getWitnessTable();
  unint64_t v55 = sub_2499DCAEC();
  uint64_t v53 = swift_getWitnessTable();
  v33[2] = v11;
  v33[1] = swift_getWitnessTable();
  uint64_t v14 = sub_249AECAC8();
  uint64_t v37 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v33 - v15;
  uint64_t v17 = sub_249AEBD88();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v34 = (char *)v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  long long v35 = (char *)v33 - v21;
  uint64_t v22 = v41;
  uint64_t v45 = v41;
  uint64_t v23 = v39;
  uint64_t v46 = v39;
  uint64_t v24 = v12;
  uint64_t v47 = v12;
  uint64_t v25 = v40;
  uint64_t v48 = v40;
  uint64_t v49 = v42;
  uint64_t v50 = v43;
  sub_249AEC128();
  sub_249AECAB8();
  uint64_t v66 = v22;
  uint64_t v67 = v23;
  uint64_t v68 = v24;
  uint64_t WitnessTable = v25;
  type metadata accessor for Carousel();
  uint64_t v26 = swift_retain();
  sub_2499D6E1C(v26);
  swift_release();
  sub_249AEBC48();
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = v34;
  sub_249AEC788();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v14);
  uint64_t v51 = v27;
  uint64_t v52 = MEMORY[0x263F189A8];
  swift_getWitnessTable();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  unint64_t v30 = v35;
  v29(v35, v28, v17);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v18 + 8);
  v31(v28, v17);
  v29(v44, v30, v17);
  return ((uint64_t (*)(char *, uint64_t))v31)(v30, v17);
}

uint64_t sub_2499D8F58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  uint64_t v48 = a5;
  uint64_t v55 = a2;
  uint64_t v66 = a7;
  uint64_t v52 = sub_249AEBC68();
  uint64_t v49 = *(void *)(v52 - 8);
  uint64_t v51 = *(void *)(v49 + 64);
  MEMORY[0x270FA5388](v52);
  uint64_t v50 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_249AED4F8();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = sub_249AEBD88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2888);
  uint64_t v57 = sub_249AEBD88();
  uint64_t v56 = sub_249AEBD88();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2890);
  uint64_t v61 = sub_249AEBD88();
  uint64_t v62 = sub_249AEBD88();
  uint64_t v14 = sub_249AEBD88();
  uint64_t v58 = v14;
  uint64_t v65 = v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v63 = WitnessTable;
  uint64_t v64 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v80 = v12;
  uint64_t v81 = AssociatedTypeWitness;
  uint64_t v82 = v14;
  uint64_t v83 = WitnessTable;
  uint64_t v84 = AssociatedConformanceWitness;
  uint64_t v47 = sub_249AECB68();
  uint64_t v60 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v54 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v59 = (char *)&v46 - v19;
  uint64_t v80 = a3;
  uint64_t v81 = a4;
  uint64_t v20 = a4;
  uint64_t v21 = v48;
  uint64_t v82 = v48;
  uint64_t v83 = a6;
  type metadata accessor for Carousel();
  swift_retain();
  uint64_t v22 = sub_2499D1FF8();
  swift_release();
  uint64_t v80 = v22;
  uint64_t v23 = v49;
  uint64_t v24 = v50;
  uint64_t v25 = v52;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v50, v55, v52);
  unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 113) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a3;
  *(void *)(v27 + 24) = v20;
  *(void *)(v27 + 32) = v21;
  *(void *)(v27 + 40) = a6;
  long long v28 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v27 + 80) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v27 + 96) = v28;
  *(unsigned char *)(v27 + 112) = *(unsigned char *)(a1 + 64);
  long long v29 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v27 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v27 + 64) = v29;
  (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v27 + v26, v24, v25);
  sub_2499E03F8(a1);
  uint64_t v78 = v21;
  uint64_t v79 = MEMORY[0x263F18860];
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v31 = sub_2498D0A3C(&qword_2696E2898, &qword_2696E2888);
  uint64_t v76 = v30;
  uint64_t v77 = v31;
  uint64_t v74 = swift_getWitnessTable();
  uint64_t v75 = MEMORY[0x263F18880];
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = sub_2498D0A3C(&qword_2696E28A0, &qword_2696E2890);
  uint64_t v72 = v32;
  uint64_t v73 = v33;
  uint64_t v34 = swift_getWitnessTable();
  unint64_t v35 = sub_2499DCA98();
  uint64_t v70 = v34;
  unint64_t v71 = v35;
  uint64_t v36 = swift_getWitnessTable();
  unint64_t v37 = sub_2499DCAEC();
  uint64_t v68 = v36;
  unint64_t v69 = v37;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v54;
  sub_249AECB58();
  uint64_t v67 = v38;
  uint64_t v40 = v47;
  swift_getWitnessTable();
  uint64_t v41 = v60;
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
  uint64_t v43 = v59;
  v42(v59, v39, v40);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v41 + 8);
  v44(v39, v40);
  v42(v66, v43, v40);
  return ((uint64_t (*)(char *, uint64_t))v44)(v43, v40);
}

uint64_t sub_2499D9550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, char *a7@<X8>)
{
  uint64_t v92 = a6;
  uint64_t v97 = a5;
  uint64_t v91 = a4;
  uint64_t v93 = a1;
  long long v89 = a7;
  uint64_t v84 = *(void *)(a4 - 8);
  uint64_t v85 = *(void *)(v84 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v95 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_249AEBD88();
  uint64_t v75 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v72 - v17;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2888);
  uint64_t v19 = sub_249AEBD88();
  uint64_t v77 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v73 = (char *)v72 - v20;
  uint64_t v76 = sub_249AEBD88();
  uint64_t v78 = *(void *)(v76 - 8);
  MEMORY[0x270FA5388](v76);
  uint64_t v74 = (char *)v72 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2890);
  uint64_t v79 = sub_249AEBD88();
  uint64_t v80 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v94 = (char *)v72 - v22;
  uint64_t v82 = sub_249AEBD88();
  uint64_t v88 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v96 = (char *)v72 - v23;
  uint64_t v87 = sub_249AEBD88();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v81 = (char *)v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v26 = MEMORY[0x270FA5388](v25);
  uint64_t v83 = (char *)v72 - v27;
  (*(void (**)(uint64_t, __n128))(a2 + 16))(a1, v26);
  sub_249AEBC48();
  sub_249AEBC48();
  sub_249AECC28();
  uint64_t v28 = v97;
  sub_249AEC778();
  long long v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v30 = a3;
  uint64_t v90 = a3;
  v29(v15, a3);
  uint64_t v112 = v28;
  uint64_t v113 = MEMORY[0x263F18860];
  uint64_t v31 = v28;
  uint64_t v32 = MEMORY[0x263F18E48];
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_2499E0874();
  uint64_t v34 = v73;
  sub_249AEC7E8();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v18, v16);
  uint64_t v108 = v30;
  uint64_t v35 = v91;
  uint64_t v109 = v91;
  uint64_t v110 = v31;
  uint64_t v36 = v92;
  uint64_t v111 = v92;
  type metadata accessor for Carousel();
  swift_retain();
  sub_2499D218C();
  swift_release();
  sub_249AECD18();
  uint64_t v37 = sub_2498D0A3C(&qword_2696E2898, &qword_2696E2888);
  uint64_t v106 = WitnessTable;
  uint64_t v107 = v37;
  v72[1] = v32;
  uint64_t v38 = swift_getWitnessTable();
  uint64_t v39 = v74;
  sub_249AEC708();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v34, v19);
  sub_249AECD18();
  sub_249AEBC18();
  sub_249AEBC28();
  sub_249AEBC38();
  swift_release();
  swift_release();
  uint64_t v104 = v38;
  uint64_t v105 = MEMORY[0x263F18880];
  uint64_t v40 = v76;
  uint64_t v41 = swift_getWitnessTable();
  sub_249AEC6C8();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v39, v40);
  uint64_t v42 = v84;
  uint64_t v78 = *(void *)(v84 + 16);
  uint64_t v43 = v95;
  uint64_t v44 = v35;
  ((void (*)(char *, uint64_t, uint64_t))v78)(v95, v93, v35);
  uint64_t v45 = *(unsigned __int8 *)(v42 + 80);
  uint64_t v46 = (v45 + 113) & ~v45;
  uint64_t v85 = v45 | 7;
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v90;
  *(void *)(v47 + 24) = v44;
  *(void *)(v47 + 32) = v97;
  *(void *)(v47 + 40) = v36;
  long long v48 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v47 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v47 + 96) = v48;
  *(unsigned char *)(v47 + 112) = *(unsigned char *)(a2 + 64);
  long long v49 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v47 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(v47 + 64) = v49;
  uint64_t v84 = *(void *)(v42 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v84)(v47 + v46, v43, v44);
  sub_2499E03F8(a2);
  uint64_t v50 = sub_2498D0A3C(&qword_2696E28A0, &qword_2696E2890);
  uint64_t v102 = v41;
  uint64_t v103 = v50;
  uint64_t v51 = v79;
  uint64_t v52 = swift_getWitnessTable();
  uint64_t v53 = v94;
  sub_2499DA1A4((uint64_t)sub_2499E08CC, v47, v51, v52, (uint64_t)&type metadata for OnScrollIn);
  swift_release();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v53, v51);
  uint64_t v54 = v95;
  uint64_t v55 = v91;
  ((void (*)(char *, uint64_t, uint64_t))v78)(v95, v93, v91);
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = v90;
  *(void *)(v56 + 24) = v55;
  uint64_t v57 = v92;
  *(void *)(v56 + 32) = v97;
  *(void *)(v56 + 40) = v57;
  long long v58 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v56 + 80) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v56 + 96) = v58;
  *(unsigned char *)(v56 + 112) = *(unsigned char *)(a2 + 64);
  long long v59 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v56 + 48) = *(_OWORD *)a2;
  *(_OWORD *)(v56 + 64) = v59;
  ((void (*)(uint64_t, char *, uint64_t))v84)(v56 + v46, v54, v55);
  sub_2499E03F8(a2);
  unint64_t v60 = sub_2499DCA98();
  uint64_t v100 = v52;
  unint64_t v101 = v60;
  uint64_t v61 = v82;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v63 = v81;
  uint64_t v64 = v96;
  sub_2499DA1A4((uint64_t)sub_2499E09B4, v56, v61, v62, (uint64_t)&type metadata for OnScrollOut);
  swift_release();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v64, v61);
  unint64_t v65 = sub_2499DCAEC();
  uint64_t v98 = v62;
  unint64_t v99 = v65;
  uint64_t v66 = v87;
  swift_getWitnessTable();
  uint64_t v67 = v86;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v86 + 16);
  unint64_t v69 = v83;
  v68(v83, v63, v66);
  uint64_t v70 = *(void (**)(char *, uint64_t))(v67 + 8);
  v70(v63, v66);
  v68(v89, v69, v66);
  return ((uint64_t (*)(char *, uint64_t))v70)(v69, v66);
}

uint64_t sub_2499DA05C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  type metadata accessor for Carousel();
  uint64_t v4 = (void (**)(uint64_t))(v3 + *(void *)(*(void *)v3 + 128));
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  if (*v4)
  {
    sub_2498B9AA8((uint64_t)v6);
    v6(a2);
    return sub_2498B9AB8((uint64_t)v6);
  }
  return result;
}

uint64_t sub_2499DA100(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  type metadata accessor for Carousel();
  uint64_t v4 = (void (**)(uint64_t))(v3 + *(void *)(*(void *)v3 + 136));
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  if (*v4)
  {
    sub_2498B9AA8((uint64_t)v6);
    v6(a2);
    return sub_2498B9AB8((uint64_t)v6);
  }
  return result;
}

uint64_t sub_2499DA1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char v17 = 0;
  swift_retain();
  sub_249AECA48();
  char v10 = v13;
  uint64_t v11 = v14;
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  char v15 = v10;
  uint64_t v16 = v11;
  MEMORY[0x24C5AD930](&v13, a3, a5, a4);
  swift_release();
  return swift_release();
}

uint64_t sub_2499DA254@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_249AEC898();
  type metadata accessor for Carousel();
  swift_beginAccess();
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = MEMORY[0x24C5AE620](v7, a2);
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v9 = sub_2499D1C14();
  swift_release();
  if (*(unsigned __int8 *)(a1 + 64) == 255) {
    double v10 = 1.2;
  }
  else {
    double v10 = *(double *)(a1 + 56);
  }
  uint64_t v11 = sub_249AECC28();
  uint64_t v13 = v12;
  sub_249AEBC48();
  double v15 = v14;
  sub_2499DA414();
  double v17 = v16;
  if (*(unsigned __int8 *)(a1 + 64) == 255) {
    double v18 = 0.0;
  }
  else {
    double v18 = *(double *)(a1 + 48);
  }
  swift_retain();
  char v19 = sub_2499D218C();
  uint64_t result = swift_release();
  double v21 = 1.0;
  if ((v19 & 1) == 0) {
    double v21 = 0.0;
  }
  *(void *)a3 = v6;
  *(void *)(a3 + 8) = v8;
  *(void *)(a3 + 16) = v9;
  *(double *)(a3 + 24) = v10;
  *(void *)(a3 + 32) = v11;
  *(void *)(a3 + 40) = v13;
  *(double *)(a3 + 48) = v15 * 0.5 + v17;
  *(double *)(a3 + 56) = v18;
  *(double *)(a3 + 64) = v21;
  return result;
}

uint64_t sub_2499DA414()
{
  return swift_release();
}

double sub_2499DA484@<D0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 32);
  double result = *(double *)(v1 + 40);
  long long v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  *(double *)(a1 + 40) = result;
  return result;
}

double sub_2499DA4A0@<D0>(double *a1@<X8>)
{
  double result = *(double *)(v1 + 40);
  *a1 = result;
  return result;
}

double sub_2499DA4AC(double *a1)
{
  double result = *a1;
  *(double *)(v1 + 40) = *a1;
  return result;
}

double (*sub_2499DA4B8(void *a1))(uint64_t a1)
{
  a1[1] = v1;
  *a1 = *(void *)(v1 + 40);
  return sub_2499DA4E4;
}

double sub_2499DA4E4(uint64_t a1)
{
  double result = *(double *)a1;
  *(void *)(*(void *)(a1 + 8) + 40) = *(void *)a1;
  return result;
}

uint64_t sub_2499DA4F4@<X0>(uint64_t a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>)
{
  uint64_t v11 = sub_249AEBDD8();
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (double *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  double v14 = *(double *)v5;
  int v15 = *(unsigned __int8 *)(v5 + 32);
  double v16 = *(double *)(v5 + 40);
  v30.origin.CGFloat x = a2;
  v30.origin.CGFloat y = a3;
  v30.size.CGFloat width = a4;
  v30.size.CGFloat height = a5;
  CGRectInset(v30, v16, v16);
  if (v15 == 255)
  {
    uint64_t result = sub_249AECAA8();
    long long v23 = v27;
    long long v24 = v28;
    char v21 = v29;
  }
  else
  {
    double v17 = v14 - v16;
    double v18 = (char *)v13 + *(int *)(v11 + 20);
    uint64_t v19 = *MEMORY[0x263F19860];
    uint64_t v20 = sub_249AEC108();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v18, v19, v20);
    *uint64_t v13 = v17;
    v13[1] = v17;
    sub_249AEBDC8();
    long long v25 = v28;
    long long v26 = v27;
    char v21 = v29;
    uint64_t result = sub_2498D6028((uint64_t)v13);
    long long v24 = v25;
    long long v23 = v26;
  }
  *(_OWORD *)a1 = v23;
  *(_OWORD *)(a1 + 16) = v24;
  *(unsigned char *)(a1 + 32) = v21;
  return result;
}

uint64_t sub_2499DA69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2499E0E68();

  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_2499DA700(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2499E0E68();

  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_2499DA764(uint64_t a1)
{
  unint64_t v2 = sub_2499E0E68();

  return MEMORY[0x270F047E0](a1, v2);
}

void sub_2499DA7B0(uint64_t a1@<X8>, double a2@<D0>)
{
  char v3 = *(unsigned char *)(v2 + 32);
  long long v4 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v3;
  *(double *)(a1 + 40) = a2;
}

uint64_t sub_2499DA7C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_249AEBDD8();
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (void *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*((unsigned __int8 *)v1 + 32) == 255)
  {
    uint64_t result = sub_249AECAA8();
    long long v13 = v17;
    long long v14 = v18;
    char v11 = v19;
  }
  else
  {
    uint64_t v7 = *v1;
    uint64_t v8 = (char *)v6 + *(int *)(v4 + 20);
    uint64_t v9 = *MEMORY[0x263F19860];
    uint64_t v10 = sub_249AEC108();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 104))(v8, v9, v10);
    *unint64_t v6 = v7;
    v6[1] = v7;
    sub_249AEBDC8();
    long long v15 = v18;
    long long v16 = v17;
    char v11 = v19;
    uint64_t result = sub_2498D6028((uint64_t)v6);
    long long v14 = v15;
    long long v13 = v16;
  }
  *(_OWORD *)a1 = v13;
  *(_OWORD *)(a1 + 16) = v14;
  *(unsigned char *)(a1 + 32) = v11;
  return result;
}

uint64_t sub_2499DA934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2499E00C0();

  return MEMORY[0x270F04808](a1, a2, a3, v6);
}

uint64_t sub_2499DA998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2499E00C0();

  return MEMORY[0x270F047D0](a1, a2, a3, v6);
}

uint64_t sub_2499DA9FC(uint64_t a1)
{
  unint64_t v2 = sub_2499E00C0();

  return MEMORY[0x270F047E0](a1, v2);
}

uint64_t sub_2499DAA48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_249AEC278();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_249AEC898();
  v25[0] = 0x6B63617473;
  v25[1] = 0xE500000000000000;
  sub_249AEC2E8();
  sub_249AEBC58();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  *(unsigned char *)(v23 + 32) = a3;
  *(void *)(v23 + 40) = a4;
  *a5 = v14;
  a5[1] = v16;
  a5[2] = v18;
  a5[3] = v20;
  a5[4] = v22;
  a5[5] = (uint64_t)sub_2499E0180;
  a5[6] = v23;
  swift_retain();
  return swift_retain();
}

uint64_t sub_2499DABF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = sub_249AECD28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_249AECD48();
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = *(double *)(a1 + 8);
  double v19 = *(double *)(a1 + 24);
  if (v18 > -v19 && v18 < v19)
  {
    uint64_t v26 = v15;
    uint64_t v27 = v11;
    LOBYTE(aBlock) = a4 & 1;
    uint64_t v29 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2AD8);
    uint64_t result = sub_249AECA58();
    if ((v34 & 1) == 0)
    {
      LOBYTE(aBlock) = a4 & 1;
      uint64_t v29 = a5;
      char v34 = 1;
      sub_249AECA68();
      sub_2499DCA58();
      uint64_t v22 = (void *)sub_249AED808();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = a2;
      *(void *)(v23 + 24) = a3;
      *(unsigned char *)(v23 + 32) = a4 & 1;
      *(void *)(v23 + 40) = a5;
      uint64_t v32 = sub_2499E0194;
      uint64_t v33 = v23;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v29 = 1107296256;
      CGRect v30 = sub_2499D0768;
      uint64_t v31 = &block_descriptor_97;
      long long v24 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      sub_249AECD38();
      uint64_t aBlock = MEMORY[0x263F8EE78];
      sub_2499DCA00();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDD0);
      sub_2498D0A3C((unint64_t *)&qword_2696E5810, &qword_2696DFDD0);
      sub_249AED998();
      MEMORY[0x24C5AE990](0, v17, v13, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v17, v14);
    }
  }
  else
  {
    LOBYTE(aBlock) = a4 & 1;
    uint64_t v29 = a5;
    char v34 = 0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2AD8);
    return sub_249AECA68();
  }
  return result;
}

uint64_t sub_2499DAF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2499DB4C4(a1, &qword_2696E2AC8, &qword_2696E2AD0, (uint64_t)sub_2499E016C, a2);
}

uint64_t sub_2499DAF84@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_249AEC278();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_249AEC898();
  v25[0] = 0x6B63617473;
  v25[1] = 0xE500000000000000;
  sub_249AEC2E8();
  sub_249AEBC58();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  *(unsigned char *)(v23 + 32) = a3;
  *(void *)(v23 + 40) = a4;
  *a5 = v14;
  a5[1] = v16;
  a5[2] = v18;
  a5[3] = v20;
  a5[4] = v22;
  a5[5] = (uint64_t)sub_2499E01D4;
  a5[6] = v23;
  swift_retain();
  return swift_retain();
}

uint64_t sub_2499DB12C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = sub_249AECD28();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_249AECD48();
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v18 = *(double *)(a1 + 8);
  double v19 = *(double *)(a1 + 24);
  if (v18 > -v19 && v18 < v19)
  {
    LOBYTE(aBlock) = a4 & 1;
    uint64_t v29 = a5;
    char v34 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2AD8);
    return sub_249AECA68();
  }
  else
  {
    uint64_t v26 = v15;
    uint64_t v27 = v11;
    LOBYTE(aBlock) = a4 & 1;
    uint64_t v29 = a5;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2AD8);
    uint64_t result = sub_249AECA58();
    if (v34 == 1)
    {
      LOBYTE(aBlock) = a4 & 1;
      uint64_t v29 = a5;
      char v34 = 0;
      sub_249AECA68();
      sub_2499DCA58();
      uint64_t v22 = (void *)sub_249AED808();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = a2;
      *(void *)(v23 + 24) = a3;
      *(unsigned char *)(v23 + 32) = a4 & 1;
      *(void *)(v23 + 40) = a5;
      uint64_t v32 = sub_2499E0F0C;
      uint64_t v33 = v23;
      uint64_t aBlock = MEMORY[0x263EF8330];
      uint64_t v29 = 1107296256;
      CGRect v30 = sub_2499D0768;
      uint64_t v31 = &block_descriptor_109;
      long long v24 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      sub_249AECD38();
      uint64_t aBlock = MEMORY[0x263F8EE78];
      sub_2499DCA00();
      __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDD0);
      sub_2498D0A3C((unint64_t *)&qword_2696E5810, &qword_2696DFDD0);
      sub_249AED998();
      MEMORY[0x24C5AE990](0, v17, v13, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v17, v14);
    }
  }
  return result;
}

uint64_t sub_2499DB494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2499DB4C4(a1, &qword_2696E2AE0, &qword_2696E2AE8, (uint64_t)sub_2499E01C0, a2);
}

uint64_t sub_2499DB4C4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X4>, uint64_t *a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  uint64_t v12 = *v5;
  uint64_t v11 = v5[1];
  char v13 = *((unsigned char *)v5 + 16);
  uint64_t v14 = v5[3];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v12;
  *(void *)(v15 + 24) = v11;
  *(unsigned char *)(v15 + 32) = v13;
  *(void *)(v15 + 40) = v14;
  swift_retain();
  swift_retain();
  uint64_t v16 = sub_249AECC28();
  uint64_t v18 = v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a5, a1, v19);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v21 = (void *)(a5 + *(int *)(result + 36));
  *uint64_t v21 = a4;
  v21[1] = v15;
  long long v21[2] = v16;
  v21[3] = v18;
  return result;
}

id sub_2499DB5B0()
{
  uint64_t v1 = *v0;
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F829F0]), sel_init);
  objc_msgSend(v2, sel_setNumberOfPages_, v1);
  objc_msgSend(v2, sel_setHidesForSinglePage_, 1);
  objc_msgSend(v2, sel_setDirection_, 3);
  objc_msgSend(v2, sel_setAllowsContinuousInteraction_, 0);
  return v2;
}

id sub_2499DB63C(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  CGAffineTransformMakeScale(&v6, *((CGFloat *)v1 + 2), *((CGFloat *)v1 + 2));
  objc_msgSend(a1, sel_setTransform_, &v6);
  objc_msgSend(a1, sel_setNumberOfPages_, v3);
  return objc_msgSend(a1, sel_setCurrentPage_, v4);
}

uint64_t sub_2499DB6DC()
{
  return sub_249AEC198();
}

uint64_t sub_2499DB720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2499E0228();

  return MEMORY[0x270F01780](a1, a2, a3, v6);
}

uint64_t sub_2499DB784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_2499E0228();

  return MEMORY[0x270F01718](a1, a2, a3, v6);
}

void sub_2499DB7E8()
{
}

uint64_t sub_2499DB810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  __n128 v5 = MEMORY[0x270FA5388](a1);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2, v5);
  sub_249AEB9A8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, a2);
}

uint64_t sub_2499DB900@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2499D2164();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2499DB930()
{
  return sub_2499D2178();
}

uint64_t sub_2499DB958@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2499D218C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2499DB988()
{
  return sub_2499D2254();
}

BOOL _s14CarPlayAssetUI13CarouselStyleO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 32);
  int v3 = *(unsigned __int8 *)(a2 + 32);
  if (v2 == 255) {
    return v3 == 255;
  }
  if (v3 == 255 || *(double *)a1 != *(double *)a2) {
    return 0;
  }
  if (v2)
  {
    if (v3) {
      return *(double *)(a1 + 8) == *(double *)(a2 + 8)
    }
          && *(double *)(a1 + 16) == *(double *)(a2 + 16)
          && *(double *)(a1 + 24) == *(double *)(a2 + 24);
    return 0;
  }
  if (v3) {
    return 0;
  }
  return *(double *)(a1 + 8) == *(double *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16)
      && *(double *)(a1 + 24) == *(double *)(a2 + 24);
}

BOOL _s14CarPlayAssetUI19PageControlPositionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(a1 + 24) & 1) == 0)
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      goto LABEL_5;
    }
    return 0;
  }
  if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
    return 0;
  }
LABEL_5:
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  return *(double *)(a1 + 16) == *(double *)(a2 + 16);
}

uint64_t sub_2499DBA98(uint64_t a1, uint64_t a2, int a3, double a4)
{
  __n128 v5 = v4;
  int v72 = a3;
  uint64_t v84 = a2;
  uint64_t v85 = a1;
  uint64_t v7 = (void *)*v4;
  uint64_t v74 = v7;
  uint64_t v8 = v7[10];
  uint64_t v82 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v73 = (char *)v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v71 = (char *)v69 - v11;
  uint64_t v86 = sub_249AED8D8();
  uint64_t v80 = *(void *)(v86 - 8);
  MEMORY[0x270FA5388](v86);
  uint64_t v70 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v81 = (char *)v69 - v14;
  MEMORY[0x270FA5388](v15);
  uint64_t v79 = (char *)v69 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v83 = (char *)v69 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFBC8);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFE28);
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v69 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = (void *)((char *)v5 + v7[14]);
  *uint64_t v27 = 0;
  v27[1] = 0;
  long long v28 = (void *)((char *)v5 + *(void *)(*v5 + 120));
  *long long v28 = 0;
  v28[1] = 0;
  uint64_t v29 = (void *)((char *)v5 + *(void *)(*v5 + 128));
  *uint64_t v29 = 0;
  v29[1] = 0;
  CGRect v30 = (void *)((char *)v5 + *(void *)(*v5 + 136));
  *CGRect v30 = 0;
  v30[1] = 0;
  uint64_t v31 = (char *)v5 + *(void *)(*v5 + 160);
  v69[0] = v7[11];
  uint64_t v88 = 0;
  sub_249AEB9A8();
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v31, v26, v23);
  uint64_t v32 = (char *)v5 + *(void *)(*v5 + 176);
  LOBYTE(v88) = 0;
  sub_249AEB9A8();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v33(v32, v22, v19);
  char v34 = (char *)v5 + *(void *)(*v5 + 184);
  LOBYTE(v88) = 0;
  sub_249AEB9A8();
  uint64_t v35 = v19;
  uint64_t v36 = v85;
  v33(v34, v22, v35);
  uint64_t v37 = *(void *)(*v5 + 192);
  *(void *)((char *)v5 + v37) = sub_249AECC48();
  *(void *)((char *)v5 + *(void *)(*v5 + 200)) = 0;
  uint64_t v87 = v8;
  uint64_t v88 = v36;
  uint64_t v38 = sub_249AED4F8();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v78 = v38;
  v69[1] = WitnessTable;
  if ((sub_249AED6D8() & 1) == 0)
  {
    uint64_t v40 = v80;
    uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
    uint64_t v42 = v83;
    uint64_t v43 = v86;
    v41(v83, v84, v86);
    uint64_t v44 = v82;
    uint64_t v77 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48);
    uint64_t v75 = v82 + 48;
    unsigned int v45 = v77(v42, 1, v87);
    uint64_t v46 = v79;
    uint64_t v76 = v41;
    uint64_t v47 = ((uint64_t (*)(char *, char *, uint64_t))v41)(v79, v42, v43);
    if (v45 == 1)
    {
      uint64_t v48 = v44;
      long long v49 = *(void (**)(char *, uint64_t))(v40 + 8);
      uint64_t v50 = v86;
      v49(v46, v86);
      uint64_t v51 = v83;
      uint64_t v52 = v77;
      uint64_t v53 = v78;
    }
    else
    {
      uint64_t v88 = v36;
      MEMORY[0x270FA5388](v47);
      uint64_t v54 = v69[0];
      v69[-4] = v55;
      v69[-3] = v54;
      uint64_t v67 = v46;
      uint64_t v53 = v78;
      swift_getWitnessTable();
      char v56 = sub_249AED328();
      uint64_t v57 = v46;
      uint64_t v50 = v86;
      long long v58 = *(void (**)(char *, uint64_t))(v40 + 8);
      v58(v57, v86);
      if ((v56 & 1) == 0)
      {
        int v68 = 0;
        uint64_t v67 = 0;
        goto LABEL_14;
      }
      uint64_t v48 = v82;
      uint64_t v51 = v83;
      uint64_t v52 = v77;
      long long v49 = v58;
    }
    uint64_t v83 = (char *)v49;
    v49(v51, v50);
    uint64_t v59 = v50;
    uint64_t v60 = v85;
    *(void *)((char *)v5 + *(void *)(*v5 + 144)) = v85;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    uint64_t v89 = v60;
    sub_2499DB810((uint64_t)&v89, v53);
    swift_endAccess();
    uint64_t v61 = v81;
    v76(v81, v84, v59);
    if (v52(v61, 1, v87) != 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v63 = (uint64_t)v71;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v71, v61, v87);
      goto LABEL_10;
    }
    uint64_t v88 = v60;
    uint64_t v62 = v70;
    sub_249AED6C8();
    swift_bridgeObjectRelease();
    if (v52(v62, 1, v87) != 1)
    {
      uint64_t v63 = (uint64_t)v71;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v71, v62, v87);
      ((void (*)(char *, uint64_t))v83)(v81, v86);
LABEL_10:
      swift_beginAccess();
      uint64_t v64 = v87;
      sub_2499D0CE8(v63, v87);
      swift_endAccess();
      *((unsigned char *)v5 + *(void *)(*v5 + 104)) = v72 & 1;
      *(double *)((char *)v5 + *(void *)(*v5 + 152)) = a4;
      unint64_t v65 = v73;
      sub_2499D0FF4();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_2499D0F4C();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v65, v64);
      sub_2499D1CC8();
      return (uint64_t)v5;
    }
    __break(1u);
  }
  int v68 = 0;
  uint64_t v67 = 0;
LABEL_14:
  uint64_t result = sub_249AEDC58();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CarouselModel.Direction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2499DC490()
{
  return 16;
}

__n128 sub_2499DC49C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DC4A8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2499DC4FC(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)v11 - v5;
  uint64_t v11[2] = v3;
  uint64_t v12 = *(void *)(v7 + 88);
  uint64_t v8 = v12;
  swift_getKeyPath();
  v11[0] = v3;
  v11[1] = v8;
  swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  swift_retain();
  uint64_t v9 = sub_249AEB9F8();
  return sub_2499D0DE4(v9);
}

uint64_t sub_2499DC640(uint64_t a1)
{
  uint64_t v2 = sub_249AEBA08();
  __n128 v3 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - v4, a1, v3);
  swift_beginAccess();
  sub_249AEBA18();
  sub_249AEB9C8();
  return swift_endAccess();
}

uint64_t sub_2499DC760()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 112));
}

uint64_t sub_2499DC780()
{
  return *(void *)(v0 + *(void *)(*(void *)v0 + 120));
}

uint64_t sub_2499DC7A0()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2499DC7F4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 136);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_2499DC848@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_2499D1C14();
  *a1 = result;
  return result;
}

uint64_t sub_2499DC874()
{
  return sub_2499D1CC8();
}

uint64_t sub_2499DC89C()
{
  return 16;
}

__n128 sub_2499DC8A8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DC8B4(uint64_t a1)
{
  return sub_2499D34C0(a1, v1) & 1;
}

uint64_t sub_2499DC8DC()
{
  return 16;
}

__n128 sub_2499DC8E8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DC8F4()
{
  return sub_2499D6C88() & 1;
}

uint64_t sub_2499DC918()
{
  return sub_2499D4B70(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(uint64_t **)(v0 + 32));
}

uint64_t sub_2499DC93C()
{
  swift_weakDestroy();

  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_2499DC974()
{
  return sub_2499D608C(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_2499DC994()
{
  return sub_2499D5F64(*(unsigned __int8 *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_2499DC9B4()
{
  return sub_2499D63A0(v0);
}

uint64_t sub_2499DC9D0()
{
  return sub_2499D650C();
}

uint64_t sub_2499DC9DC()
{
  return sub_2499D6948(v0[4], v0[2], v0[3]);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

unint64_t sub_2499DCA00()
{
  unint64_t result = qword_2696E5800;
  if (!qword_2696E5800)
  {
    sub_249AECD28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E5800);
  }
  return result;
}

unint64_t sub_2499DCA58()
{
  unint64_t result = qword_2696DFDD8;
  if (!qword_2696DFDD8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2696DFDD8);
  }
  return result;
}

unint64_t sub_2499DCA98()
{
  unint64_t result = qword_2696E28A8;
  if (!qword_2696E28A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E28A8);
  }
  return result;
}

unint64_t sub_2499DCAEC()
{
  unint64_t result = qword_2696E28B0;
  if (!qword_2696E28B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E28B0);
  }
  return result;
}

uint64_t sub_2499DCB40@<X0>(uint64_t a1@<X8>)
{
  return sub_2499D7E80(*(void *)(v1 + 48), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t sub_2499DCB50()
{
  unint64_t result = qword_2696E28D8;
  if (!qword_2696E28D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E28D8);
  }
  return result;
}

uint64_t sub_2499DCBA4@<X0>(uint64_t (**a1)@<X0>(uint64_t a1@<X8>)@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = swift_allocObject();
  long long v5 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v4 + 32) = v5;
  *(_OWORD *)(v4 + 48) = *(_OWORD *)v3;
  char v6 = *(unsigned char *)(v3 + 64);
  long long v8 = *(_OWORD *)(v3 + 32);
  long long v7 = *(_OWORD *)(v3 + 48);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v3 + 16);
  *(_OWORD *)(v4 + 80) = v8;
  *(_OWORD *)(v4 + 96) = v7;
  *(unsigned char *)(v4 + 112) = v6;
  *a1 = sub_2499E03E8;
  a1[1] = (uint64_t (*)@<X0>(uint64_t@<X8>))v4;

  return sub_2499E03F8(v3);
}

unint64_t sub_2499DCC38()
{
  unint64_t result = qword_2696E2900;
  if (!qword_2696E2900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2900);
  }
  return result;
}

unint64_t sub_2499DCC90()
{
  unint64_t result = qword_2696E2908[0];
  if (!qword_2696E2908[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2696E2908);
  }
  return result;
}

uint64_t sub_2499DCCE4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499DCD30()
{
  return 16;
}

__n128 sub_2499DCD3C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DCD48()
{
  return sub_2499D10B0();
}

uint64_t sub_2499DCD6C(uint64_t a1)
{
  return sub_2499DC640(a1);
}

uint64_t sub_2499DCD90()
{
  return 16;
}

__n128 sub_2499DCD9C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DCDB0()
{
  return 16;
}

__n128 sub_2499DCDBC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DCDD0()
{
  return 16;
}

__n128 sub_2499DCDDC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DCDF0()
{
  return 16;
}

__n128 sub_2499DCDFC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DCE10()
{
  return 16;
}

__n128 sub_2499DCE1C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DCE28@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_2499DC4A8();

  return swift_bridgeObjectRetain();
}

uint64_t sub_2499DCE64()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  return sub_2499D1B54(v0);
}

uint64_t sub_2499DCE90()
{
  return 16;
}

__n128 sub_2499DCE9C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DCEA8()
{
  return 16;
}

__n128 sub_2499DCEB4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499DCEC0()
{
  return sub_2499D1E50();
}

uint64_t sub_2499DCEE8()
{
  return 16;
}

__n128 sub_2499DCEF4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t getEnumTagSinglePayload for PageControlPosition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PageControlPosition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2499DCF90(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_2499DCF98(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for PageControlPosition()
{
  return &type metadata for PageControlPosition;
}

void sub_2499DCFB4()
{
  sub_249AEBA18();
  if (v0 <= 0x3F)
  {
    sub_2499DD5A0(319, qword_2696E2990);
    if (v1 <= 0x3F)
    {
      sub_249AED4F8();
      sub_249AEBA18();
      if (v2 <= 0x3F)
      {
        sub_2499DD5A0(319, (unint64_t *)&qword_2696DFCE0);
        if (v3 <= 0x3F) {
          swift_initClassMetadata2();
        }
      }
    }
  }
}

uint64_t type metadata accessor for CarouselModel()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for CarouselModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for CarouselModel);
}

uint64_t dispatch thunk of CarouselModel.activeItem.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CarouselModel.$activeItem.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of CarouselModel.animationStarted.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of CarouselModel.animationStarted.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of CarouselModel.animationStarted.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of CarouselModel.animationSettled.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 304))();
}

uint64_t dispatch thunk of CarouselModel.animationSettled.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 312))();
}

uint64_t dispatch thunk of CarouselModel.animationSettled.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t dispatch thunk of CarouselModel.itemWillAppear.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t dispatch thunk of CarouselModel.itemWillAppear.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 360))();
}

uint64_t dispatch thunk of CarouselModel.itemWillAppear.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 368))();
}

uint64_t dispatch thunk of CarouselModel.itemDidDisappear.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 376))();
}

uint64_t dispatch thunk of CarouselModel.itemDidDisappear.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 384))();
}

uint64_t dispatch thunk of CarouselModel.itemDidDisappear.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of CarouselModel.items.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of CarouselModel.activeIndex.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t dispatch thunk of CarouselModel.$activeIndex.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 448))();
}

uint64_t dispatch thunk of CarouselModel.__allocating_init(items:activeItem:alwaysHidesPlatter:platterVisibilityDuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 640))();
}

uint64_t dispatch thunk of CarouselModel.getTargetItem(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 648))();
}

uint64_t dispatch thunk of CarouselModel.insert(_:before:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t dispatch thunk of CarouselModel.remove(_:moveTo:animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

uint64_t dispatch thunk of CarouselModel.rotate(_:animated:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 680))();
}

uint64_t dispatch thunk of CarouselModel.showDecorations()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t dispatch thunk of CarouselModel.hideDecorations(after:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 720))();
}

void sub_2499DD5A0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_249AEBA18();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_2499DD5E8()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_2499DD674(void *a1, unsigned __int16 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  size_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = v7;
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v10 > 0xFFFE)
      {
        uint64_t v9 = 4;
      }
      else
      {
        BOOL v11 = v10 != 0;
        BOOL v12 = v10 >= 0xFF;
        uint64_t v9 = 2;
        if (!v12) {
          uint64_t v9 = v11;
        }
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    unint64_t v8 = v9 + v7;
  }
  uint64_t v13 = *(_DWORD *)(v5 + 80);
  if (v13 > 7 || v8 > 0x18 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v16 + ((v13 + 16) & ~v13));
    swift_retain();
    return a1;
  }
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v18 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v18 > 0xFFFE)
      {
        int v17 = *(_DWORD *)((char *)a2 + v7);
        if (!v17) {
          goto LABEL_37;
        }
        goto LABEL_27;
      }
      if (v18 > 0xFE)
      {
        int v17 = *(unsigned __int16 *)((char *)a2 + v7);
        if (!*(unsigned __int16 *)((char *)a2 + v7)) {
          goto LABEL_37;
        }
        goto LABEL_27;
      }
      if (!v18)
      {
LABEL_37:
        if (!v6) {
          goto LABEL_53;
        }
        goto LABEL_38;
      }
    }
    int v17 = *((unsigned __int8 *)a2 + v7);
    if (!*((unsigned char *)a2 + v7)) {
      goto LABEL_37;
    }
LABEL_27:
    int v19 = (v17 - 1) << (8 * v7);
    if (v7 > 3) {
      int v19 = 0;
    }
    if (v7)
    {
      if (v7 <= 3) {
        int v20 = v7;
      }
      else {
        int v20 = 4;
      }
      switch(v20)
      {
        case 2:
          int v21 = *a2;
          break;
        case 3:
          int v21 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v21 = *(_DWORD *)a2;
          break;
        default:
          int v21 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v21 = 0;
    }
    if (v6 + (v21 | v19) != -1) {
      goto LABEL_39;
    }
    goto LABEL_53;
  }
LABEL_38:
  if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48))(a2, v6, AssociatedTypeWitness))
  {
LABEL_39:
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        unsigned int v23 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v23 > 0xFFFE)
        {
          uint64_t v22 = 4;
        }
        else
        {
          BOOL v24 = v23 != 0;
          BOOL v12 = v23 >= 0xFF;
          uint64_t v22 = 2;
          if (!v12) {
            uint64_t v22 = v24;
          }
        }
      }
      else
      {
        uint64_t v22 = 1;
      }
      v7 += v22;
    }
    memcpy(a1, a2, v7);
    return a1;
  }
LABEL_53:
  (*(void (**)(void *, unsigned __int16 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v25 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v25 > 0xFFFE)
      {
        *(_DWORD *)((char *)a1 + v7) = 0;
        return a1;
      }
      if (v25 > 0xFE)
      {
        *(_WORD *)((char *)a1 + v7) = 0;
        return a1;
      }
      if (!v25) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v7) = 0;
  }
  return a1;
}

uint64_t sub_2499DD9BC(unsigned __int16 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(v3 + 64);
  if (v4 > 1)
  {
LABEL_19:
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t result = (*(uint64_t (**)(unsigned __int16 *))(v3 + 48))(a1);
    uint64_t v3 = v13;
    if (result) {
      return result;
    }
    goto LABEL_25;
  }
  char v6 = 8 * v5;
  if (v5 <= 3)
  {
    unsigned int v8 = (~(-1 << v6) - v4 + 2) >> v6;
    if (v8 > 0xFFFE)
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_18;
      }
      goto LABEL_10;
    }
    if (v8 > 0xFE)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_18;
      }
      goto LABEL_10;
    }
    if (!v8)
    {
LABEL_18:
      if (v4) {
        goto LABEL_19;
      }
LABEL_25:
      BOOL v12 = *(uint64_t (**)(unsigned __int16 *, uint64_t))(v3 + 8);
      return v12(a1, AssociatedTypeWitness);
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_18;
  }
LABEL_10:
  int v9 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v9 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  int v11 = v4 + (v5 | v9);
  uint64_t result = (v11 + 1);
  if (v11 == -1) {
    goto LABEL_25;
  }
  return result;
}

char *sub_2499DDB9C(char *a1, unsigned __int16 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  size_t v7 = *(void *)(v5 + 64);
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        int v8 = *(_DWORD *)((char *)a2 + v7);
        if (!v8) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v9 > 0xFE)
      {
        int v8 = *(unsigned __int16 *)((char *)a2 + v7);
        if (!*(unsigned __int16 *)((char *)a2 + v7)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v9)
      {
LABEL_20:
        if (!v6) {
          goto LABEL_36;
        }
        goto LABEL_21;
      }
    }
    int v8 = *((unsigned __int8 *)a2 + v7);
    if (!*((unsigned char *)a2 + v7)) {
      goto LABEL_20;
    }
LABEL_10:
    int v10 = (v8 - 1) << (8 * v7);
    if (v7 > 3) {
      int v10 = 0;
    }
    if (v7)
    {
      if (v7 <= 3) {
        int v11 = *(void *)(v5 + 64);
      }
      else {
        int v11 = 4;
      }
      switch(v11)
      {
        case 2:
          int v12 = *a2;
          break;
        case 3:
          int v12 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v12 = *(_DWORD *)a2;
          break;
        default:
          int v12 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v12 = 0;
    }
    if (v6 + (v12 | v10) != -1) {
      goto LABEL_22;
    }
    goto LABEL_36;
  }
LABEL_21:
  if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48))(a2, v6, AssociatedTypeWitness))
  {
LABEL_22:
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        unsigned int v14 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v14 > 0xFFFE)
        {
          uint64_t v13 = 4;
        }
        else
        {
          BOOL v15 = v14 != 0;
          BOOL v16 = v14 >= 0xFF;
          uint64_t v13 = 2;
          if (!v16) {
            uint64_t v13 = v15;
          }
        }
      }
      else
      {
        uint64_t v13 = 1;
      }
      v7 += v13;
    }
    memcpy(a1, a2, v7);
    return a1;
  }
LABEL_36:
  (*(void (**)(char *, unsigned __int16 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v17 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v17 > 0xFFFE)
      {
        *(_DWORD *)&a1[v7] = 0;
        return a1;
      }
      if (v17 > 0xFE)
      {
        *(_WORD *)&a1[v7] = 0;
        return a1;
      }
      if (!v17) {
        return a1;
      }
    }
    a1[v7] = 0;
  }
  return a1;
}

unsigned __int16 *sub_2499DDE48(unsigned __int16 *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  size_t v7 = *(void *)(v5 + 64);
  if (v6 > 1) {
    goto LABEL_21;
  }
  if (v7 > 3) {
    goto LABEL_3;
  }
  unsigned int v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
  if (v9 > 0xFFFE)
  {
    int v8 = *(_DWORD *)((char *)a1 + v7);
    if (!v8) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v9 > 0xFE)
  {
    int v8 = *(unsigned __int16 *)((char *)a1 + v7);
    if (!*(unsigned __int16 *)((char *)a1 + v7)) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v9)
  {
LABEL_3:
    int v8 = *((unsigned __int8 *)a1 + v7);
    if (!*((unsigned char *)a1 + v7)) {
      goto LABEL_20;
    }
LABEL_10:
    int v10 = (v8 - 1) << (8 * v7);
    if (v7 > 3) {
      int v10 = 0;
    }
    if (v7)
    {
      if (v7 <= 3) {
        int v11 = *(void *)(v5 + 64);
      }
      else {
        int v11 = 4;
      }
      switch(v11)
      {
        case 2:
          int v12 = *a1;
          break;
        case 3:
          int v12 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v12 = *(_DWORD *)a1;
          break;
        default:
          int v12 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v12 = 0;
    }
    if ((v12 | v10) + v6 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_20:
  if (!v6) {
    goto LABEL_33;
  }
LABEL_21:
  uint64_t v13 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48);
  if (!v13((unsigned __int8 *)a1, v6, AssociatedTypeWitness))
  {
    if (v6 > 1)
    {
LABEL_74:
      if (v13(a2, v6, AssociatedTypeWitness)) {
        goto LABEL_75;
      }
      goto LABEL_100;
    }
LABEL_33:
    if (v7 > 3) {
      goto LABEL_34;
    }
    unsigned int v17 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
    if (v17 > 0xFFFE)
    {
      int v15 = *(_DWORD *)&a2[v7];
      if (v15) {
        goto LABEL_55;
      }
    }
    else
    {
      if (v17 <= 0xFE)
      {
        if (!v17) {
          goto LABEL_72;
        }
LABEL_34:
        int v15 = a2[v7];
        if (!a2[v7]) {
          goto LABEL_72;
        }
LABEL_55:
        int v21 = (v15 - 1) << (8 * v7);
        if (v7 > 3) {
          int v21 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v22 = v7;
          }
          else {
            int v22 = 4;
          }
          switch(v22)
          {
            case 2:
              int v23 = *(unsigned __int16 *)a2;
              break;
            case 3:
              int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              break;
            case 4:
              int v23 = *(_DWORD *)a2;
              break;
            default:
              int v23 = *a2;
              break;
          }
        }
        else
        {
          int v23 = 0;
        }
        if (v6 + (v23 | v21) != -1)
        {
LABEL_75:
          (*(void (**)(unsigned __int16 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
          if (v6 <= 1)
          {
            if (v7 > 3) {
              goto LABEL_70;
            }
            goto LABEL_77;
          }
LABEL_83:
          memcpy(a1, a2, v7);
          return a1;
        }
LABEL_100:
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
        return a1;
      }
      int v15 = *(unsigned __int16 *)&a2[v7];
      if (*(_WORD *)&a2[v7]) {
        goto LABEL_55;
      }
    }
LABEL_72:
    if (!v6) {
      goto LABEL_100;
    }
    uint64_t v13 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48);
    goto LABEL_74;
  }
  if (v6 > 1)
  {
LABEL_67:
    if (v13(a2, v6, AssociatedTypeWitness)) {
      goto LABEL_68;
    }
    goto LABEL_88;
  }
LABEL_30:
  if (v7 > 3) {
    goto LABEL_31;
  }
  unsigned int v16 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
  if (v16 > 0xFFFE)
  {
    int v14 = *(_DWORD *)&a2[v7];
    if (v14) {
      goto LABEL_45;
    }
    goto LABEL_65;
  }
  if (v16 > 0xFE)
  {
    int v14 = *(unsigned __int16 *)&a2[v7];
    if (*(_WORD *)&a2[v7]) {
      goto LABEL_45;
    }
LABEL_65:
    if (!v6) {
      goto LABEL_88;
    }
    uint64_t v13 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48);
    goto LABEL_67;
  }
  if (!v16) {
    goto LABEL_65;
  }
LABEL_31:
  int v14 = a2[v7];
  if (!a2[v7]) {
    goto LABEL_65;
  }
LABEL_45:
  int v18 = (v14 - 1) << (8 * v7);
  if (v7 > 3) {
    int v18 = 0;
  }
  if (v7)
  {
    if (v7 <= 3) {
      int v19 = v7;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        break;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a2;
        break;
      default:
        int v20 = *a2;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  if (v6 + (v20 | v18) != -1)
  {
LABEL_68:
    if (v6 <= 1)
    {
      if (v7 > 3)
      {
LABEL_70:
        uint64_t v24 = 1;
LABEL_82:
        v7 += v24;
        goto LABEL_83;
      }
LABEL_77:
      unsigned int v25 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v25 > 0xFFFE)
      {
        uint64_t v24 = 4;
      }
      else
      {
        BOOL v26 = v25 != 0;
        BOOL v27 = v25 >= 0xFF;
        uint64_t v24 = 2;
        if (!v27) {
          uint64_t v24 = v26;
        }
      }
      goto LABEL_82;
    }
    goto LABEL_83;
  }
LABEL_88:
  (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v28 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v28 > 0xFFFE)
      {
        *(_DWORD *)((char *)a1 + v7) = 0;
        return a1;
      }
      if (v28 > 0xFE)
      {
        *(unsigned __int16 *)((char *)a1 + v7) = 0;
        return a1;
      }
      if (!v28) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v7) = 0;
  }
  return a1;
}

char *sub_2499DE388(char *a1, unsigned __int16 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  size_t v7 = *(void *)(v5 + 64);
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        int v8 = *(_DWORD *)((char *)a2 + v7);
        if (!v8) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (v9 > 0xFE)
      {
        int v8 = *(unsigned __int16 *)((char *)a2 + v7);
        if (!*(unsigned __int16 *)((char *)a2 + v7)) {
          goto LABEL_20;
        }
        goto LABEL_10;
      }
      if (!v9)
      {
LABEL_20:
        if (!v6) {
          goto LABEL_36;
        }
        goto LABEL_21;
      }
    }
    int v8 = *((unsigned __int8 *)a2 + v7);
    if (!*((unsigned char *)a2 + v7)) {
      goto LABEL_20;
    }
LABEL_10:
    int v10 = (v8 - 1) << (8 * v7);
    if (v7 > 3) {
      int v10 = 0;
    }
    if (v7)
    {
      if (v7 <= 3) {
        int v11 = *(void *)(v5 + 64);
      }
      else {
        int v11 = 4;
      }
      switch(v11)
      {
        case 2:
          int v12 = *a2;
          break;
        case 3:
          int v12 = *a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          break;
        case 4:
          int v12 = *(_DWORD *)a2;
          break;
        default:
          int v12 = *(unsigned __int8 *)a2;
          break;
      }
    }
    else
    {
      int v12 = 0;
    }
    if (v6 + (v12 | v10) != -1) {
      goto LABEL_22;
    }
    goto LABEL_36;
  }
LABEL_21:
  if ((*(unsigned int (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48))(a2, v6, AssociatedTypeWitness))
  {
LABEL_22:
    if (v6 <= 1)
    {
      if (v7 <= 3)
      {
        unsigned int v14 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
        if (v14 > 0xFFFE)
        {
          uint64_t v13 = 4;
        }
        else
        {
          BOOL v15 = v14 != 0;
          BOOL v16 = v14 >= 0xFF;
          uint64_t v13 = 2;
          if (!v16) {
            uint64_t v13 = v15;
          }
        }
      }
      else
      {
        uint64_t v13 = 1;
      }
      v7 += v13;
    }
    memcpy(a1, a2, v7);
    return a1;
  }
LABEL_36:
  (*(void (**)(char *, unsigned __int16 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v17 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v17 > 0xFFFE)
      {
        *(_DWORD *)&a1[v7] = 0;
        return a1;
      }
      if (v17 > 0xFE)
      {
        *(_WORD *)&a1[v7] = 0;
        return a1;
      }
      if (!v17) {
        return a1;
      }
    }
    a1[v7] = 0;
  }
  return a1;
}

unsigned __int16 *sub_2499DE634(unsigned __int16 *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  size_t v7 = *(void *)(v5 + 64);
  if (v6 > 1) {
    goto LABEL_21;
  }
  if (v7 > 3) {
    goto LABEL_3;
  }
  unsigned int v9 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
  if (v9 > 0xFFFE)
  {
    int v8 = *(_DWORD *)((char *)a1 + v7);
    if (!v8) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v9 > 0xFE)
  {
    int v8 = *(unsigned __int16 *)((char *)a1 + v7);
    if (!*(unsigned __int16 *)((char *)a1 + v7)) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v9)
  {
LABEL_3:
    int v8 = *((unsigned __int8 *)a1 + v7);
    if (!*((unsigned char *)a1 + v7)) {
      goto LABEL_20;
    }
LABEL_10:
    int v10 = (v8 - 1) << (8 * v7);
    if (v7 > 3) {
      int v10 = 0;
    }
    if (v7)
    {
      if (v7 <= 3) {
        int v11 = *(void *)(v5 + 64);
      }
      else {
        int v11 = 4;
      }
      switch(v11)
      {
        case 2:
          int v12 = *a1;
          break;
        case 3:
          int v12 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v12 = *(_DWORD *)a1;
          break;
        default:
          int v12 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v12 = 0;
    }
    if ((v12 | v10) + v6 != -1) {
      goto LABEL_30;
    }
    goto LABEL_33;
  }
LABEL_20:
  if (!v6) {
    goto LABEL_33;
  }
LABEL_21:
  uint64_t v13 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48);
  if (!v13((unsigned __int8 *)a1, v6, AssociatedTypeWitness))
  {
    if (v6 > 1)
    {
LABEL_74:
      if (v13(a2, v6, AssociatedTypeWitness)) {
        goto LABEL_75;
      }
      goto LABEL_100;
    }
LABEL_33:
    if (v7 > 3) {
      goto LABEL_34;
    }
    unsigned int v17 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
    if (v17 > 0xFFFE)
    {
      int v15 = *(_DWORD *)&a2[v7];
      if (v15) {
        goto LABEL_55;
      }
    }
    else
    {
      if (v17 <= 0xFE)
      {
        if (!v17) {
          goto LABEL_72;
        }
LABEL_34:
        int v15 = a2[v7];
        if (!a2[v7]) {
          goto LABEL_72;
        }
LABEL_55:
        int v21 = (v15 - 1) << (8 * v7);
        if (v7 > 3) {
          int v21 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v22 = v7;
          }
          else {
            int v22 = 4;
          }
          switch(v22)
          {
            case 2:
              int v23 = *(unsigned __int16 *)a2;
              break;
            case 3:
              int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              break;
            case 4:
              int v23 = *(_DWORD *)a2;
              break;
            default:
              int v23 = *a2;
              break;
          }
        }
        else
        {
          int v23 = 0;
        }
        if (v6 + (v23 | v21) != -1)
        {
LABEL_75:
          (*(void (**)(unsigned __int16 *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
          if (v6 <= 1)
          {
            if (v7 > 3) {
              goto LABEL_70;
            }
            goto LABEL_77;
          }
LABEL_83:
          memcpy(a1, a2, v7);
          return a1;
        }
LABEL_100:
        (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
        return a1;
      }
      int v15 = *(unsigned __int16 *)&a2[v7];
      if (*(_WORD *)&a2[v7]) {
        goto LABEL_55;
      }
    }
LABEL_72:
    if (!v6) {
      goto LABEL_100;
    }
    uint64_t v13 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48);
    goto LABEL_74;
  }
  if (v6 > 1)
  {
LABEL_67:
    if (v13(a2, v6, AssociatedTypeWitness)) {
      goto LABEL_68;
    }
    goto LABEL_88;
  }
LABEL_30:
  if (v7 > 3) {
    goto LABEL_31;
  }
  unsigned int v16 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
  if (v16 > 0xFFFE)
  {
    int v14 = *(_DWORD *)&a2[v7];
    if (v14) {
      goto LABEL_45;
    }
    goto LABEL_65;
  }
  if (v16 > 0xFE)
  {
    int v14 = *(unsigned __int16 *)&a2[v7];
    if (*(_WORD *)&a2[v7]) {
      goto LABEL_45;
    }
LABEL_65:
    if (!v6) {
      goto LABEL_88;
    }
    uint64_t v13 = *(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v5 + 48);
    goto LABEL_67;
  }
  if (!v16) {
    goto LABEL_65;
  }
LABEL_31:
  int v14 = a2[v7];
  if (!a2[v7]) {
    goto LABEL_65;
  }
LABEL_45:
  int v18 = (v14 - 1) << (8 * v7);
  if (v7 > 3) {
    int v18 = 0;
  }
  if (v7)
  {
    if (v7 <= 3) {
      int v19 = v7;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        break;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a2;
        break;
      default:
        int v20 = *a2;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  if (v6 + (v20 | v18) != -1)
  {
LABEL_68:
    if (v6 <= 1)
    {
      if (v7 > 3)
      {
LABEL_70:
        uint64_t v24 = 1;
LABEL_82:
        v7 += v24;
        goto LABEL_83;
      }
LABEL_77:
      unsigned int v25 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v25 > 0xFFFE)
      {
        uint64_t v24 = 4;
      }
      else
      {
        BOOL v26 = v25 != 0;
        BOOL v27 = v25 >= 0xFF;
        uint64_t v24 = 2;
        if (!v27) {
          uint64_t v24 = v26;
        }
      }
      goto LABEL_82;
    }
    goto LABEL_83;
  }
LABEL_88:
  (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  if (v6 <= 1)
  {
    if (v7 <= 3)
    {
      unsigned int v28 = (~(-1 << (8 * v7)) - v6 + 2) >> (8 * v7);
      if (v28 > 0xFFFE)
      {
        *(_DWORD *)((char *)a1 + v7) = 0;
        return a1;
      }
      if (v28 > 0xFE)
      {
        *(unsigned __int16 *)((char *)a1 + v7) = 0;
        return a1;
      }
      if (!v28) {
        return a1;
      }
    }
    *((unsigned char *)a1 + v7) = 0;
  }
  return a1;
}

uint64_t sub_2499DEB74(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  unsigned int v7 = v6 - 2;
  uint64_t v8 = *(void *)(v5 + 64);
  if (v6 <= 1)
  {
    unsigned int v7 = 0;
    if (v8 <= 3)
    {
      unsigned int v10 = (~(-1 << (8 * v8)) - v6 + 2) >> (8 * v8);
      if (v10 > 0xFFFE)
      {
        uint64_t v9 = 4;
      }
      else
      {
        BOOL v11 = v10 != 0;
        BOOL v12 = v10 >= 0xFF;
        uint64_t v9 = 2;
        if (!v12) {
          uint64_t v9 = v11;
        }
      }
    }
    else
    {
      uint64_t v9 = 1;
    }
    v8 += v9;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_28;
  }
  char v13 = 8 * v8;
  if (v8 > 3) {
    goto LABEL_13;
  }
  unsigned int v15 = ((a2 - v7 + ~(-1 << v13)) >> v13) + 1;
  if (HIWORD(v15))
  {
    int v14 = *(_DWORD *)((char *)a1 + v8);
    if (v14) {
      goto LABEL_20;
    }
  }
  else
  {
    if (v15 <= 0xFF)
    {
      if (v15 < 2) {
        goto LABEL_28;
      }
LABEL_13:
      int v14 = *((unsigned __int8 *)a1 + v8);
      if (!*((unsigned char *)a1 + v8)) {
        goto LABEL_28;
      }
LABEL_20:
      int v16 = (v14 - 1) << v13;
      if (v8 > 3) {
        int v16 = 0;
      }
      if (v8)
      {
        if (v8 > 3) {
          LODWORD(v8) = 4;
        }
        switch((int)v8)
        {
          case 2:
            LODWORD(v8) = *a1;
            break;
          case 3:
            LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v8) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v8) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v8 | v16) + 1;
    }
    int v14 = *(unsigned __int16 *)((char *)a1 + v8);
    if (*(unsigned __int16 *)((char *)a1 + v8)) {
      goto LABEL_20;
    }
  }
LABEL_28:
  if (!v7) {
    return 0;
  }
  if (!v6) {
    return 0;
  }
  unsigned int v17 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48))(a1, v6, AssociatedTypeWitness);
  BOOL v12 = v17 >= 2;
  uint64_t result = v17 - 2;
  if (result == 0 || !v12) {
    return 0;
  }
  return result;
}

void sub_2499DED80(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v8 = v7 - 2;
  size_t v9 = *(void *)(v6 + 64);
  size_t v10 = v9;
  if (v7 <= 1)
  {
    unsigned int v8 = 0;
    if (v9 <= 3)
    {
      unsigned int v12 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v12 > 0xFFFE)
      {
        uint64_t v11 = 4;
      }
      else
      {
        BOOL v13 = v12 != 0;
        BOOL v14 = v12 >= 0xFF;
        uint64_t v11 = 2;
        if (!v14) {
          uint64_t v11 = v13;
        }
      }
    }
    else
    {
      uint64_t v11 = 1;
    }
    size_t v10 = v11 + v9;
  }
  if (a3 <= v8)
  {
    int v15 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v18 = ((a3 - v8 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v18))
    {
      int v15 = 4;
    }
    else if (v18 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v18 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    if (v10 < 4)
    {
      int v17 = (v16 >> (8 * v10)) + 1;
      if (v10)
      {
        int v19 = v16 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v17;
        return;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&a1[v10] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_57:
      __break(1u);
      JUMPOUT(0x2499DF0BCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        if (a2 + 2 <= v7)
        {
          if (a2 != -2)
          {
            int v23 = *(void (**)(unsigned char *, void))(v6 + 56);
            v23(a1, a2 + 2);
          }
        }
        else
        {
          if (v9 <= 3) {
            int v20 = ~(-1 << (8 * v9));
          }
          else {
            int v20 = -1;
          }
          if (v9)
          {
            int v21 = v20 & (a2 - v7 + 1);
            if (v9 <= 3) {
              int v22 = v9;
            }
            else {
              int v22 = 4;
            }
            bzero(a1, v9);
            switch(v22)
            {
              case 2:
                *(_WORD *)a1 = v21;
                break;
              case 3:
                *(_WORD *)a1 = v21;
                a1[2] = BYTE2(v21);
                break;
              case 4:
                *(_DWORD *)a1 = v21;
                break;
              default:
                *a1 = v21;
                break;
            }
          }
        }
      }
      return;
  }
}

uint64_t sub_2499DF0F4(unsigned __int16 *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v3 = *(_DWORD *)(v2 + 84);
  uint64_t v4 = *(void *)(v2 + 64);
  if (v3 > 1)
  {
LABEL_19:
    size_t v9 = *(uint64_t (**)(unsigned __int16 *))(v2 + 48);
    return v9(a1);
  }
  char v5 = 8 * v4;
  if (v4 <= 3)
  {
    unsigned int v7 = (~(-1 << v5) - v3 + 2) >> v5;
    if (v7 > 0xFFFE)
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_18;
      }
      goto LABEL_10;
    }
    if (v7 > 0xFE)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_18;
      }
      goto LABEL_10;
    }
    if (!v7)
    {
LABEL_18:
      if (!v3) {
        return 0;
      }
      goto LABEL_19;
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_18;
  }
LABEL_10:
  int v8 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v8 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v3 + (v4 | v8) + 1;
}

void sub_2499DF2A0(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  size_t v6 = *(void *)(v4 + 64);
  if (v5 > 1)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = (~(-1 << (8 * v6)) - v5 + 2) >> (8 * v6);
    if (v10 > 0xFFFE)
    {
      int v7 = 4;
    }
    else if (v10 >= 0xFF)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 != 0;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (v5 < a2)
  {
    unsigned int v8 = ~v5 + a2;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v6)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v6);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        return;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        return;
      default:
        return;
    }
  }
  switch(v7)
  {
    case 1:
      a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2499DF4DCLL);
    case 4:
      *(_DWORD *)&a1[v6] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v12 = *(void (**)(unsigned char *, uint64_t))(v4 + 56);
        v12(a1, a2);
      }
      return;
  }
}

uint64_t getEnumTagSinglePayload for CarouselStyle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    unsigned int v4 = -1;
  }
  else {
    unsigned int v4 = v3 ^ 0xFF;
  }
  if (v4 + 1 >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for CarouselStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = ~(_BYTE)a2;
    }
  }
  return result;
}

uint64_t sub_2499DF598(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 > 1) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_2499DF5AC(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 32) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for CarouselStyle()
{
  return &type metadata for CarouselStyle;
}

uint64_t sub_2499DF5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_2499DF5F4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_2499DF650(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_retain();
  swift_release();
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  return a1;
}

uint64_t sub_2499DF6C8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  return a1;
}

uint64_t sub_2499DF728(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 65)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2499DF770(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for Carousel()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2499DF7DC()
{
  return swift_getWitnessTable();
}

uint64_t getEnumTagSinglePayload for PageControl(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PageControl(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PageControl()
{
  return &type metadata for PageControl;
}

ValueMetadata *type metadata accessor for OnScrollOut()
{
  return &type metadata for OnScrollOut;
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwxx_0()
{
  swift_release();

  return swift_release();
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwta_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t _s14CarPlayAssetUI11OnScrollOutVwet_0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2499DFE84(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OnScrollIn()
{
  return &type metadata for OnScrollIn;
}

uint64_t getEnumTagSinglePayload for ContentShape(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentShape(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentShape()
{
  return &type metadata for ContentShape;
}

uint64_t sub_2499DFF78()
{
  return sub_2498D0A3C(&qword_2696E2A98, &qword_2696E2AA0);
}

unint64_t sub_2499DFFB8()
{
  unint64_t result = qword_2696E2AA8;
  if (!qword_2696E2AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2AA8);
  }
  return result;
}

unint64_t sub_2499E0010()
{
  unint64_t result = qword_2696E2AB0;
  if (!qword_2696E2AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2AB0);
  }
  return result;
}

unint64_t sub_2499E0068()
{
  unint64_t result = qword_2696E2AB8;
  if (!qword_2696E2AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2AB8);
  }
  return result;
}

unint64_t sub_2499E00C0()
{
  unint64_t result = qword_2696E2AC0;
  if (!qword_2696E2AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2AC0);
  }
  return result;
}

uint64_t sub_2499E0114()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499E0130()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499E014C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499E016C@<X0>(uint64_t *a1@<X8>)
{
  return sub_2499DAA48(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_2499E0180(uint64_t a1)
{
  return sub_2499DABF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_2499E0194()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_2499E01C0@<X0>(uint64_t *a1@<X8>)
{
  return sub_2499DAF84(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), a1);
}

uint64_t sub_2499E01D4(uint64_t a1)
{
  return sub_2499DB12C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t objectdestroy_87Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

unint64_t sub_2499E0228()
{
  unint64_t result = qword_2696E2AF0;
  if (!qword_2696E2AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2AF0);
  }
  return result;
}

uint64_t sub_2499E027C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2499D218C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2499E02AC()
{
  return sub_2499D2254();
}

uint64_t sub_2499E02D4()
{
  return 16;
}

__n128 sub_2499E02E0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499E02EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_2499D2164();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2499E031C()
{
  return sub_2499D2178();
}

uint64_t sub_2499E0344()
{
  return 16;
}

__n128 sub_2499E0350(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_2499E035C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2499E0394()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_2499E03BC()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_2499E03E8@<X0>(uint64_t a1@<X8>)
{
  return sub_2499DA254(v1 + 48, *(void *)(v1 + 24), a1);
}

uint64_t sub_2499E03F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_2499E0430()
{
  swift_beginAccess();
  sub_249AED4F8();
  swift_getWitnessTable();
  char v1 = sub_249AED6D8();
  double v2 = 0.0;
  if ((v1 & 1) == 0) {
    double v2 = *(double *)(v0 + *(void *)(*(void *)v0 + 152));
  }
  return sub_2499D65A0(v2);
}

uint64_t sub_2499E050C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2880);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_153Tm()
{
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 113, 7);
}

uint64_t sub_2499E05B8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_2499D8944(a1, (uint64_t)(v2 + 6), v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_2499E05C8()
{
  unint64_t result = qword_2696E2B20;
  if (!qword_2696E2B20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2880);
    sub_2499E0644();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2B20);
  }
  return result;
}

unint64_t sub_2499E0644()
{
  unint64_t result = qword_2696E2B28;
  if (!qword_2696E2B28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2B08);
    sub_2498D0A3C(&qword_2696E2B30, &qword_2696E2B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2B28);
  }
  return result;
}

uint64_t sub_2499E06E4@<X0>(char *a1@<X8>)
{
  return sub_2499D8F58(v1[6], v1[7], v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_2499E06F4()
{
  uint64_t v1 = sub_249AEBC68();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 113) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2499E07C8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  sub_249AEBC68();

  return sub_2499D9550(a1, (uint64_t)(v2 + 6), v5, v6, v7, v8, a2);
}

unint64_t sub_2499E0874()
{
  unint64_t result = qword_2696E2B38;
  if (!qword_2696E2B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2B38);
  }
  return result;
}

uint64_t sub_2499E08CC()
{
  return sub_2499E09CC((uint64_t (*)(uint64_t, unint64_t, void))sub_2499DA05C);
}

uint64_t objectdestroy_162Tm()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 113) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_2499E09B4()
{
  return sub_2499E09CC((uint64_t (*)(uint64_t, unint64_t, void))sub_2499DA100);
}

uint64_t sub_2499E09CC(uint64_t (*a1)(uint64_t, unint64_t, void))
{
  return a1(v1 + 48, v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80) + 113) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 24) - 8) + 80)), *(void *)(v1 + 16));
}

uint64_t sub_2499E0A1C()
{
  return sub_2499D2254();
}

uint64_t sub_2499E0A50()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2499E0A88()
{
  return sub_2499D6B30(*(void *)(v0 + 32), *(void *)(v0 + 16));
}

uint64_t sub_2499E0A94()
{
  return sub_2499D58A8() & 1;
}

uint64_t sub_2499E0AB8(uint64_t a1)
{
  return sub_2499D23A4(a1, *(void *)(v1 + 32), *(void *)(v1 + 16)) & 1;
}

ValueMetadata *type metadata accessor for FrameKey()
{
  return &type metadata for FrameKey;
}

uint64_t getEnumTagSinglePayload for ContentShape.ContentShapeInset(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentShape.ContentShapeInset(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 48) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentShape.ContentShapeInset()
{
  return &type metadata for ContentShape.ContentShapeInset;
}

uint64_t sub_2499E0B98()
{
  return sub_2499E0C08(&qword_2696E2B40, &qword_2696E2AD0, &qword_2696E2B48, &qword_2696E2AC8);
}

uint64_t sub_2499E0BD0()
{
  return sub_2499E0C08(&qword_2696E2B60, &qword_2696E2AE8, &qword_2696E2B68, &qword_2696E2AE0);
}

uint64_t sub_2499E0C08(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_2498D0A3C(a3, a4);
    sub_2498D0A3C(&qword_2696E2B50, &qword_2696E2B58);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499E0CCC()
{
  unint64_t result = qword_2696E2B70;
  if (!qword_2696E2B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2B70);
  }
  return result;
}

uint64_t sub_2499E0D20()
{
  return sub_2498D0A3C(&qword_2696E2B78, &qword_2696E2B80);
}

unint64_t sub_2499E0D60()
{
  unint64_t result = qword_2696E2B88;
  if (!qword_2696E2B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2B88);
  }
  return result;
}

unint64_t sub_2499E0DB8()
{
  unint64_t result = qword_2696E2B90;
  if (!qword_2696E2B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2B90);
  }
  return result;
}

unint64_t sub_2499E0E10()
{
  unint64_t result = qword_2696E2B98;
  if (!qword_2696E2B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2B98);
  }
  return result;
}

unint64_t sub_2499E0E68()
{
  unint64_t result = qword_2696E2BA0;
  if (!qword_2696E2BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2BA0);
  }
  return result;
}

uint64_t sub_2499E0EBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499E0F20()
{
  return sub_2499DC8F4() & 1;
}

uint64_t sub_2499E0F3C()
{
  return sub_2499E0A94() & 1;
}

ValueMetadata *type metadata accessor for RotationOffsetEffect()
{
  return &type metadata for RotationOffsetEffect;
}

CGAffineTransform *sub_2499E0F70@<X0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>)
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  sub_249AECD18();
  double v13 = v12;
  double v15 = v14;
  double tx = v12 * a2;
  CGFloat v16 = v14 * a3;
  CGAffineTransformMakeTranslation(&t1, a5, a6);
  long long v34 = *(_OWORD *)&t1.c;
  long long v37 = *(_OWORD *)&t1.a;
  CGFloat v17 = -(v15 * a3);
  CGFloat v18 = t1.tx;
  CGFloat ty = t1.ty;
  CGAffineTransformMakeTranslation(&t1, -(v13 * a2), v17);
  long long v20 = *(_OWORD *)&t1.a;
  long long v21 = *(_OWORD *)&t1.c;
  long long v22 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.CGFloat a = v37;
  *(_OWORD *)&t1.c = v34;
  t1.double tx = v18;
  t1.CGFloat ty = ty;
  *(_OWORD *)&t2.CGFloat a = v20;
  *(_OWORD *)&t2.c = v21;
  *(_OWORD *)&t2.double tx = v22;
  CGAffineTransformConcat(&v41, &t1, &t2);
  long long v35 = *(_OWORD *)&v41.c;
  long long v38 = *(_OWORD *)&v41.a;
  CGFloat v23 = v41.tx;
  CGFloat v24 = v41.ty;
  __double2 v25 = __sincos_stret(a4);
  *(_OWORD *)&t1.CGFloat a = v38;
  *(_OWORD *)&t1.c = v35;
  t1.double tx = v23;
  t1.CGFloat ty = v24;
  t2.CGFloat a = v25.__cosval;
  t2.b = v25.__sinval;
  t2.c = -v25.__sinval;
  t2.d = v25.__cosval;
  t2.double tx = 0.0;
  t2.CGFloat ty = 0.0;
  CGAffineTransformConcat(&v41, &t1, &t2);
  long long v36 = *(_OWORD *)&v41.c;
  long long v39 = *(_OWORD *)&v41.a;
  CGFloat v26 = v41.tx;
  CGFloat v27 = v41.ty;
  CGAffineTransformMakeTranslation(&t1, tx, v16);
  long long v28 = *(_OWORD *)&t1.a;
  long long v29 = *(_OWORD *)&t1.c;
  long long v30 = *(_OWORD *)&t1.tx;
  *(_OWORD *)&t1.CGFloat a = v39;
  *(_OWORD *)&t1.c = v36;
  t1.double tx = v26;
  t1.CGFloat ty = v27;
  *(_OWORD *)&t2.CGFloat a = v28;
  *(_OWORD *)&t2.c = v29;
  *(_OWORD *)&t2.double tx = v30;
  unint64_t result = CGAffineTransformConcat(&v41, &t1, &t2);
  long long v32 = *(_OWORD *)&v41.c;
  long long v33 = *(_OWORD *)&v41.tx;
  *(_OWORD *)a1 = *(_OWORD *)&v41.a;
  *(void *)(a1 + 16) = 0;
  *(_OWORD *)(a1 + 24) = v32;
  *(void *)(a1 + 40) = 0;
  *(_OWORD *)(a1 + 48) = v33;
  *(void *)(a1 + 64) = 0x3FF0000000000000;
  return result;
}

__n128 sub_2499E112C@<Q0>(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  sub_2499E0F70((uint64_t)v7, a2, a3, *v3, v3[1], v3[2]);
  long long v5 = v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = v8;
  __n128 result = (__n128)v7[1];
  *(_OWORD *)a1 = v7[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_2499E1188@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t result = sub_249AEC7F8();
  *a1 = v6;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_2499E11C4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = sub_249AEC808();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t (*sub_2499E11F0(void *a1))(void *a1)
{
  a1[3] = v1;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  sub_249AEC7F8();
  *a1 = v5;
  a1[1] = v3;
  a1[2] = v4;
  return sub_2499E124C;
}

uint64_t sub_2499E124C(void *a1)
{
  uint64_t v1 = a1[3];
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t result = sub_249AEC808();
  *(void *)(v1 + 8) = v2;
  *(void *)(v1 + 16) = v3;
  return result;
}

uint64_t sub_2499E1284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_2499E14FC();

  return MEMORY[0x270EFFA00](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_2499E1300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_2499E14FC();

  return MEMORY[0x270EFF9E8](a1, a2, a3, a4, a5, v10);
}

uint64_t sub_2499E137C()
{
  return sub_249AEBD08();
}

void sub_2499E13D8()
{
}

unint64_t sub_2499E13F0()
{
  unint64_t result = qword_2696E2BA8;
  if (!qword_2696E2BA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2BA8);
  }
  return result;
}

unint64_t sub_2499E1450()
{
  unint64_t result = qword_2696E2BB8;
  if (!qword_2696E2BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2BB8);
  }
  return result;
}

unint64_t sub_2499E14A8()
{
  unint64_t result = qword_2696E2BC0;
  if (!qword_2696E2BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2BC0);
  }
  return result;
}

unint64_t sub_2499E14FC()
{
  unint64_t result = qword_2696E2BC8;
  if (!qword_2696E2BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2BC8);
  }
  return result;
}

uint64_t sub_2499E1550@<X0>(unsigned char *a1@<X8>)
{
  sub_2499896B8();
  uint64_t result = sub_249AEBFF8();
  *a1 = v3;
  return result;
}

uint64_t sub_2499E15A0()
{
  return sub_249AEC008();
}

uint64_t static IconNotificationButtonConfiguration.close.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2499E37C0(&qword_2696DD738, (uint64_t)qword_2696E2BD0, a1);
}

uint64_t IconNotificationButton.init(action:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v6 = type metadata accessor for IconNotificationButton(0);
  return sub_2499E79A8(a3, (uint64_t)a4 + *(int *)(v6 + 20), type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t IconNotificationButton.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C00);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for IconNotificationButtonConfiguration(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for IconNotificationButtonStyle(0);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C08);
  uint64_t v25 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  double v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C10);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v26 = v14;
  uint64_t v27 = v15;
  MEMORY[0x270FA5388](v14);
  CGFloat v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_249AECA88();
  uint64_t v18 = type metadata accessor for IconNotificationButton(0);
  sub_2499E7A10(v1 + *(int *)(v18 + 20), (uint64_t)v7, type metadata accessor for IconNotificationButtonConfiguration);
  *uint64_t v4 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)&v10[v8[6]] = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D20);
  swift_storeEnumTagMultiPayload();
  sub_249882788((uint64_t)v4, (uint64_t)v10, &qword_2696E2C00);
  long long v20 = &v10[v8[5]];
  *(void *)long long v20 = KeyPath;
  v20[8] = 0;
  sub_2499E79A8((uint64_t)v7, (uint64_t)&v10[v8[7]], type metadata accessor for IconNotificationButtonConfiguration);
  uint64_t v21 = sub_2498D0A3C(&qword_2696E2C18, &qword_2696E2C08);
  uint64_t v22 = sub_2499E7DD0(&qword_2696E2C20, (void (*)(uint64_t))type metadata accessor for IconNotificationButtonStyle);
  sub_249AEC6E8();
  sub_2499E7A78((uint64_t)v10, type metadata accessor for IconNotificationButtonStyle);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v11);
  uint64_t v29 = v11;
  long long v30 = v8;
  uint64_t v31 = v21;
  uint64_t v32 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = v26;
  sub_249AEC718();
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v23);
}

uint64_t IconNotificationButtonContent.init(forceFocusedState:configuration:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = swift_getKeyPath();
  *(unsigned char *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 25) = a1;
  uint64_t v6 = type metadata accessor for IconNotificationButtonContent(0);
  return sub_2499E79A8(a2, a3 + *(int *)(v6 + 28), type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t IconNotificationButtonContent.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C28);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499E1C64(v2, (uint64_t)v6);
  uint64_t v7 = v2 + *(int *)(type metadata accessor for IconNotificationButtonContent(0) + 28);
  uint64_t v8 = v7 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 32);
  long long v13 = *(_OWORD *)v8;
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v8 + 24);
  LOBYTE(v7) = sub_249AEC4E8();
  sub_2498D6084((uint64_t)v6, a1, &qword_2696E2C28);
  uint64_t v11 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C30) + 36);
  *(unsigned char *)uint64_t v11 = v7;
  *(_OWORD *)(v11 + 8) = v13;
  *(void *)(v11 + 24) = v9;
  *(void *)(v11 + 32) = v10;
  *(unsigned char *)(v11 + 40) = 0;
  return sub_2498D60E8((uint64_t)v6, &qword_2696E2C28);
}

uint64_t sub_2499E1C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2D30);
  MEMORY[0x270FA5388](v114);
  uint64_t v5 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2D20);
  MEMORY[0x270FA5388](v118);
  uint64_t v106 = (char *)&v96 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v108 = (uint64_t)&v96 - v8;
  uint64_t v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2DC0);
  MEMORY[0x270FA5388](v116);
  uint64_t v117 = (uint64_t)&v96 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2D80);
  MEMORY[0x270FA5388](v112);
  uint64_t v113 = (uint64_t *)((char *)&v96 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1A58);
  MEMORY[0x270FA5388](v11 - 8);
  long long v13 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2CF0);
  MEMORY[0x270FA5388](v111);
  uint64_t v15 = (uint64_t *)((char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2DC8);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2CD0);
  MEMORY[0x270FA5388](v19);
  uint64_t v100 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2CC0);
  MEMORY[0x270FA5388](v99);
  uint64_t v103 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2CB0);
  MEMORY[0x270FA5388](v101);
  uint64_t v105 = (uint64_t)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2CA0);
  MEMORY[0x270FA5388](v102);
  uint64_t v104 = (uint64_t)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C90);
  MEMORY[0x270FA5388](v115);
  uint64_t v107 = (uint64_t)&v96 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v109 = (uint64_t)&v96 - v26;
  uint64_t v27 = *(int *)(type metadata accessor for IconNotificationButtonContent(0) + 28);
  uint64_t v110 = a1;
  uint64_t v28 = (uint64_t *)(a1 + v27);
  uint64_t v29 = type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v30 = (uint64_t)v28 + *(int *)(v29 + 28);
  char v31 = *(unsigned char *)(v30 + 32);
  uint64_t v119 = a2;
  if (v31)
  {
    uint64_t v32 = *v28;
    swift_retain();
    int v33 = sub_249AEC2C8();
    sub_249AEC578();
    uint64_t v34 = sub_249AEC548();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v13, 1, 1, v34);
    uint64_t v35 = sub_249AEC588();
    sub_2498D60E8((uint64_t)v13, &qword_2696E1A58);
    uint64_t KeyPath = swift_getKeyPath();
    long long v37 = (char *)v28 + *(int *)(v29 + 24);
    uint64_t v38 = swift_getKeyPath();
    long long v39 = v113;
    uint64_t v40 = (char *)v113 + *(int *)(v112 + 28);
    uint64_t v41 = sub_249AEC9B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v40, v37, v41);
    *long long v39 = v38;
    sub_2498D6084((uint64_t)v39, (uint64_t)&v5[*(int *)(v114 + 36)], &qword_2696E2D80);
    *(void *)uint64_t v5 = v32;
    *((_DWORD *)v5 + 2) = v33;
    *((void *)v5 + 2) = KeyPath;
    *((void *)v5 + 3) = v35;
    sub_2498D60E8((uint64_t)v39, &qword_2696E2D80);
    uint64_t v42 = swift_getKeyPath();
    sub_249AECBD8();
    uint64_t v43 = sub_249AECBE8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v18, 0, 1, v43);
    uint64_t v44 = (uint64_t)v106;
    unsigned int v45 = (uint64_t *)&v106[*(int *)(v118 + 36)];
    sub_2498D6084((uint64_t)v18, (uint64_t)v45 + *(int *)(v111 + 28), &qword_2696E2DC8);
    *unsigned int v45 = v42;
    sub_2498D6084((uint64_t)v5, v44, &qword_2696E2D30);
    sub_2498D60E8((uint64_t)v18, &qword_2696E2DC8);
    sub_2498D60E8((uint64_t)v5, &qword_2696E2D30);
    uint64_t v46 = &qword_2696E2D20;
    uint64_t v47 = v108;
    sub_249882788(v44, v108, &qword_2696E2D20);
    sub_2498D6084(v47, v117, &qword_2696E2D20);
    swift_storeEnumTagMultiPayload();
    sub_2499E5750(&qword_2696E2C88, &qword_2696E2C90, (void (*)(void))sub_2499E57CC);
    sub_2499E5A00();
    sub_249AEC248();
    uint64_t v48 = v47;
  }
  else
  {
    uint64_t v106 = *(char **)(v30 + 8);
    uint64_t v108 = v30;
    uint64_t v98 = *(void *)v30;
    int v49 = sub_249AEC2B8();
    uint64_t v50 = swift_getKeyPath();
    sub_249AECBD8();
    uint64_t v51 = sub_249AECBE8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v18, 0, 1, v51);
    sub_2498D6084((uint64_t)v18, (uint64_t)v15 + *(int *)(v111 + 28), &qword_2696E2DC8);
    *uint64_t v15 = v50;
    uint64_t v52 = *(int *)(v19 + 36);
    uint64_t v53 = (uint64_t)v100;
    sub_2498D6084((uint64_t)v15, (uint64_t)&v100[v52], &qword_2696E2CF0);
    *(_DWORD *)uint64_t v53 = v49;
    *(_WORD *)(v53 + 4) = 256;
    sub_2498D60E8((uint64_t)v15, &qword_2696E2CF0);
    sub_2498D60E8((uint64_t)v18, &qword_2696E2DC8);
    uint64_t v111 = sub_249AECC28();
    uint64_t v97 = v54;
    uint64_t v55 = (uint64_t)v103;
    char v56 = &v103[*(int *)(v99 + 36)];
    uint64_t v57 = *v28;
    swift_retain();
    LODWORD(v99) = sub_249AEC2C8();
    sub_249AEC578();
    uint64_t v58 = sub_249AEC548();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v13, 1, 1, v58);
    uint64_t v59 = sub_249AEC588();
    sub_2498D60E8((uint64_t)v13, &qword_2696E1A58);
    uint64_t v60 = swift_getKeyPath();
    uint64_t v61 = (char *)v28 + *(int *)(v29 + 24);
    uint64_t v62 = swift_getKeyPath();
    uint64_t v63 = v113;
    uint64_t v64 = (char *)v113 + *(int *)(v112 + 28);
    uint64_t v65 = sub_249AEC9B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v64, v61, v65);
    *uint64_t v63 = v62;
    sub_2498D6084((uint64_t)v63, (uint64_t)&v56[*(int *)(v114 + 36)], &qword_2696E2D80);
    *(void *)char v56 = v57;
    *((_DWORD *)v56 + 2) = v99;
    *((void *)v56 + 2) = v60;
    *((void *)v56 + 3) = v59;
    sub_2498D60E8((uint64_t)v63, &qword_2696E2D80);
    uint64_t v66 = (uint64_t *)&v56[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2D00) + 36)];
    uint64_t v67 = v97;
    *uint64_t v66 = v111;
    v66[1] = v67;
    sub_249882788(v53, v55, &qword_2696E2CD0);
    uint64_t v114 = sub_249AECC28();
    uint64_t v113 = (uint64_t *)v68;
    sub_2499E2AF0((uint64_t)&v120);
    long long v69 = v121;
    long long v70 = v122;
    LOBYTE(v56) = v123;
    LOBYTE(v53) = v124;
    long long v112 = v125;
    uint64_t v71 = v126;
    uint64_t v72 = v128;
    uint64_t v73 = v130;
    uint64_t v74 = v131;
    long long v75 = v120;
    char v135 = v127;
    char v133 = v129;
    uint64_t v76 = v105;
    sub_2498D6084(v55, v105, &qword_2696E2CC0);
    uint64_t v77 = v76 + *(int *)(v101 + 36);
    *(_OWORD *)uint64_t v77 = v75;
    *(_OWORD *)(v77 + 16) = v69;
    *(_OWORD *)(v77 + 32) = v70;
    *(unsigned char *)(v77 + 48) = (_BYTE)v56;
    *(unsigned char *)(v77 + 49) = v53;
    *(_DWORD *)(v77 + 50) = v136;
    *(_WORD *)(v77 + 54) = v137;
    *(_OWORD *)(v77 + 56) = v112;
    *(void *)(v77 + 72) = v71;
    *(unsigned char *)(v77 + 80) = v135;
    *(_DWORD *)(v77 + 81) = *(_DWORD *)v134;
    *(_DWORD *)(v77 + 84) = *(_DWORD *)&v134[3];
    *(void *)(v77 + 88) = v72;
    *(unsigned char *)(v77 + 96) = v133;
    *(_DWORD *)(v77 + 100) = *(_DWORD *)&v132[3];
    *(_DWORD *)(v77 + 97) = *(_DWORD *)v132;
    *(void *)(v77 + 104) = v73;
    *(void *)(v77 + 112) = v74;
    uint64_t v78 = (char *)v113;
    *(void *)(v77 + 120) = v114;
    *(void *)(v77 + 128) = v78;
    sub_2498D60E8(v55, &qword_2696E2CC0);
    sub_249AECC28();
    sub_249AEBBE8();
    uint64_t v79 = v104;
    sub_2498D6084(v76, v104, &qword_2696E2CB0);
    uint64_t v80 = (_OWORD *)(v79 + *(int *)(v102 + 36));
    long long v81 = v121;
    *uint64_t v80 = v120;
    v80[1] = v81;
    v80[2] = v122;
    sub_2498D60E8(v76, &qword_2696E2CB0);
    uint64_t v82 = v117;
    uint64_t v83 = v115;
    LOBYTE(v73) = sub_249AEC4E8();
    sub_249AEBAB8();
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    uint64_t v89 = v88;
    uint64_t v91 = v90;
    uint64_t v92 = v107;
    sub_2498D6084(v79, v107, &qword_2696E2CA0);
    uint64_t v93 = v92 + *(int *)(v83 + 36);
    *(unsigned char *)uint64_t v93 = v73;
    *(void *)(v93 + 8) = v85;
    *(void *)(v93 + 16) = v87;
    *(void *)(v93 + 24) = v89;
    *(void *)(v93 + 32) = v91;
    *(unsigned char *)(v93 + 40) = 0;
    sub_2498D60E8(v79, &qword_2696E2CA0);
    uint64_t v46 = &qword_2696E2C90;
    uint64_t v94 = v109;
    sub_249882788(v92, v109, &qword_2696E2C90);
    sub_2498D6084(v94, v82, &qword_2696E2C90);
    swift_storeEnumTagMultiPayload();
    sub_2499E5750(&qword_2696E2C88, &qword_2696E2C90, (void (*)(void))sub_2499E57CC);
    sub_2499E5A00();
    sub_249AEC248();
    uint64_t v48 = v94;
  }
  return sub_2498D60E8(v48, v46);
}

uint64_t sub_2499E2A38()
{
  return sub_249AEBEC8();
}

uint64_t sub_2499E2A5C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2DC8);
  MEMORY[0x270FA5388](v2 - 8);
  sub_2498D6084(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_2696E2DC8);
  return sub_249AEBED8();
}

double sub_2499E2AF0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_249AEC838();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_2499E2D20())
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F1B388], v2);
    MEMORY[0x24C5ADA90](v5, 0.949019608, 0.949019608, 0.968627451, 1.0);
    uint64_t v6 = sub_249AEC8E8();
    swift_release();
  }
  else
  {
    uint64_t v6 = sub_249AEC898();
  }
  sub_249AEBB38();
  uint64_t v7 = v20[1];
  uint64_t v8 = v20[3];
  uint64_t v9 = v20[4];
  uint64_t v10 = v20[5];
  uint64_t v11 = sub_249AECC28();
  uint64_t v13 = v12;
  sub_249AECC28();
  sub_249AEBBE8();
  uint64_t v14 = v20[6];
  char v15 = v21;
  uint64_t v16 = v22;
  char v17 = v23;
  uint64_t v18 = v20[2];
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v18;
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v6;
  *(_WORD *)(a1 + 48) = 256;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v14;
  *(unsigned char *)(a1 + 80) = v15;
  *(void *)(a1 + 88) = v16;
  *(unsigned char *)(a1 + 96) = v17;
  double result = *(double *)&v24;
  *(_OWORD *)(a1 + 104) = v24;
  return result;
}

uint64_t sub_2499E2D20()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IconNotificationButtonContent(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v20 - v6;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - v9;
  char v11 = *(unsigned char *)(v1 + 25);
  sub_2499E7A10(v1, (uint64_t)&v20 - v9, type metadata accessor for IconNotificationButtonContent);
  if (v11)
  {
    sub_2499E7A78((uint64_t)v10, type metadata accessor for IconNotificationButtonContent);
    sub_2499E7A10(v1, (uint64_t)v7, type metadata accessor for IconNotificationButtonContent);
  }
  else
  {
    uint64_t v12 = *(void *)v10;
    char v13 = v10[8];
    sub_2499AAF0C(*(void *)v10, v13);
    char v14 = sub_2499A6208(v12, v13);
    sub_2499AAF18(v12, v13);
    sub_2499E7A78((uint64_t)v10, type metadata accessor for IconNotificationButtonContent);
    sub_2499E7A10(v1, (uint64_t)v7, type metadata accessor for IconNotificationButtonContent);
    if ((v14 & 1) == 0)
    {
      uint64_t v18 = 0;
      goto LABEL_9;
    }
  }
  uint64_t v15 = *((void *)v7 + 2);
  char v16 = v7[24];
  sub_2499AAF0C(v15, v16);
  char v17 = sub_2499A6208(v15, v16);
  sub_2499AAF18(v15, v16);
  sub_2499E79A8((uint64_t)v7, (uint64_t)v4, type metadata accessor for IconNotificationButtonContent);
  if (v17) {
    uint64_t v18 = 1;
  }
  else {
    uint64_t v18 = v4[25];
  }
  uint64_t v7 = v4;
LABEL_9:
  sub_2499E7A78((uint64_t)v7, type metadata accessor for IconNotificationButtonContent);
  return v18;
}

uint64_t sub_2499E2F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C28);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499E1C64(v2, (uint64_t)v7);
  uint64_t v8 = v2 + *(int *)(a1 + 28);
  uint64_t v9 = v8 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 32);
  long long v14 = *(_OWORD *)v9;
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v9 + 24);
  LOBYTE(v8) = sub_249AEC4E8();
  sub_2498D6084((uint64_t)v7, a2, &qword_2696E2C28);
  uint64_t v12 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C30) + 36);
  *(unsigned char *)uint64_t v12 = v8;
  *(_OWORD *)(v12 + 8) = v14;
  *(void *)(v12 + 24) = v10;
  *(void *)(v12 + 32) = v11;
  *(unsigned char *)(v12 + 40) = 0;
  return sub_2498D60E8((uint64_t)v7, &qword_2696E2C28);
}

uint64_t sub_2499E3048@<X0>(uint64_t a1@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2DB0);
  uint64_t v3 = v2 - 8;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IconNotificationButtonConfiguration(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IconNotificationButtonContent(0);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v29 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2DB8);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for IconNotificationButtonStyle(0);
  sub_2499E7A10(v1 + *(int *)(v20 + 28), v8, type metadata accessor for IconNotificationButtonConfiguration);
  *(void *)uint64_t v12 = swift_getKeyPath();
  v12[8] = 0;
  *((void *)v12 + 2) = swift_getKeyPath();
  *((_WORD *)v12 + 12) = 0;
  sub_2499E79A8(v8, (uint64_t)&v12[*(int *)(v10 + 36)], type metadata accessor for IconNotificationButtonConfiguration);
  sub_2499E79A8((uint64_t)v12, (uint64_t)v15, type metadata accessor for IconNotificationButtonContent);
  LOBYTE(v8) = sub_249AEC3C8();
  sub_2499E7A10((uint64_t)v15, (uint64_t)v5, type metadata accessor for IconNotificationButtonContent);
  double v21 = 0.5;
  if (v8)
  {
    double v22 = 0.96;
  }
  else
  {
    double v21 = 1.0;
    double v22 = 1.0;
  }
  *(double *)&v5[*(int *)(v3 + 44)] = v21;
  sub_249AECD18();
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  sub_2498D6084((uint64_t)v5, (uint64_t)v19, &qword_2696E2DB0);
  uint64_t v27 = &v19[*(int *)(v17 + 44)];
  *(double *)uint64_t v27 = v22;
  *((double *)v27 + 1) = v22;
  *((void *)v27 + 2) = v24;
  *((void *)v27 + 3) = v26;
  sub_2498D60E8((uint64_t)v5, &qword_2696E2DB0);
  sub_2499E7A78((uint64_t)v15, type metadata accessor for IconNotificationButtonContent);
  return sub_249882788((uint64_t)v19, v30, &qword_2696E2DB8);
}

uint64_t IconNotificationButtonConfiguration.image.getter()
{
  return swift_retain();
}

double IconNotificationButtonConfiguration.imageSize.getter()
{
  return *(double *)(v0 + 8);
}

uint64_t IconNotificationButtonConfiguration.imageScale.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  uint64_t v4 = sub_249AEC9B8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

__n128 IconNotificationButtonConfiguration.style.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 28);
  char v4 = *(unsigned char *)(v3 + 32);
  __n128 result = *(__n128 *)v3;
  long long v6 = *(_OWORD *)(v3 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v3;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = v4;
  return result;
}

double IconNotificationButtonConfiguration.buttonPadding.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 32));
}

uint64_t IconNotificationButtonConfiguration.verticalAlignment.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 36));
}

__n128 IconNotificationButtonConfiguration.init(image:imageSize:imageScale:style:buttonPadding:verticalAlignment:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __n128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>, double a10@<D4>)
{
  __n128 v27 = *a3;
  unint64_t v18 = a3[1].n128_u64[0];
  unint64_t v19 = a3[1].n128_u64[1];
  unsigned __int8 v20 = a3[2].n128_u8[0];
  *(void *)a5 = a1;
  double v21 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v22 = a5 + v21[6];
  uint64_t v23 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a2, v23);
  *(double *)(a5 + 8) = a6;
  uint64_t v24 = (__n128 *)(a5 + v21[7]);
  __n128 result = v27;
  *uint64_t v24 = v27;
  v24[1].n128_u64[0] = v18;
  v24[1].n128_u64[1] = v19;
  v24[2].n128_u8[0] = v20;
  uint64_t v26 = (double *)(a5 + v21[8]);
  *uint64_t v26 = a7;
  v26[1] = a8;
  v26[2] = a9;
  void v26[3] = a10;
  *(void *)(a5 + v21[9]) = a4;
  return result;
}

double sub_2499E3568(uint64_t a1)
{
  return sub_2499E3610(a1, qword_2696E2BD0);
}

uint64_t type metadata accessor for IconNotificationButtonConfiguration(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E2C58);
}

uint64_t type metadata accessor for IconNotificationButton(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E2C38);
}

uint64_t type metadata accessor for IconNotificationButtonStyle(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E2D90);
}

double sub_2499E35E4(uint64_t a1)
{
  return sub_2499E3610(a1, qword_2696E2BE8);
}

double sub_2499E3610(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_249AEC9B8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  long long v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  __swift_allocate_value_buffer((uint64_t)v7, a2);
  uint64_t v8 = (char *)__swift_project_value_buffer((uint64_t)v7, (uint64_t)a2);
  uint64_t v9 = sub_249AEC988();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F1B540], v3);
  uint64_t v10 = sub_249AEC018();
  *(void *)uint64_t v8 = v9;
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(&v8[v7[6]], v6, v3);
  *((void *)v8 + 1) = 0x4036000000000000;
  uint64_t v11 = &v8[v7[7]];
  __asm { FMOV            V1.2D, #4.0 }
  *(int64x2_t *)uint64_t v11 = vdupq_n_s64(0x4046000000000000uLL);
  *((_OWORD *)v11 + 1) = _Q1;
  v11[32] = 0;
  uint64_t v17 = &v8[v7[8]];
  double result = 20.0;
  *(_OWORD *)uint64_t v17 = xmmword_249B02FE0;
  *((_OWORD *)v17 + 1) = xmmword_249B02FF0;
  *(void *)&v8[v7[9]] = v10;
  return result;
}

uint64_t static IconNotificationButtonConfiguration.chevron.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2499E37C0(&qword_2696DD740, (uint64_t)qword_2696E2BE8, a1);
}

uint64_t sub_2499E37C0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  return sub_2499E7A10(v6, a3, type metadata accessor for IconNotificationButtonConfiguration);
}

uint64_t sub_2499E3828()
{
  return sub_249AEBFF8();
}

uint64_t sub_2499E3868()
{
  return sub_249AEBFF8();
}

uint64_t sub_2499E38A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserInteractiveConfiguration(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_2499E7A10(a1, (uint64_t)&v9 - v6, type metadata accessor for UserInteractiveConfiguration);
  sub_2499E7A10((uint64_t)v7, (uint64_t)v4, type metadata accessor for UserInteractiveConfiguration);
  sub_2499E7C8C();
  sub_249AEC008();
  return sub_2499E7A78((uint64_t)v7, type metadata accessor for UserInteractiveConfiguration);
}

uint64_t sub_2499E39B4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249AEBFA8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2499E39E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249AEBFA8();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2499E3A14()
{
  return sub_249AEBE68();
}

uint64_t sub_2499E3A38()
{
  return sub_249AEBE68();
}

uint64_t sub_2499E3A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499E7B54(a1, a2, a3, a4, MEMORY[0x263F18520], MEMORY[0x263F19230]);
}

uint64_t sub_2499E3A88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499E7B54(a1, a2, a3, a4, MEMORY[0x263F18520], MEMORY[0x263F19230]);
}

uint64_t sub_2499E3AC8@<X0>(unsigned char *a1@<X8>)
{
  sub_2499896B8();
  uint64_t result = sub_249AEBFF8();
  *a1 = v3;
  return result;
}

uint64_t sub_2499E3B18()
{
  return sub_249AEC008();
}

uint64_t type metadata accessor for IconNotificationButtonContent(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E2C48);
}

uint64_t sub_2499E3B84()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499E3BA0()
{
  return swift_getOpaqueTypeConformance2();
}

void *initializeBufferWithCopyOfBuffer for IconNotificationButton(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v7);
    uint64_t v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *uint64_t v8 = v11;
    v8[1] = v10;
    uint64_t v12 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v13 = v12[6];
    uint64_t v26 = (char *)v8 + v13;
    uint64_t v14 = &v9[v13];
    uint64_t v15 = sub_249AEC9B8();
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    swift_retain();
    swift_retain();
    v16(v26, v14, v15);
    uint64_t v17 = v12[7];
    unint64_t v18 = (char *)v8 + v17;
    uint64_t v19 = &v9[v17];
    long long v20 = *((_OWORD *)v19 + 1);
    *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
    *((_OWORD *)v18 + 1) = v20;
    v18[32] = v19[32];
    uint64_t v21 = v12[8];
    uint64_t v22 = (_OWORD *)((char *)v8 + v21);
    uint64_t v23 = &v9[v21];
    long long v24 = *((_OWORD *)v23 + 1);
    *uint64_t v22 = *(_OWORD *)v23;
    v22[1] = v24;
    *(void *)((char *)v8 + v12[9]) = *(void *)&v9[v12[9]];
  }
  return a1;
}

uint64_t destroy for IconNotificationButton(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_release();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  uint64_t v6 = sub_249AEC9B8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

void *initializeWithCopy for IconNotificationButton(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (void *)((char *)a1 + v5);
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v9 = *(void *)((char *)a2 + v5);
  uint64_t v8 = *(void *)((char *)a2 + v5 + 8);
  *uint64_t v6 = v9;
  v6[1] = v8;
  uint64_t v10 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v11 = v10[6];
  long long v24 = (char *)v6 + v11;
  uint64_t v12 = &v7[v11];
  uint64_t v13 = sub_249AEC9B8();
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
  swift_retain();
  swift_retain();
  v14(v24, v12, v13);
  uint64_t v15 = v10[7];
  uint64_t v16 = (char *)v6 + v15;
  uint64_t v17 = &v7[v15];
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  v16[32] = v17[32];
  uint64_t v19 = v10[8];
  long long v20 = (_OWORD *)((char *)v6 + v19);
  uint64_t v21 = &v7[v19];
  long long v22 = *((_OWORD *)v21 + 1);
  *long long v20 = *(_OWORD *)v21;
  v20[1] = v22;
  *(void *)((char *)v6 + v10[9]) = *(void *)&v7[v10[9]];
  return a1;
}

void *assignWithCopy for IconNotificationButton(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  swift_retain();
  swift_release();
  *((void *)v8 + 1) = *((void *)v9 + 1);
  uint64_t v10 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v11 = v10[6];
  uint64_t v12 = &v8[v11];
  uint64_t v13 = &v9[v11];
  uint64_t v14 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = v10[7];
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  char v18 = v17[32];
  long long v19 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v19;
  v16[32] = v18;
  uint64_t v20 = v10[8];
  uint64_t v21 = &v8[v20];
  long long v22 = &v9[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  *((void *)v21 + 2) = *((void *)v22 + 2);
  *((void *)v21 + 3) = *((void *)v22 + 3);
  *(void *)&v8[v10[9]] = *(void *)&v9[v10[9]];
  return a1;
}

_OWORD *initializeWithTake for IconNotificationButton(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  *(_OWORD *)((char *)a1 + v4) = *(_OWORD *)((char *)a2 + v4);
  uint64_t v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = &v5[v8];
  uint64_t v10 = &v6[v8];
  uint64_t v11 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[7];
  uint64_t v13 = &v5[v12];
  uint64_t v14 = &v6[v12];
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  v13[32] = v14[32];
  uint64_t v16 = v7[8];
  uint64_t v17 = &v5[v16];
  char v18 = &v6[v16];
  long long v19 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v19;
  *(void *)&v5[v7[9]] = *(void *)&v6[v7[9]];
  return a1;
}

_OWORD *assignWithTake for IconNotificationButton(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  *(void *)((char *)a1 + v6) = *(void *)((char *)a2 + v6);
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  uint64_t v9 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = &v7[v10];
  uint64_t v12 = &v8[v10];
  uint64_t v13 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = v9[7];
  long long v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)long long v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  v15[32] = v16[32];
  uint64_t v18 = v9[8];
  long long v19 = &v7[v18];
  uint64_t v20 = &v8[v18];
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)long long v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *(void *)&v7[v9[9]] = *(void *)&v8[v9[9]];
  return a1;
}

uint64_t getEnumTagSinglePayload for IconNotificationButton(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499E41D8);
}

uint64_t sub_2499E41D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for IconNotificationButton(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499E429C);
}

void *sub_2499E429C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2499E4344()
{
  uint64_t result = type metadata accessor for IconNotificationButtonConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t initializeBufferWithCopyOfBuffer for IconNotificationButtonContent(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v30 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_2499AAF0C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_2499AAF0C(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
    uint64_t v11 = *(int *)(a3 + 28);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = a2 + v11;
    uint64_t v15 = *(void *)(a2 + v11);
    uint64_t v14 = *(void *)(v13 + 8);
    *uint64_t v12 = v15;
    v12[1] = v14;
    uint64_t v16 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v17 = v16[6];
    uint64_t v18 = (char *)v12 + v17;
    uint64_t v19 = v13 + v17;
    uint64_t v20 = sub_249AEC9B8();
    long long v21 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_retain();
    v21(v18, v19, v20);
    uint64_t v22 = v16[7];
    uint64_t v23 = (char *)v12 + v22;
    uint64_t v24 = v13 + v22;
    long long v25 = *(_OWORD *)(v24 + 16);
    *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
    *((_OWORD *)v23 + 1) = v25;
    v23[32] = *(unsigned char *)(v24 + 32);
    uint64_t v26 = v16[8];
    __n128 v27 = (_OWORD *)((char *)v12 + v26);
    uint64_t v28 = (_OWORD *)(v13 + v26);
    long long v29 = v28[1];
    *__n128 v27 = *v28;
    v27[1] = v29;
    *(void *)((char *)v12 + v16[9]) = *(void *)(v13 + v16[9]);
  }
  return a1;
}

uint64_t destroy for IconNotificationButtonContent(uint64_t a1, uint64_t a2)
{
  sub_2499AAF18(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_2499AAF18(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  swift_release();
  uint64_t v5 = v4 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  uint64_t v6 = sub_249AEC9B8();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t initializeWithCopy for IconNotificationButtonContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_2499AAF0C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_2499AAF0C(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = a2 + v10;
  uint64_t v14 = *(void *)(a2 + v10);
  uint64_t v13 = *(void *)(a2 + v10 + 8);
  *uint64_t v11 = v14;
  v11[1] = v13;
  uint64_t v15 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v16 = v15[6];
  uint64_t v17 = (char *)v11 + v16;
  uint64_t v18 = v12 + v16;
  uint64_t v19 = sub_249AEC9B8();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_retain();
  v20(v17, v18, v19);
  uint64_t v21 = v15[7];
  uint64_t v22 = (char *)v11 + v21;
  uint64_t v23 = v12 + v21;
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  v22[32] = *(unsigned char *)(v23 + 32);
  uint64_t v25 = v15[8];
  uint64_t v26 = (_OWORD *)((char *)v11 + v25);
  __n128 v27 = (_OWORD *)(v12 + v25);
  long long v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  *(void *)((char *)v11 + v15[9]) = *(void *)(v12 + v15[9]);
  return a1;
}

uint64_t assignWithCopy for IconNotificationButtonContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_2499AAF0C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_2499AAF18(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_2499AAF0C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_2499AAF18(v12, v13);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  swift_retain();
  swift_release();
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  uint64_t v17 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v18 = v17[6];
  uint64_t v19 = v15 + v18;
  uint64_t v20 = v16 + v18;
  uint64_t v21 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = v17[7];
  uint64_t v23 = v15 + v22;
  long long v24 = (long long *)(v16 + v22);
  long long v25 = *v24;
  long long v26 = v24[1];
  *(unsigned char *)(v23 + 32) = *((unsigned char *)v24 + 32);
  *(_OWORD *)uint64_t v23 = v25;
  *(_OWORD *)(v23 + 16) = v26;
  uint64_t v27 = v17[8];
  long long v28 = (void *)(v15 + v27);
  long long v29 = (void *)(v16 + v27);
  *long long v28 = *v29;
  v28[1] = v29[1];
  void v28[2] = v29[2];
  v28[3] = v29[3];
  *(void *)(v15 + v17[9]) = *(void *)(v16 + v17[9]);
  return a1;
}

uint64_t initializeWithTake for IconNotificationButtonContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  *(_OWORD *)(a1 + v4) = *(_OWORD *)(a2 + v4);
  char v7 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = v5 + v8;
  uint64_t v10 = v6 + v8;
  uint64_t v11 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = v7[7];
  uint64_t v13 = v5 + v12;
  uint64_t v14 = v6 + v12;
  long long v15 = *(_OWORD *)(v14 + 16);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *(_OWORD *)(v13 + 16) = v15;
  *(unsigned char *)(v13 + 32) = *(unsigned char *)(v14 + 32);
  uint64_t v16 = v7[8];
  uint64_t v17 = (_OWORD *)(v5 + v16);
  uint64_t v18 = (_OWORD *)(v6 + v16);
  long long v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(void *)(v5 + v7[9]) = *(void *)(v6 + v7[9]);
  return a1;
}

uint64_t assignWithTake for IconNotificationButtonContent(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_2499AAF18(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_2499AAF18(v11, v12);
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  *(void *)(a1 + v13) = *(uint64_t *)((char *)a2 + v13);
  swift_release();
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  uint64_t v16 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v17 = v16[6];
  uint64_t v18 = v14 + v17;
  uint64_t v19 = v15 + v17;
  uint64_t v20 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = v16[7];
  uint64_t v22 = v14 + v21;
  uint64_t v23 = v15 + v21;
  long long v24 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v24;
  *(unsigned char *)(v22 + 32) = *(unsigned char *)(v23 + 32);
  uint64_t v25 = v16[8];
  long long v26 = (_OWORD *)(v14 + v25);
  uint64_t v27 = (_OWORD *)(v15 + v25);
  long long v28 = v27[1];
  *long long v26 = *v27;
  v26[1] = v28;
  *(void *)(v14 + v16[9]) = *(void *)(v15 + v16[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconNotificationButtonContent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499E4AEC);
}

uint64_t sub_2499E4AEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for IconNotificationButtonConfiguration(0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for IconNotificationButtonContent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499E4BA8);
}

uint64_t sub_2499E4BA8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2499E4C4C()
{
  uint64_t result = type metadata accessor for IconNotificationButtonConfiguration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for IconNotificationButtonConfiguration(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_249AEC9B8();
    char v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (char *)v7 + v13;
    uint64_t v16 = (char *)a2 + v13;
    long long v17 = *(_OWORD *)v16;
    long long v18 = *((_OWORD *)v16 + 1);
    v15[32] = v16[32];
    *(_OWORD *)uint64_t v15 = v17;
    *((_OWORD *)v15 + 1) = v18;
    uint64_t v19 = (_OWORD *)((char *)v7 + v14);
    uint64_t v20 = (_OWORD *)((char *)a2 + v14);
    long long v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    *(uint64_t *)((char *)v7 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  }
  return v7;
}

uint64_t destroy for IconNotificationButtonConfiguration(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_249AEC9B8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for IconNotificationButtonConfiguration(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_249AEC9B8();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_retain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v12;
  uint64_t v15 = (char *)a2 + v12;
  long long v16 = *(_OWORD *)v15;
  long long v17 = *((_OWORD *)v15 + 1);
  v14[32] = v15[32];
  *(_OWORD *)uint64_t v14 = v16;
  *((_OWORD *)v14 + 1) = v17;
  long long v18 = (_OWORD *)((char *)a1 + v13);
  uint64_t v19 = (_OWORD *)((char *)a2 + v13);
  long long v20 = v19[1];
  *long long v18 = *v19;
  v18[1] = v20;
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

void *assignWithCopy for IconNotificationButtonConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[32];
  long long v14 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v14;
  v11[32] = v13;
  uint64_t v15 = a3[8];
  long long v16 = (void *)((char *)a1 + v15);
  long long v17 = (void *)((char *)a2 + v15);
  *long long v16 = *v17;
  v16[1] = v17[1];
  void v16[2] = v17[2];
  void v16[3] = v17[3];
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

_OWORD *initializeWithTake for IconNotificationButtonConfiguration(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v10;
  char v13 = (char *)a2 + v10;
  long long v14 = *(_OWORD *)v13;
  long long v15 = *((_OWORD *)v13 + 1);
  v12[32] = v13[32];
  *(_OWORD *)uint64_t v12 = v14;
  *((_OWORD *)v12 + 1) = v15;
  long long v16 = (_OWORD *)((char *)a1 + v11);
  long long v17 = (_OWORD *)((char *)a2 + v11);
  long long v18 = v17[1];
  *long long v16 = *v17;
  v16[1] = v18;
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

void *assignWithTake for IconNotificationButtonConfiguration(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v10;
  char v13 = (char *)a2 + v10;
  long long v14 = *(_OWORD *)v13;
  long long v15 = *((_OWORD *)v13 + 1);
  v12[32] = v13[32];
  *(_OWORD *)uint64_t v12 = v14;
  *((_OWORD *)v12 + 1) = v15;
  long long v16 = (_OWORD *)((char *)a1 + v11);
  long long v17 = (_OWORD *)((char *)a2 + v11);
  long long v18 = v17[1];
  *long long v16 = *v17;
  v16[1] = v18;
  *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t getEnumTagSinglePayload for IconNotificationButtonConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499E5220);
}

uint64_t sub_2499E5220(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_249AEC9B8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for IconNotificationButtonConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499E52E4);
}

void *sub_2499E52E4(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_249AEC9B8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2499E538C()
{
  uint64_t result = sub_249AEC9B8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IconNotificationButtonConfiguration.Style(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for IconNotificationButtonConfiguration.Style(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

uint64_t sub_2499E549C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_2499E54B8(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 32) = 1;
  }
  else
  {
    *(unsigned char *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for IconNotificationButtonConfiguration.Style()
{
  return &type metadata for IconNotificationButtonConfiguration.Style;
}

uint64_t sub_2499E54EC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499E55F0()
{
  return sub_2499E5750(&qword_2696E2C68, &qword_2696E2C30, (void (*)(void))sub_2499E5634);
}

unint64_t sub_2499E5634()
{
  unint64_t result = qword_2696E2C70;
  if (!qword_2696E2C70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2C28);
    sub_2499E56A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2C70);
  }
  return result;
}

unint64_t sub_2499E56A8()
{
  unint64_t result = qword_2696E2C78;
  if (!qword_2696E2C78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2C80);
    sub_2499E5750(&qword_2696E2C88, &qword_2696E2C90, (void (*)(void))sub_2499E57CC);
    sub_2499E5A00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2C78);
  }
  return result;
}

uint64_t sub_2499E5750(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2499E57CC()
{
  return sub_2499E5750(&qword_2696E2C98, &qword_2696E2CA0, (void (*)(void))sub_2499E57FC);
}

unint64_t sub_2499E57FC()
{
  unint64_t result = qword_2696E2CA8;
  if (!qword_2696E2CA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2CB0);
    sub_2499E589C();
    sub_2498D0A3C(&qword_2696E2D08, &qword_2696E2D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2CA8);
  }
  return result;
}

unint64_t sub_2499E589C()
{
  unint64_t result = qword_2696E2CB8;
  if (!qword_2696E2CB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2CC0);
    sub_2499E593C();
    sub_2498D0A3C(&qword_2696E2CF8, &qword_2696E2D00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2CB8);
  }
  return result;
}

unint64_t sub_2499E593C()
{
  unint64_t result = qword_2696E2CC8;
  if (!qword_2696E2CC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2CD0);
    sub_2498D0A3C(&qword_2696E2CD8, &qword_2696E2CE0);
    sub_2498D0A3C(&qword_2696E2CE8, &qword_2696E2CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2CC8);
  }
  return result;
}

unint64_t sub_2499E5A00()
{
  unint64_t result = qword_2696E2D18;
  if (!qword_2696E2D18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2D20);
    sub_2499E5AA0();
    sub_2498D0A3C(&qword_2696E2CE8, &qword_2696E2CF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2D18);
  }
  return result;
}

unint64_t sub_2499E5AA0()
{
  unint64_t result = qword_2696E2D28;
  if (!qword_2696E2D28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2D30);
    sub_2499E5B40();
    sub_2498D0A3C(&qword_2696E2D78, &qword_2696E2D80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2D28);
  }
  return result;
}

unint64_t sub_2499E5B40()
{
  unint64_t result = qword_2696E2D38;
  if (!qword_2696E2D38)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2D40);
    sub_2499E5BE0();
    sub_2498D0A3C(&qword_2696E2D68, &qword_2696E2D70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2D38);
  }
  return result;
}

unint64_t sub_2499E5BE0()
{
  unint64_t result = qword_2696E2D48;
  if (!qword_2696E2D48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2D50);
    sub_2498D0A3C(&qword_2696E2D58, &qword_2696E2D60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2D48);
  }
  return result;
}

uint64_t sub_2499E5C80(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *a2;
    *(void *)a1 = *a2;
    a1 = v44 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      uint64_t v76 = a2[5];
      *(void *)(a1 + 32) = a2[4];
      *(void *)(a1 + 40) = v76;
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
      *(void *)(a1 + 72) = a2[9];
      uint64_t v8 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      uint64_t v9 = v8[7];
      uint64_t v10 = a1 + v9;
      uint64_t v11 = (uint64_t)a2 + v9;
      *(void *)uint64_t v10 = *(uint64_t *)((char *)a2 + v9);
      *(unsigned char *)(v10 + 24) = *((unsigned char *)a2 + v9 + 24);
      *(_OWORD *)(v10 + 8) = *(_OWORD *)((char *)a2 + v9 + 8);
      uint64_t v12 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v74 = v11 + v13;
      uint64_t v75 = v10 + v13;
      uint64_t v14 = sub_249AEC9B8();
      uint64_t v78 = v6;
      long long v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v15(v75, v74, v14);
      uint64_t v16 = *(int *)(v12 + 28);
      long long v17 = (_OWORD *)(v10 + v16);
      long long v18 = (_OWORD *)(v11 + v16);
      long long v19 = v18[1];
      *long long v17 = *v18;
      v17[1] = v19;
      uint64_t v20 = v8[8];
      uint64_t v21 = a1 + v20;
      uint64_t v22 = (uint64_t)a2 + v20;
      uint64_t v23 = *(uint64_t *)((char *)a2 + v20 + 8);
      *(void *)uint64_t v21 = *(uint64_t *)((char *)a2 + v20);
      *(void *)(v21 + 8) = v23;
      uint64_t v77 = a1 + v20 + 16;
      uint64_t v24 = (uint64_t)a2 + v20 + 16;
      long long v25 = *(_OWORD *)((char *)a2 + v20 + 40);
      *(_OWORD *)(v21 + 40) = v25;
      uint64_t v26 = v25;
      uint64_t v27 = **(void (***)(uint64_t, uint64_t, uint64_t))(v25 - 8);
      swift_retain();
      swift_retain();
      uint64_t v28 = v24;
      uint64_t v6 = v78;
      v27(v77, v28, v26);
      long long v29 = *(_OWORD *)(v22 + 80);
      *(_OWORD *)(v21 + 80) = v29;
      (**(void (***)(uint64_t, uint64_t))(v29 - 8))(v21 + 56, v22 + 56);
      long long v30 = *(_OWORD *)(v22 + 112);
      *(_OWORD *)(v21 + 96) = *(_OWORD *)(v22 + 96);
      *(_OWORD *)(v21 + 112) = v30;
      *(unsigned char *)(v21 + 128) = *(unsigned char *)(v22 + 128);
      *(void *)(v21 + 136) = *(void *)(v22 + 136);
      uint64_t v31 = v8[9];
      uint64_t v32 = a1 + v31;
      uint64_t v33 = (uint64_t)a2 + v31;
      *(unsigned char *)(v32 + 16) = *(unsigned char *)(v33 + 16);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      uint64_t v34 = v8[10];
      uint64_t v35 = a1 + v34;
      uint64_t v36 = (uint64_t)a2 + v34;
      *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
      *(unsigned char *)(v35 + 16) = *(unsigned char *)(v36 + 16);
      *(unsigned char *)(a1 + v8[11]) = *((unsigned char *)a2 + v8[11]);
      uint64_t v37 = v8[12];
      uint64_t v38 = a1 + v37;
      uint64_t v39 = (uint64_t)a2 + v37;
      uint64_t v40 = sub_249AECBE8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      uint64_t v41 = v8[13];
      uint64_t v42 = a1 + v41;
      uint64_t v43 = (uint64_t)a2 + v41;
      *(void *)uint64_t v42 = *(void *)v43;
      *(_OWORD *)(v42 + 8) = *(_OWORD *)(v43 + 8);
    }
    else
    {
      *(void *)a1 = *a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = v6[5];
    uint64_t v46 = a1 + v45;
    uint64_t v47 = (uint64_t)a2 + v45;
    uint64_t v48 = *(void *)v47;
    char v49 = *(unsigned char *)(v47 + 8);
    sub_2499AAF0C(*(void *)v47, v49);
    *(void *)uint64_t v46 = v48;
    *(unsigned char *)(v46 + 8) = v49;
    uint64_t v50 = v6[6];
    uint64_t v51 = (void *)(a1 + v50);
    uint64_t v52 = (uint64_t *)((char *)a2 + v50);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v53 = sub_249AEBAF8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
    }
    else
    {
      *uint64_t v51 = *v52;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = v6[7];
    uint64_t v55 = (void *)(a1 + v54);
    uint64_t v56 = (uint64_t)a2 + v54;
    uint64_t v58 = *(uint64_t *)((char *)a2 + v54);
    uint64_t v57 = *(void *)(v56 + 8);
    *uint64_t v55 = v58;
    v55[1] = v57;
    uint64_t v59 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
    uint64_t v60 = v59[6];
    uint64_t v61 = (char *)v55 + v60;
    uint64_t v62 = v56 + v60;
    uint64_t v63 = sub_249AEC9B8();
    uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 16);
    swift_retain();
    v64(v61, v62, v63);
    uint64_t v65 = v59[7];
    uint64_t v66 = (char *)v55 + v65;
    uint64_t v67 = v56 + v65;
    long long v68 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    *((_OWORD *)v66 + 1) = v68;
    v66[32] = *(unsigned char *)(v67 + 32);
    uint64_t v69 = v59[8];
    long long v70 = (_OWORD *)((char *)v55 + v69);
    uint64_t v71 = (_OWORD *)(v56 + v69);
    long long v72 = v71[1];
    _OWORD *v70 = *v71;
    v70[1] = v72;
    *(void *)((char *)v55 + v59[9]) = *(void *)(v56 + v59[9]);
  }
  return a1;
}

uint64_t sub_2499E615C(uint64_t a1, int *a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    swift_release();
    uint64_t v4 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v5 = a1 + v4[7];
    swift_release();
    uint64_t v6 = v5 + *(int *)(type metadata accessor for NotificationSymbolConfiguration(0) + 24);
    uint64_t v7 = sub_249AEC9B8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = a1 + v4[8];
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 16);
    __swift_destroy_boxed_opaque_existential_2Tm(v8 + 56);
    uint64_t v9 = a1 + v4[12];
    uint64_t v10 = sub_249AECBE8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  swift_release();
  sub_2499AAF18(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  uint64_t v11 = a1 + a2[6];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = sub_249AEBAF8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  else
  {
    swift_release();
  }
  uint64_t v13 = a1 + a2[7];
  swift_release();
  uint64_t v14 = v13 + *(int *)(type metadata accessor for IconNotificationButtonConfiguration(0) + 24);
  uint64_t v15 = sub_249AEC9B8();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);

  return v16(v14, v15);
}

uint64_t sub_2499E637C(uint64_t a1, uint64_t a2, int *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    uint64_t v74 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v74;
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    uint64_t v7 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v8 = v7[7];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    *(void *)uint64_t v9 = *(void *)(a2 + v8);
    *(unsigned char *)(v9 + 24) = *(unsigned char *)(a2 + v8 + 24);
    *(_OWORD *)(v9 + 8) = *(_OWORD *)(a2 + v8 + 8);
    uint64_t v11 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v12 = *(int *)(v11 + 24);
    uint64_t v72 = v10 + v12;
    uint64_t v73 = v9 + v12;
    uint64_t v13 = sub_249AEC9B8();
    uint64_t v76 = a3;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    v14(v73, v72, v13);
    uint64_t v15 = *(int *)(v11 + 28);
    uint64_t v16 = (_OWORD *)(v9 + v15);
    long long v17 = (_OWORD *)(v10 + v15);
    long long v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v7[8];
    uint64_t v20 = a1 + v19;
    uint64_t v21 = a2 + v19;
    uint64_t v22 = *(void *)(a2 + v19 + 8);
    *(void *)uint64_t v20 = *(void *)(a2 + v19);
    *(void *)(v20 + 8) = v22;
    uint64_t v75 = a1 + v19 + 16;
    uint64_t v23 = a2 + v19 + 16;
    long long v24 = *(_OWORD *)(a2 + v19 + 40);
    *(_OWORD *)(v20 + 40) = v24;
    uint64_t v25 = v24;
    uint64_t v26 = **(void (***)(uint64_t, uint64_t, uint64_t))(v24 - 8);
    swift_retain();
    swift_retain();
    uint64_t v27 = v25;
    a3 = v76;
    v26(v75, v23, v27);
    long long v28 = *(_OWORD *)(v21 + 80);
    *(_OWORD *)(v20 + 80) = v28;
    (**(void (***)(uint64_t, uint64_t))(v28 - 8))(v20 + 56, v21 + 56);
    long long v29 = *(_OWORD *)(v21 + 112);
    *(_OWORD *)(v20 + 96) = *(_OWORD *)(v21 + 96);
    *(_OWORD *)(v20 + 112) = v29;
    *(unsigned char *)(v20 + 128) = *(unsigned char *)(v21 + 128);
    *(void *)(v20 + 136) = *(void *)(v21 + 136);
    uint64_t v30 = v7[9];
    uint64_t v31 = a1 + v30;
    uint64_t v32 = a2 + v30;
    *(unsigned char *)(v31 + 16) = *(unsigned char *)(v32 + 16);
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    uint64_t v33 = v7[10];
    uint64_t v34 = a1 + v33;
    uint64_t v35 = a2 + v33;
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    *(unsigned char *)(v34 + 16) = *(unsigned char *)(v35 + 16);
    *(unsigned char *)(a1 + v7[11]) = *(unsigned char *)(a2 + v7[11]);
    uint64_t v36 = v7[12];
    uint64_t v37 = a1 + v36;
    uint64_t v38 = a2 + v36;
    uint64_t v39 = sub_249AECBE8();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = v7[13];
    uint64_t v41 = a1 + v40;
    uint64_t v42 = a2 + v40;
    *(void *)uint64_t v41 = *(void *)v42;
    *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  uint64_t v43 = a3[5];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = *(void *)v45;
  char v47 = *(unsigned char *)(v45 + 8);
  sub_2499AAF0C(*(void *)v45, v47);
  *(void *)uint64_t v44 = v46;
  *(unsigned char *)(v44 + 8) = v47;
  uint64_t v48 = a3[6];
  char v49 = (void *)(a1 + v48);
  uint64_t v50 = (void *)(a2 + v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v51 = sub_249AEBAF8();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  else
  {
    *char v49 = *v50;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v52 = a3[7];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = a2 + v52;
  uint64_t v56 = *(void *)(a2 + v52);
  uint64_t v55 = *(void *)(v54 + 8);
  *uint64_t v53 = v56;
  v53[1] = v55;
  uint64_t v57 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v58 = v57[6];
  uint64_t v59 = (char *)v53 + v58;
  uint64_t v60 = v54 + v58;
  uint64_t v61 = sub_249AEC9B8();
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 16);
  swift_retain();
  v62(v59, v60, v61);
  uint64_t v63 = v57[7];
  uint64_t v64 = (char *)v53 + v63;
  uint64_t v65 = v54 + v63;
  long long v66 = *(_OWORD *)(v65 + 16);
  *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
  *((_OWORD *)v64 + 1) = v66;
  v64[32] = *(unsigned char *)(v65 + 32);
  uint64_t v67 = v57[8];
  long long v68 = (_OWORD *)((char *)v53 + v67);
  uint64_t v69 = (_OWORD *)(v54 + v67);
  long long v70 = v69[1];
  *long long v68 = *v69;
  v68[1] = v70;
  *(void *)((char *)v53 + v57[9]) = *(void *)(v54 + v57[9]);
  return a1;
}

uint64_t sub_2499E6808(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_2498D60E8(a1, &qword_2696E1CF0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      long long v6 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      uint64_t v7 = v6[7];
      uint64_t v8 = a1 + v7;
      uint64_t v9 = a2 + v7;
      *(void *)uint64_t v8 = *(void *)(a2 + v7);
      long long v10 = *(_OWORD *)(a2 + v7 + 8);
      *(unsigned char *)(v8 + 24) = *(unsigned char *)(a2 + v7 + 24);
      *(_OWORD *)(v8 + 8) = v10;
      uint64_t v11 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v70 = v9 + v12;
      uint64_t v71 = v8 + v12;
      uint64_t v73 = a3;
      uint64_t v13 = sub_249AEC9B8();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      v14(v71, v70, v13);
      uint64_t v15 = *(int *)(v11 + 28);
      uint64_t v16 = (_OWORD *)(v8 + v15);
      long long v17 = (_OWORD *)(v9 + v15);
      long long v18 = v17[1];
      *uint64_t v16 = *v17;
      v16[1] = v18;
      uint64_t v19 = v6[8];
      uint64_t v20 = a1 + v19;
      uint64_t v21 = a2 + v19;
      *(void *)uint64_t v20 = *(void *)(a2 + v19);
      *(void *)(v20 + 8) = *(void *)(a2 + v19 + 8);
      uint64_t v72 = a1 + v19 + 16;
      uint64_t v22 = a2 + v19 + 16;
      uint64_t v23 = *(void *)(a2 + v19 + 40);
      *(void *)(v20 + 40) = v23;
      *(void *)(v20 + 48) = *(void *)(a2 + v19 + 48);
      long long v24 = **(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8);
      swift_retain();
      swift_retain();
      uint64_t v25 = v23;
      a3 = v73;
      v24(v72, v22, v25);
      uint64_t v26 = *(void *)(v21 + 80);
      *(void *)(v20 + 80) = v26;
      *(void *)(v20 + 88) = *(void *)(v21 + 88);
      (**(void (***)(uint64_t, uint64_t))(v26 - 8))(v20 + 56, v21 + 56);
      *(void *)(v20 + 96) = *(void *)(v21 + 96);
      *(void *)(v20 + 104) = *(void *)(v21 + 104);
      *(void *)(v20 + 112) = *(void *)(v21 + 112);
      *(void *)(v20 + 120) = *(void *)(v21 + 120);
      *(unsigned char *)(v20 + 128) = *(unsigned char *)(v21 + 128);
      *(void *)(v20 + 136) = *(void *)(v21 + 136);
      uint64_t v27 = v6[9];
      uint64_t v28 = a1 + v27;
      uint64_t v29 = a2 + v27;
      char v30 = *(unsigned char *)(v29 + 16);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *(unsigned char *)(v28 + 16) = v30;
      uint64_t v31 = v6[10];
      uint64_t v32 = a1 + v31;
      uint64_t v33 = a2 + v31;
      char v34 = *(unsigned char *)(v33 + 16);
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *(unsigned char *)(v32 + 16) = v34;
      *(unsigned char *)(a1 + v6[11]) = *(unsigned char *)(a2 + v6[11]);
      uint64_t v35 = v6[12];
      uint64_t v36 = a1 + v35;
      uint64_t v37 = a2 + v35;
      uint64_t v38 = sub_249AECBE8();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = v6[13];
      uint64_t v40 = (void *)(a1 + v39);
      uint64_t v41 = (void *)(a2 + v39);
      *uint64_t v40 = *v41;
      v40[1] = v41[1];
      v40[2] = v41[2];
    }
    else
    {
      *(void *)a1 = *(void *)a2;
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v42 = a3[5];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = *(void *)v44;
  char v46 = *(unsigned char *)(v44 + 8);
  sub_2499AAF0C(*(void *)v44, v46);
  uint64_t v47 = *(void *)v43;
  char v48 = *(unsigned char *)(v43 + 8);
  *(void *)uint64_t v43 = v45;
  *(unsigned char *)(v43 + 8) = v46;
  sub_2499AAF18(v47, v48);
  if (a1 != a2)
  {
    uint64_t v49 = a3[6];
    uint64_t v50 = (void *)(a1 + v49);
    uint64_t v51 = (void *)(a2 + v49);
    sub_2498D60E8(a1 + v49, &qword_2696E1D20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v52 = sub_249AEBAF8();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
    }
    else
    {
      *uint64_t v50 = *v51;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v53 = a3[7];
  uint64_t v54 = a1 + v53;
  uint64_t v55 = a2 + v53;
  *(void *)(a1 + v53) = *(void *)(a2 + v53);
  swift_retain();
  swift_release();
  *(void *)(v54 + 8) = *(void *)(v55 + 8);
  uint64_t v56 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v57 = v56[6];
  uint64_t v58 = v54 + v57;
  uint64_t v59 = v55 + v57;
  uint64_t v60 = sub_249AEC9B8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 24))(v58, v59, v60);
  uint64_t v61 = v56[7];
  uint64_t v62 = v54 + v61;
  uint64_t v63 = v55 + v61;
  char v64 = *(unsigned char *)(v63 + 32);
  long long v65 = *(_OWORD *)(v63 + 16);
  *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
  *(_OWORD *)(v62 + 16) = v65;
  *(unsigned char *)(v62 + 32) = v64;
  uint64_t v66 = v56[8];
  uint64_t v67 = (void *)(v54 + v66);
  long long v68 = (void *)(v55 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  v67[2] = v68[2];
  v67[3] = v68[3];
  *(void *)(v54 + v56[9]) = *(void *)(v55 + v56[9]);
  return a1;
}

_OWORD *sub_2499E6D48(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    long long v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *((void *)a1 + 9) = *((void *)a2 + 9);
    uint64_t v9 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
    uint64_t v10 = v9[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    *(void *)uint64_t v11 = *(void *)((char *)a2 + v10);
    unsigned char v11[24] = *((unsigned char *)a2 + v10 + 24);
    *(_OWORD *)(v11 + 8) = *(_OWORD *)((char *)a2 + v10 + 8);
    uint64_t v13 = type metadata accessor for NotificationSymbolConfiguration(0);
    uint64_t v14 = *(int *)(v13 + 24);
    uint64_t v15 = &v11[v14];
    uint64_t v16 = &v12[v14];
    uint64_t v17 = sub_249AEC9B8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    uint64_t v18 = *(int *)(v13 + 28);
    uint64_t v19 = &v11[v18];
    uint64_t v20 = &v12[v18];
    long long v21 = *((_OWORD *)v20 + 1);
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
    *((_OWORD *)v19 + 1) = v21;
    uint64_t v22 = v9[8];
    uint64_t v23 = (_OWORD *)((char *)a1 + v22);
    long long v24 = (_OWORD *)((char *)a2 + v22);
    long long v25 = v24[3];
    v23[2] = v24[2];
    void v23[3] = v25;
    long long v26 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v26;
    long long v27 = v24[8];
    long long v28 = v24[6];
    v23[7] = v24[7];
    v23[8] = v27;
    long long v29 = v24[5];
    v23[4] = v24[4];
    v23[5] = v29;
    v23[6] = v28;
    uint64_t v30 = v9[9];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    uint64_t v33 = v9[10];
    char v34 = (char *)a1 + v33;
    uint64_t v35 = (char *)a2 + v33;
    *(_OWORD *)char v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
    *((unsigned char *)a1 + v9[11]) = *((unsigned char *)a2 + v9[11]);
    uint64_t v36 = v9[12];
    uint64_t v37 = (char *)a1 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v39 = sub_249AECBE8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
    uint64_t v40 = v9[13];
    uint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
    *((void *)v41 + 2) = *((void *)v42 + 2);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v43 = a3[5];
  uint64_t v44 = a3[6];
  uint64_t v45 = (char *)a1 + v43;
  char v46 = (char *)a2 + v43;
  *(void *)uint64_t v45 = *(void *)v46;
  v45[8] = v46[8];
  uint64_t v47 = (char *)a1 + v44;
  char v48 = (char *)a2 + v44;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v50 = sub_249AEBAF8();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v47, v48, v50);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
  }
  uint64_t v51 = a3[7];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  *(_OWORD *)((char *)a1 + v51) = *(_OWORD *)((char *)a2 + v51);
  uint64_t v54 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v55 = v54[6];
  uint64_t v56 = &v52[v55];
  uint64_t v57 = &v53[v55];
  uint64_t v58 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
  uint64_t v59 = v54[7];
  uint64_t v60 = &v52[v59];
  uint64_t v61 = &v53[v59];
  long long v62 = *((_OWORD *)v61 + 1);
  *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
  *((_OWORD *)v60 + 1) = v62;
  v60[32] = v61[32];
  uint64_t v63 = v54[8];
  char v64 = &v52[v63];
  long long v65 = &v53[v63];
  long long v66 = *((_OWORD *)v65 + 1);
  *(_OWORD *)char v64 = *(_OWORD *)v65;
  *((_OWORD *)v64 + 1) = v66;
  *(void *)&v52[v54[9]] = *(void *)&v53[v54[9]];
  return a1;
}

_OWORD *sub_2499E70DC(_OWORD *a1, _OWORD *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_2498D60E8((uint64_t)a1, &qword_2696E1CF0);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1CF0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      long long v8 = a2[3];
      a1[2] = a2[2];
      a1[3] = v8;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *((void *)a1 + 9) = *((void *)a2 + 9);
      uint64_t v9 = (int *)type metadata accessor for UserInteractiveConfiguration(0);
      uint64_t v10 = v9[7];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      *(void *)uint64_t v11 = *(void *)((char *)a2 + v10);
      unsigned char v11[24] = *((unsigned char *)a2 + v10 + 24);
      *(_OWORD *)(v11 + 8) = *(_OWORD *)((char *)a2 + v10 + 8);
      uint64_t v13 = type metadata accessor for NotificationSymbolConfiguration(0);
      uint64_t v14 = *(int *)(v13 + 24);
      uint64_t v15 = &v11[v14];
      uint64_t v16 = &v12[v14];
      uint64_t v17 = sub_249AEC9B8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = *(int *)(v13 + 28);
      uint64_t v19 = &v11[v18];
      uint64_t v20 = &v12[v18];
      long long v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      uint64_t v22 = v9[8];
      uint64_t v23 = (_OWORD *)((char *)a1 + v22);
      long long v24 = (_OWORD *)((char *)a2 + v22);
      long long v25 = v24[3];
      v23[2] = v24[2];
      void v23[3] = v25;
      long long v26 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v26;
      long long v27 = v24[8];
      long long v28 = v24[6];
      v23[7] = v24[7];
      v23[8] = v27;
      long long v29 = v24[5];
      v23[4] = v24[4];
      v23[5] = v29;
      v23[6] = v28;
      uint64_t v30 = v9[9];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
      v31[16] = v32[16];
      uint64_t v33 = v9[10];
      char v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      *(_OWORD *)char v34 = *(_OWORD *)v35;
      v34[16] = v35[16];
      *((unsigned char *)a1 + v9[11]) = *((unsigned char *)a2 + v9[11]);
      uint64_t v36 = v9[12];
      uint64_t v37 = (char *)a1 + v36;
      uint64_t v38 = (char *)a2 + v36;
      uint64_t v39 = sub_249AECBE8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
      uint64_t v40 = v9[13];
      uint64_t v41 = (char *)a1 + v40;
      uint64_t v42 = (char *)a2 + v40;
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((void *)v41 + 2) = *((void *)v42 + 2);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v43 = a3[5];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = *(void *)v45;
  LOBYTE(v45) = v45[8];
  uint64_t v47 = *(void *)v44;
  char v48 = v44[8];
  *(void *)uint64_t v44 = v46;
  v44[8] = (char)v45;
  sub_2499AAF18(v47, v48);
  if (a1 != a2)
  {
    uint64_t v49 = a3[6];
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    sub_2498D60E8((uint64_t)a1 + v49, &qword_2696E1D20);
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D20);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v53 = sub_249AEBAF8();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v50, v51, v53);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
    }
  }
  uint64_t v54 = a3[7];
  uint64_t v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)a2 + v54;
  *(void *)((char *)a1 + v54) = *(void *)((char *)a2 + v54);
  swift_release();
  *((void *)v55 + 1) = *((void *)v56 + 1);
  uint64_t v57 = (int *)type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v58 = v57[6];
  uint64_t v59 = &v55[v58];
  uint64_t v60 = &v56[v58];
  uint64_t v61 = sub_249AEC9B8();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 40))(v59, v60, v61);
  uint64_t v62 = v57[7];
  uint64_t v63 = &v55[v62];
  char v64 = &v56[v62];
  long long v65 = *((_OWORD *)v64 + 1);
  *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
  *((_OWORD *)v63 + 1) = v65;
  v63[32] = v64[32];
  uint64_t v66 = v57[8];
  uint64_t v67 = &v55[v66];
  long long v68 = &v56[v66];
  long long v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *(void *)&v55[v57[9]] = *(void *)&v56[v57[9]];
  return a1;
}

uint64_t sub_2499E74C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499E74D4);
}

uint64_t sub_2499E74D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C00);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_9:
    return v9(v10, a2, v8);
  }
  if (a2 == 254)
  {
    unsigned int v11 = *(unsigned __int8 *)(a1 + a3[5] + 8);
    if (v11 > 1) {
      return (v11 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2D88);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v10 = a1 + a3[6];
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    goto LABEL_9;
  }
  uint64_t v15 = type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a3[7];

  return v16(v18, a2, v17);
}

uint64_t sub_2499E7658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499E766C);
}

uint64_t sub_2499E766C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2C00);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 254)
  {
    *(unsigned char *)(a1 + a4[5] + 8) = -(char)a2;
    return result;
  }
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2D88);
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[6];
    unsigned int v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for IconNotificationButtonConfiguration(0);
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[7];

  return v16(v18, a2, a2, v17);
}

void sub_2499E77F4()
{
  sub_2499E7938(319, &qword_2696E2DA0, (void (*)(uint64_t))type metadata accessor for UserInteractiveConfiguration);
  if (v0 <= 0x3F)
  {
    sub_2499E7938(319, &qword_2696E2DA8, MEMORY[0x263F18520]);
    if (v1 <= 0x3F)
    {
      type metadata accessor for IconNotificationButtonConfiguration(319);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_2499E7938(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_249AEBB18();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2499E798C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499E79A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2499E7A10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2499E7A78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_2499E7AE0()
{
  return sub_249AEBE48();
}

uint64_t sub_2499E7B04()
{
  return sub_249AEBE48();
}

uint64_t sub_2499E7B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499E7B54(a1, a2, a3, a4, MEMORY[0x263F1B548], MEMORY[0x263F191D8]);
}

uint64_t sub_2499E7B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t (*a6)(char *))
{
  uint64_t v8 = a5(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v13 - v9, a1);
  return a6(v10);
}

uint64_t sub_2499E7C24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2499E7B54(a1, a2, a3, a4, MEMORY[0x263F1B548], MEMORY[0x263F191D8]);
}

uint64_t sub_2499E7C64()
{
  return sub_249AEBEC8();
}

unint64_t sub_2499E7C8C()
{
  unint64_t result = qword_2696E2DD0;
  if (!qword_2696E2DD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2DD0);
  }
  return result;
}

uint64_t sub_2499E7CE0()
{
  return sub_2499E5750(&qword_2696E2DD8, &qword_2696E2DB8, (void (*)(void))sub_2499E7D24);
}

unint64_t sub_2499E7D24()
{
  unint64_t result = qword_2696E2DE0;
  if (!qword_2696E2DE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2DB0);
    sub_2499E7DD0(&qword_2696E2DE8, (void (*)(uint64_t))type metadata accessor for IconNotificationButtonContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2DE0);
  }
  return result;
}

uint64_t sub_2499E7DD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

__n128 WidgetView.init(widget:)@<Q0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  __n128 v11 = (__n128)a1[1];
  long long v12 = *a1;
  uint64_t v3 = *((void *)a1 + 4);
  uint64_t v4 = *((void *)a1 + 5);
  char v5 = *((unsigned char *)a1 + 48);
  uint64_t v6 = *((void *)a1 + 7);
  uint64_t v7 = *((void *)a1 + 8);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v9 = swift_getKeyPath();
  *(void *)a2 = KeyPath;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v9;
  *(unsigned char *)(a2 + 24) = 0;
  __n128 result = v11;
  *(_OWORD *)(a2 + 32) = v12;
  *(__n128 *)(a2 + 48) = v11;
  *(void *)(a2 + 64) = v3;
  *(void *)(a2 + 72) = v4;
  *(unsigned char *)(a2 + 80) = v5;
  *(void *)(a2 + 88) = v6;
  *(void *)(a2 + 96) = v7;
  return result;
}

uint64_t WidgetView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  char v6 = *(unsigned char *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v52 = *(void **)(v1 + 48);
  uint64_t v54 = *(void *)(v1 + 32);
  uint64_t v9 = *(void **)(v1 + 72);
  uint64_t v49 = *(void *)(v1 + 64);
  char v47 = *(unsigned char *)(v1 + 80);
  uint64_t v10 = *(void *)(v1 + 96);
  uint64_t v45 = *(void *)(v1 + 88);
  j__swift_retain();
  j__swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  j__swift_retain();
  uint64_t v11 = sub_2499A640C(v3, v4);
  j__swift_release();
  j__swift_release();
  j__swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v11) {
    goto LABEL_10;
  }
  id v12 = objc_msgSend(*(id *)(v11 + 184), sel_metricsForFamily_, *(void *)(v11 + 64));
  if (!v12)
  {
    swift_release();
LABEL_10:
    sub_2499E86BC(&v56);
    sub_2499E86D8((uint64_t)&v56, (uint64_t)&v79);
    return sub_2499E86D8((uint64_t)&v79, a1);
  }
  uint64_t v42 = v12;
  uint64_t v44 = a1;
  j__swift_retain();
  j__swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  j__swift_retain();
  uint64_t v13 = sub_2499A643C(v5, v6);
  j__swift_release();
  j__swift_release();
  j__swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v13)
  {
    swift_release();

LABEL_9:
    a1 = v44;
    goto LABEL_10;
  }
  *(void *)&long long v56 = v54;
  *((void *)&v56 + 1) = v7;
  id v57 = v52;
  uint64_t v58 = v8;
  uint64_t v59 = v49;
  id v60 = v9;
  char v61 = v47;
  uint64_t v62 = v45;
  uint64_t v63 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = v11;
  sub_2498831CC((uint64_t *)&v56, (uint64_t)&v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v15 = v81;
  uint64_t v16 = v82;
  uint64_t v17 = v83;
  uint64_t v18 = v84;
  uint64_t v19 = v85;
  uint64_t v20 = v86;
  char v21 = v87;
  uint64_t v22 = v88;
  uint64_t v53 = v80;
  uint64_t v55 = v79;
  uint64_t v50 = v89;
  id v23 = WidgetManager.configuredWidgetDescriptor(for:)((uint64_t)&v79);
  if (!v23)
  {
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  long long v24 = v23;
  uint64_t v41 = v14;
  id v25 = objc_msgSend(v23, sel_uniqueIdentifier);

  uint64_t v26 = sub_249AED0D8();
  uint64_t v46 = v27;
  uint64_t v48 = v26;

  uint64_t v79 = v55;
  uint64_t v80 = v53;
  uint64_t v81 = v15;
  uint64_t v82 = v16;
  uint64_t v83 = v17;
  uint64_t v84 = v18;
  uint64_t v85 = v19;
  uint64_t v86 = v20;
  char v87 = v21;
  uint64_t v88 = v22;
  uint64_t v89 = v50;
  swift_bridgeObjectRetain();
  id v28 = WidgetManager.chsWidget(for:)(&v79);
  id v29 = v42;
  objc_msgSend(v29, sel_size);
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  swift_retain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_size);
  objc_msgSend(v29, sel_scaleFactor);
  objc_msgSend(v29, sel_size);
  objc_msgSend(v29, sel_scaleFactor);
  sub_249AECC28();
  sub_249AEBBE8();
  uint64_t v34 = v73;
  char v35 = v74;
  uint64_t v36 = v75;
  char v37 = v76;
  uint64_t v51 = v77;
  uint64_t v43 = v78;
  swift_bridgeObjectRetain();
  id v38 = v28;
  swift_bridgeObjectRetain();
  id v39 = v29;
  sub_2498B9AA8((uint64_t)sub_2499E8740);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  sub_2498B9AB8((uint64_t)sub_2499E8740);
  *(void *)&long long v56 = v55;
  *((void *)&v56 + 1) = v53;
  id v57 = v38;
  uint64_t v58 = v48;
  uint64_t v59 = v46;
  id v60 = v39;
  char v61 = 1;
  uint64_t v62 = v31;
  uint64_t v63 = v33;
  char v64 = 1;
  long long v65 = sub_2499E8740;
  uint64_t v66 = v41;
  uint64_t v67 = v34;
  char v68 = v35;
  uint64_t v69 = v36;
  char v70 = v37;
  uint64_t v71 = v51;
  uint64_t v72 = v43;
  nullsub_1(&v56);
  sub_2499E86D8((uint64_t)&v56, (uint64_t)&v79);
  a1 = v44;
  return sub_2499E86D8((uint64_t)&v79, a1);
}

uint64_t sub_2499E8430(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_249AECD28();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_249AECD48();
  uint64_t v8 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499DCA58();
  uint64_t v11 = (void *)sub_249AED808();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_2499E8C08;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2499D0768;
  aBlock[3] = &block_descriptor_2;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  id v14 = a1;
  swift_release();
  sub_249AECD38();
  aBlock[0] = MEMORY[0x263F8EE78];
  sub_2499DCA00();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFDD0);
  sub_249934FD4();
  sub_249AED998();
  MEMORY[0x24C5AE990](0, v10, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

double sub_2499E86BC(_OWORD *a1)
{
  double result = 0.0;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_2499E86D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2DF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499E8740(void *a1)
{
  return sub_2499E8430(a1, v1);
}

uint64_t sub_2499E8748()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t destroy for WidgetView()
{
  j__swift_release();
  j__swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for WidgetView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  j__swift_retain();
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = a2[2];
  char v7 = *((unsigned char *)a2 + 24);
  j__swift_retain();
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v8 = a2[5];
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = v8;
  uint64_t v9 = a2[7];
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = v9;
  uint64_t v10 = a2[9];
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = v10;
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  uint64_t v11 = a2[11];
  uint64_t v12 = a2[12];
  *(void *)(a1 + 88) = v11;
  *(void *)(a1 + 96) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WidgetView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  j__swift_retain();
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  j__swift_release();
  uint64_t v6 = a2[2];
  char v7 = *((unsigned char *)a2 + 24);
  j__swift_retain();
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  j__swift_release();
  *(void *)(a1 + 32) = a2[4];
  *(void *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = a2[6];
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = a2[8];
  *(void *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
  *(void *)(a1 + 88) = a2[11];
  *(void *)(a1 + 96) = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WidgetView(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  j__swift_release();
  char v5 = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  j__swift_release();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetView()
{
  return &type metadata for WidgetView;
}

unint64_t sub_2499E8AD8()
{
  unint64_t result = qword_2696E2DF8;
  if (!qword_2696E2DF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2DF0);
    sub_2499E8B4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2DF8);
  }
  return result;
}

unint64_t sub_2499E8B4C()
{
  unint64_t result = qword_2696E2E00;
  if (!qword_2696E2E00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2E08);
    sub_2498FEE4C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E00);
  }
  return result;
}

uint64_t sub_2499E8BC8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_2499E8C08()
{
  objc_msgSend(*(id *)(*(void *)(v0 + 16) + 192), sel_addObject_, *(void *)(v0 + 24));
  sub_249AA356C();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

void ConcentricRingsConfiguration.dataIdentifiers.getter(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 4);
  *(_DWORD *)a1 = *(_DWORD *)v1;
  *(_WORD *)(a1 + 4) = v2;
}

uint64_t ConcentricRingsConfiguration.dataIdentifiers.setter(uint64_t result)
{
  __int16 v2 = *(_WORD *)(result + 4);
  *(_DWORD *)uint64_t v1 = *(_DWORD *)result;
  *(_WORD *)(v1 + 4) = v2;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.dataIdentifiers.modify())()
{
  return nullsub_1;
}

uint64_t ConcentricRingsConfiguration.ringsNumber.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ConcentricRingsConfiguration.ringsNumber.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.ringsNumber.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.ringWidth.getter()
{
  return *(float *)(v0 + 16);
}

void ConcentricRingsConfiguration.ringWidth.setter(float a1)
{
  *(float *)(v1 + 16) = a1;
}

uint64_t (*ConcentricRingsConfiguration.ringWidth.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.ringsGap.getter()
{
  return *(float *)(v0 + 20);
}

void ConcentricRingsConfiguration.ringsGap.setter(float a1)
{
  *(float *)(v1 + 20) = a1;
}

uint64_t (*ConcentricRingsConfiguration.ringsGap.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.targetDigiBarWidth.getter()
{
  return *(float *)(v0 + 24);
}

void ConcentricRingsConfiguration.targetDigiBarWidth.setter(float a1)
{
  *(float *)(v1 + 24) = a1;
}

uint64_t (*ConcentricRingsConfiguration.targetDigiBarWidth.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.targetDigiBarInset.getter()
{
  return *(float *)(v0 + 28);
}

void ConcentricRingsConfiguration.targetDigiBarInset.setter(float a1)
{
  *(float *)(v1 + 28) = a1;
}

uint64_t (*ConcentricRingsConfiguration.targetDigiBarInset.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.spacing.getter()
{
  return *(float *)(v0 + 32);
}

void ConcentricRingsConfiguration.spacing.setter(float a1)
{
  *(float *)(v1 + 32) = a1;
}

uint64_t (*ConcentricRingsConfiguration.spacing.modify())()
{
  return nullsub_1;
}

float ConcentricRingsConfiguration.inset.getter()
{
  return *(float *)(v0 + 36);
}

void ConcentricRingsConfiguration.inset.setter(float a1)
{
  *(float *)(v1 + 36) = a1;
}

uint64_t (*ConcentricRingsConfiguration.inset.modify())()
{
  return nullsub_1;
}

uint64_t ConcentricRingsConfiguration.colorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 56);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t ConcentricRingsConfiguration.colorID.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = sub_24988D788(*(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56));
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v3;
  *(unsigned char *)(v1 + 56) = v4;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.colorID.modify())()
{
  return nullsub_1;
}

__n128 ConcentricRingsConfiguration.primaryAngleConfiguration.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 80);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 64);
  *(unsigned char *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 88);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 ConcentricRingsConfiguration.primaryAngleConfiguration.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)a1;
  *(unsigned char *)(v1 + 80) = v2;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v1 + 88) = result;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.primaryAngleConfiguration.modify())()
{
  return nullsub_1;
}

__n128 ConcentricRingsConfiguration.secondaryAngleConfiguration.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 120);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 104);
  *(unsigned char *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 128);
  *(__n128 *)(a1 + 24) = result;
  return result;
}

__n128 ConcentricRingsConfiguration.secondaryAngleConfiguration.setter(uint64_t a1)
{
  char v2 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)(v1 + 104) = *(_OWORD *)a1;
  *(unsigned char *)(v1 + 120) = v2;
  __n128 result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

uint64_t (*ConcentricRingsConfiguration.secondaryAngleConfiguration.modify())()
{
  return nullsub_1;
}

__n128 ConcentricRingsConfiguration.init(dataIdentifiers:ringsNumber:ringWidth:ringsGap:targetDigiBarWidth:targetDigiBarInset:spacing:inset:colorID:primaryAngleConfiguration:secondaryAngleConfiguration:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, float a7@<S0>, float a8@<S1>, float a9@<S2>, float a10@<S3>, float a11@<S4>, float a12@<S5>)
{
  __int16 v12 = *(_WORD *)(a1 + 4);
  char v13 = *(unsigned char *)(a3 + 16);
  char v14 = *(unsigned char *)(a4 + 16);
  char v15 = *(unsigned char *)(a5 + 16);
  *(_DWORD *)a6 = *(_DWORD *)a1;
  *(_WORD *)(a6 + 4) = v12;
  *(void *)(a6 + 8) = a2;
  *(float *)(a6 + 16) = a7;
  *(float *)(a6 + 20) = a8;
  *(float *)(a6 + 24) = a9;
  *(float *)(a6 + 28) = a10;
  *(float *)(a6 + 32) = a11;
  *(float *)(a6 + 36) = a12;
  *(_OWORD *)(a6 + 40) = *(_OWORD *)a3;
  *(unsigned char *)(a6 + 56) = v13;
  *(_OWORD *)(a6 + 64) = *(_OWORD *)a4;
  *(unsigned char *)(a6 + 80) = v14;
  *(_OWORD *)(a6 + 88) = *(_OWORD *)(a4 + 24);
  *(_OWORD *)(a6 + 104) = *(_OWORD *)a5;
  *(unsigned char *)(a6 + 120) = v15;
  __n128 result = *(__n128 *)(a5 + 24);
  *(__n128 *)(a6 + 128) = result;
  return result;
}

uint64_t ConcentricRingsConfiguration.hash(into:)()
{
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 40);
  char v1 = *(unsigned char *)(v0 + 56);
  PowermeterDataIdentifiers.hash(into:)();
  sub_249AEE348();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_24988D770(v4, v3, v1);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v4, v3, v1);
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();
  sub_2498ACC00();
  sub_249AEE378();
  sub_249AEE378();
  sub_249AEE358();

  return sub_2498ACC00();
}

unint64_t sub_2499E9164(char a1)
{
  unint64_t result = 0x6E65644961746164;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D754E73676E6972;
      break;
    case 2:
      unint64_t result = 0x74646957676E6972;
      break;
    case 3:
      unint64_t result = 0x70614773676E6972;
      break;
    case 4:
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x676E6963617073;
      break;
    case 7:
      unint64_t result = 0x7465736E69;
      break;
    case 8:
      unint64_t result = 0x4449726F6C6F63;
      break;
    case 9:
      unint64_t result = 0xD000000000000019;
      break;
    case 10:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2499E92D4()
{
  return sub_2499E9164(*v0);
}

uint64_t sub_2499E92DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499EAA50(a1, a2);
  *a3 = result;
  return result;
}

void sub_2499E9304(unsigned char *a1@<X8>)
{
  *a1 = 11;
}

uint64_t sub_2499E9310(uint64_t a1)
{
  unint64_t v2 = sub_2499EA2EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499E934C(uint64_t a1)
{
  unint64_t v2 = sub_2499EA2EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ConcentricRingsConfiguration.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E10);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __int16 v8 = *(_WORD *)(v2 + 4);
  uint64_t v9 = *(void *)(v2 + 8);
  int v10 = *(_DWORD *)(v2 + 16);
  int v41 = *(_DWORD *)(v2 + 20);
  int v42 = v10;
  int v11 = *(_DWORD *)(v2 + 24);
  int v39 = *(_DWORD *)(v2 + 28);
  int v40 = v11;
  int v12 = *(_DWORD *)(v2 + 32);
  int v37 = *(_DWORD *)(v2 + 36);
  int v38 = v12;
  uint64_t v44 = *(void *)(v2 + 40);
  uint64_t v45 = v9;
  uint64_t v43 = *(void *)(v2 + 48);
  int v52 = *(unsigned __int8 *)(v2 + 56);
  uint64_t v13 = *(void *)(v2 + 64);
  uint64_t v14 = *(void *)(v2 + 72);
  int v36 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v15 = *(void *)(v2 + 88);
  uint64_t v16 = *(void *)(v2 + 96);
  uint64_t v17 = *(void *)(v2 + 104);
  uint64_t v18 = *(void *)(v2 + 112);
  char v19 = *(unsigned char *)(v2 + 120);
  uint64_t v20 = *(void *)(v2 + 128);
  uint64_t v21 = *(void *)(v2 + 136);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499EA2EC();
  uint64_t v22 = v4;
  sub_249AEE468();
  LODWORD(v47) = *(_DWORD *)v2;
  WORD2(v47) = v8;
  char v53 = 0;
  sub_2499EA340();
  uint64_t v23 = v46;
  sub_249AEDF08();
  if (!v23)
  {
    char v24 = v52;
    uint64_t v25 = v43;
    uint64_t v26 = v44;
    uint64_t v33 = v16;
    uint64_t v34 = v15;
    uint64_t v35 = v14;
    uint64_t v46 = v13;
    uint64_t v29 = v21;
    uint64_t v30 = v20;
    uint64_t v31 = v18;
    uint64_t v32 = v17;
    LOBYTE(v47) = 1;
    sub_249AEDEE8();
    LOBYTE(v47) = 2;
    sub_249AEDED8();
    LOBYTE(v47) = 3;
    sub_249AEDED8();
    LOBYTE(v47) = 4;
    sub_249AEDED8();
    LOBYTE(v47) = 5;
    sub_249AEDED8();
    LOBYTE(v47) = 6;
    sub_249AEDED8();
    LOBYTE(v47) = 7;
    sub_249AEDED8();
    uint64_t v47 = v26;
    uint64_t v48 = v25;
    char v49 = v24;
    char v53 = 8;
    sub_24988E104();
    sub_249AEDF08();
    uint64_t v47 = v46;
    uint64_t v48 = v35;
    char v49 = v36;
    uint64_t v50 = v34;
    uint64_t v51 = v33;
    char v53 = 9;
    sub_2498D0674();
    sub_249AEDF08();
    uint64_t v47 = v32;
    uint64_t v48 = v31;
    char v49 = v19;
    uint64_t v50 = v30;
    uint64_t v51 = v29;
    char v53 = 10;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v22);
}

uint64_t ConcentricRingsConfiguration.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t ConcentricRingsConfiguration.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  __int16 v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499EA2EC();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  LOBYTE(v81) = 0;
  sub_2499EA394();
  sub_249AEDE08();
  long long v56 = a2;
  int v90 = v58;
  int v57 = BYTE1(v58);
  int v89 = BYTE2(v58);
  int v9 = BYTE3(v58);
  int v10 = BYTE4(v58);
  int v11 = BYTE5(v58);
  LOBYTE(v58) = 1;
  uint64_t v52 = sub_249AEDDE8();
  int v53 = v11;
  int v54 = v10;
  int v55 = v9;
  LOBYTE(v58) = 2;
  sub_249AEDDD8();
  int v13 = v12;
  LOBYTE(v58) = 3;
  sub_249AEDDD8();
  int v15 = v14;
  LOBYTE(v58) = 4;
  sub_249AEDDD8();
  unsigned int v17 = v16;
  LOBYTE(v58) = 5;
  sub_249AEDDD8();
  unsigned int v19 = v18;
  LOBYTE(v58) = 6;
  sub_249AEDDD8();
  unsigned int v21 = v20;
  LOBYTE(v58) = 7;
  sub_249AEDDD8();
  unsigned int v50 = v22;
  LOBYTE(v81) = 8;
  sub_24988E268();
  sub_249AEDE08();
  LOBYTE(v81) = 9;
  uint64_t v23 = v58;
  uint64_t v24 = v59;
  int v51 = v60;
  sub_24988D770(v58, v59, v60);
  sub_2498D07EC();
  sub_249AEDE08();
  uint64_t v46 = v58;
  uint64_t v45 = v59;
  int v47 = v60;
  unint64_t v49 = v62;
  unint64_t v48 = v63;
  char v80 = 10;
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v25 = v81;
  uint64_t v26 = v82;
  uint64_t v42 = v81;
  uint64_t v41 = v82;
  unsigned __int8 v27 = v83;
  HIDWORD(v40) = v83;
  uint64_t v28 = v84;
  uint64_t v29 = v85;
  uint64_t v44 = v84;
  uint64_t v43 = v85;
  uint64_t v30 = v56;
  *long long v56 = v90;
  char v31 = v57;
  v30[1] = v57;
  void v30[2] = v89;
  v30[3] = v55;
  char v32 = v54;
  v30[4] = v54;
  char v33 = v53;
  uint64_t v30[5] = v53;
  uint64_t v34 = v52;
  *((void *)v30 + 1) = v52;
  *((_DWORD *)v30 + 4) = v13;
  *((_DWORD *)v30 + 5) = v15;
  *((_DWORD *)v30 + 6) = v17;
  *((_DWORD *)v30 + 7) = v19;
  unsigned int v35 = v50;
  *((_DWORD *)v30 + 8) = v21;
  *((_DWORD *)v30 + 9) = v35;
  *((void *)v30 + 5) = v23;
  *((void *)v30 + 6) = v24;
  LOBYTE(v10) = v51;
  v30[56] = v51;
  uint64_t v36 = v46;
  uint64_t v37 = v45;
  *((void *)v30 + 8) = v46;
  *((void *)v30 + 9) = v37;
  v30[80] = v47;
  unint64_t v38 = v48;
  *((void *)v30 + 11) = v49;
  *((void *)v30 + 12) = v38;
  *((void *)v30 + 13) = v25;
  *((void *)v30 + 14) = v26;
  v30[120] = v27;
  *((void *)v30 + 16) = v28;
  *((void *)v30 + 17) = v29;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  LOBYTE(v58) = v90;
  BYTE1(v58) = v31;
  BYTE2(v58) = v89;
  BYTE3(v58) = v55;
  BYTE4(v58) = v32;
  BYTE5(v58) = v33;
  uint64_t v59 = v34;
  int v60 = v13;
  int v61 = v15;
  unint64_t v62 = __PAIR64__(v19, v17);
  unint64_t v63 = __PAIR64__(v35, v21);
  uint64_t v64 = v23;
  uint64_t v65 = v24;
  char v66 = v10;
  *(_DWORD *)uint64_t v67 = *(_DWORD *)v88;
  *(_DWORD *)&v67[3] = *(_DWORD *)&v88[3];
  uint64_t v68 = v36;
  uint64_t v69 = v37;
  char v70 = v47;
  *(_DWORD *)&v71[3] = *(_DWORD *)&v87[3];
  *(_DWORD *)uint64_t v71 = *(_DWORD *)v87;
  unint64_t v72 = v49;
  unint64_t v73 = v48;
  uint64_t v74 = v42;
  uint64_t v75 = v41;
  char v76 = BYTE4(v40);
  *(_DWORD *)uint64_t v77 = *(_DWORD *)v86;
  *(_DWORD *)&v77[3] = *(_DWORD *)&v86[3];
  uint64_t v78 = v44;
  uint64_t v79 = v43;
  return sub_2499EA3E8((uint64_t)&v58);
}

uint64_t sub_2499E9EF0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return ConcentricRingsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2499E9F08(void *a1)
{
  return ConcentricRingsConfiguration.encode(to:)(a1);
}

uint64_t sub_2499E9F20()
{
  return sub_249AEE388();
}

uint64_t sub_2499E9F64()
{
  return sub_249AEE388();
}

uint64_t _s14CarPlayAssetUI28ConcentricRingsConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  char v5 = *(unsigned char *)(a1 + 56);
  float64_t v40 = *(double *)(a1 + 64);
  float64_t v39 = *(double *)(a1 + 72);
  int v33 = *(unsigned __int8 *)(a1 + 80);
  float64_t v41 = *(double *)(a1 + 88);
  float64_t v34 = *(double *)(a1 + 96);
  float64x2_t v29 = *(float64x2_t *)(a1 + 128);
  int8x16_t v30 = *(int8x16_t *)(a1 + 104);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  char v9 = *(unsigned char *)(a2 + 56);
  float64_t v37 = *(double *)(a2 + 64);
  float64_t v36 = *(double *)(a2 + 72);
  int v31 = *(unsigned __int8 *)(a1 + 120);
  int v32 = *(unsigned __int8 *)(a2 + 80);
  float64_t v38 = *(double *)(a2 + 88);
  float64_t v35 = *(double *)(a2 + 96);
  int v28 = *(unsigned __int8 *)(a2 + 120);
  float64x2_t v26 = *(float64x2_t *)(a2 + 128);
  int8x16_t v27 = *(int8x16_t *)(a2 + 104);
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vceqq_f32(*(float32x4_t *)(a1 + 16), *(float32x4_t *)(a2 + 16))), 0xFuLL))) & (*(float *)(a1 + 32) == *(float *)(a2 + 32)) & _s14CarPlayAssetUI25PowermeterDataIdentifiersV2eeoiySbAC_ACtFZ_0() & (*(float *)(a1 + 36) == *(float *)(a2 + 36))) != 1|| v2 != v6)
  {
    return 0;
  }
  sub_24988D770(v4, v3, v5);
  sub_24988D770(v8, v7, v9);
  uint64_t v12 = Theme.ColorID.rawValue.getter();
  uint64_t v14 = v13;
  if (v12 == Theme.ColorID.rawValue.getter() && v14 == v15)
  {
    swift_bridgeObjectRelease_n();
    sub_24988D788(v8, v7, v9);
    sub_24988D788(v4, v3, v5);
    uint64_t result = 0;
    v16.f64[0] = v39;
    v16.f64[1] = v40;
    v17.f64[0] = v41;
    v17.f64[1] = v34;
    v18.f64[0] = v36;
    v18.f64[1] = v37;
    v19.f64[0] = v38;
    v19.f64[1] = v35;
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v16, v18), (int32x4_t)vceqq_f64(v17, v19))), 0xFuLL))) & 1) == 0)return result; {
    goto LABEL_12;
    }
  }
  char v20 = sub_249AEE0D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24988D788(v8, v7, v9);
  sub_24988D788(v4, v3, v5);
  uint64_t result = 0;
  if (v20)
  {
    v21.f64[0] = v40;
    v21.f64[1] = v39;
    v22.f64[0] = v41;
    v22.f64[1] = v34;
    v23.f64[0] = v37;
    v23.f64[1] = v36;
    v24.f64[0] = v38;
    v24.f64[1] = v35;
    if ((~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v21, v23), (int32x4_t)vceqq_f64(v22, v24))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0)
    {
LABEL_12:
      if (((v33 ^ v32) & 1) == 0)
      {
        uint16x4_t v25 = (uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64((float64x2_t)vextq_s8(v30, v30, 8uLL), (float64x2_t)vextq_s8(v27, v27, 8uLL)), (int32x4_t)vceqq_f64(v29, v26))), 0xFuLL));
        v25.i16[0] = vminv_u16(v25);
        return v25.i32[0] & (v31 ^ v28 ^ 1u);
      }
    }
  }
  return result;
}

unint64_t sub_2499EA2EC()
{
  unint64_t result = qword_2696E2E18;
  if (!qword_2696E2E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E18);
  }
  return result;
}

unint64_t sub_2499EA340()
{
  unint64_t result = qword_2696E2E20;
  if (!qword_2696E2E20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E20);
  }
  return result;
}

unint64_t sub_2499EA394()
{
  unint64_t result = qword_2696E2E30;
  if (!qword_2696E2E30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E30);
  }
  return result;
}

uint64_t sub_2499EA3E8(uint64_t a1)
{
  return a1;
}

unint64_t sub_2499EA420()
{
  unint64_t result = qword_2696E2E38;
  if (!qword_2696E2E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E38);
  }
  return result;
}

uint64_t destroy for ConcentricRingsConfiguration(uint64_t a1)
{
  return sub_24988D788(*(void *)(a1 + 40), *(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
}

uint64_t initializeWithCopy for ConcentricRingsConfiguration(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  char v6 = *(unsigned char *)(a2 + 56);
  sub_24988D770(v4, v5, v6);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t assignWithCopy for ConcentricRingsConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  char v6 = *(unsigned char *)(a2 + 56);
  sub_24988D770(v4, v5, v6);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  char v9 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v6;
  sub_24988D788(v7, v8, v9);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  return a1;
}

uint64_t assignWithTake for ConcentricRingsConfiguration(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_WORD *)(a1 + 4) = *(_WORD *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 56);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  char v7 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v4;
  sub_24988D788(v5, v6, v7);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConcentricRingsConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ConcentricRingsConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 144) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 144) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConcentricRingsConfiguration()
{
  return &type metadata for ConcentricRingsConfiguration;
}

uint64_t getEnumTagSinglePayload for ConcentricRingsConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_17;
  }
  if (a2 + 10 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 10) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 10;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 10;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xB;
  int v8 = v6 - 11;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ConcentricRingsConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 10 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 10) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF6) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF5)
  {
    unsigned int v6 = ((a2 - 246) >> 8) + 1;
    *unint64_t result = a2 + 10;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499EA910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 10;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConcentricRingsConfiguration.CodingKeys()
{
  return &type metadata for ConcentricRingsConfiguration.CodingKeys;
}

unint64_t sub_2499EA94C()
{
  unint64_t result = qword_2696E2E40;
  if (!qword_2696E2E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E40);
  }
  return result;
}

unint64_t sub_2499EA9A4()
{
  unint64_t result = qword_2696E2E48;
  if (!qword_2696E2E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E48);
  }
  return result;
}

unint64_t sub_2499EA9FC()
{
  unint64_t result = qword_2696E2E50;
  if (!qword_2696E2E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E50);
  }
  return result;
}

uint64_t sub_2499EAA50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E65644961746164 && a2 == 0xEF73726569666974;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D754E73676E6972 && a2 == 0xEB00000000726562 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74646957676E6972 && a2 == 0xE900000000000068 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x70614773676E6972 && a2 == 0xE800000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B16B00 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000249B16B20 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x676E6963617073 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x7465736E69 && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x4449726F6C6F63 && a2 == 0xE700000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000249B16B40 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000249B16B60)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 10;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_2499EAEE0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v32 = a3;
  uint64_t v6 = sub_249AEB548();
  MEMORY[0x270FA5388](v6);
  uint64_t v7 = sub_249AED118();
  MEMORY[0x270FA5388](v7);
  char v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a2 - 8);
  __n128 v14 = MEMORY[0x270FA5388](v11);
  float64x2_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *a1;
  if (v17 != 2)
  {
    uint64_t v35 = a2;
    uint64_t v36 = v32;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v34);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v10 + 16))(boxed_opaque_existential_0, v3, a2);
    sub_249AEB588();
    swift_allocObject();
    sub_249AEB578();
    byte_2696E03A8 = v17;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2198);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_249AFA7A0;
    sub_249AEB528();
    sub_249AEB538();
    uint64_t v37 = v24;
    sub_2499F0654(&qword_2696E21A0, MEMORY[0x263F06130]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21A8);
    sub_2499B77E8();
    sub_249AED998();
    sub_249AEB558();
    __swift_project_boxed_opaque_existential_2Tm(v34, v35);
    uint64_t v20 = sub_249AEB568();
    swift_release();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v34);
    return v20;
  }
  uint64_t v30 = v13;
  uint64_t v31 = v12;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v16, v3, a2, v14);
  type metadata accessor for LuaEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = sub_2498ECB24(MEMORY[0x263F8EE78]);
  byte_2696E03A8 = 2;
  uint64_t v19 = v33;
  uint64_t v20 = inited;
  uint64_t v21 = sub_2499C0BC8();
  if (v19)
  {
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, a2);
    return v20;
  }
  uint64_t v25 = v21;
  unint64_t v26 = v22;
  uint64_t v33 = Data.utf8.getter(v21, v22);
  sub_249882104(v25, v26);
  v34[0] = 0x206E7275746572;
  v34[1] = 0xE700000000000000;
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED108();
  uint64_t v20 = sub_249AED0E8();
  unint64_t v28 = v27;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v9, v31);
  if (v28 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, a2);
    return v20;
  }
  __break(1u);
  return result;
}

id sub_2499EB370(void *a1)
{
  id v2 = v1;
  uint64_t v4 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_249AEB4E8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[1];
  v25[4] = *a1;
  v25[5] = v9;
  void v25[2] = 47;
  v25[3] = 0xE100000000000000;
  v25[0] = 95;
  v25[1] = 0xE100000000000000;
  sub_24988CE30();
  uint64_t v10 = sub_249AED948();
  uint64_t v12 = v11;
  uint64_t v13 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v13 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (!v13)
  {
    swift_bridgeObjectRelease();
    sub_249AEB4C8();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_2499F0654((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_willThrow();
    return v2;
  }
  uint64_t v14 = v10;
  v25[7] = v2;
  id v15 = objc_msgSend(v2, sel_fileWrappers);
  if (!v15)
  {
LABEL_12:
    id v20 = objc_allocWithZone(MEMORY[0x263F08870]);
    sub_24987BE44();
    uint64_t v21 = (void *)sub_249AECE78();
    id v2 = objc_msgSend(v20, sel_initDirectoryWithFileWrappers_, v21);

    unint64_t v22 = (void *)sub_249AED0A8();
    swift_bridgeObjectRelease();
    objc_msgSend(v2, sel_setPreferredFilename_, v22);

    NSFileWrapper.checkedAddFileWrapper(_:)((NSFileWrapper)v2);
    if (!v23)
    {
      swift_bridgeObjectRelease();
      return v2;
    }
    goto LABEL_13;
  }
  float64x2_t v16 = v15;
  sub_24987BE44();
  uint64_t v17 = sub_249AECE98();

  if (!*(void *)(v17 + 16))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_2498EF01C(v14, v12);
  if ((v19 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v2 = *(id *)(*(void *)(v17 + 56) + 8 * v18);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v2, sel_isDirectory) & 1) == 0)
  {
    sub_249AEB4B8();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_2499F0654((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_willThrow();
LABEL_13:
  }
  return v2;
}

uint64_t asLua(codable:)(void *a1)
{
  uint64_t v3 = sub_249AED118();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for LuaEncoder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = sub_2498ECB24(MEMORY[0x263F8EE78]);
  byte_2696E03A8 = 2;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  uint64_t v8 = inited;
  uint64_t v9 = sub_2499C0BC8();
  if (v1)
  {
    swift_bridgeObjectRelease();
    return v8;
  }
  uint64_t v11 = v9;
  unint64_t v12 = v10;
  Data.utf8.getter(v9, v10);
  sub_249882104(v11, v12);
  v16[1] = 0x206E7275746572;
  void v16[2] = 0xE700000000000000;
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  sub_249AED108();
  uint64_t v8 = sub_249AED0E8();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (v14 >> 60 != 15)
  {
    swift_setDeallocating();
    swift_bridgeObjectRelease();
    return v8;
  }
  __break(1u);
  return result;
}

uint64_t DocumentReader.DocumentType.hash(into:)()
{
  return sub_249AEE348();
}

BOOL static DocumentReader.DocumentType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t DocumentReader.DocumentType.hashValue.getter()
{
  return sub_249AEE388();
}

CarPlayAssetUI::DocumentReader __swiftcall DocumentReader.init(fileWrapper:source:)(NSFileWrapper fileWrapper, CarPlayAssetUI::DocumentReader::DocumentType source)
{
  char v3 = *(unsigned char *)source;
  *(NSFileWrapper *)uint64_t v2 = fileWrapper;
  *(unsigned char *)(v2 + 8) = v3;
  result.fileWrapper = fileWrapper;
  result.source = source;
  return result;
}

void DocumentReader.document()(void *a1@<X8>)
{
}

void DocumentReader.document(_:)(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = *(void **)v2;
  char v7 = *(unsigned char *)(v2 + 8);
  NSFileWrapper.data(contentsOf:)(0x2E6567616B636170, 0xEC0000006E6F736ALL);
  if (!v3)
  {
    uint64_t v10 = v8;
    unint64_t v11 = v9;
    int v60 = a2;
    sub_249AEB518();
    swift_allocObject();
    sub_249AEB508();
    sub_2499EBFD0();
    sub_249AEB4F8();
    swift_release();
    id v12 = v6;
    uint64_t v13 = swift_bridgeObjectRetain();
    uint64_t v14 = sub_2499ED974(v13, v12, v7);
    swift_bridgeObjectRelease_n();

    NSFileWrapper.data(contentsOf:)(0x736A2E656D656874, 0xEA00000000006E6FLL);
    uint64_t v38 = v14;
    unint64_t v16 = v15;
    uint64_t v18 = v17;
    swift_allocObject();
    sub_249AEB508();
    sub_24988215C();
    uint64_t v40 = v18;
    sub_249AEB4F8();
    swift_release();
    long long v33 = v42;
    uint64_t v34 = v44;
    uint64_t v35 = v45;
    uint64_t v36 = v46;
    uint64_t v37 = v47;
    if (v43)
    {
      unint64_t v32 = v16;
      uint64_t v31 = v43;
      *(void *)&long long v42 = MEMORY[0x263F8EE88];
      *((void *)&v42 + 1) = MEMORY[0x263F8EE80];
    }
    else
    {
      swift_allocObject();
      if (a1)
      {
        swift_retain();
        sub_249AEB508();
        sub_24988205C();
        unint64_t v32 = v16;
        sub_249AEB4F8();
        swift_release();
        sub_2498B9AB8(a1);
        uint64_t v31 = 0;
        long long v42 = v41;
      }
      else
      {
        sub_249AEB508();
        sub_24988205C();
        sub_249AEB4F8();
        unint64_t v32 = v16;
        swift_release();
        uint64_t v31 = 0;
      }
    }
    long long v39 = v42;
    v19._countAndFlagsBits = 0x736172747845;
    v19._object = (void *)0xE600000000000000;
    unint64_t v20 = (unint64_t)NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v19, 0);
    uint64_t v21 = v49;
    uint64_t v22 = v50;
    uint64_t v23 = v51;
    char v24 = v53;
    uint64_t v25 = v54;
    uint64_t v26 = v55;
    uint64_t v27 = v57;
    uint64_t v28 = v58;
    char v29 = v59;
    uint64_t v30 = v60;
    *int v60 = v48;
    v30[1] = v21;
    void v30[2] = v22;
    v30[3] = v23;
    *((_OWORD *)v30 + 2) = v52;
    *((unsigned char *)v30 + 48) = v24;
    v30[7] = v25;
    unsigned char v30[8] = v26;
    *(_OWORD *)(v30 + 9) = v56;
    v30[11] = v27;
    v30[12] = v28;
    *((unsigned char *)v30 + 104) = v29;
    v30[14] = v38;
    *(_OWORD *)(v30 + 15) = v39;
    v30[24] = v20;
    v30[25] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249882104(v40, v32);
    sub_249882104(v10, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v30 + 17) = v33;
    v30[19] = v31;
    v30[20] = v34;
    v30[21] = v35;
    v30[22] = v36;
    v30[23] = v37;
  }
}

unint64_t sub_2499EBFD0()
{
  unint64_t result = qword_2696E2E88;
  if (!qword_2696E2E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E88);
  }
  return result;
}

uint64_t sub_2499EC024(const void *a1, void *a2, unsigned char *a3)
{
  uint64_t v5 = v3;
  uint64_t v9 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_249AEB4E8();
  uint64_t v33 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v31[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v32, a1, 0x1E0uLL);
  LOBYTE(a3) = *a3;
  uint64_t v13 = v32[1];
  *(void *)(v5 + 16) = v32[0];
  *(void *)(v5 + 24) = v13;
  swift_bridgeObjectRetain();
  sub_2498824DC((uint64_t)v32);
  *(void *)(v5 + 32) = a2;
  *(unsigned char *)(v5 + 48) = (_BYTE)a3;
  uint64_t v14 = *(void *)(v5 + 24);
  v31[0] = *(void *)(v5 + 16);
  v31[1] = v14;
  id v15 = a2;
  swift_bridgeObjectRetain();
  id v16 = sub_2499EB370(v31);
  if (v4)
  {
    swift_bridgeObjectRelease();
LABEL_10:

    swift_bridgeObjectRelease();
    type metadata accessor for DocumentReader.DisplayReader();
    swift_deallocPartialClassInstance();
    return v5;
  }
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  id v30 = v17;
  id v18 = objc_msgSend(v17, sel_fileWrappers);
  if (!v18)
  {
LABEL_9:
    sub_249AEB498();
    sub_2498F0724(MEMORY[0x263F8EE78]);
    sub_2499F0654((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
    sub_249AEB708();
    sub_249AEB458();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v10);
    swift_willThrow();

    goto LABEL_10;
  }
  Swift::String v19 = v18;
  sub_24987BE44();
  uint64_t v20 = sub_249AECE98();

  if (!*(void *)(v20 + 16) || (uint64_t v21 = sub_2498EF01C(0xD000000000000013, 0x8000000249B14260), (v22 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  id v23 = *(id *)(*(void *)(v20 + 56) + 8 * v21);
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v23, sel_regularFileContents);
  if (!v24)
  {

    goto LABEL_9;
  }
  uint64_t v25 = v24;
  uint64_t v26 = sub_249AEB798();
  unint64_t v28 = v27;

  sub_249AEB518();
  swift_allocObject();
  sub_249AEB508();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E21B8);
  sub_2499F0584();
  sub_249AEB4F8();

  sub_249882104(v26, v28);
  swift_release();

  *(void *)(v5 + 40) = v31[0];
  return v5;
}

unint64_t sub_2499EC414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v31 = a2;
  uint64_t v6 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_249AEB4E8();
  unint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v2 + 24);
  v30[0] = *(void *)(v2 + 16);
  v30[1] = v11;
  swift_bridgeObjectRetain();
  id v12 = sub_2499EB370(v30);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    id v29 = v12;
    uint64_t v13 = *(void *)(v4 + 40);
    unint64_t v14 = v8;
    uint64_t v15 = v7;
    uint64_t v16 = v31;
    if (*(void *)(v13 + 16))
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_2498EF01C(a1, v16);
      if (v18)
      {
        uint64_t v19 = v15;
        unint64_t v28 = v8;
        uint64_t v20 = (uint64_t *)(*(void *)(v13 + 56) + 32 * v17);
        uint64_t v22 = *v20;
        uint64_t v21 = (void *)v20[1];
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRelease();
        v23._countAndFlagsBits = v22;
        v23._object = v21;
        id v24 = v29;
        unint64_t v8 = (unint64_t)NSFileWrapper.child(at:)(v23);
        swift_bridgeObjectRelease();
        if (v8)
        {

          swift_bridgeObjectRelease();
          return v8;
        }
        sub_249AEB468();
        __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF520);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
        strcpy((char *)(inited + 32), "resource path");
        *(_WORD *)(inited + 46) = -4864;
        *(void *)(inited + 72) = MEMORY[0x263F8D310];
        *(void *)(inited + 48) = v22;
        *(void *)(inited + 56) = v21;
        unint64_t v14 = v28;
        uint64_t v15 = v19;
LABEL_8:
        sub_2498ECE6C(inited);
        sub_2499F0654((unint64_t *)&qword_2696DDA18, MEMORY[0x263F06060]);
        sub_249AEB708();
        sub_249AEB458();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v10, v15);
        swift_willThrow();

        return v8;
      }
      swift_bridgeObjectRelease();
    }
    sub_249AEB468();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF520);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
    *(void *)(inited + 32) = 0xD000000000000013;
    *(void *)(inited + 40) = 0x8000000249B16C10;
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = a1;
    *(void *)(inited + 56) = v16;
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  return v8;
}

uint64_t sub_2499EC764()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

unint64_t sub_2499EC7AC(uint64_t a1, uint64_t a2)
{
  return sub_2499EC414(a1, a2);
}

uint64_t sub_2499EC7D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2499EC7DC(unsigned char *a1)
{
  return *a1 & 1 | ((*(unsigned char *)(*(void *)v1 + 48) & 1) == 0);
}

void sub_2499EC7F4(void *a1@<X8>)
{
}

void sub_2499EC838(uint64_t a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_2499EC850(uint64_t a1)
{
  return sub_2499EC8B8(a1, qword_2696E2E58);
}

uint64_t static DocumentWriter.builtinScriptsURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2499ECA2C(&qword_2696DD748, (uint64_t)qword_2696E2E58, a1);
}

uint64_t sub_2499EC894(uint64_t a1)
{
  return sub_2499EC8B8(a1, qword_2696E2E70);
}

uint64_t sub_2499EC8B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_249AEB768();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  id v8 = objc_msgSend(self, sel_mainBundle);
  id v9 = objc_msgSend(v8, sel_bundleURL);

  sub_249AEB758();
  sub_249AEB748();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t static DocumentWriter.builtinASCPathsByIdURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_2499ECA2C(&qword_2696DD750, (uint64_t)qword_2696E2E70, a1);
}

uint64_t sub_2499ECA2C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_249AEB768();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v7(a3, v6, v5);
}

id DocumentWriter.fileWrapper.getter()
{
  return *v0;
}

uint64_t DocumentWriter.init(fileWrapper:destination:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = (uint64_t)a3 + *(int *)(type metadata accessor for DocumentWriter(0) + 20);

  return sub_2499EDBA4(a2, v4);
}

void DocumentWriter.write(_:)(long long *a1)
{
  sub_2499EDC28(v3);
  sub_249882788((uint64_t)v3, (uint64_t)v2, &qword_2696DD8A8);
  DocumentWriter.write(_:oldDocument:)(a1, v2);
}

void DocumentWriter.write(_:oldDocument:)(long long *a1, void *a2)
{
  uint64_t v4 = v3;
  id v127 = a2;
  v158[26] = *MEMORY[0x263EF8340];
  uint64_t v110 = type metadata accessor for MetadataExporter();
  MEMORY[0x270FA5388](v110);
  long long v112 = (char *)v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v126 = (void (*)(char *, uint64_t, uint64_t))((char *)v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_249AEB768();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v123 = v9;
  uint64_t v124 = v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v111 = (char *)v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  unint64_t v14 = (char *)v108 - v13;
  MEMORY[0x270FA5388](v15);
  uint64_t v115 = (char *)v108 - v16;
  MEMORY[0x270FA5388](v17);
  uint64_t v117 = (char *)v108 - v18;
  uint64_t v19 = type metadata accessor for DocumentWriter.Destination(0);
  MEMORY[0x270FA5388](v19);
  uint64_t v113 = (uint64_t)v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v114 = (uint64_t)v108 - v22;
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)v108 - v24;
  MEMORY[0x270FA5388](v26);
  unint64_t v28 = (char *)v108 - v27;
  long long v29 = a1[11];
  long long v155 = a1[10];
  long long v156 = v29;
  long long v157 = a1[12];
  long long v30 = a1[7];
  long long v151 = a1[6];
  long long v152 = v30;
  long long v31 = a1[9];
  long long v153 = a1[8];
  long long v154 = v31;
  long long v32 = a1[3];
  long long v147 = a1[2];
  long long v148 = v32;
  long long v33 = a1[5];
  long long v149 = a1[4];
  long long v150 = v33;
  long long v34 = a1[1];
  long long v145 = *a1;
  long long v146 = v34;
  sub_249882788((uint64_t)v127, (uint64_t)v158, &qword_2696DD8A8);
  id v127 = *v2;
  uint64_t v121 = (uint64_t)v2 + *(int *)(type metadata accessor for DocumentWriter(0) + 20);
  sub_2499EDC4C(v121, (uint64_t)v28);
  uint64_t v122 = v19;
  uint64_t v35 = v14;
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  long long v125 = v14;
  if (!EnumCaseMultiPayload)
  {
    int v116 = 0;
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    int v116 = 1;
LABEL_5:
    uint64_t v38 = v123;
    uint64_t v37 = v124;
    id v39 = v127;
    sub_249964A2C((uint64_t)v28);
    id v40 = v39;
    goto LABEL_8;
  }
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
  long long v42 = &v28[*(int *)(v41 + 48)];
  uint64_t v43 = &v28[*(int *)(v41 + 64)];
  uint64_t v44 = *(void (**)(char *, uint64_t))(v124 + 8);
  id v45 = v127;
  uint64_t v46 = v43;
  uint64_t v47 = v123;
  v44(v46, v123);
  v44(v42, v47);
  sub_249964A2C((uint64_t)v28);
  id v48 = v45;
  v49._countAndFlagsBits = 114;
  v49._object = (void *)0xE100000000000000;
  unint64_t v50 = (unint64_t)NSFileWrapper.directory(at:creatingIntermediateDirectories:)(v49, 1);
  if (!v50)
  {
    sub_249AEDC58();
    __break(1u);
    return;
  }
  id v40 = (id)v50;

  int v116 = 2;
  uint64_t v4 = v3;
  uint64_t v38 = v123;
  uint64_t v37 = v124;
  uint64_t v35 = v125;
LABEL_8:
  uint64_t v51 = (uint64_t)v126;
  sub_2499EDC4C(v121, (uint64_t)v25);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
    char v53 = &v25[*(int *)(v52 + 64)];
    uint64_t v54 = v117;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v117, &v25[*(int *)(v52 + 48)], v38);
    long long v56 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
    uint64_t v55 = v37 + 8;
    uint64_t v57 = v53;
    uint64_t v58 = (uint64_t)v54;
    char v59 = v56;
    v56((uint64_t)v57, v38);
    sub_249964A2C((uint64_t)v25);
    LOBYTE(v132) = 1;
    unint64_t v60 = (unint64_t)sub_249880F10(v58, (unsigned __int8 *)&v132);
    if (v4)
    {
      v59(v58, v38);

      return;
    }
    unint64_t v62 = v60;
    v108[0] = v59;
    id v61 = v127;
    unint64_t v120 = v60;
    if (v60 >> 62) {
      goto LABEL_47;
    }
    uint64_t v63 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_14:
    uint64_t v35 = v125;
    v108[1] = v55;
    id v109 = v40;
    if (v63)
    {
      id v118 = (id)v63;
      unint64_t v119 = v62 & 0xC000000000000001;
      uint64_t v55 = 4;
      do
      {
        if (v119) {
          id v64 = (id)MEMORY[0x24C5AEC50](v55 - 4, v62);
        }
        else {
          id v64 = *(id *)(v62 + 8 * v55);
        }
        uint64_t v65 = v64;
        id v40 = (id)(v55 - 3);
        if (__OFADD__(v55 - 4, 1))
        {
          __break(1u);
LABEL_47:
          swift_bridgeObjectRetain();
          uint64_t v63 = sub_249AEDC78();
          swift_bridgeObjectRelease();
          unint64_t v62 = v120;
          goto LABEL_14;
        }
        id v66 = objc_msgSend(v64, sel_filename, v108[0]);
        if (!v66) {
          __break(1u);
        }
        uint64_t v67 = v66;
        uint64_t v68 = sub_249AED0D8();
        uint64_t v70 = v69;

        id v71 = objc_msgSend(v61, sel_fileWrappers);
        if (v71)
        {
          unint64_t v72 = v71;
          sub_24987BE44();
          uint64_t v73 = sub_249AECE98();

          if (*(void *)(v73 + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v74 = sub_2498EF01C(v68, v70);
            if (v75)
            {
              id v76 = *(id *)(*(void *)(v73 + 56) + 8 * v74);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              id v77 = v127;
              objc_msgSend(v127, sel_removeFileWrapper_, v76);
              swift_bridgeObjectRelease();

              id v61 = v77;
              uint64_t v35 = v125;
              goto LABEL_29;
            }
            swift_bridgeObjectRelease_n();
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v35 = v125;
        id v61 = v127;
LABEL_29:
        NSFileWrapper.checkedAddFileWrapper(_:)((NSFileWrapper)v65);
        uint64_t v4 = v78;
        uint64_t v51 = (uint64_t)v126;
        if (v78)
        {
          swift_bridgeObjectRelease();

          ((void (*)(char *, uint64_t))v108[0])(v117, v123);
          return;
        }

        swift_bridgeObjectRelease();
        ++v55;
        unint64_t v62 = v120;
      }
      while (v40 != v118);
    }
    swift_bridgeObjectRelease();
    uint64_t v38 = v123;
    ((void (*)(char *, uint64_t))v108[0])(v117, v123);
    uint64_t v37 = v124;
    id v40 = v109;
  }
  else
  {
    sub_2499EDCB0((uint64_t)v25, type metadata accessor for DocumentWriter.Destination);
    id v61 = v127;
  }
  id v128 = v61;
  char v129 = v116;
  id v130 = v40;
  long long v142 = v155;
  long long v143 = v156;
  long long v144 = v157;
  long long v138 = v151;
  long long v139 = v152;
  long long v140 = v153;
  long long v141 = v154;
  long long v134 = v147;
  long long v135 = v148;
  long long v136 = v149;
  long long v137 = v150;
  long long v132 = v145;
  long long v133 = v146;
  sub_249882788((uint64_t)v158, (uint64_t)v131, &qword_2696DD8A8);
  ArcPackageExporter.update(document:oldDocument:)((uint64_t)&v132, (uint64_t)v131);
  if (v4)
  {
  }
  else
  {
    uint64_t v79 = v114;
    sub_2499EDC4C(v121, v114);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
      uint64_t v81 = v79;
      uint64_t v82 = v79 + *(int *)(v80 + 48);
      uint64_t v83 = v81 + *(int *)(v80 + 64);
      sub_249882788(v81, v51, &qword_2696E0AC8);
      uint64_t v84 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
      uint64_t v85 = v83;
      id v61 = v127;
      v84(v85, v38);
      v84(v82, v38);
      uint64_t v51 = (uint64_t)v126;
      uint64_t v37 = v124;
    }
    else
    {
      sub_249882788(v79, v51, &qword_2696E0AC8);
    }
    uint64_t v86 = v115;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v51, 1, v38) == 1)
    {

      sub_249964A2C(v51);
    }
    else
    {
      id v109 = v40;
      uint64_t v126 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 32);
      v126(v86, v51, v38);
      char v87 = (void *)sub_249AEB738();
      *(void *)&long long v132 = 0;
      unsigned int v88 = objc_msgSend(v61, sel_writeToURL_options_originalContentsURL_error_, v87, 1, 0, &v132);

      int v89 = (void *)v132;
      if (v88)
      {
        uint64_t v90 = v113;
        sub_2499EDC4C(v121, v113);
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
          uint64_t v92 = v90;
          uint64_t v122 = v90 + *(int *)(v91 + 48);
          v126(v35, v90 + *(int *)(v91 + 64), v38);
          uint64_t v93 = v124;
          uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 8);
          uint64_t v123 = v124 + 8;
          id v95 = v89;
          uint64_t v126 = v94;
          ((void (*)(uint64_t, uint64_t))v94)(v122, v38);
          sub_249964A2C(v92);
          uint64_t v96 = v111;
          sub_249AEB748();
          uint64_t v97 = v110;
          uint64_t v98 = v112;
          uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
          v99(&v112[*(int *)(v110 + 20)], v35, v38);
          v99(&v98[*(int *)(v97 + 24)], v96, v38);
          id v100 = objc_allocWithZone(MEMORY[0x263F08870]);
          sub_24987BE44();
          uint64_t v101 = (void *)sub_249AECE78();
          id v102 = objc_msgSend(v100, sel_initDirectoryWithFileWrappers_, v101);

          uint64_t v90 = (uint64_t)v98;
          *(void *)uint64_t v98 = v102;
          long long v142 = v155;
          long long v143 = v156;
          long long v144 = v157;
          long long v138 = v151;
          long long v139 = v152;
          long long v140 = v153;
          long long v141 = v154;
          long long v134 = v147;
          long long v135 = v148;
          long long v136 = v149;
          long long v137 = v150;
          long long v132 = v145;
          long long v133 = v146;
          MetadataExporter.write(_:)((uint64_t)&v132);

          uint64_t v103 = (void (*)(char *, uint64_t))v126;
          ((void (*)(char *, uint64_t))v126)(v96, v38);
          v103(v125, v38);
          v103(v115, v38);
          uint64_t v104 = (uint64_t (*)(void))type metadata accessor for MetadataExporter;
        }
        else
        {
          uint64_t v106 = *(void (**)(char *, uint64_t))(v124 + 8);
          id v107 = v89;
          v106(v115, v38);

          uint64_t v104 = type metadata accessor for DocumentWriter.Destination;
        }
        sub_2499EDCB0(v90, v104);
      }
      else
      {
        id v105 = (id)v132;
        sub_249AEB718();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v86, v38);
      }
    }
  }
}

uint64_t DocumentWriter.Destination.outputURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DocumentWriter.Destination(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2499EDC4C(v2, (uint64_t)v6);
  if (swift_getEnumCaseMultiPayload() <= 1) {
    return sub_249882788((uint64_t)v6, a1, &qword_2696E0AC8);
  }
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
  uint64_t v9 = &v6[*(int *)(v8 + 48)];
  uint64_t v10 = &v6[*(int *)(v8 + 64)];
  sub_249882788((uint64_t)v6, a1, &qword_2696E0AC8);
  uint64_t v11 = sub_249AEB768();
  uint64_t v12 = *(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  return ((uint64_t (*)(char *, uint64_t))v12)(v9, v11);
}

void sub_2499ED914(long long *a1)
{
  sub_2499EDC28(v3);
  sub_249882788((uint64_t)v3, (uint64_t)v2, &qword_2696DD8A8);
  DocumentWriter.write(_:oldDocument:)(a1, v2);
}

uint64_t sub_2499ED974(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  id v22 = a2;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  if (v5)
  {
    char v15 = a3 & 1;
    uint64_t v21 = MEMORY[0x263F8EE78];
    sub_249A21E88(0, v5, 0);
    uint64_t v6 = v21;
    uint64_t v8 = (char *)(a1 + 32);
    uint64_t v9 = type metadata accessor for DocumentReader.DisplayReader();
    for (int64_t i = v5 - 1; ; --i)
    {
      memcpy(__dst, v8, sizeof(__dst));
      memcpy(__src, v8, sizeof(__src));
      memcpy(v17, v8, sizeof(v17));
      char v16 = v15;
      swift_allocObject();
      sub_249882274((uint64_t)__dst);
      sub_249882274((uint64_t)__dst);
      sub_249882274((uint64_t)__dst);
      uint64_t v11 = sub_2499EC024(v17, v22, &v16);
      if (v4) {
        break;
      }
      void v18[3] = v9;
      v18[4] = &off_26FDAE088;
      v18[0] = v11;
      Display.restoreAssets(from:)(v18);
      uint64_t v4 = 0;
      __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v18);
      sub_2498824DC((uint64_t)__dst);
      memcpy(v17, __src, sizeof(v17));
      uint64_t v21 = v6;
      unint64_t v13 = *(void *)(v6 + 16);
      unint64_t v12 = *(void *)(v6 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_249A21E88(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v21;
      }
      *(void *)(v6 + 16) = v13 + 1;
      memcpy((void *)(v6 + 480 * v13 + 32), v17, 0x1E0uLL);
      if (!i) {
        return v6;
      }
      v8 += 480;
    }
    sub_2498824DC((uint64_t)__dst);
    sub_2498824DC((uint64_t)__dst);
    swift_release();
  }
  return v6;
}

uint64_t type metadata accessor for DocumentWriter(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E2EA0);
}

uint64_t sub_2499EDBA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DocumentWriter.Destination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for DocumentWriter.Destination(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E2EB0);
}

double sub_2499EDC28(_OWORD *a1)
{
  double result = 0.0;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_2499EDC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DocumentWriter.Destination(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499EDCB0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_2499EDD14()
{
  unint64_t result = qword_2696E2E98;
  if (!qword_2696E2E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2E98);
  }
  return result;
}

uint64_t dispatch thunk of AssetReading.asset(identifier:type:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of AssetReading.manifestEntries.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of AssetReading.canRestoreAssets(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DocumentReading.document()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DocumentReading.document(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of DocumentWriting.write(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for DocumentReader(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

void destroy for DocumentReader(id *a1)
{
}

uint64_t assignWithCopy for DocumentReader(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  int64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for DocumentReader(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentReader(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DocumentReader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentReader()
{
  return &type metadata for DocumentReader;
}

unsigned char *storeEnumTagSinglePayload for DocumentReader.DocumentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499EE060);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DocumentReader.DocumentType()
{
  return &type metadata for DocumentReader.DocumentType;
}

uint64_t type metadata accessor for DocumentReader.DisplayReader()
{
  return self;
}

void **initializeBufferWithCopyOfBuffer for DocumentWriter(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    type metadata accessor for DocumentWriter.Destination(0);
    uint64_t v9 = v4;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_249AEB768();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(v7, v8, *(void *)(*(void *)(v15 - 8) + 64));
        char v16 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
      }
      else
      {
        char v16 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
        v16(v7, v8, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v7, 0, 1, v13);
      }
      uint64_t v18 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
      v16(&v7[v18[12]], &v8[v18[12]], v13);
      v16(&v7[v18[16]], &v8[v18[16]], v13);
      v7[v18[20]] = v8[v18[20]];
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = sub_249AEB768();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11)) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v11 = sub_249AEB768();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11))
      {
LABEL_10:
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        return v5;
      }
    }
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v7, v8, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v7, 0, 1, v11);
    goto LABEL_15;
  }
  uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  swift_retain();
  return v5;
}

uint64_t destroy for DocumentWriter(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 20);
  type metadata accessor for DocumentWriter.Destination(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v7 = sub_249AEB768();
    uint64_t v14 = *(void *)(v7 - 8);
    int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v4, 1, v7);
    uint64_t v12 = *(void (**)(char *, uint64_t))(v14 + 8);
    if (!v8) {
      v12(v4, v7);
    }
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
    v12(&v4[*(int *)(v9 + 48)], v7);
    uint64_t v10 = &v4[*(int *)(v9 + 64)];
    return ((uint64_t (*)(char *, uint64_t))v12)(v10, v7);
  }
  else if (result <= 1)
  {
    uint64_t v6 = sub_249AEB768();
    uint64_t v13 = *(void *)(v6 - 8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v4, 1, v6);
    if (!result)
    {
      uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v13 + 8);
      return v11(v4, v6);
    }
  }
  return result;
}

void **initializeWithCopy for DocumentWriter(void **a1, void **a2, uint64_t a3)
{
  unsigned int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  type metadata accessor for DocumentWriter.Destination(0);
  id v8 = v4;
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v12 = sub_249AEB768();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
      memcpy(v6, v7, *(void *)(*(void *)(v14 - 8) + 64));
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    }
    else
    {
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
      v15(v6, v7, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v6, 0, 1, v12);
    }
    char v16 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
    v15(&v6[v16[12]], &v7[v16[12]], v12);
    v15(&v6[v16[16]], &v7[v16[16]], v12);
    v6[v16[20]] = v7[v16[20]];
  }
  else
  {
    uint64_t v9 = sub_249AEB768();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
      memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithCopy for DocumentWriter(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_2499EDCB0((uint64_t)a1 + v9, type metadata accessor for DocumentWriter.Destination);
    type metadata accessor for DocumentWriter.Destination(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v15 = sub_249AEB768();
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v11, 1, v15))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
      }
      else
      {
        uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
        v18(v10, v11, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v10, 0, 1, v15);
      }
      uint64_t v19 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
      v18(&v10[v19[12]], &v11[v19[12]], v15);
      v18(&v10[v19[16]], &v11[v19[16]], v15);
      v10[v19[20]] = v11[v19[20]];
    }
    else
    {
      uint64_t v12 = sub_249AEB768();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for DocumentWriter(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  type metadata accessor for DocumentWriter.Destination(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v10 = sub_249AEB768();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
      memcpy(v5, v6, *(void *)(*(void *)(v12 - 8) + 64));
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    }
    else
    {
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v13(v5, v6, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
    }
    uint64_t v14 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
    v13(&v5[v14[12]], &v6[v14[12]], v10);
    v13(&v5[v14[16]], &v6[v14[16]], v10);
    v5[v14[20]] = v6[v14[20]];
  }
  else
  {
    uint64_t v7 = sub_249AEB768();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
      memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **assignWithTake for DocumentWriter(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_2499EDCB0((uint64_t)a1 + v7, type metadata accessor for DocumentWriter.Destination);
    type metadata accessor for DocumentWriter.Destination(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v13 = sub_249AEB768();
      uint64_t v14 = *(void *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      }
      else
      {
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
        v16(v8, v9, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v8, 0, 1, v13);
      }
      uint64_t v17 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
      v16(&v8[v17[12]], &v9[v17[12]], v13);
      v16(&v8[v17[16]], &v9[v17[16]], v13);
      v8[v17[20]] = v9[v17[20]];
    }
    else
    {
      uint64_t v10 = sub_249AEB768();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for DocumentWriter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499EF1F4);
}

uint64_t sub_2499EF1F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DocumentWriter.Destination(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for DocumentWriter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499EF2B8);
}

void *sub_2499EF2B8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DocumentWriter.Destination(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_2499EF360()
{
  uint64_t result = type metadata accessor for DocumentWriter.Destination(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DocumentWriter.Destination(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = sub_249AEB768();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        uint64_t v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16);
      }
      else
      {
        uint64_t v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v11 + 16);
        v13(a1, a2, v10);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      uint64_t v15 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
      v13((uint64_t *)((char *)a1 + v15[12]), (uint64_t *)((char *)a2 + v15[12]), v10);
      v13((uint64_t *)((char *)a1 + v15[16]), (uint64_t *)((char *)a2 + v15[16]), v10);
      *((unsigned char *)a1 + v15[20]) = *((unsigned char *)a2 + v15[20]);
      goto LABEL_15;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = sub_249AEB768();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7)) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v7 = sub_249AEB768();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
LABEL_10:
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_15:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
    }
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    goto LABEL_15;
  }
  uint64_t v9 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t destroy for DocumentWriter.Destination(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v4 = sub_249AEB768();
    uint64_t v11 = *(void *)(v4 - 8);
    int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a1, 1, v4);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    if (!v5) {
      v9(a1, v4);
    }
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
    v9(a1 + *(int *)(v6 + 48), v4);
    uint64_t v7 = a1 + *(int *)(v6 + 64);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v4);
  }
  else if (result <= 1)
  {
    uint64_t v3 = sub_249AEB768();
    uint64_t v10 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v3);
    if (!result)
    {
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      return v8(a1, v3);
    }
  }
  return result;
}

char *initializeWithCopy for DocumentWriter.Destination(char *a1, char *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = sub_249AEB768();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    }
    else
    {
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      v10(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
    v10(&a1[v11[12]], &a2[v11[12]], v7);
    v10(&a1[v11[16]], &a2[v11[16]], v7);
    a1[v11[20]] = a2[v11[20]];
  }
  else
  {
    uint64_t v4 = sub_249AEB768();
    uint64_t v5 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithCopy for DocumentWriter.Destination(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_2499EDCB0((uint64_t)a1, type metadata accessor for DocumentWriter.Destination);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = sub_249AEB768();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
      }
      else
      {
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
        v10(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
      v10(&a1[v11[12]], &a2[v11[12]], v7);
      v10(&a1[v11[16]], &a2[v11[16]], v7);
      a1[v11[20]] = a2[v11[20]];
    }
    else
    {
      uint64_t v4 = sub_249AEB768();
      uint64_t v5 = *(void *)(v4 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(a1, a2, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *initializeWithTake for DocumentWriter.Destination(char *a1, char *a2)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v7 = sub_249AEB768();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    }
    else
    {
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      v10(a1, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
    v10(&a1[v11[12]], &a2[v11[12]], v7);
    v10(&a1[v11[16]], &a2[v11[16]], v7);
    a1[v11[20]] = a2[v11[20]];
  }
  else
  {
    uint64_t v4 = sub_249AEB768();
    uint64_t v5 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
    {
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *assignWithTake for DocumentWriter.Destination(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_2499EDCB0((uint64_t)a1, type metadata accessor for DocumentWriter.Destination);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = sub_249AEB768();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
      }
      else
      {
        uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
        v10(a1, a2, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      uint64_t v11 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2E90);
      v10(&a1[v11[12]], &a2[v11[12]], v7);
      v10(&a1[v11[16]], &a2[v11[16]], v7);
      a1[v11[20]] = a2[v11[20]];
    }
    else
    {
      uint64_t v4 = sub_249AEB768();
      uint64_t v5 = *(void *)(v4 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(a2, 1, v4))
      {
        uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0AC8);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(a1, a2, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_2499F043C()
{
  sub_2499F052C();
  if (v1 <= 0x3F)
  {
    uint64_t v4 = *(void *)(v0 - 8) + 64;
    uint64_t v5 = v4;
    sub_249AEB768();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout();
      uint64_t v6 = &v3;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_2499F052C()
{
  if (!qword_2696E2EC0)
  {
    sub_249AEB768();
    unint64_t v0 = sub_249AED8D8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E2EC0);
    }
  }
}

unint64_t sub_2499F0584()
{
  unint64_t result = qword_2696E2EC8;
  if (!qword_2696E2EC8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E21B8);
    sub_2499F0600();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2EC8);
  }
  return result;
}

unint64_t sub_2499F0600()
{
  unint64_t result = qword_2696E2ED0;
  if (!qword_2696E2ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2ED0);
  }
  return result;
}

uint64_t sub_2499F0654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2499F06A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

CarPlayAssetUI::AssetType_optional __swiftcall AssetType.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  uint64_t v3 = sub_249AEDCF8();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t AssetType.rawValue.getter()
{
  if (*v0) {
    return 1953394534;
  }
  else {
    return 0x6567616D69;
  }
}

uint64_t sub_2499F0790()
{
  return sub_249AEE388();
}

uint64_t sub_2499F0808()
{
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2499F086C()
{
  return sub_249AEE388();
}

CarPlayAssetUI::AssetType_optional sub_2499F08E0(Swift::String *a1)
{
  return AssetType.init(rawValue:)(*a1);
}

void sub_2499F08EC(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1953394534;
  if (!*v1) {
    uint64_t v2 = 0x6567616D69;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_2499F0920()
{
  return sub_249AED3A8();
}

uint64_t sub_2499F0980()
{
  return sub_249AED348();
}

uint64_t sub_2499F09D0(char *a1, char *a2)
{
  return sub_2498F28C0(*a1, *a2);
}

uint64_t AssetDestination.rawValue.getter()
{
  return *(void *)v0;
}

CarPlayAssetUI::AssetDestination __swiftcall AssetDestination.init(rawValue:)(CarPlayAssetUI::AssetDestination rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static AssetDestination.phoneAsset.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static AssetDestination.accessoryAsset.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static AssetDestination.arc.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void sub_2499F0A10()
{
  uint64_t v0 = unk_26FDA0868;
  if ((unk_26FDA0868 & ~qword_26FDA0860) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = qword_26FDA0870;
  if ((qword_26FDA0870 & ~(v0 | qword_26FDA0860)) == 0) {
    uint64_t v1 = 0;
  }
  qword_2696E2ED8 = v1 | v0 | qword_26FDA0860;
}

uint64_t static AssetDestination.all.getter@<X0>(void *a1@<X8>)
{
  if (qword_2696DD758 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_2696E2ED8;
  return result;
}

unint64_t sub_2499F0AA4()
{
  unint64_t result = qword_2696E2EE0;
  if (!qword_2696E2EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2EE0);
  }
  return result;
}

unint64_t sub_2499F0AFC()
{
  unint64_t result = qword_2696E2EE8;
  if (!qword_2696E2EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2EE8);
  }
  return result;
}

unint64_t sub_2499F0B54()
{
  unint64_t result = qword_2696E2EF0;
  if (!qword_2696E2EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2EF0);
  }
  return result;
}

uint64_t sub_2499F0BA8()
{
  return sub_249AED3B8();
}

uint64_t sub_2499F0C08()
{
  return sub_249AED358();
}

unint64_t sub_2499F0C5C()
{
  unint64_t result = qword_2696E2EF8;
  if (!qword_2696E2EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2EF8);
  }
  return result;
}

uint64_t sub_2499F0CB0()
{
  return sub_249AEE388();
}

uint64_t sub_2499F0CF8()
{
  return sub_249AEE348();
}

uint64_t sub_2499F0D24()
{
  return sub_249AEE388();
}

unint64_t sub_2499F0D6C()
{
  unint64_t result = qword_2696E2F00;
  if (!qword_2696E2F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2F00);
  }
  return result;
}

uint64_t sub_2499F0DC0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_2499F06A4(a1, a2);
}

unsigned char *storeEnumTagSinglePayload for AssetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499F0EA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetType()
{
  return &type metadata for AssetType;
}

ValueMetadata *type metadata accessor for AssetDestination()
{
  return &type metadata for AssetDestination;
}

uint64_t dispatch thunk of Asset.identifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of Asset.assetType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of Asset.destination.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of Asset.preferredFilename.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of Asset.generateAsset(destination:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of Asset.restore(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of AssetContainer.assets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of AssetContainer.restoreAssets(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

unint64_t sub_2499F0FB4()
{
  unint64_t result = qword_2696E2F08;
  if (!qword_2696E2F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2F08);
  }
  return result;
}

double sub_2499F1008@<D0>(_OWORD *a1@<X8>)
{
  sub_2499888F0();
  sub_249AEBFF8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_2499F1058(uint64_t *a1)
{
  return sub_249AEC008();
}

double sub_2499F10AC()
{
  return sub_2499F10FC();
}

double sub_2499F10C0()
{
  return sub_2499F10FC();
}

double sub_2499F10D4()
{
  return sub_2499F10FC();
}

double sub_2499F10E8()
{
  return sub_2499F10FC();
}

double sub_2499F10FC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  return v1;
}

_OWORD *sub_2499F1168()
{
  v0[1] = xmmword_249B03B20;
  v0[2] = xmmword_249AFEB80;
  v0[3] = xmmword_249B03B30;
  v0[4] = xmmword_249B03B40;
  swift_beginAccess();
  sub_249AEB9A8();
  swift_endAccess();
  swift_beginAccess();
  sub_249AEB9A8();
  swift_endAccess();
  swift_beginAccess();
  sub_249AEB9A8();
  swift_endAccess();
  swift_beginAccess();
  sub_249AEB9A8();
  swift_endAccess();
  return v0;
}

uint64_t sub_2499F12BC()
{
  return sub_249AEB9F8();
}

uint64_t sub_2499F1398()
{
  return sub_249AEB9F8();
}

uint64_t LayoutTreatment.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__saturation;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F18);
  long long v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__blur, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__scale, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__blackOpacity, v2);
  return v0;
}

uint64_t LayoutTreatment.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__saturation;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F18);
  long long v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  v3(v1, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__blur, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__scale, v2);
  v3(v0 + OBJC_IVAR____TtC14CarPlayAssetUI15LayoutTreatment__blackOpacity, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_2499F1650@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for LayoutTreatment(0);
  uint64_t result = sub_249AEB978();
  *a1 = result;
  return result;
}

uint64_t sub_2499F1690()
{
  type metadata accessor for LayoutTreatment(0);
  uint64_t v0 = swift_allocObject();
  sub_2499F1168();
  return v0;
}

uint64_t LayoutView.init(layout:displaySize:displayID:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>, double a5@<D1>)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = swift_getKeyPath();
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 0;
  type metadata accessor for ClusterTransitionCoordinator(0);
  sub_2499F5990(&qword_2696E1C88, (void (*)(uint64_t))type metadata accessor for ClusterTransitionCoordinator);
  *(void *)(a3 + 40) = sub_249AEBE18();
  *(void *)(a3 + 48) = v18;
  *(void *)(a3 + 56) = swift_getKeyPath();
  *(unsigned char *)(a3 + 64) = 0;
  uint64_t v19 = (int *)type metadata accessor for LayoutView(0);
  uint64_t v20 = (uint64_t *)(a3 + v19[8]);
  *uint64_t v20 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a3 + v19[9];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(unsigned char *)(v21 + 8) = 0;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 1, 1, v22);
  sub_2498D6084((uint64_t)v15, (uint64_t)v12, &qword_2696DF8C8);
  sub_249AECA48();
  sub_2498D60E8((uint64_t)v15, &qword_2696DF8C8);
  uint64_t v23 = a3 + v19[11];
  *(void *)uint64_t v23 = sub_2499F1690;
  *(void *)(v23 + 8) = 0;
  *(unsigned char *)(v23 + 16) = 0;
  uint64_t result = sub_2499F4F1C(a1, a3 + v19[12], (uint64_t (*)(void))type metadata accessor for Layout);
  uint64_t v25 = (double *)(a3 + v19[13]);
  *uint64_t v25 = a4;
  v25[1] = a5;
  uint64_t v26 = (void *)(a3 + v19[14]);
  *uint64_t v26 = v16;
  v26[1] = v17;
  return result;
}

double sub_2499F1964@<D0>(_OWORD *a1@<X8>)
{
  sub_2499888F0();
  sub_249AEBFF8();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t type metadata accessor for LayoutView(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E30A0);
}

uint64_t LayoutView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v69 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F38);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v65 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_249AEB808();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v52 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for LayoutView(0);
  uint64_t v6 = *(void *)(v70 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v70);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F48);
  MEMORY[0x270FA5388](v55);
  uint64_t v12 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F50);
  MEMORY[0x270FA5388](v56);
  uint64_t v59 = (uint64_t)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F58);
  MEMORY[0x270FA5388](v57);
  uint64_t v58 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F60);
  MEMORY[0x270FA5388](v61);
  uint64_t v64 = (uint64_t)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F68);
  uint64_t v62 = *(void *)(v16 - 8);
  uint64_t v63 = v16;
  MEMORY[0x270FA5388](v16);
  unint64_t v60 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v10 = sub_249AECC28();
  v10[1] = v18;
  uint64_t v19 = (char *)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F70) + 44);
  uint64_t v20 = *(void *)(v1 + 56);
  uint64_t v21 = *(unsigned __int8 *)(v1 + 64);
  j__swift_retain();
  uint64_t v22 = sub_2499A619C(v20, v21);
  j_j__swift_release(v20, v21);
  uint64_t v67 = v7;
  uint64_t v68 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v6;
  if (v22)
  {
    uint64_t v23 = v2 + *(int *)(v70 + 48);
    *(void *)&long long v71 = *(void *)(v23 + *(int *)(type metadata accessor for Layout() + 24));
    sub_2499F7D38(v2, (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for LayoutView);
    unint64_t v24 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v25 = swift_allocObject();
    sub_2499F4F1C((uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, type metadata accessor for LayoutView);
    *(void *)(v25 + ((v7 + v24 + 7) & 0xFFFFFFFFFFFFFFF8)) = v22;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0CF8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2FE8);
    sub_2498D0A3C(&qword_2696E2FF0, &qword_2696E0CF8);
    sub_2499F563C();
    sub_2499F5990(&qword_2696E3078, (void (*)(uint64_t))type metadata accessor for Zone);
    sub_249AECB58();
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F78);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v19, 0, 1, v26);
  }
  else
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F78);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v19, 1, 1, v27);
  }
  *(void *)&long long v71 = 0x3A74756F79616CLL;
  *((void *)&v71 + 1) = 0xE700000000000000;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v2 + *(int *)(v70 + 48), v54);
  sub_249AED128();
  sub_249AED1E8();
  swift_bridgeObjectRelease();
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15768]), sel_init);
  long long v29 = (void *)sub_249AED0A8();
  swift_bridgeObjectRelease();
  objc_msgSend(v28, sel_setIdentifier_, v29);

  objc_msgSend(v28, sel_setCornerRadius_, 0.0);
  uint64_t v30 = sub_249AECC28();
  uint64_t v32 = v31;
  sub_2498D6084((uint64_t)v10, (uint64_t)v12, &qword_2696E2F40);
  long long v33 = &v12[*(int *)(v55 + 36)];
  *(void *)long long v33 = v28;
  *((void *)v33 + 1) = v30;
  *((void *)v33 + 2) = v32;
  sub_2498D60E8((uint64_t)v10, &qword_2696E2F40);
  sub_249AECC28();
  sub_249AEBBE8();
  uint64_t v34 = v59;
  sub_2498D6084((uint64_t)v12, v59, &qword_2696E2F48);
  uint64_t v35 = (_OWORD *)(v34 + *(int *)(v56 + 36));
  long long v36 = v72;
  *uint64_t v35 = v71;
  v35[1] = v36;
  v35[2] = v73;
  sub_2498D60E8((uint64_t)v12, &qword_2696E2F48);
  uint64_t v37 = (uint64_t)v65;
  sub_2499F2FC4();
  uint64_t v38 = sub_249AECC28();
  uint64_t v40 = v39;
  uint64_t v41 = (uint64_t)v58;
  uint64_t v42 = (uint64_t)&v58[*(int *)(v57 + 36)];
  sub_2498D6084(v37, v42, &qword_2696E2F38);
  uint64_t v43 = (uint64_t *)(v42 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F80) + 36));
  *uint64_t v43 = v38;
  v43[1] = v40;
  sub_2498D6084(v34, v41, &qword_2696E2F50);
  sub_2498D60E8(v37, &qword_2696E2F38);
  sub_2498D60E8(v34, &qword_2696E2F50);
  uint64_t v44 = v64;
  sub_2498D6084(v41, v64, &qword_2696E2F58);
  *(_WORD *)(v44 + *(int *)(v61 + 36)) = 0;
  sub_2498D60E8(v41, &qword_2696E2F58);
  if (*(void *)(v2 + 40))
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = v2;
    uint64_t v46 = v68;
    sub_2499F7D38(v45, v68, type metadata accessor for LayoutView);
    unint64_t v47 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
    uint64_t v48 = swift_allocObject();
    sub_2499F4F1C(v46, v48 + v47, type metadata accessor for LayoutView);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC58);
    sub_2499F4FE4();
    sub_2499F520C();
    Swift::String v49 = v60;
    sub_249AEC7C8();
    swift_release();
    swift_bridgeObjectRelease();
    sub_2498D60E8(v44, &qword_2696E2F60);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v62 + 32))(v69, v49, v63);
  }
  else
  {
    type metadata accessor for ClusterTransitionCoordinator(0);
    sub_2499F5990(&qword_2696E1C88, (void (*)(uint64_t))type metadata accessor for ClusterTransitionCoordinator);
    uint64_t result = sub_249AEBE08();
    __break(1u);
  }
  return result;
}

uint64_t sub_2499F23F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v82 = a3;
  uint64_t v97 = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v95 = *(void *)(v6 - 8);
  uint64_t v96 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v77 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E30C0);
  MEMORY[0x270FA5388](v91);
  uint64_t v92 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v78 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v90 = (char *)&v76 - v12;
  MEMORY[0x270FA5388](v13);
  uint64_t v89 = (uint64_t)&v76 - v14;
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3050);
  MEMORY[0x270FA5388](v81);
  uint64_t v16 = (uint64_t *)((char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCA8);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3038);
  MEMORY[0x270FA5388](v80);
  uint64_t v21 = (uint64_t *)((char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3028);
  MEMORY[0x270FA5388](v83);
  uint64_t v23 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3018);
  MEMORY[0x270FA5388](v84);
  uint64_t v86 = (uint64_t)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3008);
  MEMORY[0x270FA5388](v85);
  uint64_t v87 = (uint64_t)&v76 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2FE8);
  MEMORY[0x270FA5388](v93);
  uint64_t v94 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for Zone();
  MEMORY[0x270FA5388](v79);
  id v28 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = a1;
  sub_2499F7D38(a1, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for Zone);
  uint64_t v98 = a2;
  uint64_t v29 = *(void *)(a2 + 40);
  if (v29)
  {
    type metadata accessor for ZoneModel();
    swift_allocObject();
    swift_retain();
    swift_retain();
    uint64_t v30 = sub_249902584((uint64_t)v28, v29);
    swift_release();
    swift_release();
    sub_2499F5990(&qword_2696E30C8, (void (*)(uint64_t))type metadata accessor for ZoneModel);
    swift_retain();
    uint64_t v31 = sub_249AEBD48();
    uint64_t v33 = v32;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v35 = type metadata accessor for LayoutView(0);
    sub_2498D6084(v98 + *(int *)(v35 + 48), (uint64_t)v19, &qword_2696DFCB0);
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFCB0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v19, 0, 1, v36);
    sub_2498D6084((uint64_t)v19, (uint64_t)v16 + *(int *)(v81 + 28), &qword_2696DFCA8);
    *uint64_t v16 = KeyPath;
    sub_2498D6084((uint64_t)v16, (uint64_t)v21 + *(int *)(v80 + 36), &qword_2696E3050);
    *uint64_t v21 = v31;
    v21[1] = v33;
    swift_retain();
    sub_2498D60E8((uint64_t)v16, &qword_2696E3050);
    sub_2498D60E8((uint64_t)v19, &qword_2696DFCA8);
    swift_release();
    uint64_t v37 = (CGFloat *)(v88 + *(int *)(v79 + 24));
    CGFloat v38 = *v37;
    CGFloat v39 = v37[1];
    CGFloat v40 = v37[2];
    CGFloat v41 = v37[3];
    v102.origin.CGFloat x = *v37;
    v102.origin.CGFloat y = v39;
    v102.size.CGFloat width = v40;
    v102.size.CGFloat height = v41;
    CGRectGetWidth(v102);
    v103.origin.CGFloat x = v38;
    v103.origin.CGFloat y = v39;
    v103.size.CGFloat width = v40;
    v103.size.CGFloat height = v41;
    CGRectGetHeight(v103);
    sub_249AECC28();
    sub_249AEBBE8();
    sub_2498D6084((uint64_t)v21, (uint64_t)v23, &qword_2696E3038);
    uint64_t v42 = &v23[*(int *)(v83 + 36)];
    long long v43 = v100;
    *(_OWORD *)uint64_t v42 = v99;
    *((_OWORD *)v42 + 1) = v43;
    *((_OWORD *)v42 + 2) = v101;
    sub_2498D60E8((uint64_t)v21, &qword_2696E3038);
    CGFloat v44 = *v37;
    CGFloat v45 = v37[1];
    CGFloat v46 = v37[2];
    CGFloat v47 = v37[3];
    v104.origin.CGFloat x = *v37;
    v104.origin.CGFloat y = v45;
    v104.size.CGFloat width = v46;
    v104.size.CGFloat height = v47;
    CGFloat MidX = CGRectGetMidX(v104);
    v105.origin.CGFloat x = v44;
    v105.origin.CGFloat y = v45;
    v105.size.CGFloat width = v46;
    v105.size.CGFloat height = v47;
    CGFloat MidY = CGRectGetMidY(v105);
    uint64_t v50 = v86;
    sub_2498D6084((uint64_t)v23, v86, &qword_2696E3028);
    uint64_t v51 = (CGFloat *)(v50 + *(int *)(v84 + 36));
    *uint64_t v51 = MidX;
    v51[1] = MidY;
    sub_2498D60E8((uint64_t)v23, &qword_2696E3028);
    type metadata accessor for LayoutTreatment(0);
    sub_2499F5990(&qword_2696E1A90, (void (*)(uint64_t))type metadata accessor for LayoutTreatment);
    uint64_t v52 = sub_249AEBB28();
    uint64_t v53 = sub_249AEB968();
    uint64_t v54 = v87;
    sub_2498D6084(v50, v87, &qword_2696E3018);
    uint64_t v55 = (uint64_t *)(v54 + *(int *)(v85 + 36));
    *uint64_t v55 = v53;
    v55[1] = v52;
    sub_2498D60E8(v50, &qword_2696E3018);
    uint64_t v88 = v30;
    uint64_t v56 = v89;
    sub_2498D6084(v30 + OBJC_IVAR____TtC14CarPlayAssetUI9ZoneModel_zone, v89, &qword_2696DDB10);
    uint64_t v58 = v95;
    uint64_t v57 = v96;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v95 + 56))(v56, 0, 1, v96);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
    uint64_t v59 = (uint64_t)v90;
    sub_249AECA58();
    uint64_t v60 = v92;
    uint64_t v61 = v92 + *(int *)(v91 + 48);
    sub_2498D6084(v56, v92, &qword_2696DF8C8);
    sub_2498D6084(v59, v61, &qword_2696DF8C8);
    uint64_t v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58 + 48);
    uint64_t v63 = v56;
    if (v62(v60, 1, v57) == 1)
    {
      sub_2498D60E8(v59, &qword_2696DF8C8);
      sub_2498D60E8(v56, &qword_2696DF8C8);
      int v64 = v62(v61, 1, v57);
      uint64_t v65 = v97;
      if (v64 == 1)
      {
        sub_2498D60E8(v60, &qword_2696DF8C8);
        char v66 = 0;
LABEL_8:
        uint64_t v69 = v93;
        uint64_t v68 = (uint64_t)v94;
LABEL_10:
        uint64_t v72 = swift_getKeyPath();
        uint64_t v73 = swift_allocObject();
        *(unsigned char *)(v73 + 16) = v66 & 1;
        sub_2498D6084(v54, v68, &qword_2696E3008);
        swift_release();
        uint64_t v74 = (uint64_t *)(v68 + *(int *)(v69 + 36));
        *uint64_t v74 = v72;
        v74[1] = (uint64_t)sub_2499F7E7C;
        v74[2] = v73;
        sub_2498D60E8(v54, &qword_2696E3008);
        return sub_249882788(v68, v65, &qword_2696E2FE8);
      }
    }
    else
    {
      uint64_t v67 = v78;
      sub_2498D6084(v60, v78, &qword_2696DF8C8);
      if (v62(v61, 1, v57) != 1)
      {
        uint64_t v70 = v77;
        sub_249882788(v61, v77, &qword_2696DDB10);
        sub_249AEB808();
        sub_2499F5990((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
        char v71 = sub_249AED088();
        sub_2498D60E8(v70, &qword_2696DDB10);
        sub_2498D60E8(v59, &qword_2696DF8C8);
        sub_2498D60E8(v63, &qword_2696DF8C8);
        sub_2498D60E8(v67, &qword_2696DDB10);
        sub_2498D60E8(v60, &qword_2696DF8C8);
        char v66 = v71 ^ 1;
        uint64_t v65 = v97;
        uint64_t v69 = v93;
        uint64_t v68 = (uint64_t)v94;
        goto LABEL_10;
      }
      sub_2498D60E8(v59, &qword_2696DF8C8);
      sub_2498D60E8(v63, &qword_2696DF8C8);
      sub_2498D60E8(v67, &qword_2696DDB10);
      uint64_t v65 = v97;
    }
    sub_2498D60E8(v60, &qword_2696E30C0);
    char v66 = 1;
    goto LABEL_8;
  }
  type metadata accessor for ClusterTransitionCoordinator(0);
  sub_2499F5990(&qword_2696E1C88, (void (*)(uint64_t))type metadata accessor for ClusterTransitionCoordinator);
  uint64_t result = sub_249AEBE08();
  __break(1u);
  return result;
}

uint64_t sub_2499F2FC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E30D0);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (void *)((char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E30D8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (void *)((char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = *(void *)(v0 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  char v10 = *(unsigned char *)(v1 + 32);
  sub_2499F6004(v8, v9, v10);
  sub_2499A68A8(v8, v9, v10, (uint64_t *)&v22);
  sub_2499F4F10(v8, v9, v10);
  uint64_t v11 = v22;
  if (v22)
  {
    uint64_t v12 = type metadata accessor for LayoutView(0);
    uint64_t v13 = (void *)(v1 + *(int *)(v12 + 56));
    uint64_t v14 = v13[1];
    v21[0] = *v13;
    v21[1] = v14;
    uint64_t v15 = v1 + *(int *)(v12 + 48);
    swift_bridgeObjectRetain();
    uint64_t v16 = v11(v21, v15);
    sub_24998A0BC((uint64_t)v11);
    swift_bridgeObjectRelease();
    *uint64_t v7 = sub_249AECC28();
    v7[1] = v17;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E30E8);
    sub_2499F3C64(v16, v1, (uint64_t)v7 + *(int *)(v18 + 44));
    sub_2498D6084((uint64_t)v7, (uint64_t)v4, &qword_2696E30D8);
    swift_storeEnumTagMultiPayload();
    sub_2498D0A3C(&qword_2696E30E0, &qword_2696E30D8);
    sub_249AEC248();
    swift_release();
    return sub_2498D60E8((uint64_t)v7, &qword_2696E30D8);
  }
  else
  {
    uint64_t v20 = v1 + *(int *)(type metadata accessor for LayoutView(0) + 48);
    *uint64_t v4 = *(void *)(v20 + *(int *)(type metadata accessor for Layout() + 32));
    swift_storeEnumTagMultiPayload();
    sub_2498D0A3C(&qword_2696E30E0, &qword_2696E30D8);
    swift_retain();
    return sub_249AEC248();
  }
}

uint64_t sub_2499F328C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v64 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v58 = (uint64_t)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E30C0);
  MEMORY[0x270FA5388](v63);
  uint64_t v5 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Zone();
  uint64_t v69 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC90);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v62 = (uint64_t)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v57 - v15;
  MEMORY[0x270FA5388](v17);
  uint64_t v60 = (uint64_t)&v57 - v18;
  MEMORY[0x270FA5388](v19);
  uint64_t v68 = (uint64_t)&v57 - v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v57 - v22;
  uint64_t v70 = type metadata accessor for LayoutView(0);
  sub_2499A68EC((uint64_t)&v74);
  SetNeedsFocusUpdateAction.callAsFunction()();
  sub_2499F7E94((uint64_t)&v74);
  uint64_t v71 = a1;
  if (!*(void *)(a1 + 40))
  {
    type metadata accessor for ClusterTransitionCoordinator(0);
    sub_2499F5990(&qword_2696E1C88, (void (*)(uint64_t))type metadata accessor for ClusterTransitionCoordinator);
    uint64_t result = sub_249AEBE08();
    __break(1u);
    return result;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v24 = *(void *)(v74 + 16);
  uint64_t v65 = v2;
  char v66 = v5;
  if (v24)
  {
    int v72 = *(unsigned __int8 *)(v24 + v74 + 31);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    int v72 = 2;
  }
  uint64_t v25 = v71 + *(int *)(v70 + 48);
  uint64_t v26 = *(void *)(v25 + *(int *)(type metadata accessor for Layout() + 24));
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v67 = v13;
  uint64_t v61 = v23;
  if (!v27)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = 1;
LABEL_23:
    uint64_t v35 = v65;
    uint64_t v36 = (uint64_t)v66;
    uint64_t v37 = v64;
    uint64_t v38 = v62;
    goto LABEL_26;
  }
  uint64_t v59 = v16;
  uint64_t v28 = v26 + ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80));
  if (v72) {
    uint64_t v29 = 0x32656E6F7ALL;
  }
  else {
    uint64_t v29 = 0x31656E6F7ALL;
  }
  uint64_t v30 = *(void *)(v69 + 72);
  swift_bridgeObjectRetain_n();
  while (1)
  {
    sub_2499F7D38(v28, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for Zone);
    int v31 = v8[*(int *)(v6 + 40)];
    if (v31) {
      uint64_t v32 = 0x32656E6F7ALL;
    }
    else {
      uint64_t v32 = 0x31656E6F7ALL;
    }
    if (v31 == 2)
    {
      if (v72 == 2) {
        goto LABEL_20;
      }
LABEL_11:
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    if (v72 == 2) {
      goto LABEL_11;
    }
    if (v32 == v29) {
      break;
    }
    char v33 = sub_249AEE0D8();
    swift_bridgeObjectRelease_n();
    if (v33)
    {
LABEL_20:
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
LABEL_12:
    sub_2499F7EE8((uint64_t)v8);
    v28 += v30;
    if (!--v27)
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = 1;
      uint64_t v16 = v59;
      uint64_t v23 = v61;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
LABEL_25:
  uint64_t v38 = v62;
  sub_2499F4F1C((uint64_t)v8, v62, (uint64_t (*)(void))type metadata accessor for Zone);
  uint64_t v34 = 0;
  uint64_t v16 = v59;
  uint64_t v23 = v61;
  uint64_t v35 = v65;
  uint64_t v36 = (uint64_t)v66;
  uint64_t v37 = v64;
LABEL_26:
  uint64_t v39 = v69;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 56))(v38, v34, 1, v6);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v38, 1, v6) == 1)
  {
    sub_2498D60E8(v38, &qword_2696DFC90);
    uint64_t v40 = 1;
  }
  else
  {
    sub_2498D6084(v38, (uint64_t)v23, &qword_2696DDB10);
    sub_2499F7EE8(v38);
    uint64_t v40 = 0;
  }
  uint64_t v41 = v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v37 + 56))(v23, v40, 1, v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  sub_249AECA58();
  uint64_t v42 = v36 + *(int *)(v63 + 48);
  sub_2498D6084(v41, v36, &qword_2696DF8C8);
  sub_2498D6084((uint64_t)v23, v42, &qword_2696DF8C8);
  long long v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
  if (v43(v36, 1, v35) == 1)
  {
    sub_2498D60E8(v41, &qword_2696DF8C8);
    if (v43(v42, 1, v35) == 1)
    {
      sub_2498D60E8(v36, &qword_2696DF8C8);
      uint64_t v44 = (uint64_t)v67;
      goto LABEL_45;
    }
LABEL_34:
    sub_2498D60E8(v36, &qword_2696E30C0);
    uint64_t v44 = (uint64_t)v67;
    goto LABEL_35;
  }
  uint64_t v45 = v60;
  sub_2498D6084(v36, v60, &qword_2696DF8C8);
  if (v43(v42, 1, v35) == 1)
  {
    sub_2498D60E8(v68, &qword_2696DF8C8);
    sub_2498D60E8(v45, &qword_2696DDB10);
    goto LABEL_34;
  }
  uint64_t v55 = v58;
  sub_249882788(v42, v58, &qword_2696DDB10);
  sub_249AEB808();
  sub_2499F5990((unint64_t *)&qword_2696DF568, MEMORY[0x263F07508]);
  char v56 = sub_249AED088();
  sub_2498D60E8(v55, &qword_2696DDB10);
  sub_2498D60E8(v68, &qword_2696DF8C8);
  sub_2498D60E8(v45, &qword_2696DDB10);
  sub_2498D60E8(v36, &qword_2696DF8C8);
  uint64_t v44 = (uint64_t)v67;
  if ((v56 & 1) == 0)
  {
LABEL_35:
    if (qword_2696DD638 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_249AEB938();
    __swift_project_value_buffer(v46, (uint64_t)qword_26972C748);
    CGFloat v47 = sub_249AEB918();
    os_log_type_t v48 = sub_249AED7A8();
    if (os_log_type_enabled(v47, v48))
    {
      Swift::String v49 = (uint8_t *)swift_slowAlloc();
      uint64_t v50 = swift_slowAlloc();
      uint64_t v74 = v50;
      *(_DWORD *)Swift::String v49 = 136315138;
      uint64_t v51 = 0x32656E6F7ALL;
      if ((v72 & 1) == 0) {
        uint64_t v51 = 0x31656E6F7ALL;
      }
      if (v72 == 2) {
        uint64_t v52 = 0x3E6C696E3CLL;
      }
      else {
        uint64_t v52 = v51;
      }
      uint64_t v73 = sub_249924094(v52, 0xE500000000000000, &v74);
      sub_249AED8F8();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_249878000, v47, v48, "Focus moved to zone region %s", v49, 0xCu);
      swift_arrayDestroy();
      uint64_t v53 = v50;
      uint64_t v23 = v61;
      MEMORY[0x24C5B0110](v53, -1, -1);
      MEMORY[0x24C5B0110](v49, -1, -1);
    }
  }
LABEL_45:
  sub_2498D6084((uint64_t)v23, (uint64_t)v16, &qword_2696DF8C8);
  sub_2498D6084((uint64_t)v16, v44, &qword_2696DF8C8);
  sub_249AECA68();
  sub_2498D60E8((uint64_t)v16, &qword_2696DF8C8);
  return sub_2498D60E8((uint64_t)v23, &qword_2696DF8C8);
}

uint64_t sub_2499F3C64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v98 = a1;
  uint64_t v89 = a3;
  uint64_t v4 = type metadata accessor for LayoutView(0);
  uint64_t v5 = v4 - 8;
  uint64_t v78 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v79 = v6;
  uint64_t v81 = (uint64_t)v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC30);
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v82 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E30F0);
  MEMORY[0x270FA5388](v80);
  uint64_t v87 = (char *)v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E30F8);
  uint64_t v96 = *(void *)(v9 - 8);
  uint64_t v97 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v86 = (uint64_t)v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v85 = (uint64_t)v76 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC90);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v90 = (uint64_t)v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Zone();
  uint64_t v88 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v77 = (uint64_t)v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)v76 - v18;
  v76[3] = v20;
  MEMORY[0x270FA5388](v21);
  uint64_t v93 = (uint64_t)v76 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3100);
  MEMORY[0x270FA5388](v23 - 8);
  uint64_t v95 = (uint64_t)v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v94 = (uint64_t)v76 - v26;
  uint64_t v27 = *(void *)a2;
  char v28 = *(unsigned char *)(a2 + 8);
  sub_2499AAF0C(*(void *)a2, v28);
  sub_2499A6688(v27, v28, v99);
  sub_2499AAF18(v27, v28);
  uint64_t v92 = v99[0];
  uint64_t v29 = type metadata accessor for LayoutTreatment(0);
  uint64_t v30 = sub_2499F5990(&qword_2696E1A90, (void (*)(uint64_t))type metadata accessor for LayoutTreatment);
  swift_retain();
  sub_249AEBB28();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v31 = v99[0];
  sub_249AEBB28();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v32 = v99[0];
  sub_249AECD18();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  v76[2] = v29;
  v76[1] = v30;
  sub_249AEBB28();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v37 = v99[0];
  uint64_t v38 = *(int *)(v5 + 56);
  uint64_t v91 = a2;
  uint64_t v39 = *(void *)(a2 + v38 + *(int *)(type metadata accessor for Layout() + 24));
  uint64_t v40 = *(void *)(v39 + 16);
  if (v40)
  {
    uint64_t v41 = v89;
    uint64_t v42 = v39 + ((*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80));
    uint64_t v43 = v88;
    uint64_t v44 = *(void *)(v88 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_2499F7D38(v42, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for Zone);
      if (!v19[*(int *)(v15 + 32) + 16]) {
        break;
      }
      sub_2499F7EE8((uint64_t)v19);
      v42 += v44;
      if (!--v40)
      {
        uint64_t v45 = 1;
        uint64_t v46 = v43;
        uint64_t v47 = v41;
        uint64_t v48 = v90;
        goto LABEL_8;
      }
    }
    uint64_t v48 = v90;
    sub_2499F4F1C((uint64_t)v19, v90, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v45 = 0;
    uint64_t v46 = v43;
    uint64_t v47 = v41;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = 1;
    uint64_t v46 = v88;
    uint64_t v47 = v89;
    uint64_t v48 = v90;
  }
LABEL_8:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56))(v48, v45, 1, v15);
  swift_bridgeObjectRelease();
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v46 + 48))(v48, 1, v15);
  uint64_t v50 = v91;
  uint64_t v51 = v93;
  if (v49 == 1)
  {
    sub_2498D60E8(v48, &qword_2696DFC90);
    uint64_t v52 = 1;
    uint64_t v53 = v97;
    uint64_t v54 = v94;
  }
  else
  {
    sub_2499F4F1C(v48, v93, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v55 = sub_249AEC888();
    if (!*(void *)(v50 + 40))
    {
      type metadata accessor for ClusterTransitionCoordinator(0);
      sub_2499F5990(&qword_2696E1C88, (void (*)(uint64_t))type metadata accessor for ClusterTransitionCoordinator);
      uint64_t result = sub_249AEBE08();
      __break(1u);
      return result;
    }
    uint64_t v56 = v55;
    swift_beginAccess();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DFC28);
    uint64_t v57 = v82;
    sub_249AEB9B8();
    swift_endAccess();
    swift_release();
    uint64_t v58 = v81;
    sub_2499F7D38(v50, v81, type metadata accessor for LayoutView);
    uint64_t v59 = v77;
    sub_2499F7D38(v51, v77, (uint64_t (*)(void))type metadata accessor for Zone);
    unint64_t v60 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
    unint64_t v61 = (v79 + *(unsigned __int8 *)(v46 + 80) + v60) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
    uint64_t v62 = swift_allocObject();
    sub_2499F4F1C(v58, v62 + v60, type metadata accessor for LayoutView);
    sub_2499F4F1C(v59, v62 + v61, (uint64_t (*)(void))type metadata accessor for Zone);
    uint64_t v63 = v80;
    uint64_t v64 = (uint64_t *)v87;
    uint64_t v65 = v83;
    uint64_t v66 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(&v87[*(int *)(v80 + 52)], v57, v84);
    *uint64_t v64 = v56;
    uint64_t v67 = (uint64_t (**)())((char *)v64 + *(int *)(v63 + 56));
    *uint64_t v67 = sub_2499F8314;
    v67[1] = (uint64_t (*)())v62;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v57, v66);
    sub_249AEBB28();
    swift_getKeyPath();
    swift_getKeyPath();
    sub_249AEB9E8();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v68 = v99[0];
    uint64_t v69 = v86;
    sub_2498D6084((uint64_t)v64, v86, &qword_2696E30F0);
    uint64_t v53 = v97;
    *(void *)(v69 + *(int *)(v97 + 36)) = v68;
    sub_2498D60E8((uint64_t)v64, &qword_2696E30F0);
    sub_2499F7EE8(v51);
    uint64_t v70 = v69;
    uint64_t v71 = v85;
    sub_249882788(v70, v85, &qword_2696E30F8);
    uint64_t v54 = v94;
    sub_249882788(v71, v94, &qword_2696E30F8);
    uint64_t v52 = 0;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56))(v54, v52, 1, v53);
  if (v92) {
    double v72 = 1.0;
  }
  else {
    double v72 = 0.0;
  }
  uint64_t v73 = v95;
  sub_2498D6084(v54, v95, &qword_2696E3100);
  *(void *)uint64_t v47 = v98;
  *(double *)(v47 + 8) = v72;
  *(void *)(v47 + 16) = v31;
  *(void *)(v47 + 24) = v32;
  *(void *)(v47 + 32) = v32;
  *(void *)(v47 + 40) = v34;
  *(void *)(v47 + 48) = v36;
  *(void *)(v47 + 56) = v37;
  *(unsigned char *)(v47 + 64) = 1;
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3108);
  sub_2498D6084(v73, v47 + *(int *)(v74 + 48), &qword_2696E3100);
  swift_retain();
  sub_2498D60E8(v54, &qword_2696E3100);
  sub_2498D60E8(v73, &qword_2696E3100);
  return swift_release();
}

uint64_t sub_2499F478C()
{
  return swift_release();
}

uint64_t sub_2499F4800(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LayoutView(0);
  type metadata accessor for LayoutTreatment(0);
  sub_2499F5990(&qword_2696E1A90, (void (*)(uint64_t))type metadata accessor for LayoutTreatment);
  sub_249AEBB28();
  if (*(void *)(a2 + 16)) {
    sub_2498EF548(a3);
  }
  uint64_t v5 = sub_249AECC68();
  MEMORY[0x270FA5388](v5);
  sub_249AEBCB8();
  swift_release();
  uint64_t v6 = sub_249AECC68();
  MEMORY[0x270FA5388](v6);
  sub_249AEBCB8();
  swift_release();
  return swift_release();
}

uint64_t sub_2499F49EC()
{
  return sub_249AEBFF8();
}

uint64_t sub_2499F4A2C(uint64_t a1)
{
  sub_2499F8450(a1, (uint64_t)v3);
  sub_2499F8450((uint64_t)v3, (uint64_t)&v2);
  sub_2499F84AC();
  sub_249AEC008();
  return sub_2499F7E94((uint64_t)v3);
}

double sub_2499F4A8C@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_2499F4B08()
{
  return sub_249AEB9F8();
}

uint64_t sub_2499F4B80()
{
  return sub_249AEBE58();
}

uint64_t sub_2499F4BA4()
{
  return sub_249AEBE58();
}

uint64_t sub_2499F4BC8()
{
  return sub_249AEBFF8();
}

uint64_t sub_2499F4C14()
{
  uint64_t v1 = (int *)type metadata accessor for LayoutView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_2499AAF18(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  sub_2499F4F10(*(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  swift_release();
  j_j__swift_release(*(void *)(v5 + 56), *(unsigned __int8 *)(v5 + 64));
  uint64_t v6 = v0 + v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_249AEC048();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  if (*(unsigned char *)(v5 + v1[9] + 8)) {
    swift_unknownObjectWeakDestroy();
  }
  else {
    swift_release();
  }
  uint64_t v8 = v5 + v1[10];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_249AEB808();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  swift_release();
  sub_2499C3C6C();
  uint64_t v11 = v5 + v1[12];
  uint64_t v12 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = type metadata accessor for Layout();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = v11 + *(int *)(v13 + 48);
  if (*(void *)(v14 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249930F4C(*(void *)(v14 + 40), *(void *)(v14 + 48), *(unsigned char *)(v14 + 56));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_2499F4F10(uint64_t result, uint64_t a2, char a3)
{
  if (a3) {
    return sub_24998A0BC(result);
  }
  else {
    return swift_release();
  }
}

uint64_t sub_2499F4F1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_2499F4F84()
{
  uint64_t v1 = *(void *)(type metadata accessor for LayoutView(0) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_2499F328C(v2);
}

unint64_t sub_2499F4FE4()
{
  unint64_t result = qword_2696E2F90;
  if (!qword_2696E2F90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2F60);
    sub_2499F5084();
    sub_2498D0A3C(&qword_2696E2FD0, &qword_2696E2FD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2F90);
  }
  return result;
}

unint64_t sub_2499F5084()
{
  unint64_t result = qword_2696E2F98;
  if (!qword_2696E2F98)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2F58);
    sub_2499F581C(&qword_2696E2FA0, &qword_2696E2F50, (void (*)(void))sub_2499F5148);
    sub_2498D0A3C(&qword_2696E2FC8, &qword_2696E2F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2F98);
  }
  return result;
}

unint64_t sub_2499F5148()
{
  unint64_t result = qword_2696E2FA8;
  if (!qword_2696E2FA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2F48);
    sub_2498D0A3C(&qword_2696E2FB0, &qword_2696E2F40);
    sub_2498D0A3C(&qword_2696E2FB8, &qword_2696E2FC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2FA8);
  }
  return result;
}

unint64_t sub_2499F520C()
{
  unint64_t result = qword_2696E2FE0;
  if (!qword_2696E2FE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DFC58);
    sub_2498F9508();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2FE0);
  }
  return result;
}

uint64_t sub_2499F5280()
{
  uint64_t v1 = (int *)type metadata accessor for LayoutView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v5 = v0 + v3;
  sub_2499AAF18(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  sub_2499F4F10(*(void *)(v5 + 16), *(void *)(v5 + 24), *(unsigned char *)(v5 + 32));
  swift_release();
  j_j__swift_release(*(void *)(v5 + 56), *(unsigned __int8 *)(v5 + 64));
  uint64_t v6 = v0 + v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_249AEC048();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  if (*(unsigned char *)(v5 + v1[9] + 8)) {
    swift_unknownObjectWeakDestroy();
  }
  else {
    swift_release();
  }
  uint64_t v8 = v5 + v1[10];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
  {
    uint64_t v10 = sub_249AEB808();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  swift_release();
  sub_2499C3C6C();
  uint64_t v11 = v5 + v1[12];
  uint64_t v12 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = type metadata accessor for Layout();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = v11 + *(int *)(v13 + 48);
  if (*(void *)(v14 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249930F4C(*(void *)(v14 + 40), *(void *)(v14 + 48), *(unsigned char *)(v14 + 56));
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_2499F5590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for LayoutView(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_2499F23F4(a1, v2 + v6, v7, a2);
}

unint64_t sub_2499F563C()
{
  unint64_t result = qword_2696E2FF8;
  if (!qword_2696E2FF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E2FE8);
    sub_2499F56DC();
    sub_2498D0A3C(&qword_2696E3068, &qword_2696E3070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E2FF8);
  }
  return result;
}

unint64_t sub_2499F56DC()
{
  unint64_t result = qword_2696E3000;
  if (!qword_2696E3000)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3008);
    sub_2499F577C();
    sub_2498D0A3C(&qword_2696E3058, &qword_2696E3060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3000);
  }
  return result;
}

unint64_t sub_2499F577C()
{
  unint64_t result = qword_2696E3010;
  if (!qword_2696E3010)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3018);
    sub_2499F581C(&qword_2696E3020, &qword_2696E3028, (void (*)(void))sub_2499F589C);
    sub_24990299C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3010);
  }
  return result;
}

uint64_t sub_2499F581C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2499F589C()
{
  unint64_t result = qword_2696E3030;
  if (!qword_2696E3030)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E3038);
    sub_2499F593C();
    sub_2498D0A3C(&qword_2696E3048, &qword_2696E3050);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3030);
  }
  return result;
}

unint64_t sub_2499F593C()
{
  unint64_t result = qword_2696E3040;
  if (!qword_2696E3040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3040);
  }
  return result;
}

uint64_t sub_2499F5990(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2499F59D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2499F59F4()
{
  return type metadata accessor for LayoutTreatment(0);
}

uint64_t type metadata accessor for LayoutTreatment(uint64_t a1)
{
  return sub_24992FC4C(a1, (uint64_t *)&unk_2696E3080);
}

void sub_2499F5A1C()
{
  sub_2499F5AD8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for LayoutTreatment(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for LayoutTreatment);
}

void sub_2499F5AD8()
{
  if (!qword_2696E3090)
  {
    unint64_t v0 = sub_249AEBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E3090);
    }
  }
}

unint64_t initializeBufferWithCopyOfBuffer for LayoutView(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_2499AAF0C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    char v11 = *(unsigned char *)(a2 + 32);
    sub_2499F6004(v9, v10, v11);
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(unsigned char *)(a1 + 32) = v11;
    uint64_t v12 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = v12;
    uint64_t v13 = *(void *)(a2 + 56);
    LOBYTE(v10) = *(unsigned char *)(a2 + 64);
    swift_retain();
    j__swift_retain();
    *(void *)(a1 + 56) = v13;
    *(unsigned char *)(a1 + 64) = v10;
    uint64_t v14 = a3[8];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = sub_249AEC048();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = a3[9];
    uint64_t v20 = a1 + v19;
    char v21 = *(unsigned char *)(a2 + v19 + 8);
    if (v21)
    {
      swift_unknownObjectWeakCopyInit();
    }
    else
    {
      *(void *)uint64_t v20 = *(void *)(a2 + v19);
      swift_retain();
    }
    *(unsigned char *)(v20 + 8) = v21;
    uint64_t v22 = a3[10];
    uint64_t v23 = (char *)(a1 + v22);
    uint64_t v24 = (char *)(a2 + v22);
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = sub_249AEB808();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v23, v24, v28);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
    *(void *)&v23[*(int *)(v29 + 28)] = *(void *)&v24[*(int *)(v29 + 28)];
    uint64_t v30 = a3[11];
    uint64_t v31 = a1 + v30;
    uint64_t v32 = (uint64_t *)(a2 + v30);
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    char v35 = *((unsigned char *)v32 + 16);
    swift_retain();
    sub_2499C3C64();
    *(void *)uint64_t v31 = v33;
    *(void *)(v31 + 8) = v34;
    *(unsigned char *)(v31 + 16) = v35;
    uint64_t v82 = a3;
    uint64_t v36 = a3[12];
    uint64_t v37 = a1 + v36;
    uint64_t v38 = a2 + v36;
    uint64_t v39 = sub_249AEB808();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = (int *)type metadata accessor for Layout();
    uint64_t v41 = v40[5];
    uint64_t v42 = (void *)(v37 + v41);
    uint64_t v43 = (void *)(v38 + v41);
    uint64_t v44 = v43[1];
    *uint64_t v42 = *v43;
    v42[1] = v44;
    *(void *)(v37 + v40[6]) = *(void *)(v38 + v40[6]);
    uint64_t v45 = v40[7];
    uint64_t v46 = (void *)(v37 + v45);
    uint64_t v47 = (void *)(v38 + v45);
    uint64_t v48 = v47[1];
    *uint64_t v46 = *v47;
    v46[1] = v48;
    *(void *)(v37 + v40[8]) = *(void *)(v38 + v40[8]);
    *(unsigned char *)(v37 + v40[9]) = *(unsigned char *)(v38 + v40[9]);
    uint64_t v49 = v40[10];
    uint64_t v50 = (_OWORD *)(v37 + v49);
    uint64_t v51 = (_OWORD *)(v38 + v49);
    long long v52 = v51[4];
    long long v53 = v51[2];
    v50[3] = v51[3];
    v50[4] = v52;
    long long v54 = v51[1];
    *uint64_t v50 = *v51;
    v50[1] = v54;
    v50[2] = v53;
    uint64_t v55 = v40[11];
    uint64_t v56 = (_OWORD *)(v37 + v55);
    uint64_t v57 = (_OWORD *)(v38 + v55);
    long long v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    uint64_t v59 = v40[12];
    uint64_t v60 = v37 + v59;
    uint64_t v61 = v38 + v59;
    uint64_t v62 = *(void *)(v38 + v59 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v62)
    {
      uint64_t v63 = *(void **)v61;
      uint64_t v64 = *(void *)(v61 + 8);
      *(void *)uint64_t v60 = *(void *)v61;
      *(void *)(v60 + 8) = v64;
      uint64_t v65 = *(void *)(v61 + 24);
      uint64_t v66 = *(void *)(v61 + 32);
      *(void *)(v60 + 16) = v62;
      *(void *)(v60 + 24) = v65;
      *(void *)(v60 + 32) = v66;
      uint64_t v67 = *(void *)(v61 + 40);
      uint64_t v81 = *(void *)(v61 + 48);
      char v80 = *(unsigned char *)(v61 + 56);
      id v68 = v63;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_249930CE0(v67, v81, v80);
      *(void *)(v60 + 40) = v67;
      *(void *)(v60 + 48) = v81;
      *(unsigned char *)(v60 + 56) = v80;
    }
    else
    {
      long long v69 = *(_OWORD *)(v61 + 16);
      *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
      *(_OWORD *)(v60 + 16) = v69;
      *(_OWORD *)(v60 + 32) = *(_OWORD *)(v61 + 32);
      *(_OWORD *)(v60 + 41) = *(_OWORD *)(v61 + 41);
    }
    *(void *)(v60 + 64) = *(void *)(v61 + 64);
    uint64_t v70 = v40[13];
    uint64_t v71 = (void *)(v37 + v70);
    double v72 = (uint64_t *)(v38 + v70);
    uint64_t v73 = *v72;
    uint64_t v74 = v72[1];
    *uint64_t v71 = v73;
    v71[1] = v74;
    uint64_t v75 = v82[14];
    *(_OWORD *)(a1 + v82[13]) = *(_OWORD *)(a2 + v82[13]);
    uint64_t v76 = (void *)(a1 + v75);
    uint64_t v77 = (void *)(a2 + v75);
    uint64_t v78 = v77[1];
    void *v76 = *v77;
    v76[1] = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_2499F6004(uint64_t result, uint64_t a2, char a3)
{
  if (a3) {
    return sub_24998A0B8(result);
  }
  else {
    return swift_retain();
  }
}

uint64_t destroy for LayoutView(uint64_t a1, int *a2)
{
  sub_2499AAF18(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_2499F4F10(*(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  swift_release();
  j_j__swift_release(*(void *)(a1 + 56), *(unsigned __int8 *)(a1 + 64));
  uint64_t v4 = a1 + a2[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_249AEC048();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  if (*(unsigned char *)(a1 + a2[9] + 8)) {
    swift_unknownObjectWeakDestroy();
  }
  else {
    swift_release();
  }
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = sub_249AEB808();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  swift_release();
  sub_2499C3C6C();
  uint64_t v9 = a1 + a2[12];
  uint64_t v10 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = type metadata accessor for Layout();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v12 = v9 + *(int *)(v11 + 48);
  if (*(void *)(v12 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249930F4C(*(void *)(v12 + 40), *(void *)(v12 + 48), *(unsigned char *)(v12 + 56));
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LayoutView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_2499AAF0C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  char v10 = *(unsigned char *)(a2 + 32);
  sub_2499F6004(v8, v9, v10);
  *(void *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v9;
  *(unsigned char *)(a1 + 32) = v10;
  uint64_t v11 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v11;
  uint64_t v12 = *(void *)(a2 + 56);
  LOBYTE(v9) = *(unsigned char *)(a2 + 64);
  swift_retain();
  j__swift_retain();
  *(void *)(a1 + 56) = v12;
  *(unsigned char *)(a1 + 64) = v9;
  uint64_t v13 = a3[8];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = sub_249AEC048();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = a3[9];
  uint64_t v18 = a1 + v17;
  char v19 = *(unsigned char *)(a2 + v17 + 8);
  if (v19)
  {
    swift_unknownObjectWeakCopyInit();
  }
  else
  {
    *(void *)uint64_t v18 = *(void *)(a2 + v17);
    swift_retain();
  }
  *(unsigned char *)(v18 + 8) = v19;
  uint64_t v20 = a3[10];
  char v21 = (char *)(a1 + v20);
  uint64_t v22 = (char *)(a2 + v20);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v24 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = sub_249AEB808();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  *(void *)&v21[*(int *)(v27 + 28)] = *(void *)&v22[*(int *)(v27 + 28)];
  uint64_t v28 = a3[11];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = (uint64_t *)(a2 + v28);
  uint64_t v31 = *v30;
  uint64_t v32 = v30[1];
  char v33 = *((unsigned char *)v30 + 16);
  swift_retain();
  sub_2499C3C64();
  *(void *)uint64_t v29 = v31;
  *(void *)(v29 + 8) = v32;
  *(unsigned char *)(v29 + 16) = v33;
  char v80 = a3;
  uint64_t v81 = a2;
  uint64_t v34 = a3[12];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  uint64_t v37 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = (int *)type metadata accessor for Layout();
  uint64_t v39 = v38[5];
  uint64_t v40 = (void *)(v35 + v39);
  uint64_t v41 = (void *)(v36 + v39);
  uint64_t v42 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v42;
  *(void *)(v35 + v38[6]) = *(void *)(v36 + v38[6]);
  uint64_t v43 = v38[7];
  uint64_t v44 = (void *)(v35 + v43);
  uint64_t v45 = (void *)(v36 + v43);
  uint64_t v46 = v45[1];
  *uint64_t v44 = *v45;
  v44[1] = v46;
  *(void *)(v35 + v38[8]) = *(void *)(v36 + v38[8]);
  *(unsigned char *)(v35 + v38[9]) = *(unsigned char *)(v36 + v38[9]);
  uint64_t v47 = v38[10];
  uint64_t v48 = (_OWORD *)(v35 + v47);
  uint64_t v49 = (_OWORD *)(v36 + v47);
  long long v50 = v49[4];
  long long v51 = v49[2];
  v48[3] = v49[3];
  v48[4] = v50;
  long long v52 = v49[1];
  *uint64_t v48 = *v49;
  v48[1] = v52;
  v48[2] = v51;
  uint64_t v53 = v38[11];
  long long v54 = (_OWORD *)(v35 + v53);
  uint64_t v55 = (_OWORD *)(v36 + v53);
  long long v56 = v55[1];
  *long long v54 = *v55;
  v54[1] = v56;
  uint64_t v57 = v38[12];
  uint64_t v58 = v35 + v57;
  uint64_t v59 = v36 + v57;
  uint64_t v60 = *(void *)(v36 + v57 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v60)
  {
    uint64_t v61 = *(void **)v59;
    uint64_t v62 = *(void *)(v59 + 8);
    *(void *)uint64_t v58 = *(void *)v59;
    *(void *)(v58 + 8) = v62;
    uint64_t v63 = *(void *)(v59 + 24);
    uint64_t v64 = *(void *)(v59 + 32);
    *(void *)(v58 + 16) = v60;
    *(void *)(v58 + 24) = v63;
    *(void *)(v58 + 32) = v64;
    uint64_t v65 = *(void *)(v59 + 40);
    uint64_t v66 = *(void *)(v59 + 48);
    char v79 = *(unsigned char *)(v59 + 56);
    id v67 = v61;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249930CE0(v65, v66, v79);
    *(void *)(v58 + 40) = v65;
    *(void *)(v58 + 48) = v66;
    *(unsigned char *)(v58 + 56) = v79;
  }
  else
  {
    long long v68 = *(_OWORD *)(v59 + 16);
    *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
    *(_OWORD *)(v58 + 16) = v68;
    *(_OWORD *)(v58 + 32) = *(_OWORD *)(v59 + 32);
    *(_OWORD *)(v58 + 41) = *(_OWORD *)(v59 + 41);
  }
  *(void *)(v58 + 64) = *(void *)(v59 + 64);
  uint64_t v69 = v38[13];
  uint64_t v70 = (void *)(v35 + v69);
  uint64_t v71 = (uint64_t *)(v36 + v69);
  uint64_t v72 = *v71;
  uint64_t v73 = v71[1];
  void *v70 = v72;
  v70[1] = v73;
  uint64_t v74 = v80[14];
  *(_OWORD *)(a1 + v80[13]) = *(_OWORD *)(v81 + v80[13]);
  uint64_t v75 = (void *)(a1 + v74);
  uint64_t v76 = (void *)(v81 + v74);
  uint64_t v77 = v76[1];
  *uint64_t v75 = *v76;
  v75[1] = v77;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LayoutView(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_2499AAF0C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_2499AAF18(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void *)(a2 + 24);
  char v12 = *(unsigned char *)(a2 + 32);
  sub_2499F6004(v10, v11, v12);
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 24);
  char v15 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(unsigned char *)(a1 + 32) = v12;
  sub_2499F4F10(v13, v14, v15);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v16 = *(void *)(a2 + 56);
  LOBYTE(v11) = *(unsigned char *)(a2 + 64);
  j__swift_retain();
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(unsigned __int8 *)(a1 + 64);
  *(void *)(a1 + 56) = v16;
  *(unsigned char *)(a1 + 64) = v11;
  j_j__swift_release(v17, v18);
  if (a1 != a2)
  {
    uint64_t v19 = a3[8];
    uint64_t v20 = (void *)(a1 + v19);
    char v21 = (void *)(a2 + v19);
    sub_2498D60E8(a1 + v19, &qword_2696E1D28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = sub_249AEC048();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    }
    else
    {
      *uint64_t v20 = *v21;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[9];
    uint64_t v24 = a1 + v23;
    uint64_t v25 = a2 + v23;
    sub_2498D60E8(a1 + v23, &qword_2696E1D00);
    if (*(unsigned char *)(v25 + 8))
    {
      swift_unknownObjectWeakCopyInit();
      *(unsigned char *)(v24 + 8) = 1;
    }
    else
    {
      *(void *)uint64_t v24 = *(void *)v25;
      *(unsigned char *)(v24 + 8) = 0;
      swift_retain();
    }
  }
  uint64_t v26 = a3[10];
  uint64_t v27 = (char *)(a1 + v26);
  uint64_t v28 = (char *)(a2 + v26);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      uint64_t v34 = sub_249AEB808();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v27, v28, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v33)
  {
    sub_2498D60E8((uint64_t)v27, &qword_2696DDB10);
LABEL_13:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
    memcpy(v27, v28, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_14;
  }
  uint64_t v83 = sub_249AEB808();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 24))(v27, v28, v83);
LABEL_14:
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  *(void *)&v27[*(int *)(v36 + 28)] = *(void *)&v28[*(int *)(v36 + 28)];
  swift_retain();
  swift_release();
  uint64_t v37 = a3[11];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v40 = *v39;
  uint64_t v41 = v39[1];
  char v42 = *((unsigned char *)v39 + 16);
  sub_2499C3C64();
  *(void *)uint64_t v38 = v40;
  *(void *)(v38 + 8) = v41;
  *(unsigned char *)(v38 + 16) = v42;
  sub_2499C3C6C();
  uint64_t v43 = a3[12];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 24))(v44, v45, v46);
  uint64_t v47 = (int *)type metadata accessor for Layout();
  uint64_t v48 = v47[5];
  uint64_t v49 = (void *)(v44 + v48);
  long long v50 = (void *)(v45 + v48);
  *uint64_t v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v44 + v47[6]) = *(void *)(v45 + v47[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v51 = v47[7];
  long long v52 = (void *)(v44 + v51);
  uint64_t v53 = (void *)(v45 + v51);
  *long long v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v44 + v47[8]) = *(void *)(v45 + v47[8]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v44 + v47[9]) = *(unsigned char *)(v45 + v47[9]);
  uint64_t v54 = v47[10];
  uint64_t v55 = v44 + v54;
  uint64_t v56 = v45 + v54;
  *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
  long long v57 = *(_OWORD *)(v56 + 16);
  long long v58 = *(_OWORD *)(v56 + 32);
  long long v59 = *(_OWORD *)(v56 + 48);
  *(_DWORD *)(v55 + 63) = *(_DWORD *)(v56 + 63);
  *(_OWORD *)(v55 + 32) = v58;
  *(_OWORD *)(v55 + 48) = v59;
  *(_OWORD *)(v55 + 16) = v57;
  *(void *)(v55 + 72) = *(void *)(v56 + 72);
  uint64_t v60 = v47[11];
  uint64_t v61 = (void *)(v44 + v60);
  uint64_t v62 = (void *)(v45 + v60);
  *uint64_t v61 = *v62;
  v61[1] = v62[1];
  v61[2] = v62[2];
  v61[3] = v62[3];
  uint64_t v63 = v47[12];
  uint64_t v64 = v44 + v63;
  uint64_t v65 = (long long *)(v45 + v63);
  uint64_t v66 = *(void *)(v44 + v63 + 16);
  uint64_t v67 = *(void *)(v45 + v63 + 16);
  if (v66)
  {
    if (v67)
    {
      long long v68 = *(void **)v64;
      uint64_t v69 = *(void **)v65;
      *(void *)uint64_t v64 = *(void *)v65;
      id v70 = v69;

      *(void *)(v64 + 8) = *((void *)v65 + 1);
      *(void *)(v64 + 16) = *((void *)v65 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(v64 + 24) = *((void *)v65 + 3);
      *(void *)(v64 + 32) = *((void *)v65 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v71 = *((void *)v65 + 5);
      uint64_t v72 = *((void *)v65 + 6);
      long long v99 = a3;
      char v73 = *((unsigned char *)v65 + 56);
      sub_249930CE0(v71, v72, v73);
      uint64_t v74 = *(void *)(v64 + 40);
      uint64_t v75 = *(void *)(v64 + 48);
      char v76 = *(unsigned char *)(v64 + 56);
      *(void *)(v64 + 40) = v71;
      *(void *)(v64 + 48) = v72;
      *(unsigned char *)(v64 + 56) = v73;
      a3 = v99;
      sub_249930F4C(v74, v75, v76);
    }
    else
    {
      sub_249931FAC(v64);
      long long v81 = v65[1];
      long long v80 = v65[2];
      long long v82 = *v65;
      *(_OWORD *)(v64 + 41) = *(long long *)((char *)v65 + 41);
      *(_OWORD *)(v64 + 16) = v81;
      *(_OWORD *)(v64 + 32) = v80;
      *(_OWORD *)uint64_t v64 = v82;
    }
  }
  else if (v67)
  {
    uint64_t v77 = *(void **)v65;
    *(void *)uint64_t v64 = *(void *)v65;
    *(void *)(v64 + 8) = *((void *)v65 + 1);
    *(void *)(v64 + 16) = *((void *)v65 + 2);
    *(void *)(v64 + 24) = *((void *)v65 + 3);
    *(void *)(v64 + 32) = *((void *)v65 + 4);
    long long v100 = a3;
    uint64_t v78 = *((void *)v65 + 5);
    uint64_t v98 = *((void *)v65 + 6);
    char v97 = *((unsigned char *)v65 + 56);
    id v79 = v77;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249930CE0(v78, v98, v97);
    *(void *)(v64 + 40) = v78;
    *(void *)(v64 + 48) = v98;
    a3 = v100;
    *(unsigned char *)(v64 + 56) = v97;
  }
  else
  {
    long long v84 = *v65;
    long long v85 = v65[1];
    long long v86 = v65[2];
    *(_OWORD *)(v64 + 41) = *(long long *)((char *)v65 + 41);
    *(_OWORD *)(v64 + 16) = v85;
    *(_OWORD *)(v64 + 32) = v86;
    *(_OWORD *)uint64_t v64 = v84;
  }
  *(void *)(v64 + 64) = *((void *)v65 + 8);
  uint64_t v87 = v47[13];
  uint64_t v88 = (void *)(v44 + v87);
  uint64_t v89 = (void *)(v45 + v87);
  *uint64_t v88 = *v89;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v88[1] = v89[1];
  uint64_t v90 = a3[13];
  uint64_t v91 = (void *)(a1 + v90);
  uint64_t v92 = (void *)(a2 + v90);
  *uint64_t v91 = *v92;
  v91[1] = v92[1];
  uint64_t v93 = a3[14];
  uint64_t v94 = (void *)(a1 + v93);
  uint64_t v95 = (void *)(a2 + v93);
  void *v94 = *v95;
  v94[1] = v95[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for LayoutView(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v7 = a3[8];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = sub_249AEC048();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  if (*(unsigned char *)(a2 + v12 + 8) == 1)
  {
    uint64_t v13 = swift_unknownObjectWeakTakeInit();
    char v15 = 1;
  }
  else
  {
    *(void *)uint64_t v13 = *(void *)v14;
    char v15 = *(unsigned char *)(v14 + 8);
  }
  *(unsigned char *)(v13 + 8) = v15;
  uint64_t v16 = a3[10];
  uint64_t v17 = (char *)(a1 + v16);
  uint64_t v18 = (char *)(a2 + v16);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    uint64_t v22 = sub_249AEB808();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v17, v18, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  *(void *)&v17[*(int *)(v23 + 28)] = *(void *)&v18[*(int *)(v23 + 28)];
  uint64_t v24 = a3[11];
  uint64_t v25 = a3[12];
  uint64_t v26 = a1 + v24;
  uint64_t v27 = a2 + v24;
  *(unsigned char *)(v26 + 16) = *(unsigned char *)(v27 + 16);
  *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
  uint64_t v28 = a1 + v25;
  uint64_t v29 = a2 + v25;
  uint64_t v30 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  uint64_t v31 = (int *)type metadata accessor for Layout();
  *(_OWORD *)(v28 + v31[5]) = *(_OWORD *)(v29 + v31[5]);
  *(void *)(v28 + v31[6]) = *(void *)(v29 + v31[6]);
  *(_OWORD *)(v28 + v31[7]) = *(_OWORD *)(v29 + v31[7]);
  *(void *)(v28 + v31[8]) = *(void *)(v29 + v31[8]);
  *(unsigned char *)(v28 + v31[9]) = *(unsigned char *)(v29 + v31[9]);
  uint64_t v32 = v31[10];
  int v33 = (_OWORD *)(v28 + v32);
  uint64_t v34 = (_OWORD *)(v29 + v32);
  long long v35 = v34[3];
  v33[2] = v34[2];
  void v33[3] = v35;
  v33[4] = v34[4];
  long long v36 = v34[1];
  *int v33 = *v34;
  v33[1] = v36;
  uint64_t v37 = v31[11];
  uint64_t v38 = (_OWORD *)(v28 + v37);
  uint64_t v39 = (_OWORD *)(v29 + v37);
  long long v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  uint64_t v41 = v31[12];
  uint64_t v42 = v28 + v41;
  uint64_t v43 = v29 + v41;
  long long v44 = *(_OWORD *)(v43 + 48);
  *(_OWORD *)(v42 + 32) = *(_OWORD *)(v43 + 32);
  *(_OWORD *)(v42 + 48) = v44;
  *(void *)(v42 + 64) = *(void *)(v43 + 64);
  long long v45 = *(_OWORD *)(v43 + 16);
  *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
  *(_OWORD *)(v42 + 16) = v45;
  *(_OWORD *)(v28 + v31[13]) = *(_OWORD *)(v29 + v31[13]);
  uint64_t v46 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v46) = *(_OWORD *)(a2 + v46);
  return a1;
}

uint64_t assignWithTake for LayoutView(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_2499AAF18(v8, v9);
  char v10 = *((unsigned char *)a2 + 32);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
  *(unsigned char *)(a1 + 32) = v10;
  sub_2499F4F10(v11, v12, v13);
  *(void *)(a1 + 40) = a2[5];
  swift_release();
  char v14 = *((unsigned char *)a2 + 64);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(unsigned __int8 *)(a1 + 64);
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  *(unsigned char *)(a1 + 64) = v14;
  j_j__swift_release(v15, v16);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v17 = a3[8];
    uint64_t v18 = (void *)(a1 + v17);
    uint64_t v19 = (char *)a2 + v17;
    sub_2498D60E8(a1 + v17, &qword_2696E1D28);
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = sub_249AEC048();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    uint64_t v22 = a3[9];
    uint64_t v23 = a1 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    sub_2498D60E8(a1 + v22, &qword_2696E1D00);
    if (*(unsigned char *)(v24 + 8) == 1)
    {
      swift_unknownObjectWeakTakeInit();
      char v25 = 1;
    }
    else
    {
      *(void *)uint64_t v23 = *(void *)v24;
      char v25 = *(unsigned char *)(v24 + 8);
    }
    *(unsigned char *)(v23 + 8) = v25;
  }
  uint64_t v26 = a3[10];
  uint64_t v27 = (char *)(a1 + v26);
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48);
  int v32 = v31(v27, 1, v29);
  int v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (!v33)
    {
      uint64_t v34 = sub_249AEB808();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v27, v28, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v33)
  {
    sub_2498D60E8((uint64_t)v27, &qword_2696DDB10);
LABEL_14:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8C8);
    memcpy(v27, v28, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_15;
  }
  uint64_t v85 = sub_249AEB808();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 40))(v27, v28, v85);
LABEL_15:
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  *(void *)&v27[*(int *)(v36 + 28)] = *(void *)&v28[*(int *)(v36 + 28)];
  swift_release();
  uint64_t v37 = a3[11];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = (uint64_t)a2 + v37;
  char v40 = *(unsigned char *)(v39 + 16);
  *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
  *(unsigned char *)(v38 + 16) = v40;
  sub_2499C3C6C();
  uint64_t v41 = a3[12];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = (uint64_t)a2 + v41;
  uint64_t v44 = sub_249AEB808();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  long long v45 = (int *)type metadata accessor for Layout();
  uint64_t v46 = v45[5];
  uint64_t v47 = (void *)(v42 + v46);
  uint64_t v48 = (uint64_t *)(v43 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  *uint64_t v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  *(void *)(v42 + v45[6]) = *(void *)(v43 + v45[6]);
  swift_bridgeObjectRelease();
  uint64_t v51 = v45[7];
  long long v52 = (void *)(v42 + v51);
  uint64_t v53 = (uint64_t *)(v43 + v51);
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  *long long v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  *(void *)(v42 + v45[8]) = *(void *)(v43 + v45[8]);
  swift_release();
  *(unsigned char *)(v42 + v45[9]) = *(unsigned char *)(v43 + v45[9]);
  uint64_t v56 = v45[10];
  uint64_t v57 = v42 + v56;
  uint64_t v58 = v43 + v56;
  long long v59 = *(_OWORD *)(v58 + 48);
  *(_OWORD *)(v57 + 32) = *(_OWORD *)(v58 + 32);
  *(_OWORD *)(v57 + 48) = v59;
  *(_DWORD *)(v57 + 63) = *(_DWORD *)(v58 + 63);
  long long v60 = *(_OWORD *)(v58 + 16);
  *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
  *(_OWORD *)(v57 + 16) = v60;
  *(void *)(v57 + 72) = *(void *)(v58 + 72);
  uint64_t v61 = v45[11];
  uint64_t v62 = (_OWORD *)(v42 + v61);
  uint64_t v63 = (_OWORD *)(v43 + v61);
  long long v64 = v63[1];
  *uint64_t v62 = *v63;
  v62[1] = v64;
  uint64_t v65 = v45[12];
  uint64_t v66 = v42 + v65;
  uint64_t v67 = v43 + v65;
  if (!*(void *)(v42 + v65 + 16))
  {
LABEL_19:
    long long v75 = *(_OWORD *)(v67 + 16);
    *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
    *(_OWORD *)(v66 + 16) = v75;
    *(_OWORD *)(v66 + 32) = *(_OWORD *)(v67 + 32);
    *(_OWORD *)(v66 + 41) = *(_OWORD *)(v67 + 41);
    goto LABEL_20;
  }
  if (!*(void *)(v67 + 16))
  {
    sub_249931FAC(v66);
    goto LABEL_19;
  }
  long long v68 = *(void **)v66;
  *(void *)uint64_t v66 = *(void *)v67;

  uint64_t v69 = *(void *)(v67 + 16);
  *(void *)(v66 + 8) = *(void *)(v67 + 8);
  *(void *)(v66 + 16) = v69;
  swift_bridgeObjectRelease();
  uint64_t v70 = *(void *)(v67 + 32);
  *(void *)(v66 + 24) = *(void *)(v67 + 24);
  *(void *)(v66 + 32) = v70;
  swift_bridgeObjectRelease();
  char v71 = *(unsigned char *)(v67 + 56);
  uint64_t v72 = *(void *)(v66 + 40);
  uint64_t v73 = *(void *)(v66 + 48);
  char v74 = *(unsigned char *)(v66 + 56);
  *(_OWORD *)(v66 + 40) = *(_OWORD *)(v67 + 40);
  *(unsigned char *)(v66 + 56) = v71;
  sub_249930F4C(v72, v73, v74);
LABEL_20:
  *(void *)(v66 + 64) = *(void *)(v67 + 64);
  uint64_t v76 = v45[13];
  uint64_t v77 = (void *)(v42 + v76);
  uint64_t v78 = (void *)(v43 + v76);
  *uint64_t v77 = *v78;
  swift_bridgeObjectRelease();
  v77[1] = v78[1];
  uint64_t v79 = a3[14];
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  long long v80 = (void *)(a1 + v79);
  long long v81 = (uint64_t *)((char *)a2 + v79);
  uint64_t v83 = *v81;
  uint64_t v82 = v81[1];
  *long long v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LayoutView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_2499F76F4);
}

uint64_t sub_2499F76F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3098);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[8];
LABEL_7:
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v12(a1 + v9, a2, v7);
  }
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[10];
    goto LABEL_7;
  }
  uint64_t v11 = type metadata accessor for Layout();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v7 = v11;
    uint64_t v8 = *(void *)(v11 - 8);
    uint64_t v9 = a3[12];
    goto LABEL_7;
  }
  unint64_t v14 = *(void *)(a1 + a3[14] + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for LayoutView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_2499F7870);
}

uint64_t sub_2499F7870(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3098);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[8];
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
    {
      uint64_t v9 = v12;
      uint64_t v10 = *(void *)(v12 - 8);
      uint64_t v11 = a4[10];
    }
    else
    {
      uint64_t result = type metadata accessor for Layout();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[14] + 8) = (a2 - 1);
        return result;
      }
      uint64_t v9 = result;
      uint64_t v10 = *(void *)(result - 8);
      uint64_t v11 = a4[12];
    }
  }
  unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v14(a1 + v11, a2, a2, v9);
}

void sub_2499F79D4()
{
  sub_2499F7B14();
  if (v0 <= 0x3F)
  {
    sub_2499F7B6C();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Layout();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_2499F7B14()
{
  if (!qword_2696E30B0)
  {
    sub_249AEC048();
    unint64_t v0 = sub_249AEBB18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E30B0);
    }
  }
}

void sub_2499F7B6C()
{
  if (!qword_2696E30B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF8C8);
    unint64_t v0 = sub_249AECA78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E30B8);
    }
  }
}

uint64_t sub_2499F7BC8()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_2499F7C48@<D0>(double *a1@<X8>)
{
  return sub_2499F4A8C(a1);
}

uint64_t sub_2499F7C70()
{
  return sub_2499F4B08();
}

double sub_2499F7C98@<D0>(double *a1@<X8>)
{
  return sub_2499F4A8C(a1);
}

uint64_t sub_2499F7CC0()
{
  return sub_2499F4B08();
}

double sub_2499F7CE8@<D0>(double *a1@<X8>)
{
  return sub_2499F4A8C(a1);
}

uint64_t sub_2499F7D10()
{
  return sub_2499F4B08();
}

uint64_t sub_2499F7D38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2499F7DA0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249AEBF88();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2499F7DD0()
{
  return sub_249AEBF98();
}

unsigned char *sub_2499F7DF8(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_2499F7E14@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249AEBF88();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2499F7E44()
{
  return sub_249AEBF98();
}

uint64_t sub_2499F7E6C()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

unsigned char *sub_2499F7E7C(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

uint64_t sub_2499F7E94(uint64_t a1)
{
  return a1;
}

uint64_t sub_2499F7EE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Zone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2499F7F44()
{
  uint64_t v1 = (int *)type metadata accessor for LayoutView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v19 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v20 = type metadata accessor for Zone();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v20 - 8) + 80);
  uint64_t v18 = *(void *)(*(void *)(v20 - 8) + 64);
  uint64_t v21 = v0;
  uint64_t v4 = v0 + ((v2 + 16) & ~v2);
  sub_2499AAF18(*(void *)v4, *(unsigned char *)(v4 + 8));
  sub_2499F4F10(*(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned char *)(v4 + 32));
  swift_release();
  j_j__swift_release(*(void *)(v4 + 56), *(unsigned __int8 *)(v4 + 64));
  uint64_t v5 = v4 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1D28);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_249AEC048();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  if (*(unsigned char *)(v4 + v1[9] + 8)) {
    swift_unknownObjectWeakDestroy();
  }
  else {
    swift_release();
  }
  uint64_t v7 = v4 + v1[10];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDB10);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = sub_249AEB808();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E2F88);
  swift_release();
  sub_2499C3C6C();
  uint64_t v10 = v4 + v1[12];
  uint64_t v11 = sub_249AEB808();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  uint64_t v13 = type metadata accessor for Layout();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v14 = v10 + *(int *)(v13 + 48);
  if (*(void *)(v14 + 16))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_249930F4C(*(void *)(v14 + 40), *(void *)(v14 + 48), *(unsigned char *)(v14 + 56));
  }
  uint64_t v15 = v2 | v3 | 7;
  uint64_t v16 = (((v2 + 16) & ~v2) + v19 + v3) & ~v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12(v21 + v16, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_249884EC8(*(void *)(v21 + v16 + *(int *)(v20 + 32)), *(void *)(v21 + v16 + *(int *)(v20 + 32) + 8), *(unsigned char *)(v21 + v16 + *(int *)(v20 + 32) + 16));

  return MEMORY[0x270FA0238](v21, v16 + v18, v15);
}

uint64_t sub_2499F8314()
{
  type metadata accessor for LayoutView(0);
  type metadata accessor for Zone();

  return sub_2499F478C();
}

uint64_t sub_2499F83F0()
{
  return sub_2499F4800(v0[2], v0[3], v0[4]);
}

uint64_t sub_2499F8410()
{
  return sub_2499F12BC();
}

uint64_t sub_2499F8430()
{
  return sub_2499F1398();
}

uint64_t sub_2499F8450(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_2499F84AC()
{
  unint64_t result = qword_2696E3110;
  if (!qword_2696E3110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3110);
  }
  return result;
}

uint64_t InstrumentDataSource.__allocating_init<A>(dataType:input:)(unsigned char *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_2499F8C30(a1, a2, 0);
  return v4;
}

uint64_t sub_2499F8554()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_249AEB9E8();
  swift_release();

  return swift_release();
}

uint64_t sub_2499F85CC(uint64_t a1)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2499F8BC8(a1, (uint64_t)v3);
  swift_retain();
  sub_249AEB9F8();
  return sub_24995736C(a1);
}

void (*sub_2499F864C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  uint64_t v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_249AEB9D8();
  return sub_249906998;
}

uint64_t sub_2499F86D8()
{
  return swift_endAccess();
}

uint64_t sub_2499F8740(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B50);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  sub_249AEB9C8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t sub_2499F88B4()
{
  return swift_endAccess();
}

uint64_t sub_2499F8918(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B50);
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  sub_249AEB9C8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_2499F8A44(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1B50);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  _OWORD v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  sub_249AEB9B8();
  swift_endAccess();
  return sub_249906EA4;
}

void InstrumentDataSource.identifier.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier);
}

uint64_t sub_2499F8B68(unsigned char *a1, uint64_t a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  sub_2499F8C30(a1, a2, a3);
  return v6;
}

uint64_t sub_2499F8BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499F8C30(unsigned char *a1, uint64_t a2, char a3)
{
  uint64_t v7 = *(void *)a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v12 = v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v27 = 0;
  long long v25 = 0u;
  long long v26 = 0u;
  sub_2499F8BC8((uint64_t)&v25, (uint64_t)v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  sub_249AEB9A8();
  sub_24995736C((uint64_t)&v25);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables) = MEMORY[0x263F8EE88];
  uint64_t v13 = (void *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v13 = nullsub_1;
  v13[1] = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_identifier) = a1[16];
  uint64_t v14 = &a1[*(void *)(*(void *)a1 + 112)];
  *((void *)&v26 + 1) = *(void *)(v7 + 80);
  uint64_t v15 = *((void *)&v26 + 1);
  uint64_t v16 = *(void *)(v7 + 88);
  uint64_t v27 = v16;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v25);
  uint64_t v18 = *(void (**)(uint64_t *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16);
  v18(boxed_opaque_existential_0, v14, v15);
  sub_2499F9748((uint64_t)&v25, v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) = a3;
  if (a3)
  {
    *((void *)&v26 + 1) = v15;
    uint64_t v27 = v16;
    uint64_t v19 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v25);
    v18(v19, v14, v15);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2499F8BC8((uint64_t)&v25, (uint64_t)v24);
    swift_retain();
    sub_249AEB9F8();
    sub_24995736C((uint64_t)&v25);
  }
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRelease();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v20 = (uint64_t (*)())swift_allocObject();
  *((void *)v20 + 2) = v15;
  *((void *)v20 + 3) = v16;
  *((void *)v20 + 4) = a2;
  *((void *)v20 + 5) = v3;
  uint64_t v21 = (uint64_t (**)())(v3 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
  *uint64_t v21 = sub_2499F97F0;
  v21[1] = v20;
  swift_release();
  return v3;
}

uint64_t sub_2499F8F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_unownedRetainStrong();
  swift_unownedRetain();
  swift_unownedRetain();
  swift_release();
  swift_unownedRetainStrong();
  swift_unownedRelease();
  swift_unownedRetain();
  swift_release();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a3;
  v7[3] = a4;
  _OWORD v7[4] = a2;
  sub_249AEB948();
  swift_getWitnessTable();
  sub_249AEBA68();
  swift_unownedRelease();
  swift_release();
  swift_unownedRetainStrong();
  swift_beginAccess();
  sub_249AEB958();
  swift_endAccess();
  swift_release();
  return swift_release();
}

uint64_t sub_2499F9090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_unownedRetainStrong();
  v10[3] = a3;
  v10[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_0, a1, a3);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_2499F8BC8((uint64_t)v10, (uint64_t)&v9);
  swift_retain();
  sub_249AEB9F8();
  sub_24995736C((uint64_t)v10);
  return swift_release();
}

void sub_2499F9168()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) & 1) == 0)
  {
    *(unsigned char *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 1;
    uint64_t v1 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_startSubscription);
    uint64_t v2 = swift_retain();
    v1(v2);
    swift_release();
  }
}

uint64_t sub_2499F91DC()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_cancellables);
  swift_beginAccess();
  *uint64_t v1 = MEMORY[0x263F8EE88];
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_useDefaultValue) == 1)
  {
    sub_2499F8BC8(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue, (uint64_t)v4);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_2499F8BC8((uint64_t)v4, (uint64_t)v3);
    swift_retain();
    sub_249AEB9F8();
    uint64_t result = sub_24995736C((uint64_t)v4);
  }
  *(unsigned char *)(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_listening) = 0;
  return result;
}

uint64_t InstrumentDataSource.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24995736C(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue);
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t InstrumentDataSource.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource__currentValue;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E1C98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_24995736C(v0 + OBJC_IVAR____TtC14CarPlayAssetUI20InstrumentDataSource_defaultValue);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_2499F9434@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for InstrumentDataSource();
  uint64_t result = sub_249AEB978();
  *a1 = result;
  return result;
}

uint64_t sub_2499F9484()
{
  return type metadata accessor for InstrumentDataSource();
}

uint64_t type metadata accessor for InstrumentDataSource()
{
  uint64_t result = qword_2696E3148;
  if (!qword_2696E3148) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2499F94D8()
{
  sub_2499F96EC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for InstrumentDataSource(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for InstrumentDataSource);
}

uint64_t dispatch thunk of InstrumentDataSource.currentValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of InstrumentDataSource.currentValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of InstrumentDataSource.currentValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of InstrumentDataSource.$currentValue.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of InstrumentDataSource.$currentValue.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of InstrumentDataSource.$currentValue.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of InstrumentDataSource.startListening()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of InstrumentDataSource.stopListening()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

void sub_2499F96EC()
{
  if (!qword_2696E3158)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696DF130);
    unint64_t v0 = sub_249AEBA18();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_2696E3158);
    }
  }
}

uint64_t sub_2499F9748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF130);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2499F97B0()
{
  swift_release();
  swift_unownedRelease();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2499F97F0()
{
  return sub_2499F8F44(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_2499F97FC()
{
  swift_unownedRelease();

  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2499F9834(uint64_t a1)
{
  return sub_2499F9090(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_2499F9840()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t _s20SingleValueContainerCMa()
{
  return self;
}

uint64_t sub_2499F98AC()
{
  uint64_t v1 = sub_249AEDB28();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v11, 0, sizeof(v11));
  if (*(unsigned char *)(v0 + 32))
  {
    sub_2498FE6E0((uint64_t)v11);
    *(void *)(v0 + 16) = 7104878;
    *(void *)(v0 + 24) = 0xE300000000000000;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v0 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v6 = sub_249AEDB38();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = (char *)v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    void v8[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
    uint64_t v10 = swift_allocObject();
    *uint64_t v8 = v10;
    sub_2499FB5AC((uint64_t)v11, v10 + 16);
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v9, v4, v1);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v6 - 8) + 104))(v8, *MEMORY[0x263F8DCE0], v6);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return sub_2498FE6E0((uint64_t)v11);
  }
  return result;
}

uint64_t sub_2499F9AC0(char a1)
{
  uint64_t v3 = sub_249AEDB28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v15, 0, sizeof(v15));
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    sub_2498FE6E0((uint64_t)v15);
    uint64_t v7 = 1702195828;
    if ((a1 & 1) == 0) {
      uint64_t v7 = 0x65736C6166;
    }
    unint64_t v8 = 0xE500000000000000;
    if (a1) {
      unint64_t v8 = 0xE400000000000000;
    }
    *(void *)(v1 + 16) = v7;
    *(void *)(v1 + 24) = v8;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v1 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v10 = sub_249AEDB38();
    swift_allocError();
    uint64_t v12 = v11;
    uint64_t v13 = (char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    v12[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
    uint64_t v14 = swift_allocObject();
    *uint64_t v12 = v14;
    sub_2499FB5AC((uint64_t)v15, v14 + 16);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v13, v6, v3);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v10 - 8) + 104))(v12, *MEMORY[0x263F8DCE0], v10);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_2498FE6E0((uint64_t)v15);
  }
  return result;
}

uint64_t sub_2499F9CF8(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_249AEDB28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x263F8D310];
  uint64_t v18 = a1;
  unint64_t v19 = a2;
  if (*(unsigned char *)(v3 + 32))
  {
    swift_bridgeObjectRetain();
    sub_2498FE6E0((uint64_t)&v18);
    uint64_t v18 = 34;
    unint64_t v19 = 0xE100000000000000;
    v17[4] = a1;
    v17[5] = a2;
    v17[2] = 34;
    v17[3] = 0xE100000000000000;
    v17[0] = 8796;
    v17[1] = 0xE200000000000000;
    sub_24988CE30();
    sub_249AED948();
    sub_249AED1E8();
    swift_bridgeObjectRelease();
    sub_249AED1E8();
    unint64_t v10 = v19;
    *(void *)(v3 + 16) = v18;
    *(void *)(v3 + 24) = v10;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v3 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v12 = sub_249AEDB38();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    void v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
    uint64_t v16 = swift_allocObject();
    *uint64_t v14 = v16;
    sub_2499FB5AC((uint64_t)&v18, v16 + 16);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x263F8DCE0], v12);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2498FE6E0((uint64_t)&v18);
  }
  return result;
}

uint64_t sub_2499F9FAC(double a1)
{
  uint64_t v3 = sub_249AEDB28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x263F8D538];
  double v15 = a1;
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    sub_2498FE6E0((uint64_t)&v15);
    if ((~*(void *)&a1 & 0x7FF0000000000000) != 0 || (*(void *)&a1 & 0xFFFFFFFFFFFFFLL) == 0)
    {
      double v15 = 0.0;
      unint64_t v16 = 0xE000000000000000;
      sub_249AED598();
      uint64_t v8 = *(void *)&v15;
      unint64_t v7 = v16;
    }
    else
    {
      unint64_t v7 = 0xE300000000000000;
      uint64_t v8 = 3157808;
    }
    *(void *)(v1 + 16) = v8;
    *(void *)(v1 + 24) = v7;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v1 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v9 = sub_249AEDB38();
    swift_allocError();
    uint64_t v11 = v10;
    uint64_t v12 = (char *)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    void v11[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
    uint64_t v13 = swift_allocObject();
    *uint64_t v11 = v13;
    sub_2499FB5AC((uint64_t)&v15, v13 + 16);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v12, v6, v3);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, *MEMORY[0x263F8DCE0], v9);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_2498FE6E0((uint64_t)&v15);
  }
  return result;
}

uint64_t sub_2499FA21C(float a1)
{
  uint64_t v3 = sub_249AEDB28();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x263F8D5C8];
  *(float *)&uint64_t v15 = a1;
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    sub_2498FE6E0((uint64_t)&v15);
    if ((~LODWORD(a1) & 0x7F800000) != 0 || (LODWORD(a1) & 0x7FFFFF) == 0)
    {
      uint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      sub_249AED5C8();
      uint64_t v8 = v15;
      unint64_t v7 = v16;
    }
    else
    {
      unint64_t v7 = 0xE300000000000000;
      uint64_t v8 = 3157808;
    }
    *(void *)(v1 + 16) = v8;
    *(void *)(v1 + 24) = v7;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v1 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v9 = sub_249AEDB38();
    swift_allocError();
    uint64_t v11 = v10;
    uint64_t v12 = (char *)v10 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    void v11[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
    uint64_t v13 = swift_allocObject();
    *uint64_t v11 = v13;
    sub_2499FB5AC((uint64_t)&v15, v13 + 16);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v12, v6, v3);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v9 - 8) + 104))(v11, *MEMORY[0x263F8DCE0], v9);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    return sub_2498FE6E0((uint64_t)&v15);
  }
  return result;
}

uint64_t sub_2499FA48C(char a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_249AEDB28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = a2;
  v17[0] = a1;
  if (*(unsigned char *)(v4 + 32))
  {
    sub_2498FE6E0((uint64_t)v17);
    v17[0] = a1;
    *(void *)(v4 + 16) = sub_249AEDF48();
    *(void *)(v4 + 24) = v10;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v12 = sub_249AEDB38();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    void v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
    uint64_t v16 = swift_allocObject();
    *uint64_t v14 = v16;
    sub_2499FB5AC((uint64_t)v17, v16 + 16);
    (*(void (**)(char *, unsigned char *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x263F8DCE0], v12);
    swift_willThrow();
    (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2498FE6E0((uint64_t)v17);
  }
  return result;
}

uint64_t sub_2499FA6BC(__int16 a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_249AEDB28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a2;
  v17[0] = a1;
  if (*(unsigned char *)(v4 + 32))
  {
    sub_2498FE6E0((uint64_t)v17);
    v17[0] = a1;
    *(void *)(v4 + 16) = sub_249AEDF48();
    *(void *)(v4 + 24) = v10;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v12 = sub_249AEDB38();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    void v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
    uint64_t v16 = swift_allocObject();
    *uint64_t v14 = v16;
    sub_2499FB5AC((uint64_t)v17, v16 + 16);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x263F8DCE0], v12);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2498FE6E0((uint64_t)v17);
  }
  return result;
}

uint64_t sub_2499FA8EC(int a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_249AEDB28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a2;
  v17[0] = a1;
  if (*(unsigned char *)(v4 + 32))
  {
    sub_2498FE6E0((uint64_t)v17);
    v17[0] = a1;
    *(void *)(v4 + 16) = sub_249AEDF48();
    *(void *)(v4 + 24) = v10;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v12 = sub_249AEDB38();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    void v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
    uint64_t v16 = swift_allocObject();
    *uint64_t v14 = v16;
    sub_2499FB5AC((uint64_t)v17, v16 + 16);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x263F8DCE0], v12);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2498FE6E0((uint64_t)v17);
  }
  return result;
}

uint64_t sub_2499FAB1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v6 = sub_249AEDB28();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[3] = a2;
  v17[0] = a1;
  if (*(unsigned char *)(v4 + 32))
  {
    sub_2498FE6E0((uint64_t)v17);
    v17[0] = a1;
    *(void *)(v4 + 16) = sub_249AEDF48();
    *(void *)(v4 + 24) = v10;
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v4 + 32) = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v12 = sub_249AEDB38();
    swift_allocError();
    uint64_t v14 = v13;
    uint64_t v15 = (char *)v13 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    void v14[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
    uint64_t v16 = swift_allocObject();
    *uint64_t v14 = v16;
    sub_2499FB5AC((uint64_t)v17, v16 + 16);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v15, v9, v6);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v14, *MEMORY[0x263F8DCE0], v12);
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_2498FE6E0((uint64_t)v17);
  }
  return result;
}

uint64_t sub_2499FAD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = sub_249AEDB28();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v35[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 == MEMORY[0x263F06F78] || sub_2499FB52C() == a2)
  {
    swift_bridgeObjectRetain();
    sub_249AEDAE8();
    uint64_t v18 = sub_249AEDB38();
    swift_allocError();
    uint64_t v20 = v19;
    uint64_t v21 = (char *)v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
    v20[3] = a2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v20);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(boxed_opaque_existential_0, a1, a2);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v21, v10, v7);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, *MEMORY[0x263F8DCE0], v18);
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    uint64_t v36 = a2;
    uint64_t v11 = __swift_allocate_boxed_opaque_existential_0(v35);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v11, a1, a2);
    if (*(unsigned char *)(v4 + 32) == 1)
    {
      sub_2498FE6E0((uint64_t)v35);
      uint64_t v12 = *(void *)(v4 + 40);
      uint64_t v13 = *(void *)(v4 + 48);
      uint64_t v14 = type metadata accessor for _LuaEncoder();
      uint64_t v15 = (void *)swift_allocObject();
      uint64_t v38 = v3;
      v15[4] = 0;
      _OWORD v15[2] = v12;
      void v15[3] = v13;
      _OWORD v15[5] = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v36 = v14;
      unint64_t v37 = sub_2499FB614();
      v35[0] = (uint64_t)v15;
      swift_retain();
      uint64_t v16 = v38;
      sub_249AECF08();
      if (v16)
      {
        swift_release();
        uint64_t result = __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v35);
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v35);
        if (v15[4])
        {
          uint64_t v28 = v15[5];
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 8);
          swift_unknownObjectRetain();
          uint64_t v31 = v30(ObjectType, v28);
          unint64_t v33 = v32;
          swift_release();
          swift_unknownObjectRelease();
        }
        else
        {
          swift_release();
          uint64_t v31 = 0;
          unint64_t v33 = 0xE000000000000000;
        }
        *(void *)(v4 + 16) = v31;
        *(void *)(v4 + 24) = v33;
        uint64_t result = swift_bridgeObjectRelease();
      }
      *(unsigned char *)(v4 + 32) = 0;
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_249AEDAE8();
      uint64_t v23 = sub_249AEDB38();
      swift_allocError();
      long long v25 = v24;
      long long v26 = (char *)v24 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_2696E3168) + 48);
      v25[3] = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
      uint64_t v27 = swift_allocObject();
      *long long v25 = v27;
      sub_2499FB5AC((uint64_t)v35, v27 + 16);
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v26, v10, v7);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, *MEMORY[0x263F8DCE0], v23);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      return sub_2498FE6E0((uint64_t)v35);
    }
  }
  return result;
}

uint64_t sub_2499FB1EC()
{
  return sub_2499F98AC();
}

uint64_t sub_2499FB210(char a1)
{
  return sub_2499F9AC0(a1);
}

uint64_t sub_2499FB234(uint64_t a1, unint64_t a2)
{
  return sub_2499F9CF8(a1, a2);
}

uint64_t sub_2499FB258(double a1)
{
  return sub_2499F9FAC(a1);
}

uint64_t sub_2499FB27C(float a1)
{
  return sub_2499FA21C(a1);
}

uint64_t sub_2499FB2A0(uint64_t a1)
{
  return sub_2499FAB1C(a1, MEMORY[0x263F8D6C8]);
}

uint64_t sub_2499FB2D4(char a1)
{
  return sub_2499FA48C(a1, MEMORY[0x263F8E498]);
}

uint64_t sub_2499FB308(__int16 a1)
{
  return sub_2499FA6BC(a1, MEMORY[0x263F8E4F0]);
}

uint64_t sub_2499FB33C(int a1)
{
  return sub_2499FA8EC(a1, MEMORY[0x263F8E548]);
}

uint64_t sub_2499FB370(uint64_t a1)
{
  return sub_2499FAB1C(a1, MEMORY[0x263F8E5C0]);
}

uint64_t sub_2499FB3A4()
{
  return sub_249AEE198();
}

uint64_t sub_2499FB3BC(uint64_t a1)
{
  return sub_2499FAB1C(a1, MEMORY[0x263F8D9D0]);
}

uint64_t sub_2499FB3F0(char a1)
{
  return sub_2499FA48C(a1, MEMORY[0x263F8E778]);
}

uint64_t sub_2499FB424(__int16 a1)
{
  return sub_2499FA6BC(a1, MEMORY[0x263F8E888]);
}

uint64_t sub_2499FB458(int a1)
{
  return sub_2499FA8EC(a1, MEMORY[0x263F8E8F8]);
}

uint64_t sub_2499FB48C(uint64_t a1)
{
  return sub_2499FAB1C(a1, MEMORY[0x263F8E970]);
}

uint64_t sub_2499FB4C0()
{
  return sub_249AEE1A8();
}

uint64_t sub_2499FB4D8(uint64_t a1, uint64_t a2)
{
  return sub_2499FAD4C(a1, a2);
}

uint64_t sub_2499FB4FC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_2499FB52C()
{
  unint64_t result = qword_2696E3160;
  if (!qword_2696E3160)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2696E3160);
  }
  return result;
}

uint64_t sub_2499FB56C()
{
  if (*(void *)(v0 + 40)) {
    __swift_destroy_boxed_opaque_existential_2Tm(v0 + 16);
  }

  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2499FB5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696DF8A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2499FB614()
{
  unint64_t result = qword_2696E16F8;
  if (!qword_2696E16F8)
  {
    type metadata accessor for _LuaEncoder();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E16F8);
  }
  return result;
}

uint64_t ShadowConfiguration.image.getter@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, 0x1B0uLL);
  memcpy(a1, v1, 0x1B0uLL);
  return sub_2499FB75C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24988247C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_249882468);
}

void *ShadowConfiguration.image.setter(const void *a1)
{
  memcpy(__dst, v1, 0x1B0uLL);
  sub_2499FB75C((uint64_t)__dst, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2498826E4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2498826D0);
  return memcpy(v1, a1, 0x1B0uLL);
}

uint64_t sub_2499FB75C(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 72);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 96);
  uint64_t v14 = *(void *)(a1 + 120);
  uint64_t v15 = *(void *)(a1 + 112);
  uint64_t v21 = *(void *)(a1 + 152);
  uint64_t v22 = *(void *)(a1 + 144);
  uint64_t v19 = *(void *)(a1 + 168);
  uint64_t v20 = *(void *)(a1 + 160);
  uint64_t v27 = *(void *)(a1 + 200);
  uint64_t v28 = *(void *)(a1 + 192);
  uint64_t v25 = *(void *)(a1 + 216);
  uint64_t v26 = *(void *)(a1 + 208);
  uint64_t v23 = *(void *)(a1 + 232);
  uint64_t v24 = *(void *)(a1 + 224);
  uint64_t v32 = *(void *)(a1 + 248);
  uint64_t v33 = *(void *)(a1 + 240);
  uint64_t v30 = *(void *)(a1 + 264);
  uint64_t v31 = *(void *)(a1 + 256);
  uint64_t v37 = *(void *)(a1 + 288);
  uint64_t v35 = *(void *)(a1 + 304);
  uint64_t v36 = *(void *)(a1 + 296);
  uint64_t v34 = *(void *)(a1 + 312);
  uint64_t v41 = *(void *)(a1 + 344);
  uint64_t v42 = *(void *)(a1 + 336);
  uint64_t v39 = *(void *)(a1 + 360);
  uint64_t v40 = *(void *)(a1 + 352);
  uint64_t v45 = *(void *)(a1 + 392);
  uint64_t v46 = *(void *)(a1 + 384);
  uint64_t v43 = *(void *)(a1 + 408);
  uint64_t v44 = *(void *)(a1 + 400);
  uint64_t v9 = *(unsigned __int8 *)(a1 + 80);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 128);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 176);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 272);
  unsigned int v18 = *(unsigned __int8 *)(a1 + 320);
  unsigned int v29 = *(unsigned __int8 *)(a1 + 368);
  unsigned int v38 = *(unsigned __int8 *)(a1 + 416);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned __int8 *)(a1 + 32));
  a2(v5, v6, v7, v8, v9);
  a2(v17, v16, v15, v14, v10);
  a2(v22, v21, v20, v19, v11);
  a3(v28, v27, v26, v25, v24, v23);
  a2(v33, v32, v31, v30, v12);
  a2(v37, v36, v35, v34, v18);
  a2(v42, v41, v40, v39, v29);
  a2(v46, v45, v44, v43, v38);
  return a1;
}

uint64_t (*ShadowConfiguration.image.modify())()
{
  return nullsub_1;
}

double ShadowConfiguration.shadowSize.getter()
{
  return *(double *)(v0 + 432);
}

void ShadowConfiguration.shadowSize.setter(double a1, double a2, double a3, double a4)
{
  v4[54] = a1;
  v4[55] = a2;
  v4[56] = a3;
  v4[57] = a4;
}

uint64_t (*ShadowConfiguration.shadowSize.modify())()
{
  return nullsub_1;
}

uint64_t ShadowConfiguration.color.getter()
{
  return swift_retain();
}

uint64_t ShadowConfiguration.color.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 464) = a1;
  return result;
}

uint64_t (*ShadowConfiguration.color.modify())()
{
  return nullsub_1;
}

double ShadowConfiguration.offset.getter()
{
  return *(double *)(v0 + 472);
}

void ShadowConfiguration.offset.setter(double a1, double a2)
{
  *(double *)(v2 + 472) = a1;
  *(double *)(v2 + 480) = a2;
}

uint64_t (*ShadowConfiguration.offset.modify())()
{
  return nullsub_1;
}

double ShadowConfiguration.blurRadius.getter()
{
  return *(double *)(v0 + 488);
}

void ShadowConfiguration.blurRadius.setter(double a1)
{
  *(double *)(v1 + 488) = a1;
}

uint64_t (*ShadowConfiguration.blurRadius.modify())()
{
  return nullsub_1;
}

double ShadowConfiguration.cornerRadius.getter()
{
  return *(double *)(v0 + 496);
}

void ShadowConfiguration.cornerRadius.setter(double a1)
{
  *(double *)(v1 + 496) = a1;
}

uint64_t (*ShadowConfiguration.cornerRadius.modify())()
{
  return nullsub_1;
}

uint64_t ShadowConfiguration.isContinuousCurve.getter()
{
  return *(unsigned __int8 *)(v0 + 504);
}

uint64_t ShadowConfiguration.isContinuousCurve.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 504) = result;
  return result;
}

uint64_t (*ShadowConfiguration.isContinuousCurve.modify())()
{
  return nullsub_1;
}

void *ShadowConfiguration.init(image:shadowSize:color:offset:blurRadius:cornerRadius:isContinuousCurve:)@<X0>(void *__src@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>, double a11@<D6>, double a12@<D7>)
{
  uint64_t result = memcpy((void *)a4, __src, 0x1B0uLL);
  *(double *)(a4 + 432) = a5;
  *(double *)(a4 + 440) = a6;
  *(double *)(a4 + 448) = a7;
  *(double *)(a4 + 456) = a8;
  *(void *)(a4 + 464) = a2;
  *(double *)(a4 + 472) = a9;
  *(double *)(a4 + 480) = a10;
  *(double *)(a4 + 488) = a11;
  *(double *)(a4 + 496) = a12;
  *(unsigned char *)(a4 + 504) = a3;
  return result;
}

unint64_t sub_2499FBB64(char a1)
{
  unint64_t result = 0x6567616D69;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6953776F64616873;
      break;
    case 2:
      unint64_t result = 0x726F6C6F63;
      break;
    case 3:
      unint64_t result = 0x74657366666FLL;
      break;
    case 4:
      unint64_t result = 0x6964615272756C62;
      break;
    case 5:
      unint64_t result = 0x615272656E726F63;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_2499FBC54()
{
  return sub_2499FBB64(*v0);
}

uint64_t sub_2499FBC5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_2499FD9A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2499FBC84(uint64_t a1)
{
  unint64_t v2 = sub_2499FC028();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_2499FBCC0(uint64_t a1)
{
  unint64_t v2 = sub_2499FC028();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ShadowConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3170);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v21[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v3 + 432);
  uint64_t v10 = *(void *)(v3 + 440);
  uint64_t v11 = *(void *)(v3 + 448);
  uint64_t v12 = *(void *)(v3 + 456);
  uint64_t v20 = *(void *)(v3 + 464);
  uint64_t v13 = *(void *)(v3 + 472);
  uint64_t v14 = *(void *)(v3 + 480);
  uint64_t v16 = *(void *)(v3 + 488);
  uint64_t v15 = *(void *)(v3 + 496);
  int v22 = *(unsigned __int8 *)(v3 + 504);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499FC028();
  uint64_t v17 = v5;
  sub_249AEE468();
  memcpy(v21, (const void *)v3, sizeof(v21));
  char v23 = 0;
  sub_2499FC07C();
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v18 = v20;
    v21[0] = v9;
    v21[1] = v10;
    void v21[2] = v11;
    v21[3] = v12;
    char v23 = 1;
    sub_2498F8D04();
    sub_249AEDF08();
    v21[0] = v18;
    char v23 = 2;
    sub_24988CC10();
    sub_249AEDF08();
    v21[0] = v13;
    v21[1] = v14;
    char v23 = 3;
    type metadata accessor for CGPoint(0);
    sub_2499FC6F0(&qword_2696E17F8);
    sub_249AEDF08();
    v21[0] = v16;
    char v23 = 4;
    sub_24988E51C();
    sub_249AEDF08();
    v21[0] = v15;
    char v23 = 5;
    sub_249AEDF08();
    LOBYTE(v21[0]) = 6;
    sub_249AEDEC8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v17);
}

unint64_t sub_2499FC028()
{
  unint64_t result = qword_2696E3178;
  if (!qword_2696E3178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3178);
  }
  return result;
}

unint64_t sub_2499FC07C()
{
  unint64_t result = qword_2696E3180;
  if (!qword_2696E3180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3180);
  }
  return result;
}

uint64_t ShadowConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3188);
  uint64_t v5 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v7 = (char *)&v21[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_2499FC028();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v8 = v5;
  v26[519] = 0;
  sub_2499FC69C();
  sub_249AEDE08();
  memcpy(v24, v25, sizeof(v24));
  memcpy(v26, v25, 0x1B0uLL);
  LOBYTE(v21[0]) = 1;
  sub_2499FB75C((uint64_t)v24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_24988247C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_249882468);
  sub_2498F8E7C();
  sub_249AEDE08();
  uint64_t v9 = v22[0];
  uint64_t v10 = v22[1];
  uint64_t v11 = v22[2];
  uint64_t v12 = v22[3];
  LOBYTE(v21[0]) = 2;
  sub_24988CBBC();
  sub_249AEDE08();
  uint64_t v13 = v22[0];
  type metadata accessor for CGPoint(0);
  LOBYTE(v21[0]) = 3;
  sub_2499FC6F0(&qword_2696E1838);
  swift_retain();
  sub_249AEDE08();
  uint64_t v14 = v22[0];
  uint64_t v15 = v22[1];
  LOBYTE(v21[0]) = 4;
  sub_24988E570();
  sub_249AEDE08();
  uint64_t v16 = v22[0];
  LOBYTE(v21[0]) = 5;
  sub_249AEDE08();
  uint64_t v17 = v22[0];
  v26[518] = 6;
  char v18 = sub_249AEDDC8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v20);
  v18 &= 1u;
  memcpy(v21, v24, 0x1B0uLL);
  void v21[54] = v9;
  v21[55] = v10;
  v21[56] = v11;
  v21[57] = v12;
  v21[58] = v13;
  v21[59] = v14;
  v21[60] = v15;
  v21[61] = v16;
  v21[62] = v17;
  LOBYTE(v21[63]) = v18;
  sub_2499FC734((uint64_t)v21);
  swift_release();
  sub_2499FB75C((uint64_t)v24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2498826E4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_2498826D0);
  memcpy(a2, v21, 0x1F9uLL);
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  memcpy(v22, v26, 0x1B0uLL);
  v22[54] = v9;
  v22[55] = v10;
  v22[56] = v11;
  v22[57] = v12;
  v22[58] = v13;
  v22[59] = v14;
  v22[60] = v15;
  v22[61] = v16;
  v22[62] = v17;
  char v23 = v18;
  return sub_2499FC918((uint64_t)v22);
}

unint64_t sub_2499FC69C()
{
  unint64_t result = qword_2696E3190;
  if (!qword_2696E3190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3190);
  }
  return result;
}

uint64_t sub_2499FC6F0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CGPoint(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2499FC734(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void **)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void **)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v12 = *(void **)(a1 + 112);
  uint64_t v18 = *(void *)(a1 + 152);
  uint64_t v19 = *(void **)(a1 + 144);
  uint64_t v16 = *(void *)(a1 + 168);
  uint64_t v17 = *(void **)(a1 + 160);
  uint64_t v24 = *(void *)(a1 + 200);
  uint64_t v25 = *(void **)(a1 + 192);
  uint64_t v22 = *(void *)(a1 + 216);
  char v23 = *(void **)(a1 + 208);
  uint64_t v21 = *(void *)(a1 + 224);
  uint64_t v28 = *(void *)(a1 + 248);
  unsigned int v29 = *(void **)(a1 + 240);
  uint64_t v26 = *(void *)(a1 + 264);
  uint64_t v27 = *(void **)(a1 + 256);
  uint64_t v34 = *(void **)(a1 + 288);
  uint64_t v32 = *(void **)(a1 + 304);
  uint64_t v33 = *(void *)(a1 + 296);
  uint64_t v31 = *(void *)(a1 + 312);
  uint64_t v37 = *(void *)(a1 + 344);
  unsigned int v38 = *(void **)(a1 + 336);
  uint64_t v35 = *(void *)(a1 + 360);
  uint64_t v36 = *(void **)(a1 + 352);
  uint64_t v41 = *(void *)(a1 + 392);
  uint64_t v42 = *(void **)(a1 + 384);
  uint64_t v39 = *(void *)(a1 + 408);
  uint64_t v40 = *(void **)(a1 + 400);
  char v7 = *(unsigned char *)(a1 + 80);
  char v8 = *(unsigned char *)(a1 + 128);
  char v9 = *(unsigned char *)(a1 + 176);
  char v10 = *(unsigned char *)(a1 + 272);
  char v15 = *(unsigned char *)(a1 + 320);
  char v20 = *(unsigned char *)(a1 + 368);
  char v30 = *(unsigned char *)(a1 + 416);
  sub_24988247C(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  sub_24988247C(v2, v3, v4, v5, v7);
  sub_24988247C(v14, v13, v12, v6, v8);
  sub_24988247C(v19, v18, v17, v16, v9);
  sub_249882468(v25, v24, v23, v22, v21);
  sub_24988247C(v29, v28, v27, v26, v10);
  sub_24988247C(v34, v33, v32, v31, v15);
  sub_24988247C(v38, v37, v36, v35, v20);
  sub_24988247C(v42, v41, v40, v39, v30);
  swift_retain();
  return a1;
}

uint64_t sub_2499FC918(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 48);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void **)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 104);
  uint64_t v14 = *(void **)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 120);
  uint64_t v12 = *(void **)(a1 + 112);
  uint64_t v18 = *(void *)(a1 + 152);
  uint64_t v19 = *(void **)(a1 + 144);
  uint64_t v16 = *(void *)(a1 + 168);
  uint64_t v17 = *(void **)(a1 + 160);
  uint64_t v24 = *(void *)(a1 + 200);
  uint64_t v25 = *(void **)(a1 + 192);
  uint64_t v22 = *(void *)(a1 + 216);
  char v23 = *(void **)(a1 + 208);
  uint64_t v21 = *(void *)(a1 + 224);
  uint64_t v28 = *(void *)(a1 + 248);
  unsigned int v29 = *(void **)(a1 + 240);
  uint64_t v26 = *(void *)(a1 + 264);
  uint64_t v27 = *(void **)(a1 + 256);
  uint64_t v34 = *(void **)(a1 + 288);
  uint64_t v32 = *(void **)(a1 + 304);
  uint64_t v33 = *(void *)(a1 + 296);
  uint64_t v31 = *(void *)(a1 + 312);
  uint64_t v37 = *(void *)(a1 + 344);
  unsigned int v38 = *(void **)(a1 + 336);
  uint64_t v35 = *(void *)(a1 + 360);
  uint64_t v36 = *(void **)(a1 + 352);
  uint64_t v41 = *(void *)(a1 + 392);
  uint64_t v42 = *(void **)(a1 + 384);
  uint64_t v39 = *(void *)(a1 + 408);
  uint64_t v40 = *(void **)(a1 + 400);
  char v7 = *(unsigned char *)(a1 + 80);
  char v8 = *(unsigned char *)(a1 + 128);
  char v9 = *(unsigned char *)(a1 + 176);
  char v10 = *(unsigned char *)(a1 + 272);
  char v15 = *(unsigned char *)(a1 + 320);
  char v20 = *(unsigned char *)(a1 + 368);
  char v30 = *(unsigned char *)(a1 + 416);
  sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  sub_2498826E4(v2, v3, v4, v5, v7);
  sub_2498826E4(v14, v13, v12, v6, v8);
  sub_2498826E4(v19, v18, v17, v16, v9);
  sub_2498826D0(v25, v24, v23, v22, v21);
  sub_2498826E4(v29, v28, v27, v26, v10);
  sub_2498826E4(v34, v33, v32, v31, v15);
  sub_2498826E4(v38, v37, v36, v35, v20);
  sub_2498826E4(v42, v41, v40, v39, v30);
  swift_release();
  return a1;
}

uint64_t sub_2499FCAFC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ShadowConfiguration.init(from:)(a1, a2);
}

uint64_t sub_2499FCB14(void *a1)
{
  return ShadowConfiguration.encode(to:)(a1);
}

uint64_t ShadowConfiguration.assets.getter()
{
  memcpy(v2, v0, sizeof(v2));
  return NinePartImage.assets.getter();
}

void ShadowConfiguration.restoreAssets(from:)(void *a1)
{
  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    if ((~*(_DWORD *)(v1 + 224) & 0xFELL) != 0) {
      ImageAsset.restore(from:)(a1);
    }
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
  }
}

uint64_t sub_2499FCC28()
{
  memcpy(v2, v0, sizeof(v2));
  return NinePartImage.assets.getter();
}

void sub_2499FCC64(void *a1)
{
  ImageAsset.restore(from:)(a1);
  if (!v2)
  {
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    if ((~*(_DWORD *)(v1 + 224) & 0xFELL) != 0) {
      ImageAsset.restore(from:)(a1);
    }
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
    ImageAsset.restore(from:)(a1);
  }
}

uint64_t destroy for ShadowConfiguration(uint64_t a1)
{
  sub_2498826E4(*(void **)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  sub_2498826E4(*(void **)(a1 + 48), *(void *)(a1 + 56), *(void **)(a1 + 64), *(void *)(a1 + 72), *(unsigned char *)(a1 + 80));
  sub_2498826E4(*(void **)(a1 + 96), *(void *)(a1 + 104), *(void **)(a1 + 112), *(void *)(a1 + 120), *(unsigned char *)(a1 + 128));
  sub_2498826E4(*(void **)(a1 + 144), *(void *)(a1 + 152), *(void **)(a1 + 160), *(void *)(a1 + 168), *(unsigned char *)(a1 + 176));
  if ((~*(_DWORD *)(a1 + 224) & 0xFELL) != 0) {
    sub_2498826E4(*(void **)(a1 + 192), *(void *)(a1 + 200), *(void **)(a1 + 208), *(void *)(a1 + 216), *(void *)(a1 + 224));
  }
  sub_2498826E4(*(void **)(a1 + 240), *(void *)(a1 + 248), *(void **)(a1 + 256), *(void *)(a1 + 264), *(unsigned char *)(a1 + 272));
  sub_2498826E4(*(void **)(a1 + 288), *(void *)(a1 + 296), *(void **)(a1 + 304), *(void *)(a1 + 312), *(unsigned char *)(a1 + 320));
  sub_2498826E4(*(void **)(a1 + 336), *(void *)(a1 + 344), *(void **)(a1 + 352), *(void *)(a1 + 360), *(unsigned char *)(a1 + 368));
  sub_2498826E4(*(void **)(a1 + 384), *(void *)(a1 + 392), *(void **)(a1 + 400), *(void *)(a1 + 408), *(unsigned char *)(a1 + 416));

  return swift_release();
}

uint64_t initializeWithCopy for ShadowConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  char v9 = *(void **)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void **)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 72);
  char v13 = *(unsigned char *)(a2 + 80);
  sub_24988247C(v9, v10, v11, v12, v13);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v12;
  *(unsigned char *)(a1 + 80) = v13;
  uint64_t v14 = *(void **)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v15 = *(void *)(a2 + 104);
  uint64_t v16 = *(void **)(a2 + 112);
  uint64_t v17 = *(void *)(a2 + 120);
  char v18 = *(unsigned char *)(a2 + 128);
  sub_24988247C(v14, v15, v16, v17, v18);
  *(void *)(a1 + 96) = v14;
  *(void *)(a1 + 104) = v15;
  *(void *)(a1 + 112) = v16;
  *(void *)(a1 + 120) = v17;
  *(unsigned char *)(a1 + 128) = v18;
  uint64_t v19 = *(void **)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  uint64_t v20 = *(void *)(a2 + 152);
  uint64_t v21 = *(void **)(a2 + 160);
  uint64_t v22 = *(void *)(a2 + 168);
  char v23 = *(unsigned char *)(a2 + 176);
  sub_24988247C(v19, v20, v21, v22, v23);
  *(void *)(a1 + 144) = v19;
  *(void *)(a1 + 152) = v20;
  *(void *)(a1 + 160) = v21;
  *(void *)(a1 + 168) = v22;
  *(unsigned char *)(a1 + 176) = v23;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  uint64_t v24 = *(void *)(a2 + 224);
  if ((~*(_DWORD *)(a2 + 224) & 0xFELL) != 0)
  {
    uint64_t v26 = *(void **)(a2 + 192);
    uint64_t v27 = *(void *)(a2 + 200);
    uint64_t v28 = *(void **)(a2 + 208);
    uint64_t v29 = *(void *)(a2 + 216);
    sub_24988247C(v26, v27, v28, v29, *(void *)(a2 + 224));
    *(void *)(a1 + 192) = v26;
    *(void *)(a1 + 200) = v27;
    *(void *)(a1 + 208) = v28;
    *(void *)(a1 + 216) = v29;
    *(unsigned char *)(a1 + 224) = v24;
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
  }
  else
  {
    long long v25 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v25;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  }
  char v30 = *(void **)(a2 + 240);
  uint64_t v31 = *(void *)(a2 + 248);
  uint64_t v32 = *(void **)(a2 + 256);
  uint64_t v33 = *(void *)(a2 + 264);
  char v34 = *(unsigned char *)(a2 + 272);
  sub_24988247C(v30, v31, v32, v33, v34);
  *(void *)(a1 + 240) = v30;
  *(void *)(a1 + 248) = v31;
  *(void *)(a1 + 256) = v32;
  *(void *)(a1 + 264) = v33;
  *(unsigned char *)(a1 + 272) = v34;
  uint64_t v35 = *(void **)(a2 + 288);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  uint64_t v36 = *(void *)(a2 + 296);
  uint64_t v37 = *(void **)(a2 + 304);
  uint64_t v38 = *(void *)(a2 + 312);
  char v39 = *(unsigned char *)(a2 + 320);
  sub_24988247C(v35, v36, v37, v38, v39);
  *(void *)(a1 + 288) = v35;
  *(void *)(a1 + 296) = v36;
  *(void *)(a1 + 304) = v37;
  *(void *)(a1 + 312) = v38;
  *(unsigned char *)(a1 + 320) = v39;
  uint64_t v40 = *(void **)(a2 + 336);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  uint64_t v41 = *(void *)(a2 + 344);
  uint64_t v42 = *(void **)(a2 + 352);
  uint64_t v43 = *(void *)(a2 + 360);
  char v44 = *(unsigned char *)(a2 + 368);
  sub_24988247C(v40, v41, v42, v43, v44);
  *(void *)(a1 + 336) = v40;
  *(void *)(a1 + 344) = v41;
  *(void *)(a1 + 352) = v42;
  *(void *)(a1 + 360) = v43;
  *(unsigned char *)(a1 + 368) = v44;
  uint64_t v45 = *(void **)(a2 + 384);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  uint64_t v46 = *(void *)(a2 + 392);
  uint64_t v47 = *(void **)(a2 + 400);
  uint64_t v48 = *(void *)(a2 + 408);
  char v49 = *(unsigned char *)(a2 + 416);
  sub_24988247C(v45, v46, v47, v48, v49);
  *(void *)(a1 + 384) = v45;
  *(void *)(a1 + 392) = v46;
  *(void *)(a1 + 400) = v47;
  *(void *)(a1 + 408) = v48;
  *(unsigned char *)(a1 + 416) = v49;
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  long long v50 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v50;
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  uint64_t v51 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v51;
  *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ShadowConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_24988247C(*(void **)a2, v5, v6, v7, v8);
  char v9 = *(void **)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_2498826E4(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v14 = *(void **)(a2 + 48);
  uint64_t v15 = *(void *)(a2 + 56);
  uint64_t v16 = *(void **)(a2 + 64);
  uint64_t v17 = *(void *)(a2 + 72);
  char v18 = *(unsigned char *)(a2 + 80);
  sub_24988247C(v14, v15, v16, v17, v18);
  uint64_t v19 = *(void **)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 56);
  uint64_t v21 = *(void **)(a1 + 64);
  uint64_t v22 = *(void *)(a1 + 72);
  *(void *)(a1 + 48) = v14;
  *(void *)(a1 + 56) = v15;
  *(void *)(a1 + 64) = v16;
  *(void *)(a1 + 72) = v17;
  char v23 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v18;
  sub_2498826E4(v19, v20, v21, v22, v23);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v24 = *(void **)(a2 + 96);
  uint64_t v25 = *(void *)(a2 + 104);
  uint64_t v26 = *(void **)(a2 + 112);
  uint64_t v27 = *(void *)(a2 + 120);
  char v28 = *(unsigned char *)(a2 + 128);
  sub_24988247C(v24, v25, v26, v27, v28);
  uint64_t v29 = *(void **)(a1 + 96);
  uint64_t v30 = *(void *)(a1 + 104);
  uint64_t v31 = *(void **)(a1 + 112);
  uint64_t v32 = *(void *)(a1 + 120);
  *(void *)(a1 + 96) = v24;
  *(void *)(a1 + 104) = v25;
  *(void *)(a1 + 112) = v26;
  *(void *)(a1 + 120) = v27;
  char v33 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v28;
  sub_2498826E4(v29, v30, v31, v32, v33);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  char v34 = *(void **)(a2 + 144);
  uint64_t v35 = *(void *)(a2 + 152);
  uint64_t v36 = *(void **)(a2 + 160);
  uint64_t v37 = *(void *)(a2 + 168);
  char v38 = *(unsigned char *)(a2 + 176);
  sub_24988247C(v34, v35, v36, v37, v38);
  char v39 = *(void **)(a1 + 144);
  uint64_t v40 = *(void *)(a1 + 152);
  uint64_t v41 = *(void **)(a1 + 160);
  uint64_t v42 = *(void *)(a1 + 168);
  *(void *)(a1 + 144) = v34;
  *(void *)(a1 + 152) = v35;
  *(void *)(a1 + 160) = v36;
  *(void *)(a1 + 168) = v37;
  char v43 = *(unsigned char *)(a1 + 176);
  *(unsigned char *)(a1 + 176) = v38;
  sub_2498826E4(v39, v40, v41, v42, v43);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  char v44 = (_OWORD *)(a1 + 192);
  uint64_t v45 = (_OWORD *)(a2 + 192);
  uint64_t v46 = *(void *)(a2 + 224);
  uint64_t v47 = v46 & 0xFE;
  if ((~*(_DWORD *)(a1 + 224) & 0xFELL) != 0)
  {
    if (v47 == 254)
    {
      sub_2499C5438(a1 + 192);
      long long v51 = *(_OWORD *)(a2 + 208);
      long long v50 = *(_OWORD *)(a2 + 224);
      *char v44 = *v45;
      *(_OWORD *)(a1 + 208) = v51;
      *(_OWORD *)(a1 + 224) = v50;
      goto LABEL_9;
    }
    uint64_t v56 = *(void **)(a2 + 192);
    uint64_t v57 = *(void *)(a2 + 200);
    uint64_t v58 = *(void **)(a2 + 208);
    uint64_t v59 = *(void *)(a2 + 216);
    sub_24988247C(v56, v57, v58, v59, *(void *)(a2 + 224));
    long long v60 = *(void **)(a1 + 192);
    uint64_t v61 = *(void *)(a1 + 200);
    uint64_t v62 = *(void **)(a1 + 208);
    uint64_t v63 = *(void *)(a1 + 216);
    *(void *)(a1 + 192) = v56;
    *(void *)(a1 + 200) = v57;
    *(void *)(a1 + 208) = v58;
    *(void *)(a1 + 216) = v59;
    char v64 = *(unsigned char *)(a1 + 224);
    *(unsigned char *)(a1 + 224) = v46;
    sub_2498826E4(v60, v61, v62, v63, v64);
LABEL_8:
    *(void *)(a1 + 232) = *(void *)(a2 + 232);
    goto LABEL_9;
  }
  if (v47 != 254)
  {
    long long v52 = *(void **)(a2 + 192);
    uint64_t v53 = *(void *)(a2 + 200);
    uint64_t v54 = *(void **)(a2 + 208);
    uint64_t v55 = *(void *)(a2 + 216);
    sub_24988247C(v52, v53, v54, v55, *(void *)(a2 + 224));
    *(void *)(a1 + 192) = v52;
    *(void *)(a1 + 200) = v53;
    *(void *)(a1 + 208) = v54;
    *(void *)(a1 + 216) = v55;
    *(unsigned char *)(a1 + 224) = v46;
    goto LABEL_8;
  }
  long long v48 = *v45;
  long long v49 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v49;
  *char v44 = v48;
LABEL_9:
  uint64_t v65 = *(void **)(a2 + 240);
  uint64_t v66 = *(void *)(a2 + 248);
  uint64_t v67 = *(void **)(a2 + 256);
  uint64_t v68 = *(void *)(a2 + 264);
  char v69 = *(unsigned char *)(a2 + 272);
  sub_24988247C(v65, v66, v67, v68, v69);
  uint64_t v70 = *(void **)(a1 + 240);
  uint64_t v71 = *(void *)(a1 + 248);
  uint64_t v72 = *(void **)(a1 + 256);
  uint64_t v73 = *(void *)(a1 + 264);
  *(void *)(a1 + 240) = v65;
  *(void *)(a1 + 248) = v66;
  *(void *)(a1 + 256) = v67;
  *(void *)(a1 + 264) = v68;
  char v74 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v69;
  sub_2498826E4(v70, v71, v72, v73, v74);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  long long v75 = *(void **)(a2 + 288);
  uint64_t v76 = *(void *)(a2 + 296);
  uint64_t v77 = *(void **)(a2 + 304);
  uint64_t v78 = *(void *)(a2 + 312);
  char v79 = *(unsigned char *)(a2 + 320);
  sub_24988247C(v75, v76, v77, v78, v79);
  long long v80 = *(void **)(a1 + 288);
  uint64_t v81 = *(void *)(a1 + 296);
  uint64_t v82 = *(void **)(a1 + 304);
  uint64_t v83 = *(void *)(a1 + 312);
  *(void *)(a1 + 288) = v75;
  *(void *)(a1 + 296) = v76;
  *(void *)(a1 + 304) = v77;
  *(void *)(a1 + 312) = v78;
  char v84 = *(unsigned char *)(a1 + 320);
  *(unsigned char *)(a1 + 320) = v79;
  sub_2498826E4(v80, v81, v82, v83, v84);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  uint64_t v85 = *(void **)(a2 + 336);
  uint64_t v86 = *(void *)(a2 + 344);
  uint64_t v87 = *(void **)(a2 + 352);
  uint64_t v88 = *(void *)(a2 + 360);
  char v89 = *(unsigned char *)(a2 + 368);
  sub_24988247C(v85, v86, v87, v88, v89);
  uint64_t v90 = *(void **)(a1 + 336);
  uint64_t v91 = *(void *)(a1 + 344);
  uint64_t v92 = *(void **)(a1 + 352);
  uint64_t v93 = *(void *)(a1 + 360);
  *(void *)(a1 + 336) = v85;
  *(void *)(a1 + 344) = v86;
  *(void *)(a1 + 352) = v87;
  *(void *)(a1 + 360) = v88;
  char v94 = *(unsigned char *)(a1 + 368);
  *(unsigned char *)(a1 + 368) = v89;
  sub_2498826E4(v90, v91, v92, v93, v94);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  uint64_t v95 = *(void **)(a2 + 384);
  uint64_t v96 = *(void *)(a2 + 392);
  char v97 = *(void **)(a2 + 400);
  uint64_t v98 = *(void *)(a2 + 408);
  char v99 = *(unsigned char *)(a2 + 416);
  sub_24988247C(v95, v96, v97, v98, v99);
  long long v100 = *(void **)(a1 + 384);
  uint64_t v101 = *(void *)(a1 + 392);
  CGRect v102 = *(void **)(a1 + 400);
  uint64_t v103 = *(void *)(a1 + 408);
  *(void *)(a1 + 384) = v95;
  *(void *)(a1 + 392) = v96;
  *(void *)(a1 + 400) = v97;
  *(void *)(a1 + 408) = v98;
  char v104 = *(unsigned char *)(a1 + 416);
  *(unsigned char *)(a1 + 416) = v99;
  sub_2498826E4(v100, v101, v102, v103, v104);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_retain();
  swift_release();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
  return a1;
}

void *__swift_memcpy505_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F9uLL);
}

uint64_t assignWithTake for ShadowConfiguration(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = (_OWORD *)(a1 + 280);
  uint64_t v6 = a2 + 280;
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_2498826E4(v7, v8, v9, v10, v12);
  uint64_t v13 = *(void *)(a2 + 72);
  char v14 = *(unsigned char *)(a2 + 80);
  uint64_t v15 = *(void **)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v17 = *(void **)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 72);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v13;
  char v19 = *(unsigned char *)(a1 + 80);
  *(unsigned char *)(a1 + 80) = v14;
  sub_2498826E4(v15, v16, v17, v18, v19);
  uint64_t v20 = *(void *)(a2 + 120);
  char v21 = *(unsigned char *)(a2 + 128);
  uint64_t v22 = *(void **)(a1 + 96);
  uint64_t v23 = *(void *)(a1 + 104);
  uint64_t v24 = *(void **)(a1 + 112);
  uint64_t v25 = *(void *)(a1 + 120);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = v20;
  char v26 = *(unsigned char *)(a1 + 128);
  *(unsigned char *)(a1 + 128) = v21;
  sub_2498826E4(v22, v23, v24, v25, v26);
  uint64_t v27 = *(void *)(a2 + 168);
  char v28 = *(unsigned char *)(a2 + 176);
  uint64_t v29 = *(void **)(a1 + 144);
  uint64_t v30 = *(void *)(a1 + 152);
  uint64_t v31 = *(void **)(a1 + 160);
  uint64_t v32 = *(void *)(a1 + 168);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = v27;
  char v33 = *(unsigned char *)(a1 + 176);
  *(unsigned char *)(a1 + 176) = v28;
  sub_2498826E4(v29, v30, v31, v32, v33);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  int v34 = *(_DWORD *)(a1 + 224);
  if ((~(_BYTE)v34 & 0xFE) != 0)
  {
    uint64_t v35 = *(void *)(a2 + 224);
    if ((~*(_DWORD *)(a2 + 224) & 0xFELL) != 0)
    {
      uint64_t v37 = *(void **)(a1 + 192);
      uint64_t v38 = *(void *)(a1 + 200);
      char v39 = *(void **)(a1 + 208);
      uint64_t v40 = *(void *)(a1 + 216);
      long long v41 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v41;
      *(unsigned char *)(a1 + 224) = v35;
      sub_2498826E4(v37, v38, v39, v40, v34);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      goto LABEL_6;
    }
    sub_2499C5438(a1 + 192);
  }
  long long v36 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v36;
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
LABEL_6:
  char v42 = *(unsigned char *)(a2 + 272);
  char v43 = *(void **)(a1 + 240);
  uint64_t v44 = *(void *)(a1 + 248);
  uint64_t v45 = *(void **)(a1 + 256);
  uint64_t v46 = *(void *)(a1 + 264);
  long long v47 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v47;
  char v48 = *(unsigned char *)(a1 + 272);
  *(unsigned char *)(a1 + 272) = v42;
  sub_2498826E4(v43, v44, v45, v46, v48);
  uint64_t v49 = *(void *)(a2 + 312);
  char v50 = *(unsigned char *)(a2 + 320);
  long long v51 = *(void **)(a1 + 288);
  uint64_t v52 = *(void *)(a1 + 296);
  uint64_t v53 = *(void **)(a1 + 304);
  uint64_t v54 = *(void *)(a1 + 312);
  long long v55 = *(_OWORD *)(v6 + 16);
  *uint64_t v5 = *(_OWORD *)v6;
  v5[1] = v55;
  *(void *)(a1 + 312) = v49;
  char v56 = *(unsigned char *)(a1 + 320);
  *(unsigned char *)(a1 + 320) = v50;
  sub_2498826E4(v51, v52, v53, v54, v56);
  uint64_t v57 = *(void *)(a2 + 360);
  char v58 = *(unsigned char *)(a2 + 368);
  uint64_t v59 = *(void **)(a1 + 336);
  uint64_t v60 = *(void *)(a1 + 344);
  uint64_t v61 = *(void **)(a1 + 352);
  uint64_t v62 = *(void *)(a1 + 360);
  long long v63 = *(_OWORD *)(v6 + 64);
  v5[3] = *(_OWORD *)(v6 + 48);
  v5[4] = v63;
  *(void *)(a1 + 360) = v57;
  char v64 = *(unsigned char *)(a1 + 368);
  *(unsigned char *)(a1 + 368) = v58;
  sub_2498826E4(v59, v60, v61, v62, v64);
  uint64_t v65 = *(void *)(a2 + 408);
  char v66 = *(unsigned char *)(a2 + 416);
  uint64_t v67 = *(void **)(a1 + 384);
  uint64_t v68 = *(void *)(a1 + 392);
  char v69 = *(void **)(a1 + 400);
  uint64_t v70 = *(void *)(a1 + 408);
  long long v71 = *(_OWORD *)(v6 + 112);
  v5[6] = *(_OWORD *)(v6 + 96);
  v5[7] = v71;
  *(void *)(a1 + 408) = v65;
  char v72 = *(unsigned char *)(a1 + 416);
  *(unsigned char *)(a1 + 416) = v66;
  sub_2498826E4(v67, v68, v69, v70, v72);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  long long v73 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v73;
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_release();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(unsigned char *)(a1 + 504) = *(unsigned char *)(v6 + 224);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShadowConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 505)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 464);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ShadowConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 504) = 0;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 505) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 464) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 505) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShadowConfiguration()
{
  return &type metadata for ShadowConfiguration;
}

unsigned char *storeEnumTagSinglePayload for ShadowConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2499FD868);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShadowConfiguration.CodingKeys()
{
  return &type metadata for ShadowConfiguration.CodingKeys;
}

unint64_t sub_2499FD8A4()
{
  unint64_t result = qword_2696E3198;
  if (!qword_2696E3198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3198);
  }
  return result;
}

unint64_t sub_2499FD8FC()
{
  unint64_t result = qword_2696E31A0;
  if (!qword_2696E31A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E31A0);
  }
  return result;
}

unint64_t sub_2499FD954()
{
  unint64_t result = qword_2696E31A8;
  if (!qword_2696E31A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E31A8);
  }
  return result;
}

uint64_t sub_2499FD9A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6953776F64616873 && a2 == 0xEA0000000000657ALL || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6964615272756C62 && a2 == 0xEA00000000007375 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000249B16E30)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_2499FDC9C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    uint64_t v14 = *(void *)(v2 + 48) + 24 * v10;
    uint64_t v15 = *(void *)v14;
    char v16 = *(unsigned char *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    swift_retain();
    sub_2498EEF60(v15, v16, v17);
    if ((v18 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    swift_retain();
    char v19 = sub_249AEC848();
    swift_release();
    unint64_t result = swift_release();
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2499FDE68(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v11 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v27) {
        return 1;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v27) {
          return 1;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_23:
    uint64_t v14 = 16 * v10;
    uint64_t v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    char v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    uint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_2498EF018(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v24 = (void *)(*(void *)(a2 + 56) + 16 * v21);
    if (*v24 == v20 && v24[1] == v19)
    {
      unint64_t result = swift_bridgeObjectRelease();
    }
    else
    {
      char v26 = sub_249AEE0D8();
      unint64_t result = swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v27) {
    return 1;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_2499FE070(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v21 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v22 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v8 = v7 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v9 >= v22) {
      return 1;
    }
    unint64_t v10 = *(void *)(v21 + 8 * v9);
    ++v3;
    if (!v10)
    {
      int64_t v3 = v9 + 1;
      if (v9 + 1 >= v22) {
        return 1;
      }
      unint64_t v10 = *(void *)(v21 + 8 * v3);
      if (!v10)
      {
        int64_t v3 = v9 + 2;
        if (v9 + 2 >= v22) {
          return 1;
        }
        unint64_t v10 = *(void *)(v21 + 8 * v3);
        if (!v10) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v3 << 6);
LABEL_22:
    uint64_t v12 = *(void *)(v2 + 48) + 24 * v8;
    uint64_t v13 = *(void *)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    uint64_t v15 = *(void *)(*(void *)(v2 + 56) + 8 * v8);
    uint64_t v16 = *(unsigned __int8 *)(v12 + 16);
    sub_24988D770(*(void *)v12, v14, *(unsigned char *)(v12 + 16));
    swift_bridgeObjectRetain();
    sub_2498EF034(v13, v14, v16);
    char v18 = v17;
    sub_24988D788(v13, v14, v16);
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v19 = swift_bridgeObjectRetain();
    char v20 = sub_2499FE290(v19, v15);
    swift_bridgeObjectRelease();
    unint64_t result = swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      return 0;
    }
  }
  int64_t v11 = v9 + 3;
  if (v11 >= v22) {
    return 1;
  }
  unint64_t v10 = *(void *)(v21 + 8 * v11);
  if (v10)
  {
    int64_t v3 = v11;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v3 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v3 >= v22) {
      return 1;
    }
    unint64_t v10 = *(void *)(v21 + 8 * v3);
    ++v11;
    if (v10) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2499FE290(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    swift_retain();
    sub_2498EF01C(v15, v16);
    char v18 = v17;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
    {
      swift_release();
      return 0;
    }
    swift_retain();
    char v19 = sub_249AEC848();
    swift_release();
    unint64_t result = swift_release();
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2499FE45C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v2 = 0;
  uint64_t v29 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v30 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v31 = result;
  while (1)
  {
    if (v5)
    {
      uint64_t v32 = (v5 - 1) & v5;
      int64_t v33 = v2;
      unint64_t v6 = __clz(__rbit64(v5)) | (v2 << 6);
      goto LABEL_22;
    }
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v7 >= v30) {
      return 1;
    }
    unint64_t v8 = *(void *)(v29 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v2 + 2;
      if (v2 + 2 >= v30) {
        return 1;
      }
      unint64_t v8 = *(void *)(v29 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v2 + 3;
        if (v2 + 3 >= v30) {
          return 1;
        }
        unint64_t v8 = *(void *)(v29 + 8 * v9);
        if (!v8) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v32 = (v8 - 1) & v8;
    int64_t v33 = v9;
    unint64_t v6 = __clz(__rbit64(v8)) + (v9 << 6);
LABEL_22:
    uint64_t v11 = *(void *)(result + 56);
    uint64_t v12 = *(void *)(result + 48) + 112 * v6;
    uint64_t v13 = *(void *)(v12 + 8);
    uint64_t v14 = *(void *)(v12 + 16);
    uint64_t v15 = *(void *)(v12 + 24);
    uint64_t v16 = *(void *)(v12 + 32);
    uint64_t v17 = *(void *)(v12 + 40);
    uint64_t v18 = *(void *)(v12 + 48);
    uint64_t v19 = *(void *)(v12 + 56);
    uint64_t v20 = *(void *)(v12 + 72);
    uint64_t v21 = *(void *)(v12 + 80);
    uint64_t v22 = *(void *)(v12 + 88);
    uint64_t v23 = *(unsigned __int8 *)(v12 + 96);
    uint64_t v24 = *(void *)(v11 + 8 * v6);
    unsigned __int8 v25 = *(unsigned char *)(v12 + 64);
    uint64_t v34 = *(void *)(v12 + 104);
    *(void *)&long long v35 = *(void *)v12;
    *((void *)&v35 + 1) = v13;
    uint64_t v36 = v14;
    uint64_t v37 = v15;
    uint64_t v38 = v16;
    uint64_t v39 = v17;
    uint64_t v40 = v18;
    uint64_t v41 = v19;
    uint64_t v42 = v25;
    uint64_t v43 = v20;
    uint64_t v44 = v21;
    uint64_t v45 = v22;
    uint64_t v46 = v23;
    uint64_t v47 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24988CD7C(v15, v16, v17, v18, v19, v25);
    sub_24988CDF0(v21);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_2498EF0DC(&v35);
    LOBYTE(v22) = v26;
    sub_2498B4BF8((uint64_t)&v35);
    if ((v22 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v27 = swift_bridgeObjectRetain();
    char v28 = sub_2499FE6E8(v27, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = v31;
    unint64_t v5 = v32;
    int64_t v2 = v33;
    if ((v28 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v10 = v2 + 4;
  if (v2 + 4 >= v30) {
    return 1;
  }
  unint64_t v8 = *(void *)(v29 + 8 * v10);
  if (v8)
  {
    int64_t v9 = v2 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v9 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v9 >= v30) {
      return 1;
    }
    unint64_t v8 = *(void *)(v29 + 8 * v9);
    ++v10;
    if (v8) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2499FE6E8(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v40 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v41 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    while (1)
    {
      if (v7)
      {
        uint64_t v43 = (v7 - 1) & v7;
        int64_t v44 = v4;
        unint64_t v8 = __clz(__rbit64(v7)) | (v4 << 6);
      }
      else
      {
        int64_t v9 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_65;
        }
        if (v9 >= v41) {
          return 1;
        }
        unint64_t v10 = *(void *)(v40 + 8 * v9);
        int64_t v11 = v4 + 1;
        if (!v10)
        {
          int64_t v11 = v4 + 2;
          if (v4 + 2 >= v41) {
            return 1;
          }
          unint64_t v10 = *(void *)(v40 + 8 * v11);
          if (!v10)
          {
            int64_t v11 = v4 + 3;
            if (v4 + 3 >= v41) {
              return 1;
            }
            unint64_t v10 = *(void *)(v40 + 8 * v11);
            if (!v10)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v41) {
                return 1;
              }
              unint64_t v10 = *(void *)(v40 + 8 * v12);
              if (!v10)
              {
                while (1)
                {
                  int64_t v11 = v12 + 1;
                  if (__OFADD__(v12, 1)) {
                    break;
                  }
                  if (v11 >= v41) {
                    return 1;
                  }
                  unint64_t v10 = *(void *)(v40 + 8 * v11);
                  ++v12;
                  if (v10) {
                    goto LABEL_22;
                  }
                }
LABEL_65:
                __break(1u);
                JUMPOUT(0x2499FED30);
              }
              int64_t v11 = v4 + 4;
            }
          }
        }
LABEL_22:
        uint64_t v43 = (v10 - 1) & v10;
        int64_t v44 = v11;
        unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
      }
      uint64_t v13 = 24 * v8;
      uint64_t v14 = v3;
      uint64_t v15 = *(void *)(v3 + 48) + v13;
      uint64_t v16 = *(void *)v15;
      uint64_t v17 = *(void *)(v15 + 8);
      uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v13);
      uint64_t v20 = *v18;
      uint64_t v19 = v18[1];
      uint64_t v21 = v18[2];
      uint64_t v22 = *(unsigned __int8 *)(v15 + 16);
      sub_24988D770(*(void *)v15, v17, *(unsigned char *)(v15 + 16));
      sub_249890CB0(v20, v19);
      unint64_t v23 = sub_2498EF034(v16, v17, v22);
      char v25 = v24;
      sub_24988D788(v16, v17, v22);
      if ((v25 & 1) == 0) {
        goto LABEL_61;
      }
      char v26 = (uint64_t *)(*(void *)(v2 + 56) + 24 * v23);
      uint64_t v27 = *v26;
      uint64_t v28 = v26[1];
      uint64_t v29 = v26[2];
      if (v28 < 0) {
        break;
      }
      if (v19 < 0) {
        goto LABEL_60;
      }
      if (v28)
      {
        unint64_t v32 = 0x8000000249B14380;
        uint64_t v30 = 0xD000000000000013;
        switch(v27)
        {
          case 1:
            uint64_t v30 = 0x7373416465657073;
            unint64_t v32 = 0xEB00000000747369;
            if (v19) {
              goto LABEL_28;
            }
            goto LABEL_50;
          case 2:
            uint64_t v30 = 0xD000000000000015;
            unint64_t v32 = 0x8000000249B14360;
            if (v19) {
              goto LABEL_28;
            }
            goto LABEL_50;
          case 3:
            unint64_t v32 = 0xE800000000000000;
            uint64_t v30 = 0x6574617453776F6CLL;
            if (v19) {
              goto LABEL_28;
            }
            goto LABEL_50;
          case 4:
            uint64_t v30 = 0x6C61636974697263;
            unint64_t v32 = 0xED00006574617453;
            if (v19) {
              goto LABEL_28;
            }
            goto LABEL_50;
          case 5:
            unint64_t v32 = 0xE700000000000000;
            uint64_t v30 = 0x656E696C646572;
            break;
          case 6:
            uint64_t v30 = 0xD000000000000019;
            unint64_t v32 = 0x8000000249B14340;
            if (v19) {
              goto LABEL_28;
            }
            goto LABEL_50;
          default:
            break;
        }
        if (v19)
        {
LABEL_28:
          unint64_t v33 = 0x8000000249B14380;
          uint64_t v34 = 0xD000000000000013;
          switch(v20)
          {
            case 1:
              uint64_t v34 = 0x7373416465657073;
              unint64_t v33 = 0xEB00000000747369;
              break;
            case 2:
              uint64_t v34 = 0xD000000000000015;
              uint64_t v36 = "homologatedSecondaryLabel";
              goto LABEL_41;
            case 3:
              unint64_t v33 = 0xE800000000000000;
              uint64_t v34 = 0x6574617453776F6CLL;
              break;
            case 4:
              uint64_t v34 = 0x6C61636974697263;
              unint64_t v33 = 0xED00006574617453;
              break;
            case 5:
              unint64_t v33 = 0xE700000000000000;
              uint64_t v34 = 0x656E696C646572;
              break;
            case 6:
              uint64_t v34 = 0xD000000000000019;
              uint64_t v36 = "representedColorScheme";
LABEL_41:
              unint64_t v33 = (unint64_t)v36 | 0x8000000000000000;
              break;
            default:
              goto LABEL_51;
          }
          goto LABEL_51;
        }
      }
      else
      {
        uint64_t v30 = sub_249AEDF48();
        unint64_t v32 = v31;
        if (v19) {
          goto LABEL_28;
        }
      }
LABEL_50:
      uint64_t v34 = sub_249AEDF48();
      unint64_t v33 = v37;
LABEL_51:
      if (v30 == v34 && v32 == v33)
      {
        swift_bridgeObjectRelease_n();
        sub_249890CBC(v27, v28);
        sub_249890CBC(v20, v19);
        uint64_t v2 = a2;
        unint64_t v7 = v43;
        uint64_t v3 = v14;
        int64_t v4 = v44;
        if (v29 != v21) {
          return 0;
        }
      }
      else
      {
        char v38 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_249890CBC(v27, v28);
        sub_249890CBC(v20, v19);
        uint64_t result = 0;
        if ((v38 & 1) == 0) {
          return result;
        }
        uint64_t v2 = a2;
        unint64_t v7 = v43;
        uint64_t v3 = v14;
        int64_t v4 = v44;
        if (v29 != v21) {
          return result;
        }
      }
    }
    if ((v19 & 0x8000000000000000) == 0) {
      break;
    }
    sub_249890CB0(*v26, v26[1]);
    sub_249890CB0(v20, v19);
    sub_249890CB0(v27, v28);
    sub_249890CB0(v20, v19);
    sub_249890CB0(v27, v28);
    char v35 = sub_2499FE290(v27, v20);
    sub_249890CBC(v27, v28);
    sub_249890CBC(v20, v19);
    sub_249890CBC(v20, v19);
    sub_249890CBC(v27, v28);
    sub_249890CBC(v27, v28);
    sub_249890CBC(v20, v19);
    uint64_t v2 = a2;
    unint64_t v7 = v43;
    uint64_t v3 = v14;
    int64_t v4 = v44;
    if ((v35 & 1) == 0) {
      return 0;
    }
  }
  swift_bridgeObjectRetain_n();
LABEL_60:
  sub_249890CB0(v20, v19);
  sub_249890CBC(v27, v28);
  sub_249890CBC(v20, v19);
  sub_249890CBC(v27, v28);
LABEL_61:
  sub_249890CBC(v20, v19);
  return 0;
}

uint64_t sub_2499FED68(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    uint64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    swift_bridgeObjectRetain();
    sub_2498EF01C(v15, v16);
    char v18 = v17;
    swift_bridgeObjectRelease();
    if (v18)
    {
      uint64_t result = sub_249AEBAA8();
      if (result) {
        continue;
      }
    }
    return 0;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_2499FEF30(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = *(void *)(result + 64);
  uint64_t v30 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  int64_t v31 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v32 = result;
  if ((v7 & v5) != 0) {
    goto LABEL_9;
  }
LABEL_10:
  int64_t v12 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v12 >= v31) {
    return 1;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v12);
  ++v4;
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 1;
  if (v12 + 1 >= v31) {
    return 1;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v4 = v12 + 2;
  if (v12 + 2 >= v31) {
    return 1;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v4);
  if (v13) {
    goto LABEL_23;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v31) {
    return 1;
  }
  unint64_t v13 = *(void *)(v30 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    for (unint64_t i = __clz(__rbit64(v13)) + (v4 << 6); ; unint64_t i = v10 | (v4 << 6))
    {
      uint64_t v15 = *(void *)(*(void *)(v3 + 48) + 8 * i);
      uint64_t v16 = *(void *)(v3 + 56) + 24 * i;
      uint64_t v18 = *(void *)v16;
      uint64_t v17 = *(void *)(v16 + 8);
      char v19 = *(unsigned char *)(v16 + 16);
      unint64_t v20 = sub_2498EF16C(v15);
      if ((v21 & 1) == 0) {
        break;
      }
      int64_t v34 = v4;
      uint64_t v22 = *(void *)(v2 + 56) + 24 * v20;
      uint64_t v23 = *(void *)v22;
      uint64_t v24 = *(void *)(v22 + 8);
      char v25 = *(unsigned char *)(v22 + 16);
      sub_24988D770(v18, v17, v19);
      sub_24988D770(v23, v24, v25);
      uint64_t v26 = Theme.ColorID.rawValue.getter();
      uint64_t v28 = v27;
      if (v26 == Theme.ColorID.rawValue.getter() && v28 == v29)
      {
        swift_bridgeObjectRelease_n();
        sub_24988D788(v23, v24, v25);
        uint64_t result = sub_24988D788(v18, v17, v19);
        uint64_t v3 = v32;
        uint64_t v2 = a2;
        int64_t v4 = v34;
        if (!v8) {
          goto LABEL_10;
        }
      }
      else
      {
        char v9 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24988D788(v23, v24, v25);
        uint64_t result = sub_24988D788(v18, v17, v19);
        uint64_t v3 = v32;
        uint64_t v2 = a2;
        int64_t v4 = v34;
        if ((v9 & 1) == 0) {
          return 0;
        }
        if (!v8) {
          goto LABEL_10;
        }
      }
LABEL_9:
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
    }
    sub_24988D770(v18, v17, v19);
    sub_24988D788(v18, v17, v19);
    return 0;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v31) {
      return 1;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_2499FF210(uint64_t a1, uint64_t a2)
{
  return sub_2499FFAE8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890C40, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890C2C);
}

uint64_t sub_2499FF23C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v4 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v11 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        return 1;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          return 1;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_22:
    int64_t v14 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2498EF018(v15, v16);
    char v19 = v18;
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v20 = swift_bridgeObjectRetain();
    char v21 = sub_2499FF408(v20, v17);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v21 & 1) == 0) {
      return 0;
    }
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v8) {
    return 1;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      return 1;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_2499FF408(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v38 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v39 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v10 >= v39) {
      return 1;
    }
    unint64_t v11 = *(void *)(v38 + 8 * v10);
    ++v4;
    if (!v11)
    {
      int64_t v4 = v10 + 1;
      if (v10 + 1 >= v39) {
        return 1;
      }
      unint64_t v11 = *(void *)(v38 + 8 * v4);
      if (!v11)
      {
        int64_t v4 = v10 + 2;
        if (v10 + 2 >= v39) {
          return 1;
        }
        unint64_t v11 = *(void *)(v38 + 8 * v4);
        if (!v11) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_22:
    int64_t v13 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    uint64_t v16 = (long long *)(*(void *)(v3 + 56) + (v9 << 7));
    long long v17 = v16[3];
    long long v19 = *v16;
    long long v18 = v16[1];
    v44[2] = v16[2];
    v44[3] = v17;
    v44[0] = v19;
    v44[1] = v18;
    long long v21 = v16[5];
    long long v20 = v16[6];
    long long v22 = v16[4];
    *(_OWORD *)((char *)v45 + 9) = *(long long *)((char *)v16 + 105);
    v44[5] = v21;
    v45[0] = v20;
    v44[4] = v22;
    long long v23 = *v16;
    long long v24 = v16[1];
    long long v25 = v16[3];
    long long v48 = v16[2];
    long long v49 = v25;
    long long v46 = v23;
    long long v47 = v24;
    long long v26 = v16[4];
    long long v27 = v16[5];
    long long v28 = v16[6];
    *(_OWORD *)&v52[9] = *(long long *)((char *)v16 + 105);
    long long v51 = v27;
    *(_OWORD *)uint64_t v52 = v28;
    long long v50 = v26;
    v53[0] = v14;
    v53[1] = v15;
    long long v58 = v26;
    long long v59 = v27;
    v60[0] = v28;
    *(_OWORD *)((char *)v60 + 9) = *(_OWORD *)&v52[9];
    long long v54 = v46;
    long long v55 = v47;
    long long v56 = v48;
    long long v57 = v25;
    nullsub_1(v53);
    sub_249882788((uint64_t)v53, (uint64_t)v63, &qword_2696E32D0);
    v61[4] = v68;
    v61[5] = v69;
    v62[0] = v70[0];
    *(_OWORD *)((char *)v62 + 9) = *(_OWORD *)((char *)v70 + 9);
    v61[0] = v64;
    v61[1] = v65;
    v61[2] = v66;
    v61[3] = v67;
    void v42[4] = v68;
    v42[5] = v69;
    v43[0] = v70[0];
    *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)((char *)v70 + 9);
    v42[0] = v64;
    v42[1] = v65;
    uint64_t v29 = v63[0];
    uint64_t v30 = v63[1];
    void v42[2] = v66;
    v42[3] = v67;
    swift_bridgeObjectRetain();
    sub_24988E364((uint64_t)v44);
    uint64_t v31 = sub_2498EF018(v29, v30);
    LOBYTE(v29) = v32;
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      sub_24988E414((uint64_t)v61);
      return 0;
    }
    unint64_t v33 = (_OWORD *)(*(void *)(a2 + 56) + (v31 << 7));
    long long v34 = v33[5];
    void v40[4] = v33[4];
    v40[5] = v34;
    v41[0] = v33[6];
    *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v33 + 105);
    long long v35 = v33[1];
    v40[0] = *v33;
    v40[1] = v35;
    long long v36 = v33[3];
    v40[2] = v33[2];
    v40[3] = v36;
    char v37 = _s14CarPlayAssetUI5ThemeO7PaletteV2eeoiySbAE_AEtFZ_0((uint64_t)v40, (uint64_t)v42);
    uint64_t result = sub_24988E414((uint64_t)v61);
    if ((v37 & 1) == 0) {
      return 0;
    }
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v39) {
    return 1;
  }
  unint64_t v11 = *(void *)(v38 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v39) {
      return 1;
    }
    unint64_t v11 = *(void *)(v38 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_2499FF734(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_22:
    uint64_t v15 = *(void *)(*(void *)(v3 + 48) + 8 * v11);
    uint64_t v16 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v11);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = sub_2498EF16C(v15);
    if (v20)
    {
      long long v21 = (uint64_t *)(*(void *)(a2 + 56) + 16 * v19);
      uint64_t result = *v21;
      if (*v21 == v17 && v21[1] == v18) {
        continue;
      }
      uint64_t result = sub_249AEE0D8();
      if (result) {
        continue;
      }
    }
    return 0;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_21;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_2499FF8C0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v26 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_22;
    }
    int64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v10 >= v27) {
      return 1;
    }
    unint64_t v11 = *(void *)(v26 + 8 * v10);
    ++v4;
    if (!v11)
    {
      int64_t v4 = v10 + 1;
      if (v10 + 1 >= v27) {
        return 1;
      }
      unint64_t v11 = *(void *)(v26 + 8 * v4);
      if (!v11)
      {
        int64_t v4 = v10 + 2;
        if (v10 + 2 >= v27) {
          return 1;
        }
        unint64_t v11 = *(void *)(v26 + 8 * v4);
        if (!v11) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_22:
    uint64_t v13 = *(void *)(*(void *)(v3 + 48) + 8 * v9);
    int64_t v14 = (uint64_t *)(*(void *)(v3 + 56) + 32 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = v14[2];
    uint64_t v18 = v14[3];
    unint64_t v19 = sub_2498EF16C(v13);
    if (v20)
    {
      long long v21 = (uint64_t *)(*(void *)(a2 + 56) + 32 * v19);
      uint64_t result = *v21;
      uint64_t v22 = v21[2];
      uint64_t v23 = v21[3];
      BOOL v24 = *v21 == v15 && v21[1] == v16;
      if (v24 || (uint64_t result = sub_249AEE0D8(), (result & 1) != 0))
      {
        if (v22 == v17 && v23 == v18) {
          continue;
        }
        uint64_t result = sub_249AEE0D8();
        if (result) {
          continue;
        }
      }
    }
    return 0;
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v27) {
    return 1;
  }
  unint64_t v11 = *(void *)(v26 + 8 * v12);
  if (v11)
  {
    int64_t v4 = v12;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v27) {
      return 1;
    }
    unint64_t v11 = *(void *)(v26 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_21;
    }
  }
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_2499FFABC(uint64_t a1, uint64_t a2)
{
  return sub_2499FFAE8(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890CE4, (void (*)(uint64_t, uint64_t, uint64_t))sub_249890CE0);
}

uint64_t sub_2499FFAE8(uint64_t result, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t))
{
  if (result == a2) {
    return 1;
  }
  uint64_t v4 = a2;
  uint64_t v5 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v6 = a3;
  int64_t v7 = 0;
  uint64_t v36 = result + 64;
  uint64_t v8 = 1 << *(unsigned char *)(result + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(result + 64);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v38 = result;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v37) {
      return 1;
    }
    unint64_t v17 = *(void *)(v36 + 8 * v16);
    ++v7;
    if (!v17)
    {
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v37) {
        return 1;
      }
      unint64_t v17 = *(void *)(v36 + 8 * v7);
      if (!v17)
      {
        int64_t v7 = v16 + 2;
        if (v16 + 2 >= v37) {
          return 1;
        }
        unint64_t v17 = *(void *)(v36 + 8 * v7);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    uint64_t v20 = *(void *)(v5 + 56) + 24 * v15;
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *(void *)(v20 + 8);
    uint64_t v23 = *(unsigned __int8 *)(v20 + 16);
    unint64_t v24 = sub_2498EF16C(v19);
    if ((v25 & 1) == 0)
    {
      a4(v22, v21, v23);
LABEL_36:
      v6(v22, v21, v23);
      return 0;
    }
    int64_t v41 = v7;
    uint64_t v26 = *(void *)(v4 + 56) + 24 * v24;
    uint64_t v28 = *(void *)v26;
    uint64_t v27 = *(void *)(v26 + 8);
    uint64_t v29 = *(unsigned __int8 *)(v26 + 16);
    if (v29 == 255)
    {
      if (v23 != 255)
      {
LABEL_35:
        a4(v22, v21, v23);
        a4(v28, v27, v29);
        v6(v28, v27, v29);
        goto LABEL_36;
      }
      a4(v22, v21, 255);
      v6(v28, v27, 255);
      uint64_t v11 = v22;
      uint64_t v12 = v21;
      uint64_t v13 = 255;
LABEL_7:
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v11, v12, v13);
      uint64_t v5 = v38;
      uint64_t v4 = a2;
      int64_t v7 = v41;
    }
    else
    {
      if (v23 == 255) {
        goto LABEL_35;
      }
      a4(v28, v27, v29);
      a4(v28, v27, v29);
      a4(v22, v21, v23);
      a4(v22, v21, v23);
      a4(v28, v27, v29);
      a4(v22, v21, v23);
      uint64_t v30 = Theme.ColorID.rawValue.getter();
      uint64_t v32 = v31;
      if (v30 == Theme.ColorID.rawValue.getter() && v32 == v33)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v6 = a3;
        a3(v28, v27, v29);
        a3(v22, v21, v23);
        a3(v22, v21, v23);
        a3(v28, v27, v29);
        a3(v28, v27, v29);
        uint64_t v11 = v22;
        uint64_t v12 = v21;
        uint64_t v13 = v23;
        goto LABEL_7;
      }
      char v34 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = a3;
      a3(v28, v27, v29);
      a3(v22, v21, v23);
      a3(v22, v21, v23);
      a3(v28, v27, v29);
      a3(v28, v27, v29);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))a3)(v22, v21, v23);
      uint64_t v5 = v38;
      uint64_t v4 = a2;
      int64_t v7 = v41;
      if ((v34 & 1) == 0) {
        return 0;
      }
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v37) {
    return 1;
  }
  unint64_t v17 = *(void *)(v36 + 8 * v18);
  if (v17)
  {
    int64_t v7 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v7 >= v37) {
      return 1;
    }
    unint64_t v17 = *(void *)(v36 + 8 * v7);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_2499FFF80(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v51 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v52 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v53 = result;
  while (1)
  {
    if (v6)
    {
      unint64_t v7 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v60 = v3;
      unint64_t v8 = v7 | (v3 << 6);
      goto LABEL_22;
    }
    int64_t v9 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_72;
    }
    if (v9 >= v52) {
      return 1;
    }
    unint64_t v10 = *(void *)(v51 + 8 * v9);
    int64_t v11 = v3 + 1;
    if (!v10)
    {
      int64_t v11 = v3 + 2;
      if (v3 + 2 >= v52) {
        return 1;
      }
      unint64_t v10 = *(void *)(v51 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v3 + 3;
        if (v3 + 3 >= v52) {
          return 1;
        }
        unint64_t v10 = *(void *)(v51 + 8 * v11);
        if (!v10) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v6 = (v10 - 1) & v10;
    int64_t v60 = v11;
    unint64_t v8 = __clz(__rbit64(v10)) + (v11 << 6);
LABEL_22:
    uint64_t v13 = (uint64_t *)(*(void *)(result + 48) + 16 * v8);
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    unint64_t v16 = *(void *)(result + 56) + (v8 << 6);
    unint64_t v17 = *(void **)v16;
    uint64_t v18 = *(void *)(v16 + 8);
    uint64_t v20 = *(void **)(v16 + 16);
    uint64_t v19 = *(void *)(v16 + 24);
    int v21 = *(char *)(v16 + 32);
    uint64_t v22 = *(void *)(v16 + 48);
    uint64_t v62 = *(void *)(v16 + 40);
    int v59 = *(unsigned __int8 *)(v16 + 56);
    swift_bridgeObjectRetain();
    long long v66 = v20;
    long long v67 = v17;
    uint64_t v69 = v18;
    uint64_t v65 = v19;
    int v68 = v21;
    sub_24988247C(v17, v18, v20, v19, v21);
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_2498EF01C(v14, v15);
    LOBYTE(v18) = v24;
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0) {
      goto LABEL_58;
    }
    uint64_t v25 = *(void *)(v2 + 56) + (v23 << 6);
    uint64_t v26 = *(void **)v25;
    uint64_t v27 = *(void *)(v25 + 8);
    uint64_t v28 = *(void **)(v25 + 16);
    uint64_t v29 = *(uint64_t *)(v25 + 24);
    int v30 = *(char *)(v25 + 32);
    uint64_t v63 = *(void *)(v25 + 48);
    int v58 = *(unsigned __int8 *)(v25 + 56);
    uint64_t v61 = *(void *)(v25 + 40);
    if ((v30 & 0x80000000) == 0)
    {
      if ((v68 & 0x80000000) == 0)
      {
        BOOL v31 = v26 == v67 && v27 == v69;
        if (v31 || (sub_249AEE0D8() & 1) != 0)
        {
          if (v28)
          {
            if (v20)
            {
              sub_24987BE44();
              unint64_t v56 = v6;
              uint64_t v32 = v26;
              sub_24988247C(v67, v69, v66, v65, v68);
              sub_24988247C(v26, v27, v28, v29, v30);
              sub_24988247C(v26, v27, v28, v29, v30);
              sub_24988247C(v67, v69, v66, v65, v68);
              sub_24988247C(v26, v27, v28, v29, v30);
              sub_24988247C(v67, v69, v66, v65, v68);
              sub_24988247C(v26, v27, v28, v29, v30);
              swift_bridgeObjectRetain();
              id v33 = v66;
              id v34 = v28;
              char v50 = sub_249AED888();

              sub_2498826E4(v32, v27, v28, v29, v30);
              sub_2498826E4(v67, v69, v66, v65, v68);
              sub_2498826E4(v67, v69, v66, v65, v68);
              sub_2498826E4(v32, v27, v28, v29, v30);
              unint64_t v6 = v56;
              uint64_t v26 = v32;
              sub_2498826E4(v67, v69, v66, v65, v68);
              long long v35 = v28;
              sub_2498826E4(v32, v27, v28, v29, v30);
              if ((v50 & 1) == 0)
              {
                sub_2498826E4(v32, v27, v28, v29, v30);
                swift_bridgeObjectRelease();
                uint64_t v42 = v66;
                int64_t v41 = v67;
                uint64_t v43 = v69;
                uint64_t v44 = v65;
                char v45 = v68;
                goto LABEL_64;
              }
              if (v30)
              {
LABEL_44:
                if ((v68 & 1) == 0) {
                  goto LABEL_57;
                }
                goto LABEL_52;
              }
              goto LABEL_34;
            }
            sub_24988247C(v26, v27, v28, v29, v30);
            uint64_t v46 = v65;
            long long v48 = v26;
            char v47 = v68;
            sub_24988247C(v67, v69, 0, v65, v68);
            sub_2498826E4(v48, v27, v28, v29, v30);
            sub_2498826E4(v67, v69, 0, v65, v68);
            int64_t v41 = v67;
            uint64_t v43 = v69;
            uint64_t v42 = 0;
LABEL_62:
            uint64_t v44 = v46;
          }
          else
          {
            sub_24988247C(v26, v27, 0, v29, v30);
            if (!v20)
            {
              long long v35 = 0;
              sub_24988247C(v67, v69, 0, v65, v68);
              sub_24988247C(v26, v27, 0, v29, v30);
              swift_bridgeObjectRetain();
              sub_2498826E4(v26, v27, 0, v29, v30);
              sub_2498826E4(v67, v69, 0, v65, v68);
              if (v30) {
                goto LABEL_44;
              }
LABEL_34:
              if ((v68 & 1) != 0 || *(double *)&v29 != *(double *)&v65)
              {
LABEL_57:
                sub_2498826E4(v26, v27, v35, v29, v30);
                swift_bridgeObjectRelease();
LABEL_58:
                uint64_t v42 = v66;
                int64_t v41 = v67;
                uint64_t v43 = v69;
                uint64_t v44 = v65;
                char v45 = v68;
                goto LABEL_64;
              }
              goto LABEL_52;
            }
            long long v49 = v26;
            char v47 = v68;
            sub_24988247C(v67, v69, v66, v65, v68);
            sub_2498826E4(v49, v27, 0, v29, v30);
            sub_2498826E4(v67, v69, v66, v65, v68);
            int64_t v41 = v67;
            uint64_t v43 = v69;
            uint64_t v42 = v66;
            uint64_t v44 = v65;
          }
          char v45 = v47;
          goto LABEL_64;
        }
      }
LABEL_59:
      sub_24988247C(v26, v27, v28, v29, v30);
      uint64_t v46 = v65;
      long long v64 = v26;
      char v47 = v68;
      sub_24988247C(v67, v69, v20, v65, v68);
      sub_2498826E4(v64, v27, v28, v29, v30);
      sub_2498826E4(v67, v69, v20, v65, v68);
      int64_t v41 = v67;
      uint64_t v43 = v69;
      uint64_t v42 = v20;
      goto LABEL_62;
    }
    if ((v68 & 0x80000000) == 0) {
      goto LABEL_59;
    }
    unint64_t v57 = v6;
    if (v26)
    {
      if (!v67)
      {
        long long v67 = 0;
LABEL_69:
        sub_24988247C(v26, v27, v28, v29, v30);
        sub_24988247C(v67, v69, v20, v65, v68);
        sub_2498826E4(v26, v27, v28, v29, v30);
        sub_2498826E4(v67, v69, v20, v65, v68);
        int64_t v41 = v67;
        uint64_t v43 = v69;
        uint64_t v42 = v20;
        uint64_t v44 = v65;
        char v45 = v68;
        goto LABEL_64;
      }
      sub_24987BE44();
      sub_24988247C(v67, v69, v20, v65, v68);
      sub_24988247C(v26, v27, v28, v29, v30);
      sub_24988247C(v26, v27, v28, v29, v30);
      sub_24988247C(v67, v69, v20, v65, v68);
      sub_24988247C(v26, v27, v28, v29, v30);
      uint64_t v36 = v28;
      sub_24988247C(v67, v69, v66, v65, v68);
      sub_24988247C(v26, v27, v28, v29, v30);
      swift_bridgeObjectRetain();
      id v37 = v67;
      id v38 = v26;
      char v39 = sub_249AED888();

      if ((v39 & 1) == 0) {
        goto LABEL_60;
      }
    }
    else
    {
      if (v67) {
        goto LABEL_69;
      }
      sub_24988247C(0, v69, v20, v65, v68);
      sub_24988247C(0, v27, v28, v29, v30);
      sub_24988247C(0, v27, v28, v29, v30);
      sub_24988247C(0, v69, v20, v65, v68);
      sub_24988247C(0, v27, v28, v29, v30);
      sub_24988247C(0, v69, v20, v65, v68);
      sub_24988247C(0, v27, v28, v29, v30);
      swift_bridgeObjectRetain();
      uint64_t v36 = v28;
    }
    if ((v27 != v69 || v36 != v66) && (sub_249AEE0D8() & 1) == 0)
    {
LABEL_60:
      sub_2498826E4(v26, v27, v36, v29, v30);
      sub_2498826E4(v67, v69, v66, v65, v68);
      sub_2498826E4(v67, v69, v66, v65, v68);
      sub_2498826E4(v26, v27, v36, v29, v30);
      sub_2498826E4(v67, v69, v66, v65, v68);
      sub_2498826E4(v26, v27, v36, v29, v30);
      sub_2498826E4(v26, v27, v36, v29, v30);
      swift_bridgeObjectRelease();
      int64_t v41 = v67;
      uint64_t v43 = v69;
      uint64_t v42 = v66;
      uint64_t v44 = v65;
      char v45 = v68;
LABEL_64:
      sub_2498826E4(v41, v43, v42, v44, v45);
LABEL_65:
      swift_bridgeObjectRelease();
      return 0;
    }
    char v55 = sub_249A00B90(v29, v65);
    sub_2498826E4(v26, v27, v36, v29, v30);
    sub_2498826E4(v67, v69, v66, v65, v68);
    sub_2498826E4(v67, v69, v66, v65, v68);
    sub_2498826E4(v26, v27, v36, v29, v30);
    sub_2498826E4(v67, v69, v66, v65, v68);
    long long v35 = v36;
    sub_2498826E4(v26, v27, v36, v29, v30);
    unint64_t v6 = v57;
    if ((v55 & 1) == 0) {
      goto LABEL_57;
    }
LABEL_52:
    if (v61 != v62) {
      goto LABEL_57;
    }
    char v40 = sub_2499FEF30(v63, v22);
    sub_2498826E4(v26, v27, v35, v29, v30);
    swift_bridgeObjectRelease();
    sub_2498826E4(v67, v69, v66, v65, v68);
    if ((v40 & 1) == 0) {
      goto LABEL_65;
    }
    swift_bridgeObjectRelease();
    uint64_t result = v53;
    uint64_t v2 = a2;
    int64_t v3 = v60;
    if (v58 != v59) {
      return 0;
    }
  }
  uint64_t v12 = v3 + 4;
  if (v3 + 4 >= v52) {
    return 1;
  }
  unint64_t v10 = *(void *)(v51 + 8 * v12);
  if (v10)
  {
    int64_t v11 = v3 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v11 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v11 >= v52) {
      return 1;
    }
    unint64_t v10 = *(void *)(v51 + 8 * v11);
    ++v12;
    if (v10) {
      goto LABEL_21;
    }
  }
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_249A00B90(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v30 = result + 64;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 64);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  while (v7)
  {
    unint64_t v9 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v10 = v9 | (v4 << 6);
LABEL_26:
    uint64_t v14 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = *(void *)(v3 + 56) + 32 * v10;
    uint64_t v19 = *(void *)v17;
    uint64_t v18 = *(void *)(v17 + 8);
    double v20 = *(double *)(v17 + 16);
    char v21 = *(unsigned char *)(v17 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_2498EF01C(v15, v16);
    char v24 = v23;
    swift_bridgeObjectRelease();
    if ((v24 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    uint64_t v25 = *(void *)(a2 + 56) + 32 * v22;
    double v26 = *(double *)(v25 + 16);
    char v27 = *(unsigned char *)(v25 + 24);
    if (*(void *)v25 == v19 && *(void *)(v25 + 8) == v18)
    {
      uint64_t result = swift_bridgeObjectRelease();
      if ((v27 & 1) == 0) {
        goto LABEL_6;
      }
LABEL_35:
      if ((v21 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      char v29 = sub_249AEE0D8();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        return 0;
      }
      if (v27) {
        goto LABEL_35;
      }
LABEL_6:
      if (v26 == v20) {
        char v8 = v21;
      }
      else {
        char v8 = 1;
      }
      if (v8) {
        return 0;
      }
    }
  }
  int64_t v11 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_41;
  }
  if (v11 >= v31) {
    return 1;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v11);
  ++v4;
  if (v12) {
    goto LABEL_25;
  }
  int64_t v4 = v11 + 1;
  if (v11 + 1 >= v31) {
    return 1;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v4);
  if (v12) {
    goto LABEL_25;
  }
  int64_t v4 = v11 + 2;
  if (v11 + 2 >= v31) {
    return 1;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v4);
  if (v12)
  {
LABEL_25:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
    goto LABEL_26;
  }
  int64_t v13 = v11 + 3;
  if (v13 >= v31) {
    return 1;
  }
  unint64_t v12 = *(void *)(v30 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v31) {
      return 1;
    }
    unint64_t v12 = *(void *)(v30 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_25;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_249A00DE0(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v2 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v62 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v63 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v64 = result;
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v3 << 6);
LABEL_24:
    uint64_t v13 = *(void *)(*(void *)(v2 + 48) + 8 * v9);
    uint64_t v14 = *(void *)(v2 + 56) + 48 * v9;
    long long v73 = *(void **)v14;
    uint64_t v74 = *(void *)(v14 + 8);
    char v72 = *(void **)(v14 + 16);
    uint64_t v70 = *(uint64_t *)(v14 + 24);
    int v75 = *(char *)(v14 + 32);
    uint64_t v15 = *(void *)(v14 + 40);
    unint64_t v16 = sub_2498EF16C(v13);
    if ((v17 & 1) == 0)
    {
      sub_24988247C(v73, v74, v72, v70, v75);
      long long v54 = v73;
      uint64_t v55 = v74;
      long long v35 = v72;
      uint64_t v36 = v70;
      char v37 = v75;
      goto LABEL_70;
    }
    int64_t v67 = v3;
    uint64_t v18 = *(void *)(a2 + 56) + 48 * v16;
    uint64_t v19 = *(void **)v18;
    uint64_t v20 = *(void *)(v18 + 8);
    char v21 = *(void **)(v18 + 16);
    uint64_t v71 = *(uint64_t *)(v18 + 24);
    int v22 = *(char *)(v18 + 32);
    uint64_t v68 = *(void *)(v18 + 40);
    if (v22 < 0)
    {
      if ((v75 & 0x80000000) == 0)
      {
LABEL_59:
        sub_24988247C(v19, v20, v21, v71, v22);
        uint64_t v51 = v72;
        id v38 = v21;
        uint64_t v52 = v70;
        char v53 = v75;
        sub_24988247C(v73, v74, v72, v70, v75);
        sub_2498826E4(v19, v20, v38, v71, v22);
        long long v54 = v73;
        uint64_t v55 = v74;
        goto LABEL_60;
      }
      char v59 = *(unsigned char *)(v18 + 32);
      int v58 = *(void **)v18;
      uint64_t v66 = v15;
      if (v19)
      {
        if (!v73)
        {
          long long v73 = 0;
LABEL_64:
          sub_24988247C(v19, v20, v21, v71, v22);
          uint64_t v42 = v73;
          uint64_t v43 = v74;
          uint64_t v44 = v72;
          char v45 = v21;
          uint64_t v52 = v70;
          char v53 = v75;
          sub_24988247C(v73, v74, v72, v70, v75);
          uint64_t v46 = v19;
          uint64_t v47 = v20;
          long long v48 = v45;
          uint64_t v49 = v71;
          char v50 = v22;
LABEL_68:
          sub_2498826E4(v46, v47, v48, v49, v50);
          long long v54 = v42;
          uint64_t v55 = v43;
          long long v35 = v44;
LABEL_69:
          uint64_t v36 = v52;
          char v37 = v53;
          goto LABEL_70;
        }
        uint64_t v28 = *(void *)(v18 + 8);
        sub_24987BE44();
        char v29 = v21;
        sub_24988247C(v19, v20, v21, v71, v22);
        sub_24988247C(v19, v20, v21, v71, v22);
        sub_24988247C(v73, v74, v72, v70, v75);
        sub_24988247C(v19, v20, v21, v71, v22);
        sub_24988247C(v73, v74, v72, v70, v75);
        sub_24988247C(v19, v20, v21, v71, v22);
        sub_24988247C(v73, v74, v72, v70, v75);
        uint64_t v30 = v20;
        sub_24988247C(v73, v74, v72, v70, v75);
        id v31 = v73;
        id v32 = v19;
        char v33 = sub_249AED888();

        if ((v33 & 1) == 0)
        {
          sub_2498826E4(v19, v28, v21, v71, v59);
          uint64_t v51 = v72;
          uint64_t v52 = v70;
          char v53 = v75;
          sub_2498826E4(v73, v74, v72, v70, v75);
          sub_2498826E4(v73, v74, v72, v70, v75);
          sub_2498826E4(v19, v30, v29, v71, v59);
          sub_2498826E4(v73, v74, v72, v70, v75);
          sub_2498826E4(v19, v30, v29, v71, v59);
          sub_2498826E4(v19, v30, v29, v71, v59);
          long long v54 = v73;
          uint64_t v55 = v74;
LABEL_60:
          long long v35 = v51;
          goto LABEL_69;
        }
      }
      else
      {
        if (v73) {
          goto LABEL_64;
        }
        sub_24988247C(0, v20, v21, v71, v22);
        sub_24988247C(0, v20, v21, v71, v22);
        sub_24988247C(0, v74, v72, v70, v75);
        sub_24988247C(0, v20, v21, v71, v22);
        sub_24988247C(0, v74, v72, v70, v75);
        sub_24988247C(0, v20, v21, v71, v22);
        sub_24988247C(0, v74, v72, v70, v75);
        sub_24988247C(0, v74, v72, v70, v75);
        uint64_t v30 = v20;
      }
      BOOL v34 = v30 == v74 && v21 == v72;
      if (!v34 && (sub_249AEE0D8() & 1) == 0)
      {
        uint64_t v56 = v30;
        sub_2498826E4(v58, v30, v21, v71, v59);
        uint64_t v42 = v73;
        uint64_t v43 = v74;
        uint64_t v44 = v72;
        unint64_t v57 = v21;
        uint64_t v52 = v70;
        char v53 = v75;
        sub_2498826E4(v73, v74, v72, v70, v75);
        sub_2498826E4(v73, v74, v72, v70, v75);
        sub_2498826E4(v58, v56, v57, v71, v59);
        sub_2498826E4(v73, v74, v72, v70, v75);
        sub_2498826E4(v58, v56, v57, v71, v59);
        uint64_t v46 = v58;
        uint64_t v47 = v56;
        long long v48 = v57;
        uint64_t v49 = v71;
        char v50 = v59;
        goto LABEL_68;
      }
      char v61 = sub_249A00B90(v71, v70);
      sub_2498826E4(v19, v30, v21, v71, v59);
      sub_2498826E4(v73, v74, v72, v70, v75);
      sub_2498826E4(v73, v74, v72, v70, v75);
      sub_2498826E4(v19, v30, v21, v71, v59);
      sub_2498826E4(v73, v74, v72, v70, v75);
      sub_2498826E4(v19, v30, v21, v71, v59);
      sub_2498826E4(v19, v30, v21, v71, v59);
      sub_2498826E4(v73, v74, v72, v70, v75);
      uint64_t result = 0;
      if ((v61 & 1) == 0) {
        return result;
      }
      int64_t v3 = v67;
      uint64_t v2 = v64;
      if (v68 != v66) {
        return result;
      }
    }
    else
    {
      if (v75 < 0) {
        goto LABEL_59;
      }
      BOOL v23 = v19 == v73 && v20 == v74;
      if (!v23 && (sub_249AEE0D8() & 1) == 0)
      {
        sub_24988247C(v19, v20, v21, v71, v22);
        int64_t v41 = v21;
        uint64_t v52 = v70;
        char v53 = v75;
        sub_24988247C(v73, v74, v72, v70, v75);
        sub_24988247C(v73, v74, v72, v70, v75);
        sub_2498826E4(v19, v20, v41, v71, v22);
        sub_2498826E4(v73, v74, v72, v70, v75);
        long long v54 = v73;
        uint64_t v55 = v74;
        long long v35 = v72;
        goto LABEL_69;
      }
      if (!v21)
      {
        sub_24988247C(v19, v20, 0, v71, v22);
        if (!v72)
        {
          sub_24988247C(v73, v74, 0, v70, v75);
          sub_24988247C(v73, v74, 0, v70, v75);
          sub_2498826E4(v19, v20, 0, v71, v22);
          sub_2498826E4(v73, v74, 0, v70, v75);
          sub_2498826E4(v73, v74, 0, v70, v75);
          if (v22) {
            goto LABEL_6;
          }
          goto LABEL_44;
        }
        uint64_t v39 = v70;
        char v40 = v75;
        sub_24988247C(v73, v74, v72, v70, v75);
        sub_2498826E4(v19, v20, 0, v71, v22);
        long long v54 = v73;
        uint64_t v55 = v74;
        long long v35 = v72;
LABEL_66:
        uint64_t v36 = v39;
        char v37 = v40;
LABEL_70:
        sub_2498826E4(v54, v55, v35, v36, v37);
        return 0;
      }
      if (!v72)
      {
        sub_24988247C(v19, v20, v21, v71, v22);
        uint64_t v39 = v70;
        char v40 = v75;
        sub_24988247C(v73, v74, 0, v70, v75);
        sub_24988247C(v73, v74, 0, v70, v75);
        sub_2498826E4(v19, v20, v21, v71, v22);
        sub_2498826E4(v73, v74, 0, v70, v75);
        long long v54 = v73;
        uint64_t v55 = v74;
        long long v35 = 0;
        goto LABEL_66;
      }
      sub_24987BE44();
      char v24 = v21;
      sub_24988247C(v19, v20, v21, v71, v22);
      sub_24988247C(v19, v20, v21, v71, v22);
      uint64_t v65 = v15;
      sub_24988247C(v73, v74, v72, v70, v75);
      sub_24988247C(v19, v20, v21, v71, v22);
      sub_24988247C(v73, v74, v72, v70, v75);
      sub_24988247C(v19, v20, v21, v71, v22);
      sub_24988247C(v73, v74, v72, v70, v75);
      sub_24988247C(v73, v74, v72, v70, v75);
      char v25 = v22;
      id v26 = v72;
      id v27 = v24;
      char v60 = sub_249AED888();

      sub_2498826E4(v19, v20, v24, v71, v25);
      sub_2498826E4(v73, v74, v72, v70, v75);
      sub_2498826E4(v73, v74, v72, v70, v75);
      sub_2498826E4(v19, v20, v24, v71, v25);
      sub_2498826E4(v73, v74, v72, v70, v75);
      sub_2498826E4(v19, v20, v24, v71, v25);
      sub_2498826E4(v19, v20, v24, v71, v25);
      uint64_t v15 = v65;
      sub_2498826E4(v73, v74, v72, v70, v75);
      if ((v60 & 1) == 0) {
        return 0;
      }
      if (v25)
      {
LABEL_6:
        uint64_t result = 0;
        uint64_t v2 = v64;
        uint64_t v7 = v68;
        if ((v75 & 1) == 0) {
          return result;
        }
        goto LABEL_7;
      }
LABEL_44:
      uint64_t v2 = v64;
      uint64_t v7 = v68;
      if (v75) {
        return 0;
      }
      uint64_t result = 0;
      if (*(double *)&v71 != *(double *)&v70) {
        return result;
      }
LABEL_7:
      int64_t v3 = v67;
      if (v7 != v15) {
        return result;
      }
    }
  }
  int64_t v10 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_74;
  }
  if (v10 >= v63) {
    return 1;
  }
  unint64_t v11 = *(void *)(v62 + 8 * v10);
  ++v3;
  if (v11) {
    goto LABEL_23;
  }
  int64_t v3 = v10 + 1;
  if (v10 + 1 >= v63) {
    return 1;
  }
  unint64_t v11 = *(void *)(v62 + 8 * v3);
  if (v11) {
    goto LABEL_23;
  }
  int64_t v3 = v10 + 2;
  if (v10 + 2 >= v63) {
    return 1;
  }
  unint64_t v11 = *(void *)(v62 + 8 * v3);
  if (v11)
  {
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v3 << 6);
    goto LABEL_24;
  }
  int64_t v12 = v10 + 3;
  if (v12 >= v63) {
    return 1;
  }
  unint64_t v11 = *(void *)(v62 + 8 * v12);
  if (v11)
  {
    int64_t v3 = v12;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v3 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v3 >= v63) {
      return 1;
    }
    unint64_t v11 = *(void *)(v62 + 8 * v3);
    ++v12;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_249A01AD8(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v2 = 0;
  uint64_t v39 = result + 64;
  uint64_t v3 = 1 << *(unsigned char *)(result + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(result + 64);
  int64_t v40 = (unint64_t)(v3 + 63) >> 6;
  uint64_t v41 = result;
  if (!v5) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v43 = (v5 - 1) & v5;
  int64_t v44 = v2;
  for (unint64_t i = __clz(__rbit64(v5)) | (v2 << 6); ; unint64_t i = __clz(__rbit64(v8)) + (v9 << 6))
  {
    unint64_t v11 = (uint64_t *)(*(void *)(result + 48) + 16 * i);
    uint64_t v12 = v11[1];
    uint64_t v48 = *v11;
    uint64_t v13 = *(void *)(result + 56) + 96 * i;
    int v14 = *(_DWORD *)(v13 + 16);
    char v15 = *(unsigned char *)(v13 + 20);
    uint64_t v17 = *(void *)(v13 + 24);
    uint64_t v16 = *(void *)(v13 + 32);
    char v18 = *(unsigned char *)(v13 + 40);
    uint64_t v20 = *(void *)(v13 + 48);
    uint64_t v19 = *(void *)(v13 + 56);
    char v21 = *(unsigned char *)(v13 + 64);
    uint64_t v22 = *(void *)(v13 + 72);
    uint64_t v23 = *(void *)(v13 + 80);
    char v24 = *(unsigned char *)(v13 + 88);
    char v25 = *(unsigned char *)(v13 + 89);
    char v26 = *(unsigned char *)(v13 + 90);
    v60[0] = *(void *)v13;
    v60[1] = *(void *)(v13 + 8);
    int v61 = v14;
    char v62 = v15;
    uint64_t v63 = v17;
    uint64_t v64 = v16;
    char v65 = v18;
    uint64_t v66 = v20;
    uint64_t v67 = v19;
    char v68 = v21;
    uint64_t v69 = v22;
    uint64_t v70 = v23;
    char v71 = v24;
    char v72 = v25;
    char v73 = v26;
    swift_bridgeObjectRetain();
    sub_24988D770(v17, v16, v18);
    sub_24988D770(v20, v19, v21);
    uint64_t v46 = v23;
    uint64_t v47 = v22;
    char v45 = v24;
    sub_249890C2C(v22, v23, v24);
    uint64_t v27 = sub_2498EF01C(v48, v12);
    char v29 = v28;
    swift_bridgeObjectRelease();
    if ((v29 & 1) == 0)
    {
      sub_24988D788(v17, v16, v18);
      sub_24988D788(v20, v19, v21);
      sub_249890C40(v22, v46, v45);
      return 0;
    }
    uint64_t v30 = *(void *)(a2 + 56) + 96 * v27;
    int v31 = *(_DWORD *)(v30 + 16);
    char v32 = *(unsigned char *)(v30 + 20);
    char v33 = *(unsigned char *)(v30 + 40);
    char v34 = *(unsigned char *)(v30 + 64);
    char v35 = *(unsigned char *)(v30 + 88);
    char v36 = *(unsigned char *)(v30 + 89);
    char v37 = *(unsigned char *)(v30 + 90);
    v49[0] = *(void *)v30;
    v49[1] = *(void *)(v30 + 8);
    int v50 = v31;
    char v51 = v32;
    long long v52 = *(_OWORD *)(v30 + 24);
    char v53 = v33;
    long long v54 = *(_OWORD *)(v30 + 48);
    char v55 = v34;
    long long v56 = *(_OWORD *)(v30 + 72);
    char v57 = v35;
    char v58 = v36;
    char v59 = v37;
    char v38 = _s14CarPlayAssetUI10InstrumentV10GaugeStyleO18TicksConfigurationV08TickTypeI0V2eeoiySbAI_AItFZ_0((uint64_t)v49, (uint64_t)v60);
    sub_24988D788(v17, v16, v18);
    sub_24988D788(v20, v19, v21);
    sub_249890C40(v47, v46, v45);
    if ((v38 & 1) == 0) {
      return 0;
    }
    uint64_t result = v41;
    unint64_t v5 = v43;
    int64_t v2 = v44;
    if (v43) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v7 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v7 >= v40) {
      return 1;
    }
    unint64_t v8 = *(void *)(v39 + 8 * v7);
    int64_t v9 = v2 + 1;
    if (!v8)
    {
      int64_t v9 = v7 + 1;
      if (v7 + 1 >= v40) {
        return 1;
      }
      unint64_t v8 = *(void *)(v39 + 8 * v9);
      if (!v8)
      {
        int64_t v9 = v7 + 2;
        if (v7 + 2 >= v40) {
          return 1;
        }
        unint64_t v8 = *(void *)(v39 + 8 * v9);
        if (!v8) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v43 = (v8 - 1) & v8;
    int64_t v44 = v9;
  }
  int64_t v10 = v7 + 3;
  if (v10 >= v40) {
    return 1;
  }
  unint64_t v8 = *(void *)(v39 + 8 * v10);
  if (v8)
  {
    int64_t v9 = v10;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v9 >= v40) {
      return 1;
    }
    unint64_t v8 = *(void *)(v39 + 8 * v9);
    ++v10;
    if (v8) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_249A01E48(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v28 = MEMORY[0x263F8EE78];
  sub_249A22070(0, v1, 0);
  uint64_t v2 = v28;
  uint64_t result = sub_249A49DE0(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v24 = v1;
  int v25 = v5;
  uint64_t v26 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v27 = v7;
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v6);
    swift_retain();
    uint64_t result = sub_249AED588();
    uint64_t v14 = v13;
    unint64_t v16 = *(void *)(v28 + 16);
    unint64_t v15 = *(void *)(v28 + 24);
    if (v16 >= v15 >> 1)
    {
      uint64_t v23 = result;
      sub_249A22070(v15 > 1, v16 + 1, 1);
      uint64_t result = v23;
    }
    *(void *)(v28 + 16) = v16 + 1;
    uint64_t v17 = (void *)(v28 + 24 * v16);
    void v17[4] = result;
    v17[5] = v14;
    _DWORD v17[6] = v12;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v18 = *(void *)(v26 + 8 * v11);
    if ((v18 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v25;
    if (*(_DWORD *)(a1 + 36) != v25) {
      goto LABEL_27;
    }
    unint64_t v19 = v18 & (-2 << (v6 & 0x3F));
    if (v19)
    {
      int64_t v9 = __clz(__rbit64(v19)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v24;
    }
    else
    {
      unint64_t v20 = v11 + 1;
      unint64_t v21 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v24;
      if (v11 + 1 < v21)
      {
        unint64_t v22 = *(void *)(v26 + 8 * v20);
        if (v22)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v22)) + (v20 << 6);
        }
        else
        {
          while (v21 - 2 != v11)
          {
            unint64_t v22 = *(void *)(a1 + 80 + 8 * v11++);
            if (v22)
            {
              unint64_t v20 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    uint64_t v7 = v27 + 1;
    uint64_t v6 = v9;
    if (v27 + 1 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t static GradientColor.singleColor(_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDE98);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = a1;
  unint64_t v5 = sub_2498F0AFC((double *)inited);
  swift_setDeallocating();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA0);
  swift_arrayDestroy();
  uint64_t v6 = sub_249A01E48(v5);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEA8);
    uint64_t v7 = sub_249AEDCA8();
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8EE80];
  }
  uint64_t v10 = v7;
  uint64_t v8 = (void *)swift_bridgeObjectRetain();
  sub_249A05944(v8, 1, &v10);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v10;
  return result;
}

uint64_t static GradientColor.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_2499FE290(*a1, *a2);
}

uint64_t sub_249A021C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  while (1)
  {
    uint64_t v5 = *(void *)(a1 + 8 * v3 + 32);
    uint64_t v6 = *(void *)(v5 + 16);
    int64_t v7 = v4[2];
    int64_t v8 = v7 + v6;
    if (__OFADD__(v7, v6)) {
      break;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v8 <= v4[3] >> 1)
    {
      if (*(void *)(v5 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v7 <= v8) {
        int64_t v10 = v7 + v6;
      }
      else {
        int64_t v10 = v7;
      }
      uint64_t v4 = sub_2498AB3BC(isUniquelyReferenced_nonNull_native, v10, 1, v4);
      if (*(void *)(v5 + 16))
      {
LABEL_14:
        uint64_t v11 = v4[2];
        if ((v4[3] >> 1) - v11 < v6) {
          goto LABEL_28;
        }
        unint64_t v12 = (unint64_t)&v4[3 * v11 + 4];
        if (v5 + 32 < v12 + 24 * v6 && v12 < v5 + 32 + 24 * v6) {
          goto LABEL_30;
        }
        swift_arrayInitWithCopy();
        if (v6)
        {
          uint64_t v14 = v4[2];
          BOOL v15 = __OFADD__(v14, v6);
          uint64_t v16 = v14 + v6;
          if (v15) {
            goto LABEL_29;
          }
          void v4[2] = v16;
        }
        goto LABEL_4;
      }
    }
    if (v6) {
      goto LABEL_27;
    }
LABEL_4:
    ++v3;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v1 == v3)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v4;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  uint64_t result = sub_249AEDCB8();
  __break(1u);
  return result;
}

uint64_t Theming.palettes(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  uint64_t v6 = v5[1];
  if (!v6) {
    return 0;
  }
  v8[0] = *v5;
  v8[1] = v6;
  return (*(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + 24))(v8, a2, a3);
}

uint64_t Theming.defaultPalette(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int64_t v7 = (void *)(a1 + *(int *)(type metadata accessor for Layout() + 28));
  uint64_t v8 = v7[1];
  if (v8)
  {
    *(void *)&v10[0] = *v7;
    *((void *)&v10[0] + 1) = v8;
    return (*(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(a3 + 16))(v10, a2, a3);
  }
  else
  {
    sub_2498EBBEC(v10);
    return sub_249882788((uint64_t)v10, a4, &qword_2696DF350);
  }
}

uint64_t Theming.defaultWallpaperID(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t result = type metadata accessor for Layout();
  int64_t v9 = (void *)(a1 + *(int *)(result + 28));
  uint64_t v10 = v9[1];
  if (v10)
  {
    v11[0] = *v9;
    v11[1] = v10;
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(a3 + 8))(v11, a2, a3);
  }
  else
  {
    *a4 = 0;
    a4[1] = 0;
  }
  return result;
}

uint64_t GradientColor.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_24988A120(a1, v3);

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A02598()
{
  return 0x73706F7473;
}

uint64_t sub_249A025AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x73706F7473 && a2 == 0xE500000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_249AEE0D8();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_249A0263C(uint64_t a1)
{
  unint64_t v2 = sub_249A060F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A02678(uint64_t a1)
{
  unint64_t v2 = sub_249A060F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t GradientColor.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E31D0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A060F8();
  sub_249AEE468();
  v9[1] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E31E0);
  sub_249A0614C(&qword_2696E31E8, (void (*)(void))sub_24988CC10);
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t GradientColor.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_24988A120((uint64_t)v3, v1);
  return sub_249AEE388();
}

uint64_t GradientColor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E31F0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A060F8();
  sub_249AEE428();
  if (!v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E31E0);
    sub_249A0614C(&qword_2696E31F8, (void (*)(void))sub_24988CBBC);
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

uint64_t sub_249A02A34@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return GradientColor.init(from:)(a1, a2);
}

uint64_t sub_249A02A4C(void *a1)
{
  return GradientColor.encode(to:)(a1);
}

uint64_t sub_249A02A64()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_24988A120((uint64_t)v3, v1);
  return sub_249AEE388();
}

uint64_t sub_249A02AAC(uint64_t a1)
{
  return sub_24988A120(a1, *v1);
}

uint64_t sub_249A02AB4()
{
  uint64_t v1 = *v0;
  sub_249AEE338();
  sub_24988A120((uint64_t)v3, v1);
  return sub_249AEE388();
}

uint64_t sub_249A02AF8(uint64_t *a1, uint64_t *a2)
{
  return sub_2499FE290(*a1, *a2);
}

uint64_t Theme.ColorID.init(rawValue:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v27 = a3;
    swift_bridgeObjectRetain();
    uint64_t v8 = (unsigned __int8 *)(v6 + 48);
    while (1)
    {
      uint64_t v9 = *((void *)v8 - 2);
      uint64_t v10 = *((void *)v8 - 1);
      int v12 = *v8;
      v8 += 24;
      char v11 = v12;
      switch(v12)
      {
        case 4:
          uint64_t v28 = 0x2E72656E74726170;
          unint64_t v29 = 0xE800000000000000;
          sub_24988D770(v9, v10, 4);
          swift_bridgeObjectRetain();
          sub_249AED128();
          sub_249AED1E8();
          swift_bridgeObjectRelease();
          break;
        default:
          uint64_t v28 = 0;
          unint64_t v29 = 0xE000000000000000;
          sub_249AED1E8();
          sub_249AEDC08();
          break;
      }
      if (v28 == a1 && v29 == a2)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      char v13 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      if (v13) {
        break;
      }
      sub_24988D788(v9, v10, v11);
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        a3 = v27;
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v27 = v9;
    *(void *)(v27 + 8) = v10;
    *(unsigned char *)(v27 + 16) = v11;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_12:
    if (sub_249A03000())
    {
      unint64_t v14 = sub_249AED1B8();
      unint64_t v15 = sub_249A061C8(v14, a1, a2);
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      swift_bridgeObjectRelease();
      uint64_t v22 = MEMORY[0x24C5AE2B0](v15, v17, v19, v21);
      uint64_t v24 = v23;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a3 = v22;
      *(void *)(a3 + 8) = v24;
      char v26 = 4;
    }
    else
    {
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)a3 = 0;
      *(void *)(a3 + 8) = 0;
      char v26 = -1;
    }
    *(unsigned char *)(a3 + 16) = v26;
  }
  return result;
}

uint64_t Theme.ColorID.rawValue.getter()
{
  switch(*(unsigned char *)(v0 + 16))
  {
    case 4:
      uint64_t v2 = 0x2E72656E74726170;
      swift_bridgeObjectRetain();
      sub_249AED128();
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v2 = 0;
      sub_249AED1E8();
      sub_249AEDC08();
      break;
  }
  return v2;
}

uint64_t sub_249A03000()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_249AED208();
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = v1;
    do
    {
      uint64_t v6 = sub_249AED208();
      if (!v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 1;
      }
      if (v2 == v6 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v4 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v4 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v2 = sub_249AED208();
      uint64_t v3 = v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_249AED208();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  BOOL v10 = v9 == 0;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t Theme.ColorID.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE418();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_2Tm(&v29, v31);
    uint64_t v5 = sub_249AEE0E8();
    unint64_t v7 = v6;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)&v29);
    uint64_t v28 = v5;
    unint64_t v32 = v7;
    swift_bridgeObjectRetain();
    uint64_t v8 = *(void *)(_s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0() + 16);
    if (v8)
    {
      uint64_t v27 = a2;
      uint64_t v9 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 48);
      while (1)
      {
        uint64_t v10 = *((void *)v9 - 2);
        uint64_t v11 = *((void *)v9 - 1);
        int v13 = *v9;
        v9 += 24;
        char v12 = v13;
        switch(v13)
        {
          case 4:
            uint64_t v29 = 0x2E72656E74726170;
            unint64_t v30 = 0xE800000000000000;
            sub_24988D770(v10, v11, 4);
            swift_bridgeObjectRetain();
            sub_249AED128();
            sub_249AED1E8();
            swift_bridgeObjectRelease();
            break;
          default:
            uint64_t v29 = 0;
            unint64_t v30 = 0xE000000000000000;
            sub_249AED1E8();
            sub_249AEDC08();
            break;
        }
        if (v29 == v28 && v30 == v32)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
        char v14 = sub_249AEE0D8();
        swift_bridgeObjectRelease();
        if (v14) {
          break;
        }
        sub_24988D788(v10, v11, v12);
        if (!--v8)
        {
          swift_bridgeObjectRelease_n();
          a2 = v27;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_18:
      swift_bridgeObjectRelease_n();
      goto LABEL_19;
    }
    swift_bridgeObjectRelease();
LABEL_13:
    unint64_t v15 = v32;
    if (sub_249A03000())
    {
      uint64_t v27 = a2;
      unint64_t v16 = sub_249AED1B8();
      unint64_t v17 = sub_249A061C8(v16, v28, v15);
      uint64_t v19 = v18;
      uint64_t v21 = v20;
      uint64_t v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v10 = MEMORY[0x24C5AE2B0](v17, v19, v21, v23);
      uint64_t v11 = v24;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v12 = 4;
LABEL_19:
      *(void *)uint64_t v27 = v10;
      *(void *)(v27 + 8) = v11;
      *(unsigned char *)(v27 + 16) = v12;
      return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
    }
    swift_bridgeObjectRelease();
    sub_249A06214();
    swift_allocError();
    *int v25 = v28;
    v25[1] = v15;
    swift_willThrow();
  }
  return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
}

void *static Theme.RadialColorID.allCases.getter()
{
  return &unk_26FDA08A0;
}

void *static Theme.ModularColorID.allCases.getter()
{
  return &unk_26FDA08F0;
}

void *static Theme.MapsMediaColorID.allCases.getter()
{
  return &unk_26FDA0938;
}

void *static Theme.SpecialColorID.allCases.getter()
{
  return &unk_26FDA1BA8;
}

uint64_t static TaggedValue<>.allCases.getter()
{
  swift_beginAccess();
  uint64_t v0 = (uint64_t (*)(uint64_t))off_2696E31C0;
  if (!off_2696E31C0) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v1 = swift_retain();
  uint64_t v2 = v0(v1);
  sub_2498B9AB8((uint64_t)v0);
  return v2;
}

uint64_t sub_249A03630@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0();
  *a1 = result;
  return result;
}

uint64_t sub_249A03658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.ColorID.init(rawValue:)(*(void *)a1, *(void *)(a1 + 8), a2);
}

uint64_t sub_249A03664@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Theme.ColorID.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249A0368C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_249A06F2C();

  return MEMORY[0x270F9DB68](a1, a2, v4);
}

uint64_t sub_249A036E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_249A06F2C();

  return MEMORY[0x270F9DB70](a1, a4, a2, a5, v10, a3);
}

uint64_t sub_249A0375C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Theme.ColorID.init(from:)(a1, a2);
}

uint64_t sub_249A03774()
{
  return sub_249AED348();
}

uint64_t sub_249A037C4()
{
  return sub_249AEE388();
}

uint64_t sub_249A0383C()
{
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A038A8()
{
  return sub_249AEE388();
}

uint64_t sub_249A0391C()
{
  return sub_2498F1780();
}

CarPlayAssetUI::Theme::RadialColorID_optional __swiftcall Theme.RadialColorID.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_249AEE2A8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 23;
  switch(v3)
  {
    case 0:
      goto LABEL_25;
    case 1:
      char v5 = 1;
      goto LABEL_25;
    case 2:
      char v5 = 2;
      goto LABEL_25;
    case 3:
      char v5 = 3;
      goto LABEL_25;
    case 4:
      char v5 = 4;
      goto LABEL_25;
    case 5:
      char v5 = 5;
      goto LABEL_25;
    case 6:
      char v5 = 6;
      goto LABEL_25;
    case 7:
      char v5 = 7;
      goto LABEL_25;
    case 8:
      char v5 = 8;
      goto LABEL_25;
    case 9:
      char v5 = 9;
      goto LABEL_25;
    case 10:
      char v5 = 10;
      goto LABEL_25;
    case 11:
      char v5 = 11;
      goto LABEL_25;
    case 12:
      char v5 = 12;
      goto LABEL_25;
    case 13:
      char v5 = 13;
      goto LABEL_25;
    case 14:
      char v5 = 14;
      goto LABEL_25;
    case 15:
      char v5 = 15;
      goto LABEL_25;
    case 16:
      char v5 = 16;
      goto LABEL_25;
    case 17:
      char v5 = 17;
      goto LABEL_25;
    case 18:
      char v5 = 18;
      goto LABEL_25;
    case 19:
      char v5 = 19;
      goto LABEL_25;
    case 20:
      char v5 = 20;
      goto LABEL_25;
    case 21:
      char v5 = 21;
      goto LABEL_25;
    case 22:
      char v5 = 22;
LABEL_25:
      char v6 = v5;
      break;
    case 23:
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    case 32:
      char v6 = 32;
      break;
    case 33:
      char v6 = 33;
      break;
    case 34:
      char v6 = 34;
      break;
    case 35:
      char v6 = 35;
      break;
    case 36:
      char v6 = 36;
      break;
    case 37:
      char v6 = 37;
      break;
    case 38:
      char v6 = 38;
      break;
    case 39:
      char v6 = 39;
      break;
    case 40:
      char v6 = 40;
      break;
    default:
      char v6 = 41;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

unint64_t Theme.RadialColorID.rawValue.getter()
{
  unint64_t result = 0x417972616D697270;
  switch(*v0)
  {
    case 1:
      unint64_t result = 5294388599723750000;
      break;
    case 2:
    case 8:
      unint64_t result = 0x7261646E6F636573;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x656E696C646572;
      break;
    case 5:
      unint64_t result = 0x43656E696C646572;
      break;
    case 6:
      unint64_t result = 0x50656E696C646572;
      break;
    case 7:
      unint64_t result = 0x786554656772616CLL;
      break;
    case 9:
      unint64_t result = 0x65546C6961746564;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000011;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xC:
    case 0xE:
    case 0x22:
    case 0x25:
    case 0x28:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xF:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x10:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0x11:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0x12:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x13:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x14:
      unint64_t result = 0x6C6576654C776F6CLL;
      break;
    case 0x15:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x16:
      unint64_t result = 0x69746341646C6F63;
      break;
    case 0x17:
      unint64_t result = 0x63616E49646C6F63;
      break;
    case 0x18:
      unint64_t result = 0x6C61636974697263;
      break;
    case 0x19:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x1A:
      unint64_t result = 0x6465746361646572;
      break;
    case 0x1B:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x1C:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x1D:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x1E:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x1F:
      unint64_t result = 0x6954657669746361;
      break;
    case 0x20:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x21:
      unint64_t result = 0xD000000000000016;
      break;
    case 0x23:
      unint64_t result = 0xD000000000000011;
      break;
    case 0x24:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x26:
      unint64_t result = 0xD000000000000014;
      break;
    case 0x27:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249A04084(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498F1850(*a1, *a2);
}

uint64_t sub_249A04090(uint64_t a1, uint64_t a2)
{
  return sub_249A05048(a1, a2, (void (*)(uint64_t))Theme.RadialColorID.rawValue.getter);
}

uint64_t sub_249A040A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A050D0(a1, a2, a3, (void (*)(void))Theme.RadialColorID.rawValue.getter);
}

uint64_t sub_249A040C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A05150(a1, a2, a3, (void (*)(uint64_t))Theme.RadialColorID.rawValue.getter);
}

CarPlayAssetUI::Theme::RadialColorID_optional sub_249A040D8(Swift::String *a1)
{
  return Theme.RadialColorID.init(rawValue:)(*a1);
}

unint64_t sub_249A040E4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Theme.RadialColorID.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249A0410C()
{
  return sub_249AED3A8();
}

uint64_t sub_249A0416C()
{
  return sub_249AED348();
}

uint64_t sub_249A041BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_249A06ED8();

  return MEMORY[0x270F9DB68](a1, a2, v4);
}

uint64_t sub_249A04210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_249A06ED8();

  return MEMORY[0x270F9DB70](a1, a4, a2, a5, v10, a3);
}

void sub_249A0428C(void *a1@<X8>)
{
  *a1 = &unk_26FDA08A0;
}

CarPlayAssetUI::Theme::ModularColorID_optional __swiftcall Theme.ModularColorID.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_249AEE2A8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 18;
  switch(v3)
  {
    case 0:
      goto LABEL_20;
    case 1:
      char v5 = 1;
      goto LABEL_20;
    case 2:
      char v5 = 2;
      goto LABEL_20;
    case 3:
      char v5 = 3;
      goto LABEL_20;
    case 4:
      char v5 = 4;
      goto LABEL_20;
    case 5:
      char v5 = 5;
      goto LABEL_20;
    case 6:
      char v5 = 6;
      goto LABEL_20;
    case 7:
      char v5 = 7;
      goto LABEL_20;
    case 8:
      char v5 = 8;
      goto LABEL_20;
    case 9:
      char v5 = 9;
      goto LABEL_20;
    case 10:
      char v5 = 10;
      goto LABEL_20;
    case 11:
      char v5 = 11;
      goto LABEL_20;
    case 12:
      char v5 = 12;
      goto LABEL_20;
    case 13:
      char v5 = 13;
      goto LABEL_20;
    case 14:
      char v5 = 14;
      goto LABEL_20;
    case 15:
      char v5 = 15;
      goto LABEL_20;
    case 16:
      char v5 = 16;
      goto LABEL_20;
    case 17:
      char v5 = 17;
LABEL_20:
      char v6 = v5;
      break;
    case 18:
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    case 26:
      char v6 = 26;
      break;
    case 27:
      char v6 = 27;
      break;
    case 28:
      char v6 = 28;
      break;
    case 29:
      char v6 = 29;
      break;
    case 30:
      char v6 = 30;
      break;
    case 31:
      char v6 = 31;
      break;
    case 32:
      char v6 = 32;
      break;
    case 33:
      char v6 = 33;
      break;
    case 34:
      char v6 = 34;
      break;
    case 35:
      char v6 = 35;
      break;
    default:
      char v6 = 36;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

uint64_t Theme.ModularColorID.rawValue.getter()
{
  uint64_t result = 0x41706F547466656CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x49706F547466656CLL;
      break;
    case 2:
    case 5:
    case 0xE:
    case 0x12:
    case 0x1D:
    case 0x21:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0xD000000000000012;
      break;
    case 4:
      uint64_t result = 0x706F547468676972;
      break;
    case 6:
      uint64_t result = 0xD000000000000011;
      break;
    case 7:
      uint64_t result = 0xD000000000000013;
      break;
    case 8:
      uint64_t result = 0x656E696C646572;
      break;
    case 9:
      uint64_t result = 0x43656E696C646572;
      break;
    case 0xA:
      uint64_t result = 0x50656E696C646572;
      break;
    case 0xB:
      uint64_t v2 = 0x54656772616CLL;
      goto LABEL_12;
    case 0xC:
      uint64_t v2 = 0x547468676972;
LABEL_12:
      uint64_t result = v2 & 0xFFFFFFFFFFFFLL | 0x7865000000000000;
      break;
    case 0xD:
      uint64_t result = 0x747865547466656CLL;
      break;
    case 0xF:
      uint64_t result = 0xD000000000000012;
      break;
    case 0x10:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x11:
      uint64_t result = 0xD000000000000011;
      break;
    case 0x13:
      uint64_t result = 0xD000000000000018;
      break;
    case 0x14:
      uint64_t result = 0xD000000000000012;
      break;
    case 0x15:
      uint64_t result = 0xD000000000000013;
      break;
    case 0x16:
      uint64_t result = 0xD000000000000015;
      break;
    case 0x17:
      uint64_t result = 0xD000000000000018;
      break;
    case 0x18:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 0x19:
      uint64_t result = 0xD00000000000001CLL;
      break;
    case 0x1A:
      uint64_t result = 0xD000000000000013;
      break;
    case 0x1B:
      uint64_t result = 0xD000000000000018;
      break;
    case 0x1C:
      uint64_t result = 0x6C6576654C776F6CLL;
      break;
    case 0x1E:
      uint64_t result = 0x69746341646C6F63;
      break;
    case 0x1F:
      uint64_t result = 0x63616E49646C6F63;
      break;
    case 0x20:
      uint64_t result = 0x6C61636974697263;
      break;
    case 0x22:
      uint64_t result = 0x6465746361646572;
      break;
    case 0x23:
      uint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249A048F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498F1838(*a1, *a2);
}

uint64_t sub_249A04900(uint64_t a1, uint64_t a2)
{
  return sub_249A05048(a1, a2, (void (*)(uint64_t))Theme.ModularColorID.rawValue.getter);
}

uint64_t sub_249A04918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A050D0(a1, a2, a3, (void (*)(void))Theme.ModularColorID.rawValue.getter);
}

uint64_t sub_249A04930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A05150(a1, a2, a3, (void (*)(uint64_t))Theme.ModularColorID.rawValue.getter);
}

CarPlayAssetUI::Theme::ModularColorID_optional sub_249A04948(Swift::String *a1)
{
  return Theme.ModularColorID.init(rawValue:)(*a1);
}

uint64_t sub_249A04954@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Theme.ModularColorID.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249A0497C()
{
  return sub_249AED3A8();
}

uint64_t sub_249A049DC()
{
  return sub_249AED348();
}

uint64_t sub_249A04A2C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_249A06E84();

  return MEMORY[0x270F9DB68](a1, a2, v4);
}

uint64_t sub_249A04A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_249A06E84();

  return MEMORY[0x270F9DB70](a1, a4, a2, a5, v10, a3);
}

void sub_249A04AFC(void *a1@<X8>)
{
  *a1 = &unk_26FDA08F0;
}

CarPlayAssetUI::Theme::MapsMediaColorID_optional __swiftcall Theme.MapsMediaColorID.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_249AEE2A8();
  result.value = swift_bridgeObjectRelease();
  char v5 = 0;
  char v6 = 8;
  switch(v3)
  {
    case 0:
      goto LABEL_10;
    case 1:
      char v5 = 1;
      goto LABEL_10;
    case 2:
      char v5 = 2;
      goto LABEL_10;
    case 3:
      char v5 = 3;
      goto LABEL_10;
    case 4:
      char v5 = 4;
      goto LABEL_10;
    case 5:
      char v5 = 5;
      goto LABEL_10;
    case 6:
      char v5 = 6;
      goto LABEL_10;
    case 7:
      char v5 = 7;
LABEL_10:
      char v6 = v5;
      break;
    case 8:
      break;
    case 9:
      char v6 = 9;
      break;
    case 10:
      char v6 = 10;
      break;
    case 11:
      char v6 = 11;
      break;
    case 12:
      char v6 = 12;
      break;
    case 13:
      char v6 = 13;
      break;
    case 14:
      char v6 = 14;
      break;
    case 15:
      char v6 = 15;
      break;
    case 16:
      char v6 = 16;
      break;
    case 17:
      char v6 = 17;
      break;
    case 18:
      char v6 = 18;
      break;
    case 19:
      char v6 = 19;
      break;
    case 20:
      char v6 = 20;
      break;
    case 21:
      char v6 = 21;
      break;
    case 22:
      char v6 = 22;
      break;
    case 23:
      char v6 = 23;
      break;
    case 24:
      char v6 = 24;
      break;
    case 25:
      char v6 = 25;
      break;
    default:
      char v6 = 26;
      break;
  }
  *uint64_t v2 = v6;
  return result;
}

unint64_t Theme.MapsMediaColorID.rawValue.getter()
{
  unint64_t result = 0x417972616D697270;
  switch(*v0)
  {
    case 1:
      unint64_t result = 5294388599723750000;
      break;
    case 2:
      unint64_t result = 0x656E696C646572;
      break;
    case 3:
      unint64_t result = 0x43656E696C646572;
      break;
    case 4:
      unint64_t result = 0x50656E696C646572;
      break;
    case 5:
      unint64_t result = 0x786554656772616CLL;
      break;
    case 6:
      unint64_t result = 0x746544656772616CLL;
      break;
    case 7:
      unint64_t result = 0x65546C6961746564;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000012;
      break;
    case 0xA:
      unint64_t result = 0xD000000000000017;
      break;
    case 0xB:
      unint64_t result = 0xD000000000000013;
      break;
    case 0xC:
      unint64_t result = 0xD000000000000015;
      break;
    case 0xD:
      unint64_t result = 0xD000000000000018;
      break;
    case 0xE:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 0xF:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 0x10:
      unint64_t result = 0xD000000000000013;
      break;
    case 0x11:
      unint64_t result = 0xD000000000000018;
      break;
    case 0x12:
      unint64_t result = 0x6C6576654C776F6CLL;
      break;
    case 0x13:
    case 0x17:
      unint64_t result = 0xD000000000000010;
      break;
    case 0x14:
      unint64_t result = 0x69746341646C6F63;
      break;
    case 0x15:
      unint64_t result = 0x63616E49646C6F63;
      break;
    case 0x16:
      unint64_t result = 0x6C61636974697263;
      break;
    case 0x18:
      unint64_t result = 0x6465746361646572;
      break;
    case 0x19:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249A05024(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2498F1820(*a1, *a2);
}

uint64_t sub_249A05030(uint64_t a1, uint64_t a2)
{
  return sub_249A05048(a1, a2, (void (*)(uint64_t))Theme.MapsMediaColorID.rawValue.getter);
}

uint64_t sub_249A05048(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = sub_249AEE338();
  a3(v4);
  sub_249AECF78();
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

uint64_t sub_249A050B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A050D0(a1, a2, a3, (void (*)(void))Theme.MapsMediaColorID.rawValue.getter);
}

uint64_t sub_249A050D0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_249AECF78();

  return swift_bridgeObjectRelease();
}

uint64_t sub_249A05138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A05150(a1, a2, a3, (void (*)(uint64_t))Theme.MapsMediaColorID.rawValue.getter);
}

uint64_t sub_249A05150(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v5 = sub_249AEE338();
  a4(v5);
  sub_249AECF78();
  swift_bridgeObjectRelease();
  return sub_249AEE388();
}

CarPlayAssetUI::Theme::MapsMediaColorID_optional sub_249A051BC(Swift::String *a1)
{
  return Theme.MapsMediaColorID.init(rawValue:)(*a1);
}

unint64_t sub_249A051C8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Theme.MapsMediaColorID.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_249A051F0()
{
  return sub_249AED3A8();
}

uint64_t sub_249A05250()
{
  return sub_249AED348();
}

uint64_t sub_249A052A0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_249A06E30();

  return MEMORY[0x270F9DB68](a1, a2, v4);
}

uint64_t sub_249A052F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_249A06E30();

  return MEMORY[0x270F9DB70](a1, a4, a2, a5, v10, a3);
}

void sub_249A05370(void *a1@<X8>)
{
  *a1 = &unk_26FDA0938;
}

uint64_t Theme.SpecialColorID.init(rawValue:)@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t Theme.SpecialColorID.rawValue.getter()
{
  return 0x7261656C63;
}

uint64_t sub_249A053EC()
{
  return sub_249AEE388();
}

uint64_t sub_249A0543C()
{
  return sub_249AECF78();
}

uint64_t sub_249A05450()
{
  return sub_249AEE388();
}

uint64_t sub_249A0549C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2 = sub_249AEDCF8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_249A054F0(void *a1@<X8>)
{
  *a1 = 0x7261656C63;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_249A05508()
{
  return sub_249AED3A8();
}

uint64_t sub_249A05568()
{
  return sub_249AED348();
}

uint64_t sub_249A055B8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_249A06DDC();

  return MEMORY[0x270F9DB68](a1, a2, v4);
}

uint64_t sub_249A0560C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_249A06DDC();

  return MEMORY[0x270F9DB70](a1, a4, a2, a5, v10, a3);
}

void sub_249A05688(void *a1@<X8>)
{
  *a1 = &unk_26FDA1500;
}

uint64_t static TaggedValue<>.externalColor.getter()
{
  return sub_249A0575C((uint64_t *)&off_2696E31B0, &qword_2696E31B8, (void (*)(uint64_t, void))sub_2498B9AA8);
}

uint64_t static TaggedValue<>.externalColor.setter(uint64_t a1, uint64_t a2)
{
  return sub_249A057E8(a1, a2, (uint64_t *)&off_2696E31B0, &qword_2696E31B8, (uint64_t (*)(uint64_t, uint64_t))sub_2498B9AB8);
}

uint64_t (*static TaggedValue<>.externalColor.modify())()
{
  return j__swift_endAccess;
}

uint64_t static TaggedValue<>.externalAllCases.getter()
{
  return sub_249A0575C((uint64_t *)&off_2696E31C0, &qword_2696E31C8, (void (*)(uint64_t, void))sub_24998A0B8);
}

uint64_t sub_249A0575C(uint64_t *a1, void *a2, void (*a3)(uint64_t, void))
{
  swift_beginAccess();
  uint64_t v6 = *a1;
  a3(v6, *a2);
  return v6;
}

uint64_t static TaggedValue<>.externalAllCases.setter(uint64_t a1, uint64_t a2)
{
  return sub_249A057E8(a1, a2, (uint64_t *)&off_2696E31C0, &qword_2696E31C8, (uint64_t (*)(uint64_t, uint64_t))sub_24998A0BC);
}

uint64_t sub_249A057E8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t v10 = *a3;
  uint64_t v11 = *a4;
  *a3 = a1;
  *a4 = a2;
  return a5(v10, v11);
}

uint64_t (*static TaggedValue<>.externalAllCases.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_249A058B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = swift_beginAccess();
  unint64_t v3 = (uint64_t (*)(uint64_t))off_2696E31C0;
  if (off_2696E31C0)
  {
    uint64_t v4 = swift_retain();
    uint64_t v5 = v3(v4);
    uint64_t result = sub_2498B9AB8((uint64_t)v3);
  }
  else
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
  }
  *a1 = v5;
  return result;
}

void sub_249A05944(void *a1, char a2, void *a3)
{
  if (!a1[2])
  {
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v42 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  uint64_t v8 = a1[6];
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)*a3;
  swift_bridgeObjectRetain();
  swift_retain();
  unint64_t v11 = sub_2498EF01C(v7, v6);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_2498E0184();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v21 = (uint64_t *)(v20[6] + 16 * v11);
    *uint64_t v21 = v7;
    v21[1] = v6;
    *(void *)(v20[7] + 8 * v11) = v8;
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v20[2] = v24;
    uint64_t v25 = v42 - 1;
    if (v42 == 1)
    {
LABEL_22:
      swift_bridgeObjectRelease_n();
      return;
    }
    char v26 = a1 + 9;
    while (1)
    {
      uint64_t v28 = *(v26 - 2);
      uint64_t v27 = *(v26 - 1);
      uint64_t v29 = *v26;
      unint64_t v30 = (void *)*a3;
      swift_bridgeObjectRetain();
      swift_retain();
      unint64_t v31 = sub_2498EF01C(v28, v27);
      uint64_t v33 = v30[2];
      BOOL v34 = (v32 & 1) == 0;
      BOOL v23 = __OFADD__(v33, v34);
      uint64_t v35 = v33 + v34;
      if (v23) {
        break;
      }
      char v36 = v32;
      if (v30[3] < v35)
      {
        sub_2498E4510(v35, 1);
        unint64_t v31 = sub_2498EF01C(v28, v27);
        if ((v36 & 1) != (v37 & 1)) {
          goto LABEL_25;
        }
      }
      if (v36) {
        goto LABEL_10;
      }
      char v38 = (void *)*a3;
      *(void *)(*a3 + 8 * (v31 >> 6) + 64) |= 1 << v31;
      uint64_t v39 = (uint64_t *)(v38[6] + 16 * v31);
      *uint64_t v39 = v28;
      v39[1] = v27;
      *(void *)(v38[7] + 8 * v31) = v29;
      uint64_t v40 = v38[2];
      BOOL v23 = __OFADD__(v40, 1);
      uint64_t v41 = v40 + 1;
      if (v23) {
        goto LABEL_24;
      }
      v38[2] = v41;
      v26 += 3;
      if (!--v25) {
        goto LABEL_22;
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_2498E4510(v14, a2 & 1);
  uint64_t v16 = sub_2498EF01C(v7, v6);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v18 = (void *)swift_allocError();
    swift_willThrow();
    id v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDEB8);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();

      return;
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_249AEE2D8();
  __break(1u);
LABEL_26:
  sub_249AEDA78();
  sub_249AED1E8();
  sub_249AEDC08();
  sub_249AED1E8();
  sub_249AEDC58();
  __break(1u);
}

uint64_t _s14CarPlayAssetUI5ThemeO7ColorIDO8allCasesSayAEGvgZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E32D8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AFF3D0;
  uint64_t v1 = qword_26FDA08B0;
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (qword_26FDA08B0)
  {
    uint64_t v51 = MEMORY[0x263F8EE78];
    sub_249A21F50(0, qword_26FDA08B0, 0);
    uint64_t v2 = v51;
    unint64_t v3 = *(void *)(v51 + 16);
    uint64_t v4 = 24 * v3;
    uint64_t v5 = &byte_26FDA08C0;
    do
    {
      unsigned int v7 = *v5++;
      uint64_t v6 = v7;
      uint64_t v52 = v2;
      unint64_t v8 = *(void *)(v2 + 24);
      unint64_t v9 = v3 + 1;
      if (v3 >= v8 >> 1)
      {
        sub_249A21F50(v8 > 1, v3 + 1, 1);
        uint64_t v2 = v52;
      }
      *(void *)(v2 + 16) = v9;
      uint64_t v10 = v2 + v4;
      *(void *)(v10 + 32) = v6;
      *(void *)(v10 + 40) = 0;
      *(unsigned char *)(v10 + 48) = 0;
      v4 += 24;
      unint64_t v3 = v9;
      --v1;
    }
    while (v1);
  }
  *(void *)(inited + 32) = v2;
  uint64_t v11 = qword_26FDA0900;
  uint64_t v12 = MEMORY[0x263F8EE78];
  if (qword_26FDA0900)
  {
    uint64_t v53 = MEMORY[0x263F8EE78];
    sub_249A21F50(0, qword_26FDA0900, 0);
    uint64_t v12 = v53;
    unint64_t v13 = *(void *)(v53 + 16);
    uint64_t v14 = 24 * v13;
    char v15 = &byte_26FDA0910;
    do
    {
      unsigned int v17 = *v15++;
      uint64_t v16 = v17;
      uint64_t v54 = v12;
      unint64_t v18 = *(void *)(v12 + 24);
      unint64_t v19 = v13 + 1;
      if (v13 >= v18 >> 1)
      {
        sub_249A21F50(v18 > 1, v13 + 1, 1);
        uint64_t v12 = v54;
      }
      *(void *)(v12 + 16) = v19;
      uint64_t v20 = v12 + v14;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = 0;
      *(unsigned char *)(v20 + 48) = 1;
      v14 += 24;
      unint64_t v13 = v19;
      --v11;
    }
    while (v11);
  }
  *(void *)(inited + 40) = v12;
  uint64_t v21 = qword_26FDA0948;
  uint64_t v22 = MEMORY[0x263F8EE78];
  if (qword_26FDA0948)
  {
    uint64_t v55 = MEMORY[0x263F8EE78];
    sub_249A21F50(0, qword_26FDA0948, 0);
    uint64_t v23 = v55;
    unint64_t v24 = *(void *)(v55 + 16);
    uint64_t v25 = 24 * v24;
    char v26 = &byte_26FDA0958;
    do
    {
      unsigned int v28 = *v26++;
      uint64_t v27 = v28;
      uint64_t v56 = v23;
      unint64_t v29 = *(void *)(v23 + 24);
      unint64_t v30 = v24 + 1;
      if (v24 >= v29 >> 1)
      {
        sub_249A21F50(v29 > 1, v24 + 1, 1);
        uint64_t v23 = v56;
      }
      *(void *)(v23 + 16) = v30;
      uint64_t v31 = v23 + v25;
      *(void *)(v31 + 32) = v27;
      *(void *)(v31 + 40) = 0;
      *(unsigned char *)(v31 + 48) = 2;
      v25 += 24;
      unint64_t v24 = v30;
      --v21;
    }
    while (v21);
  }
  else
  {
    uint64_t v23 = MEMORY[0x263F8EE78];
  }
  *(void *)(inited + 48) = v23;
  sub_249A21F50(0, 1, 0);
  uint64_t v32 = v22;
  unint64_t v34 = *(void *)(v22 + 16);
  unint64_t v33 = *(void *)(v22 + 24);
  if (v34 >= v33 >> 1)
  {
    sub_249A21F50(v33 > 1, v34 + 1, 1);
    uint64_t v32 = v22;
  }
  *(void *)(v32 + 16) = v34 + 1;
  uint64_t v35 = v32 + 24 * v34;
  *(void *)(v35 + 32) = 0;
  *(void *)(v35 + 40) = 0;
  *(unsigned char *)(v35 + 48) = 3;
  *(void *)(inited + 56) = v32;
  swift_beginAccess();
  char v36 = (uint64_t (*)(uint64_t))off_2696E31C0;
  uint64_t v37 = MEMORY[0x263F8EE78];
  if (off_2696E31C0)
  {
    uint64_t v38 = swift_retain();
    uint64_t v39 = v36(v38);
    sub_2498B9AB8((uint64_t)v36);
    int64_t v40 = *(void *)(v39 + 16);
    if (v40) {
      goto LABEL_22;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v41 = MEMORY[0x263F8EE78];
    goto LABEL_29;
  }
  uint64_t v39 = MEMORY[0x263F8EE78];
  int64_t v40 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v40) {
    goto LABEL_28;
  }
LABEL_22:
  uint64_t v50 = inited;
  sub_249A21F50(0, v40, 0);
  uint64_t v41 = v37;
  uint64_t v42 = (uint64_t *)(v39 + 40);
  do
  {
    uint64_t v43 = *(v42 - 1);
    uint64_t v44 = *v42;
    unint64_t v45 = *(void *)(v41 + 16);
    unint64_t v46 = *(void *)(v41 + 24);
    swift_bridgeObjectRetain();
    if (v45 >= v46 >> 1) {
      sub_249A21F50(v46 > 1, v45 + 1, 1);
    }
    v42 += 2;
    *(void *)(v41 + 16) = v45 + 1;
    uint64_t v47 = v41 + 24 * v45;
    *(void *)(v47 + 32) = v43;
    *(void *)(v47 + 40) = v44;
    *(unsigned char *)(v47 + 48) = 4;
    --v40;
  }
  while (v40);
  swift_bridgeObjectRelease();
  uint64_t inited = v50;
LABEL_29:
  *(void *)(inited + 64) = v41;
  uint64_t v48 = sub_249A021C4(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3218);
  swift_arrayDestroy();
  return v48;
}

unint64_t sub_249A060F8()
{
  unint64_t result = qword_2696E31D8;
  if (!qword_2696E31D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E31D8);
  }
  return result;
}

uint64_t sub_249A0614C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2696E31E0);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_249A061C8(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_249AED2B8();
  }
  __break(1u);
  return result;
}

unint64_t sub_249A06214()
{
  unint64_t result = qword_2696E3200;
  if (!qword_2696E3200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3200);
  }
  return result;
}

unint64_t sub_249A0626C()
{
  unint64_t result = qword_2696E3208;
  if (!qword_2696E3208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3208);
  }
  return result;
}

uint64_t sub_249A062C0()
{
  return sub_24997F648(&qword_2696E3210, &qword_2696E3218);
}

unint64_t sub_249A062EC()
{
  unint64_t result = qword_2696E3220;
  if (!qword_2696E3220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3220);
  }
  return result;
}

uint64_t sub_249A06340()
{
  return sub_24997F648(&qword_2696E3228, &qword_2696E3230);
}

unint64_t sub_249A0636C()
{
  unint64_t result = qword_2696E3238;
  if (!qword_2696E3238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3238);
  }
  return result;
}

uint64_t sub_249A063C0()
{
  return sub_24997F648(&qword_2696E3240, &qword_2696E3248);
}

unint64_t sub_249A063EC()
{
  unint64_t result = qword_2696E3250;
  if (!qword_2696E3250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3250);
  }
  return result;
}

uint64_t sub_249A06440()
{
  return sub_24997F648(&qword_2696E3258, &qword_2696E3260);
}

unint64_t sub_249A0646C()
{
  unint64_t result = qword_2696E3268;
  if (!qword_2696E3268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3268);
  }
  return result;
}

uint64_t sub_249A064C0()
{
  return sub_24997F648(&qword_2696E3270, &qword_2696E3278);
}

uint64_t sub_249A064E8()
{
  return sub_24997F648(&qword_2696E3280, &qword_2696E3288);
}

ValueMetadata *type metadata accessor for Theme()
{
  return &type metadata for Theme;
}

uint64_t dispatch thunk of Theming.defaultWallpaperID(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of Theming.defaultPalette(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of Theming.palettes(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

ValueMetadata *type metadata accessor for GradientColor()
{
  return &type metadata for GradientColor;
}

uint64_t destroy for Theme.ColorID(uint64_t a1)
{
  return sub_24988D788(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s14CarPlayAssetUI5ThemeO7ColorIDOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24988D770(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Theme.ColorID(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_24988D770(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24988D788(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Theme.ColorID(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24988D788(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Theme.ColorID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Theme.ColorID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_249A066F8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Theme.ColorID()
{
  return &type metadata for Theme.ColorID;
}

uint64_t getEnumTagSinglePayload for Theme.RadialColorID(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xD8) {
    goto LABEL_17;
  }
  if (a2 + 40 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 40) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 40;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 40;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 40;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x29;
  int v8 = v6 - 41;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Theme.RadialColorID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 40 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 40) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xD8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xD7)
  {
    unsigned int v6 = ((a2 - 216) >> 8) + 1;
    *unint64_t result = a2 + 40;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A0686CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 40;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.RadialColorID()
{
  return &type metadata for Theme.RadialColorID;
}

uint64_t getEnumTagSinglePayload for Theme.ModularColorID(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDD) {
    goto LABEL_17;
  }
  if (a2 + 35 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 35) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 35;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 35;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 35;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x24;
  int v8 = v6 - 36;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Theme.ModularColorID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 35 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 35) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDC)
  {
    unsigned int v6 = ((a2 - 221) >> 8) + 1;
    *unint64_t result = a2 + 35;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A06A00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 35;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.ModularColorID()
{
  return &type metadata for Theme.ModularColorID;
}

uint64_t getEnumTagSinglePayload for Theme.MapsMediaColorID(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Theme.MapsMediaColorID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *unint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A06B94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Theme.MapsMediaColorID()
{
  return &type metadata for Theme.MapsMediaColorID;
}

ValueMetadata *type metadata accessor for Theme.SpecialColorID()
{
  return &type metadata for Theme.SpecialColorID;
}

ValueMetadata *type metadata accessor for Theme.PartnerColorIDTag()
{
  return &type metadata for Theme.PartnerColorIDTag;
}

ValueMetadata *type metadata accessor for ThemeError()
{
  return &type metadata for ThemeError;
}

unsigned char *_s14CarPlayAssetUI5ThemeO14SpecialColorIDOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249A06C9CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GradientColor.CodingKeys()
{
  return &type metadata for GradientColor.CodingKeys;
}

unint64_t sub_249A06CD8()
{
  unint64_t result = qword_2696E3290;
  if (!qword_2696E3290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3290);
  }
  return result;
}

unint64_t sub_249A06D30()
{
  unint64_t result = qword_2696E3298;
  if (!qword_2696E3298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3298);
  }
  return result;
}

unint64_t sub_249A06D88()
{
  unint64_t result = qword_2696E32A0;
  if (!qword_2696E32A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E32A0);
  }
  return result;
}

unint64_t sub_249A06DDC()
{
  unint64_t result = qword_2696E32A8;
  if (!qword_2696E32A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E32A8);
  }
  return result;
}

unint64_t sub_249A06E30()
{
  unint64_t result = qword_2696E32B0;
  if (!qword_2696E32B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E32B0);
  }
  return result;
}

unint64_t sub_249A06E84()
{
  unint64_t result = qword_2696E32B8;
  if (!qword_2696E32B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E32B8);
  }
  return result;
}

unint64_t sub_249A06ED8()
{
  unint64_t result = qword_2696E32C0;
  if (!qword_2696E32C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E32C0);
  }
  return result;
}

unint64_t sub_249A06F2C()
{
  unint64_t result = qword_2696E32C8;
  if (!qword_2696E32C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E32C8);
  }
  return result;
}

uint64_t sub_249A06F80@<X0>(void *__src@<X0>, void *a2@<X8>)
{
  memcpy(__dst, __src, 0x1E0uLL);
  memcpy(v35, __src, sizeof(v35));
  uint64_t v5 = Display.assets.getter();
  sub_2498824DC((uint64_t)__dst);
  uint64_t v6 = sub_249A07A64(v5);
  uint64_t v8 = v7;
  uint64_t result = swift_bridgeObjectRelease();
  if (v2) {
    return result;
  }
  uint64_t v10 = (void *)sub_2498ECFB8(MEMORY[0x263F8EE78]);
  uint64_t v11 = *(void *)(v8 + 16);
  if (!v11)
  {
LABEL_18:
    uint64_t result = swift_bridgeObjectRelease();
    *a2 = v10;
    a2[1] = v6;
    return result;
  }
  uint64_t v32 = v6;
  unint64_t v33 = a2;
  uint64_t v12 = v8 + 32;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_249882C34(v12, (uint64_t)v35);
    uint64_t v14 = v35[3];
    uint64_t v15 = v35[4];
    __swift_project_boxed_opaque_existential_2Tm(v35, v35[3]);
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
    uint64_t v18 = v17;
    sub_249882C34((uint64_t)v35, (uint64_t)v34);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = v10;
    unint64_t v21 = sub_2498EF01C(v16, v18);
    uint64_t v22 = v10[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      break;
    }
    char v25 = v20;
    if (v10[3] >= v24)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v10 = v37;
        if (v20) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_2498DF2EC();
        uint64_t v10 = v37;
        if (v25) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_2498E28F8(v24, isUniquelyReferenced_nonNull_native);
      uint64_t v26 = sub_2498EF01C(v16, v18);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_22;
      }
      unint64_t v21 = v26;
      uint64_t v10 = v37;
      if (v25)
      {
LABEL_4:
        uint64_t v13 = v10[7] + 40 * v21;
        __swift_destroy_boxed_opaque_existential_2Tm(v13);
        sub_249882BCC(v34, v13);
        goto LABEL_5;
      }
    }
    v10[(v21 >> 6) + 8] |= 1 << v21;
    unsigned int v28 = (uint64_t *)(v10[6] + 16 * v21);
    *unsigned int v28 = v16;
    v28[1] = v18;
    sub_249882BCC(v34, v10[7] + 40 * v21);
    uint64_t v29 = v10[2];
    BOOL v30 = __OFADD__(v29, 1);
    uint64_t v31 = v29 + 1;
    if (v30) {
      goto LABEL_21;
    }
    void v10[2] = v31;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v35);
    v12 += 40;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      a2 = v33;
      uint64_t v6 = v32;
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

uint64_t sub_249A07228(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    int v3 = v1;
    unsigned int v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v6 = *(v4 - 1);
      uint64_t v5 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v7 = sub_2498EF01C(v6, v5);
      char v9 = v8;
      swift_bridgeObjectRelease();
      if (v9)
      {
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v11 = v3[1];
        *(void *)&v18[0] = v11;
        v3[1] = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_2498DF4D8();
          uint64_t v11 = *(void *)&v18[0];
        }
        swift_bridgeObjectRelease();
        sub_24992A9DC(v7, v11);
        v3[1] = v11;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_2498EF01C(v6, v5);
      char v14 = v13;
      swift_bridgeObjectRelease();
      if (v14)
      {
        char v15 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v16 = *v3;
        uint64_t v17 = *v3;
        *int v3 = 0x8000000000000000;
        if ((v15 & 1) == 0)
        {
          sub_2498DF2EC();
          uint64_t v16 = v17;
        }
        swift_bridgeObjectRelease();
        sub_249882BCC((long long *)(*(void *)(v16 + 56) + 40 * v12), (uint64_t)v18);
        sub_24992A7F0(v12, v16);
        *int v3 = v16;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v19 = 0;
        memset(v18, 0, sizeof(v18));
      }
      v4 += 2;
      swift_bridgeObjectRelease();
      sub_249882B6C((uint64_t)v18);
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t AssetManifestEntry.path.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AssetManifestEntry.path.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AssetManifestEntry.path.modify())()
{
  return nullsub_1;
}

void AssetManifestEntry.assetType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

unsigned char *AssetManifestEntry.assetType.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 16) = *result;
  return result;
}

uint64_t (*AssetManifestEntry.assetType.modify())()
{
  return nullsub_1;
}

void AssetManifestEntry.destination.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
}

void *AssetManifestEntry.destination.setter(void *result)
{
  *(void *)(v1 + 24) = *result;
  return result;
}

uint64_t (*AssetManifestEntry.destination.modify())()
{
  return nullsub_1;
}

uint64_t sub_249A074EC()
{
  uint64_t v1 = 0x7079547465737361;
  if (*v0 != 1) {
    uint64_t v1 = 0x74616E6974736564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 1752457584;
  }
}

uint64_t sub_249A0754C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A08D68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A07574(uint64_t a1)
{
  unint64_t v2 = sub_249A088F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A075B0(uint64_t a1)
{
  unint64_t v2 = sub_249A088F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t AssetManifestEntry.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E32E0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v15 = *(unsigned __int8 *)(v1 + 16);
  v14[0] = *(void *)(v1 + 24);
  uint64_t v8 = a1[3];
  char v9 = a1;
  uint64_t v11 = v10;
  __swift_project_boxed_opaque_existential_2Tm(v9, v8);
  sub_249A088F8();
  sub_249AEE468();
  char v19 = 0;
  sub_249AEDEB8();
  if (!v2)
  {
    uint64_t v12 = v14[0];
    char v18 = v15;
    char v17 = 1;
    sub_249A0894C();
    sub_249AEDF08();
    v14[1] = v12;
    char v16 = 2;
    sub_249964930();
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

uint64_t AssetManifestEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E32F8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A088F8();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  char v19 = 0;
  uint64_t v9 = sub_249AEDDB8();
  uint64_t v11 = v10;
  char v17 = 1;
  sub_249A089A0();
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  int v15 = v18;
  char v16 = 2;
  sub_2499649D8();
  sub_249AEDE08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = v14[1];
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v13;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_249A07A30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AssetManifestEntry.init(from:)(a1, a2);
}

uint64_t sub_249A07A48(void *a1)
{
  return AssetManifestEntry.encode(to:)(a1);
}

uint64_t sub_249A07A64(uint64_t a1)
{
  void (*v24)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  unint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  void *v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void *v76;
  id v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t result;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (**v117)(char *, uint64_t);
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  long long v126;
  long long v127;
  uint64_t v128;
  uint64_t v129;
  unint64_t v130;
  uint64_t v131;
  unint64_t v132;
  void v133[3];
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;

  unint64_t v119 = sub_249AEB808();
  uint64_t v2 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  id v118 = (char *)&v112 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_249AEB4D8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v112 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_249AEB4E8();
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12)
  {
    int v15 = (void *)MEMORY[0x263F8EE80];
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v101 = swift_bridgeObjectRetain();
    sub_2498E90C8(v101);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return (uint64_t)v15;
  }
  long long v112 = v6;
  uint64_t v113 = v11;
  uint64_t v114 = v9;
  uint64_t v115 = v8;
  uint64_t v13 = a1 + 32;
  uint64_t v117 = (void (**)(char *, uint64_t))(v2 + 8);
  int v116 = a1;
  swift_bridgeObjectRetain();
  uint64_t v14 = MEMORY[0x263F8EE80];
  int v15 = (void *)MEMORY[0x263F8EE80];
  while (1)
  {
    uint64_t v124 = v13;
    sub_249882C34(v13, (uint64_t)v133);
    uint64_t v32 = v134;
    unint64_t v33 = v135;
    __swift_project_boxed_opaque_existential_2Tm(v133, v134);
    unint64_t v34 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v32, v33);
    char v36 = v15[2];
    long long v136 = v14;
    long long v125 = v12;
    if (!v36 || (uint64_t v37 = sub_2498EF01C(v34, v35), (v38 & 1) == 0))
    {
      swift_bridgeObjectRelease();
      char v59 = v134;
      char v60 = v135;
      __swift_project_boxed_opaque_existential_2Tm(v133, v134);
      *(void *)&uint64_t v126 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 32))(v59, v60);
      *((void *)&v126 + 1) = v61;
      uint64_t v131 = 47;
      long long v132 = 0xE100000000000000;
      char v129 = 95;
      id v130 = 0xE100000000000000;
      sub_24988CE30();
      char v62 = sub_249AED948();
      uint64_t v64 = HIBYTE(v63) & 0xF;
      if ((v63 & 0x2000000000000000) == 0) {
        uint64_t v64 = v62 & 0xFFFFFFFFFFFFLL;
      }
      if (!v64)
      {
        swift_bridgeObjectRelease();
        sub_249AEB4C8();
        sub_2498F0724(MEMORY[0x263F8EE78]);
        sub_249964830();
        CGRect v102 = v113;
        uint64_t v103 = v115;
        sub_249AEB708();
        char v104 = sub_249AEB458();
        (*(void (**)(char *, uint64_t))(v114 + 8))(v102, v103);
        unint64_t v120 = v104;
        swift_willThrow();
        goto LABEL_47;
      }
      swift_bridgeObjectRelease();
      char v65 = v134;
      uint64_t v66 = v135;
      __swift_project_boxed_opaque_existential_2Tm(v133, v134);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v66 + 16))(&v131, v65, v66);
      *(void *)&uint64_t v126 = 0;
      *((void *)&v126 + 1) = 0xE000000000000000;
      sub_249AED1E8();
      swift_bridgeObjectRelease();
      sub_249AED1E8();
      sub_249AED1E8();
      uint64_t v67 = *((void *)&v126 + 1);
      char v68 = v126;
      if (*(void *)(v14 + 16))
      {
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_2498EF01C(v68, v67);
        if (v70)
        {
          sub_249882C34(*(void *)(v14 + 56) + 40 * v69, (uint64_t)&v126);
        }
        else
        {
          id v128 = 0;
          uint64_t v126 = 0u;
          id v127 = 0u;
        }
        swift_bridgeObjectRelease();
        if (*((void *)&v127 + 1))
        {
          swift_bridgeObjectRelease();
          sub_249882B6C((uint64_t)&v126);
          char v71 = (void *)sub_249AED0A8();
          char v72 = objc_msgSend(v71, sel_stringByDeletingPathExtension);

          char v73 = sub_249AED0D8();
          int v75 = v74;

          uint64_t v76 = (void *)sub_249AED0A8();
          swift_bridgeObjectRelease();
          uint64_t v77 = objc_msgSend(v76, sel_pathExtension);

          sub_249AED0D8();
          *(void *)&uint64_t v126 = v73;
          *((void *)&v126 + 1) = v75;
          sub_249AED1E8();
          uint64_t v78 = v134;
          char v79 = v135;
          __swift_project_boxed_opaque_existential_2Tm(v133, v134);
          (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v78, v79);
          sub_249AED1E8();
          swift_bridgeObjectRelease();
          sub_249AED1E8();
          sub_249AED1E8();
          swift_bridgeObjectRelease();
          uint64_t v131 = 47;
          long long v132 = 0xE100000000000000;
          char v129 = 95;
          id v130 = 0xE100000000000000;
          long long v80 = sub_249AED948();
          uint64_t v82 = HIBYTE(v81) & 0xF;
          if ((v81 & 0x2000000000000000) == 0) {
            uint64_t v82 = v80 & 0xFFFFFFFFFFFFLL;
          }
          if (!v82)
          {
            swift_bridgeObjectRelease();
            sub_249AEB4C8();
            sub_2498F0724(MEMORY[0x263F8EE78]);
            sub_249964830();
            CGRect v105 = v113;
            uint64_t v106 = v115;
            sub_249AEB708();
            id v107 = sub_249AEB458();
            (*(void (**)(char *, uint64_t))(v114 + 8))(v105, v106);
            unint64_t v120 = v107;
            swift_willThrow();
LABEL_47:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_48:
            __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v133);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            return (uint64_t)v15;
          }
          swift_bridgeObjectRelease();
          uint64_t v83 = v134;
          char v84 = v135;
          __swift_project_boxed_opaque_existential_2Tm(v133, v134);
          (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v84 + 16))(&v131, v83, v84);
          *(void *)&uint64_t v126 = 0;
          *((void *)&v126 + 1) = 0xE000000000000000;
          sub_249AED1E8();
          swift_bridgeObjectRelease();
          sub_249AED1E8();
          sub_249AED1E8();
          swift_bridgeObjectRelease();
          uint64_t v67 = *((void *)&v126 + 1);
          char v68 = v126;
          if (*(void *)(v14 + 16))
          {
            swift_bridgeObjectRetain();
            uint64_t v85 = sub_2498EF01C(v68, v67);
            if (v86)
            {
              sub_249882C34(*(void *)(v14 + 56) + 40 * v85, (uint64_t)&v126);
            }
            else
            {
              id v128 = 0;
              uint64_t v126 = 0u;
              id v127 = 0u;
            }
            swift_bridgeObjectRelease();
            if (!*((void *)&v127 + 1)) {
              goto LABEL_41;
            }
            swift_bridgeObjectRelease();
            sub_249882B6C((uint64_t)&v126);
            uint64_t v96 = v118;
            sub_249AEB7F8();
            sub_249AEB7D8();
            (*v117)(v96, v119);
            char v97 = v134;
            uint64_t v98 = v135;
            __swift_project_boxed_opaque_existential_2Tm(v133, v134);
            (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v98 + 16))(&v131, v97, v98);
            *(void *)&uint64_t v126 = 0;
            *((void *)&v126 + 1) = 0xE000000000000000;
            sub_249AED1E8();
            swift_bridgeObjectRelease();
            sub_249AED1E8();
            sub_249AED1E8();
            swift_bridgeObjectRelease();
            uint64_t v67 = *((void *)&v126 + 1);
            char v68 = v126;
            if (*(void *)(v14 + 16))
            {
              swift_bridgeObjectRetain();
              char v99 = sub_2498EF01C(v68, v67);
              if (v100)
              {
                sub_249882C34(*(void *)(v14 + 56) + 40 * v99, (uint64_t)&v126);
              }
              else
              {
                id v128 = 0;
                uint64_t v126 = 0u;
                id v127 = 0u;
              }
              swift_bridgeObjectRelease();
              if (*((void *)&v127 + 1))
              {
                swift_bridgeObjectRelease();
                sub_249882B6C((uint64_t)&v126);
                swift_bridgeObjectRelease();
                sub_249AEB4B8();
                sub_2498F0724(MEMORY[0x263F8EE78]);
                sub_249964830();
                id v109 = v113;
                uint64_t v110 = v115;
                sub_249AEB708();
                uint64_t v111 = sub_249AEB458();
                (*(void (**)(char *, uint64_t))(v114 + 8))(v109, v110);
                unint64_t v120 = v111;
                swift_willThrow();
                goto LABEL_48;
              }
              goto LABEL_41;
            }
          }
          id v128 = 0;
          uint64_t v126 = 0u;
          id v127 = 0u;
LABEL_41:
          char v16 = v15;
          goto LABEL_5;
        }
      }
      else
      {
        id v128 = 0;
        uint64_t v126 = 0u;
        id v127 = 0u;
      }
      char v16 = v15;
      swift_bridgeObjectRelease();
LABEL_5:
      sub_249882B6C((uint64_t)&v126);
      uint64_t v17 = v134;
      uint64_t v18 = v135;
      __swift_project_boxed_opaque_existential_2Tm(v133, v134);
      uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
      uint64_t v21 = v20;
      uint64_t v22 = v134;
      uint64_t v23 = v135;
      __swift_project_boxed_opaque_existential_2Tm(v133, v134);
      uint64_t v24 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v23 + 16);
      swift_bridgeObjectRetain();
      v24(&v131, v22, v23);
      LOBYTE(v22) = v131;
      char v25 = v134;
      uint64_t v26 = v135;
      __swift_project_boxed_opaque_existential_2Tm(v133, v134);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v26 + 24))(&v126, v25, v26);
      char v27 = v126;
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&uint64_t v126 = v16;
      sub_2498835F4(v68, v67, v22, v27, v19, v21, isUniquelyReferenced_nonNull_native);
      int v15 = (void *)v126;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_249882C34((uint64_t)v133, (uint64_t)&v126);
      uint64_t v29 = v136;
      BOOL v30 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v131 = v29;
      sub_24988349C(&v126, v68, v67, v30);
      uint64_t v14 = v131;
      goto LABEL_6;
    }
    uint64_t v39 = v15[7] + 32 * v37;
    int64_t v40 = *(void *)v39;
    uint64_t v121 = *(void *)(v39 + 8);
    uint64_t v122 = v40;
    uint64_t v123 = *(unsigned __int8 *)(v39 + 16);
    uint64_t v41 = *(void *)(v39 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v42 = v134;
    uint64_t v43 = v135;
    __swift_project_boxed_opaque_existential_2Tm(v133, v134);
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v43 + 24))(&v126, v42, v43);
    uint64_t v44 = v126;
    unint64_t v45 = v134;
    unint64_t v46 = v135;
    __swift_project_boxed_opaque_existential_2Tm(v133, v134);
    uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 8))(v45, v46);
    uint64_t v49 = v48;
    uint64_t v50 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&uint64_t v126 = v15;
    uint64_t v52 = sub_2498EF01C(v47, v49);
    uint64_t v53 = v15[2];
    uint64_t v54 = (v51 & 1) == 0;
    uint64_t v55 = v53 + v54;
    if (__OFADD__(v53, v54)) {
      break;
    }
    uint64_t v56 = v51;
    if (v15[3] >= v55)
    {
      if ((v50 & 1) == 0) {
        sub_2498DF4D8();
      }
    }
    else
    {
      sub_2498E2C20(v55, v50);
      char v57 = sub_2498EF01C(v47, v49);
      if ((v56 & 1) != (v58 & 1)) {
        goto LABEL_53;
      }
      uint64_t v52 = v57;
    }
    uint64_t v87 = v44 | v41;
    int v15 = (void *)v126;
    if (v56)
    {
      uint64_t v88 = *(void *)(v126 + 56) + 32 * v52;
      swift_bridgeObjectRelease();
      char v89 = v121;
      *(void *)uint64_t v88 = v122;
      *(void *)(v88 + 8) = v89;
      *(unsigned char *)(v88 + 16) = v123;
      *(void *)(v88 + 24) = v87;
      uint64_t v14 = v136;
    }
    else
    {
      *(void *)(v126 + 8 * (v52 >> 6) + 64) |= 1 << v52;
      uint64_t v90 = (uint64_t *)(v15[6] + 16 * v52);
      *uint64_t v90 = v47;
      v90[1] = v49;
      uint64_t v91 = v15[7] + 32 * v52;
      uint64_t v92 = v121;
      *(void *)uint64_t v91 = v122;
      *(void *)(v91 + 8) = v92;
      *(unsigned char *)(v91 + 16) = v123;
      *(void *)(v91 + 24) = v87;
      uint64_t v93 = v15[2];
      char v94 = __OFADD__(v93, 1);
      uint64_t v95 = v93 + 1;
      uint64_t v14 = v136;
      if (v94) {
        goto LABEL_52;
      }
      _OWORD v15[2] = v95;
      swift_bridgeObjectRetain();
    }
LABEL_6:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v31 = v125;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v133);
    uint64_t v13 = v124 + 40;
    uint64_t v12 = v31 - 1;
    if (!v12)
    {
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  uint64_t result = sub_249AEE2D8();
  __break(1u);
  return result;
}

BOOL _s14CarPlayAssetUI0C13ManifestEntryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v6 || (char v7 = sub_249AEE0D8(), result = 0, (v7 & 1) != 0))
  {
    if (v2) {
      uint64_t v9 = 1953394534;
    }
    else {
      uint64_t v9 = 0x6567616D69;
    }
    if (v2) {
      unint64_t v10 = 0xE400000000000000;
    }
    else {
      unint64_t v10 = 0xE500000000000000;
    }
    if (v4) {
      uint64_t v11 = 1953394534;
    }
    else {
      uint64_t v11 = 0x6567616D69;
    }
    if (v4) {
      unint64_t v12 = 0xE400000000000000;
    }
    else {
      unint64_t v12 = 0xE500000000000000;
    }
    if (v9 == v11 && v10 == v12)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v14 = sub_249AEE0D8();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v14 & 1) == 0) {
        return result;
      }
    }
    return v3 == v5;
  }
  return result;
}

unint64_t sub_249A088F8()
{
  unint64_t result = qword_2696E32E8;
  if (!qword_2696E32E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E32E8);
  }
  return result;
}

unint64_t sub_249A0894C()
{
  unint64_t result = qword_2696E32F0;
  if (!qword_2696E32F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E32F0);
  }
  return result;
}

unint64_t sub_249A089A0()
{
  unint64_t result = qword_2696E3300;
  if (!qword_2696E3300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3300);
  }
  return result;
}

uint64_t initializeWithCopy for AssetManifestEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AssetManifestEntry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for AssetManifestEntry(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for AssetManifestEntry()
{
  return &type metadata for AssetManifestEntry;
}

void *assignWithCopy for AssetManifest(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AssetManifest()
{
  return &type metadata for AssetManifest;
}

unsigned char *storeEnumTagSinglePayload for AssetManifestEntry.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x249A08C28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AssetManifestEntry.CodingKeys()
{
  return &type metadata for AssetManifestEntry.CodingKeys;
}

unint64_t sub_249A08C64()
{
  unint64_t result = qword_2696E3308;
  if (!qword_2696E3308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3308);
  }
  return result;
}

unint64_t sub_249A08CBC()
{
  unint64_t result = qword_2696E3310;
  if (!qword_2696E3310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3310);
  }
  return result;
}

unint64_t sub_249A08D14()
{
  unint64_t result = qword_2696E3318;
  if (!qword_2696E3318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3318);
  }
  return result;
}

uint64_t sub_249A08D68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1752457584 && a2 == 0xE400000000000000;
  if (v2 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079547465737361 && a2 == 0xE900000000000065 || (sub_249AEE0D8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74616E6974736564 && a2 == 0xEB000000006E6F69)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t static DecodableDefault.== infix(_:_:)()
{
  return sub_249AED088() & 1;
}

uint64_t DecodableNil.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_249AED8D8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DecodableNil.wrappedValue.setter(uint64_t a1)
{
  uint64_t v3 = sub_249AED8D8();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t (*DecodableNil.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t DecodableNil.init()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))v6)((void *)(a1 - 8), a2, 1, 1, a1);
  uint64_t v4 = sub_249AED8D8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a2, v4);

  return v6(a2, 1, 1, a1);
}

uint64_t DecodableNil.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, 1, 1, a2);
  uint64_t v5 = sub_249AED8D8();
  char v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);

  return v6(a3, a1, v5);
}

uint64_t DecodableNil.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v27 = a6;
  uint64_t v11 = sub_249AED8D8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v28 = v11;
  uint64_t v29 = v12;
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)v26 - v13;
  v33[0] = a2;
  v33[1] = a3;
  v26[2] = a3;
  v33[2] = a4;
  uint64_t v34 = a5;
  uint64_t v35 = type metadata accessor for DecodableNil();
  uint64_t v32 = *(void *)(v35 - 8);
  __n128 v15 = MEMORY[0x270FA5388](v35);
  uint64_t v17 = (char *)v26 - v16;
  uint64_t v18 = *(void *)(a2 - 8);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v18 + 56);
  uint64_t v20 = v18 + 56;
  v19((char *)v26 - v16, 1, 1, a2, v15);
  uint64_t v21 = a1[3];
  uint64_t v31 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v21);
  uint64_t v22 = v30;
  sub_249AEE418();
  if (v22)
  {
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v31);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v17, v35);
  }
  else
  {
    v26[1] = v20;
    BOOL v30 = v19;
    __swift_project_boxed_opaque_existential_2Tm(v33, v34);
    if (sub_249AEE138())
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v28);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v30)(v17, 1, 1, a2);
    }
    else
    {
      __swift_project_boxed_opaque_existential_2Tm(v33, v34);
      sub_249AEE128();
      ((void (*)(char *, void, uint64_t, uint64_t))v30)(v14, 0, 1, a2);
      (*(void (**)(char *, char *, uint64_t))(v29 + 40))(v17, v14, v28);
    }
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v33);
    uint64_t v24 = v32;
    uint64_t v25 = v35;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v27, v17, v35);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v31);
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v17, v25);
  }
}

uint64_t type metadata accessor for DecodableNil()
{
  return swift_getGenericMetadata();
}

uint64_t DecodableNil.hash(into:)()
{
  sub_249AED8D8();

  return sub_249AED8E8();
}

BOOL static DecodableNil.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v37 = a6;
  uint64_t v40 = a2;
  uint64_t v42 = a3;
  uint64_t v7 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  char v36 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_249AED8D8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v38 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v41 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v35 - v17;
  __n128 v20 = MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v35 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16);
  v23((char *)&v35 - v21, a1, v9, v20);
  ((void (*)(char *, uint64_t, uint64_t))v23)(v18, v40, v9);
  uint64_t v39 = TupleTypeMetadata2;
  uint64_t v24 = &v12[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(char *, char *, uint64_t))v23)(v12, v22, v9);
  ((void (*)(char *, char *, uint64_t))v23)(v24, v18, v9);
  uint64_t v40 = v7;
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v25(v12, 1, v42) == 1)
  {
    uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
    v26(v18, v9);
    v26(v22, v9);
    if (v25(v24, 1, v42) == 1)
    {
      v26(v12, v9);
      return 1;
    }
    goto LABEL_6;
  }
  uint64_t v35 = v13;
  ((void (*)(char *, char *, uint64_t))v23)(v41, v12, v9);
  uint64_t v27 = v42;
  if (v25(v24, 1, v42) == 1)
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v35 + 8);
    v28(v18, v9);
    v28(v22, v9);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v27);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v39);
    return 0;
  }
  uint64_t v29 = v40;
  BOOL v30 = v36;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v36, v24, v27);
  uint64_t v31 = v41;
  LODWORD(v39) = sub_249AED088();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v29 + 8);
  v32(v30, v27);
  unint64_t v33 = *(void (**)(char *, uint64_t))(v35 + 8);
  v33(v18, v9);
  v33(v22, v9);
  v32(v31, v27);
  v33(v12, v9);
  return (v39 & 1) != 0;
}

uint64_t sub_249A099FC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x5664657070617277 && a2 == 0xEC00000065756C61)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_249AEE0D8();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_249A09A9C()
{
  return 0x5664657070617277;
}

uint64_t sub_249A09ABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A099FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249A09AF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249885414();
  *a1 = result & 1;
  return result;
}

uint64_t sub_249A09B2C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_249A09B80(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t DecodableNil.encode(to:)(void *a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 32);
  v9[0] = *(_OWORD *)(a2 + 16);
  v9[1] = v3;
  void v9[2] = v9[0];
  v9[3] = v3;
  type metadata accessor for DecodableNil.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_249AEDF18();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - v6;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE468();
  sub_249AEDEA8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t DecodableNil.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_249A09DA8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return DecodableNil.init(from:)(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_249A09DCC(void *a1, uint64_t a2)
{
  return DecodableNil.encode(to:)(a1, a2);
}

uint64_t sub_249A09DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A0A674(a1, a2, a3, (void (*)(unsigned char *, uint64_t))DecodableNil.hash(into:));
}

BOOL sub_249A09E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return static DecodableNil.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), a4, a5, *(void *)(a3 + 40));
}

uint64_t DecodableDefault.wrappedValue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t DecodableDefault.wrappedValue.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);

  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t (*DecodableDefault.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t DecodableDefault.init()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t DecodableDefault.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v5(a2, a1, AssociatedTypeWitness);
}

uint64_t DecodableDefault.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v22 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t v9 = type metadata accessor for DecodableDefault();
  uint64_t v24 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v18 - v10;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  uint64_t v12 = v27;
  sub_249AEE418();
  if (v12)
  {
    uint64_t v13 = (uint64_t)a1;
  }
  else
  {
    uint64_t v27 = a1;
    uint64_t v19 = v11;
    uint64_t v20 = v9;
    uint64_t v14 = AssociatedTypeWitness;
    __swift_project_boxed_opaque_existential_2Tm(v25, v26);
    if (sub_249AEE138())
    {
      uint64_t v15 = v19;
      (*(void (**)(uint64_t, uint64_t))(a3 + 40))(a2, a3);
      uint64_t v16 = v24;
    }
    else
    {
      __swift_project_boxed_opaque_existential_2Tm(v25, v26);
      swift_getAssociatedConformanceWitness();
      sub_249AEE128();
      uint64_t v16 = v24;
      uint64_t v15 = v19;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v19, v8, v14);
    }
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v25);
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v22, v15, v20);
    uint64_t v13 = (uint64_t)v27;
  }
  return __swift_destroy_boxed_opaque_existential_2Tm(v13);
}

uint64_t DecodableDefault.hash(into:)()
{
  swift_getAssociatedTypeWitness();

  return sub_249AECF28();
}

uint64_t sub_249A0A304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A099FC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_249A0A33C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_249885414();
  *a1 = result & 1;
  return result;
}

uint64_t sub_249A0A374(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_249A0A3C8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t DecodableDefault.encode(to:)(void *a1)
{
  type metadata accessor for DecodableDefault.CodingKeys();
  swift_getWitnessTable();
  uint64_t v2 = sub_249AEDF18();
  uint64_t v6 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v6 - v3;
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249AEE468();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_249AEDF08();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v2);
}

uint64_t DecodableDefault.hashValue.getter()
{
  return sub_249AEE388();
}

uint64_t sub_249A0A618@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return DecodableDefault.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_249A0A63C(void *a1)
{
  return DecodableDefault.encode(to:)(a1);
}

uint64_t sub_249A0A65C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_249A0A674(a1, a2, a3, (void (*)(unsigned char *, uint64_t))DecodableDefault.hash(into:));
}

uint64_t sub_249A0A674(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  sub_249AEE338();
  a4(v7, a2);
  return sub_249AEE388();
}

uint64_t sub_249A0A6C8()
{
  return static DecodableDefault.== infix(_:_:)();
}

uint64_t static False.default.getter()
{
  return 0;
}

uint64_t static True.default.getter()
{
  return 1;
}

uint64_t static EmptyString.default.getter()
{
  return 0;
}

void sub_249A0A6F0(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
}

uint64_t static MinimumSDKVersionString.default.getter()
{
  return 808335665;
}

void sub_249A0A70C(void *a1@<X8>)
{
  *a1 = 808335665;
  a1[1] = 0xE400000000000000;
}

uint64_t static EmptyValue.default.getter()
{
  return sub_249AED768();
}

uint64_t sub_249A0A748()
{
  return static EmptyValue.default.getter();
}

uint64_t static EmptyDictionary.default.getter()
{
  return sub_249AECE38();
}

uint64_t sub_249A0A760@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static EmptyDictionary.default.getter();
  *a1 = result;
  return result;
}

uint64_t sub_249A0A798@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = static EmptyArray.default.getter(*(void *)(a1 + 16));
  *a2 = result;
  return result;
}

uint64_t static FirstCase.default.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_249AED8D8();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v13 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)&v13 - v9;
  sub_249AEDA98();
  swift_getAssociatedConformanceWitness();
  sub_249AED6C8();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(a1 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, a1);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a2, v6, a1);
  }
  __break(1u);
  return result;
}

uint64_t sub_249A0A9B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static FirstCase.default.getter(*(void *)(a1 + 16), a2);
}

uint64_t static EmptySet.default.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270F9CFC8](a1, a4);
}

uint64_t sub_249A0A9C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = static EmptySet.default.getter(*(void *)(a1 + 16), a2, a3, *(void *)(a1 + 40));
  *a4 = result;
  return result;
}

uint64_t static Zero.default.getter()
{
  return 0;
}

uint64_t static One.default.getter()
{
  return 1;
}

void sub_249A0AA0C(void *a1@<X8>)
{
  *a1 = 1;
}

double static ZeroDouble.default.getter()
{
  return 0.0;
}

double static ZeroFloat.default.getter()
{
  return 0.0;
}

void sub_249A0AA28(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

double static OneFloat.default.getter()
{
  return 0.0;
}

uint64_t sub_249A0AA38(uint64_t a1)
{
  return sub_249A0AB40(a1, &qword_2696DD3B8, &qword_2696DFB20, &qword_2696E3320);
}

uint64_t static BlackColor.default.getter()
{
  return sub_249903350(&qword_2696DD760);
}

uint64_t sub_249A0AA88@<X0>(void *a1@<X8>)
{
  return sub_249A0ABE0(&qword_2696DD760, &qword_2696E3320, a1);
}

uint64_t sub_249A0AAAC()
{
  uint64_t result = sub_249AEC898();
  qword_2696E3328 = result;
  return result;
}

uint64_t static ClearColor.default.getter()
{
  return sub_249903350(&qword_2696DD768);
}

uint64_t sub_249A0AAF0@<X0>(void *a1@<X8>)
{
  return sub_249A0ABE0(&qword_2696DD768, &qword_2696E3328, a1);
}

uint64_t sub_249A0AB14(uint64_t a1)
{
  return sub_249A0AB40(a1, &qword_2696DD398, &qword_2696DFB00, &qword_2696E3330);
}

uint64_t sub_249A0AB40(uint64_t a1, void *a2, void *a3, void *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  *a4 = *a3;

  return swift_retain();
}

uint64_t static MultiGaugePrimaryColor.default.getter()
{
  return sub_249903350(&qword_2696DD770);
}

uint64_t sub_249A0ABBC@<X0>(void *a1@<X8>)
{
  return sub_249A0ABE0(&qword_2696DD770, &qword_2696E3330, a1);
}

uint64_t sub_249A0ABE0@<X0>(void *a1@<X2>, void *a2@<X3>, void *a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  *a3 = *a2;

  return swift_retain();
}

void static VehicleSpeedDataIdentifier.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 47;
}

void sub_249A0AC44(unsigned char *a1@<X8>)
{
  *a1 = 47;
}

void static UISceneStateDataIdentifier.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 56;
}

void sub_249A0AC5C(unsigned char *a1@<X8>)
{
  *a1 = 56;
}

double sub_249A0AC68()
{
  double result = 0.0;
  xmmword_2696E3338 = 0u;
  *(_OWORD *)&qword_2696E3348 = 0u;
  return result;
}

double static EmptyEdgeInsets.default.getter()
{
  if (qword_2696DD778 != -1) {
    swift_once();
  }
  return *(double *)&xmmword_2696E3338;
}

double sub_249A0ACD0@<D0>(_OWORD *a1@<X8>)
{
  if (qword_2696DD778 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_2696E3338;
  long long v3 = *(_OWORD *)&qword_2696E3348;
  *a1 = xmmword_2696E3338;
  a1[1] = v3;
  return result;
}

uint64_t static TopVerticalEdge.default.getter()
{
  return 0;
}

double static EmptyTexture.default.getter@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)&double result = 254;
  *(_OWORD *)(a1 + 32) = xmmword_249B05040;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  return result;
}

double sub_249A0AD58@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)&double result = 254;
  *(_OWORD *)(a1 + 32) = xmmword_249B05040;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = 0;
  return result;
}

void static DefaultCenter.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t type metadata accessor for DecodableNil.CodingKeys()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DecodableDefault()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for DecodableDefault.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_249A0ADCC()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0ADE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0AE04()
{
  return MEMORY[0x263F8D518];
}

uint64_t sub_249A0AE10()
{
  return MEMORY[0x263F8D500];
}

uint64_t sub_249A0AE1C()
{
  return MEMORY[0x263F8D510];
}

uint64_t sub_249A0AE28()
{
  return MEMORY[0x263F8D348];
}

uint64_t sub_249A0AE34()
{
  return MEMORY[0x263F8D318];
}

uint64_t sub_249A0AE40()
{
  return MEMORY[0x263F8D338];
}

uint64_t sub_249A0AE4C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_249A0AE54(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_249A0AE5C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 40);
}

uint64_t sub_249A0AE64()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0AEB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0AEFC()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0AF44()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0AF8C()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0AFD4()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0B01C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 48);
}

uint64_t sub_249A0B024()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0B06C()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0B0B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0B0D0()
{
  return MEMORY[0x263F8D6F8];
}

uint64_t sub_249A0B0DC()
{
  return MEMORY[0x263F8D6D0];
}

uint64_t sub_249A0B0E8()
{
  return MEMORY[0x263F8D6E8];
}

uint64_t sub_249A0B0F4()
{
  return MEMORY[0x263F8D570];
}

uint64_t sub_249A0B100()
{
  return MEMORY[0x263F8D548];
}

uint64_t sub_249A0B10C()
{
  return MEMORY[0x263F8D568];
}

uint64_t sub_249A0B118()
{
  return MEMORY[0x263F8D600];
}

uint64_t sub_249A0B124()
{
  return MEMORY[0x263F8D5D8];
}

uint64_t sub_249A0B130()
{
  return MEMORY[0x263F8D5F8];
}

unint64_t sub_249A0B148()
{
  unint64_t result = qword_2696E3358;
  if (!qword_2696E3358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3358);
  }
  return result;
}

unint64_t sub_249A0B1A8()
{
  unint64_t result = qword_2696E3360;
  if (!qword_2696E3360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3360);
  }
  return result;
}

unint64_t sub_249A0B208()
{
  unint64_t result = qword_2696E3368;
  if (!qword_2696E3368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3368);
  }
  return result;
}

unint64_t sub_249A0B268()
{
  unint64_t result = qword_2696E3370;
  if (!qword_2696E3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3370);
  }
  return result;
}

unint64_t sub_249A0B2C0()
{
  unint64_t result = qword_2696E3378;
  if (!qword_2696E3378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2696E3378);
  }
  return result;
}

unint64_t sub_249A0B318()
{
  unint64_t result = qword_2696E3380[0];
  if (!qword_2696E3380[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_2696E3380);
  }
  return result;
}

uint64_t sub_249A0B378()
{
  uint64_t result = sub_249AED8D8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_249A0B408(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_249A0B544(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_249A0B608(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_249A0B700(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_249A0B86C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_249A0B964(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_249A0BAD0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_249A0BC70(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x249A0BEACLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_249A0BED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_249A0BEDC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_249A0BF78(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_249A0C050(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);

  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_249A0C0C8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_249A0C13C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_249A0C1B0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_249A0C224(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_249A0C298(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        BOOL v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_249A0C444(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x249A0C67CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t dispatch thunk of static DefaultValueProvider.default.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

ValueMetadata *type metadata accessor for False()
{
  return &type metadata for False;
}

ValueMetadata *type metadata accessor for True()
{
  return &type metadata for True;
}

ValueMetadata *type metadata accessor for EmptyString()
{
  return &type metadata for EmptyString;
}

ValueMetadata *type metadata accessor for MinimumSDKVersionString()
{
  return &type metadata for MinimumSDKVersionString;
}

uint64_t type metadata accessor for EmptyValue()
{
  return swift_getGenericMetadata();
}

uint64_t sub_249A0C710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t type metadata accessor for EmptyDictionary()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for EmptyArray()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for FirstCase()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for EmptySet()
{
  return swift_getGenericMetadata();
}

ValueMetadata *type metadata accessor for Zero()
{
  return &type metadata for Zero;
}

ValueMetadata *type metadata accessor for One()
{
  return &type metadata for One;
}

ValueMetadata *type metadata accessor for ZeroDouble()
{
  return &type metadata for ZeroDouble;
}

ValueMetadata *type metadata accessor for ZeroFloat()
{
  return &type metadata for ZeroFloat;
}

ValueMetadata *type metadata accessor for OneFloat()
{
  return &type metadata for OneFloat;
}

ValueMetadata *type metadata accessor for BlackColor()
{
  return &type metadata for BlackColor;
}

ValueMetadata *type metadata accessor for ClearColor()
{
  return &type metadata for ClearColor;
}

ValueMetadata *type metadata accessor for MultiGaugePrimaryColor()
{
  return &type metadata for MultiGaugePrimaryColor;
}

ValueMetadata *type metadata accessor for VehicleSpeedDataIdentifier()
{
  return &type metadata for VehicleSpeedDataIdentifier;
}

ValueMetadata *type metadata accessor for UISceneStateDataIdentifier()
{
  return &type metadata for UISceneStateDataIdentifier;
}

ValueMetadata *type metadata accessor for EmptyEdgeInsets()
{
  return &type metadata for EmptyEdgeInsets;
}

ValueMetadata *type metadata accessor for TopVerticalEdge()
{
  return &type metadata for TopVerticalEdge;
}

ValueMetadata *type metadata accessor for EmptyTexture()
{
  return &type metadata for EmptyTexture;
}

ValueMetadata *type metadata accessor for DefaultCenter()
{
  return &type metadata for DefaultCenter;
}

unsigned char *sub_249A0C85C(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x249A0C8F8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_249A0C920()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0C93C()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0C958()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0C974()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0C990()
{
  return swift_getWitnessTable();
}

uint64_t sub_249A0C9AC()
{
  return swift_getWitnessTable();
}

void sub_249A0C9D0(uint64_t a1, void **a2)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  if (!v4) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v6 = __clz(__rbit64(v4));
  v4 &= v4 - 1;
  int64_t v31 = v5;
  for (unint64_t i = v6 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v9)) + (v10 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 56) + 48 * i;
    int v13 = *(void **)v12;
    uint64_t v14 = *(void *)(v12 + 8);
    int v15 = *(void **)(v12 + 16);
    uint64_t v16 = *(void *)(v12 + 24);
    char v17 = *(unsigned char *)(v12 + 32);
    uint64_t v27 = *(void *)(v12 + 40);
    uint64_t v18 = *a2;
    sub_24988247C(*(void **)v12, v14, v15, v16, v17);
    sub_24988247C(v13, v14, v15, v16, v17);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *a2 = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v18 = sub_2498AB278(0, v18[2] + 1, 1, v18);
      *a2 = v18;
    }
    unint64_t v21 = v18[2];
    unint64_t v20 = v18[3];
    if (v21 >= v20 >> 1)
    {
      uint64_t v18 = sub_2498AB278((void *)(v20 > 1), v21 + 1, 1, v18);
      *a2 = v18;
    }
    uint64_t v29 = &type metadata for ImageAsset;
    BOOL v30 = &protocol witness table for ImageAsset;
    uint64_t v22 = swift_allocObject();
    *(void *)&long long v28 = v22;
    *(void *)(v22 + 16) = v13;
    *(void *)(v22 + 24) = v14;
    *(void *)(v22 + 32) = v15;
    *(void *)(v22 + 40) = v16;
    *(unsigned char *)(v22 + 48) = v17;
    *(void *)(v22 + 56) = v27;
    _OWORD v18[2] = v21 + 1;
    sub_249882BCC(&v28, (uint64_t)&v18[5 * v21 + 4]);
    sub_2498826E4(v13, v14, v15, v16, v17);
    int64_t v5 = v31;
    if (v4) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v8 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v8 >= v24) {
      goto LABEL_27;
    }
    unint64_t v9 = *(void *)(v23 + 8 * v8);
    int64_t v10 = v5 + 1;
    if (!v9)
    {
      int64_t v10 = v5 + 2;
      if (v5 + 2 >= v24) {
        goto LABEL_27;
      }
      unint64_t v9 = *(void *)(v23 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v5 + 3;
        if (v5 + 3 >= v24) {
          goto LABEL_27;
        }
        unint64_t v9 = *(void *)(v23 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v5 + 4;
          if (v5 + 4 >= v24) {
            goto LABEL_27;
          }
          unint64_t v9 = *(void *)(v23 + 8 * v10);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_20:
    unint64_t v4 = (v9 - 1) & v9;
    int64_t v31 = v10;
  }
  uint64_t v11 = v5 + 5;
  if (v5 + 5 >= v24)
  {
LABEL_27:
    swift_release();
    return;
  }
  unint64_t v9 = *(void *)(v23 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v5 + 5;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v24) {
      goto LABEL_27;
    }
    unint64_t v9 = *(void *)(v23 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
}

void *MeasurementLabelConfiguration.assets.getter()
{
  char v1 = *v0;
  uint64_t v2 = *((void *)v0 + 1);
  uint64_t v3 = *((void *)v0 + 3);
  char v4 = v0[32];
  char v5 = v0[33];
  uint64_t v6 = *((void *)v0 + 5);
  uint64_t v7 = *((void *)v0 + 6);
  uint64_t v25 = *((void *)v0 + 24);
  uint64_t v26 = (void *)*((void *)v0 + 26);
  uint64_t v22 = *((void *)v0 + 27);
  uint64_t v23 = *((void *)v0 + 25);
  uint64_t v24 = *((void *)v0 + 28);
  uint64_t v20 = *((void *)v0 + 30);
  uint64_t v21 = *((void *)v0 + 29);
  id v8 = *((id *)v0 + 2);
  swift_bridgeObjectRetain();
  unint64_t v9 = sub_2498AB278(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v11 = v9[2];
  unint64_t v10 = v9[3];
  if (v11 >= v10 >> 1) {
    unint64_t v9 = sub_2498AB278((void *)(v10 > 1), v11 + 1, 1, v9);
  }
  long long v28 = &type metadata for InstrumentFont;
  uint64_t v29 = &protocol witness table for InstrumentFont;
  uint64_t v12 = swift_allocObject();
  *(void *)&long long v27 = v12;
  *(unsigned char *)(v12 + 16) = v1;
  *(void *)(v12 + 24) = v2;
  *(void *)(v12 + 32) = v8;
  *(void *)(v12 + 40) = v3;
  *(unsigned char *)(v12 + 48) = v4;
  *(unsigned char *)(v12 + 49) = v5;
  *(void *)(v12 + 56) = v6;
  *(void *)(v12 + 64) = v7;
  void v9[2] = v11 + 1;
  sub_249882BCC(&v27, (uint64_t)&v9[5 * v11 + 4]);
  BOOL v30 = v9;
  if (v26)
  {
    unint64_t v14 = v9[2];
    unint64_t v13 = v9[3];
    id v15 = v26;
    swift_bridgeObjectRetain_n();
    id v16 = v15;
    if (v14 >= v13 >> 1) {
      unint64_t v9 = sub_2498AB278((void *)(v13 > 1), v14 + 1, 1, v9);
    }
    long long v28 = &type metadata for InstrumentFont;
    uint64_t v29 = &protocol witness table for InstrumentFont;
    uint64_t v17 = swift_allocObject();
    *(void *)&long long v27 = v17;
    *(unsigned char *)(v17 + 16) = v25;
    *(void *)(v17 + 24) = v23;
    *(void *)(v17 + 32) = v16;
    *(void *)(v17 + 40) = v22;
    *(unsigned char *)(v17 + 48) = v24 & 1;
    *(unsigned char *)(v17 + 49) = BYTE1(v24) & 1;
    *(void *)(v17 + 56) = v21;
    *(void *)(v17 + 64) = v20;
    void v9[2] = v14 + 1;
    sub_249882BCC(&v27, (uint64_t)&v9[5 * v14 + 4]);
    sub_24989CF3C(v25, v23, v26);
    BOOL v30 = v9;
  }
  uint64_t v18 = swift_bridgeObjectRetain();
  sub_249A0C9D0(v18, &v30);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t MeasurementLabelConfiguration.restoreAssets(from:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 248);
  unint64_t v5 = sub_2498F0D0C(MEMORY[0x263F8EE78]);
  void v8[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_249897C68(v5, (void (*)(uint64_t *__return_ptr, uint64_t *, void *))sub_24989CF94, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v1 + 248) = v6;
  }
  return result;
}

uint64_t static MeasurementLabelConfiguration.defaultState.getter()
{
  return 0;
}

uint64_t static MeasurementLabelConfiguration.ColorIDs.defaultState.getter()
{
  return 0;
}

uint64_t MeasurementLabelConfiguration.ColorIDs.iconColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.ColorIDs.valueColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.ColorIDs.unitColorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.ColorIDs.iconRedactedColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.valueRedactedColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 56);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 64);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.unitRedactedColorID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 80);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  char v4 = *(unsigned char *)(v1 + 88);
  *(unsigned char *)(a1 + 16) = v4;
  return sub_24988D770(v2, v3, v4);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.init(iconColorIDs:valueColorIDs:unitColorIDs:iconRedactedColorID:valueRedactedColorID:unitRedactedColorID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  sub_24988D788(*(void *)a6, *(void *)(a6 + 8), *(unsigned char *)(a6 + 16));
  char v13 = *(unsigned char *)(a4 + 16);
  uint64_t v14 = *(void *)a5;
  uint64_t v15 = *(void *)(a5 + 8);
  *(void *)a7 = a1;
  *(void *)(a7 + 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(_OWORD *)(a7 + 24) = *(_OWORD *)a4;
  *(unsigned char *)(a7 + 40) = v13;
  *(void *)(a7 + 48) = v14;
  *(void *)(a7 + 56) = v15;
  char v16 = *(unsigned char *)(a5 + 16);
  *(unsigned char *)(a7 + 64) = v16;
  *(void *)(a7 + 72) = v14;
  *(void *)(a7 + 80) = v15;
  *(unsigned char *)(a7 + 88) = v16;

  return sub_24988D770(v14, v15, v16);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.init(iconColorID:valueColorID:unitColorID:iconRedactedColorID:valueRedactedColorID:unitRedactedColorID:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  char v10 = *((unsigned char *)a1 + 16);
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  char v13 = *((unsigned char *)a2 + 16);
  uint64_t v22 = a3[1];
  uint64_t v23 = *a3;
  char v21 = *((unsigned char *)a3 + 16);
  uint64_t v31 = a4[1];
  uint64_t v32 = *a4;
  char v30 = *((unsigned char *)a4 + 16);
  uint64_t v28 = a5[1];
  uint64_t v29 = *a5;
  char v27 = *((unsigned char *)a5 + 16);
  uint64_t v25 = a6[1];
  uint64_t v26 = *a6;
  char v24 = *((unsigned char *)a6 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00B8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
  *(void *)(inited + 32) = 0;
  *(void *)(inited + 40) = v8;
  *(void *)(inited + 48) = v9;
  *(unsigned char *)(inited + 56) = v10;
  unint64_t v15 = sub_2498F0E5C(inited);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00C0);
  swift_arrayDestroy();
  uint64_t v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = xmmword_249AF0A70;
  *(void *)(v16 + 32) = 0;
  *(void *)(v16 + 40) = v11;
  *(void *)(v16 + 48) = v12;
  *(unsigned char *)(v16 + 56) = v13;
  unint64_t v17 = sub_2498F0E5C(v16);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v18 = swift_initStackObject();
  *(_OWORD *)(v18 + 16) = xmmword_249AF0A70;
  *(void *)(v18 + 32) = 0;
  *(void *)(v18 + 40) = v23;
  *(void *)(v18 + 48) = v22;
  *(unsigned char *)(v18 + 56) = v21;
  unint64_t v19 = sub_2498F0E5C(v18);
  swift_setDeallocating();
  uint64_t result = swift_arrayDestroy();
  *(void *)a7 = v15;
  *(void *)(a7 + 8) = v17;
  *(void *)(a7 + 16) = v19;
  *(void *)(a7 + 24) = v32;
  *(void *)(a7 + 32) = v31;
  *(unsigned char *)(a7 + 40) = v30;
  *(void *)(a7 + 48) = v29;
  *(void *)(a7 + 56) = v28;
  *(unsigned char *)(a7 + 64) = v27;
  *(void *)(a7 + 72) = v26;
  *(void *)(a7 + 80) = v25;
  *(unsigned char *)(a7 + 88) = v24;
  return result;
}

uint64_t MeasurementLabelConfiguration.ColorIDs.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = *(void *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v12 = *(void *)(v1 + 48);
  uint64_t v14 = *(void *)(v1 + 80);
  uint64_t v15 = *(void *)(v1 + 72);
  char v9 = *(unsigned char *)(v1 + 40);
  char v10 = *(unsigned char *)(v1 + 64);
  char v13 = *(unsigned char *)(v1 + 88);
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24988A2D4(a1, v5);
  swift_bridgeObjectRelease();
  sub_24988D770(v6, v7, v9);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v6, v7, v9);
  sub_24988D770(v12, v8, v10);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();
  sub_24988D788(v12, v8, v10);
  sub_24988D770(v15, v14, v13);
  Theme.ColorID.rawValue.getter();
  sub_249AECF78();
  swift_bridgeObjectRelease();

  return sub_24988D788(v15, v14, v13);
}

unint64_t sub_249A0D484(char a1)
{
  unint64_t result = 0x6F6C6F436E6F6369;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6F4365756C6176;
      break;
    case 2:
      unint64_t result = 0x6F6C6F4374696E75;
      break;
    case 3:
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A0D560()
{
  return sub_249A0D484(*v0);
}

uint64_t sub_249A0D568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A12A30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_249A0D590(uint64_t a1)
{
  unint64_t v2 = sub_249A114E4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A0D5CC(uint64_t a1)
{
  unint64_t v2 = sub_249A114E4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.encode(to:)(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3808);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v24 = v1[2];
  uint64_t v25 = v8;
  uint64_t v10 = v1[3];
  uint64_t v22 = v1[4];
  uint64_t v23 = v10;
  int v29 = *((unsigned __int8 *)v1 + 40);
  uint64_t v11 = v1[6];
  uint64_t v21 = v1[7];
  int v20 = *((unsigned __int8 *)v1 + 64);
  uint64_t v16 = v1[9];
  uint64_t v18 = v1[10];
  uint64_t v19 = v11;
  int v17 = *((unsigned __int8 *)v1 + 88);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A114E4();
  sub_249AEE468();
  uint64_t v26 = v9;
  char v30 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  sub_24994507C((unint64_t *)&qword_2696E00E0, (void (*)(void))sub_24988E104);
  sub_249AEDF08();
  if (!v2)
  {
    uint64_t v12 = v23;
    uint64_t v13 = v24;
    uint64_t v26 = v25;
    char v30 = 1;
    sub_249AEDF08();
    uint64_t v26 = v13;
    char v30 = 2;
    sub_249AEDF08();
    uint64_t v26 = v12;
    uint64_t v27 = v22;
    char v28 = v29;
    char v30 = 3;
    sub_24988E104();
    sub_249AEDF08();
    uint64_t v26 = v19;
    uint64_t v27 = v21;
    char v28 = v20;
    char v30 = 4;
    sub_249AEDF08();
    uint64_t v26 = v16;
    uint64_t v27 = v18;
    char v28 = v17;
    char v30 = 5;
    sub_249AEDF08();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t MeasurementLabelConfiguration.ColorIDs.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 40);
  char v3 = *((unsigned char *)v0 + 64);
  char v4 = *((unsigned char *)v0 + 88);
  long long v7 = *v0;
  uint64_t v8 = v1;
  long long v9 = *(long long *)((char *)v0 + 24);
  char v10 = v2;
  long long v11 = v0[3];
  char v12 = v3;
  long long v13 = *(long long *)((char *)v0 + 72);
  char v14 = v4;
  sub_249AEE338();
  MeasurementLabelConfiguration.ColorIDs.hash(into:)((uint64_t)v6);
  return sub_249AEE388();
}

uint64_t MeasurementLabelConfiguration.ColorIDs.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3818);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A114E4();
  sub_249AEE428();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  }
  uint64_t v41 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E00D8);
  char v46 = 0;
  sub_24994507C((unint64_t *)&qword_2696E00F8, (void (*)(void))sub_24988E268);
  sub_249AEDE08();
  uint64_t v9 = v42;
  char v46 = 1;
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  uint64_t v40 = v9;
  uint64_t v10 = v42;
  char v46 = 2;
  swift_bridgeObjectRetain();
  sub_249AEDE08();
  uint64_t v39 = v10;
  uint64_t v11 = v42;
  char v46 = 3;
  unint64_t v12 = sub_24988E268();
  swift_bridgeObjectRetain();
  uint64_t v38 = 0;
  sub_249AEDE08();
  uint64_t v33 = v11;
  uint64_t v14 = v42;
  uint64_t v13 = v43;
  unint64_t v15 = v12;
  LODWORD(v12) = v44;
  char v46 = 4;
  sub_24988D770(v42, v43, v44);
  uint64_t v32 = v15;
  sub_249AEDE08();
  int v35 = v12;
  uint64_t v36 = v14;
  uint64_t v37 = v13;
  uint64_t v17 = v42;
  uint64_t v16 = v43;
  char v46 = 5;
  int v45 = v44;
  sub_24988D770(v42, v43, v44);
  sub_249AEDE08();
  uint64_t v34 = v16;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v20 = v42;
  uint64_t v19 = v43;
  uint64_t v32 = v43;
  LODWORD(v38) = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v21 = v36;
  sub_24988D770(v36, v37, v12);
  char v22 = v45;
  sub_24988D770(v17, v16, v45);
  uint64_t v31 = v20;
  sub_24988D770(v20, v19, v38);
  sub_24988D788(v17, v16, v22);
  uint64_t v23 = v37;
  LOBYTE(v16) = v12;
  sub_24988D788(v21, v37, v12);
  uint64_t v24 = v40;
  swift_bridgeObjectRelease();
  uint64_t v25 = v39;
  swift_bridgeObjectRelease();
  uint64_t v26 = v33;
  swift_bridgeObjectRelease();
  uint64_t v27 = v41;
  *uint64_t v41 = v24;
  v27[1] = v25;
  uint64_t v28 = v36;
  v27[2] = v26;
  v27[3] = v28;
  _OWORD v27[4] = v23;
  *((unsigned char *)v27 + 40) = v16;
  uint64_t v29 = v34;
  _OWORD v27[6] = v17;
  v27[7] = v29;
  LOBYTE(v23) = v45;
  *((unsigned char *)v27 + 64) = v45;
  v27[9] = v20;
  uint64_t v30 = v32;
  v27[10] = v32;
  *((unsigned char *)v27 + 88) = v38;
  __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24988D788(v28, v37, v35);
  sub_24988D788(v17, v29, v23);
  return sub_24988D788(v31, v30, v38);
}

uint64_t sub_249A0E03C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return MeasurementLabelConfiguration.ColorIDs.init(from:)(a1, a2);
}

uint64_t sub_249A0E054(void *a1)
{
  return MeasurementLabelConfiguration.ColorIDs.encode(to:)(a1);
}

uint64_t sub_249A0E06C()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 40);
  char v3 = *((unsigned char *)v0 + 64);
  char v4 = *((unsigned char *)v0 + 88);
  long long v7 = *v0;
  uint64_t v8 = v1;
  long long v9 = *(long long *)((char *)v0 + 24);
  char v10 = v2;
  long long v11 = v0[3];
  char v12 = v3;
  long long v13 = *(long long *)((char *)v0 + 72);
  char v14 = v4;
  sub_249AEE338();
  MeasurementLabelConfiguration.ColorIDs.hash(into:)((uint64_t)v6);
  return sub_249AEE388();
}

uint64_t sub_249A0E0F4()
{
  uint64_t v1 = *((void *)v0 + 2);
  char v2 = *((unsigned char *)v0 + 40);
  char v3 = *((unsigned char *)v0 + 64);
  char v4 = *((unsigned char *)v0 + 88);
  long long v7 = *v0;
  uint64_t v8 = v1;
  long long v9 = *(long long *)((char *)v0 + 24);
  char v10 = v2;
  long long v11 = v0[3];
  char v12 = v3;
  long long v13 = *(long long *)((char *)v0 + 72);
  char v14 = v4;
  sub_249AEE338();
  MeasurementLabelConfiguration.ColorIDs.hash(into:)((uint64_t)v6);
  return sub_249AEE388();
}

void static MeasurementLabelConfiguration.Alignment.default.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

CarPlayAssetUI::MeasurementLabelConfiguration::Alignment_optional __swiftcall MeasurementLabelConfiguration.Alignment.init(rawValue:)(Swift::Int rawValue)
{
  unint64_t v2 = 0x302010004uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 5) {
    LOBYTE(v2) = 4;
  }
  *uint64_t v1 = v2;
  return (CarPlayAssetUI::MeasurementLabelConfiguration::Alignment_optional)rawValue;
}

uint64_t MeasurementLabelConfiguration.Alignment.rawValue.getter()
{
  return *v0 + 1;
}

CarPlayAssetUI::MeasurementLabelConfiguration::Alignment_optional sub_249A0E1B8(Swift::Int *a1)
{
  return MeasurementLabelConfiguration.Alignment.init(rawValue:)(*a1);
}

uint64_t sub_249A0E1C0()
{
  return sub_249AED3B8();
}

uint64_t sub_249A0E220()
{
  return sub_249AED358();
}

uint64_t MeasurementLabelConfiguration.font.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  char v3 = *(void **)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  char v5 = *(unsigned char *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 33);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 33) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_249A0E2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 8);
  char v3 = *(void **)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v5 = *(unsigned char *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 33);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  *(unsigned char *)a2 = *(unsigned char *)a1;
  *(void *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(unsigned char *)(a2 + 32) = v5;
  *(unsigned char *)(a2 + 33) = v6;
  *(void *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  id v9 = v3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_249A0E338(char *a1, uint64_t a2)
{
  char v3 = *a1;
  uint64_t v4 = *((void *)a1 + 1);
  uint64_t v5 = *((void *)a1 + 3);
  char v6 = a1[32];
  char v7 = a1[33];
  uint64_t v9 = *((void *)a1 + 5);
  uint64_t v8 = *((void *)a1 + 6);
  char v10 = *(void **)(a2 + 16);
  id v11 = *((id *)a1 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();

  *(unsigned char *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v5;
  *(unsigned char *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 33) = v7;
  *(void *)(a2 + 40) = v9;
  *(void *)(a2 + 48) = v8;
  return sub_249A0E46C();
}

uint64_t MeasurementLabelConfiguration.font.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a1 + 2);
  uint64_t v5 = *((void *)a1 + 3);
  char v6 = a1[32];
  char v7 = a1[33];
  uint64_t v8 = *((void *)a1 + 5);
  uint64_t v9 = *((void *)a1 + 6);
  char v10 = *(void **)(v1 + 16);
  swift_bridgeObjectRelease();

  *(unsigned char *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  *(void *)(v1 + 16) = v4;
  *(void *)(v1 + 24) = v5;
  *(unsigned char *)(v1 + 32) = v6;
  *(unsigned char *)(v1 + 33) = v7;
  *(void *)(v1 + 40) = v8;
  *(void *)(v1 + 48) = v9;

  return sub_249A0E46C();
}

uint64_t sub_249A0E46C()
{
  uint64_t v1 = v0;
  id v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain();
  id v3 = InstrumentFont.cpFont.getter();
  uint64_t v4 = sub_249AA8C84();

  if (*(void *)(v4 + 16))
  {
    double v5 = *(double *)(v4 + 32);
    swift_bridgeObjectRelease();

    uint64_t result = swift_bridgeObjectRelease();
    float v7 = v5;
    *(float *)(v1 + 260) = v7;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t result = sub_249AEDC58();
    __break(1u);
  }
  return result;
}

uint64_t (*MeasurementLabelConfiguration.font.modify(void *a1))(uint64_t a1, char a2)
{
  *a1 = v1;
  return sub_249A0E5AC;
}

uint64_t sub_249A0E5AC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return sub_249A0E46C();
  }
  return result;
}

uint64_t MeasurementLabelConfiguration.colorIDs.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = *(void *)(v1 + 88);
  uint64_t v6 = *(void *)(v1 + 104);
  uint64_t v7 = *(void *)(v1 + 112);
  uint64_t v8 = *(void *)(v1 + 136);
  uint64_t v13 = *(void *)(v1 + 128);
  *(void *)a1 = *(void *)(v1 + 56);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v9 = *(unsigned char *)(v1 + 96);
  *(unsigned char *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v6;
  *(void *)(a1 + 56) = v7;
  char v10 = *(unsigned char *)(v1 + 120);
  *(unsigned char *)(a1 + 64) = v10;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v8;
  char v11 = *(unsigned char *)(v1 + 144);
  *(unsigned char *)(a1 + 88) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24988D770(v4, v5, v9);
  sub_24988D770(v6, v7, v10);

  return sub_24988D770(v13, v8, v11);
}

__n128 MeasurementLabelConfiguration.colorIDs.setter(uint64_t a1)
{
  __n128 v21 = *(__n128 *)(a1 + 16);
  uint64_t v20 = *(void *)(a1 + 32);
  char v19 = *(unsigned char *)(a1 + 40);
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 48);
  char v16 = *(unsigned char *)(a1 + 64);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v15 = *(void *)(a1 + 72);
  char v13 = *(unsigned char *)(a1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 88);
  uint64_t v5 = *(void *)(v1 + 104);
  uint64_t v6 = *(void *)(v1 + 112);
  uint64_t v11 = *(void *)(v1 + 136);
  uint64_t v12 = *(void *)(v1 + 128);
  char v7 = *(unsigned char *)(v1 + 96);
  char v8 = *(unsigned char *)(v1 + 120);
  char v10 = *(unsigned char *)(v1 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24988D788(v3, v4, v7);
  sub_24988D788(v5, v6, v8);
  sub_24988D788(v12, v11, v10);
  *(_OWORD *)(v1 + 56) = *(_OWORD *)a1;
  __n128 result = v21;
  *(__n128 *)(v1 + 72) = v21;
  *(void *)(v1 + 88) = v20;
  *(unsigned char *)(v1 + 96) = v19;
  *(void *)(v1 + 104) = v18;
  *(void *)(v1 + 112) = v17;
  *(unsigned char *)(v1 + 120) = v16;
  *(void *)(v1 + 128) = v15;
  *(void *)(v1 + 136) = v14;
  *(unsigned char *)(v1 + 144) = v13;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.colorIDs.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.precision.getter()
{
  return *(void *)(v0 + 152);
}

uint64_t MeasurementLabelConfiguration.precision.setter(uint64_t result)
{
  *(void *)(v1 + 152) = result;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.precision.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.divider.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t MeasurementLabelConfiguration.divider.setter(uint64_t result)
{
  *(void *)(v1 + 160) = result;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.divider.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.defaultUnitLabel.getter()
{
  uint64_t v1 = *(void *)(v0 + 168);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MeasurementLabelConfiguration.defaultUnitLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 168) = a1;
  *(void *)(v2 + 176) = a2;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.defaultUnitLabel.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.unitLabels.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.unitLabels.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 184) = a1;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.unitLabels.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.unitFont.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[24];
  uint64_t v3 = v1[25];
  uint64_t v4 = (void *)v1[26];
  uint64_t v5 = v1[27];
  uint64_t v6 = v1[28];
  uint64_t v7 = v1[29];
  uint64_t v8 = v1[30];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = (uint64_t)v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_24989CD14(v2, v3, v4);
}

__n128 MeasurementLabelConfiguration.unitFont.setter(long long *a1)
{
  long long v5 = a1[1];
  long long v6 = *a1;
  __n128 v4 = (__n128)a1[2];
  uint64_t v2 = *((void *)a1 + 6);
  sub_24989CF3C(*(void *)(v1 + 192), *(void *)(v1 + 200), *(void **)(v1 + 208));
  *(_OWORD *)(v1 + 192) = v6;
  *(_OWORD *)(v1 + 208) = v5;
  __n128 result = v4;
  *(__n128 *)(v1 + 224) = v4;
  *(void *)(v1 + 240) = v2;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.unitFont.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.statefulImages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t MeasurementLabelConfiguration.statefulImages.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 248) = a1;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.statefulImages.modify())()
{
  return nullsub_1;
}

float MeasurementLabelConfiguration.imagePadding.getter()
{
  return *(float *)(v0 + 256);
}

void MeasurementLabelConfiguration.imagePadding.setter(float a1)
{
  *(float *)(v1 + 256) = a1;
}

uint64_t (*MeasurementLabelConfiguration.imagePadding.modify())()
{
  return nullsub_1;
}

float MeasurementLabelConfiguration.labelSpacing.getter()
{
  return *(float *)(v0 + 260);
}

void MeasurementLabelConfiguration.labelSpacing.setter(float a1)
{
  *(float *)(v1 + 260) = a1;
}

uint64_t (*MeasurementLabelConfiguration.labelSpacing.modify())()
{
  return nullsub_1;
}

float MeasurementLabelConfiguration.valueYOffset.getter()
{
  return *(float *)(v0 + 264);
}

void MeasurementLabelConfiguration.valueYOffset.setter(float a1)
{
  *(float *)(v1 + 264) = a1;
}

uint64_t (*MeasurementLabelConfiguration.valueYOffset.modify())()
{
  return nullsub_1;
}

unint64_t MeasurementLabelConfiguration.valueTracking.getter()
{
  return *(unsigned int *)(v0 + 268) | ((unint64_t)*(unsigned __int8 *)(v0 + 272) << 32);
}

uint64_t MeasurementLabelConfiguration.valueTracking.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 268) = result;
  *(unsigned char *)(v1 + 272) = BYTE4(result) & 1;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.valueTracking.modify())()
{
  return nullsub_1;
}

void MeasurementLabelConfiguration.alignment.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 273);
}

unsigned char *MeasurementLabelConfiguration.alignment.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 273) = *result;
  return result;
}

uint64_t (*MeasurementLabelConfiguration.alignment.modify())()
{
  return nullsub_1;
}

uint64_t MeasurementLabelConfiguration.init(font:colorIDs:precision:divider:defaultUnitLabel:unitLabels:unitFont:images:imagePadding:labelSpacing:valueYOffset:valueTracking:alignment:)@<X0>(uint64_t result@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, long long *a8@<X7>, uint64_t a9@<X8>, float a10@<S0>, float a11@<S1>, uint64_t a12, uint64_t a13, int a14, char a15, char *a16)
{
  char v19 = *(unsigned char *)result;
  uint64_t v20 = *(void *)(result + 8);
  __n128 v21 = *(void **)(result + 16);
  uint64_t v22 = *(void *)(result + 24);
  char v23 = *(unsigned char *)(result + 32);
  char v24 = *(unsigned char *)(result + 33);
  uint64_t v25 = *(void *)(result + 40);
  uint64_t v26 = *(void *)(result + 48);
  long long v27 = *a2;
  uint64_t v28 = *((void *)a2 + 2);
  long long v29 = *(long long *)((char *)a2 + 24);
  char v30 = *((unsigned char *)a2 + 40);
  long long v31 = a2[3];
  char v32 = *((unsigned char *)a2 + 64);
  long long v33 = *(long long *)((char *)a2 + 72);
  char v34 = *((unsigned char *)a2 + 88);
  long long v35 = *a8;
  long long v36 = a8[1];
  long long v37 = a8[2];
  uint64_t v38 = *((void *)a8 + 6);
  char v39 = *a16;
  if ((a13 & 0x100000000) == 0)
  {
    float v40 = *(float *)&a13;
LABEL_5:
    *(unsigned char *)a9 = v19;
    *(void *)(a9 + 8) = v20;
    *(void *)(a9 + 16) = v21;
    *(void *)(a9 + 24) = v22;
    *(unsigned char *)(a9 + 32) = v23;
    *(unsigned char *)(a9 + 33) = v24;
    *(void *)(a9 + 40) = v25;
    *(void *)(a9 + 48) = v26;
    *(_OWORD *)(a9 + 56) = v27;
    *(void *)(a9 + 72) = v28;
    *(_OWORD *)(a9 + 80) = v29;
    *(unsigned char *)(a9 + 96) = v30;
    *(_OWORD *)(a9 + 104) = v31;
    *(unsigned char *)(a9 + 120) = v32;
    *(_OWORD *)(a9 + 128) = v33;
    *(unsigned char *)(a9 + 144) = v34;
    *(void *)(a9 + 152) = a3;
    *(void *)(a9 + 160) = a4;
    *(void *)(a9 + 168) = a5;
    *(void *)(a9 + 176) = a6;
    *(void *)(a9 + 184) = a7;
    *(_OWORD *)(a9 + 192) = v35;
    *(_OWORD *)(a9 + 208) = v36;
    *(_OWORD *)(a9 + 224) = v37;
    *(void *)(a9 + 240) = v38;
    *(void *)(a9 + 248) = a12;
    *(float *)(a9 + 256) = a10;
    *(float *)(a9 + 260) = v40;
    *(float *)(a9 + 264) = a11;
    *(_DWORD *)(a9 + 268) = a14;
    *(unsigned char *)(a9 + 272) = a15 & 1;
    *(unsigned char *)(a9 + 273) = v39;
    return result;
  }
  char v45 = *((unsigned char *)a2 + 88);
  char v46 = *((unsigned char *)a2 + 64);
  char v47 = *((unsigned char *)a2 + 40);
  uint64_t v48 = *((void *)a2 + 2);
  long long v49 = *(long long *)((char *)a2 + 72);
  long long v50 = a2[3];
  long long v51 = *(long long *)((char *)a2 + 24);
  long long v52 = *a2;
  uint64_t v53 = *((void *)a8 + 6);
  long long v54 = a8[2];
  long long v55 = a8[1];
  long long v56 = *a8;
  char v57 = *a16;
  uint64_t v58 = a3;
  uint64_t v59 = a4;
  uint64_t v60 = a5;
  uint64_t v61 = a6;
  uint64_t v62 = a7;
  id v44 = v21;
  swift_bridgeObjectRetain();
  id v41 = InstrumentFont.cpFont.getter();
  uint64_t v42 = sub_249AA8C84();

  if (*(void *)(v42 + 16))
  {
    double v43 = *(double *)(v42 + 32);
    swift_bridgeObjectRelease();

    uint64_t result = swift_bridgeObjectRelease();
    float v40 = v43;
    a6 = v61;
    a7 = v62;
    a4 = v59;
    a5 = v60;
    a3 = v58;
    char v39 = v57;
    long long v36 = v55;
    long long v35 = v56;
    long long v37 = v54;
    uint64_t v38 = v53;
    long long v29 = v51;
    long long v27 = v52;
    long long v33 = v49;
    long long v31 = v50;
    uint64_t v28 = v48;
    char v32 = v46;
    char v30 = v47;
    char v34 = v45;
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_249AEDC58();
  __break(1u);
  return result;
}

void *MeasurementLabelConfiguration.init(font:colorIDs:precision:divider:defaultUnitLabel:unitLabels:unitFont:image:imagePadding:labelSpacing:valueYOffset:valueTracking:alignment:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, float a10@<S0>, float a11@<S1>, long long *a12, unint64_t a13, unint64_t a14, char *a15)
{
  uint64_t v15 = a7;
  uint64_t v16 = a6;
  uint64_t v17 = a5;
  uint64_t v18 = a4;
  uint64_t v22 = a9;
  char v47 = *a1;
  uint64_t v45 = *((void *)a1 + 2);
  uint64_t v46 = *((void *)a1 + 1);
  uint64_t v23 = *((void *)a1 + 3);
  char v43 = a1[33];
  char v44 = a1[32];
  uint64_t v41 = *((void *)a1 + 6);
  uint64_t v42 = *((void *)a1 + 5);
  uint64_t v40 = *(void *)(a2 + 16);
  long long v50 = *(_OWORD *)(a2 + 24);
  long long v51 = *(_OWORD *)a2;
  char v38 = *(unsigned char *)(a2 + 64);
  char v39 = *(unsigned char *)(a2 + 40);
  long long v48 = *(_OWORD *)(a2 + 72);
  long long v49 = *(_OWORD *)(a2 + 48);
  char v55 = *(unsigned char *)(a2 + 88);
  long long v53 = *(_OWORD *)(a8 + 16);
  long long v54 = *(_OWORD *)a8;
  long long v57 = *(_OWORD *)(a8 + 32);
  uint64_t v56 = *(void *)(a8 + 48);
  uint64_t v24 = *((void *)a12 + 4);
  char v52 = *a15;
  if ((~*((_DWORD *)a12 + 8) & 0xFELL) != 0)
  {
    uint64_t v35 = *((void *)a12 + 5);
    uint64_t v30 = *((void *)a12 + 2);
    uint64_t v29 = *((void *)a12 + 3);
    long long v34 = *a12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3820);
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 32) = 0;
    *(_OWORD *)(inited + 16) = xmmword_249AF0A70;
    *(_OWORD *)(inited + 40) = v34;
    *(void *)(inited + 56) = v30;
    *(void *)(inited + 64) = v29;
    uint64_t v16 = a6;
    uint64_t v17 = a5;
    uint64_t v15 = a7;
    uint64_t v18 = a4;
    uint64_t v22 = a9;
    *(unsigned char *)(inited + 72) = v24;
    *(void *)(inited + 80) = v35;
    unint64_t v25 = sub_2498F0D0C(inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3828);
    swift_arrayDestroy();
  }
  else
  {
    unint64_t v25 = sub_2498F0D0C(MEMORY[0x263F8EE78]);
  }
  v69[0] = v47;
  uint64_t v70 = v46;
  uint64_t v71 = v45;
  uint64_t v72 = v23;
  char v73 = v44;
  char v74 = v43;
  uint64_t v75 = v42;
  uint64_t v76 = v41;
  long long v61 = v51;
  uint64_t v62 = v40;
  long long v63 = v50;
  char v64 = v39;
  long long v65 = v49;
  char v66 = v38;
  long long v67 = v48;
  char v68 = v55;
  v59[0] = v54;
  v59[1] = v53;
  v59[2] = v57;
  uint64_t v60 = v56;
  char v58 = v52;
  uint64_t v33 = a14 | ((HIDWORD(a14) & 1) << 32);
  MeasurementLabelConfiguration.init(font:colorIDs:precision:divider:defaultUnitLabel:unitLabels:unitFont:images:imagePadding:labelSpacing:valueYOffset:valueTracking:alignment:)((uint64_t)v69, &v61, a3, v18, v17, v16, v15, v59, (uint64_t)__src, a10, a11, v25, a13 | ((HIDWORD(a13) & 1) << 32), v33, SBYTE4(v33), &v58);
  return memcpy(v22, __src, 0x112uLL);
}

void sub_249A0F0A8(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v8 = *a1;
  uint64_t v10 = *(void *)a2;
  char v9 = *(void **)(a2 + 8);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v12 = *(void **)(a2 + 24);
  uint64_t v13 = *(void *)(a2 + 32);
  char v14 = *(unsigned char *)(a2 + 40);
  *(void *)&long long v17 = v9;
  *((void *)&v17 + 1) = v11;
  *(void *)&long long v18 = v12;
  *((void *)&v18 + 1) = v13;
  LOBYTE(v19) = v14;
  *((void *)&v19 + 1) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  sub_24988247C(v9, v11, v12, v13, v14);
  ImageAsset.restore(from:)(a3);
  if (v5)
  {
    sub_2498826E4(v9, v11, v12, v13, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v20[0] = v17;
    v20[1] = v18;
    v20[2] = v19;
    sub_249A13330((uint64_t)v20);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = v8;
    sub_2498846C4(v20, v10, isUniquelyReferenced_nonNull_native);
    uint64_t v16 = v21;
    swift_bridgeObjectRelease();
    sub_2498826E4((void *)v17, *((uint64_t *)&v17 + 1), (void *)v18, v13, v14);
    *a4 = v16;
  }
}

uint64_t MeasurementLabelConfiguration.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 176);
  uint64_t v4 = *(void *)(v1 + 184);
  uint64_t v6 = *(void *)(v1 + 208);
  uint64_t v7 = *(void *)(v1 + 248);
  int v8 = *(unsigned __int8 *)(v1 + 272);
  InstrumentFont.hash(into:)();
  MeasurementLabelConfiguration.ColorIDs.hash(into:)(a1);
  sub_249AEE348();
  sub_249AEE348();
  if (v3)
  {
    sub_249AEE358();
    swift_bridgeObjectRetain();
    sub_249AECF78();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_3;
    }
LABEL_6:
    sub_249AEE358();
    if (v6) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_249AEE358();
  if (!v4) {
    goto LABEL_6;
  }
LABEL_3:
  sub_249AEE358();
  swift_bridgeObjectRetain();
  sub_24988A734(a1, v4);
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_4:
    sub_249AEE358();
    InstrumentFont.hash(into:)();
    goto LABEL_8;
  }
LABEL_7:
  sub_249AEE358();
LABEL_8:
  swift_bridgeObjectRetain();
  sub_24988AAA4(a1, v7);
  swift_bridgeObjectRelease();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE368();
  sub_249AEE358();
  if (!v8) {
    sub_249AEE368();
  }
  return sub_249AEE348();
}

unint64_t sub_249A0F4DC(char a1)
{
  unint64_t result = 1953394534;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x734449726F6C6F63;
      break;
    case 2:
      unint64_t result = 0x6F69736963657270;
      break;
    case 3:
      unint64_t result = 0x72656469766964;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x6562614C74696E75;
      break;
    case 6:
      unint64_t result = 0x746E6F4674696E75;
      break;
    case 7:
      unint64_t result = 0x6C75666574617473;
      break;
    case 8:
      unint64_t result = 0x6461506567616D69;
      break;
    case 9:
      unint64_t result = 0x6170536C6562616CLL;
      break;
    case 10:
      unint64_t result = 0x664F5965756C6176;
      break;
    case 11:
      unint64_t result = 0x61725465756C6176;
      break;
    case 12:
      unint64_t result = 0x6E656D6E67696C61;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_249A0F6AC()
{
  return sub_249A0F4DC(*v0);
}

uint64_t sub_249A0F6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_249A12CE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_249A0F6DC(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_249A0F6E8(uint64_t a1)
{
  unint64_t v2 = sub_249A11538();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_249A0F724(uint64_t a1)
{
  unint64_t v2 = sub_249A11538();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t MeasurementLabelConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3830);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v57 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v44 = *((void *)v1 + 1);
  uint64_t v8 = *((void *)v1 + 3);
  unsigned __int8 v9 = v1[32];
  int v43 = v1[33];
  uint64_t v42 = *((void *)v1 + 5);
  uint64_t v41 = *((void *)v1 + 6);
  long long v40 = *(_OWORD *)(v1 + 56);
  uint64_t v39 = *((void *)v1 + 9);
  uint64_t v38 = *((void *)v1 + 10);
  uint64_t v37 = *((void *)v1 + 11);
  int v36 = v1[96];
  uint64_t v35 = *((void *)v1 + 13);
  uint64_t v34 = *((void *)v1 + 14);
  int v33 = v1[120];
  uint64_t v32 = *((void *)v1 + 16);
  uint64_t v31 = *((void *)v1 + 17);
  int v30 = v1[144];
  uint64_t v29 = *((void *)v1 + 19);
  uint64_t v28 = *((void *)v1 + 20);
  uint64_t v26 = *((void *)v1 + 21);
  uint64_t v27 = *((void *)v1 + 22);
  uint64_t v25 = *((void *)v1 + 23);
  long long v19 = *((_OWORD *)v1 + 12);
  uint64_t v20 = *((void *)v1 + 26);
  uint64_t v24 = *((void *)v1 + 27);
  uint64_t v23 = *((void *)v1 + 28);
  uint64_t v22 = *((void *)v1 + 29);
  uint64_t v21 = *((void *)v1 + 30);
  int v10 = *((_DWORD *)v1 + 66);
  int v16 = v1[272];
  uint64_t v18 = *((void *)v1 + 31);
  uint64_t v17 = *((unsigned int *)v1 + 67);
  int v15 = v1[273];
  __swift_project_boxed_opaque_existential_2Tm(a1, a1[3]);
  sub_249A11538();
  sub_249AEE468();
  LOBYTE(v46) = v57;
  *((void *)&v46 + 1) = v44;
  uint64_t v47 = v7;
  uint64_t v48 = v8;
  LOBYTE(v49) = v9;
  BYTE1(v49) = v43;
  uint64_t v50 = v42;
  uint64_t v51 = v41;
  char v58 = 0;
  sub_2498AE9D8();
  uint64_t v11 = v45;
  sub_249AEDF08();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  long long v46 = v40;
  uint64_t v47 = v39;
  uint64_t v48 = v38;
  uint64_t v49 = v37;
  LOBYTE(v50) = v36;
  uint64_t v51 = v35;
  uint64_t v52 = v34;
  char v53 = v33;
  uint64_t v54 = v32;
  uint64_t v55 = v31;
  char v56 = v30;
  char v58 = 1;
  sub_249A1158C();
  sub_249AEDF08();
  LOBYTE(v46) = 2;
  sub_249AEDEE8();
  LOBYTE(v46) = 3;
  sub_249AEDEE8();
  LOBYTE(v46) = 4;
  sub_249AEDE58();
  *(void *)&long long v46 = v25;
  char v58 = 5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0198);
  sub_2499456D4(&qword_2696E01A0);
  sub_249AEDEA8();
  long long v46 = v19;
  uint64_t v47 = v20;
  uint64_t v48 = v24;
  uint64_t v49 = v23;
  uint64_t v50 = v22;
  uint64_t v51 = v21;
  char v58 = 6;
  sub_249AEDEA8();
  *(void *)&long long v46 = v18;
  char v58 = 7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF30);
  sub_249A115E0(&qword_2696DDF38, (void (*)(void))sub_24989D190);
  sub_249AEDF08();
  LOBYTE(v46) = 8;
  sub_249AEDED8();
  LOBYTE(v46) = 9;
  sub_249AEDED8();
  LODWORD(v46) = v10;
  char v58 = 10;
  uint64_t v45 = v3;
  sub_249AEDF08();
  LOBYTE(v46) = 11;
  char v58 = v16;
  sub_249AEDE88();
  LOBYTE(v46) = v15;
  char v58 = 12;
  sub_249A1165C();
  uint64_t v12 = v45;
  sub_249AEDF08();
  return (*(uint64_t (**)(void, uint64_t))(v4 + 8))(0, v12);
}

uint64_t MeasurementLabelConfiguration.hashValue.getter()
{
  sub_249AEE338();
  MeasurementLabelConfiguration.hash(into:)((uint64_t)v1);
  return sub_249AEE388();
}

uint64_t MeasurementLabelConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3850);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v108 = 1;
  uint64_t v9 = a1[3];
  int v57 = a1;
  __swift_project_boxed_opaque_existential_2Tm(a1, v9);
  sub_249A11538();
  sub_249AEE428();
  if (v2)
  {
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    uint64_t v114 = 0;
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v57);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_24989CF3C(v58, v59, v60);
  }
  else
  {
    uint64_t v56 = v6;
    uint64_t v42 = a2;
    LOBYTE(v64[0]) = 0;
    sub_2498AEAE0();
    sub_249AEDE08();
    int v41 = v65;
    uint64_t v40 = v66;
    uint64_t v11 = v68;
    int v12 = v69;
    int v13 = BYTE1(v69);
    uint64_t v14 = v70;
    uint64_t v54 = v67;
    uint64_t v55 = v71;
    LOBYTE(v64[0]) = 1;
    sub_249A116B0();
    sub_249AEDE08();
    int v35 = v13;
    int v36 = v12;
    uint64_t v37 = v14;
    long long v46 = v67;
    uint64_t v47 = v66;
    uint64_t v48 = v68;
    uint64_t v44 = v65;
    uint64_t v45 = v69;
    int v49 = v70;
    uint64_t v50 = v71;
    uint64_t v51 = v72;
    int v52 = v73;
    int v15 = v74;
    uint64_t v38 = v75;
    int v39 = v76;
    LOBYTE(v65) = 2;
    uint64_t v16 = sub_249AEDDE8();
    char v53 = v15;
    uint64_t v17 = v16;
    LOBYTE(v65) = 3;
    uint64_t v18 = sub_249AEDDE8();
    LOBYTE(v65) = 4;
    uint64_t v34 = sub_249AEDD58();
    uint64_t v114 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E0198);
    LOBYTE(v64[0]) = 5;
    sub_2499456D4(&qword_2696E01B0);
    sub_249AEDDA8();
    uint64_t v20 = v65;
    LOBYTE(v64[0]) = 6;
    sub_249AEDDA8();
    uint64_t v58 = v65;
    uint64_t v59 = v66;
    uint64_t v60 = v67;
    uint64_t v61 = v68;
    uint64_t v62 = v69;
    uint64_t v63 = v70;
    uint64_t v21 = v71;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696DDF30);
    LOBYTE(v64[0]) = 7;
    sub_249A115E0(&qword_2696DDF58, (void (*)(void))sub_24989D2E8);
    sub_249AEDE08();
    uint64_t v43 = v65;
    LOBYTE(v65) = 8;
    sub_249AEDDD8();
    unsigned int v23 = v22;
    LOBYTE(v65) = 9;
    sub_249AEDDD8();
    unsigned int v25 = v24;
    LOBYTE(v64[0]) = 10;
    __swift_instantiateConcreteTypeFromMangledName(&qword_2696E3860);
    sub_249A11704();
    sub_249AEDDA8();
    if (BYTE4(v65)) {
      float v26 = 0.0;
    }
    else {
      LODWORD(v26) = v65;
    }
    LOBYTE(v65) = 11;
    unint64_t v33 = sub_249AEDD88();
    uint64_t v32 = HIDWORD(v33) & 1;
    char v108 = BYTE4(v33) & 1;
    char v106 = 12;
    sub_249A11760();
    sub_249AEDE08();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v8, v5);
    LOBYTE(v64[34]) = v32;
    LODWORD(v56) = v107;
    LOBYTE(v64[0]) = v41;
    uint64_t v27 = v54;
    v64[1] = v40;
    v64[2] = v54;
    v64[3] = v11;
    LOBYTE(v64[4]) = v36;
    BYTE1(v64[4]) = v35;
    v64[5] = v37;
    v64[6] = v55;
    uint64_t v29 = v44;
    uint64_t v28 = v45;
    v64[7] = v44;
    v64[8] = v47;
    v64[9] = v46;
    v64[10] = v48;
    v64[11] = v45;
    LOBYTE(v64[12]) = v49;
    v64[13] = v50;
    v64[14] = v51;
    LOBYTE(v64[15]) = v52;
    v64[16] = v53;
    v64[17] = v38;
    LOBYTE(v64[18]) = v39;
    v64[19] = v17;
    v64[20] = v18;
    v64[21] = v34;
    v64[22] = v114;
    v64[23] = v20;
    v64[24] = v58;
    v64[25] = v59;
    v64[26] = v60;
    v64[27] = v61;
    v64[28] = v62;
    v64[29] = v63;
    v64[30] = v21;
    uint64_t v31 = v21;
    v64[31] = v43;
    v64[32] = __PAIR64__(v25, v23);
    v64[33] = __PAIR64__(v33, LODWORD(v26));
    int v30 = v33;
    BYTE1(v64[34]) = v107;
    memcpy(v42, v64, 0x112uLL);
    sub_24994514C((uint64_t)v64);
    __swift_destroy_boxed_opaque_existential_2Tm((uint64_t)v57);
    LOBYTE(v65) = v41;
    uint64_t v66 = v40;
    long long v67 = v27;
    LOBYTE(v69) = v36;
    BYTE1(v69) = v35;
    *(_DWORD *)((char *)&v65 + 1) = v113[0];
    HIDWORD(v65) = *(_DWORD *)((char *)v113 + 3);
    *(_DWORD *)((char *)&v69 + 2) = *(_DWORD *)&v111[7];
    HIWORD(v69) = v112;
    uint64_t v68 = v11;
    uint64_t v70 = v37;
    uint64_t v71 = v55;
    uint64_t v72 = v29;
    uint64_t v73 = v47;
    char v74 = v46;
    uint64_t v75 = v48;
    uint64_t v76 = v28;
    char v77 = v49;
    *(_DWORD *)uint64_t v78 = *(_DWORD *)v111;
    *(_DWORD *)&v78[3] = *(_DWORD *)&v111[3];
    uint64_t v79 = v50;
    uint64_t v80 = v51;
    char v81 = v52;
    *(_DWORD *)uint64_t v82 = *(_DWORD *)v110;
    *(_DWORD *)&v82[3] = *(_DWORD *)&v110[3];
    uint64_t v83 = v53;
    uint64_t v84 = v38;
    char v85 = v39;
    *(_DWORD *)&v86[3] = *(_DWORD *)&v109[3];
    *(_DWORD *)uint64_t v86 = *(_DWORD *)v109;
    uint64_t v87 = v17;
    uint64_t v88 = v18;
    uint64_t v89 = v34;
    uint64_t v90 = v114;
    uint64_t v91 = v20;
    uint64_t v92 = v58;
    uint64_t v93 = v59;
    char v94 = v60;
    uint64_t v95 = v61;
    uint64_t v96 = v62;
    uint64_t v97 = v63;
    uint64_t v98 = v31;
    uint64_t v99 = v43;
    unsigned int v100 = v23;
    unsigned int v101 = v25;
    float v102 = v26;
    int v103 = v30;
    char v104 = v108;
    char v105 = v56;
    return sub_249945284((uint64_t)&v65);
  }
}

uint64_t sub_249A10900(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 248);
  unint64_t v5 = sub_2498F0D0C(MEMORY[0x263F8EE78]);
  void v8[2] = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_249897C68(v5, (void (*)(uint64_t *__return_ptr, uint64_t *, void *))sub_24989FB78, (uint64_t)v8, v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)(v1 + 248) = v6;
  }
  return result;
}